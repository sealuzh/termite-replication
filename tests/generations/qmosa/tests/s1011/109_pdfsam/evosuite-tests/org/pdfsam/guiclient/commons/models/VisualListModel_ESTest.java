/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 11:11:11 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.Graphics;
import java.awt.GridBagLayout;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.AdjustmentListener;
import java.awt.event.ContainerEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.WindowStateListener;
import java.awt.image.ByteLookupTable;
import java.awt.image.LookupOp;
import java.awt.image.renderable.ParameterBlock;
import java.time.Month;
import java.time.temporal.Temporal;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLayeredPane;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JSpinner;
import javax.swing.JViewport;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.plaf.metal.MetalRootPaneUI;
import javax.swing.plaf.multi.MultiSliderUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 288;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      hashtable3.put(sunHints_Key1, "com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey");
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashtable3.put(sunHints_Key1, "wh/d6");
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable4 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      BiFunction<Object, String, String> biFunction0 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , anyString());
      hashtable2.compute(sunHints_Key3, biFunction0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable4);
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 287
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 114;
      int int1 = 6;
      boolean boolean0 = false;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, stack0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, (Object) null);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "].", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"].\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)127;
      byteArray0[3] = (byte) (-73);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      AWTEventMulticaster.remove(hierarchyBoundsListener3, hierarchyBoundsListener3);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener2);
      AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", (ParameterBlock) null, (RenderingHints) null);
      // Undeclared exception!
      try { 
        visualListModel1.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.596910116635168
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      stack0.add((VisualPageListItem) null);
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Consumer<VisualPageListItem> consumer0 = (Consumer<VisualPageListItem>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      visualListModel0.getListDataListeners();
      int[] intArray0 = new int[8];
      intArray0[0] = 61;
      intArray0[1] = Integer.MIN_VALUE;
      intArray0[2] = (-1023);
      intArray0[3] = 1;
      intArray0[4] = 0;
      intArray0[5] = 16;
      intArray0[6] = (-1407);
      intArray0[7] = (-1602);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.getElements();
      visualListModel1.subList(1, 754, true);
      visualListModel0.addElementAt(visualPageListItemArray0[3], 631);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1319110746122196
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.max((-2135), 13);
      Integer.compare((-2135), (-2135));
      stack0.add((VisualPageListItem) null);
      Integer.toUnsignedString((-62));
      stack0.removeElement(integer0);
      int[] intArray0 = new int[6];
      int[] intArray1 = new int[2];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add((VisualPageListItem) null);
      stack1.add((VisualPageListItem) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData((Vector<VisualPageListItem>) stack1);
      int[] intArray0 = new int[3];
      intArray0[0] = 3;
      boolean boolean0 = true;
      visualListModel0.removeElements(intArray0, true);
      stack1.clone();
      stack1.add((VisualPageListItem) null);
      visualListModel0.removeElements((-382), 0, true);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveUpIndex(1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.updateElementAt((-44), (VisualPageListItem) null);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.076104579100767
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-62));
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      stack0.removeAll(linkedHashSet0);
      stack0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      visualListModel1.prependAllElements(stack0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-62);
      intArray0[1] = (-62);
      intArray0[2] = (-62);
      try { 
        visualListModel1.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -61
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3125019625949976
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[7];
      intArray0[1] = 4;
      intArray0[6] = (-3);
      visualListModel0.removeElements(intArray0, true);
      int[] intArray1 = new int[2];
      Stack<Temporal> stack1 = new Stack<Temporal>();
      visualListModel0.removeElements(intArray1, true);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray1, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray1);
      int[] intArray2 = new int[0];
      visualListModel1.rotateAnticlockwiseElements(intArray2);
      visualListModel0.moveDownIndexes(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel2.removeElements(intArray0, true);
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3125019625949976
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[7];
      intArray0[1] = 4;
      intArray0[6] = (-3);
      visualListModel0.removeElements(intArray0, true);
      int[] intArray1 = new int[2];
      Stack<Temporal> stack1 = new Stack<Temporal>();
      visualListModel0.removeElements(intArray1, true);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray1, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray1);
      int[] intArray2 = new int[0];
      visualListModel1.rotateAnticlockwiseElements(intArray2);
      visualListModel0.moveDownIndexes(intArray1);
      stack0.remove((Object) stack1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.rotateClockwiseElements(intArray0);
      visualListModel2.removeElements(intArray0, true);
      assertFalse(visualListModel2.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<Object> stack1 = new Stack<Object>();
      Month month0 = Month.of(5);
      stack1.add((Object) month0);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(stack1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.add(hierarchyBoundsListener2, hierarchyBoundsListener2);
      jComboBox0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashtable1.put(sunHints_Key0, "");
      Hashtable<RenderingHints.Key, Month> hashtable2 = new Hashtable<RenderingHints.Key, Month>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable1);
      visualListModel0.getSize();
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.243951948479806
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      Stack<Temporal> stack1 = new Stack<Temporal>();
      visualListModel0.removeElements(intArray0, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel1.removeElements(intArray0, false);
      visualListModel0.reverseElements(intArray1);
      JViewport jViewport0 = new JViewport();
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = Locale.GERMANY;
      locale1.getDisplayCountry();
      locale0.getDisplayScript(locale1);
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript(locale1);
      JComponent.setDefaultLocale(locale0);
      jViewport0.getViewPosition();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2436941267292405
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.trimToSize();
      stack0.push((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int[] intArray0 = new int[7];
      intArray0[1] = 4;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      intArray0[6] = (-3);
      visualListModel0.removeElements(intArray0, true);
      int[] intArray1 = new int[2];
      Stack<Temporal> stack1 = new Stack<Temporal>();
      visualListModel0.removeElements(1, 1, true);
      visualListModel0.removeElements(intArray1, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "Parsing for [");
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      intArray0[0] = 11;
      stack0.add((VisualPageListItem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")L&%5=A.h");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      System.setCurrentTimeMillis((-1309L));
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7552281225441584
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[5];
      intArray0[0] = 3547;
      intArray0[1] = 3547;
      intArray0[2] = (-1572);
      intArray0[3] = (-2773);
      intArray0[4] = 1453;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)120;
      byteArray0[1] = (byte)12;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray1 = new int[1];
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2218396677739918
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      int int0 = 288;
      intArray1[0] = 288;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      visualListModel0.removeElements(intArray0, true);
      try { 
        visualListModel0.removeElements(intArray1, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 289
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.356273584430276
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-107);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      Stack<Temporal> stack1 = new Stack<Temporal>();
      visualListModel0.removeElements(1, 1, true);
      visualListModel0.removeElements(intArray0, true);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel1.removeElements(intArray0, false);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.reverseElements(intArray1);
      JViewport jViewport0 = new JViewport();
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = Locale.GERMANY;
      locale0.getDisplayScript(locale1);
      locale0.getUnicodeLocaleAttributes();
      locale0.getDisplayScript(locale1);
      JComponent.setDefaultLocale(locale0);
      jViewport0.getViewPosition();
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.757637858307174
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      int int0 = (-62);
      visualListModel0.addElementAt((VisualPageListItem) null, (-62));
      int[] intArray0 = new int[1];
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8434947109635105
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      stack0.removeAll(list0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.prependAllElements(stack0);
      int[] intArray0 = new int[3];
      linkedHashSet0.add("org.pdfsam.guiclient.commons.models.VisualListModel");
      vector0.trimToSize();
      intArray0[0] = 1;
      intArray0[1] = 350;
      linkedHashSet0.add("");
      intArray0[2] = 350;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(intArray0, true);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeElementAt(1, true);
      System.setCurrentTimeMillis(350);
      // Undeclared exception!
      try { 
        visualListModel1.removeElementAt((-478), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndex(1);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      visualListModel0.updateElementAt((-44), (VisualPageListItem) null);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      System.setCurrentTimeMillis(288);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)106;
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      JSpinner jSpinner0 = new JSpinner();
      JComponent jComponent0 = jSpinner0.getEditor();
      MultiSliderUI multiSliderUI0 = new MultiSliderUI();
      jComponent0.requestFocus(false);
      // Undeclared exception!
      try { 
        multiSliderUI0.getMinimumSize(jSpinner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int[] intArray1 = new int[1];
      intArray1[0] = 288;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.moveDownIndexes(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>(288);
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashtable3.put(sunHints_Key1, "whd6");
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable4 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      hashtable1.put(sunHints_Key7, "$)gr|d0");
      Hashtable<RenderingHints.Key, String> hashtable5 = new Hashtable<RenderingHints.Key, String>();
      hashtable5.put(sunHints_Key1, "whd6");
      Boolean boolean0 = new Boolean("$)gr|d0");
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 288
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bc");
      stack0.setSize(2467);
      stack0.remove((Object) null);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8053415898278653
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int[] intArray1 = new int[1];
      intArray1[0] = 288;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.moveDownIndexes(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      hashtable2.put(sunHints_Key1, "");
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashtable2.put(sunHints_Key1, "whd6");
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      hashtable1.put(sunHints_Key7, "$)gr|d0");
      Hashtable<RenderingHints.Key, String> hashtable4 = new Hashtable<RenderingHints.Key, String>();
      hashtable4.put(sunHints_Key1, "whd6");
      Boolean boolean0 = new Boolean("$)gr|d0");
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      stack0.add((VisualPageListItem) null);
      intArray0[0] = 288;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 288
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3450363141108999
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      System.setCurrentTimeMillis(288);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)106;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, mouseMotionListener0);
      DefaultCaret defaultCaret3 = new DefaultCaret();
      MouseMotionListener mouseMotionListener2 = AWTEventMulticaster.remove((MouseMotionListener) defaultCaret3, mouseMotionListener0);
      MouseMotionListener mouseMotionListener3 = AWTEventMulticaster.add(mouseMotionListener1, mouseMotionListener2);
      MouseMotionListener mouseMotionListener4 = AWTEventMulticaster.add(mouseMotionListener3, mouseMotionListener0);
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, mouseMotionListener4);
      MouseMotionListener mouseMotionListener5 = AWTEventMulticaster.add(mouseMotionListener3, mouseMotionListener0);
      AWTEventMulticaster.add(mouseMotionListener3, mouseMotionListener5);
      DefaultCaret defaultCaret4 = new DefaultCaret();
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, mouseMotionListener3);
      AWTEventMulticaster.add(mouseMotionListener0, mouseMotionListener2);
      DefaultCaret defaultCaret5 = new DefaultCaret();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      stack0.parallelStream();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      intArray0[0] = 288;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      hashtable3.put(sunHints_Key1, "com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey");
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = Locale.forLanguageTag("com.lowagie.text.pdf.PdfGraphics2D$HyperLinkKey");
      locale1.getUnicodeLocaleKeys();
      locale1.getDisplayCountry();
      locale0.getDisplayScript(locale1);
      locale0.getUnicodeLocaleAttributes();
      locale1.getDisplayScript(locale0);
      JComponent.setDefaultLocale(locale0);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 288
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7242986702781118
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[5];
      intArray0[0] = 3547;
      intArray0[1] = 1953;
      intArray0[2] = (-1572);
      intArray0[3] = (-2773);
      intArray0[4] = 1453;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray1 = new int[1];
      visualListModel0.moveUpIndexes(intArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bc");
      stack0.remove((Object) null);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.237597426368687
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2719);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel1.setData(visualPageListItemArray0);
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2719
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.665051708997462
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-115);
      byteArray0[2] = (byte)15;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualPageListItem visualPageListItem0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte) (-115);
      intArray0[1] = (int) (byte)15;
      intArray0[2] = (int) (byte) (-115);
      intArray0[3] = (int) (byte) (-128);
      intArray0[4] = (int) (byte) (-115);
      visualListModel0.moveUpIndexes(intArray0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      int[] intArray2 = new int[0];
      Stack<Temporal> stack1 = new Stack<Temporal>();
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3331130256755443
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(9, (VisualPageListItem) null);
      visualListModel0.getSize();
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel1.prependAllElements(stack0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[9];
      stack0.add((VisualPageListItem) null);
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      stack0.add(visualPageListItemArray0[0]);
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualPageListItemArray0[7] = null;
      visualPageListItemArray0[8] = null;
      visualListModel0.setData(visualPageListItemArray0);
      stack0.add(visualPageListItemArray0[5]);
      visualListModel1.elementChanged(visualPageListItemArray0[7]);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      assertEquals(12, visualListModel0.getSize());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int[] intArray1 = new int[1];
      intArray1[0] = 288;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      System.setCurrentTimeMillis((-1309L));
      JPasswordField jPasswordField0 = new JPasswordField("3Lq7", 288);
      JScrollPane jScrollPane0 = new JScrollPane(jPasswordField0);
      JViewport jViewport0 = jScrollPane0.getViewport();
      Point point0 = jViewport0.getViewPosition();
      point0.move(288, (-2166));
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[5];
      intArray0[0] = 3547;
      stack0.add((VisualPageListItem) null);
      intArray0[1] = 1953;
      intArray0[2] = (-1572);
      stack0.add((VisualPageListItem) null);
      intArray0[3] = (-2773);
      intArray0[4] = 1453;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray1 = new int[1];
      visualListModel0.moveUpIndexes(intArray1);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "bc");
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      intArray0[0] = 11;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 11
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ListDataListener[] listDataListenerArray0 = visualListModel0.getListDataListeners();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Object object0 = new Object();
      Object object1 = new Object();
      Object[][] objectArray0 = new Object[6][1];
      stack0.add((VisualPageListItem) null);
      objectArray0[0] = (Object[]) listDataListenerArray0;
      Object[] objectArray1 = new Object[10];
      objectArray1[0] = (Object) null;
      objectArray1[1] = object0;
      objectArray1[2] = object0;
      objectArray1[3] = object1;
      objectArray1[4] = (Object) visualListModel0;
      objectArray1[5] = (Object) visualListModel0;
      objectArray1[7] = (Object) visualListModel0;
      objectArray1[8] = (Object) null;
      objectArray0[1] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[0]);
      Stack<Object> stack1 = new Stack<Object>();
      stack1.add(object0);
      Object object2 = new Object();
      stack1.add(objectArray1[8]);
      stack1.add(object2);
      Object object3 = new Object();
      stack1.add((Object) stack0);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      objectArray1[1] = (Object) null;
      visualListModel0.setData(visualPageListItemArray0);
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      SunHints.LCDContrastKey sunHints_LCDContrastKey1 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      hashtable2.put(sunHints_LCDContrastKey1, "UFd/l0Isbc4fJ3.l");
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      hashtable0.put(sunHints_LCDContrastKey0, "UFd/l0Isbc4fJ3.l");
      hashtable2.compute(sunHints_LCDContrastKey0, biFunction0);
      BiFunction<RenderingHints.Key, Object, String> biFunction1 = (BiFunction<RenderingHints.Key, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable2.replaceAll(biFunction1);
      visualListModel0.clearData();
      System.setCurrentTimeMillis(2057L);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      UnaryOperator.identity();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      basicComboBoxEditor0.addActionListener(defaultEditorKit_PasteAction0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.selectAll();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      metalComboBoxEditor0.setItem(metalComboBoxEditor_UIResource0);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      metalComboBoxEditor1.removeActionListener(defaultEditorKit_PasteAction0);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.getEditorComponent();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource2 = new BasicComboBoxEditor.UIResource();
      Vector<Object> vector0 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector1 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(vector1);
      jComboBox0.getGraphics();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      jComboBox1.paint((Graphics) null);
      basicComboBoxEditor_UIResource2.selectAll();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource3 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor_UIResource1.removeActionListener(defaultEditorKit_PasteAction0);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector2 = visualListModel1.data;
      visualListModel0.setData(vector2);
      assertEquals(10, vector2.capacity());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      String string0 = "UFd/l0Isbc4fJ3.l";
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      hashtable1.put(sunHints_LCDContrastKey0, "UFd/l0Isbc4fJ3.l");
      SunHints.LCDContrastKey sunHints_LCDContrastKey1 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      BiFunction<RenderingHints.Key, Object, String> biFunction0 = (BiFunction<RenderingHints.Key, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable2.replaceAll(biFunction0);
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      // Undeclared exception!
      try { 
        hashtable2.put(sunHints_LCDContrastKey1, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Function<RenderingHints.Key, String> function0 = (Function<RenderingHints.Key, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any(java.awt.RenderingHints.Key.class));
      hashtable0.computeIfAbsent(sunHints_LCDContrastKey0, function0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey1 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable4 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      // Undeclared exception!
      try { 
        hashtable2.compute(sunHints_Key1, (BiFunction<? super RenderingHints.Key, ? super String, ? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 65535;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.getValidElements();
      visualListModel0.addAllElements(65535, (Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      System.setCurrentTimeMillis(65535);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.getModel();
      jComboBox0.setFocusable(true);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>();
      gridBagLayout0.minimumLayoutSize(jComboBox1);
      jComboBox0.getKeyListeners();
      jComboBox0.getFocusTraversalPolicy();
      gridBagLayout0.addLayoutComponent("", (Component) jComboBox0);
      gridBagLayout0.addLayoutComponent("jc%l$V3Eu[q", (Component) jComboBox1);
      jComboBox0.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      BasicComboBoxEditor basicComboBoxEditor1 = new BasicComboBoxEditor();
      basicComboBoxEditor1.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      metalComboBoxEditor0.addActionListener(jComboBox0);
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      FocusEvent focusEvent0 = new FocusEvent(jComboBox0, 10, true, jComboBox1);
      metalComboBoxEditor1.focusLost(focusEvent0);
      metalComboBoxEditor1.getEditorComponent();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.addActionListener(jComboBox1);
      basicComboBoxEditor_UIResource0.selectAll();
      VisualListModel visualListModel0 = new VisualListModel();
      System.setCurrentTimeMillis((-65L));
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster1);
      DefaultCaret defaultCaret1 = (DefaultCaret)AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster2, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster3, (MouseMotionListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster0, (FocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster4, (MouseMotionListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster5, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster7, (MouseMotionListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      DefaultCaret defaultCaret3 = new DefaultCaret();
      DefaultCaret defaultCaret4 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster4, (MouseMotionListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster4, (AdjustmentListener) aWTEventMulticaster8);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      BiFunction<Object, String, String> biFunction0 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , anyString());
      hashtable0.compute(sunHints_Key1, biFunction0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      int[] intArray0 = new int[0];
      jComboBox0.setFocusable(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(288);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Month month0 = Month.JUNE;
      vector0.add((Object) null);
      vector0.add((Object) "r(d");
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-192));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-3548), (-3548), false);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1199, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1199
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      UnaryOperator<VisualPageListItem> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      stack0.replaceAll(unaryOperator0);
      stack0.parallelStream();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      intArray0[0] = 11;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 11
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.updateElementAt(9, (VisualPageListItem) null);
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster1, (MouseMotionListener) aWTEventMulticaster0);
      JPanel jPanel0 = new JPanel();
      ContainerEvent containerEvent0 = new ContainerEvent(jPanel0, 9, jPanel0);
      containerEvent0.paramString();
      // Undeclared exception!
      try { 
        aWTEventMulticaster1.componentRemoved(containerEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.text.DefaultCaret cannot be cast to java.awt.event.ContainerListener
         //
         verifyException("java.awt.AWTEventMulticaster", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) stack0);
      int int1 = 1793;
      Hashtable<RenderingHints.Key, String> hashtable0 = null;
      try {
        hashtable0 = new Hashtable<RenderingHints.Key, String>((-2247), 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2247
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      parameterBlock0.getParameters();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.101425591110677
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-337), false);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 288;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      visualListModel0.moveDownIndexes(intArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      hashtable0.putIfAbsent(sunHints_LCDContrastKey0, "y9&9s%");
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      // Undeclared exception!
      try { 
        hashtable0.put(sunHints_LCDContrastKey0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(2136, (VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) stack0);
      Boolean boolean0 = Boolean.FALSE;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1188, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1188
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Month month0 = Month.JUNE;
      Month.values();
      vector0.add((Object) month0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.appendAllElements((Collection<VisualPageListItem>) null);
      visualListModel0.getValidElements();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int[] intArray0 = new int[0];
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      gridBagLayout0.columnWidths = intArray0;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      integerArray0[6] = integer6;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      Integer.max((int) integerArray0[4], 4);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      Integer.toUnsignedString(261);
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt((int) integerArray0[2]);
      assertNull(object0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-1));
      visualListModel0.subList(117, 117);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex((-1));
      assertFalse(visualListModel1.equals((Object)visualListModel0));
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      int[] intArray0 = new int[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      System.setCurrentTimeMillis(288);
      visualListModel0.reverseElements(intArray0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)106;
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      JSpinner jSpinner0 = new JSpinner();
      JComponent jComponent0 = jSpinner0.getEditor();
      jComponent0.isFocusable();
      jComponent0.getTopLevelAncestor();
      MultiSliderUI multiSliderUI0 = new MultiSliderUI();
      jComponent0.requestFocus(false);
      // Undeclared exception!
      try { 
        multiSliderUI0.getMinimumSize(jSpinner0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      gridBagLayout0.rowHeights = null;
      jComboBox0.enableInputMethods(false);
      jComboBox0.setFocusable(false);
      jComboBox0.getFocusTraversalPolicy();
      jComboBox0.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      basicComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      metalComboBoxEditor1.addActionListener(jComboBox0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.selectAll();
      metalComboBoxEditor1.getEditorComponent();
      BasicComboBoxEditor basicComboBoxEditor1 = new BasicComboBoxEditor();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      basicComboBoxEditor0.addActionListener(jComboBox0);
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor2 = new MetalComboBoxEditor();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      metalComboBoxEditor2.removeActionListener(defaultEditorKit_InsertTabAction0);
      metalComboBoxEditor2.getEditorComponent();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.selectAll();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.selectAll();
      basicComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.enableInputMethods(false);
      jComboBox0.setFocusable(false);
      jComboBox0.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      basicComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.selectAll();
      metalComboBoxEditor_UIResource0.addActionListener(jComboBox0);
      metalComboBoxEditor0.getEditorComponent();
      BasicComboBoxEditor basicComboBoxEditor1 = new BasicComboBoxEditor();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      basicComboBoxEditor0.addActionListener(jComboBox0);
      metalComboBoxEditor_UIResource0.getEditorComponent();
      jComboBox0.repaint(0L, 1088, (-580), 1088, 1088);
      metalComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      metalComboBoxEditor1.removeActionListener(defaultEditorKit_InsertTabAction0);
      basicComboBoxEditor1.getEditorComponent();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.selectAll();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.selectAll();
      basicComboBoxEditor_UIResource1.removeActionListener(jComboBox0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      assertTrue(vector0.isEmpty());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.enableInputMethods(false);
      jComboBox0.setFocusable(false);
      jComboBox0.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      basicComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.selectAll();
      metalComboBoxEditor1.getEditorComponent();
      BasicComboBoxEditor basicComboBoxEditor1 = new BasicComboBoxEditor();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      basicComboBoxEditor0.addActionListener(jComboBox0);
      metalComboBoxEditor_UIResource0.getEditorComponent();
      jComboBox0.repaint(0L, 1088, (-580), 1088, 1088);
      metalComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor2 = new MetalComboBoxEditor();
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      basicComboBoxEditor1.getEditorComponent();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor_UIResource0.removeActionListener(jComboBox0);
      VisualListModel visualListModel0 = new VisualListModel();
      System.setCurrentTimeMillis((-580));
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.prependAllElements(stack0);
      int int1 = (-2509);
      visualListModel0.addAllElements((-2509), (Collection<VisualPageListItem>) stack0);
      int int2 = 1793;
      Hashtable<RenderingHints.Key, String> hashtable0 = null;
      try {
        hashtable0 = new Hashtable<RenderingHints.Key, String>((-2247), 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2247
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.removeElement(visualListModel0);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      Boolean boolean0 = Boolean.FALSE;
      visualListModel0.data = (Vector<VisualPageListItem>) stack0;
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove((MouseMotionListener) null, mouseMotionListener0);
      AWTEventMulticaster.remove(mouseMotionListener0, (MouseMotionListener) null);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) null);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      MouseMotionListener mouseMotionListener2 = AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener3 = AWTEventMulticaster.add((MouseMotionListener) null, mouseMotionListener1);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      DefaultCaret defaultCaret3 = new DefaultCaret();
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret3, (MouseMotionListener) defaultCaret1);
      DefaultCaret defaultCaret4 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, mouseMotionListener1);
      DefaultCaret defaultCaret5 = new DefaultCaret();
      MouseMotionListener mouseMotionListener4 = AWTEventMulticaster.add(mouseMotionListener2, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener5 = AWTEventMulticaster.add((MouseMotionListener) null, mouseMotionListener4);
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret4, mouseMotionListener3);
      DefaultCaret defaultCaret6 = new DefaultCaret();
      AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, mouseMotionListener1);
      AWTEventMulticaster.add(mouseMotionListener5, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret7 = new DefaultCaret();
      assertEquals(0.0, defaultCaret7.getCenterX(), 0.01);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(281, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(281) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, " r8b");
      visualListModel0.moveUpIndex(20000);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      String string0 = "UFd/l0Isbc4fJ3.l";
      hashtable0.put(sunHints_LCDContrastKey0, "3s");
      SunHints.LCDContrastKey sunHints_LCDContrastKey1 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      BiFunction<Object, String, String> biFunction0 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , anyString());
      // Undeclared exception!
      try { 
        hashtable0.replaceAll(biFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ParameterBlock parameterBlock0 = new ParameterBlock();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      int[] intArray0 = new int[0];
      gridBagLayout0.rowHeights = intArray0;
      jComboBox0.setFocusable(true);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(defaultComboBoxModel0);
      gridBagLayout0.minimumLayoutSize(jComboBox1);
      jComboBox0.getKeyListeners();
      jComboBox0.getFocusTraversalPolicy();
      gridBagLayout0.addLayoutComponent("", (Component) jComboBox0);
      gridBagLayout0.addLayoutComponent("", (Component) jComboBox1);
      jComboBox0.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      BasicComboBoxEditor basicComboBoxEditor1 = new BasicComboBoxEditor();
      basicComboBoxEditor1.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      metalComboBoxEditor0.addActionListener(jComboBox0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      BasicComboBoxEditor basicComboBoxEditor2 = new BasicComboBoxEditor();
      basicComboBoxEditor2.setItem(metalComboBoxEditor_UIResource0);
      metalComboBoxEditor_UIResource0.getEditorComponent();
      metalComboBoxEditor0.getItem();
      jComboBox1.getAlignmentX();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      metalComboBoxEditor0.getEditorComponent();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.selectAll();
      basicComboBoxEditor_UIResource0.selectAll();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(gridBagLayout0.rowHeights, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-1), (-1), false);
      assertNull(collection0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      byte[][] byteArray0 = new byte[3][6];
      byte[] byteArray1 = new byte[6];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      BiFunction<Object, String, String> biFunction0 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , anyString());
      hashtable0.compute(sunHints_Key0, biFunction0);
      byteArray1[1] = (byte)27;
      byteArray1[3] = (byte) (-73);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      BiFunction<String, Object, String> biFunction1 = (BiFunction<String, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(sunHints_Key1, "og4j.pperties", biFunction1);
      byteArray1[4] = (byte)65;
      byteArray1[5] = (byte)14;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(1180, byteArray0);
      byteLookupTable0.lookupPixel(intArray0, intArray0);
      Hashtable<RenderingHints.Key, Month> hashtable1 = new Hashtable<RenderingHints.Key, Month>();
      Function<Object, Month> function0 = (Function<Object, Month>) mock(Function.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(function0).apply(any());
      hashtable1.computeIfAbsent(sunHints_Key1, function0);
      RenderingHints renderingHints0 = new RenderingHints(hashtable1);
      Month month0 = Month.DECEMBER;
      hashtable1.put(sunHints_Key0, month0);
      hashtable0.put(sunHints_Key1, "og4j.pperties");
      RenderingHints renderingHints1 = new RenderingHints(hashtable0);
      LookupOp lookupOp0 = new LookupOp(byteLookupTable0, renderingHints0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      assertEquals(0, hashMap0.size());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      BiFunction<RenderingHints.Key, String, String> biFunction0 = (BiFunction<RenderingHints.Key, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.replaceAll(biFunction0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>();
      hashtable1.putIfAbsent(sunHints_LCDContrastKey0, "");
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      hashtable0.put(sunHints_LCDContrastKey0, "+Xy)5qbm/HGK'O^Zd");
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Hashtable<RenderingHints.Key, String> hashtable4 = new Hashtable<RenderingHints.Key, String>();
      hashtable2.put(sunHints_Key1, "Q(;8xctCt&");
      Hashtable<RenderingHints.Key, Month> hashtable5 = new Hashtable<RenderingHints.Key, Month>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable3);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1506, 8, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.310106597280475
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[1] = (-1708);
      intArray0[2] = (-1708);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      intArray0[4] = (-2197);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.subList(0, 0, true);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.moveDownIndexes(intArray0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      JMenu jMenu0 = new JMenu(styledEditorKit_BoldAction0);
      JMenuItem jMenuItem0 = jMenu0.add("");
      gridBagLayout0.addLayoutComponent("J5]", (Component) jMenuItem0);
      Stack<Integer> stack0 = new Stack<Integer>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      boolean boolean0 = jComboBox0.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      BasicComboBoxEditor basicComboBoxEditor1 = new BasicComboBoxEditor();
      basicComboBoxEditor1.getEditorComponent();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      Boolean boolean1 = new Boolean("5V-.;lS");
      assertTrue(boolean1.equals((Object)boolean0));
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      int[] intArray0 = new int[0];
      gridBagLayout0.rowHeights = intArray0;
      jComboBox0.setFocusable(true);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      gridBagLayout0.minimumLayoutSize(jComboBox0);
      jComboBox0.getKeyListeners();
      String string0 = "] with valuxe=[";
      gridBagLayout0.addLayoutComponent("] with valuxe=[", (Component) jComboBox0);
      gridBagLayout0.addLayoutComponent("] with valuxe=[", (Component) jComboBox0);
      jComboBox0.getAutoscrolls();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      Component component0 = metalComboBoxEditor0.getEditorComponent();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      metalComboBoxEditor1.getEditorComponent();
      metalComboBoxEditor1.addActionListener(jComboBox0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      FocusEvent focusEvent0 = new FocusEvent(component0, 12, false);
      metalComboBoxEditor_UIResource1.focusLost(focusEvent0);
      metalComboBoxEditor_UIResource1.setItem(metalComboBoxEditor_UIResource0);
      metalComboBoxEditor_UIResource1.getEditorComponent();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(3866, (-461), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3866) > toIndex(-461)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[3] = integer3;
      Integer integer4 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      integerArray0[6] = integer6;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      visualListModel0.removeListDataListener(jComboBox0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(65535, (-2002));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(65535) > toIndex(-2002)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-107);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)71;
      byteArray0[7] = (byte)7;
      byteArray0[8] = (byte) (-14);
      ByteLookupTable byteLookupTable0 = new ByteLookupTable(0, byteArray0);
      ByteLookupTable byteLookupTable1 = new ByteLookupTable(3034, byteArray0);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        byteLookupTable1.lookupPixel(byteArray0, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // src[0]-offset is less than zero
         //
         verifyException("java.awt.image.ByteLookupTable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(3);
      Hashtable<RenderingHints.Key, String> hashtable0 = null;
      try {
        hashtable0 = new Hashtable<RenderingHints.Key, String>(65535, (-1219.897F));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Load: -1219.897
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = Integer.getInteger("2XH?!-fvtW00", integer0);
      integerArray0[1] = integer1;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[3] = integer3;
      Integer integer4 = new Integer((int) integerArray0[1]);
      Integer.min((-2462), (int) integerArray0[2]);
      integerArray0[4] = integer4;
      Integer.toUnsignedString((int) integerArray0[2]);
      Integer.toUnsignedLong(96);
      Integer integer5 = Integer.getInteger("2XH?!-fvtW00", (int) integerArray0[3]);
      Integer.sum((int) integerArray0[1], (int) integerArray0[1]);
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      Integer.compare((int) integerArray0[2], 2413);
      Integer.max((int) integer5, (-2462));
      Integer.max((-2079), (int) integerArray0[1]);
      Integer.max((-2518), (int) integerArray0[1]);
      Point point0 = new Point((-2079), (int) integerArray0[4]);
      Integer.max((int) integerArray0[0], (-2149));
      point0.move(2413, (int) integerArray0[2]);
      point0.move((int) integerArray0[0], 114);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      int[] intArray0 = new int[10];
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      ComboBoxModel<Integer> comboBoxModel0 = jComboBox0.getModel();
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(comboBoxModel0);
      jComboBox1.grabFocus();
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      gridBagLayout0.addLayoutComponent("-Z2L~QDZq/Z3P9", (Component) jComboBox1);
      gridBagLayout0.preferredLayoutSize(jComboBox0);
      gridBagLayout0.columnWidths = intArray0;
      jComboBox1.removeNotify();
      jComboBox0.setBounds(640, 640, 90, 90);
      jComboBox1.getAutoscrolls();
      BasicComboBoxEditor basicComboBoxEditor0 = new BasicComboBoxEditor();
      FocusEvent focusEvent0 = new FocusEvent(jComboBox1, 90, false);
      basicComboBoxEditor0.focusLost(focusEvent0);
      basicComboBoxEditor0.getEditorComponent();
      Month month0 = Month.JANUARY;
      Month month1 = month0.plus(10);
      focusEvent0.setSource(month1);
      StyledEditorKit.FontFamilyAction styledEditorKit_FontFamilyAction0 = new StyledEditorKit.FontFamilyAction("-Z2L~QDZq/Z3P9", "Osrcg[tKFKgpmT");
      basicComboBoxEditor0.focusGained(focusEvent0);
      jComboBox0.getPropertyChangeListeners();
      basicComboBoxEditor0.addActionListener(styledEditorKit_FontFamilyAction0);
      basicComboBoxEditor0.selectAll();
      basicComboBoxEditor0.removeActionListener(jComboBox0);
      jComboBox1.getPopupMenuListeners();
      jComboBox1.setEditor(basicComboBoxEditor0);
      jComboBox1.firePopupMenuWillBecomeVisible();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(640, 3093, false);
      assertEquals(0, visualListModel0.getSize());
  }
}
