/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 11:54:04 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.286673477735361
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("a+NL");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[9];
      charArray0[6] = '-';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte) (-102);
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-28);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-441), (byte)92, (byte) (-28));
      javaCharStream1.BeginToken();
      char char0 = javaCharStream1.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.3702107619017942
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.readChar();
      javaCharStream0.backup(1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 4062);
      byteArrayInputStream1.mark(4062);
      char char0 = javaCharStream0.BeginToken();
      javaCharStream0.backup(92);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 1);
      javaCharStream0.readChar();
      char char1 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream1.available());
      assertFalse(char1 == char0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      sequenceInputStream0.read((byte[]) null, (-6051), 92);
      sequenceInputStream0.skip((-1613L));
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 3145, 518, 518);
      javaCharStream0.Done();
      javaCharStream0.tokenBegin = 558;
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(518);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.388765480802861
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      pushbackInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 781, (-1), 3564);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader0 = new StringReader(string0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 0, 68);
      javaCharStream1.ExpandBuff(false);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 781, 68, 3);
      javaCharStream2.FillBuff();
      javaCharStream2.FillBuff();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.519427947332007
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArrayInputStream0.read(byteArray1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.mark((byte)92);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.backup(1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 4062);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(92);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 1);
      javaCharStream1.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(4062, 4080);
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals(4062, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.9983077343878204
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 81, 1587, 92);
      javaCharStream0.prevCharIsCR = true;
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('Z', char0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a+Nt");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.inBuf = 4110;
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-21);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)24;
      byteArray0[3] = (byte)19;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte) (-99);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      javaCharStream0.backup(1343);
      byteArrayInputStream1.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 804);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(2754, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-46);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (-764), 11, 6);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals('\u000B', char0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.5593956288973683
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(55, (byte) (-49));
      javaCharStream0.bufsize = 0;
      StringReader stringReader1 = new StringReader("b");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(3135L);
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 3385);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FvFxb");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1777, 1777, 1777);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FvFxb");
      javaCharStream0.backup(98);
      javaCharStream0.Done();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.tokenBegin = 784;
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.ReInit((Reader) null, 1777, 1777);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9305117329982588
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 3242, 1599);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sequenceInputStream0.read();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      pushbackInputStream0.skip(1599);
      pushbackInputStream0.unread(byteArray0);
      pushbackInputStream0.skip(0L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (-2073), 4055, 9);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.496422925586261
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.backup(1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream1, 4062);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.BeginToken();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream2, (byte)92);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream2);
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, 74, (byte)92, 74);
      javaCharStream3.BeginToken();
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream4 = new JavaCharStream(byteArrayInputStream0, (byte)92, 0, 1868);
      assertEquals(0, javaCharStream4.getBeginColumn());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)11;
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)11, 92, (-3364));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals('\f', char0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.6424241879127504
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.ReInit((Reader) stringReader0, (-1), (-1), 1);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      javaCharStream0.readChar();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.1914928341202216
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 92, (-1), 518);
      javaCharStream1.tokenBegin = 324;
      javaCharStream1.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.360103147907453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.getBeginColumn());
      
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)92;
      byteArray1[1] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte)92;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte)92;
      byteArray1[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArrayInputStream1.read(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream2, (-348), (byte)92, (byte)92);
      char char0 = javaCharStream1.BeginToken();
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3300185960211162
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      StringReader stringReader0 = new StringReader("Q#0`;gi}sGDC");
      char[] charArray0 = new char[6];
      charArray0[0] = 'y';
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[3] = 'f';
      charArray0[4] = 'b';
      charArray0[5] = 'y';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(4078, (-1649));
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-1649), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip(1);
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader(":");
      char[] charArray1 = new char[7];
      charArray1[0] = 'y';
      stringReader2.reset();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5280883009539779
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-18);
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1226), (byte)1);
      javaCharStream0.tokenBegin = (int) (byte)1;
      javaCharStream0.maxNextCharInd = (int) (byte) (-18);
      StringReader stringReader0 = new StringReader("cnXa");
      StringReader stringReader1 = new StringReader("cnXa");
      stringReader1.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream0.adjustBeginLineColumn((-3789), (-1698));
      assertEquals((-1698), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      int int0 = 2251;
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 882, 882, 2251);
      javaCharStream0.Done();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7170900591681
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(55, (byte) (-49));
      javaCharStream0.bufsize = 0;
      StringReader stringReader1 = new StringReader("b");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(3135L);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      assertEquals(0, javaCharStream0.getBeginLine());
      
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      javaCharStream1.BeginToken();
      int int0 = javaCharStream1.getLine();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)103;
      byteArray0[2] = (byte)103;
      byteArray0[3] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 597, 23, (byte)103);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 90);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (-2077), (byte)9, 5);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("oa+Nt");
      boolean boolean0 = JavaCharStream.staticFlag;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "oa+Nt");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1226), (byte)1);
      String string0 = "cnXa";
      javaCharStream0.tokenBegin = (int) (byte)1;
      javaCharStream0.maxNextCharInd = (int) (byte)0;
      StringReader stringReader0 = new StringReader("cnXa");
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader(")7|$h3'y5pMrP4crVZM");
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("R^KDbL[8!I");
      stringReader0.skip(2);
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader("8*b)");
      stringReader2.read(charArray0);
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4434606788422253
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-18);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "!+");
      StringReader stringReader0 = new StringReader("!+");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-18), (-1816));
      javaCharStream0.GetImage();
      JavaCharStream.hexval('7');
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('!', char0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JavaCharStream.hexval('b');
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-18);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6361704886873736
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1230), (byte)1);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)1);
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0);
      javaCharStream2.GetImage();
      javaCharStream2.ReInit((InputStream) pushbackInputStream0, (int) (byte)0, 4079, 3583);
      JavaCharStream javaCharStream3 = new JavaCharStream(pushbackInputStream0);
      javaCharStream3.BeginToken();
      int int0 = javaCharStream3.getBeginColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-120), (-1226), (byte)1);
      javaCharStream0.tokenBegin = (int) (byte)1;
      javaCharStream0.maxNextCharInd = (int) (byte)0;
      StringReader stringReader0 = new StringReader("cnXa");
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.buffer = null;
      stringReader0.skip(0L);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.6537988427675807
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = '2';
      charArray0[2] = '9';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1057), (-1334));
      StringReader stringReader1 = new StringReader("a+Nt");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (-1), (-894), 1);
      javaCharStream1.getBeginLine();
      javaCharStream1.AdjustBuffSize();
      stringReader1.skip((-1L));
      javaCharStream0.GetImage();
      javaCharStream1.ExpandBuff(false);
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.337022341027697
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*R79+GOKNTV'Q/c");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4491, 731, 4491);
      stringReader0.mark(0);
      javaCharStream0.BeginToken();
      stringReader0.read();
      javaCharStream0.tokenBegin = 1;
      javaCharStream0.UpdateLineColumn('S');
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.adjustBeginLineColumn(79, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.0343946195677223
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1226), (byte)1);
      javaCharStream0.tokenBegin = (int) (byte)1;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 489, 2956, (byte)0);
      StringReader stringReader0 = new StringReader("cnXa");
      javaCharStream1.AdjustBuffSize();
      String string0 = javaCharStream0.GetImage();
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip(1371L);
      String string1 = javaCharStream1.GetImage();
      javaCharStream1.ExpandBuff(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'f';
      charArray0[2] = 'b';
      charArray0[3] = '2';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      char[] charArray1 = new char[2];
      charArray1[0] = ']';
      charArray1[1] = ']';
      stringReader0.read(charArray1);
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9305117329982587
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N[%r+:NW");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3p)oOQt'sKV1BZXg`");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "bZxVp(c");
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.4859155013346631
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JavaCharStream.hexval('b');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Btr~y4 LxFHdd\"~f&");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream.hexval('a');
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oe");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oe");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_U");
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Btr~y4 LxFHdd\"~f&");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[6];
      charArray0[1] = 'b';
      charArray0[2] = 'b';
      charArray0[3] = ']';
      charArray0[4] = '>';
      charArray0[5] = '$';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      StringReader stringReader1 = new StringReader("b");
      char[] charArray0 = new char[8];
      charArray0[0] = 'y';
      charArray0[1] = '\"';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = 'y';
      charArray0[5] = 'y';
      charArray0[6] = 'y';
      charArray0[7] = 'y';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader(" column ");
      stringReader0.skip(1);
      stringReader2.markSupported();
      StringReader stringReader3 = new StringReader(";ZPPYylsi9OBL8O<e");
      stringReader2.read(charArray0);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.3010386369482903
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.read(byteArray0);
      javaCharStream0.buffer = null;
      javaCharStream0.backup((byte)0);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 4095);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      stringReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      charArray0[3] = ']';
      charArray0[4] = ']';
      charArray0[5] = ']';
      charArray0[6] = ']';
      charArray0[7] = ']';
      stringReader0.read(charArray0);
      JavaCharStream.hexval('d');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0554236108018156
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("r3rgl(Y(Te]y[");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 3092);
      stringReader0.mark(3092);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-114);
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte) (-3);
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte) (-3);
      byteArray0[8] = (byte) (-3);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1), 311);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (byte) (-3), (-1), 104);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, (-1), (byte) (-3));
      char char0 = javaCharStream2.readChar();
      assertEquals((-1), javaCharStream2.getBeginLine());
      assertEquals('3', char0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oe");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      StringReader stringReader1 = new StringReader("a+Nt");
      char[] charArray0 = new char[8];
      charArray0[0] = '#';
      charArray0[1] = 'h';
      charArray0[2] = 'h';
      charArray0[3] = 'h';
      charArray0[4] = 'h';
      charArray0[5] = 'h';
      charArray0[6] = 'h';
      charArray0[7] = 'h';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("a+NL");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[9];
      charArray0[6] = '-';
      charArray0[1] = '2';
      charArray0[2] = '9';
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-766), (byte)7);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(dataInputStream0, 77);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(bufferedInputStream0, 359);
      byteArrayInputStream0.mark(77);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1);
      pushbackInputStream0.available();
      byteArrayInputStream0.reset();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(pipedInputStream0, 1);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-120), (-1226), (byte)1);
      assertEquals((-1), javaCharStream0.bufpos);
      
      StringReader stringReader0 = new StringReader("`V~2:t405+I)hx");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("8*b)");
      char[] charArray0 = new char[8];
      charArray0[0] = 'E';
      charArray0[1] = '\\';
      charArray0[2] = 'q';
      charArray0[3] = '*';
      charArray0[4] = '<';
      charArray0[5] = 'B';
      charArray0[6] = '+';
      charArray0[7] = 'q';
      stringReader1.read(charArray0);
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      stringReader0.markSupported();
      char[] charArray0 = new char[6];
      charArray0[0] = ']';
      charArray0[1] = ']';
      stringReader0.read(charArray0);
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yz+3t6d{");
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.6009480752511345
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-33), 406, 0);
      StringReader stringReader0 = new StringReader("YC..uq0QeJtYn%{hX");
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      javaCharStream0.ReInit((Reader) stringReader0, 918, 2562, 603);
      javaCharStream0.GetImage();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0, 918, 406, 603);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("R^KDbL[8!I");
      stringReader1.skip(4);
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("R^KDbL[8!I");
      stringReader2.read(charArray0);
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.9081521465285831
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-120), (-1226), (byte)1);
      javaCharStream0.ReadByte();
      javaCharStream0.ReadByte();
      javaCharStream0.maxNextCharInd = (int) (byte)0;
      StringReader stringReader0 = new StringReader("cnXa");
      byteArrayInputStream0.read(byteArray0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = 'Z';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5483765071165805
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StringReader stringReader0 = new StringReader("-r");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 58, 3092, 3036);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3036, 58);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.getBeginLine();
      char[] charArray0 = new char[8];
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'N';
      charArray0[4] = 'r';
      charArray0[6] = 'x';
      charArray0[7] = 'r';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.mark(73);
      stringReader0.mark(73);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[1];
      stringReader1.markSupported();
      charArray0[0] = 'v';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      StringReader stringReader3 = new StringReader("");
      stringReader0.read(charArray0);
      StringReader stringReader4 = new StringReader("Invalid escape character at line ");
      stringReader4.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(0);
      javaCharStream0.getColumn();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3843480385267566
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.backup(1);
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pipedInputStream0, 1793);
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(1, javaCharStream0.getBeginLine());
      assertEquals(8, int0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oe");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^f!-/nX !G@w'G");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.3533634513247454
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = (-1226);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, (-1226), (byte)1);
      String string0 = "cnXa";
      javaCharStream0.tokenBegin = (int) (byte)1;
      javaCharStream0.maxNextCharInd = (int) (byte) (-23);
      StringReader stringReader0 = new StringReader("cnXa");
      int int1 = 6098;
      javaCharStream0.ReInit((Reader) stringReader0, 6098, (-1), 1);
      javaCharStream0.maxNextCharInd = (int) (byte) (-23);
      javaCharStream0.column = (-1226);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";c*");
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6012267291362168
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("r3rgl(Y(Te]y[");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3036, 0, 7);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(66, 3092);
      StringReader stringReader1 = new StringReader("r3rgl(Y(Te]y[");
      int int0 = javaCharStream0.getBeginLine();
      char[] charArray0 = new char[6];
      charArray0[1] = '3';
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = '3';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int1 = JavaCharStream.hexval('F');
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oe");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^f!-/nX !G@w'G");
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.6120172700343436
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M,J9:*?e.Wr\"ra/mPA");
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1359, 1359);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.nextCharBuf = charArray0;
      byteArrayInputStream0.markSupported();
      javaCharStream0.backup(0);
      javaCharStream0.AdjustBuffSize();
      byteArrayInputStream0.reset();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)12);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1821879627463847
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.inBuf = (-1);
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-1), javaCharStream0.getBeginLine());
      assertEquals('+', char0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte) (-3);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      int int0 = (-1);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1), (byte) (-49));
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.6400411981909584
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(55, (byte) (-49));
      javaCharStream0.bufsize = 0;
      StringReader stringReader1 = new StringReader("b");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(3135L);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9305117329982587
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      stringReader0.markSupported();
      char[] charArray0 = new char[5];
      charArray0[0] = ']';
      charArray0[1] = ']';
      JavaCharStream.hexval('1');
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 1, (-1382));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      JavaCharStream.hexval('C');
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.8808421307236456
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "a>\"Nlt";
      StringReader stringReader0 = new StringReader("a>\"Nlt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1288), 11, 11);
      javaCharStream0.adjustBeginLineColumn((-1390), (-1860));
      StringReader stringReader1 = new StringReader("a>\"Nlt");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip((-1860));
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("R^KDbL[8!I");
      stringReader1.skip(4);
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("8*b)");
      stringReader2.read(charArray0);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.04461051760409
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip(1);
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader("");
      char[] charArray1 = new char[7];
      charArray1[0] = 'y';
      charArray1[1] = 'y';
      charArray1[2] = 'y';
      charArray1[3] = 'y';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3);
      javaCharStream0.adjustBeginLineColumn(2048, 2877);
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Btr~y4 LxFHdd\"~f&");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.6136940964716731
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
      
      StringReader stringReader0 = new StringReader("E`Qm-QV7rXqBXYm=7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)9, 1);
      assertEquals((-1), javaCharStream0.bufpos);
      
      javaCharStream0.prevCharIsLF = true;
      int int1 = JavaCharStream.hexval('B');
      assertEquals(11, int1);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-33);
      StringReader stringReader0 = new StringReader("G&))o]{");
      char[] charArray0 = new char[8];
      charArray0[0] = 'f';
      charArray0[1] = '\"';
      charArray0[2] = 'f';
      charArray0[3] = 'b';
      charArray0[4] = '2';
      charArray0[5] = 'b';
      charArray0[6] = 'f';
      charArray0[7] = 'b';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Btr~y4 LxFHdd\"~f&");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      char[] charArray0 = new char[4];
      StringReader stringReader0 = new StringReader("8*b)");
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.634581919605672
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3036, 121, 4052);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3036, 121);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(0);
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(74);
      javaCharStream0.adjustBeginLineColumn(121, 121);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetSuffix(3036);
      assertEquals(121, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5483765071165805
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 99, 0, 99);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(1526, 11);
      StringReader stringReader1 = new StringReader("l");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader1.skip(0);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " column ");
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.getEndLine());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.956303340593985
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JavaCharStream.hexval('A');
      StringReader stringReader0 = new StringReader("-r");
      stringReader0.read();
      int int0 = 3036;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 58, 3092, 3036);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(3036, 58);
      javaCharStream0.ReInit((Reader) stringReader0);
      StringReader stringReader1 = new StringReader("");
      javaCharStream0.getBeginLine();
      char[] charArray0 = new char[8];
      javaCharStream0.GetImage();
      charArray0[0] = 'A';
      charArray0[1] = 'r';
      charArray0[2] = 'r';
      charArray0[3] = 'N';
      charArray0[4] = 'r';
      charArray0[5] = 'A';
      charArray0[6] = 'x';
      charArray0[7] = 'r';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip('A');
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.9776864074866398
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte)75;
      byteArray0[3] = (byte) (-26);
      pipedOutputStream0.write(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader1 = new StringReader("Z=M  ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      StringReader stringReader2 = new StringReader("*n");
      StringReader stringReader3 = new StringReader("*n");
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals(2, javaCharStream0.bufpos);
      assertEquals('M', char0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a>\"Nlt");
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip((byte)17);
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[1];
      charArray0[0] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader(".");
      stringReader2.skip(0L);
      stringReader2.markSupported();
      StringReader stringReader3 = new StringReader("");
      stringReader3.read(charArray0);
      try { 
        JavaCharStream.hexval(' ');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = 'Y';
      charArray0[2] = '\"';
      stringReader0.read(charArray0);
      charArray0[3] = 'U';
      charArray0[4] = '6';
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte)19;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (byte)86, 68, 3799);
      javaCharStream1.ExpandBuff(false);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip(1);
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader(":");
      char[] charArray1 = new char[7];
      charArray1[0] = 'y';
      stringReader2.reset();
      charArray1[1] = 'y';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.inBuf = 1;
      char char0 = javaCharStream0.ReadByte();
      assertEquals('j', char0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      StringReader stringReader0 = new StringReader("");
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.reset();
      stringReader1.reset();
      stringReader1.skip((-1L));
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("");
      char[] charArray1 = new char[6];
      charArray1[0] = ']';
      charArray0[11] = ']';
      charArray1[2] = ']';
      charArray1[3] = ']';
      charArray1[4] = ']';
      charArray1[5] = 'f';
      stringReader3.read(charArray1);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|r3rgl(Y(Te]y[");
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      StringReader stringReader1 = new StringReader("|r3rgl(Y(Te]y[");
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      stringReader0.skip(2626L);
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip((-1));
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader(":");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray1 = new char[7];
      charArray1[0] = 'y';
      stringReader2.reset();
      charArray1[1] = 'y';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.ReInit((Reader) stringReader0, 4096, 45, 45);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, 4096, (-441), (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.367420033319239
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[0] = (byte) (-33);
      byteArray0[0] = (byte) (-120);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginLine();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.AdjustBuffSize();
      stringReader0.skip((-2147L));
      javaCharStream1.GetImage();
      javaCharStream0.GetImage();
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 1387, 3261, (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream2.GetSuffix(9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = 'h';
      charArray0[3] = 'h';
      charArray0[4] = 'h';
      charArray0[5] = 'h';
      charArray0[6] = 'E';
      charArray0[7] = 'h';
      charArray0[8] = 'h';
      stringReader1.read(charArray0);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'f';
      charArray0[2] = 'b';
      charArray0[3] = '2';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[2];
      javaCharStream0.nextCharInd = 4;
      intArray0[0] = (int) '2';
      intArray0[1] = (int) '+';
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("yz+3t6d{");
      char[] charArray0 = new char[4];
      charArray0[0] = 'y';
      charArray0[1] = 'f';
      charArray0[2] = 'b';
      charArray0[3] = '2';
      stringReader0.read(charArray0);
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(0, 4);
      javaCharStream0.adjustBeginLineColumn(0, 4);
      assertEquals(4, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, 597, 0, (byte)97);
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(2560);
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals("\t", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.401316645200569
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream1.skip(1325L);
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.bufpos = (int) (byte)92;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream3, 1580, 81, (-555));
      javaCharStream1.BeginToken();
      String string0 = javaCharStream1.GetImage();
      assertEquals(0, byteArrayInputStream3.available());
      assertEquals("\\", string0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip(1);
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader("");
      char[] charArray1 = new char[7];
      charArray1[0] = 'y';
      charArray1[1] = 'y';
      charArray1[2] = 'y';
      charArray1[3] = 'y';
      charArray1[4] = 'h';
      charArray1[5] = 'y';
      charArray1[6] = 'y';
      stringReader0.read(charArray1);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.610803501031909
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(53, (byte) (-49));
      javaCharStream0.bufsize = 0;
      StringReader stringReader1 = new StringReader("b");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(3135L);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 92, 597, 518);
      char char0 = javaCharStream1.ReadByte();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals('\\', char0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.296140897031551
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_E1v?");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-33);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-33), (byte) (-33), 72);
      javaCharStream0.BeginToken();
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-33), int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+NL");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char[] charArray0 = new char[9];
      charArray0[6] = '-';
      charArray0[1] = '2';
      charArray0[2] = '9';
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)51;
      byteArray0[1] = (byte)51;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)51, 4085, (byte) (-1));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('3', char0);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.7921985549013488
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 6);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 81, 1587, 92);
      javaCharStream0.maxNextCharInd = 92;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("z,B>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsCR = false;
      stringReader0.read();
      stringReader0.ready();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.ReInit((Reader) stringReader0, 15, 224, 15);
      javaCharStream0.ReInit((Reader) stringReader0, (-1), 15, 224);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte) (-54);
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)9;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.ReInit((Reader) stringReader0, 122, 15, 15);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.5270144959004037
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1);
      javaCharStream0.backup(1);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)92;
      byteArray1[2] = (byte)92;
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte)92;
      byteArray1[5] = (byte)92;
      byteArray1[6] = (byte)92;
      byteArray1[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-2294), (byte)0, (-2294));
      javaCharStream1.BeginToken();
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream1.getColumn();
      assertEquals((-2294), javaCharStream1.getBeginLine());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.743800418023317
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      byteArrayInputStream0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream1, 92, 597, 518);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream1, (int) (byte)92, (-575));
      javaCharStream1.tokenBegin = 324;
      javaCharStream0.BeginToken();
      javaCharStream0.getColumn();
      // Undeclared exception!
      try { 
        javaCharStream1.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 'y';
      charArray0[2] = 'y';
      charArray0[3] = 'y';
      charArray0[4] = ']';
      charArray0[5] = 'y';
      charArray0[6] = ']';
      charArray0[7] = 'y';
      charArray0[8] = ']';
      StringReader stringReader1 = new StringReader("3gDl(Y(Te]y[");
      stringReader0.skip(1310L);
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader("");
      stringReader2.read(charArray0);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      MockFile mockFile0 = new MockFile((File) null, "|r3rgl(Y(Te]y[");
      File file0 = MockFile.createTempFile("|r3rgl(Y(Te]y[", "|r3rgl(Y(Te]y[", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-242), (-2062), (-2062));
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("|r3rgl(Y(Te]y[");
      stringReader0.skip((-2062));
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-2062));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "", 0, 0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-62);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-107);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-8);
      byteArray0[5] = (byte) (-97);
      byteArray0[7] = (byte) (-18);
      byteArray0[8] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      stringReader0.read(charBuffer0);
      stringReader0.reset();
      stringReader0.read();
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.skip(0L);
      stringReader0.ready();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.0069724918931837
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn(398, 1404);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = (-82);
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)29;
      byteArray0[0] = (byte) (-1);
      byteArray0[2] = (byte)29;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, (-3823), 1297);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream2, (byte)0, (-3823), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a+Nt");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[2];
      charArray0[0] = '9';
      charArray0[1] = '9';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("8!d}]5|)EGDM:&wy");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c](F~");
      int int0 = 7244;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7244, 7244, 7244);
      javaCharStream0.nextCharInd = 7244;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.195213208019688
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream3, (byte)92, 13, 4084);
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 83, 83, 83);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8133224558281074
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = (-1339);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, 0, (-1339));
      javaCharStream0.adjustBeginLineColumn(1, (-1339));
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, 1);
      int int1 = (-726);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte)36;
      // Undeclared exception!
      try { 
        pipedInputStream0.read(byteArray0, (-1339), 2450);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.9775005220767727
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.read();
      stringReader0.mark(73);
      stringReader0.mark(73);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[1];
      stringReader1.markSupported();
      charArray0[0] = 'v';
      stringReader1.read(charArray0);
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      StringReader stringReader3 = new StringReader("");
      stringReader0.read(charArray0);
      StringReader stringReader4 = new StringReader("Invalid escape character at line ");
      stringReader4.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      stringReader2.skip(1069L);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rx");
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      charArray0[1] = ']';
      charArray0[2] = ']';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "|r3rgl(Y(Te]y[");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[B}GKgmy5+-");
      char[] charArray0 = new char[4];
      stringReader0.read();
      charArray0[0] = '\u0081';
      charArray0[1] = '1';
      charArray0[3] = '`';
      charArray0[3] = 'b';
      stringReader0.read(charArray0, 0, 2);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 575, 0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      stringReader0.mark(2447);
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      StringReader stringReader1 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1995), 1);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" k(qpv");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 2, 2, (-2380));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[9];
      charArray0[6] = '-';
      charArray0[1] = '2';
      charArray0[2] = '9';
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4096, (-1), 0);
      String string0 = javaCharStream0.GetImage();
      assertEquals("", string0);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.5507659933770346
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(55, (byte) (-49));
      StringReader stringReader1 = new StringReader("b");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('a');
      stringReader0.skip(3135L);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("XeYaq[dOR)n&7B~b}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-820), 85);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn(' ');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.2547515551542903
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("a+Nt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("a+Nt");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 0, 12);
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      
      char char0 = javaCharStream1.BeginToken();
      assertEquals('a', char0);
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      pipedInputStream0.close();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 6);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[1];
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray1);
      StringReader stringReader0 = new StringReader("zlt/R6Uu^]qZ'%)Q7@");
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.039395843744082
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)97;
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1587, (-1));
      javaCharStream0.getBeginLine();
      javaCharStream0.bufsize = 1587;
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)97, (-2), (byte)9);
      javaCharStream1.ReInit((InputStream) pipedInputStream0);
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      boolean boolean0 = JavaCharStream.staticFlag;
      byteArrayInputStream0.read(byteArray0);
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0, 92, (-2), 2372);
      try { 
        javaCharStream2.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      charArray0[0] = 't';
      charArray0[1] = 'j';
      charArray0[2] = 'q';
      charArray0[3] = 'P';
      charArray0[4] = 'U';
      charArray0[5] = '`';
      charArray0[6] = 'r';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 107, 0);
      char[] charArray0 = new char[9];
      javaCharStream0.backup(107);
      charArray0[0] = '';
      charArray0[1] = 'Y';
      charArray0[2] = '\"';
      charArray0[3] = 'U';
      charArray0[4] = '';
      charArray0[5] = '`';
      charArray0[6] = 'z';
      charArray0[7] = '3';
      charArray0[8] = 'A';
      stringReader0.read(charArray0, 0, 0);
      javaCharStream0.backup(107);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 1);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sequenceInputStream0.skip((-1613L));
      sequenceInputStream0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1), (-1058));
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      String string0 = javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M,J9:*?e.Wr\"ra/mPA");
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)0;
      StringReader stringReader1 = new StringReader("M,J9:*?e.Wr\"ra/mPA");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 6);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)90;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0, 92);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream1, 13, 0, 92);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('Z', char0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      charArray0[0] = 'y';
      charArray0[1] = 'y';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip(1);
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader(":");
      char[] charArray1 = new char[7];
      charArray1[0] = 'y';
      stringReader2.reset();
      charArray1[1] = 'y';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2);
      javaCharStream0.ReInit((Reader) stringReader3, 1231, (-955), 4096);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=2.728774459919781
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte) (-49);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 0, 0);
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(55, (byte) (-49));
      StringReader stringReader1 = new StringReader("b");
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      stringReader0.skip(3135L);
      javaCharStream0.GetImage();
      javaCharStream0.ReInit((Reader) stringReader0, 1967, 17);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Oe");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream.hexval('c');
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      JavaCharStream.hexval('b');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-18);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[1] = (byte) (-39);
      byteArray0[3] = (byte)19;
      char[] charArray0 = new char[5];
      charArray0[0] = 'b';
      charArray0[3] = 'b';
      charArray0[4] = 'b';
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      char[] charArray0 = new char[21];
      charArray0[0] = ']';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "3gDl(Y(Te]y[");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<PushbackInputStream> enumeration1 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream1);
      pushbackInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)97;
      byteArray0[7] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream1, (byte)8, (byte)97, 3990);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream1.available());
      assertEquals('a', char0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("M,J9:*?e.Wr\"ra/mPA");
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      stringReader0.ready();
      stringReader1.skip(2);
      stringReader2.markSupported();
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2, 2);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.4986122886681095
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)92;
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      charArray0[2] = 'Z';
      charArray0[3] = ']';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("d.<B0%Up])?JPBcQ'");
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      StringReader stringReader3 = new StringReader("");
      stringReader3.ready();
      stringReader1.skip(545L);
      stringReader2.markSupported();
      StringReader stringReader4 = new StringReader("<");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3704, (-1183));
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, 'Z', 'Z');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-10);
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-96);
      byteArray0[8] = (byte) (-10);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)115, 5);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, dataInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, (-1929), 10, 1906);
      char[] charArray0 = javaCharStream0.GetSuffix(13);
      assertEquals(13, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte) (-31);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-31), (byte) (-120));
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-1), (byte)1);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StringReader stringReader0 = new StringReader("b");
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("j{qTA-t,HF?DKP\"g}");
      stringReader2.ready();
      stringReader2.skip(1);
      stringReader0.markSupported();
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
