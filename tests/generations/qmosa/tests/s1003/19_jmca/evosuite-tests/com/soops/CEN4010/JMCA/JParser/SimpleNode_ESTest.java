/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 06:35:43 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6248603116943127
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString();
      simpleNode0.dump("ForInit", stringWriter0);
      simpleNode0.setIdentifier("ForInit");
      simpleNode0.dump("{", stringWriter0);
      StringReader stringReader0 = new StringReader("Z{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser("ForInit");
      StringReader stringReader1 = new StringReader("+=");
      simpleNode0.identifiers = null;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1);
      // Undeclared exception!
      try { 
        simpleNode0.toString("+=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 81;
      SimpleNode simpleNode0 = new SimpleNode(81);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      simpleNode0.identifiers = null;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "KrVR";
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string1 = "*amp";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "KrVR");
      EvoSuiteFile evoSuiteFile2 = null;
      EvoSuiteFile evoSuiteFile3 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile3);
      EvoSuiteFile evoSuiteFile4 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile4);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile4);
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.410513557114838
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier(";");
      simpleNode0.toString();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(1303);
      simpleNode0.dump("*ge", stringWriter2);
      JavaParser javaParser0 = new JavaParser("HnLb8Q}Zl");
      StringReader stringReader0 = new StringReader("7NU$7)<=.vJ2=hlk+");
      try { 
        javaParser0.PreIncrementExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6816102690529531
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      simpleNode0.toString("4)4]Z[|!jp$GdZdII#^");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("4)4]Z[|!jp$GdZdII#^");
      simpleNode0.dump("4)4]Z[|!jp$GdZdII#^Arguments", stringWriter0);
      simpleNode0.dump(";LSP|l_<", stringWriter0);
      simpleNode0.setIdentifier("4");
      simpleNode0.dump(" 7;]", stringWriter0);
      simpleNode0.dump("4)4]Z[|!jp$GdZdII#^", stringWriter0);
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.dump(" 7;]", stringWriter0);
      simpleNode0.setIdentifier("yx!/My7M{{M|*>");
      simpleNode0.setIdentifier("g\"b) ");
      simpleNode0.dump("Was expecting:", stringWriter0);
      assertEquals("<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n</Arguments>\n<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n</Arguments>\n<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n  <identifier>4</identifier>\n</Arguments>\n<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n  <identifier>4</identifier>\n</Arguments>\n<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n  <identifier>4</identifier>\n  <identifier>*rshft</identifier>\n</Arguments>\n<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n  <identifier>4</identifier>\n  <identifier>*rshft</identifier>\n</Arguments>\n<Arguments>\n  <identifier>4)4]Z[|!jp$GdZdII#^</identifier>\n  <identifier>4</identifier>\n  <identifier>*rshft</identifier>\n  <identifier>yx!/My7M{{M|*></identifier>\n  <identifier>g\"b) </identifier>\n</Arguments>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5924028775138872
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString("4)4]Z[|!jp$GdZdII#^");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("  %id~ntnfier>", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-737));
      simpleNode1.dump("<<", stringWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'v';
      charArray0[1] = 'M';
      charArray0[1] = ';';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("4)4]Z[|!jp$GdZdII#^VariableDeclaratorId");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump("*lt", stringWriter0);
      simpleNode1.setIdentifier((String) null);
      simpleNode0.setIdentifier((String) null);
      // Undeclared exception!
      try { 
        simpleNode1.dump("Q@M2h8>0GH&r?eLJx", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(71);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")cMx^CK:E");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)29;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")cMx^CK:E");
      byteArray0[5] = (byte)101;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      simpleNode0.setIdentifier(">");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(">");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "_ggNh_/9'R");
      FileSystemHandling.createFolder(evoSuiteFile1);
      simpleNode0.dump(">", stringWriter0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      MockFile mockFile0 = new MockFile("te");
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(71);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(">");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      char[] charArray0 = new char[5];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")cMx^CK:E");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte)29;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)29;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")cMx^CK:E");
      byteArray0[5] = (byte)101;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      charArray0[1] = 'g';
      charArray0[2] = '\u0000';
      simpleNode0.setIdentifier(">");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(">");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "_ggNh_/9'R");
      FileSystemHandling.createFolder(evoSuiteFile1);
      simpleNode0.dump(">", stringWriter0);
      MockFile mockFile0 = new MockFile("te");
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(81);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "KrVR");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      simpleNode0.setIdentifier("<");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*amz");
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KrVR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("&&", stringWriter0);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KrVR");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.6614769771805253
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(66);
      simpleNode0.toString("4)4]Z[|!jp$GdZdII#^");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("4)4]Z[|!jp$GdZdII#^");
      simpleNode0.dump("4)4]Z[|!jp$GdZdII#^Arguments", stringWriter0);
      simpleNode0.dump(";LSP|l_<", stringWriter0);
      char[] charArray0 = new char[0];
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("4");
      simpleNode0.dump("abstract", stringWriter0);
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.setIdentifier("<");
      simpleNode0.setIdentifier("<=");
      simpleNode0.dump("x`WE|+kw<*#3", stringWriter0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      stringWriter0.close();
      simpleNode0.setIdentifier("=");
      simpleNode0.setIdentifier(">=");
      StringReader stringReader0 = new StringReader("z))AV/_r");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      simpleNode0.setIdentifier("=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "C");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "c{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z))AV/_r");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("=", stringWriter0);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">=");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1165107682127635
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      String string0 = "c{";
      simpleNode0.dump("c{", stringWriter0);
      String string1 = ">>";
      simpleNode0.setIdentifier("{");
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser("c{");
      try { 
        javaParser0.AllocationExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5924028775138872
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(66);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Literal");
      simpleNode0.toString("{");
      simpleNode0.dump("{", stringWriter0);
      simpleNode0.dump("{", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 79);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream((InputStream) null);
      simpleNode0.dump("{Arguments", stringWriter0);
      simpleNode0.setIdentifier("\"iQ:0f)M");
      simpleNode0.dump("|", stringWriter0);
      simpleNode0.dump(">K8AMixKGqCH%zOr*", stringWriter0);
      simpleNode0.setIdentifier(">");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.setIdentifier("&&");
      simpleNode0.dump(">K8AMixKGqCH%zOr*", stringWriter0);
      assertEquals("<Arguments>\n  <identifier>\"iQ:0f)M</identifier>\n</Arguments>\n<Arguments>\n  <identifier>\"iQ:0f)M</identifier>\n</Arguments>\n<Arguments>\n  <identifier>\"iQ:0f)M</identifier>\n  <identifier>*gt</identifier>\n  <identifier>*amp</identifier>\n</Arguments>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5660857389596289
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(81);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "KI");
      stringWriter0.close();
      simpleNode0.setIdentifier("");
      StringReader stringReader0 = new StringReader(" ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      simpleNode0.setIdentifier("");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M");
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile1, "~ Hl");
      FileSystemHandling.appendLineToFile(evoSuiteFile2, (String) null);
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.dump("KI", stringWriter0);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5924028775138872
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.toString("4)4]Z[|!jp$GdZdII#^");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      simpleNode0.setIdentifier("<<");
      simpleNode0.dump("  %id~ntnfier>", stringWriter0);
      SimpleNode simpleNode1 = new SimpleNode((-737));
      simpleNode1.dump("<<", stringWriter0);
      char[] charArray0 = new char[3];
      charArray0[1] = 'v';
      charArray0[1] = 'M';
      charArray0[1] = ';';
      simpleNode0.setIdentifier("4)4]Z[|!jp$GdZdII#^VariableDeclaratorId");
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.dump("*lt", stringWriter0);
      simpleNode1.setIdentifier((String) null);
      simpleNode0.setIdentifier((String) null);
      String string0 = "Q@M2h8>0GH&r\\?eLJx";
      // Undeclared exception!
      try { 
        simpleNode1.dump("Q@M2h8>0GH&r?eLJx", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.900368082936878
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      String string0 = "c{";
      String string1 = ">=";
      simpleNode0.setIdentifier("*");
      simpleNode0.dump("*", stringWriter0);
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser("c{");
      try { 
        javaParser0.AllocationExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3341923457408336
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.toString("_A/q\u0000");
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("_A/q\u0000VariableDeclaratorId", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("_A/q\u0000");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.Expression();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Lexical error at line 1, column 6.  Encountered: <EOF> after : \"\"
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0833306593833463
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.toString("CompilationUnit");
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("G!}^ko/A");
      simpleNode0.toString();
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      simpleNode2.identifiers = arrayList0;
      simpleNode0.toString();
      simpleNode0.jjtSetParent(simpleNode2);
      StringWriter stringWriter0 = new StringWriter(1);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CompilationUnit");
      char[] charArray0 = new char[0];
      simpleNode0.dump("CompilationUnit", stringWriter1);
      stringWriter1.flush();
      SimpleNode simpleNode3 = (SimpleNode)simpleNode0.jjtGetChild(0);
      simpleNode2.identifiers.stream();
      simpleNode3.identifiers = simpleNode2.identifiers;
      simpleNode1.setIdentifier("this");
      simpleNode0.setIdentifier("37;*@X+ouU]O");
      simpleNode0.dump("CompilationUnitCompilationUnit", stringWriter1);
      simpleNode1.toString();
      simpleNode1.jjtAddChild(simpleNode0, 2004);
      SimpleNode simpleNode4 = (SimpleNode)simpleNode0.jjtGetParent();
      Node[] nodeArray0 = new Node[7];
      nodeArray0[0] = (Node) simpleNode2;
      nodeArray0[1] = (Node) simpleNode4;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode1;
      nodeArray0[4] = (Node) simpleNode1;
      nodeArray0[5] = (Node) simpleNode1;
      nodeArray0[6] = (Node) simpleNode0;
      simpleNode4.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-3478));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3478
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.328515191203992
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetChild(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("T=^a@h'Xs*y[+;(", stringWriter0);
      StringReader stringReader0 = new StringReader("T=^a@h'Xs*y[+;(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1510), 0);
      simpleNode0.parent = (Node) simpleNode1;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParser javaParser0 = new JavaParser("bo>=");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      simpleNode0.jjtGetParent();
      try { 
        javaParser0.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5924028775138872
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.toString("{");
      simpleNode0.dump("_A/q\u0000", stringWriter0);
      simpleNode0.setIdentifier("}");
      simpleNode0.setIdentifier(")");
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("[W}8t6E+2K<eVT*>=", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("{");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.450805020083924
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 143);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("*rshft");
      simpleNode0.toString();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter(144);
      // Undeclared exception!
      simpleNode0.dump("MethodDeclaration", stringWriter0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetChild(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("T=^a@h'Xs*y[+;(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1519), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.MoreLexicalActions();
      JavaParser javaParser0 = new JavaParser("?/>=");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      try { 
        javaParser0.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaParser javaParser0 = new JavaParser(">>");
      JavaParser javaParser1 = new JavaParser("7:?\"F6`$,p6e%S^r");
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(254);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 42);
      simpleNode0.jjtGetChild(42);
      assertEquals(43, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0160085311135825
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetChild(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("T=^a@h'Xs*y[+;(", stringWriter0);
      StringReader stringReader0 = new StringReader("T=^a@h'Xs*y[+;(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1519), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      javaParserTokenManager0.lengthOfMatch = 67;
      javaParserTokenManager0.MoreLexicalActions();
      JavaParser javaParser0 = new JavaParser("?/>=");
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0);
      Node node0 = simpleNode1.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-551));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -551
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZbV@9gzQ");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 3825);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      simpleNode0.jjtAddChild(simpleNode1, 88);
      simpleNode0.jjtGetNumChildren();
      int int0 = simpleNode1.jjtGetNumChildren();
      assertEquals(89, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.14839214282331
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(6);
      SimpleNode simpleNode1 = new SimpleNode(6);
      simpleNode0.jjtAddChild(simpleNode1, 6);
      simpleNode0.jjtGetChild(6);
      simpleNode0.jjtGetNumChildren();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("T=^a@h'Xs*y[+;(", stringWriter0);
      StringReader stringReader0 = new StringReader("T=^a@h'Xs*y[+;(");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 7, (-1519), 0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser("?/>=");
      String string0 = "||";
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager0);
      try { 
        javaParser1.FormalParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 7, column -1519.  Encountered: T
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(81);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter(81);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "KrVR");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      simpleNode0.setIdentifier("<");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KrVR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*amz");
      simpleNode0.dump("&&", stringWriter0);
      StringReader stringReader0 = new StringReader("KrVR");
      int int0 = stringReader0.read();
      assertEquals(75, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.4709001279172663
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      simpleNode0.dump("_A/q\u0000", stringWriter0);
      simpleNode0.setIdentifier(":3ch ?");
      simpleNode0.dump("{", stringWriter0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      byte byte0 = (byte) (-110);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-29);
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte) (-110);
      byteArray0[3] = (byte) (-112);
      byteArray0[4] = (byte) (-29);
      byteArray0[5] = (byte) (-112);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((String) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1245);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 95);
      simpleNode1.id = 1245;
      simpleNode0.jjtSetParent(simpleNode1);
      SimpleNode simpleNode2 = new SimpleNode(1245);
      simpleNode0.jjtSetParent(simpleNode2);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(">");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      char[] charArray0 = new char[5];
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")cMx^CK:E");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-89);
      byteArray0[1] = (byte) (-89);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ")cMx^CK:E");
      byteArray0[5] = (byte)101;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      charArray0[1] = 'g';
      charArray0[2] = '\u0000';
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile(">");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "_ggNh_/9'R");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      MockFile mockFile0 = new MockFile("te");
      SimpleNode simpleNode0 = new SimpleNode(Integer.MIN_VALUE);
      // Undeclared exception!
      try { 
        simpleNode0.toString("</");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2147483648
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(44);
      simpleNode0.jjtClose();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)22;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)22;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream((InputStream) null, (byte)22);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(byteArrayInputStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream2);
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter((-2045594394));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaParser javaParser0 = new JavaParser(">>");
      JavaParser javaParser1 = new JavaParser("7:?\"F6`$,p6e%S^r");
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode(42);
      stringReader0.skip(42);
      JavaParser javaParser2 = new JavaParser("7:?\"F6`$,p6e%S^r");
      Node node0 = javaParser2.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-34505881));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "KrVR");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*amz");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "KrVR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KrVR");
      SimpleNode simpleNode0 = new SimpleNode(81);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append('!');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4)]Z[|!jp$GdZdII#^");
      stringWriter0.close();
      StringReader stringReader0 = new StringReader(" ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " ");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "gze$XTv=KD");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4)]Z[|!jp$GdZdII#^");
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((Reader) null);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = '$';
      stringWriter0.write(charArray0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 100);
      simpleNode0.jjtOpen();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("*");
      JavaParser javaParser0 = new JavaParser(">>");
      JavaParser javaParser1 = new JavaParser("7:?\"F6`$,p6e%S^r");
      stringReader0.read();
      SimpleNode simpleNode0 = new SimpleNode((-203));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-1437515815));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*amp");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "*amz");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*amp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Kr'VR");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Kr'VR");
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 6);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1594));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-78);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)12;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 10, (byte) (-1));
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      byteArrayInputStream0.markSupported();
      // Undeclared exception!
      try { 
        simpleNode0.dump("<=", (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
