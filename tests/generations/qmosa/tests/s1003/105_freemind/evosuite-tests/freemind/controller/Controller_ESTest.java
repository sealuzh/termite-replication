/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 13:07:51 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.schememode.SchemeMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.SystemColor;
import java.awt.event.ContainerListener;
import java.util.Properties;
import javax.swing.Action;
import javax.swing.JCheckBox;
import javax.swing.JColorChooser;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JSeparator;
import javax.swing.JSlider;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Element;
import javax.swing.text.PlainDocument;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SchemeMode schemeMode0 = new SchemeMode();
      schemeMode0.getController();
      SchemeMode schemeMode1 = new SchemeMode();
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SystemColor systemColor0 = SystemColor.textInactiveText;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      String string0 = Action.SELECTED_KEY;
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SchemeMode schemeMode0 = new SchemeMode();
      schemeMode0.getController();
      JColorChooser jColorChooser0 = Controller.getCommonJColorChooser();
      assertFalse(jColorChooser0.isFocusTraversalPolicySet());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PlainDocument plainDocument0 = new PlainDocument();
      Properties properties0 = new Properties();
      JComboBox<JCheckBox> jComboBox0 = new JComboBox<JCheckBox>();
      PlainDocument plainDocument1 = new PlainDocument();
      Element[] elementArray0 = plainDocument1.getRootElements();
      plainDocument1.getDefaultRootElement();
      Color color0 = Color.getColor("x5mS\"[ScoK,LH7UE", 12);
      Color.getColor("W[`;uo", 1);
      JSeparator jSeparator0 = new JSeparator();
      ContainerListener[] containerListenerArray0 = jSeparator0.getContainerListeners();
      Object[][] objectArray0 = new Object[8][5];
      objectArray0[0] = (Object[]) elementArray0;
      objectArray0[1] = (Object[]) containerListenerArray0;
      objectArray0[2] = (Object[]) elementArray0;
      objectArray0[3] = (Object[]) elementArray0;
      objectArray0[4] = (Object[]) elementArray0;
      objectArray0[5] = (Object[]) containerListenerArray0;
      objectArray0[6] = (Object[]) containerListenerArray0;
      Object[] objectArray1 = new Object[3];
      objectArray1[0] = (Object) properties0;
      objectArray1[1] = (Object) jComboBox0;
      objectArray1[2] = (Object) plainDocument1;
      objectArray0[7] = objectArray1;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray0[3]);
      JSlider jSlider0 = new JSlider((-2724), 1);
      try { 
        Controller.showCommonJColorChooserDialog(jComboBox0, "W[`;uo", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
