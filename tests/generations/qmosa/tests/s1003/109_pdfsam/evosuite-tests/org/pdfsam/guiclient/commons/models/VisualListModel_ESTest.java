/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 12:28:11 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Dimension2D;
import java.awt.image.renderable.ParameterBlock;
import java.text.DateFormatSymbols;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.KernelJAI;
import javax.media.jai.OperationRegistry;
import javax.media.jai.PlanarImage;
import javax.media.jai.PropertyGenerator;
import javax.media.jai.SnapshotImage;
import javax.media.jai.operator.ErrorDiffusionDescriptor;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.ComboBoxEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JProgressBar;
import javax.swing.event.ListDataListener;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[18];
      Integer integer0 = new Integer((-614));
      integerArray0[0] = integer0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.divideUnsigned((int) integerArray0[0], (-614));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.remainderUnsigned((-999), (-1678));
      Integer integer2 = new Integer((-1678));
      Integer integer3 = new Integer((int) integerArray0[0]);
      Integer integer4 = new Integer((int) integerArray0[0]);
      visualListModel0.addElement((VisualPageListItem) null);
      Integer.sum((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Boolean.valueOf(true);
      Integer.remainderUnsigned((-999), (-614));
      Integer.sum((-614), (int) integerArray0[0]);
      Integer.compareUnsigned((-1544), 782);
      Integer.toUnsignedLong(8);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Integer integer6 = new Integer((int) integerArray0[1]);
      Integer integer7 = new Integer((int) integerArray0[0]);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.moveUpIndex(1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock((Vector<Object>) null);
      Hashtable<RenderingHints.Key, RenderingHints.Key> hashtable0 = new Hashtable<RenderingHints.Key, RenderingHints.Key>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock1, renderingHints0, true);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.renderable.ParameterBlock", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.50283877333723
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.removeListDataListener(jComboBox0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster1, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster1, (KeyListener) aWTEventMulticaster2);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      jComboBox0.addMouseWheelListener((MouseWheelListener) null);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      System.setCurrentTimeMillis((-1091L));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndex(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.373950665988046
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[4];
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray2 = new int[7];
      visualListModel0.moveUpIndexes(intArray2);
      visualListModel0.rotateClockwiseElements(intArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " q6]j).1H*>o9u");
      visualListModel0.addElement((VisualPageListItem) null);
      intArray1[1] = 0;
      visualListModel0.moveDownIndex(0);
      intArray1[3] = 20000;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.391924549260069
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.removeListDataListener(jComboBox0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((WindowListener) null, (WindowListener) null);
      AWTEventMulticaster.remove((WindowListener) null, (WindowListener) null);
      ItemListener itemListener0 = mock(ItemListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(itemListener0, itemListener0);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray2 = new int[2];
      intArray2[0] = 0;
      intArray2[1] = 0;
      visualListModel0.removeElements(intArray2, true);
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      PropertyGenerator propertyGenerator0 = mock(PropertyGenerator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        operationRegistry0.removePropertyGenerator("l", propertyGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor is registered against the name \"l\" under registry mode \"rendered\"
         //
         verifyException("javax.media.jai.DescriptorCache", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      visualListModel0.removeListDataListener(jComboBox0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.remove(mouseMotionListener0, mouseMotionListener0);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.remove((ItemListener) null, (ItemListener) null);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      AWTEventMulticaster.remove((KeyListener) null, (KeyListener) null);
      jComboBox0.addMouseWheelListener((MouseWheelListener) null);
      String[] stringArray0 = new String[0];
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray0);
      jComboBox2.getUIClassID();
      jComboBox2.getUIClassID();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.422703851834454
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-47);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key2);
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key0);
      hashMap0.putIfAbsent(sunHints_Key1, sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap1.put(sunHints_Key1, sunHints_Key1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0002574669850497
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getElements();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster1, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster2, (ItemListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster0, (ItemListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster2);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster2, (KeyListener) aWTEventMulticaster4);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.726653070892998
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[4];
      visualListModel0.moveDownIndexes(intArray0);
      intArray1[0] = (-5469);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      intArray1[1] = (-14);
      visualListModel0.moveDownIndex(0);
      intArray1[3] = 20000;
      visualListModel0.moveUpIndexes(intArray1);
      intArray0[0] = 20000;
      visualListModel0.reverseElements(intArray1);
      visualListModel0.getSize();
      visualListModel0.removeElementAt(0, true);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndex((-14));
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-5469), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      int[] intArray1 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveUpIndexes(intArray1);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key3);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashMap0.putIfAbsent(sunHints_Key4, sunHints_Key1);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap0.put(sunHints_Key3, sunHints_Key0);
      RenderingHints.Key renderingHints_Key0 = hashMap0.put(sunHints_Key4, sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap3 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap3.putAll(hashMap0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap4 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap3.put(renderingHints_Key0, renderingHints_Key0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      System.setCurrentTimeMillis(3515L);
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      System.setCurrentTimeMillis((-1L));
      visualListModel1.rotateClockwiseElements(intArray1);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9809211261807627
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-645));
      integerArray0[0] = integer0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.divideUnsigned((int) integerArray0[0], (-645));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.remainderUnsigned((-999), (-1685));
      Integer.toUnsignedLong(686);
      Integer integer2 = new Integer((int) integerArray0[0]);
      Integer integer3 = new Integer((int) integerArray0[0]);
      visualListModel0.addElement((VisualPageListItem) null);
      Integer.sum((int) integerArray0[1], (int) integerArray0[0]);
      Integer integer4 = JLayeredPane.DRAG_LAYER;
      Boolean.valueOf("e2~qH,%5q\"\"PK6k$");
      int int0 = new Integer(1);
      Integer.sum((-645), (int) integerArray0[0]);
      Integer integer5 = new Integer((int) integerArray0[1]);
      Integer integer6 = new Integer((int) integerArray0[0]);
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer.remainderUnsigned(35, (-1051));
      Integer.max((-341), 1600);
      Integer.compare(4722, (-1051));
      Integer integer8 = JLayeredPane.PALETTE_LAYER;
      Integer integer9 = JLayeredPane.PALETTE_LAYER;
      visualListModel0.getElements();
      Integer.toUnsignedString((int) integerArray0[0]);
      visualListModel0.getElementAt((int) integerArray0[1]);
      visualListModel0.removeElements((int) integerArray0[1], (int) integerArray0[1], false);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.592569000516745
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer((-580));
      integerArray0[0] = integer0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.divideUnsigned((int) integerArray0[0], (-580));
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      visualListModel0.addElement((VisualPageListItem) null);
      Integer.sum((int) integerArray0[1], 1126);
      Integer.getInteger(":f*R&=bWR7D0JnSu)>%", 819);
      Integer.toUnsignedString(778);
      linkedHashSet0.add((VisualPageListItem) null);
      Integer.sum((-580), (int) integerArray0[0]);
      Integer.toUnsignedLong((int) integerArray0[0]);
      Integer.remainderUnsigned((int) integerArray0[1], (-1051));
      Integer.max(0, 1126);
      Integer integer3 = JLayeredPane.DRAG_LAYER;
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      visualListModel0.getElementAt((int) integerArray0[1]);
      visualListModel0.removeElements((int) integerArray0[1], (int) integerArray0[1], true);
      visualListModel0.getValidElements();
      visualListModel0.setData(visualPageListItemArray0);
      System.setCurrentTimeMillis((long) integerArray0[1]);
      visualListModel0.getElementAt(0);
      visualListModel0.addElementAt((VisualPageListItem) null, 270);
      int[] intArray0 = new int[1];
      intArray0[0] = 270;
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 270
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2647721692909326
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      visualListModel0.getValidElements();
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.isOpaque();
      visualListModel0.removeListDataListener(jComboBox0);
      Integer.sum((int) integerArray0[1], 1126);
      linkedHashSet0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer.getInteger("uEXzV`^t$Vq");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      Rectangle rectangle0 = new Rectangle((int) integerArray0[1], 679);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      jComboBox0.addMouseWheelListener((MouseWheelListener) null);
      JComboBox<Integer> jComboBox1 = new JComboBox<Integer>(integerArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      int[] intArray0 = new int[1];
      Boolean.getBoolean("");
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      intArray0[0] = (-1633);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.removeElements(intArray0, (boolean) boolean0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1633
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.031036769559435
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ",|RRes");
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.048836609591917
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.addElement((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.getElements();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster1, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster2, (ItemListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster3, (ItemListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster0, (ItemListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster3);
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster3, (KeyListener) aWTEventMulticaster5);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer.min(0, 18);
      integerArray0[1] = integer1;
      vector0.toArray(integerArray0);
      Integer integer2 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualPageListItem visualPageListItem0 = null;
      Random.setNextRandom(18);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.getListDataListeners();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.925353930867566
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[1];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.5217669383437986
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.moveUpIndexes(intArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.undeleteElements(intArray0);
      intArray1[6] = (-2964);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.replace((RenderingHints.Key) sunHints_Key1, (RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.putIfAbsent(sunHints_Key2, sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      BiFunction<RenderingHints.Key, RenderingHints.Key, RenderingHints.Key> biFunction0 = (BiFunction<RenderingHints.Key, RenderingHints.Key, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any(java.awt.RenderingHints.Key.class) , any(java.awt.RenderingHints.Key.class));
      hashMap0.replaceAll(biFunction0);
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      hashMap2.put(sunHints_Key5, sunHints_Key3);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {0}, intArray0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      OperationRegistry.getThreadSafeOperationRegistry();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2964);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2964
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3452289758298694
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[6];
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.rotateClockwiseElements(intArray1);
      int[] intArray2 = new int[0];
      visualListModel0.undeleteElements(intArray2);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      operationRegistry0.registerServices(classLoader0);
      operationRegistry0.clearPropertyState();
      PropertyGenerator propertyGenerator0 = null;
      String string0 = "";
      OperationRegistry operationRegistry1 = new OperationRegistry();
      OperationRegistry operationRegistry2 = new OperationRegistry();
      // Undeclared exception!
      try { 
        operationRegistry1.clearProductPreferences("'z1[|r#8\"QaArz", "T,_u;x-~nTfu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"'z1[|r#8\"QaArz\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2277895415256035
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[12];
      visualListModel0.rotateClockwiseElements(intArray1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      operationRegistry0.registerServices(classLoader0);
      operationRegistry0.clearPropertyState();
      PropertyGenerator propertyGenerator0 = null;
      String string0 = "";
      OperationRegistry operationRegistry1 = new OperationRegistry();
      String string1 = "T,_u;x-~nTfu";
      // Undeclared exception!
      try { 
        operationRegistry1.addPropertyGenerator(" q6]j).1H*>o9u", "T,_u;x-~nTfu", (PropertyGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \" q6]j).1H*>o9u\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.0875591539592158
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[2];
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) pdfGraphics2D_HyperLinkKey0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate1.and(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      predicate0.negate();
      linkedHashSet0.removeIf(predicate2);
      visualListModel0.getValidElements();
      Integer integer0 = new Integer((-447));
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer0;
      Integer.sum((int) integerArray0[1], 1126);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.getElements();
      Integer.getInteger("uEXzV`\t$Vq");
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      Rectangle rectangle0 = new Rectangle((int) integerArray0[1], 679);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-1633);
      visualListModel0.moveUpIndexes(intArray0);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1633
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.02590856443123
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray1);
      int int0 = (-2964);
      visualListModel0.reverseElements(intArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3742749236317358
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[9];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key1);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      hashMap0.replace((RenderingHints.Key) sunHints_Key2, (RenderingHints.Key) sunHints_Key1, (RenderingHints.Key) sunHints_Key1);
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashMap0.putIfAbsent(sunHints_Key2, sunHints_Key1);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap1.put((RenderingHints.Key) null, sunHints_Key2);
      RenderingHints.Key renderingHints_Key0 = hashMap1.put((RenderingHints.Key) null, (RenderingHints.Key) null);
      hashMap0.putAll(hashMap1);
      hashMap1.put(sunHints_Key2, sunHints_Key0);
      hashMap1.put((RenderingHints.Key) null, sunHints_Key1);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap1.put(sunHints_Key2, renderingHints_Key0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.undeleteElements(intArray1);
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4633863794039605
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[6];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      intArray1[0] = (-5469);
      visualListModel0.removeListDataListener((ListDataListener) null);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      intArray1[1] = 7;
      visualListModel0.undeleteElements(intArray1);
      intArray1[2] = (-2964);
      intArray1[3] = 20000;
      visualListModel0.moveUpIndexes(intArray1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)73;
      visualListModel0.getListDataListeners();
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte)25;
      byteArray0[5] = (byte) (-56);
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      intArray0[0] = 20000;
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 20000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashMap1.replace((RenderingHints.Key) sunHints_Key1, (RenderingHints.Key) sunHints_Key2);
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      hashMap1.replace((RenderingHints.Key) null, (RenderingHints.Key) null, (RenderingHints.Key) sunHints_Key0);
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashMap0.putIfAbsent(sunHints_Key2, (RenderingHints.Key) null);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashMap2.put((RenderingHints.Key) null, sunHints_Key5);
      hashMap2.put(sunHints_Key4, (RenderingHints.Key) null);
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      hashMap1.put(sunHints_Key0, sunHints_Key6);
      hashMap1.putAll(hashMap0);
      hashMap1.put((RenderingHints.Key) null, sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap3 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashMap0.put(sunHints_Key1, sunHints_Key7);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      visualListModel0.moveDownIndexes(intArray0);
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.clear();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.push((VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<VisualPageListItem> jComboBox1 = new JComboBox<VisualPageListItem>();
      jComboBox0.isLightWeightPopupEnabled();
      jComboBox0.transferFocusDownCycle();
      jComboBox1.getBorder();
      jComboBox1.invalidate();
      ComboBoxEditor comboBoxEditor0 = jComboBox1.getEditor();
      jComboBox1.getAutoscrolls();
      jComboBox0.firePropertyChange("", false, false);
      boolean boolean0 = new Boolean("");
      jComboBox0.setPopupVisible(false);
      jComboBox1.setVerifyInputWhenFocusTarget(false);
      comboBoxEditor0.selectAll();
      FocusEvent focusEvent0 = new FocusEvent(jComboBox1, (-2952), true);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.selectAll();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      focusEvent0.getOppositeComponent();
      comboBoxEditor0.selectAll();
      metalComboBoxEditor_UIResource0.focusLost((FocusEvent) null);
      JComboBox<String> jComboBox2 = new JComboBox<String>();
      jComboBox2.getUIClassID();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      vector0.iterator();
      visualListModel0.setData(vector0);
      PlanarImage planarImage0 = null;
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      operationRegistry0.getOperationDescriptors();
      PropertyGenerator propertyGenerator0 = mock(PropertyGenerator.class, new ViolatedAssumptionAnswer());
      operationRegistry0.clearPropertyState();
      ErrorDiffusionDescriptor errorDiffusionDescriptor0 = new ErrorDiffusionDescriptor();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null, (Vector<Object>) null);
      parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock((Vector<Object>) null);
      Locale locale0 = Locale.CANADA_FRENCH;
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = null;
      try {
        mockSimpleDateFormat0 = new MockSimpleDateFormat("maR", dateFormatSymbols0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'R'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = new Object();
      Object object1 = new Object();
      Object[] objectArray0 = new Object[11];
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      objectArray0[4] = (Object) visualListModel0;
      objectArray0[5] = object0;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      Hashtable<RenderingHints.Key, RenderingHints.Key> hashtable0 = new Hashtable<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashtable0.keySet();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      assertEquals("[]", vector0.toString());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Object object0 = new Object();
      RenderingHints renderingHints0 = new RenderingHints(pdfGraphics2D_HyperLinkKey0, sunHints_LCDContrastKey0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      hashMap0.put(sunHints_Key0, sunHints_LCDContrastKey0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      RenderingHints.Key renderingHints_Key0 = hashMap0.put(sunHints_Key0, sunHints_Key1);
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, renderingHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      BiFunction<RenderingHints.Key, Object, RenderingHints.Key> biFunction0 = (BiFunction<RenderingHints.Key, Object, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.computeIfPresent((RenderingHints.Key) null, biFunction0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      hashMap2.put(sunHints_LCDContrastKey0, (RenderingHints.Key) null);
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap2.replace((RenderingHints.Key) sunHints_LCDContrastKey0, (RenderingHints.Key) null, (RenderingHints.Key) sunHints_Key5);
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashMap0.putIfAbsent((RenderingHints.Key) null, sunHints_Key4);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap3 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap4 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      hashMap4.put((RenderingHints.Key) null, sunHints_Key4);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key10 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      Random.setNextRandom((-3311));
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.317477358555153
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[6];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      intArray1[0] = (-5469);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      intArray1[1] = 7;
      visualListModel0.undeleteElements(intArray1);
      intArray1[2] = (-2964);
      intArray1[3] = 20000;
      visualListModel0.moveUpIndexes(intArray1);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)73;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[3] = (byte)73;
      byteArray0[4] = (byte) (-56);
      intArray1[3] = (int) (byte)110;
      visualListModel0.getListDataListeners();
      byteArray0[6] = (byte)73;
      byteArray0[7] = (byte) (-56);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      intArray0[0] = 20000;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 20000
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.042356997397763
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8375937467988783
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.iterator();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(14);
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-127);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-127));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "K");
      AffineTransform affineTransform1 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-127));
      AffineTransform affineTransform2 = AffineTransform.getQuadrantRotateInstance((-1), (double) 14, 0.0);
      AffineTransform.getScaleInstance((-2393.0), (-1999.3516));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      affineTransform1.setTransform(affineTransform2);
      affineTransform0.setToRotation((-1704.39211236727));
      AffineTransform affineTransform3 = new AffineTransform(affineTransform1);
      PlanarImage planarImage0 = null;
      OperationRegistry operationRegistry0 = new OperationRegistry();
      PropertyGenerator propertyGenerator0 = mock(PropertyGenerator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        operationRegistry0.removePropertyGenerator("?sV6j<2EUK0awcq2Xd,", propertyGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor is registered against the name \"?sV6j<2EUK0awcq2Xd,\" under registry mode \"rendered\"
         //
         verifyException("javax.media.jai.DescriptorCache", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate1.negate();
      Predicate<Object> predicate8 = predicate0.or(predicate5);
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate.isEqual((Object) "!{A!! 5H,4'}M");
      Predicate<Object> predicate9 = predicate7.negate();
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate10 = predicate6.negate();
      Predicate<Object> predicate11 = Predicate.isEqual((Object) null);
      predicate3.test(predicate10);
      Predicate<Object> predicate12 = predicate11.negate();
      Predicate<Object> predicate13 = predicate0.and(predicate12);
      Predicate<Object> predicate14 = predicate0.and(predicate5);
      predicate13.negate();
      Predicate<Object> predicate15 = predicate5.negate();
      Predicate<Object> predicate16 = Predicate.isEqual((Object) predicate4);
      predicate9.and(predicate6);
      predicate14.negate();
      Predicate<Object> predicate17 = predicate5.and(predicate15);
      Predicate<Object> predicate18 = predicate17.negate();
      Predicate<Object> predicate19 = predicate9.or(predicate7);
      Predicate<Object> predicate20 = predicate8.and(predicate18);
      predicate16.and(predicate19);
      Predicate.isEqual((Object) predicate0);
      predicate20.and(predicate19);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.updateElementAt(137, (VisualPageListItem) null);
      OperationRegistry.getThreadSafeOperationRegistry();
      PlanarImage planarImage0 = null;
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[0] = (-1874);
      intArray0[1] = (-1399);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.addAllElements((-3610), (Collection<VisualPageListItem>) vector0);
      Vector<Object> vector1 = new Vector<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(vector1, vector1);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      DecimalFormatSymbols decimalFormatSymbols0 = DecimalFormatSymbols.getInstance();
      DecimalFormat decimalFormat0 = null;
      try {
        decimalFormat0 = new DecimalFormat((String) null, decimalFormatSymbols0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "lPsB";
      stringArray0[3] = "Bd";
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      GridLayout gridLayout0 = new GridLayout();
      Dimension dimension0 = gridLayout0.preferredLayoutSize(jComboBox0);
      jComboBox0.repaint(1129, (-2121), (-898), 7);
      gridLayout0.setRows(1129);
      Dimension dimension1 = jComboBox0.getPreferredSize();
      JProgressBar jProgressBar0 = new JProgressBar(1, 24, 33);
      Dimension dimension2 = new Dimension(20, 24);
      dimension2.setSize((Dimension2D) dimension1);
      dimension2.width = 20;
      dimension2.setSize((Dimension2D) dimension0);
      dimension2.height = 33;
      dimension2.setSize(1002.4906843760883, (double) 24);
      jComboBox0.setPreferredSize(dimension2);
      JInternalFrame jInternalFrame0 = new JInternalFrame("lPsB");
      dimension1.width = 0;
      dimension2.setSize(1.0, (-2824.6));
      dimension1.setSize((Dimension2D) dimension2);
      visualListModel0.removeElements(intArray0, false);
      Random.setNextRandom((-2824));
      visualListModel0.removeElements((-2121), 3878, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      String[] stringArray0 = new String[4];
      stringArray0[0] = "lPsB";
      stringArray0[3] = "Bd";
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      GridLayout gridLayout0 = new GridLayout();
      gridLayout0.preferredLayoutSize(jComboBox0);
      jComboBox0.repaint(1129, (-2121), (-898), 7);
      gridLayout0.setRows(1129);
      Dimension dimension0 = jComboBox0.getPreferredSize();
      JProgressBar jProgressBar0 = new JProgressBar(1, 24, 33);
      Dimension dimension1 = new Dimension(20, 24);
      dimension1.width = 20;
      dimension0.clone();
      dimension1.height = 8;
      dimension1.height = 33;
      dimension1.setSize((double) 33, (double) 24);
      jComboBox0.setPreferredSize(dimension1);
      dimension0.width = 24;
      dimension0.setSize((-1772), (-1135));
      dimension1.setSize((double) (-898), (-2824.6));
      dimension1.height = (-1327);
      dimension0.setSize((Dimension2D) dimension1);
      visualListModel0.removeElements(intArray0, false);
      Random.setNextRandom((-1327));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Object[][] objectArray0 = new Object[8][6];
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) sunHints_Key0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[7];
      objectArray2[0] = (Object) parameterBlock0;
      Object object0 = new Object();
      objectArray2[1] = object0;
      objectArray2[2] = (Object) operationRegistry0;
      objectArray2[3] = (Object) operationRegistry0;
      objectArray2[4] = (Object) operationRegistry0;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElementAt(798);
      objectArray2[5] = null;
      objectArray2[6] = (Object) renderingHints0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[5];
      Object object1 = new Object();
      objectArray3[0] = object1;
      visualListModel0.getElementAt(0);
      objectArray3[1] = null;
      objectArray3[2] = object0;
      objectArray3[3] = (Object) operationRegistry0;
      objectArray3[4] = (Object) hashMap0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[5];
      objectArray4[0] = null;
      objectArray4[1] = (Object) sunHints_Key0;
      objectArray4[2] = (Object) renderingHints0;
      visualListModel0.getElementAt(798);
      objectArray4[3] = null;
      objectArray4[4] = null;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[3];
      objectArray5[0] = (Object) hashMap0;
      objectArray5[1] = object1;
      objectArray5[2] = (Object) visualListModel0;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[1];
      objectArray6[0] = (Object) hashMap0;
      objectArray0[5] = objectArray6;
      Object[] objectArray7 = new Object[5];
      objectArray7[0] = (Object) renderingHints0;
      objectArray7[1] = (Object) operationRegistry0;
      objectArray7[2] = (Object) operationRegistry0;
      objectArray7[3] = (Object) parameterBlock0;
      visualListModel0.getElementAt(798);
      objectArray7[4] = null;
      objectArray0[6] = objectArray7;
      Object[] objectArray8 = new Object[7];
      objectArray8[0] = null;
      objectArray8[1] = (Object) operationRegistry0;
      objectArray8[2] = (Object) operationRegistry0;
      objectArray8[3] = object0;
      objectArray8[4] = null;
      objectArray8[5] = (Object) parameterBlock0;
      objectArray8[6] = (Object) parameterBlock0;
      objectArray0[7] = objectArray8;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray7);
      hashMap0.put(sunHints_Key0, defaultTableModel0);
      // Undeclared exception!
      try { 
        operationRegistry0.create("-EZwwjoO(*$^X", parameterBlock0, renderingHints0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"-EZwwjoO(*$^X\" is registered under mode \"rendered\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-/");
      // Undeclared exception!
      try { 
        visualListModel0.subList(4930, (-1781));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(4930) > toIndex(-1781)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-113), 2328);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        visualListModel0.subList(380, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(380) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      hashMap0.put(sunHints_Key1, (RenderingHints.Key) null);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashMap1.put(sunHints_Key2, (RenderingHints.Key) null);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      BiFunction<Object, RenderingHints.Key, RenderingHints.Key> biFunction0 = (BiFunction<Object, RenderingHints.Key, RenderingHints.Key>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.computeIfPresent((RenderingHints.Key) null, biFunction0);
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashMap0.replace((RenderingHints.Key) null, (RenderingHints.Key) pdfGraphics2D_HyperLinkKey0, (RenderingHints.Key) sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap3 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap4 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap3.put((RenderingHints.Key) null, sunHints_Key6);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = new Object();
      Object object1 = new Object();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Integer.min(2582, 2);
      Integer integer0 = new Integer(1000);
      OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      visualListModel0.prependAllElements(stack0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate2);
      Predicate<Object> predicate8 = predicate0.or(predicate5);
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate.isEqual((Object) "!{A!! 5H,4'}M");
      Predicate<Object> predicate9 = predicate7.negate();
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate.isEqual((Object) null);
      predicate3.test(predicate10);
      Predicate<Object> predicate11 = predicate7.and(predicate2);
      predicate0.and(predicate11);
      predicate0.and(predicate5);
      predicate5.and(predicate3);
      Predicate<Object> predicate12 = predicate5.negate();
      Predicate<Object> predicate13 = Predicate.isEqual((Object) predicate4);
      predicate9.and(predicate6);
      predicate12.negate();
      predicate5.and(predicate12);
      Predicate<Object> predicate14 = predicate8.negate();
      Predicate<Object> predicate15 = predicate9.or(predicate7);
      Predicate<Object> predicate16 = predicate8.and(predicate14);
      predicate13.and(predicate15);
      Predicate.isEqual((Object) predicate0);
      predicate16.and(predicate15);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements(arrayList0);
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      Integer[] integerArray0 = new Integer[10];
      integerArray0[1] = integer0;
      Integer.getInteger("\"T3;-)!x@");
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[2] = integer1;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[3] = integer2;
      integerArray0[4] = integer0;
      integerArray0[6] = integer0;
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(integerArray0);
      jComboBox0.isOpaque();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Boolean boolean0 = new Boolean("\"T3;-)!x@");
      visualListModel0.getListDataListeners();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      assertFalse(linkedHashSet0.isEmpty());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      predicate1.or(predicate4);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      Predicate.isEqual((Object) sunHints_Key0);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate5.or(predicate2);
      predicate2.or(predicate0);
      Predicate<Object> predicate7 = predicate5.and(predicate2);
      Predicate<Object> predicate8 = predicate0.or(predicate6);
      predicate7.negate();
      predicate5.negate();
      Predicate<Object> predicate9 = predicate7.negate();
      predicate0.and(predicate9);
      Predicate<Object> predicate10 = predicate8.and(predicate0);
      predicate10.and(predicate3);
      predicate10.or(predicate4);
      Integer.getInteger("] whereas object of type ", 33);
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-883));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -883
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      PlanarImage planarImage0 = null;
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.undeleteElements(intArray0);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      int int0 = 180;
      int int1 = (-2504);
      int int2 = 9;
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransform.getQuadrantRotateInstance((-2504), (-1.0), (double) (-2504));
      OperationRegistry operationRegistry0 = new OperationRegistry();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "~OtXV;u*]8PlEb{d", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"~OtXV;u*]8PlEb{d\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-127);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-127));
      AffineTransform affineTransform1 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-127));
      AffineTransform affineTransform2 = AffineTransform.getQuadrantRotateInstance((-1), (double) 0, 0.0);
      AffineTransform.getScaleInstance((-2393.0), (-1999.3516));
      affineTransform1.setTransform(affineTransform2);
      affineTransform0.setToRotation((-1704.39211236727));
      affineTransform1.setToQuadrantRotation((int) (byte) (-127));
      affineTransform0.setToRotation(1088.7772, 1088.7772);
      visualListModel0.moveUpIndex((-1433));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TVaWMN$',Fq'R<cHSn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "TVaWMN$',Fq'R<cHSn");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<VisualPageListItem> jComboBox1 = new JComboBox<VisualPageListItem>();
      jComboBox0.isLightWeightPopupEnabled();
      jComboBox0.transferFocusDownCycle();
      jComboBox1.getBorder();
      jComboBox1.invalidate();
      ComboBoxEditor comboBoxEditor0 = jComboBox1.getEditor();
      jComboBox1.getAutoscrolls();
      jComboBox0.firePropertyChange("", false, false);
      jComboBox1.isFocusOwner();
      jComboBox0.setPopupVisible(false);
      jComboBox1.setVerifyInputWhenFocusTarget(false);
      comboBoxEditor0.selectAll();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      KernelJAI kernelJAI0 = KernelJAI.GRADIENT_MASK_SOBEL_HORIZONTAL;
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector1);
      assertEquals("[]", vector1.toString());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "9sB";
      stringArray0[5] = "Bd";
      stringArray0[3] = "Bd";
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      GridLayout gridLayout0 = new GridLayout();
      gridLayout0.preferredLayoutSize(jComboBox0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      hashMap0.put(sunHints_Key0, sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key3, (RenderingHints.Key) sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap2 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap3 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap1.put((RenderingHints.Key) null, sunHints_Key4);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key8 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key9 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      assertFalse(sunHints_Key9.equals((Object)sunHints_Key1));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[6];
      stringArray0[3] = "ZpW";
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      GridLayout gridLayout0 = new GridLayout();
      Dimension dimension0 = gridLayout0.preferredLayoutSize(jComboBox0);
      jComboBox0.repaint(7, 20, 7, 7);
      gridLayout0.setRows(7);
      Dimension dimension1 = new Dimension(dimension0);
      JProgressBar jProgressBar0 = new JProgressBar(1, 7, 20);
      Dimension dimension2 = gridLayout0.minimumLayoutSize(jProgressBar0);
      Dimension dimension3 = new Dimension(20, 7);
      jProgressBar0.firePropertyChange("ZpW", (long) 20, (-2850L));
      JComponent.isLightweightComponent(jProgressBar0);
      dimension3.setSize(0.0, 1152.5);
      dimension2.setSize((-2303), (-2303));
      dimension3.height = 20;
      dimension0.width = (-2303);
      jProgressBar0.getFocusTraversalPolicy();
      dimension3.width = 20;
      dimension3.setSize((double) (-2303), (double) (-2303));
      Dimension dimension4 = new Dimension(dimension3);
      dimension4.setSize((-2690), (-2303));
      dimension4.setSize(7, 2);
      dimension3.setSize((Dimension2D) dimension4);
      dimension3.height = 20;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      VisualListModel visualListModel1 = new VisualListModel();
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-238), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-238)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = (-824);
      intArray0[2] = 2167;
      intArray0[3] = (-1);
      intArray0[4] = (-854);
      intArray0[5] = (-1);
      intArray0[6] = 1052;
      visualListModel0.removeElements(597, 0, true);
      intArray0[7] = 20;
      intArray0[8] = 1;
      visualListModel0.removeElements(intArray0, true);
      assertArrayEquals(new int[] {2, (-824), 2167, (-1), (-854), (-1), 1052, 20, 1}, intArray0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[8];
      Integer integer0 = new Integer((-580));
      integerArray0[0] = integer0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = new Integer((int) integerArray0[0]);
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer2;
      Boolean boolean0 = new Boolean(true);
      Integer integer3 = new Integer((int) integerArray0[0]);
      Integer integer4 = new Integer((int) integerArray0[0]);
      Integer.max((-580), (int) integerArray0[0]);
      Integer integer5 = new Integer((int) integerArray0[0]);
      Integer.divideUnsigned((int) integerArray0[0], (-832));
      Integer.sum((int) integerArray0[1], 1126);
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Boolean boolean1 = new Boolean("] not found.");
      Integer.sum((-580), (int) integerArray0[0]);
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      Integer integer8 = new Integer((int) integerArray0[0]);
      Integer integer9 = new Integer((-1160));
      Integer.sum((int) integerArray0[0], (int) integerArray0[1]);
      Integer.min((int) integerArray0[1], (int) integerArray0[1]);
      Boolean.compare(true, true);
      Boolean boolean2 = new Boolean("] not found.");
      Boolean boolean3 = new Boolean(true);
      Boolean.compare(true, true);
      Integer integer10 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Boolean.logicalOr(true, (boolean) boolean2);
      visualListModel0.getElements();
      Integer integer11 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.toUnsignedString((int) integerArray0[0]);
      visualListModel0.getElementAt((int) integerArray0[1]);
      visualListModel0.removeElements((int) integerArray0[1], (int) integerArray0[1], (boolean) boolean0);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(8, 8, true);
      String string0 = "] cannot be insantited due to acces resrictions";
      String string1 = "";
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      String string2 = null;
      // Undeclared exception!
      try { 
        operationRegistry0.getOrderedProductList("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      String[] stringArray0 = new String[6];
      stringArray0[0] = "Bd";
      stringArray0[3] = "Bd";
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      GridLayout gridLayout0 = new GridLayout();
      Dimension dimension0 = gridLayout0.preferredLayoutSize(jComboBox0);
      jComboBox0.repaint(1129, (-2126), (-898), 7);
      gridLayout0.setRows(1);
      Dimension dimension1 = new Dimension(dimension0);
      JProgressBar jProgressBar0 = new JProgressBar(1, 7, 20);
      dimension1.width = 1;
      Dimension dimension2 = new Dimension(dimension1);
      Dimension dimension3 = new Dimension(20, 7);
      dimension3.width = 20;
      Dimension dimension4 = (Dimension)dimension3.clone();
      dimension3.setSize((Dimension2D) dimension4);
      dimension3.height = 1;
      dimension3.setSize((double) 20, (double) 7);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.focusLost((FocusEvent) null);
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox1.getUIClassID();
      visualListModel0.removeElements(20, 1129, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[10];
      stringArray0[0] = "";
      stringArray0[2] = "B(Ad";
      stringArray0[4] = "B(Ad";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<VisualPageListItem> jComboBox1 = new JComboBox<VisualPageListItem>();
      jComboBox0.isLightWeightPopupEnabled();
      jComboBox1.getBorder();
      jComboBox1.invalidate();
      ComboBoxEditor comboBoxEditor0 = jComboBox1.getEditor();
      jComboBox1.getAutoscrolls();
      jComboBox0.firePropertyChange("", false, false);
      jComboBox0.setPopupVisible(false);
      jComboBox1.setVerifyInputWhenFocusTarget(false);
      FocusEvent focusEvent0 = new FocusEvent(jComboBox1, (-1300), false);
      focusEvent0.getOppositeComponent();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      metalComboBoxEditor_UIResource0.selectAll();
      metalComboBoxEditor_UIResource0.getEditorComponent();
      focusEvent0.getOppositeComponent();
      JButton jButton0 = new JButton("9sB");
      comboBoxEditor0.selectAll();
      metalComboBoxEditor_UIResource0.focusLost((FocusEvent) null);
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox3 = new JComboBox<String>(stringArray0);
      jComboBox3.isRequestFocusEnabled();
      jComboBox2.getUIClassID();
      jComboBox3.getUIClassID();
      visualListModel0.removeElements(2888, (-1300), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate1 = Predicate.isEqual((Object) "] whereas object of type ");
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate0.negate();
      Predicate<Object> predicate6 = predicate1.negate();
      Predicate<Object> predicate7 = predicate1.negate();
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate.isEqual((Object) "bgG}j");
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate9 = predicate6.negate();
      Predicate<Object> predicate10 = Predicate.isEqual((Object) null);
      predicate3.test(predicate9);
      Predicate<Object> predicate11 = predicate10.negate();
      Predicate<Object> predicate12 = predicate0.and(predicate11);
      Predicate<Object> predicate13 = predicate0.and(predicate5);
      predicate12.negate();
      Predicate<Object> predicate14 = predicate5.negate();
      Predicate<Object> predicate15 = Predicate.isEqual((Object) predicate4);
      predicate5.negate();
      predicate13.negate();
      Predicate<Object> predicate16 = predicate5.and(predicate14);
      Predicate<Object> predicate17 = predicate16.negate();
      Predicate<Object> predicate18 = predicate8.or(predicate7);
      Predicate<Object> predicate19 = predicate0.and(predicate17);
      predicate15.and(predicate18);
      Predicate.isEqual((Object) predicate0);
      predicate19.and(predicate18);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.6443458088150464
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[4];
      visualListModel0.moveDownIndexes(intArray0);
      intArray1[0] = (-5469);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      intArray1[1] = (-2);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      intArray0[0] = 1694;
      visualListModel0.undeleteElements(intArray0);
      JComboBox<VisualPageListItem> jComboBox0 = new JComboBox<VisualPageListItem>();
      jComboBox0.getPopupMenuListeners();
      ItemListener itemListener0 = mock(ItemListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(itemListener0, itemListener0);
      AWTEventMulticaster.remove((ItemListener) null, (ItemListener) null);
      jComboBox0.removeItemListener((ItemListener) null);
      visualListModel0.moveUpIndex(1694);
      jComboBox0.setOpaque(false);
      ComboBoxEditor comboBoxEditor0 = jComboBox0.getEditor();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox1.setEditor(comboBoxEditor0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.reverseElements(intArray1);
      System.setCurrentTimeMillis((-2));
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int[] intArray0 = new int[1];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int[] intArray1 = new int[14];
      intArray1[2] = (-2964);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-47);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap0 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key0, sunHints_Key1);
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key0, (RenderingHints.Key) sunHints_Key0);
      hashMap0.putIfAbsent(sunHints_Key1, sunHints_Key0);
      HashMap<RenderingHints.Key, RenderingHints.Key> hashMap1 = new HashMap<RenderingHints.Key, RenderingHints.Key>();
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap1.put(sunHints_Key1, sunHints_Key1);
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((int) (byte) (-47), (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-127);
      int int0 = (-1);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-127));
      AffineTransform affineTransform1 = AffineTransform.getQuadrantRotateInstance((int) (byte) (-127));
      AffineTransform affineTransform2 = AffineTransform.getQuadrantRotateInstance((-1), (double) 0, 0.0);
      AffineTransform.getScaleInstance((-2393.0), (-1999.3516));
      affineTransform1.setTransform(affineTransform2);
      affineTransform0.setToRotation((-1704.39211236727));
      AffineTransform affineTransform3 = new AffineTransform(affineTransform1);
      JDialog jDialog0 = null;
      try {
        jDialog0 = new JDialog((Frame) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      String string0 = "";
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      PropertyGenerator propertyGenerator0 = mock(PropertyGenerator.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        operationRegistry0.removePropertyGenerator("] cannot be insantited due to acces resrictions", "", propertyGenerator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"] cannot be insantited due to acces resrictions\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      PlanarImage planarImage0 = null;
      int int0 = (-2987);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) arrayDeque0);
      SnapshotImage snapshotImage0 = null;
      try {
        snapshotImage0 = new SnapshotImage((PlanarImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.media.jai.ImageLayout", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-2373), 1931, true);
      AffineTransform affineTransform0 = AffineTransform.getScaleInstance(1931, 0.0);
      affineTransform0.getType();
      affineTransform0.quadrantRotate(2501);
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      AffineTransform affineTransform2 = new AffineTransform(affineTransform1);
      AffineTransform.getScaleInstance(0, 1000.0);
      AffineTransform affineTransform3 = AffineTransform.getTranslateInstance((-2022.0), 2501);
      affineTransform3.quadrantRotate(1931, (-2022.0), (double) 1320);
      affineTransform2.setTransform(affineTransform3);
      AffineTransform.getRotateInstance(1.9438849269242346);
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      operationRegistry0.getOperationNames();
      OperationRegistry.getThreadSafeOperationRegistry();
      operationRegistry0.clearPropertyState();
      // Undeclared exception!
      try { 
        operationRegistry0.getOrderedCIFList("$s}%HGAD,<OL=%=}~F", "?sV6j<2bUK0awcq2Xd,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"$s}%HGAD,<OL=%=}~F\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, false);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance(0.0);
      affineTransform0.getType();
      affineTransform0.quadrantRotate(0);
      AffineTransform.getQuadrantRotateInstance(0, 1.0, (-2605.0));
      AffineTransform affineTransform1 = AffineTransform.getScaleInstance((-609.178), 2296.51274635);
      affineTransform0.quadrantRotate(1320, 0.0, (-3009.060710937916));
      affineTransform1.setTransform(affineTransform0);
      AffineTransform.getRotateInstance((-3009.060710937916));
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      String string0 = "?sV6j<2bUK0aw<cq2Xd,";
      OperationRegistry operationRegistry1 = new OperationRegistry();
      PropertyGenerator propertyGenerator0 = mock(PropertyGenerator.class, new ViolatedAssumptionAnswer());
      operationRegistry0.clearPropertyState();
      // Undeclared exception!
      try { 
        operationRegistry0.getOrderedCIFList("?sV6j<2bUK0aw<cq2Xd,", "?sV6j<2bUK0aw<cq2Xd,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"?sV6j<2bUK0aw<cq2Xd,\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      AffineTransform.getScaleInstance(0, 1.9438849269242346);
      String string0 = "] cannot be insantited due to acces resrictions";
      String string1 = "";
      OperationRegistry operationRegistry0 = new OperationRegistry();
      String string2 = null;
      // Undeclared exception!
      try { 
        operationRegistry0.getOrderedProductList("", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Mode name \"\" is not a valid (registered) registry mode.
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      arrayDeque0.removeAll(linkedList0);
      visualListModel0.appendAllElements(arrayDeque0);
      Integer integer0 = new Integer((-1889));
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      assertTrue(linkedHashSet0.isEmpty());
  }
}
