/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 11:56:46 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.Date;
import java.util.LinkedList;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.746066410830336
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.columnStart = null;
      derivedVariable0.questionNumber = "macaw.businessLayer.Variable";
      derivedVariable0.setQuestionNumber("variable.cleaningDescription.label");
      derivedVariable0.getLabel();
      User user0 = new User("variable.alias.label", "variable.cleaningDescription.label");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      user0.setIdentifier(0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocument(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.form = "variable.saveChanges.valueChanged";
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.getForm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getQuestionNumber();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setColumnStart("jWlv!'m;Q.D[x");
      derivedVariable1.setNotes("");
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.getAvailability();
      // Undeclared exception!
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.8577636728402633
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setQuestionNumber("l/\b+M\"^Hre");
      derivedVariable0.getAlias();
      rawVariable0.getIdentifier();
      rawVariable0.setIdentifier((-1937857899));
      rawVariable0.getDisplayItemIdentifier();
      rawVariable0.clone();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getAvailability();
      rawVariable0.clone();
      rawVariable0.getIdentifier();
      assertEquals("l/\b+M\"^Hre", rawVariable0.getQuestionNumber());
      
      derivedVariable1.getOntologyTerms();
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("UNABLE_TO_GET_CATEGORIES");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getCleaningDescription();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "Unknown";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable1);
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.isNewRecord();
      rawVariable0.createVariableSummary();
      rawVariable0.getIdentifier();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "user.city.label";
      rawVariable0.getNotes();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("G");
      supportingDocument0.setDocumentCode("user.city.label");
      supportingDocument0.setTitle("BS/_(Z{b#1j/Qz\"yO");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getOntologyTerms();
      assertEquals("user.city.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.864695993092282
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.ONTOLOGY_TERM;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "", ">Sw");
      user0.setAffiliation("[E2JM/?8M<?p%wgV");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user1 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      User user2 = new User("macaw.businessLayer.ValueLabel$EditingOperationType", ">Sw");
      User user3 = new User();
      user0.setLastName("%5o?(Kg+j2tg");
      User user4 = new User("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES", "n1Y4)#A[&+H=");
      User user5 = new User();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      user1.setLastName("blank");
      User user6 = new User();
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent2.getChangeMessage());
      
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      user9.setCity("n1Y4)#A[&+H=");
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user8, derivedVariable0, (Variable) null);
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals(0, (int)macawChangeEvent3.getVariableOwnerID());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent3.getChangeMessage());
      assertNotNull(macawChangeEvent3);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.9446228076224052
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setAddressLine1("");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("$Zig`\"vM~@3y/^");
      user0.setPassword(" :");
      derivedVariable0.setCoded(true);
      user0.setAffiliation(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      derivedVariable1.setName(" :");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User("", "");
      User user2 = new User();
      user0.setLastName((String) null);
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, derivedVariable0, derivedVariable0);
      User user4 = new User();
      User user5 = new User(" :", "variable.cleaningDescription.label");
      user5.setCounty("fsh");
      user5.setCounty("blank");
      User user6 = new User();
      User user7 = new User("!niU+Qcfv", "general.error.blankField");
      try { 
        User.validateFields(user7);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "[Ro8tHxaL/=z {+w";
      rawVariable0.form = "}kxSAI(U@`{";
      User user0 = new User();
      user0.setCity("[Ro8tHxaL/=z {+w");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getColumnStart();
      assertEquals("[Ro8tHxaL/=z {+w", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.7247975622297553
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setColumnEnd("variable.alias.label");
      rawVariable0.setFilePath((String) null);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.getDisplayItemIdentifier();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      derivedVariable0.getSupportingDocuments();
      User user0 = new User("d~rrwvj&hl8+I", "NON_EXISTENT_ALIAS_FILE_PATH");
      rawVariable0.columnStart = "general.fieldValue.blank";
      user0.setFirstName("#PlT{mpqi_:kXIh)e");
      user0.setCounty("<1r'31<e");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, (String) null, ")@H");
      macawChangeEvent0.setChangeMessage("<1r'31<e");
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity((-1672));
      rawVariable0.getDisplayName();
      derivedVariable0.columnStart = "general.fieldValue.blank";
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.retainAll(arrayList0);
      arrayList1.add((Variable) derivedVariable0);
      try { 
        User.validateFields(user0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.045979739597889
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType3 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType3, "D\";Q ]`]=puLoVnUc7", "D\";Q ]`]=puLoVnUc7");
      macawChangeEvent0.setChangeType(changeEventType2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.createVariableSummary();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      User user2 = new User();
      derivedVariable1.setFilePath("ocm-B=U3P");
      RawVariable rawVariable1 = new RawVariable();
      Object object0 = new Object();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("ocm-B=U3P", derivedVariable1.getFilePath());
      
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getDisplayName();
      String string0 = derivedVariable0.getCleaningStatus();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6808276490345495
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      Object object0 = ontologyTerm0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("macaw.businessLayer.Variable");
      OntologyTerm.validateFields(ontologyTerm1);
      arrayList0.add((OntologyTerm) object0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user1 = new User("macaw.businessLayer.Variable", "variable.cleaningStatus.label");
      user1.setLastName((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.580906009824722
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.setAvailability("rB-enz|40}9<3Jfo");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNameSpace("nD@7@Eu(p;H_");
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add((SupportingDocument) null);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      arrayList2.containsAll(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0877744282783643
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.addAll(0, (Collection<? extends OntologyTerm>) arrayList0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.setAvailability(":D/?[7aLy");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.setForm("variable.alternativeVariable.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace(")");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      rawVariable1.getCleaningDescription();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList2.ensureCapacity((-2040109463));
      rawVariable0.getDisplayName();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      arrayList4.retainAll(arrayList2);
      arrayList4.add((Variable) rawVariable0);
      ArrayList<Variable> arrayList5 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList5);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.976847273992764
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setForm("yY");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      RawVariable rawVariable1 = null;
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.726477212006092
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("variable.label.label", "macaw.businessLayer.ValueLabel$EditingOperationType");
      user0.setFirstName("general.fieldValue.unknown");
      rawVariable0.createVariableSummary();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      arrayList0.trimToSize();
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType1 = ChangeEventType.USER;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, (String) null, "UNABLE_TO_DELETE_USER");
      arrayList0.add(macawChangeEvent1);
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "UNABLE_TO_DELETE_USER", "macaw.businessLayer.ValueLabel$EditingOperationType");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      macawChangeEvent1.setChangeType(changeEventType2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity((-1159));
      rawVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("^7N^ua>?");
      User user0 = new User("", "");
      user0.setAddressLine1("");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("<");
      user0.setAffiliation("<");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      user0.setLastName((String) null);
      User user2 = new User();
      User user3 = new User();
      User user4 = new User();
      user4.setCounty("fsh");
      user4.setCounty("UNABLE_TO_GET_CHANGES_FOR_LIST_CHOICES");
      User user5 = new User((String) null, (String) null);
      User user6 = new User();
      user6.setCity("L&IBF1~\"_");
      System.setCurrentTimeMillis(454L);
      derivedVariable0.getName();
      derivedVariable0.getSupportingDocuments();
      assertEquals("^7N^ua>?", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setAddressLine1("");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("<");
      user0.setAffiliation("<");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("<");
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals(1, arrayList0.size());
      
      User user1 = new User("", "!niU+Qcfv");
      User user2 = new User();
      user0.setLastName((String) null);
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      user5.setCounty("fsh");
      user5.setCounty("lan8k");
      User user6 = new User((String) null, (String) null);
      User user7 = new User();
      user7.setCity("L&IBF1~\"_");
      derivedVariable0.getName();
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.8936329525208677
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      user1.setAddressLine1("variable.alias.label");
      user0.setPassword(",%$U:!%_C");
      user1.setPassword("{E_pY>vf`'9=");
      user1.setAffiliation("lUrf*");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, (String) null, "d~rrwvj&hl8+I");
      User user2 = new User("{E_pY>vf`'9=", "$Zig`\"_vM~@3y/^");
      User user3 = new User();
      user1.setLastName("7");
      User user4 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.9937684646496776
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      user0.setPassword(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("$Zig`\"_vM~@3y/^");
      derivedVariable1.setName(" :");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.setAvailability("variable.cleaningStatus.label");
      user0.setLastName("");
      derivedVariable0.getValueLabels();
      User user1 = new User("variable.cleaningStatus.label", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.cleaningStatus.label", derivedVariable1.getAvailability());
      assertEquals("$Zig`\"_vM~@3y/^", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.6532776940660585
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("d~rrwvj&hl8+I", ":/[7aLy");
      user0.setFirstName("#PlT{mpqi_:kXIh)e");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.alias.label", ")@H");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "<1r'31<e", "d~rrwvj&hl8+I");
      macawChangeEventArray0[0] = macawChangeEvent1;
      macawChangeEventArray0[1] = macawChangeEvent1;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      macawChangeEvent0.setChangeType(changeEventType1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      arrayList0.add(macawChangeEvent0);
      user0.setCity("D\";Q ]`]=lpuLoVnUc7");
      User user1 = new User(":/[7aLy", "d~rrwvj&hl8+I");
      assertEquals("", user1.getPostCode());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.939156224493366
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1(" :");
      user0.setPassword("B/v\" ~N.UCz]");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName(" :");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setAvailability((String) null);
      derivedVariable1.getForm();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.841014681917114
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("jDQX7Z-Rv>&6];n`");
      User user0 = new User(".|Mo3)[dA#(WH", (String) null);
      user0.setAddressLine1("jDQX7Z-Rv>&6];n`");
      User user1 = new User("jDQX7Z-Rv>&6];n`", ".|Mo3)[dA#(WH");
      user0.setAddressLine2("jDQX7Z-Rv>&6];n`");
      User user2 = new User();
      User user3 = new User((String) null, ".|Mo3)[dA#(WH");
      User user4 = new User();
      User.detectFieldChanges(user3, user4, user1);
      user2.setPassword("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, macawChangeEvent0.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"jDQX7Z-Rv>&6];n`\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      derivedVariable0.getDisplayName();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals(0, arrayList0.size());
      
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.0881652893601585
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPhone("MISSING_DISPLAY_LIST_SELECTOR");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("");
      valueLabel1.setLabel("");
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      derivedVariable1.setIdentifier(162);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName(":D/?[7aLy");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable1, rawVariable0);
      derivedVariable1.getName();
      assertEquals(162, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.0816763158463067
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setFilePath("");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      user0.setPassword("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getValueLabels();
      User user1 = new User("", "");
      user1.setLastName("UNABLE_TO_GET_CATEGORY");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("");
      ontologyTerm0.clone();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.validateFields(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.549202465820362
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("general.error.invalidEmail");
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getSupportingDocuments();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.087411089192162
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.setAvailability(" :");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      ontologyTerm0.setNameSpace("nD@7@Eu(p;H_");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      user0.setCounty(" :");
      User user1 = new User();
      user1.setCounty("$P7tZ%");
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.2499978052210357
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("dq,x");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setAvailability("qB>2EG17z");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel1);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel1);
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("dq,x");
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.setCoded(true);
      rawVariable0.setIdentifier((-93));
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.isCoded();
      rawVariable0.createVariableSummary();
      assertEquals("qB>2EG17z", rawVariable0.getAvailability());
      
      DerivedVariable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.485215761775983
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      User user0 = new User("`~O.7EyZ;/", "`~O.7EyZ;/");
      user0.setAddressLine1("`~O.7EyZ;/");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("$Zig`\"vM~@3y/^");
      user0.setPassword(" :");
      user0.setAffiliation(" :");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName(" :");
      ChangeEventType changeEventType0 = ChangeEventType.ONTOLOGY_TERM;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "DUPLICATE_ONTOLOGY_TERM_ASSOCIATION", "`~O.7EyZ;/");
      ChangeEventType changeEventType1 = ChangeEventType.USER;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "<", "variable.isCoded.label");
      ChangeEventType changeEventType2 = ChangeEventType.SUPPORTING_DOCUMENT;
      macawChangeEvent0.setChangeType(changeEventType2);
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent2);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \" :\" to \"{3}\".", macawChangeEvent2.getChangeMessage());
      assertEquals(0, macawChangeEvent2.getChangedObjectIdentifier());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      System.setCurrentTimeMillis(4773L);
      Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.891873861112106
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      supportingDocument0.setDescription(">R^ c^WXOWox=o");
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm(">R^ c^WXOWox=o");
      supportingDocument1.setDocumentCode("");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.iterator();
      Predicate<SupportingDocument> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      arrayList2.removeIf(predicate0);
      supportingDocument0.setTitle(">R^ c^WXOWox=o");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList2.containsAll(linkedList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      String string0 = derivedVariable0.getCleaningStatus();
      assertEquals("Unknown", string0);
      
      rawVariable1.getAlias();
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1499732228295376
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "D\";Q ]`]=puLoVnUc7", "D\";Q ]`]=puLoVnUc7");
      macawChangeEvent0.setChangeType(changeEventType1);
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent4);
      assertEquals(0, (int)macawChangeEvent4.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      
      ArrayList<MacawChangeEvent> arrayList0 = ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList0.add(macawChangeEvent1);
      arrayList0.add(macawChangeEvent2);
      arrayList0.add(macawChangeEvent2);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity(1447);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.retainAll(arrayList0);
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList1);
      Object object0 = new Object();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getAvailability();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7155910247819453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.alias.label");
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("d~rrwvj&hl8+I", ":D/?[7aLy");
      user0.setFirstName("#PlT{mpqi_:kXIh)e");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.alias.label", ")@H");
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      macawChangeEventArray0[0] = macawChangeEvent0;
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "variable.questionNumber.label", "variable.alias.label");
      ChangeEventType changeEventType2 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType2, ":D/?[7aLy", "!niU+Qcfv");
      macawChangeEvent2.setChangeType(changeEventType1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, (Variable) null);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity((-1110));
      rawVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setTerm("r#X_F>A)bpdc;zA=^~");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setOntologyName("-KT9k:um[lZJ)1>BG%V");
      assertNotSame(ontologyTerm1, ontologyTerm0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.3451614688224818
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.951362213054323
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNameSpace((String) null);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setCodeBookNumber("variable.alternativeVariable.label");
      rawVariable1.setColumnStart("\"!Hje-yxXL+");
      rawVariable1.getValueLabels();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(true);
      rawVariable0.getForm();
      rawVariable1.getLabel();
      rawVariable1.clone();
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory((String) null);
      supportingDocument0.setFilePath("variable.alternativeVariable.label");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(true);
      rawVariable1.setIdentifier(1798);
      // Undeclared exception!
      try { 
        rawVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6900035860479434
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      User user0 = new User("`~O.7EyZ;/", "`~O.7EyZ;/");
      user0.setAddressLine1("`~O.7EyZ;/");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("$Zig`\"vM~@3y/^");
      user0.setPassword("variable.name.label");
      user0.setAffiliation("variable.name.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("variable.name.label");
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType1 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType1, "nBg", "vt7BdaCvBXrjj");
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "vt7BdaCvBXrjj", "vt7BdaCvBXrjj");
      macawChangeEvent0.setChangeType(changeEventType0);
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.createVariableSummary();
      arrayList0.add(macawChangeEvent2);
      assertEquals("variable.name.label", derivedVariable0.getDisplayName());
      
      arrayList0.ensureCapacity((-1831));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      ArrayList<Variable> arrayList0 = null;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.8960598043476304
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = null;
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.clear();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      arrayList1.remove((Object) derivedVariable2);
      arrayList1.parallelStream();
      derivedVariable1.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable1.setYear((String) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable1.setAvailability("F^j");
      rawVariable0.getYear();
      derivedVariable1.getYear();
      derivedVariable1.setNotes("");
      derivedVariable1.removeSourceVariable(rawVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.setCodeBookNumber("jDQX7Z-Rv>&6];n`");
      derivedVariable1.getOntologyTerms();
      derivedVariable1.clone();
      assertEquals("F^j", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("macaw.businessLayer.OntologyTerm");
      supportingDocument1.setFileName("DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      supportingDocument1.setDescription("");
      arrayList1.add(supportingDocument1);
      rawVariable0.setCoded(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.isCoded();
      rawVariable0.createVariableSummary();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.2187519269826286
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      derivedVariable0.setColumnStart("jDQX7Z-Rv>&6];n`");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPhone("MISSING_DISPLAY_LIST_SELECTOR");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("");
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.setName(":D/?[7aLy");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable1, rawVariable0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getOntologyTerms();
      assertEquals("jDQX7Z-Rv>&6];n`", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.775991592123236
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      User user1 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.detectFieldChanges(user1, rawVariable0, valueLabel2, valueLabel2);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.addAll(0, (Collection<? extends ValueLabel>) arrayList0);
      arrayList1.add(valueLabel0);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList1.add(valueLabel4);
      derivedVariable0.setCodeBookNumber("jDQX7Z-Rv>&6];n`");
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      derivedVariable1.clone();
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.getValueLabels();
      User user2 = new User("general.fieldValue.blank", "jDQX7Z-Rv>&6];n`");
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable1, derivedVariable1);
      derivedVariable0.setSourceVariables(arrayList2);
      assertEquals("jDQX7Z-Rv>&6];n`", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0559606202421703
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.clear();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList2);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      Variable.validateFields(derivedVariable0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.parallelStream();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList3);
      derivedVariable1.setYear("Y{\"eA<");
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      rawVariable0.getYear();
      derivedVariable0.getYear();
      derivedVariable0.setNotes("T[#uz\"#({Sepkq]");
      derivedVariable1.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(derivedVariable0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList4 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList4);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable1.createVariableSummary();
      assertEquals("Y{\"eA<", derivedVariable1.getYear());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.056794996545883
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.clear();
      derivedVariable0.removeSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      Variable.validateFields(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.parallelStream();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable2.setYear("4V0!%TD");
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable0);
      derivedVariable0.setAvailability("4V0!%TD");
      rawVariable1.getYear();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getYear();
      derivedVariable0.setNotes("=Kog-ywx%gnaRt");
      derivedVariable2.removeSourceVariable(derivedVariable0);
      derivedVariable3.addSourceVariable(rawVariable1);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = rawVariable1.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("4V0!%TD", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5340880081128856
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm1.setIdentifier((-1786));
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      Object object0 = ontologyTerm1.clone();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("macaw.businessLayer.Variable");
      OntologyTerm.validateFields(ontologyTerm2);
      arrayList0.add((OntologyTerm) object0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      arrayList1.add(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription("macaw.businessLayer.OntologyTerm");
      supportingDocument2.setDescription("");
      arrayList1.add(supportingDocument2);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      arrayList1.containsAll(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      rawVariable0.setAvailability("");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      rawVariable0.isNewRecord();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setCategory("jDQX7Z-Rv>&6];n`");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFilePath("variable.year.label");
      supportingDocument0.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(true);
      rawVariable0.setIdentifier(1798);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.isCoded();
      rawVariable0.createVariableSummary();
      assertEquals("jDQX7Z-Rv>&6];n`", rawVariable0.getCategory());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription(">R^ c^WXOWox=o");
      rawVariable0.addSupportingDocument(supportingDocument2);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      ontologyTerm2.setTerm(">R^ c^WXOWox=o");
      supportingDocument2.setDocumentCode("");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean1 = rawVariable1.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.iterator();
      Predicate<SupportingDocument> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      arrayList1.removeIf(predicate0);
      supportingDocument0.setTitle(">R^ c^WXOWox=o");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList1.containsAll(linkedList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      String string0 = "3FNo=qRbjZYxUd-V,l";
      Date date0 = macawChangeEvent1.getDate();
      macawChangeEvent1.setDate(date0);
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.6730609401070997
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      rawVariable0.removeOntologyTerms(arrayList0);
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(795);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable2 = new RawVariable();
      Object object0 = new Object();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.1499732228295376
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "D\";Q ]`]=puLoVnUc7", "D\";Q ]`]=puLoVnUc7");
      macawChangeEvent0.setChangeType(changeEventType1);
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent4);
      assertEquals(0, macawChangeEvent4.getChangedObjectIdentifier());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      
      ArrayList<MacawChangeEvent> arrayList0 = ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList0.add(macawChangeEvent1);
      arrayList0.add(macawChangeEvent2);
      arrayList0.add(macawChangeEvent2);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity(1447);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.retainAll(arrayList0);
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.removeSourceVariables(arrayList1);
      Object object0 = new Object();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.getColumnStart();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.7996401652201204
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("Zr\"Ohw");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription(">R^ c^WXOWox=o");
      rawVariable0.addSupportingDocument(supportingDocument2);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setTitle("Zr\"Ohw");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = rawVariable1.getSupportingDocuments();
      arrayList3.add(supportingDocument0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList3.containsAll(linkedList0);
      ArrayList<SupportingDocument> arrayList4 = rawVariable1.getSupportingDocuments();
      arrayList2.containsAll(arrayList4);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable2.isCoded());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertFalse(rawVariable2.isNewRecord());
      assertFalse(rawVariable2.isCleaned());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.866048147971314
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      derivedVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      int int0 = (-773);
      derivedVariable0.setIdentifier((-773));
      derivedVariable0.getColumnEnd();
      derivedVariable0.setCleaningStatus("");
      derivedVariable0.setCodeBookNumber("variable.isCleaned.saveChanges.changedToNotClean");
      derivedVariable0.columnEnd = "";
      derivedVariable0.getValueLabels();
      derivedVariable0.clone();
      derivedVariable0.getCodeBookNumber();
      System.setCurrentTimeMillis((-773));
      derivedVariable0.getNotes();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.8298826707515063
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      supportingDocument0.setDescription(">R^ c^WXOWox=o");
      rawVariable0.addSupportingDocument(supportingDocument0);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm(">R^ c^WXOWox=o");
      supportingDocument1.setDocumentCode("");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertTrue(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.iterator();
      Predicate<SupportingDocument> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      arrayList2.removeIf(predicate0);
      supportingDocument0.setTitle(">R^ c^WXOWox=o");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList2.add(supportingDocument0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList2.containsAll(linkedList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      derivedVariable0.isNewRecord();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isNewRecord());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      User user0 = new User("=message==", "=message==");
      user0.setAffiliation("Y{\"eA<");
      user0.setAddressLine2("=message==");
      User.checkValidUserIDField("");
      user0.setLastName(":7R,/Z>WInq8+8zwDG");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "general.fieldValue.unknown";
      derivedVariable0.setQuestionNumber("general.fieldValue.unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setIdentifier((-795));
      valueLabel1.clone();
      int int0 = 0;
      valueLabel1.clone();
      User user0 = new User();
      user0.setStatus("general.fieldValue.unknown");
      arrayList0.add(valueLabel1);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel1);
      int int1 = 1;
      // Undeclared exception!
      try { 
        derivedVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      derivedVariable0.getSourceVariables();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(0L);
      rawVariable0.getQuestionNumber();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.7576777138078366
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      User user1 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel0, valueLabel1);
      ArrayList<ValueLabel> arrayList1 = rawVariable1.getValueLabels();
      arrayList1.addAll(0, (Collection<? extends ValueLabel>) arrayList0);
      arrayList0.add(valueLabel2);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList1.add(valueLabel4);
      derivedVariable0.setValueLabels(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd(" :");
      derivedVariable1.createVariableSummary();
      assertEquals(" :", derivedVariable1.getColumnEnd());
      
      derivedVariable0.clone();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getValueLabels();
      User user2 = new User(";B0#Si", "d@Dk8NQG");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.0882324801147107
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setPhone("MISSING_DISPLAY_LIST_SELECTOR");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setValue("");
      arrayList0.add(valueLabel0);
      ValueLabel.detectFieldChanges(user1, derivedVariable0, valueLabel1, valueLabel0);
      arrayList0.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      arrayList0.add(valueLabel2);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.setName(":D/?[7aLy");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable1, rawVariable0);
      assertEquals(":D/?[7aLy", derivedVariable1.getName());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.6431654389749966
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType3 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType3, "D\";Q ]`]=puLoVnUc7", "D\";Q ]`]=puLoVnUc7");
      macawChangeEvent0.setChangeType(changeEventType2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      User user2 = new User("variable.cleaningStatus.label", "i}iR*F");
      user2.setCounty("general.fieldValue.blank");
      User user3 = new User();
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.2218544163289855
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.SUPPORTING_DOCUMENT;
      macawChangeEvent0.setChangeType(changeEventType0);
      ChangeEventType changeEventType1 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "`U", "blank");
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType2, "`U", "variable.cleaningStatus.label");
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent3);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent3.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent3.getVariableOwnerID());
      
      User user2 = new User();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList1.sort(comparator0);
      derivedVariable1.getForm();
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.5829958739835517
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ontologyTerm0.setTerm((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument0);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ArrayList<OntologyTerm> arrayList3 = rawVariable0.getOntologyTerms();
      arrayList2.containsAll(arrayList3);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable2.removeOntologyTerm(ontologyTerm3);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.651037871343286
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("<");
      user0.setAffiliation("<");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable1.setName("<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User("", "!niU+Qcfv");
      User user2 = new User();
      user0.setLastName((String) null);
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      user5.setEmail("macaw.businessLayer.ValueLabel");
      user5.setCounty("fsh");
      user5.setCounty("lan8k");
      User user6 = new User((String) null, (String) null);
      User user7 = new User();
      user7.setCity("L&IBF1~\"_");
      derivedVariable0.getName();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getLabel();
      assertEquals("<", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.9406601470607923
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setForm("");
      derivedVariable0.columnEnd = "";
      Variable.validateFields(derivedVariable0);
      rawVariable0.setName("x|!:Vaqe");
      derivedVariable0.setCategory("1{Yhto:'Vn ");
      derivedVariable0.removeSourceVariable(rawVariable0);
      Variable.validateFields(derivedVariable0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setIsNewRecord(false);
      derivedVariable0.setAlias("qPU`rPn40vajU96P<=");
      derivedVariable0.getName();
      rawVariable0.getColumnEnd();
      rawVariable0.setFilePath((String) null);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      derivedVariable0.setCleaningDescription((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier(1);
      derivedVariable0.getIdentifier();
      derivedVariable0.setColumnEnd((String) null);
      derivedVariable0.setIdentifier(597);
      RawVariable.validateFields(rawVariable0);
      derivedVariable0.setLabel("x|!:Vaqe");
      derivedVariable0.getLabel();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setLabel("x|!:Vaqe");
      derivedVariable0.clone();
      derivedVariable1.getOntologyTerms();
      assertEquals(597, derivedVariable0.getIdentifier());
      assertEquals("x|!:Vaqe", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.1072258301481446
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      Object object0 = ontologyTerm0.clone();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setTerm("]aS%$x=a]");
      ontologyTerm1.setTerm("macaw.businessLayer.Variable");
      OntologyTerm.validateFields(ontologyTerm1);
      arrayList0.add((OntologyTerm) object0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setDescription("macaw.businessLayer.OntologyTerm");
      supportingDocument3.setDescription("");
      arrayList1.add(supportingDocument3);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      arrayList1.containsAll(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getFilePath());
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.7240126573199914
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.cloneAttributes(derivedVariable0);
      rawVariable0.setCodeBookNumber("d~rrwvj&hl8+I");
      User user0 = new User("d~rrwvj&hl8+I", ":D/?[7aLy");
      user0.setFirstName("#PlT{mpqi_:kXIh)e");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      arrayList0.trimToSize();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.saeChanges.valueChanged", "dKw'!i(]C<-Od");
      macawChangeEventArray0[1] = macawChangeEvent0;
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      arrayList0.ensureCapacity((-1159));
      rawVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.6000899182080524
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "variable.codeBookNumber.label";
      derivedVariable0.setLabel(",J1ZJ,@&:L9+\"|BQH`");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.columnStart = "DUPLICATE_DOCUMENT_ASSOCIATION";
      derivedVariable0.clone();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.727040156538989
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("jDQX7Z-Rv>&6];n`");
      User user0 = new User();
      user0.setFirstName("macaw.businessLayer.Variable");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ".|Mo3)[dA#(WH");
      ChangeEventType changeEventType1 = ChangeEventType.ONTOLOGY_TERM;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "pr'M0`Y6sGQ:2u", "pr'M0`Y6sGQ:2u");
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "variable.saveChanges.valueChanged", "variable.saveChanges.valueChanged");
      macawChangeEvent1.setChangeType(changeEventType1);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType0, "pr'M0`Y6sGQ:2u", "variable.saveChanges.valueChanged");
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      arrayList0.add(macawChangeEvent4);
      arrayList0.ensureCapacity(1);
      assertEquals("jDQX7Z-Rv>&6];n`", derivedVariable0.getName());
      
      rawVariable0.getDisplayName();
      DerivedVariable.validateFields(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.5870362780239557
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>(795);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      ZoneId.getAvailableZoneIds();
      arrayList4.containsAll(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.addSupportingDocuments(arrayList4);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.removeOntologyTerm(ontologyTerm3);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User(".By!7V2A;{", ".By!7V2A;{");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.626353989714031
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      user0.setStatus((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDHQX7Z-Cv>&6];n`", ">Sw");
      Date date0 = macawChangeEvent1.getDate();
      macawChangeEvent1.setDate(date0);
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "~7|5>sqH-IP,.%nFl", (String) null);
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "Dl}UiA5Q\"$~-", "macaw.businessLayer.Variable");
      ChangeEventType changeEventType3 = ChangeEventType.VARIABLE;
      macawChangeEvent2.setChangeType(changeEventType3);
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent4.getVariableOwnerID());
      assertNotNull(macawChangeEvent4);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      System.setCurrentTimeMillis(1L);
      rawVariable0.getName();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.751600964276225
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("d~rrwvj&hl8+I", "variable.label.label");
      rawVariable0.createVariableSummary();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      arrayList0.trimToSize();
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "<1r'31<e", "d~rrwvj&hl8+I");
      macawChangeEventArray0[0] = macawChangeEvent1;
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "varable.saeChanges.valueChanged", "dKw'!i(]C<-Od");
      macawChangeEventArray0[1] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      macawChangeEvent0.setChangeType(changeEventType0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity((-1170));
      rawVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      derivedVariable0.getColumnEnd();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2141739247775263
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, (String) null, "");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      macawChangeEvent0.setChangeType(changeEventType1);
      rawVariable0.setCleaningDescription("");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType2, ">Sw", "6?n-g)?{.jF\u0007");
      macawChangeEvent1.getDate();
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType0, (String) null, "6?n-g)?{.jF\u0007");
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent((ChangeEventType) null, "!SH`np2.", "!SH`np2.");
      ChangeEventType changeEventType3 = ChangeEventType.ONTOLOGY_TERM;
      macawChangeEvent0.setChangeType(changeEventType3);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable1);
      arrayList0.add((Variable) rawVariable1);
      derivedVariable0.removeSourceVariables(arrayList0);
      MacawChangeEvent macawChangeEvent5 = new MacawChangeEvent();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.8412563153591823
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "y", "variable.cleaningStatus.label");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType2 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "Ls%dJY*:HpTrf&NT]Re", "Ls%dJY*:HpTrf&NT]Re");
      macawChangeEvent0.setChangeType(changeEventType1);
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      assertNotNull(macawChangeEvent4);
      assertEquals(0, macawChangeEvent4.getChangedObjectIdentifier());
      
      ArrayList<MacawChangeEvent> arrayList0 = ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      arrayList0.add(macawChangeEvent3);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity(1447);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.retainAll(arrayList0);
      arrayList1.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList1);
      Object object0 = new Object();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList2.isEmpty());
      assertFalse(derivedVariable1.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.8935147911123833
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setAddressLine1("");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("$Zig`\"vM~@3y/^");
      User user1 = new User("$Zig`\"vM~@3y/^", "user.county.saveChanges");
      user1.setStatus("trN*'cr");
      user0.setPassword("}kxSAI(U@`{");
      user0.setCity("<");
      user1.setAffiliation("");
      derivedVariable0.setCategory("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      user2.setAddressLine1((String) null);
      derivedVariable1.setCleaningDescription("f");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      User user3 = new User();
      User user4 = new User("", "");
      User user5 = new User();
      user5.setAddressLine2("general.fieldValue.blank");
      user1.setLastName("oWoU");
      User user6 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable2);
      User user7 = new User();
      user6.setCity("`bf*w");
      User user8 = new User();
      assertEquals("", user8.getLastName());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.920645806499214
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", "~7|5>sqH-IP,.%nFl");
      Date date0 = macawChangeEvent1.getDate();
      macawChangeEvent1.setDate(date0);
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "j`M2bm 0Bvs", "jDQX7Z-Rv>&6];n`");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "jDQX7Z-Rv>&6];n`", "jDQX7Z-Rv>&6];n`");
      macawChangeEvent3.setUserID("Ocx4[");
      macawChangeEvent3.setChangeType(changeEventType0);
      derivedVariable0.notes = "dd-^ <^";
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      ChangeEventType changeEventType3 = ChangeEventType.ALIAS_FILE_PATH;
      macawChangeEvent4.setChangeType(changeEventType3);
      MacawChangeEvent macawChangeEvent5 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<MacawChangeEvent> arrayList0 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.add(macawChangeEvent5);
      ArrayList<MacawChangeEvent> arrayList1 = new ArrayList<MacawChangeEvent>();
      arrayList1.ensureCapacity(1655);
      rawVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.4574653869995418
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ontologyTerm0.setTerm("jDQX7Z-Rv>&6];n`");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList2);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setOntologyName((String) null);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCoded(false);
      String string0 = "general.error.invalidEmail";
      derivedVariable0.setFilePath("general.error.invalidEmail");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAvailability("variable.cleaningDescription.label");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      derivedVariable0.setCodeBookNumber("general.error.invalidEmail");
      supportingDocument0.getDisplayName();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.getFilePath();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList0.listIterator(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.8331547833861124
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User("", "macaw.businessLayer.OntologyTerm");
      ontologyTerm0.setIdentifier((-1786));
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("variable.saveChanges.valueChanged");
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("variable.saveChanges.valueChanged");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(5);
      ontologyTerm0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      arrayList1.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("jDQX7Z-Rv>&6];n`");
      supportingDocument1.setDescription("");
      arrayList1.add(supportingDocument1);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList2);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getFilePath();
      assertEquals("variable.saveChanges.valueChanged", rawVariable0.getQuestionNumber());
      
      rawVariable1.getOntologyTerms();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.820446100890503
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      User user1 = new User();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.detectFieldChanges(user1, rawVariable0, valueLabel2, valueLabel2);
      ArrayList<ValueLabel> arrayList1 = rawVariable0.getValueLabels();
      arrayList1.addAll(0, (Collection<? extends ValueLabel>) arrayList0);
      arrayList1.add(valueLabel0);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      arrayList1.add(valueLabel4);
      derivedVariable0.setValueLabels(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable0.createVariableSummary();
      derivedVariable1.clone();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.getValueLabels();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, derivedVariable1);
      derivedVariable1.getFilePath();
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("", derivedVariable1.getName());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.324481088886851
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.2848072830582153
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", "~7|5>sqH-IP,.%nFl");
      Date date0 = macawChangeEvent1.getDate();
      macawChangeEvent1.setDate(date0);
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "j`M2bm 0Bvs", "jDQX7Z-Rv>&6];n`");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "jDQX7Z-Rv>&6];n`", "jDQX7Z-Rv>&6];n`");
      macawChangeEvent3.setUserID("Ocx4[");
      macawChangeEvent3.setChangeType(changeEventType0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User("Ls%dJY*:HpTrf&NT]Re", "jDQX7Z-Rv>&6];n`");
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      assertNotNull(macawChangeEvent4);
      assertEquals(0, macawChangeEvent4.getChangedObjectIdentifier());
      
      User user3 = new User();
      System.setCurrentTimeMillis(1L);
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6959173559930947
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIsNewRecord(true);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setDescription(">R^ c^WXOWox=o");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel(">R^ c^WXOWox=o");
      ontologyTerm2.setTerm(">R^ c^WXOWox=o");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm3);
      assertEquals(">R^ c^WXOWox=o", rawVariable1.getLabel());
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      Predicate<SupportingDocument> predicate0 = Predicate.isEqual((Object) ontologyTerm0);
      arrayList2.removeIf(predicate0);
      supportingDocument0.setTitle(">R^ c^WXOWox=o");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList2.add(supportingDocument2);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList2.containsAll(linkedList0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.8314417011158293
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("jDQX7Z-Rv>&6];n`", "jDQX7Z-Rv>&6];n`");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument2);
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      supportingDocument0.setDocumentCode("jDQX7Z-Rv>&6];n`");
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      boolean boolean0 = derivedVariable0.isCoded();
      supportingDocument0.setFilePath("jDQX7Z-Rv>&6];n`");
      derivedVariable0.getAlias();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getValueLabels();
      boolean boolean1 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean1 == boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "[Ro8tHxaL/=z {+w";
      rawVariable0.form = "}kxSAI(U@`{";
      User user0 = new User();
      user0.setCity("[Ro8tHxaL/=z {+w");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      String string0 = rawVariable0.getCodeBookNumber();
      assertEquals("", string0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.663365148739794
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setQuestionNumber("");
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNameSpace("");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setForm("Y]XXgI3-xa2j~ob");
      derivedVariable2.removeSourceVariable(derivedVariable0);
      assertEquals("Y]XXgI3-xa2j~ob", derivedVariable2.getForm());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.7166815169145297
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.setAvailability(" :");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNameSpace("nD@7@Eu(p;H_");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.3511604142318068
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "~7|5>sqH-IP,.%nFl", "Nuu+N");
      Date date0 = macawChangeEvent1.getDate();
      macawChangeEvent0.setDate(date0);
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, (String) null, (String) null);
      ChangeEventType changeEventType2 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "3FNo=qRbjZYxUd-V,l", "4r@.E*u");
      rawVariable0.setQuestionNumber("4r@.E*u");
      macawChangeEvent1.setUserID("Nuu+N");
      macawChangeEvent3.setChangeType(changeEventType2);
      derivedVariable0.createVariableSummary();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      User user2 = new User((String) null, "jDQX7Z-Rv>&6];n`");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      User user3 = new User();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.8938546574316315
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      user1.setAddressLine1("");
      User user2 = new User("", ":D/?[7aLy");
      user1.setAddressLine1("=gv?2cDD(up6)d4yxX<");
      user2.setStatus("!niU+Qcfv");
      user2.setPassword(":D/?[7aLy");
      user1.setAffiliation(":D/?[7aLy");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.setName("u-o:K Px=o");
      User user3 = new User("!niU+Qcfv", "");
      DerivedVariable.detectFieldChanges(user3, derivedVariable0, derivedVariable2);
      assertEquals("u-o:K Px=o", derivedVariable0.getDisplayName());
      
      User.detectFieldChanges(user1, user3, user2);
      User user4 = new User("=gv?2cDD(up6)d4yxX<", "");
      User user5 = new User();
      user3.setLastName("u-o:K Px=o");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      user2.setCounty("=gv?2cDD(up6)d4yxX<");
      user4.setCounty("u-o:K Px=o");
      User user9 = new User(":D/?[7aLy", "u-o:K Px=o");
      User user10 = new User();
      user6.setCity("5vdVBp");
      System.setCurrentTimeMillis(0L);
      derivedVariable2.getName();
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.iterator();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("tb/c");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User("H5up:dbbcG", "UNABLE_TO_GET_RAW_VARIABLE");
      User user2 = new User();
      user2.setLastName("k[X!p");
      User user3 = new User();
      User user4 = new User();
      user4.setEmail("\\,mjO#326yT!");
      user4.setPassword(" :");
      user1.setUserID("Z");
      User user5 = new User();
      User user6 = new User();
      user3.setCity("H5up:dbbcG");
      User user7 = new User();
      assertEquals("", user7.getLastName());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.286445284696217
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      Date date0 = macawChangeEvent1.getDate();
      macawChangeEvent1.setDate(date0);
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType1, "j`M2bm 0Bvs", "jDQX7Z-Rv>&6];n`");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent(changeEventType2, "jDQX7Z-Rv>&6];n`", "jDQX7Z-Rv>&6];n`");
      macawChangeEvent4.setUserID("Ocx4[");
      macawChangeEvent4.setChangeType(changeEventType0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.createVariableSummary();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.removeSupportingDocument(supportingDocument0);
      User user2 = new User("Ls%dJY*:HpTrf&NT]Re", "jDQX7Z-Rv>&6];n`");
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      User user3 = new User();
      user3.setCity("O?SXNx");
      User user4 = new User();
      assertEquals("UNVERIFIED", user4.getStatus());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.7267757811259026
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setAddressLine1("");
      Variable.validateFields(derivedVariable0);
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("<");
      user0.setAffiliation("<");
      derivedVariable0.setName("<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      User user1 = new User("", "!niU+Qcfv");
      User user2 = new User();
      user0.setLastName((String) null);
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      user5.setCounty("fsh");
      user5.setCounty("lan8k");
      User user6 = new User((String) null, (String) null);
      User user7 = new User();
      user7.setCity("L&IBF1~\"_");
      System.setCurrentTimeMillis(454L);
      derivedVariable0.getName();
      assertEquals("<", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.7386800526124166
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = (ValueLabel)valueLabel0.clone();
      user0.setCounty("jDQX7Z-Rv>&6];n`");
      ValueLabel valueLabel3 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      valueLabel2.setMissingValue(false);
      ValueLabel.validateFields(valueLabel2);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      arrayList1.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnEnd("jDQX7Z-Rv>&6];n`");
      derivedVariable1.createVariableSummary();
      derivedVariable1.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User();
      User user2 = new User("y{|YA'^viWm>]`/GOJC", "UNABLE_TO_GET_ALTERNATIVE_VARIABLE");
      User user3 = new User("b", "variable.saveChanges.valueChanged");
      user3.setCounty("$Zig`\"_vM~@3y/^");
      User user4 = new User();
      try { 
        User.validateFields(user1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.6601285432932786
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("jDQX7Z-Rv>&6];n`");
      User user0 = new User(".|Mo3)[dA#(WH", "1r'31e");
      user0.setPassword("1r'31e");
      User user1 = new User("1r'31e", ";U");
      user1.setAffiliation("1r'31e");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setName("1r'31e");
      DerivedVariable.detectFieldChanges(user1, derivedVariable1, derivedVariable0);
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      derivedVariable0.setCleaningDescription("%eXNM?pOS");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.availability.label", "_2Er5_~gi7V|}yW");
      user1.setFirstName(".|Mo3)[dA#(WH");
      User user2 = new User("zmF(", "zmF(");
      user0.setLastName("variable.cleaningDescription.label");
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable1, derivedVariable1);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable2);
      DerivedVariable.detectFieldChanges(user2, derivedVariable1, derivedVariable1);
      System.setCurrentTimeMillis(0L);
      derivedVariable1.getName();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable2);
      System.setCurrentTimeMillis((-250L));
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.6600033476751253
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      user0.setPassword("$Zig`\"_vM~@3y/^");
      user0.setPassword(" :");
      user0.setAffiliation(" :");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName(" :");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      derivedVariable0.setCleaned(false);
      derivedVariable1.setYear("jDQX7Z-Rv>&6];n`");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "zmF(", "_2Er5_~gi7V|}yW");
      User user1 = new User("_2Er5_~gi7V|}yW", "Un(nown");
      User user2 = new User();
      user2.setLastName("_2Er5_~gi7V|}yW");
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, derivedVariable0, derivedVariable1);
      derivedVariable0.removeSourceVariable(derivedVariable1);
      user2.setPostCode("");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable2);
      DerivedVariable.detectFieldChanges(user2, derivedVariable2, derivedVariable1);
      assertEquals(" :", derivedVariable1.getDisplayName());
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.7043073807448175
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      derivedVariable0.removeSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User((String) null, (String) null);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel2, valueLabel1);
      valueLabel1.setLabel("variable.year.label");
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.getDisplayName();
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setCoded(false);
      derivedVariable0.setCategory("");
      derivedVariable0.setCleaningStatus("0pTL");
      derivedVariable0.isCleaned();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("variable.columnStart.label");
      rawVariable0.clone();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("0pTL", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setNotes("variable.cleaningStatus.label");
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5519610865100177
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      rawVariable0.setFilePath("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(1242);
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      assertEquals("UNABLE_TO_DELETE_DERIVED_VARIABLE", rawVariable0.getFilePath());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("RWE~V>iC|");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.7843216803944486
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      User user0 = new User();
      user0.setPassword("L&IBF1~\"_");
      user0.setPostCode("sjS;|/r e8J");
      user0.setCity("variable.alias.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setCounty("LXeWgK`=M");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.questionNumber = "sjS;|/r e8J";
      rawVariable0.addValueLabel((ValueLabel) null);
      rawVariable0.setAlias("sjS;|/r e8J");
      derivedVariable0.containsSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable1);
      Variable.validateFields(rawVariable0);
      Variable.validateFields(rawVariable0);
      derivedVariable0.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.460685998915806
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("Ls%dJY*:HpTrf&NT]Re");
      User user0 = new User();
      user0.setAddressLine1("");
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("Ls%dJY*:HpTrf&NT]Re", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.045072710119431
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "3FNo=qRbjZYxUd-V,l", "variable.cleaningStatus.label");
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      ChangeEventType changeEventType3 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType3, "D\";Q ]`]=puLoVnUc7", "D\";Q ]`]=puLoVnUc7");
      macawChangeEvent0.setChangeType(changeEventType2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.createVariableSummary();
      User user1 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      User user2 = new User();
      User user3 = new User("x2!qM5", "D\";Q ]`]=puLoVnUc7");
      user2.setStatus("*w78A|29w");
      user1.setCounty("x2!qM5");
      rawVariable0.setCodeBookNumber("variable.availability.label");
      User user4 = new User();
      try { 
        User.validateFields(user2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.7263010561152075
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.alias.label");
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("variable.alias.label", ":D/?[7aLy");
      rawVariable0.columnStart = ":D/?[7aLy";
      user0.setFirstName("#PlT{mpqi_:kXIh)e");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.alias.label", ")@H");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "variable.alias.label", "variable.alias.label");
      macawChangeEventArray0[0] = macawChangeEvent1;
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType2, "variable.saveChanges.valueChanged", "D\";Q ]`]=puLoVnUc7");
      macawChangeEventArray0[1] = macawChangeEvent2;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEvent1.setChangeMessage("#PlT{mpqi_:kXIh)e");
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[6] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      macawChangeEvent0.setChangeType(changeEventType1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity((-1672));
      rawVariable0.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.97379553867689
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      user0.setAddressLine1("X7p(zc$_%~ZmjSR*:");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      User user1 = new User();
      ValueLabel valueLabel1 = new ValueLabel();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      arrayList1.add(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel1, valueLabel2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      Object object0 = new Object();
      arrayList2.remove(object0);
      arrayList2.parallelStream();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable2.removeOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setYear(" :");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable3.hasSameDisplayName(rawVariable1);
      derivedVariable0.setAvailability(" :");
      rawVariable1.getYear();
      derivedVariable0.getYear();
      derivedVariable2.setNotes("X7p(zc$_%~ZmjSR*:");
      derivedVariable1.removeSourceVariable(derivedVariable2);
      derivedVariable2.addSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable2.setCodeBookNumber(" :");
      assertEquals("X7p(zc$_%~ZmjSR*:", derivedVariable2.getNotes());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.7232600276423677
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.trimToSize();
      User user0 = new User(";qUA>~XyC", "");
      ontologyTerm0.setIdentifier((-1968526675));
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("OwPdLIU");
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("h[-f7@~~d^Ek");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      rawVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("OwPdLIU", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "[Ro8tHxaL/=z {+w";
      rawVariable0.form = "}kxSAI(U@`{";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getNotes());
      assertEquals("", rawVariable1.getCodeBookNumber());
      assertFalse(rawVariable1.isCoded());
      assertEquals("}kxSAI(U@`{", rawVariable1.getForm());
      assertEquals("", rawVariable1.getAlias());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("[Ro8tHxaL/=z {+w", rawVariable1.getColumnStart());
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("", rawVariable1.getYear());
      assertEquals("", rawVariable1.getLabel());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getFilePath());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("", rawVariable1.getDisplayName());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.726208484951125
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnEnd("variable.alias.label");
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User("d~rrwvj&hl8+I", ":D/?[7aLy");
      user0.setFirstName("#PlT{mpqi_:kXIh)e");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ChangeEventType changeEventType0 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "variable.alias.label", ")@H");
      ChangeEventType changeEventType1 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[8];
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType1, "<1r'31<e", "d~rrwvj&hl8+I");
      macawChangeEventArray0[0] = macawChangeEvent1;
      ChangeEventType changeEventType2 = ChangeEventType.ALIAS_FILE_PATH;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType2, "variable.saeChanges.valueChanged", "D\";Q ]`]=lpuLoVnUc7");
      macawChangeEventArray0[1] = macawChangeEvent2;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[3] = macawChangeEvent0;
      macawChangeEventArray0[4] = macawChangeEvent0;
      macawChangeEventArray0[5] = macawChangeEvent0;
      macawChangeEventArray0[2] = macawChangeEvent0;
      macawChangeEventArray0[7] = macawChangeEvent0;
      macawChangeEvent0.setChangeType(changeEventType1);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      arrayList0.add(macawChangeEvent0);
      arrayList0.ensureCapacity((-1110));
      rawVariable1.getDisplayName();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setAddressLine1("");
      derivedVariable0.setYear("7/cU");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("<");
      user0.setAffiliation("<");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("<");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User("", "!niU+Qcfv");
      User user2 = new User();
      user0.setLastName((String) null);
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      user5.setCounty("fsh");
      user5.setCounty("lan8k");
      User user6 = new User((String) null, (String) null);
      User user7 = new User();
      user7.setCity("L&IBF1~\"_");
      derivedVariable0.getName();
      assertEquals("7/cU", derivedVariable0.getYear());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.8412563153591823
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("", "");
      user0.setAddressLine1("");
      user0.setStatus("!niU+Qcfv");
      user0.setPassword("$Zig`\"vM~@3y/^");
      User user1 = new User("$Zig`\"vM~@3y/^", "user.county.saveChanges");
      user1.setStatus("trN*'cr");
      user0.setPassword("}kxSAI(U@`{");
      user0.setCity("<");
      user1.setAffiliation("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user2 = new User();
      user2.setAddressLine1((String) null);
      derivedVariable1.setColumnEnd("<");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      User user3 = new User();
      User user4 = new User("", "");
      User user5 = new User();
      user5.setAddressLine2("general.fieldValue.blank");
      user1.setLastName("oWoU");
      User user6 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable2);
      User user7 = new User();
      user6.setCity("`bf*w");
      User user8 = new User();
      System.setCurrentTimeMillis((-1155L));
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.name.label";
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setIdentifier(796);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setColumnEnd("");
      derivedVariable0.setColumnStart("");
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      RawVariable rawVariable0 = new RawVariable();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) rawVariable0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      arrayList0.removeIf(predicate3);
      derivedVariable0.setValueLabels(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.setCategory("mPQ_%*yk!~w,(^");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      user0.setStatus((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      macawChangeEvent1.getDate();
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "~7|5>sqH-IP,.%nFl", (String) null);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent((ChangeEventType) null, "Dl}UiA5Q\"$~-", "macaw.businessLayer.Variable");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      macawChangeEvent2.setChangeType(changeEventType2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setCleaned(true);
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.4553949936248007
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      ontologyTerm0.setTerm((String) null);
      derivedVariable0.setIdentifier(68);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      derivedVariable0.getSourceVariables();
      assertEquals(68, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9374184981444067
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1618));
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      User user0 = new User("yzQo", "jYt");
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      String string0 = "Qx";
      supportingDocument0.setDocumentCode("");
      User user1 = new User("Qx", "variable.cleaningStatus.label");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setCleaned(false);
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.4574653869995418
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.3319345050359193
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>(795);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add((SupportingDocument) null);
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      arrayList1.containsAll(arrayList2);
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      arrayList3.containsAll(arrayList0);
      assertEquals(1, arrayList0.size());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      macawChangeEvent0.setChangeMessage("~7|5>sqH-IP,.%nFl");
      user0.setStatus((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "jDQX7Z-Rv>&6];n`", ">Sw");
      macawChangeEvent1.getDate();
      ChangeEventType changeEventType1 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "~7|5>sqH-IP,.%nFl", (String) null);
      derivedVariable0.removeValueLabel(valueLabel0);
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent((ChangeEventType) null, "Dl}UiA5Q\"$~-", "macaw.businessLayer.Variable");
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      macawChangeEvent2.setChangeType(changeEventType2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent();
      System.setCurrentTimeMillis(1L);
  }
}
