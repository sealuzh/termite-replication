/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 13:04:27 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.Callable;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.GDSException;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3618238305778214
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray0[0] = byteArray1;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceRequestBuffer(335544727);
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(2048, "PURE_JAVA");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      databaseParameterBufferImp0.hasArgument(560);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      fBCachedFetcher0.insertRow(byteArray0);
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.521860342989916
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte) (-14);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte)83;
      byteArray0[7] = (byte) (-4);
      byteArray0[8] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      delayQueue0.toArray();
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      linkedList0.remove((Object) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.relative((byte) (-4));
      fBCachedFetcher0.previous();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5999625723727635
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceRequestBuffer(335544727);
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(2048, ")08#");
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative(1);
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.insertRow(fBResultSet0.row);
      fBCachedFetcher0.isLast();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Locale.setDefault(locale0);
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.JAPAN;
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      Locale locale5 = Locale.TAIWAN;
      Locale locale6 = Locale.TAIWAN;
      locale5.getDisplayName(locale2);
      Locale locale7 = Locale.TRADITIONAL_CHINESE;
      locale7.getDisplayCountry(locale1);
      Locale locale8 = Locale.TRADITIONAL_CHINESE;
      locale4.getDisplayName(locale3);
      Locale locale9 = Locale.ITALIAN;
      Locale locale10 = Locale.ITALIAN;
      locale8.getDisplayCountry(locale10);
      Locale locale11 = Locale.UK;
      locale10.getUnicodeLocaleAttributes();
      locale11.getUnicodeLocaleKeys();
      Locale locale12 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale9);
      Locale locale13 = Locale.SIMPLIFIED_CHINESE;
      Locale locale14 = Locale.ITALIAN;
      locale3.getDisplayScript();
      Locale locale15 = Locale.CANADA;
      Locale locale16 = Locale.ITALY;
      Locale locale17 = Locale.ITALY;
      Locale locale18 = Locale.TAIWAN;
      Locale locale19 = Locale.SIMPLIFIED_CHINESE;
      Locale.setDefault(locale_Category0, locale1);
      Locale.getISOCountries();
      Locale locale20 = Locale.SIMPLIFIED_CHINESE;
      Locale locale21 = Locale.CHINESE;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][3];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)121;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)121;
      byteArray2[1] = (byte)121;
      byteArray2[2] = (byte)121;
      byteArray2[3] = (byte)121;
      byteArray2[4] = (byte)121;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte)121;
      byteArray3[1] = (byte)121;
      byteArray3[2] = (byte)121;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte) (-14);
      byteArray4[1] = (byte)121;
      byteArray4[2] = (byte)121;
      byteArray4[3] = (byte)121;
      byteArray4[4] = (byte)121;
      byteArray4[5] = (byte)121;
      byteArray4[6] = (byte)121;
      byteArray4[7] = (byte)121;
      byteArray0[3] = byteArray4;
      linkedList0.push(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2004);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      delayQueue0.toArray();
      fBCachedFetcher0.insertRow((byte[][]) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "fD}V_dytKXBuSp8(w");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isLast());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.331586453277345
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte) (-14);
      byteArray0[5] = (byte) (-97);
      byteArray0[6] = (byte)83;
      byteArray0[7] = (byte) (-4);
      byteArray0[8] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.containsAll(linkedList0);
      delayQueue0.toArray();
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      delayQueue0.poll();
      linkedList0.remove((Object) null);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4414857625667863
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[1];
      byteArray0[0] = byteArray1;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceRequestBuffer(335544727);
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(512, "PURE_JAVA");
      databaseParameterBufferImp0.addArgument(335544727, "PURE_JAVA");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.beforeFirst();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.removeExtensionParams();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, isc_db_handle_impl1, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.unregisterTransaction();
      databaseParameterBuffer0.deepCopy();
      gDSHelper0.getJavaEncoding();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher(gDSHelper0, (-572), 2048, isc_stmt_handle_impl0, fBResultSet0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.321271068322733
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      linkedList0.add((byte[][]) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\":f4uNmj.qt#KX");
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Locale.setDefault(locale0);
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.CANADA_FRENCH;
      Locale locale3 = Locale.CANADA_FRENCH;
      Locale locale4 = locale0.stripExtensions();
      Locale locale5 = Locale.TAIWAN;
      locale3.getDisplayName(locale5);
      locale4.getDisplayCountry(locale1);
      Locale locale6 = Locale.UK;
      locale3.getDisplayName(locale6);
      Locale locale7 = Locale.SIMPLIFIED_CHINESE;
      Locale locale8 = locale4.stripExtensions();
      locale8.getDisplayCountry(locale4);
      Locale locale9 = Locale.UK;
      locale6.getUnicodeLocaleAttributes();
      Locale.setDefault(locale3);
      locale7.getUnicodeLocaleKeys();
      Locale locale10 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale6);
      Locale locale11 = Locale.TAIWAN;
      locale11.getDisplayVariant();
      Locale locale12 = Locale.ITALIAN;
      locale3.getDisplayScript();
      Locale locale13 = Locale.CHINESE;
      Locale locale14 = Locale.KOREAN;
      locale14.getDisplayVariant(locale2);
      locale7.getExtensionKeys();
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category1, locale11);
      Locale locale15 = Locale.PRC;
      Locale locale16 = Locale.JAPAN;
      locale0.getUnicodeLocaleKeys();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.224345933438152
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      databaseParameterBufferImp0.removeArgument((-1770));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.getLength();
      databaseParameterBufferImp2.hasArgument(0);
      databaseParameterBufferImp1.addArgument((-557), 0);
      databaseParameterBufferImp7.getArgumentAsString(2013);
      databaseParameterBufferImp7.removeArgument(0);
      databaseParameterBufferImp8.getArgumentAsInt(13);
      databaseParameterBufferImp0.addArgument(0, (byte[]) null);
      databaseParameterBufferImp7.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeArgument((-1946));
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.414087424076798
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byte[][] byteArray2 = new byte[9][9];
      linkedList0.add(byteArray0);
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[6] = byteArray1;
      byteArray2[8] = byteArray1;
      linkedList0.add(byteArray2);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray2);
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.next();
      fBCachedFetcher0.last();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.updateRow((byte[][]) null);
      System.setCurrentTimeMillis(400);
      boolean boolean0 = fBCachedFetcher0.relative(1121);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][7];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-90);
      byteArray1[1] = (byte) (-47);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-47);
      byteArray2[1] = (byte) (-47);
      byteArray2[2] = (byte) (-47);
      byteArray2[3] = (byte) (-47);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte) (-90);
      byteArray4[1] = (byte) (-90);
      byteArray4[2] = (byte) (-90);
      byteArray4[3] = (byte) (-90);
      byteArray4[4] = (byte) (-47);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte) (-90);
      byteArray5[1] = (byte) (-90);
      byteArray5[2] = (byte) (-90);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3971746244951015
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byte[][] byteArray2 = new byte[9][9];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[6] = byteArray1;
      byteArray2[7] = byteArray1;
      byteArray2[8] = byteArray1;
      linkedList0.add(byteArray2);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      fBCachedFetcher0.next();
      fBCachedFetcher0.relative(1974);
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.275508648777424
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "HR^%C.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      delayQueue0.toArray();
      fBCachedFetcher0.insertRow((byte[][]) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EM1H$V?:boR");
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      linkedList0.add((byte[][]) null);
      delayQueue1.poll();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("?", 19);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",Hih|~lT%<S!Lc(Y+");
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4671752754356584
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      delayQueue0.toArray();
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      linkedList0.add((byte[][]) null);
      delayQueue1.poll();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("?", 19);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b{Dn6Hhk} j>6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",Hih|~lT%<S!Lc(Y+");
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4389460883501064
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byte[][] byteArray2 = new byte[9][9];
      byteArray2[7] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[7] = byteArray1;
      byteArray2[8] = byteArray1;
      linkedList0.add(byteArray2);
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.close(true);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.updateRow(byteArray2);
      fBCachedFetcher0.getRowNum();
      try { 
        fBResultSet0.getBoolean(1);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // The resultSet is closed
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3278768613324594
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte) (-14);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[6] = (byte) (-94);
      byteArray0[7] = (byte) (-4);
      byteArray0[5] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.containsAll(linkedList0);
      delayQueue0.toArray();
      fBCachedFetcher0.insertRow((byte[][]) null);
      ThreadPoolExecutor.DiscardOldestPolicy threadPoolExecutor_DiscardOldestPolicy0 = new ThreadPoolExecutor.DiscardOldestPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2097152, threadPoolExecutor_DiscardOldestPolicy0);
      Callable<String> callable0 = (Callable<String>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      ScheduledFuture<String> scheduledFuture0 = scheduledThreadPoolExecutor0.schedule(callable0, (long)  (-97), timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      linkedList0.add((byte[][]) null);
      delayQueue0.poll();
      linkedList0.remove((Object) null);
      linkedList0.retainAll(delayQueue1);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.getLength();
      databaseParameterBufferImp2.hasArgument(0);
      databaseParameterBufferImp1.addArgument((-557), 0);
      databaseParameterBufferImp7.getArgumentAsString(2004);
      databaseParameterBufferImp7.removeArgument((-88));
      databaseParameterBufferImp8.getArgumentAsInt(13);
      databaseParameterBufferImp1.addArgument(0, (byte[]) null);
      databaseParameterBufferImp7.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeArgument((-1980));
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(0, (String) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.JAPANESE;
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      Locale locale5 = Locale.TAIWAN;
      locale5.getUnicodeLocaleAttributes();
      Locale locale6 = Locale.TAIWAN;
      locale5.getDisplayName(locale2);
      Locale locale7 = Locale.TRADITIONAL_CHINESE;
      locale7.getDisplayCountry(locale1);
      Locale locale8 = Locale.TRADITIONAL_CHINESE;
      locale4.getDisplayName(locale3);
      Locale locale9 = Locale.ITALIAN;
      Locale locale10 = Locale.ITALIAN;
      locale8.getDisplayCountry(locale10);
      Locale locale11 = Locale.UK;
      locale10.getUnicodeLocaleAttributes();
      locale11.getUnicodeLocaleKeys();
      locale3.clone();
      Locale locale12 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale9);
      Locale locale13 = Locale.SIMPLIFIED_CHINESE;
      locale4.getDisplayVariant();
      Locale locale14 = Locale.SIMPLIFIED_CHINESE;
      locale3.getDisplayScript();
      Locale locale15 = Locale.CANADA;
      Locale locale16 = Locale.ITALY;
      Locale locale17 = Locale.ITALY;
      Locale locale18 = Locale.TAIWAN;
      Locale locale19 = Locale.SIMPLIFIED_CHINESE;
      Locale.setDefault(locale_Category0, locale1);
      Locale.getISOCountries();
      Locale locale20 = Locale.SIMPLIFIED_CHINESE;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][2];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)70;
      byteArray1[1] = (byte) (-78);
      byteArray1[2] = (byte) (-2);
      byteArray1[3] = (byte)31;
      byteArray1[4] = (byte) (-8);
      byteArray1[5] = (byte)116;
      byteArray1[6] = (byte) (-45);
      byteArray1[7] = (byte)28;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)116;
      byteArray2[1] = (byte) (-78);
      byteArray2[2] = (byte)99;
      byteArray2[3] = (byte)64;
      byteArray2[4] = (byte)28;
      byteArray2[5] = (byte)31;
      byteArray2[6] = (byte) (-78);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-45);
      byteArray3[1] = (byte) (-45);
      byteArray3[2] = (byte)116;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte)64;
      byteArray4[2] = (byte)64;
      byteArray4[3] = (byte) (-61);
      byteArray4[4] = (byte)96;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)44;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[4][6];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byte[][] byteArray2 = new byte[9][9];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[6] = byteArray1;
      byteArray2[7] = byteArray1;
      byteArray2[8] = byteArray1;
      boolean boolean0 = linkedList0.add(byteArray2);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean1 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.CANADA;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale3 = Locale.UK;
      Locale locale4 = Locale.GERMANY;
      locale4.getDisplayName(locale3);
      locale3.getExtension('e');
      locale4.getDisplayScript(locale3);
      Locale.setDefault(locale_Category0, locale3);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-1887));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[9][7];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)80;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.close();
      Object object0 = new Object();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      Object object1 = new Object();
      linkedList1.removeFirstOccurrence(object1);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceRequestBuffer(335544727);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(335544727, "PURE_JAVA");
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      JavaGDSImpl.parseRawAddress("PURE_JAVA");
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl2 = new isc_db_handle_impl();
      isc_db_handle_impl2.addWarning((GDSException) null);
      javaGDSImpl0.receiveResponse(isc_db_handle_impl2, (-2542));
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp2 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp1, isc_db_handle_impl1, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      gDSHelper0.getJavaEncoding();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp3 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      fBResultSet0.close(false);
      gDSHelper0.getJavaEncoding();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper1 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp1, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper1, (-698), 16384, isc_stmt_handle_impl0, fBResultSet0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceRequestBuffer(335544727);
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(2048, "X)@#");
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.deepCopy();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[0];
      byte[][] byteArray1 = new byte[10][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-546), byteArray0);
      databaseParameterBufferImp0.removeArgument((-2092));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      linkedList0.add(byteArray1);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      databaseParameterBufferImp4.removeArgument(1689);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-329));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.addArgument(3275, byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((-3));
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      Locale locale0 = Locale.UK;
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.CANADA_FRENCH;
      Locale locale3 = Locale.CANADA_FRENCH;
      Locale locale4 = locale0.stripExtensions();
      locale0.getDisplayCountry(locale2);
      Locale locale5 = Locale.UK;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale4);
      locale4.getDisplayVariant();
      Locale locale6 = Locale.ITALIAN;
      locale3.getDisplayScript();
      locale3.getDisplayCountry();
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale6);
      Locale.getISOLanguages();
      Locale locale7 = Locale.PRC;
      locale7.getUnicodeLocaleKeys();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byte[][] byteArray2 = new byte[9][9];
      byteArray0[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[6] = byteArray1;
      byteArray2[7] = byteArray1;
      byteArray2[8] = byteArray1;
      linkedList0.add(byteArray2);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow(byteArray2);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[8][9];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-85);
      byteArray1[1] = (byte)113;
      byteArray1[2] = (byte) (-112);
      byteArray1[3] = (byte) (-97);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-111);
      byteArray2[1] = (byte)113;
      byteArray2[2] = (byte) (-97);
      byteArray2[3] = (byte) (-85);
      byteArray2[4] = (byte)113;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-85);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-112);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte) (-97);
      byteArray5[1] = (byte) (-112);
      byteArray5[2] = (byte) (-111);
      byteArray5[3] = (byte) (-97);
      byteArray5[4] = (byte) (-111);
      byteArray5[5] = (byte) (-97);
      byteArray5[6] = (byte) (-97);
      byteArray5[7] = (byte) (-112);
      byteArray5[8] = (byte) (-97);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte) (-97);
      byteArray6[1] = (byte) (-112);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[3];
      byteArray7[0] = (byte) (-111);
      byteArray7[1] = (byte)113;
      byteArray7[2] = (byte) (-85);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte) (-97);
      byteArray8[1] = (byte) (-97);
      byteArray8[2] = (byte) (-112);
      byteArray8[3] = (byte) (-85);
      byteArray8[4] = (byte)113;
      byteArray8[5] = (byte) (-97);
      byteArray0[7] = byteArray8;
      linkedList1.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.absolute(4193);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument(65, (byte[]) null);
      databaseParameterBufferImp8.removeArgument(4193);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument(65);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-2850), (byte[]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      assertFalse(databaseParameterBufferImp14.equals((Object)databaseParameterBufferImp0));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)121;
      byteArray1[1] = (byte)51;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)51;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)121;
      byteArray3[1] = (byte)51;
      byteArray3[2] = (byte)121;
      byteArray3[3] = (byte)51;
      byteArray3[4] = (byte)51;
      byteArray3[5] = (byte)18;
      byteArray3[6] = (byte)51;
      byteArray3[7] = (byte)121;
      byteArray3[8] = (byte)121;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      Object object0 = new Object();
      linkedList0.removeFirstOccurrence(object0);
      byteArray4[0] = (byte)121;
      byteArray4[1] = (byte)51;
      byteArray4[2] = (byte)121;
      byteArray4[3] = (byte)18;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher1.isBeforeFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-3132));
      assertEquals((-3132), fBCachedFetcher0.getFetchSize());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.4482300691584413
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.previous();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      Object object0 = new Object();
      linkedList0.removeFirstOccurrence(object0);
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute(2048);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int1 = (-91);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5594882106393415
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getArgumentAsInt(0);
      databaseParameterBufferImp8.addArgument(3418);
      databaseParameterBufferImp2.hasArgument(0);
      databaseParameterBufferImp7.getArgumentAsString(0);
      databaseParameterBufferImp7.removeArgument((-88));
      databaseParameterBufferImp7.getArgumentAsInt(0);
      databaseParameterBufferImp1.addArgument(0, (byte[]) null);
      databaseParameterBufferImp8.removeArgument(0);
      databaseParameterBufferImp7.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeArgument((-1946));
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(0, (String) null);
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      fBCachedFetcher0.relative(0);
      boolean boolean0 = fBCachedFetcher0.relative(335544339);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      try { 
        fBCachedFetcher0.absolute((-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[0];
      byte[][] byteArray1 = new byte[10][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-546), byteArray0);
      databaseParameterBufferImp0.removeArgument((-2092));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.removeArgument(1689);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-329));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.addArgument(3275, byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((-3));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.224345933438152
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      databaseParameterBufferImp0.removeArgument((-1770));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      int int0 = new Integer(0);
      databaseParameterBufferImp2.hasArgument(0);
      databaseParameterBufferImp1.addArgument((-557), 0);
      databaseParameterBufferImp7.getArgumentAsString(2013);
      databaseParameterBufferImp7.removeArgument(0);
      databaseParameterBufferImp8.getArgumentAsInt(13);
      databaseParameterBufferImp0.addArgument(0, (byte[]) null);
      databaseParameterBufferImp7.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.removeArgument((-1958));
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = Locale.ITALIAN;
      Locale locale2 = Locale.CANADA_FRENCH;
      Locale locale3 = Locale.CANADA_FRENCH;
      Locale locale4 = Locale.JAPAN;
      Locale locale5 = Locale.TAIWAN;
      Locale locale6 = Locale.UK;
      locale4.getDisplayName(locale5);
      Locale locale7 = Locale.SIMPLIFIED_CHINESE;
      Locale locale8 = locale5.stripExtensions();
      locale7.getDisplayCountry(locale4);
      Locale locale9 = Locale.UK;
      locale1.getUnicodeLocaleAttributes();
      Locale.setDefault(locale8);
      locale5.getUnicodeLocaleKeys();
      locale9.getDisplayScript();
      Locale locale10 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale9);
      Locale locale11 = Locale.TAIWAN;
      locale0.getDisplayVariant();
      Locale locale12 = new Locale("\u65E5\u6587 (\u65E5\u672C)");
      Locale locale13 = Locale.FRENCH;
      locale10.getDisplayScript();
      locale4.getDisplayVariant();
      Locale locale14 = Locale.CHINESE;
      Locale locale15 = Locale.KOREAN;
      Locale locale16 = Locale.US;
      Locale locale17 = Locale.SIMPLIFIED_CHINESE;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale1);
      Locale.getISOCountries();
      Locale locale18 = Locale.PRC;
      Locale locale19 = Locale.JAPAN;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[2][6];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-66);
      byteArray1[2] = (byte)28;
      byteArray1[3] = (byte) (-6);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-66);
      byteArray2[1] = (byte) (-66);
      byteArray2[2] = (byte) (-66);
      byteArray2[3] = (byte) (-66);
      byteArray2[4] = (byte) (-6);
      byteArray2[5] = (byte)28;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte) (-112);
      byteArray0[1] = byteArray2;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byte[][] byteArray2 = new byte[9][9];
      byteArray2[0] = byteArray1;
      byteArray2[1] = byteArray1;
      byteArray2[2] = byteArray1;
      byteArray2[3] = byteArray1;
      byteArray2[4] = byteArray1;
      byteArray2[5] = byteArray1;
      byteArray2[6] = byteArray1;
      byteArray2[7] = byteArray1;
      byteArray2[8] = byteArray1;
      linkedList0.add(byteArray2);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      LinkedBlockingQueue<Integer> linkedBlockingQueue0 = new LinkedBlockingQueue<Integer>();
      linkedList0.removeAll(linkedBlockingQueue0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.354640740535752
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[5][5];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-7);
      byteArray1[1] = (byte) (-112);
      byteArray1[2] = (byte) (-108);
      byteArray1[3] = (byte)62;
      byteArray1[4] = (byte) (-23);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)62;
      byteArray2[1] = (byte) (-108);
      byteArray2[2] = (byte)119;
      byteArray2[3] = (byte) (-23);
      byteArray2[4] = (byte) (-8);
      byteArray2[5] = (byte)62;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)62;
      byteArray3[1] = (byte)62;
      byteArray3[2] = (byte) (-23);
      byteArray3[3] = (byte) (-7);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-23);
      byteArray4[1] = (byte) (-23);
      byteArray4[2] = (byte) (-7);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-8);
      byteArray5[1] = (byte) (-7);
      byteArray5[2] = (byte) (-108);
      byteArray5[3] = (byte) (-7);
      byteArray5[4] = (byte)0;
      byteArray5[5] = (byte)119;
      byteArray5[6] = (byte) (-108);
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(133, "0(-kX*5VC7~H{Jb");
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.hasArgument((-1212));
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp4.getLength();
      databaseParameterBufferImp1.addArgument(0, 0);
      databaseParameterBufferImp7.getArgumentAsString(2013);
      databaseParameterBufferImp7.removeArgument(0);
      databaseParameterBufferImp5.getArgumentAsInt(9);
      databaseParameterBufferImp0.addArgument(0, (byte[]) null);
      databaseParameterBufferImp7.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      xSQLVAR0.decodeTime((byte[]) null);
      databaseParameterBufferImp1.removeArgument((-1934));
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(0, (String) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0108940605206342
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument(133, "0(-kX*5VC7~H{Jb");
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeExtensionParams();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.removeArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1084013788541878
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      org.firebirdsql.gds.impl.jni.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      GDSType gDSType0 = GDSType.getType("PURE_JAVA");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl(gDSType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-94);
      byteArray0[0] = (byte) (-94);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.hasArgument(4096);
      int int0 = 0;
      databaseParameterBufferImp3.getArgumentAsString(0);
      databaseParameterBufferImp2.removeArgument(687);
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp6.addArgument(4096, byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp7.removeArgument(20);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.removeArgument(0);
      databaseParameterBufferImp8.addArgument(4096, 2004);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp10.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp8.addArgument(2004, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[6][8];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[5] = byteArray0;
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      Locale locale5 = Locale.TAIWAN;
      Locale locale6 = Locale.TAIWAN;
      locale4.getDisplayName(locale6);
      Locale locale7 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayCountry(locale4);
      Locale locale8 = Locale.TRADITIONAL_CHINESE;
      Locale locale9 = Locale.forLanguageTag("\u4E2D\u6587 (\u53F0\u7063)");
      locale4.getDisplayVariant(locale9);
      Locale locale10 = Locale.TRADITIONAL_CHINESE;
      Locale locale11 = Locale.GERMANY;
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      locale2.getDisplayCountry(locale1);
      Locale locale12 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      locale4.getUnicodeLocaleKeys();
      Locale locale13 = Locale.CANADA_FRENCH;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale5);
      Locale locale14 = Locale.SIMPLIFIED_CHINESE;
      locale11.getDisplayVariant();
      Locale locale15 = Locale.SIMPLIFIED_CHINESE;
      locale4.getDisplayScript();
      Locale locale16 = Locale.CHINESE;
      Locale locale17 = Locale.GERMAN;
      Locale locale18 = Locale.GERMAN;
      Locale locale19 = Locale.TRADITIONAL_CHINESE;
      Locale locale20 = Locale.SIMPLIFIED_CHINESE;
      Locale.setDefault(locale_Category0, locale14);
      Locale.getISOLanguages();
      Locale locale21 = Locale.ROOT;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][3];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte)36;
      byteArray1[3] = (byte)40;
      byteArray1[4] = (byte)74;
      byteArray1[5] = (byte)62;
      byteArray1[6] = (byte)58;
      byteArray1[7] = (byte) (-99);
      byteArray1[8] = (byte)61;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)58;
      byteArray2[1] = (byte) (-1);
      byteArray2[2] = (byte)36;
      byteArray2[3] = (byte)62;
      byteArray2[4] = (byte)61;
      byteArray2[5] = (byte)40;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)1;
      byteArray3[1] = (byte) (-1);
      byteArray3[2] = (byte)61;
      byteArray3[3] = (byte) (-99);
      byteArray3[4] = (byte) (-1);
      byteArray3[5] = (byte)1;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)61;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte)74;
      byteArray5[1] = (byte)58;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte)1;
      byteArray6[1] = (byte)32;
      byteArray6[2] = (byte)61;
      byteArray6[3] = (byte)62;
      byteArray6[4] = (byte)36;
      byteArray0[5] = byteArray6;
      linkedList0.addLast(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Locale locale0 = Locale.ITALIAN;
      Locale locale1 = Locale.ENGLISH;
      locale1.getDisplayCountry(locale0);
      Locale locale2 = Locale.CANADA_FRENCH;
      Locale locale3 = Locale.TAIWAN;
      locale3.stripExtensions();
      Locale locale4 = Locale.ITALIAN;
      locale1.getDisplayCountry(locale4);
      Locale locale5 = Locale.UK;
      Locale locale6 = Locale.CANADA_FRENCH;
      locale5.getDisplayName(locale6);
      locale4.getDisplayVariant();
      locale5.getScript();
      Locale locale7 = Locale.ITALIAN;
      Locale.getISOLanguages();
      Locale locale8 = new Locale(" RF.RDB$FIELD_SOURCE = F.RDB$FIELD_NAME order by 1, 11", "You cannot position to the row 0 with absolute() method.", "Lk0h=zw");
      byte[][] byteArray0 = new byte[7][6];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-11);
      byteArray1[2] = (byte) (-78);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-78);
      byteArray2[2] = (byte) (-78);
      byteArray2[3] = (byte) (-78);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-78);
      byteArray4[1] = (byte) (-112);
      byteArray4[2] = (byte) (-78);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[8];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte) (-11);
      byteArray5[2] = (byte) (-78);
      byteArray5[3] = (byte) (-11);
      byteArray5[4] = (byte) (-78);
      byteArray5[5] = (byte) (-112);
      byteArray5[6] = (byte) (-78);
      byteArray5[7] = (byte) (-78);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte) (-78);
      byteArray6[1] = (byte) (-112);
      byteArray6[2] = (byte) (-78);
      byteArray6[3] = (byte) (-11);
      byteArray6[4] = (byte) (-11);
      byteArray6[5] = (byte) (-11);
      byteArray6[6] = (byte)0;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte) (-78);
      byteArray7[1] = (byte) (-112);
      byteArray7[2] = (byte) (-11);
      byteArray7[3] = (byte) (-112);
      byteArray7[4] = (byte) (-78);
      byteArray7[5] = (byte) (-78);
      byteArray7[6] = (byte) (-112);
      byteArray0[6] = byteArray7;
      linkedList0.addFirst(byteArray0);
      locale6.getDisplayScript();
      locale7.getDisplayScript(locale2);
      Locale.setDefault(locale3);
      Locale locale9 = new Locale("", "select     rf.rdb$field_name as column_name,     f.rdb$field_type as field_type,     f.rdb$field_sub_type as field_sub_type,     f.rdb$field_scale as field_scale,     f.rdb$field_precision as field_precision from     rdb$relation_constraints rc,    rdb$index_segments idx,    rdb$relation_fields rf,    rdb$fields f where     rc.rdb$relation_name = ? and     rc.rdb$constraint_type = 'PRIMARY KEY' and     idx.rdb$index_name = rc.rdb$index_name and     rf.rdb$field_name = idx.rdb$field_name and     rf.rdb$relation_name = ? and     f.rdb$field_name = rf.rdb$field_source");
      locale8.getScript();
      Locale locale10 = Locale.ITALIAN;
      Locale locale11 = Locale.KOREA;
      locale4.getDisplayScript();
      Locale.getISOLanguages();
      locale1.getUnicodeLocaleKeys();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][4];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)60;
      byteArray1[1] = (byte) (-1);
      byteArray1[2] = (byte) (-112);
      byteArray1[3] = (byte)26;
      byteArray1[4] = (byte) (-45);
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-39);
      byteArray2[1] = (byte)26;
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte) (-45);
      byteArray2[4] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte) (-112);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-1);
      byteArray4[1] = (byte) (-76);
      byteArray4[2] = (byte) (-47);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-45);
      byteArray7[1] = (byte) (-47);
      byteArray7[2] = (byte)0;
      byteArray7[3] = (byte)0;
      byteArray7[4] = (byte)26;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[9];
      byteArray8[0] = (byte) (-15);
      byteArray8[1] = (byte)0;
      byteArray8[2] = (byte)0;
      byteArray8[3] = (byte)0;
      byteArray8[4] = (byte) (-1);
      byteArray8[5] = (byte)0;
      byteArray8[6] = (byte) (-76);
      byteArray8[7] = (byte)13;
      byteArray8[8] = (byte) (-45);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[6];
      byteArray9[0] = (byte)0;
      byteArray9[1] = (byte) (-112);
      byteArray9[2] = (byte) (-1);
      byteArray9[3] = (byte) (-47);
      byteArray9[4] = (byte) (-47);
      byteArray9[5] = (byte)13;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.2162443181522673
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[0];
      byte[][] byteArray1 = new byte[9][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      byteArray1[6] = byteArray0;
      byteArray1[7] = byteArray0;
      byteArray1[8] = byteArray0;
      linkedList0.add(byteArray1);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      byte[][] byteArray0 = new byte[9][3];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)53;
      byteArray1[1] = (byte)45;
      byteArray1[2] = (byte) (-44);
      byteArray1[3] = (byte)37;
      byteArray1[4] = (byte)104;
      byteArray1[5] = (byte)37;
      byteArray1[6] = (byte)60;
      byteArray1[7] = (byte) (-93);
      byteArray1[8] = (byte)38;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)104;
      byteArray2[1] = (byte)37;
      byteArray2[2] = (byte)104;
      byteArray2[3] = (byte)37;
      byteArray2[4] = (byte)37;
      byteArray2[5] = (byte)45;
      byteArray2[6] = (byte)104;
      byteArray2[7] = (byte)37;
      byteArray0[1] = byteArray2;
      byteArray0[2] = byteArray1;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-93);
      byteArray3[1] = (byte)37;
      byteArray0[3] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte) (-5);
      byteArray4[1] = (byte)14;
      byteArray4[2] = (byte)38;
      byteArray4[3] = (byte)38;
      byteArray4[2] = (byte)14;
      byteArray4[5] = (byte)37;
      byteArray4[6] = (byte)53;
      byteArray4[7] = (byte)14;
      byteArray0[4] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[5] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)37;
      byteArray6[1] = (byte) (-104);
      byteArray6[2] = (byte)37;
      byteArray6[3] = (byte) (-44);
      byteArray6[4] = (byte)37;
      byteArray6[5] = (byte)37;
      byteArray0[6] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)37;
      byteArray7[1] = (byte) (-44);
      byteArray0[7] = byteArray7;
      byte[] byteArray8 = new byte[1];
      byteArray8[0] = (byte) (-95);
      byteArray0[8] = byteArray8;
      linkedList0.add(byteArray0);
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.isLast();
      byte[] byteArray9 = new byte[8];
      byteArray9[0] = (byte)81;
      byteArray9[1] = (byte)14;
      byteArray9[2] = (byte) (-40);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      javaGDSImpl0.createServiceParameterBuffer();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      GDSType gDSType0 = GDSType.getType("PURE_JAVA");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl(gDSType0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute((-2756));
      GDSType.getType("SMALLINT");
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSType.getType("PURE_JAVA");
      String string0 = "";
      GDSType.getType("");
      GDSType.getType((String) null);
      GDSType.getType("");
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl((GDSType) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale locale4 = Locale.SIMPLIFIED_CHINESE;
      Locale locale5 = Locale.JAPANESE;
      locale2.getDisplayName(locale5);
      Locale locale6 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayCountry(locale3);
      Locale locale7 = Locale.TRADITIONAL_CHINESE;
      Locale locale8 = Locale.forLanguageTag("\u4E2D\u56FD\u8A9E (\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD)");
      locale3.getScript();
      Locale.getISOLanguages();
      locale0.getDisplayVariant(locale8);
      Locale locale9 = Locale.TRADITIONAL_CHINESE;
      Locale locale10 = Locale.GERMANY;
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      locale2.getDisplayCountry(locale1);
      Locale locale11 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale locale12 = Locale.FRANCE;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale4);
      Locale locale13 = Locale.SIMPLIFIED_CHINESE;
      locale10.getDisplayVariant();
      Locale locale14 = Locale.SIMPLIFIED_CHINESE;
      locale3.getDisplayScript();
      Locale locale15 = Locale.CHINESE;
      Locale locale16 = Locale.ITALY;
      Locale locale17 = Locale.ITALY;
      Locale locale18 = Locale.TRADITIONAL_CHINESE;
      Locale locale19 = Locale.SIMPLIFIED_CHINESE;
      Locale.setDefault(locale_Category0, locale13);
      Locale.getISOLanguages();
      Locale locale20 = Locale.ROOT;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale locale4 = Locale.SIMPLIFIED_CHINESE;
      Locale locale5 = Locale.JAPANESE;
      locale2.getDisplayName(locale5);
      Locale locale6 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayCountry(locale3);
      Locale locale7 = Locale.TRADITIONAL_CHINESE;
      Locale locale8 = Locale.forLanguageTag("\u4E2D\u56FD\u8A9E (\u4E2D\u83EF\u4EBA\u6C11\u5171\u548C\u56FD)");
      locale3.getScript();
      Locale.getISOLanguages();
      locale0.getDisplayVariant(locale8);
      Locale locale9 = Locale.TRADITIONAL_CHINESE;
      Locale locale10 = Locale.GERMANY;
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      locale2.getDisplayCountry(locale1);
      Locale locale11 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      locale1.getUnicodeLocaleKeys();
      Locale locale12 = Locale.FRANCE;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale4);
      Locale locale13 = Locale.SIMPLIFIED_CHINESE;
      locale10.getDisplayVariant();
      Locale locale14 = Locale.SIMPLIFIED_CHINESE;
      locale3.getDisplayScript();
      Locale locale15 = Locale.FRENCH;
      Locale locale16 = Locale.ITALY;
      Locale locale17 = Locale.ITALY;
      Locale locale18 = Locale.TRADITIONAL_CHINESE;
      Locale locale19 = Locale.SIMPLIFIED_CHINESE;
      Locale.setDefault(locale_Category0, locale13);
      Locale.getISOLanguages();
      Locale locale20 = Locale.ROOT;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale locale2 = Locale.SIMPLIFIED_CHINESE;
      Locale locale3 = Locale.SIMPLIFIED_CHINESE;
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      Locale locale5 = Locale.TAIWAN;
      Locale locale6 = Locale.TAIWAN;
      locale4.getDisplayName(locale6);
      Locale locale7 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayCountry(locale4);
      Locale locale8 = Locale.TRADITIONAL_CHINESE;
      Locale locale9 = Locale.forLanguageTag("\u4E2D\u6587 (\u53F0\u7063)");
      locale4.getDisplayVariant(locale9);
      Locale locale10 = Locale.TRADITIONAL_CHINESE;
      Locale locale11 = Locale.GERMANY;
      PriorityBlockingQueue<Locale> priorityBlockingQueue0 = new PriorityBlockingQueue<Locale>();
      locale2.getDisplayCountry(locale1);
      Locale locale12 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      locale4.getUnicodeLocaleKeys();
      Locale locale13 = Locale.CANADA_FRENCH;
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category0, locale5);
      Locale locale14 = Locale.SIMPLIFIED_CHINESE;
      locale11.getDisplayVariant();
      Locale locale15 = Locale.SIMPLIFIED_CHINESE;
      locale4.getDisplayScript();
      Locale locale16 = Locale.CHINESE;
      Locale locale17 = Locale.GERMAN;
      Locale locale18 = Locale.GERMAN;
      Locale locale19 = Locale.TRADITIONAL_CHINESE;
      Locale locale20 = Locale.SIMPLIFIED_CHINESE;
      Locale.Category locale_Category1 = Locale.Category.DISPLAY;
      Locale.setDefault(locale_Category1, locale14);
      Locale.getISOLanguages();
      Locale locale21 = Locale.ROOT;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)48;
      byteArray0[5] = (byte) (-123);
      byteArray0[6] = (byte)121;
      byteArray0[7] = (byte) (-53);
      byteArray0[8] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 400, (byte) (-2));
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) byteArrayInputStream0);
      Predicate<byte[][]> predicate1 = predicate0.or(predicate0);
      predicate1.and(predicate0);
      linkedList0.removeIf(predicate1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.absolute((-2756));
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }
}
