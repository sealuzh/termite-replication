/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 12:20:12 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.FocusTraversalPolicy;
import java.awt.Graphics;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentListener;
import java.awt.event.ContainerListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.text.DateFormatSymbols;
import java.util.ArrayList;
import java.util.EventListener;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import javax.swing.Action;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JMenu;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.JTextArea;
import javax.swing.JToggleButton;
import javax.swing.JTree;
import javax.swing.TransferHandler;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicOptionPaneUI;
import javax.swing.plaf.basic.BasicPopupMenuSeparatorUI;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.PlainDocument;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.TextAction;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoUpdateListener;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.javax.swing.MockDefaultListSelectionModel;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Action[] actionArray0 = new Action[5];
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      actionArray0[4] = (Action) defaultEditorKit_InsertBreakAction0;
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[1] = (Action) styledEditorKit_ForegroundAction0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      actionArray1[2] = (Action) defaultEditorKit_InsertBreakAction0;
      actionArray1[3] = (Action) styledEditorKit_ForegroundAction0;
      TextAction.augmentList(actionArray0, actionArray1);
      TextAction.augmentList(actionArray0, actionArray0);
      TextAction.augmentList(actionArray0, actionArray0);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      JToggleButton jToggleButton0 = new JToggleButton(styledEditorKit_UnderlineAction0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "~RzPv\"78Fq47\"]FQxP";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "jMQ'~ vfIR+'k*S", "~RzPv\"78Fq47\"]FQxP");
      int int0 = 1;
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "DELETE FROM ", (String) null, "jMQ'~ vfIR+'k*S", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("?[am^T_A'ddj", "^W;V@V:FvM<;C)/l", "plugins", (String) null, (-789), "M*ssing Q.", 91, 3613, 95, 0, "org.jfree.data.gantt.Task", "Aa6AE[GH`|,E_c", 0, 515, "M*ssing Q.");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(vector0);
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "fMsi,", "#U7&+", "z.'");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener1);
      MouseWheelListener mouseWheelListener4 = AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener1);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener5 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener4);
      MouseWheelListener mouseWheelListener6 = AWTEventMulticaster.add(mouseWheelListener4, mouseWheelListener5);
      MouseWheelListener mouseWheelListener7 = AWTEventMulticaster.add(mouseWheelListener4, mouseWheelListener3);
      MouseWheelListener mouseWheelListener8 = AWTEventMulticaster.add(mouseWheelListener5, mouseWheelListener1);
      MouseWheelListener mouseWheelListener9 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener8);
      MouseWheelListener mouseWheelListener10 = AWTEventMulticaster.remove(mouseWheelListener9, mouseWheelListener8);
      MouseWheelListener mouseWheelListener11 = AWTEventMulticaster.add(mouseWheelListener10, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener12 = AWTEventMulticaster.add(mouseWheelListener5, mouseWheelListener8);
      AWTEventMulticaster.add(mouseWheelListener12, mouseWheelListener4);
      MouseWheelListener mouseWheelListener13 = AWTEventMulticaster.remove(mouseWheelListener3, mouseWheelListener7);
      AWTEventMulticaster.add(mouseWheelListener6, mouseWheelListener3);
      AWTEventMulticaster.remove(mouseWheelListener10, mouseWheelListener12);
      AWTEventMulticaster.add(mouseWheelListener7, mouseWheelListener13);
      AWTEventMulticaster.add(mouseWheelListener11, mouseWheelListener7);
      AWTEventMulticaster.add(mouseWheelListener12, mouseWheelListener9);
      AWTEventMulticaster.remove(mouseWheelListener9, mouseWheelListener2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, (String) null, " SGV c->qSy", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      defaultEditorKit_DefaultKeyTypedAction0.setEnabled(false);
      Action[] actionArray0 = new Action[4];
      actionArray0[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6o~ZSk_\"6{hp");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ArrayList<IDatabaseObjectInfo> arrayList1 = new ArrayList<IDatabaseObjectInfo>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ArrayList<ITableInfo> arrayList2 = new ArrayList<ITableInfo>();
      DBUtil.typesAreEquivalent((-7), 3);
      ArrayList<ITableInfo> arrayList3 = new ArrayList<ITableInfo>();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // metaData
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.DatabaseMetaDataWrapper", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.138284360394208
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DBUtil.typesAreEquivalent(3, (-236));
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      HashSet<String> hashSet0 = new HashSet<String>();
      DBUtil.typesAreEquivalent(3, (-236));
      ArrayList<IDatabaseObjectInfo> arrayList1 = new ArrayList<IDatabaseObjectInfo>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.convertObjectToTableList(arrayList1);
      DBUtil.typesAreEquivalent((-1), 2465);
      ArrayList<ITableInfo> arrayList2 = new ArrayList<ITableInfo>();
      HashSet<String> hashSet1 = new HashSet<String>();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "DEC", "e\"a~TZEL0n", "D0[k49.g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JTree jTree0 = new JTree();
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "z&@2~", ":k@!0pI3", "y'QDE;jgzm)Ya8", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "replaceDistinctDataType: Unexpected exception - ");
      ArrayList<IDatabaseObjectInfo> arrayList1 = new ArrayList<IDatabaseObjectInfo>();
      DBUtil.typesAreEquivalent(3, 3);
      ArrayList<ITableInfo> arrayList2 = new ArrayList<ITableInfo>();
      DBUtil.typesAreEquivalent((-7), 3);
      ArrayList<ITableInfo> arrayList3 = new ArrayList<ITableInfo>();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      PlainDocument plainDocument0 = new PlainDocument();
      StyleContext.getDefaultStyleContext();
      StyleContext styleContext0 = null;
      DefaultStyledDocument defaultStyledDocument0 = null;
      try {
        defaultStyledDocument0 = new DefaultStyledDocument((StyleContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Action[] actionArray0 = new Action[5];
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      actionArray0[4] = (Action) defaultEditorKit_InsertBreakAction0;
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[1] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[2] = (Action) defaultEditorKit_InsertBreakAction0;
      actionArray1[3] = (Action) styledEditorKit_ForegroundAction0;
      TextAction.augmentList(actionArray0, actionArray1);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction0.getPropertyChangeListeners();
      TextAction.augmentList(actionArray0, actionArray1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "catalogFilterExclude";
      stringArray0[1] = "DEC";
      stringArray0[2] = "catalogFilterExclude";
      stringArray0[3] = "catalogFilterExclude";
      stringArray0[4] = "catalogFilterExclude";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "^E'i8,mhAWd", "(]=qOG?'sgUHhbmD$YvG");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      MockDefaultListSelectionModel mockDefaultListSelectionModel0 = new MockDefaultListSelectionModel();
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI4 = new BasicCheckBoxUI();
      int int0 = 50;
      JTextArea jTextArea0 = null;
      try {
        jTextArea0 = new JTextArea(50, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // columns: -1
         //
         verifyException("javax.swing.JTextArea", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster10, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster12, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster4, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster9, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster13);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster15 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster14, (MouseWheelListener) aWTEventMulticaster15);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "org.jfree.data.xy.OHLCDataItem", "sts)1^&J1$@_NJO2");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JTree jTree0 = new JTree();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "~}qh3x 8(", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JTree jTree0 = new JTree();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "sts)1^&J1$@_NJO2");
      int int0 = 2006;
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 2006);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Action[] actionArray0 = new Action[5];
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      defaultEditorKit_BeepAction0.getPropertyChangeListeners();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0GxzB;s82yRrsX-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 1007);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "or.apache.log4j.helpers.FieWatdog");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "or.apache.log4j.helpers.FieWatdog");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "or.apache.log4j.helpers.FileWatchdog");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      ImageIcon imageIcon0 = new ImageIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, ">iXqDXocBlDHmbhL", "h|W2R#");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JToggleButton jToggleButton0 = new JToggleButton("number(10,0)");
      jToggleButton0.setDebugGraphicsOptions(400);
      jToggleButton0.getComponentListeners();
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setImageObserver(jToggleButton0);
      imageIcon0.getIconWidth();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      imageIcon0.toString();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" to 128.", "S", "Pvp)0 Cy/G<nmAMCS", "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", (-7), "number(10,0)", (-1013), (-3313), 400, (-1073741822), " to 128.", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-7), 400, "");
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("W4+ i[ns<fX:@@|\"", "Qfd_5AOhJrbNZ/", "Qfd_5AOhJrbNZ/", "\".H0~knq9tn#6D;iH", (-2), " CASCADE", (-1), (-158), 2, (-2333), " CASCADE", "org.jboss.net.protocol.DelegatingURLConnection", 1839, 46, "SELECT viewtext ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("yf,]c", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("wO:oC`pa'");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      String string0 = null;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo((String) null, (String) null, (String) null);
      stack0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[8];
      actionArray0[0] = (Action) defaultEditorKit_PasteAction0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      actionArray0[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[6] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[7] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray1 = TextAction.augmentList(actionArray0, actionArray0);
      Action[] actionArray2 = new Action[4];
      actionArray2[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      Action[] actionArray3 = new Action[8];
      actionArray3[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray3[1] = (Action) defaultEditorKit_PasteAction0;
      actionArray3[2] = (Action) defaultEditorKit_PasteAction0;
      actionArray3[3] = (Action) defaultEditorKit_PasteAction0;
      actionArray3[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray3[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray3[6] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      actionArray3[7] = (Action) styledEditorKit_ItalicAction0;
      TextAction.augmentList(actionArray1, actionArray3);
      actionArray2[1] = (Action) defaultEditorKit_PasteAction0;
      actionArray2[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[3] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray4 = new Action[6];
      actionArray4[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      defaultEditorKit_DefaultKeyTypedAction0.setEnabled(false);
      actionArray4[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray4[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      defaultEditorKit_PasteAction0.getPropertyChangeListeners();
      actionArray4[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray4[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray4[5] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray2, actionArray4);
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster2, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster10, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster11);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster4, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster9, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster12);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster13, (MouseWheelListener) aWTEventMulticaster14);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("org.jfree.data.xy.OHLCDataItem");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JTree jTree0 = new JTree();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("0\"Wco", ":Qq>6e1", (String) null, "addToMenuAsCheckBoxMenuItem", (-5), "PLUM", 2352, (-399), 92, 2001, "T6P`W^k>", "PLUM", 1111, (-1789569704), "0\"Wco");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      JMenu jMenu0 = new JMenu("PLUM");
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      basicCheckBoxUI0.getMinimumSize(jMenu0);
      basicCheckBoxUI0.getAccessibleChild(jPopupMenu0, (-527));
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      basicCheckBoxUI0.getDefaultIcon();
      DatabaseObjectType.createNewDatabaseObjectType(">fU+>IoyvW", (Icon) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo1 = (TableColumnInfo)DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
      assertEquals(2352, tableColumnInfo1.getColumnSize());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      StyledEditorKit.BoldAction styledEditorKit_BoldAction0 = new StyledEditorKit.BoldAction();
      styledEditorKit_BoldAction0.isEnabled();
      styledEditorKit_BoldAction0.getKeys();
      Action action0 = TransferHandler.getCutAction();
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction1 = new DefaultEditorKit.InsertContentAction();
      Action[] actionArray0 = new Action[9];
      actionArray0[0] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[1] = (Action) defaultEditorKit_InsertContentAction1;
      actionArray0[2] = action0;
      actionArray0[3] = (Action) defaultEditorKit_InsertContentAction1;
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      actionArray0[4] = (Action) defaultEditorKit_CutAction0;
      actionArray0[5] = action0;
      actionArray0[6] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[7] = (Action) styledEditorKit_BoldAction0;
      actionArray0[8] = (Action) styledEditorKit_BoldAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      defaultEditorKit_InsertContentAction1.putValue("3>.Hj/l~7loU", defaultEditorKit_PasteAction0);
      Action[] actionArray1 = new Action[7];
      actionArray1[0] = (Action) defaultEditorKit_PasteAction0;
      actionArray1[1] = (Action) styledEditorKit_BoldAction0;
      actionArray1[2] = (Action) defaultEditorKit_InsertContentAction0;
      actionArray1[3] = action0;
      actionArray1[4] = (Action) defaultEditorKit_InsertContentAction1;
      actionArray1[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray1[6] = (Action) defaultEditorKit_InsertContentAction0;
      TextAction.augmentList(actionArray1, actionArray1);
      JToggleButton jToggleButton0 = new JToggleButton((Action) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "3>.Hj/l~7loU", "");
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-1630));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      linkedList0.add((IDatabaseObjectInfo) null);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertEquals(1, list0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getPreferredSize();
      defaultTreeCellRenderer0.getLeafIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      defaultTreeCellRenderer0.getGraphicsConfiguration();
      defaultTreeCellRenderer0.repaint((long) 3, (-469), (-3377), (-3377), (-3377));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "DBUtil.error.maptype", "DBUtil.error.maptype", "add column", 2004, "add column", (-3377), 0, 2004, (-3377), "least", "TABLE", 0, 76, "atlog=");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = null;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getPreferredSize();
      String string1 = "T6P`W^k>";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "t", "T6P`W^k>", 3, (String) null, (-5225), 3, 3223, 16, "T6P`W^k>", "net.sourceforge.squirrel_sql.client.gui.db.SchemaNameLo'dInfo", 16, 16, "T6P`W^k>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      String string2 = "E yrfZmoFu";
      JMenu jMenu0 = new JMenu("E yrfZmoFu");
      jMenu0.getPopupMenu();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      basicCheckBoxUI2.getDefaultIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      ISession iSession0 = null;
      DBUtil.replaceDistinctDataType(3551, tableColumnInfo0, (ISession) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MM", "MM", "", "MM", (-665), "", (-665), (-665), (-665), (-665), "", "MM", (-665), (-665), "");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("XqI/#mDw<6+", " to 128.", "XqI/#mDw<6+", " to 128.", 0, " to 128.", 243, (-665), 4192, 4192, "", " to 128.", 0, (-1319), "{l");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("g");
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo1, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9-3|gJ");
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfoCacheSerializer", ".'jwg@.bY4$Em#q", "4l4o4[fUF=>u.,S?", "tT", 3026, "O-aRt: acoocACk ?", (-4), 53, 53, 2004, "tT", ".'jwg@.bY4$Em#q", 291, (-1173), "Opening saved jar: ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ITableInfo iTableInfo0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      DBCopyPlugin dBCopyPlugin1 = null;
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      linkedList0.add((ITableInfo) null);
      DBUtil.convertTableToObjectList(linkedList0);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte) (-103);
      ThreadPoolExecutor.AbortPolicy threadPoolExecutor_AbortPolicy0 = new ThreadPoolExecutor.AbortPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = null;
      try {
        scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((byte) (-3), threadPoolExecutor_AbortPolicy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Graphics graphics0 = null;
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      byte byte0 = (byte)55;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)55;
      int int0 = (-5);
      Locale locale0 = Locale.FRANCE;
      DebugGraphics.flashCount();
      DateFormatSymbols dateFormatSymbols0 = new DateFormatSymbols(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = null;
      try {
        mockSimpleDateFormat0 = new MockSimpleDateFormat("9b1G48U+gD:", dateFormatSymbols0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'b'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Dimension dimension0 = defaultTreeCellRenderer0.getPreferredSize();
      defaultTreeCellRenderer0.getFocusTraversalPolicy();
      defaultTreeCellRenderer0.setFocusTraversalPolicy((FocusTraversalPolicy) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("0\"Wco", (String) null, "t", "T6P`W^k>", 3, (String) null, (-5225), 3, 3223, 16, "T6P`W^k>", "net.sourceforge.squirrel_sql.client.gui.db.SchemaNameLoadInfo", 16, 16, "T6P`W^k>");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      JMenu jMenu0 = new JMenu("E yrfZmoFu");
      jMenu0.getPopupMenu();
      basicCheckBoxUI0.getAccessibleChild(defaultTreeCellRenderer0, 592);
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "T6P`W^k>");
      basicCheckBoxUI3.getDefaultIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("t", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      dimension0.width = 592;
      DBUtil.replaceDistinctDataType(3551, tableColumnInfo0, (ISession) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "This database dialect doesn't support adding comments to columns", ";80`;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("W4+ i[ns<f:@@|\"", "Qfd_5AOhJrbNZ/", "Qfd_5AOhJrbNZ/", "\".H0~knq9tn#6D;iH", (-2), "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", (-1), (-158), 2, (-2333), "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "org.jboss.net.protocol.DelegatingURLConnection", (-1), 46, "SELECT viewtext ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("yf,]c", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("wO:oC`pa'");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Action[] actionArray0 = new Action[5];
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      defaultEditorKit_BeepAction0.getPropertyChangeListeners();
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      actionArray0[4] = (Action) defaultEditorKit_InsertBreakAction0;
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[1] = (Action) styledEditorKit_ForegroundAction1;
      actionArray1[2] = (Action) defaultEditorKit_InsertBreakAction0;
      actionArray1[3] = (Action) styledEditorKit_ForegroundAction0;
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0, ")3uR");
      styledEditorKit_ForegroundAction0.removePropertyChangeListener(jSpinner_NumberEditor0);
      TextAction.augmentList(actionArray0, actionArray1);
      defaultEditorKit_InsertBreakAction0.isEnabled();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      styledEditorKit_ForegroundAction0.putValue("", defaultEditorKit_BeepAction0);
      defaultEditorKit_BeepAction0.getPropertyChangeListeners();
      TextAction.augmentList(actionArray0, actionArray1);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "catalogFilterExclude";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "DEC", "catalogFilterExclude");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[Aa3,MBv#ka)", "Pre@erencesPanel.fetchSizeToolTip", "[Aa3,MBv#ka)", "[Aa3,MBv#ka)", 1111, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-905), (-385), (-1861), (-905), "Pre@erencesPanel.fetchSizeToolTip", "1@\"oBoO#='8?cfG`WX", (-1861), 1111, "o&4|<7T<E#L");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      byte[] byteArray0 = new byte[10];
      DatabaseObjectType.createNewDatabaseObjectType("$<o4C");
      byteArray0[0] = (byte)121;
      DatabaseObjectType.createNewDatabaseObjectType("1@\"oBoO#='8?cfG`WX", (Icon) null);
      byteArray0[1] = (byte)121;
      byteArray0[2] = (byte) (-35);
      byteArray0[4] = (byte)121;
      byteArray0[5] = (byte) (-35);
      byteArray0[6] = (byte)17;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT;
      DatabaseObjectType.createNewDatabaseObjectType("DBUtil.nfobndblobmem");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1111, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("o&4|<7T<E#L", "hd", "org.jfree.data.time.TimePeriodValuesCollection", "org.jfree.data.time.TimePeriodValuesCollection", (-270), "1@\"oBoO#='8?cfG`WX", (-270), 305, (-385), (-3), "org.jfree.data.time.TimePeriodValuesCollection", "org.jfree.data.time.TimePeriodValuesCollection", 7, (-3659), "org.jfree.data.time.TimePeriodValuesCollection");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType.createNewDatabaseObjectType("V/vW=EEb X1u]q6rNs");
      DatabaseObjectType.createNewDatabaseObjectType("V/vW=EEb X1u]q6rNs", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.UDT;
      DatabaseObjectType.createNewDatabaseObjectType("&UW?Cm(PKhWe/z:|");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-270), int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[8];
      actionArray0[0] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[6] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[7] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[1] = (Action) defaultEditorKit_PasteAction0;
      actionArray1[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[3] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray2 = new Action[6];
      actionArray2[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      defaultEditorKit_PasteAction0.getPropertyChangeListeners();
      actionArray2[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[5] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray1, actionArray2);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "catalogFilterExclude", "catalogFilterExclude");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, (String) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[8];
      actionArray0[0] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[6] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[7] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[1] = (Action) defaultEditorKit_PasteAction0;
      actionArray1[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[3] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray2 = new Action[6];
      actionArray2[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      defaultEditorKit_PasteAction0.getPropertyChangeListeners();
      actionArray2[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[5] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray1, actionArray2);
      JToggleButton jToggleButton0 = new JToggleButton(actionArray1[2]);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "d|9+U+y", ".");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, ".", "v", "AGgr4eY$]", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DE%C");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      ISession iSession0 = null;
      TableColumnInfo tableColumnInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DBUtil.setLastStatementValues("");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE;
      DatabaseObjectType.createNewDatabaseObjectType("e/ERIusTv8cJfMQ]:");
      SchemaInfoUpdateListener schemaInfoUpdateListener0 = mock(SchemaInfoUpdateListener.class, new ViolatedAssumptionAnswer());
      DBUtil dBUtil0 = new DBUtil();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      List<ITableInfo> list1 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBUtil.convertTableToObjectList(list0);
      assertFalse(list0.equals((Object)list1));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Hm` wIVuxzf'dDb", "_{nz!OxYo'%Qaz}m", "'l4k&2sgb%> B/", "'l4k&2sgb%> B/", (-1797), "Hm` wIVuxzf'dDb", 2002, 2, 0, 0, "select  'CREATE OR REPLACE VIEW ' || VIEW_NAME ||' AS ', TEXT ", "Hm` wIVuxzf'dDb", 2002, 70, "=Wx");
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getApplication();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo("ELET TEXT ", "s.J^w", "pluginAppFolder", "fixCase: unexpected exception: ", "_{nz!OxYo'%Qaz}m", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("I", "", "DROP TABLE ");
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "ALTER TABLE $childTableName$ ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("select view_definition from information_schema.views where table_schema = '", "MnemonicKey", "vkHK8;?ia;!G>0s~4 ", "net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl", 2710, "0\"Wco", 4192, 243, 2005, 1111, "values current timestamp", "kao", 1763, (-1073741822), "T6`^k>");
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("select view_definition from information_schema.views where table_schema = '", "a XA/\"JrJ", "values current timestamp", " from ", (-1319), ":Qq>6e1", (-1295), 1111, 243, 1763, "O|?~.mcA$@EZ o-", "vkHK8;?ia;!G>0s~4 ", (-1319), 2082, ")iS01Y-@l)s");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("0\"Wco", ":Qq>6e1", (String) null, "addToMenuAsCheckBoxMenuItem", (-5), "Il'{FvYB", 2367, (-399), 92, 2367, ":Qq>6e1", "Il'{FvYB", 1111, (-1789569704), "0\"Wco");
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      BasicCheckBoxUI basicCheckBoxUI2 = new BasicCheckBoxUI();
      JMenu jMenu0 = new JMenu("Il'{FvYB");
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      jPopupMenu0.getDebugGraphicsOptions();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      basicOptionPaneUI0.getMinimumSize(jMenu0);
      basicOptionPaneUI0.getMinimumSize(jMenu0);
      basicOptionPaneUI0.getPreferredSize(jMenu0);
      jPopupMenu0.setMaximumSize((Dimension) null);
      basicCheckBoxUI0.getMinimumSize(jMenu0);
      basicCheckBoxUI0.getAccessibleChild(jPopupMenu0, (-527));
      BasicCheckBoxUI basicCheckBoxUI3 = new BasicCheckBoxUI();
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "or.apache.log4j.helpers.FileWatchdog");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("l<y'F", "Max function is null for dialect=", "Max function is null for dialect=", "Max function is null for dialect=", 1958, "or.apache.log4j.helpers.FileWatchdog", 1111, 1111, (-3377), 2000, "l<y'F", ":fw.>Kr", 1958, 2000, "Q%_X");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("h.^f]k: utMHf#", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "h.^f]k: utMHf#");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("n", (Icon) imageIcon0);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DefaultEditorKit.DefaultKeyTypedAction defaultEditorKit_DefaultKeyTypedAction0 = new DefaultEditorKit.DefaultKeyTypedAction();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      Action[] actionArray0 = new Action[8];
      actionArray0[0] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[6] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray0[7] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray0, actionArray0);
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[1] = (Action) defaultEditorKit_PasteAction0;
      actionArray1[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray1[3] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray2 = new Action[6];
      actionArray2[0] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[1] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[2] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[3] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[4] = (Action) defaultEditorKit_DefaultKeyTypedAction0;
      actionArray2[5] = (Action) defaultEditorKit_PasteAction0;
      TextAction.augmentList(actionArray1, actionArray2);
      JToggleButton jToggleButton0 = new JToggleButton(actionArray1[2]);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("'xio'", " DROP NOT NULL", "lP1(F9l~l'", (String) null, 1, " ) values ( ", 1, 1111, (-1), (-1), "CannoP dd null serie/.", "K>)EF]!=", 741, 1, "CannoP dd null serie/.");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals(" DROP NOT NULL", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster1, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster9, (MouseListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster7, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster9);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(">y", "e\"a~TZEL0n", "S", "", 193, "S", (-3313), 34, 34, (-3313), ">y", "D58[_a^LvHM{?gM", 193, 2004, "Lo%1N+@.");
      int int0 = DBUtil.replaceDistinctDataType(2004, tableColumnInfo0, (ISession) null);
      assertEquals(2004, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseListener) aWTEventMulticaster9, (MouseListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster7, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster9);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(">y", "e\"a~TZEL0n", "S", "", 193, "S", (-3313), 34, 34, (-3313), ">y", "D58[_a^LvHM{?gM", 193, 2004, "Lo%1N+@.");
      int int0 = DBUtil.replaceDistinctDataType(2004, tableColumnInfo0, (ISession) null);
      assertEquals(2004, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "DBUtil.error.tablenotfound");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JTree jTree0 = new JTree();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "O&SS^)l7PZb\"xDG", "O&SS^)l7PZb\"xDG", "eK :!(]]7m!q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      Graphics graphics0 = null;
      int int0 = Integer.MIN_VALUE;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("s{`Zi0X", "Q1kvjYLmaSUW~vw", "s{`Zi0X", "", (-392), "s{`Zi0X", (-392), (-392), 109, Integer.MIN_VALUE, "", "s{`Zi0X", (-392), 1265, "Encountered unexpected exception while attempting to determine if catalogs are used in >able defin!tions");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "Encountered unexpected exception while attempting to determine if catalogs are used in >able defin!tions", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowListener) aWTEventMulticaster3, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster7, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster5, (MouseListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ItemListener) aWTEventMulticaster6, (ItemListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster10, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster7, (MouseWheelListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster5, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster6);
      Class<DefaultOHLCDataset> class0 = DefaultOHLCDataset.class;
      AWTEventMulticaster.getListeners((EventListener) aWTEventMulticaster3, class0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster12, (MouseWheelListener) aWTEventMulticaster8);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("sts)1^&J1$@_NJO2", "sts)1^&J1$@_NJO2", "ja|;P?b]5o#&%z}WO+h", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2105376123), "\n", (-2105376123), (-2105376123), (-617), 9, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ja|;P?b]5o#&%z}WO+h", 3, 4128, "+4w,4zty'wz1+/O");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType((-2105376123), tableColumnInfo0, (ISession) null);
      assertEquals((-2105376123), int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getSquirrelHomeDir();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getDatabaseDriversFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl7.getJDBCDebugLogFile();
      applicationFileWrappersImpl7.getDatabaseAliasesFile();
      applicationFileWrappersImpl7.getDatabaseDriversFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("bit_length", "bit_length", "KJ|82l)", foreignKeyInfo1, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getSquirrelHomeDir();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl5.getJDBCDebugLogFile();
      applicationFileWrappersImpl7.getUserSQLHistoryFile();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl8 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl8.getDatabaseDriversFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("leading", "leading", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISession) null, true, 22);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Action[] actionArray0 = new Action[5];
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      actionArray0[4] = (Action) defaultEditorKit_InsertBreakAction0;
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[1] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[2] = (Action) defaultEditorKit_InsertBreakAction0;
      actionArray1[3] = (Action) styledEditorKit_ForegroundAction0;
      TextAction.augmentList(actionArray0, actionArray1);
      TextAction.augmentList(actionArray0, actionArray0);
      TextAction.augmentList(actionArray0, actionArray0);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      JToggleButton jToggleButton0 = new JToggleButton(styledEditorKit_UnderlineAction0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "jMQ'~ vfIR+'k*S", "~RzPv\"78Fq47\"]FQxP");
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "~RzPv\"78Fq47\"]FQxP", (ITableInfo) null, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "]EK6a1b|FCPv%", "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", "`2qnH", 2001, "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ", 2001, (-442), 2930, 2930, " tableName = ", ">JpQj)d$-FEl`Y", 2001, 114, ">JpQj)d$-FEl`Y");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("+j[9;qbshT%", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("Xwa.tx~{~Apbm7", "aNgS&U", "aNgS&U");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      DBUtil.setLastStatement("2~0&$j32u~KyHj");
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      String string0 = "Q1kvjYLmaSUW~vw";
      int int0 = 1265;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1265);
      BasicCheckBoxUI basicCheckBoxUI1 = new BasicCheckBoxUI();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      JPopupMenu jPopupMenu0 = new JPopupMenu("\"emB9");
      basicCheckBoxUI1.getAccessibleChild(jPopupMenu0, 1265);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", "#WAzSZ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MM", (String) null, "9-3|gJ", (String) null, (-665), "9-3|gJ", (-665), (-665), (-665), (-665), "9-3|gJ", (String) null, (-665), (-665), "9-3|gJ");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("XqI/#mDw<6+", " Tto 128.", "XqI/#mDw<6+", " Tto 128.", (-665), "kao", 243, (-665), 4192, 4192, "", "kao", (-665), (-1319), "9-3|gJ");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      TableColumnInfo tableColumnInfo2 = new TableColumnInfo("a XA/\"JrJ", "MM", "(C2H", "", (-665), "9-3|gJ", (-665), (-665), (-665), (-1718), " Tto 128.", "kao", (-665), 2082, " Tto 128.");
      tableColumnInfoArray0[2] = tableColumnInfo2;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("null,  Tto 128., ", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("MM", (String) null, "9-3|gJ", (String) null, (-665), "9-3|gJ", (-665), (-665), (-665), (-665), "9-3|gJ", (String) null, (-665), (-1715), "9-3|gJ");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("XqI/#mDw<6+", " to 128.", "XqI/#mDw<6+", " to 128.", (-665), "kao", 243, (-665), (-1715), (-1715), "", "kao", (-665), (-1319), "");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("null,  to 128., null", string0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener2);
      MouseWheelListener mouseWheelListener4 = AWTEventMulticaster.remove(mouseWheelListener3, mouseWheelListener1);
      MouseWheelListener mouseWheelListener5 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener3);
      MouseWheelListener mouseWheelListener6 = AWTEventMulticaster.add(mouseWheelListener4, mouseWheelListener1);
      AWTEventMulticaster.remove(mouseWheelListener4, mouseWheelListener5);
      MouseWheelListener mouseWheelListener7 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener3);
      AWTEventMulticaster.remove(mouseWheelListener4, mouseWheelListener2);
      MouseWheelListener mouseWheelListener8 = AWTEventMulticaster.remove(mouseWheelListener5, mouseWheelListener2);
      AWTEventMulticaster.add(mouseWheelListener6, mouseWheelListener5);
      AWTEventMulticaster.remove(mouseWheelListener4, mouseWheelListener6);
      MouseWheelListener mouseWheelListener9 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener7);
      AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener10 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener2);
      MouseWheelListener mouseWheelListener11 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener10);
      AWTEventMulticaster.remove(mouseWheelListener4, mouseWheelListener6);
      MouseWheelListener mouseWheelListener12 = AWTEventMulticaster.add(mouseWheelListener8, mouseWheelListener3);
      AWTEventMulticaster.add(mouseWheelListener12, mouseWheelListener11);
      AWTEventMulticaster.remove(mouseWheelListener9, mouseWheelListener7);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "a XA/\"JrJ", "]6=O_=]CT`/f)p", "]6=O_=]CT`/f)p", 8, "bM@*(&%CEvxF", (-1718), (-1073741822), 2082, 8, "]6=O_=]CT`/f)p", "]6=O_=]CT`/f)p", (-1073741822), (-9), "(C2H");
      TableColumnInfo[] tableColumnInfoArray0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      JTree jTree0 = new JTree();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "hd", "bMBmk_ZdKZ}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      JToggleButton jToggleButton0 = new JToggleButton();
      BasicPopupMenuSeparatorUI basicPopupMenuSeparatorUI0 = new BasicPopupMenuSeparatorUI();
      basicPopupMenuSeparatorUI0.getMaximumSize(jToggleButton0);
      Dimension dimension0 = basicPopupMenuSeparatorUI0.getPreferredSize(jToggleButton0);
      dimension0.width = 1;
      jToggleButton0.setMaximumSize(dimension0);
      jToggleButton0.firePropertyChange(". Using 'length'", 't', 't');
      jToggleButton0.setDebugGraphicsOptions((-3769));
      jToggleButton0.contains(72, (-194));
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setImageObserver(jToggleButton0);
      imageIcon0.getIconWidth();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      assertTrue(dBCopyPreferenceBean0.isUseFileCaching());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JToggleButton jToggleButton0 = new JToggleButton("number(10,0)");
      jToggleButton0.setDebugGraphicsOptions(400);
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setImageObserver(jToggleButton0);
      imageIcon0.getIconWidth();
      FlowLayout flowLayout0 = new FlowLayout();
      flowLayout0.setAlignment(400);
      flowLayout0.removeLayoutComponent(jToggleButton0);
      imageIcon0.getImageLoadStatus();
      jToggleButton0.setLayout(flowLayout0);
      imageIcon0.getImageObserver();
      jToggleButton0.isDoubleBuffered();
      DefaultEditorKit.CopyAction defaultEditorKit_CopyAction0 = new DefaultEditorKit.CopyAction();
      DefaultEditorKit.CopyAction defaultEditorKit_CopyAction1 = new DefaultEditorKit.CopyAction();
      defaultEditorKit_CopyAction1.getPropertyChangeListeners();
      defaultEditorKit_CopyAction1.getKeys();
      JRadioButton jRadioButton0 = new JRadioButton(imageIcon0);
      jRadioButton0.setDebugGraphicsOptions((-1));
      imageIcon0.getIconWidth();
      boolean boolean0 = DBUtil.typesAreEquivalent((-451), 2000);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      String string0 = "DEC";
      Action[] actionArray0 = new Action[5];
      int int0 = 1007;
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      defaultEditorKit_BeepAction0.getPropertyChangeListeners();
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      actionArray0[4] = (Action) defaultEditorKit_InsertBreakAction0;
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) styledEditorKit_ForegroundAction0;
      DBUtil.typesAreEquivalent(1007, (-1073741822));
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int1 = (-791);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("checkOption", 1007, (-791), 1007);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      JToggleButton jToggleButton0 = new JToggleButton("number(10,0)");
      jToggleButton0.setDebugGraphicsOptions(400);
      jToggleButton0.getComponentListeners();
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setImageObserver(jToggleButton0);
      imageIcon0.getIconWidth();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 2001);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = 2367;
      DBUtil.typesAreEquivalent(1111, 1111);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int1 = (-3763);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("Il'{FvYB", (-3763), (-3763));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      int int0 = 0;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "DEC", "GMg;UCj", "DEC", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Action[] actionArray0 = new Action[5];
      StyledEditorKit.AlignmentAction styledEditorKit_AlignmentAction0 = new StyledEditorKit.AlignmentAction("DEC", 1007);
      actionArray0[0] = (Action) styledEditorKit_AlignmentAction0;
      Color color0 = DebugGraphics.flashColor();
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction0 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[1] = (Action) styledEditorKit_ForegroundAction0;
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      StyledEditorKit.ForegroundAction styledEditorKit_ForegroundAction1 = new StyledEditorKit.ForegroundAction("DEC", color0);
      actionArray0[3] = (Action) styledEditorKit_ForegroundAction1;
      DefaultEditorKit.InsertBreakAction defaultEditorKit_InsertBreakAction0 = new DefaultEditorKit.InsertBreakAction();
      actionArray0[4] = (Action) defaultEditorKit_InsertBreakAction0;
      Action[] actionArray1 = new Action[4];
      actionArray1[0] = (Action) styledEditorKit_ForegroundAction0;
      actionArray1[1] = (Action) styledEditorKit_ForegroundAction1;
      actionArray1[2] = (Action) defaultEditorKit_InsertBreakAction0;
      actionArray1[3] = (Action) styledEditorKit_ForegroundAction0;
      TextAction.augmentList(actionArray0, actionArray1);
      TextAction.augmentList(actionArray0, actionArray0);
      TextAction.augmentList(actionArray0, actionArray0);
      StyledEditorKit.UnderlineAction styledEditorKit_UnderlineAction0 = new StyledEditorKit.UnderlineAction();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&d;(A");
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "org.jfree.data.time.TimePeriodValuesCollection");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9-3|gJ", "9-3|gJ", "9-3|gJ", "9-3|gJ", 2428, "9-3|gJ", 2428, (-930), (-930), 2934, "9-3|gJ", "9-3|gJ", (-1861), (-930), "max");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("e\"a~TZEL0M'n", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("9-3|gJ", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Xk^9` 1AZL.lmYsel)");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SESSION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("o&4|<7T<E#L", "o&4|<7T<E#L", "o&4|<7T<E#L", "v,l2t!RtEX*|7r%{^+!", 1587, "o&4|<7T<E#L", 1587, 133, 133, 1587, "o&4|<7T<E#L", "v,l2t!RtEX*|7r%{^+!", (-5210), 1587, "o&4|<7T<E#L");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1587, int0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }
}
