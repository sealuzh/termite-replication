/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 12:59:56 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "s6a";
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("s6a", mockThrowable0);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "s6a", messageFormatter_LoadBundleError0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError1 = new MessageFormatter.LoadBundleError("s6a", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter_LoadBundleError1.error = (Throwable) mockThrowable0;
      StringReader stringReader0 = new StringReader("s6a");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter_LoadBundleError0.bundleName = null;
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) applicationException0;
      objectArray0[1] = (Object) "s6a";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList0);
      messageFormatter_LoadBundleError1.error = (Throwable) applicationException0;
      messageFormatter_LoadBundleError1.error = (Throwable) applicationException0;
      Locale locale0 = new Locale("s6a");
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) "s6a", (Object) messageFormatter_LoadBundleError1.error);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7130884330904164
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "s6a";
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("s6a", mockThrowable0);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "s6a", messageFormatter_LoadBundleError0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError1 = new MessageFormatter.LoadBundleError("s6a", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter_LoadBundleError1.error = (Throwable) mockThrowable0;
      StringReader stringReader0 = new StringReader("s6a");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) applicationException0;
      objectArray0[1] = (Object) "s6a";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList0);
      messageFormatter_LoadBundleError1.error = (Throwable) applicationException0;
      Locale locale0 = new Locale("s6a");
      ClassLoader.getSystemClassLoader();
      messageFormatter0.getMessage("s6a", (Object) "s6a", (Object) messageFormatter_LoadBundleError1.error);
      linkedList0.add("resources.messages.standard");
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      List<String> list2 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7130884330904164
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "s6a";
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("s6a", mockThrowable0);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "s6a", messageFormatter_LoadBundleError0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError1 = new MessageFormatter.LoadBundleError("s6a", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter_LoadBundleError1.error = (Throwable) mockThrowable0;
      MockPrintStream mockPrintStream0 = new MockPrintStream("9+c7IlV");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0, false);
      PrintWriter printWriter0 = mockPrintWriter1.printf("", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      applicationException0.printStackTrace(printWriter0);
      StringReader stringReader0 = new StringReader("s6a");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) applicationException0;
      objectArray0[1] = (Object) "s6a";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList0);
      messageFormatter_LoadBundleError1.error = (Throwable) applicationException0;
      Locale locale0 = new Locale("s6a");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      messageFormatter0.getMessage("s6a", (Object) linkedList1, (Object) list0, (Object) classLoader0);
      linkedList0.add("resources.messages.standard");
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      List<String> list2 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object object0 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.lts.application.errors.initializingWindow");
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ResourceBundle.clearCache();
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) messageFormatter0;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      ApplicationException applicationException0 = new ApplicationException((String) null);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", applicationException0);
      linkedList0.add(messageFormatter_LoadBundleError0);
      linkedList0.add(messageFormatter_LoadBundleError0);
      messageFormatter0.createLoadException(linkedList0);
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      linkedList0.add((Locale.LanguageRange) null);
      linkedList0.spliterator();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      locale0.getUnicodeLocaleAttributes();
      Locale locale1 = Locale.US;
      locale0.getDisplayLanguage(locale1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale2 = new Locale("QU\"%5OfXv6]", "QU\"%5OfXv6]", "NM");
      Locale locale3 = new Locale("QU\"%5OfXv6]", "Hq3JBgj`?Cg!g");
      Locale locale4 = Locale.ITALY;
      Locale locale5 = Locale.TRADITIONAL_CHINESE;
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.add("zU:Xqbq$");
      ClassLoader.getSystemClassLoader();
      Locale locale6 = Locale.JAPAN;
      Locale locale7 = Locale.CANADA_FRENCH;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("Hq3JBgj`?Cg!g");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      messageFormatter0.temp();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":Y_M0");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      File file0 = MockFile.createTempFile("`oy", "error processing file ");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      file0.mkdir();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      linkedList0.remove((Object) sequenceInputStream0);
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "resources.messages.standard");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      applicationException0.getSuppressed();
      messageFormatter0.createLoadException(linkedList0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<SequenceInputStream> enumeration1 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.myLastException;
      MockThrowable mockThrowable0 = new MockThrowable((Throwable) null);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("s$&_BRGc>CgV-", mockThrowable0);
      messageFormatter_LoadBundleError0.error = null;
      Integer integer0 = new Integer(392);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "{^PNWZP=IE%@", integer0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError1 = new MessageFormatter.LoadBundleError("resources.messages.standard", (Throwable) null);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      messageFormatter1.temp();
      messageFormatter1.myLastException = (Throwable) applicationException0;
      messageFormatter1.getLastException();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = Locale.CANADA_FRENCH;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale.getISOLanguages();
      classLoader0.getParent();
      try { 
        messageFormatter1.formatMessage("keyNotFound", messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      linkedList0.add((Locale.LanguageRange) null);
      linkedList0.spliterator();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.ITALY;
      locale0.getUnicodeLocaleAttributes();
      Locale locale1 = Locale.US;
      locale1.getDisplayName(locale0);
      locale1.stripExtensions();
      locale0.getDisplayLanguage(locale1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale locale2 = new Locale("QU\"%5OfXv6]", "QU\"%5OfXv6]", "NM");
      Locale locale3 = new Locale("QU\"%5OfXv6]", "Hq3JBgj`?Cg!g");
      Locale locale4 = Locale.ITALY;
      locale4.getDisplayScript(locale0);
      Locale locale5 = Locale.TRADITIONAL_CHINESE;
      LinkedList<String> linkedList5 = new LinkedList<String>();
      linkedList5.add("zU:Xqbq$");
      ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale6 = Locale.SIMPLIFIED_CHINESE;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", 5);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", 5);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", (-2049870809));
      stackTraceElementArray0[3] = stackTraceElement2;
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "1d8:U$~*oD5\u0000cjW;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", (-12));
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", (-12));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, ")O2LKmiu hQZ;(=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.948720592834763
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      messageFormatter0.temp();
      StringReader stringReader0 = new StringReader("java.class");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      String string0 = messageFormatter0.formatMessage("java.class", messageFormatter0.DEFAULT_BUNDLE_PATH);
      assertEquals("", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer((-2111));
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getControl(list0);
      String string0 = "0`FM.ewKmQ0}jyvjux";
      List<String> list1 = resourceBundle_Control1.getFormats("0`FM.ewKmQ0}jyvjux");
      ResourceBundle.Control.getNoFallbackControl(list0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control.getControl(list0);
      List<String> list2 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control.getControl(list1);
      List<String> list3 = resourceBundle_Control0.getFormats("|o9< 1WIla*8");
      ResourceBundle.Control.getControl(list3);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("RmH", "|o9< 1WIla*8", "0`FM.ewKmQ0}jyvjux");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("|o9< 1WIla*8", applicationException0);
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("|o9< 1WIla*8", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object object0 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.lts.application.errors.initializingWindow");
      Object object1 = new Object();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      String string0 = "WzR`P^-5,ehbWWVW";
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) (byte)4;
      objectArray0[2] = (Object) (byte)2;
      objectArray0[3] = (Object) "WzR`P^-5,ehbWWVW";
      Object object2 = new Object();
      objectArray0[4] = object2;
      objectArray0[5] = (Object) list0;
      objectArray0[6] = (Object) list0;
      objectArray0[7] = (Object) list0;
      objectArray0[8] = object0;
      try { 
        messageFormatter0.formatMessage("WzR`P^-5,ehbWWVW", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) messageFormatter0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      predicate1.or(predicate2);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      predicate2.and(predicate1);
      Predicate<Object> predicate6 = predicate0.and(predicate1);
      Predicate<Object> predicate7 = predicate2.and(predicate6);
      Predicate<Object> predicate8 = predicate7.or(predicate1);
      predicate7.or(predicate0);
      Predicate<Object> predicate9 = predicate2.negate();
      predicate5.or(predicate7);
      Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate10 = predicate4.or(predicate1);
      Predicate<Object> predicate11 = predicate0.negate();
      Predicate<Object> predicate12 = predicate8.negate();
      Predicate<Object> predicate13 = predicate9.or(predicate3);
      Predicate<Object> predicate14 = predicate13.or(predicate4);
      predicate6.and(predicate14);
      predicate1.negate();
      Predicate<Object> predicate15 = predicate0.and(predicate3);
      predicate15.negate();
      predicate13.or(predicate0);
      predicate12.and(predicate3);
      predicate8.negate();
      predicate15.or(predicate10);
      predicate1.or(predicate4);
      predicate13.and(predicate9);
      Predicate<Object> predicate16 = predicate14.and(predicate11);
      Predicate<Object> predicate17 = predicate8.and(predicate16);
      predicate5.or(predicate11);
      predicate11.or(predicate16);
      predicate9.and(predicate1);
      predicate17.and(predicate7);
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      List list1 = MessageFormatter.buildList(messageFormatter0.DEFAULT_BUNDLE_PATH);
      assertEquals(1, list1.size());
      
      List list2 = MessageFormatter.buildList((Object[]) null);
      assertFalse(list2.equals((Object)list1));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)1;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Object object0 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.lts.application.errors.initializingWindow");
      Object object1 = new Object();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("WzR`P^-5,ehbWWVW");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.setDefaultAssertionStatus(false);
      classLoader1.clearAssertionStatus();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.clearAssertionStatus();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration2);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("UYkIvjUVt", (Object) enumeration0, (Object) pipedInputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      List list0 = messageFormatter0.listResources("javproperies", classLoader1);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("s6a", mockThrowable0);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "s6a", messageFormatter_LoadBundleError0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
      StringReader stringReader0 = new StringReader("s6a");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      propertyResourceBundle0.handleGetObject("5u}uf+7o??:iH");
      Object object0 = new Object();
      messageFormatter0.formatMessage("s6a", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH, (ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7130884330904164
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "s6a";
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("s6a", mockThrowable0);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "s6a", messageFormatter_LoadBundleError0);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError1 = new MessageFormatter.LoadBundleError("s6a", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter_LoadBundleError1.error = (Throwable) mockThrowable0;
      StringReader stringReader0 = new StringReader("s6a");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) applicationException0;
      objectArray0[1] = (Object) "s6a";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList0);
      messageFormatter_LoadBundleError1.error = (Throwable) applicationException0;
      Locale locale0 = new Locale("s6a");
      ClassLoader.getSystemClassLoader();
      messageFormatter0.getMessage("s6a");
      linkedList0.add("resources.messages.standard");
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      List<String> list2 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.US;
      locale0.getExtension('x');
      ApplicationException applicationException0 = new ApplicationException("G}<2F1p-qg", locale0);
      ApplicationException applicationException1 = new ApplicationException("G}<2F1p-qg", messageFormatter0, (Object) null);
      ApplicationException applicationException2 = new ApplicationException(applicationException1, "/");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("=s");
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control.getControl(list1);
      resourceBundle_Control0.getFormats("=s");
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<String> list2 = resourceBundle_Control1.getFormats("=s");
      ResourceBundle.Control resourceBundle_Control2 = ResourceBundle.Control.getNoFallbackControl(list2);
      List<String> list3 = resourceBundle_Control2.getFormats("rq}5!>jE?N2");
      ResourceBundle.Control.getNoFallbackControl(list3);
      ResourceBundle.Control.getControl(list0);
      List<String> list4 = ResourceBundle.Control.FORMAT_DEFAULT;
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control.getControl(list4);
      List<String> list5 = ResourceBundle.Control.FORMAT_DEFAULT;
      ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)34;
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte) (-3);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3373, 46);
      linkedList0.add((InputStream) byteArrayInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.io.ByteArrayInputStream cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", 5);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", "1d8:U$~*oD5\u0000cjW;", 5);
      StackTraceElement stackTraceElement2 = new StackTraceElement("nv", "aT !Z", "1d8:U$~*oD5\u0000cjW;", 154);
      StackTraceElement stackTraceElement3 = new StackTraceElement("com.lts.util.CollectionUtils$2", "", "qtH!6[jImU", 738);
      StackTraceElement stackTraceElement4 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "qtH!6[jImU", ",D:eU\"8", (-1454));
      StackTraceElement stackTraceElement5 = new StackTraceElement("1d8:U$~*oD5\u0000cjW;", "m*7p@O4M?q7KUpv", ";NZ", 20);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) messageFormatter0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      predicate1.negate();
      Predicate<Object> predicate5 = predicate1.or(predicate2);
      Predicate<Object> predicate6 = predicate2.and(predicate4);
      Predicate<Object> predicate7 = predicate5.negate();
      predicate0.negate();
      Predicate<Object> predicate8 = predicate2.and(predicate1);
      Predicate<Object> predicate9 = predicate0.and(predicate1);
      predicate7.negate();
      Predicate<Object> predicate10 = predicate1.negate();
      predicate9.and(predicate6);
      Predicate<Object> predicate11 = predicate10.or(predicate0);
      Predicate<Object> predicate12 = predicate2.negate();
      predicate9.and(predicate12);
      Predicate<Object> predicate13 = predicate2.negate();
      predicate13.or(predicate9);
      predicate2.negate();
      Predicate<Object> predicate14 = predicate3.negate();
      Predicate<Object> predicate15 = predicate14.or(predicate4);
      predicate6.or(predicate1);
      predicate1.negate();
      predicate3.or(predicate12);
      Predicate<Object> predicate16 = predicate5.and(predicate9);
      predicate5.and(predicate8);
      predicate15.negate();
      predicate11.negate();
      predicate6.test(predicate16);
      predicate13.negate();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.JAPANESE;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class, java.properties; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer((-3787));
      Integer integer1 = new Integer((-3787));
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("])+}", (Object) integer0, (Object) integer1, (Object) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      predicate2.and(predicate0);
      predicate4.and(predicate0);
      Predicate<Object> predicate5 = predicate0.and(predicate1);
      predicate4.negate();
      Predicate<Object> predicate6 = predicate0.and(predicate5);
      predicate4.or(predicate6);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate3.and(predicate8);
      Object object1 = new Object();
      Predicate.isEqual(object1);
      predicate2.and(predicate0);
      predicate9.or(predicate1);
      predicate0.negate();
      predicate2.negate();
      predicate0.and(predicate9);
      predicate2.negate();
      predicate4.and(predicate1);
      predicate0.and(predicate7);
      predicate9.negate();
      predicate1.negate();
      Locale locale0 = Locale.forLanguageTag("yp_g}jj(}^|o;");
      Locale locale1 = Locale.CHINA;
      locale0.getDisplayScript(locale1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      String string0 = messageFormatter0.listToString(list0);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Predicate<Object> predicate4 = predicate0.negate();
      predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate4.and(predicate2);
      Predicate<Object> predicate6 = predicate0.and(predicate5);
      Predicate<Object> predicate7 = predicate0.negate();
      predicate2.negate();
      Predicate<Object> predicate8 = predicate1.negate();
      predicate7.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate6.and(predicate2);
      Predicate<Object> predicate11 = predicate10.or(predicate8);
      Predicate<Object> predicate12 = Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate13 = predicate4.or(predicate12);
      predicate13.or(predicate6);
      predicate6.and(predicate4);
      predicate12.negate();
      Predicate<Object> predicate14 = predicate7.or(predicate1);
      predicate9.or(predicate8);
      ApplicationException applicationException0 = new ApplicationException("aI%P^>v/>lV", predicate9, predicate11);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("aI%P^>v/>lV", applicationException0);
      predicate12.test(messageFormatter_LoadBundleError0);
      Predicate.isEqual((Object) predicate14);
      Predicate<Object> predicate15 = predicate2.or(predicate14);
      Predicate<Object> predicate16 = predicate14.and(predicate8);
      predicate6.negate();
      predicate12.test(predicate3);
      predicate10.and(predicate15);
      predicate13.or(predicate9);
      predicate7.negate();
      Predicate<Object> predicate17 = predicate16.negate();
      predicate17.and(predicate7);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("aI%P^>v/>lV", "US9l`&x;o");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration2);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object[] objectArray0 = new Object[7];
      Predicate<Object> predicate0 = Predicate.isEqual(objectArray0[0]);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate0);
      Predicate<Object> predicate5 = predicate3.and(predicate4);
      Predicate<Object> predicate6 = predicate2.and(predicate0);
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate0.and(predicate1);
      predicate7.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate2.or(predicate7);
      Predicate<Object> predicate11 = predicate5.or(predicate9);
      Predicate<Object> predicate12 = predicate1.negate();
      Predicate<Object> predicate13 = predicate6.negate();
      predicate4.test(predicate9);
      predicate13.or(predicate11);
      predicate2.test(predicate5);
      Predicate<Object> predicate14 = predicate1.or(predicate10);
      predicate5.and(predicate6);
      Predicate<Object> predicate15 = predicate1.negate();
      Predicate<Object> predicate16 = predicate8.or(predicate4);
      Predicate<Object> predicate17 = predicate7.or(predicate9);
      predicate17.negate();
      predicate17.negate();
      predicate8.and(predicate15);
      predicate0.negate();
      Predicate<Object> predicate18 = predicate16.and(predicate15);
      Predicate<Object> predicate19 = predicate16.negate();
      predicate12.test(predicate0);
      predicate13.negate();
      predicate8.and(predicate3);
      predicate14.or(predicate18);
      predicate12.negate();
      predicate10.and(predicate19);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = messageFormatter0.listToString(linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) "com.lts.swing.tree.EditTree";
      objectArray0[5] = (Object) messageFormatter0;
      objectArray0[6] = (Object) messageFormatter0;
      Object object0 = new Object();
      objectArray0[7] = object0;
      objectArray0[8] = (Object) "com.lts.swing.tree.EditTree";
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("com.lts.swing.tree.EditTree", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.310106597280475
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      List<String> list1 = resourceBundle_Control0.getFormats("s6a");
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getNoFallbackControl(list1);
      ResourceBundle.Control resourceBundle_Control2 = ResourceBundle.Control.getControl(list1);
      List<String> list2 = resourceBundle_Control2.getFormats("s6a");
      ResourceBundle.Control.getNoFallbackControl(list2);
      List<String> list3 = resourceBundle_Control1.getFormats("s6a");
      ResourceBundle.Control.getNoFallbackControl(list3);
      ResourceBundle.Control.getNoFallbackControl(list2);
      List<String> list4 = ResourceBundle.Control.FORMAT_DEFAULT;
      ResourceBundle.Control.getNoFallbackControl(list3);
      ResourceBundle.Control.getControl(list0);
      List<String> list5 = ResourceBundle.Control.FORMAT_DEFAULT;
      ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      try { 
        messageFormatter0.initializeResourceBundle(list3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      Enumeration<SequenceInputStream> enumeration2 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) sequenceInputStream1;
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream1);
      String string0 = messageFormatter0.formatMessage("\"nj5{[_p]76Y8W", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=R_14Ty|=j]*a%d");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) messageFormatter0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate0.and(predicate1);
      Predicate<Object> predicate7 = predicate4.and(predicate0);
      Predicate<Object> predicate8 = predicate7.and(predicate3);
      predicate5.or(predicate0);
      Predicate<Object> predicate9 = predicate7.negate();
      Predicate<Object> predicate10 = predicate8.or(predicate3);
      predicate0.and(predicate7);
      predicate2.test(predicate9);
      predicate6.or(predicate1);
      Predicate<Object> predicate11 = predicate2.negate();
      predicate2.or(predicate0);
      predicate6.negate();
      predicate11.and(predicate10);
      Predicate<Object> predicate12 = predicate9.negate();
      predicate3.or(predicate8);
      Predicate<Object> predicate13 = predicate12.and(predicate9);
      predicate8.or(predicate11);
      predicate12.and(predicate4);
      predicate3.or(predicate12);
      predicate7.and(predicate5);
      predicate5.and(predicate9);
      predicate12.negate();
      Predicate<Object> predicate14 = predicate2.negate();
      Predicate.isEqual((Object) predicate13);
      predicate14.or(predicate12);
      predicate14.or(predicate0);
      predicate9.and(predicate1);
      predicate6.negate();
      predicate1.or(predicate10);
      predicate1.negate();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      Locale locale0 = Locale.CHINA;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list0, (List<String>) null, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "app.properties", 5);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("app.properties", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", 5);
      stackTraceElementArray0[1] = stackTraceElement1;
      stackTraceElementArray0[6] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("app.properties", "app.properties", "1d8:U$~*D5\u0000cjW;", (-2049870809));
      stackTraceElementArray0[3] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", (-2013265904));
      StackTraceElement stackTraceElement4 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "app.properties", "app.properties", (-2013265904));
      Locale locale0 = Locale.ENGLISH;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[7];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", (-12));
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", (-12));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.getMessage((String) null, (Object[]) stackTraceElementArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("/");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "6&@0^ SI)lrI'_|", 5);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("6&@0^ SI)lrI'_|", "1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", 5);
      stackTraceElementArray0[1] = stackTraceElement1;
      stackTraceElementArray0[6] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("6&@0^ SI)lrI'_|", "6&@0^ SI)lrI'_|", "1d8:U$~*D5\u0000cjW;", 5);
      stackTraceElementArray0[3] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("hi there", ".", "^2Ys", 5);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad(",G", ".");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("1d8:U$~*D5\u0000cjW;", "1d8:U$~*D5\u0000cjW;", "6&@0^ SI)lrI'_|", 5);
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[6] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("6&@0^ SI)lrI'_|", "6&@0^ SI)lrI'_|", "1d8:U$~*D5\u0000cjW;", 5);
      stackTraceElementArray0[3] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("hi there", ".", "1d8:U$~*D5\u0000cjW;", 5);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad(",G", ".");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Integer integer0 = new Integer((-2111));
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control resourceBundle_Control1 = ResourceBundle.Control.getControl(list0);
      List<String> list1 = resourceBundle_Control1.getFormats("0`FM.ewKmQ0}jyvjux");
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control.getNoFallbackControl(list0);
      ResourceBundle.Control.getControl(list0);
      List<String> list2 = ResourceBundle.Control.FORMAT_PROPERTIES;
      ResourceBundle.Control.getNoFallbackControl(list1);
      List<String> list3 = resourceBundle_Control0.getFormats("|o9< 1WIla*8");
      ResourceBundle.Control.getControl(list3);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      List<String> list4 = ResourceBundle.Control.FORMAT_DEFAULT;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) messageFormatter0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate1.and(predicate2);
      Predicate<Object> predicate6 = predicate2.and(predicate1);
      predicate6.or(predicate0);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate8 = predicate3.or(predicate7);
      Predicate<Object> predicate9 = predicate0.negate();
      Predicate<Object> predicate10 = predicate9.negate();
      predicate8.or(predicate4);
      Predicate<Object> predicate11 = predicate9.and(predicate5);
      Predicate<Object> predicate12 = predicate6.negate();
      Predicate<Object> predicate13 = predicate0.negate();
      predicate10.negate();
      Predicate<Object> predicate14 = predicate1.or(predicate12);
      predicate4.or(predicate10);
      Predicate<Object> predicate15 = predicate4.and(predicate14);
      predicate12.and(predicate15);
      Predicate<Object> predicate16 = predicate12.and(predicate13);
      Predicate<Object> predicate17 = predicate13.negate();
      predicate9.or(predicate17);
      predicate17.or(predicate3);
      predicate2.negate();
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate18 = predicate11.negate();
      Predicate.isEqual((Object) null);
      predicate18.and(predicate8);
      predicate16.or(predicate18);
      Predicate.isEqual((Object) predicate0);
      predicate18.or(predicate12);
      Predicate<Object> predicate19 = predicate9.negate();
      predicate19.negate();
      predicate7.and(predicate6);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
