/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 11:30:17 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8725141174245217
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("!I\"");
      xPathLexer1.or();
      Token token0 = xPathLexer1.nextToken();
      assertEquals("!", token0.getTokenText());
      
      xPathLexer1.and();
      Token token1 = xPathLexer1.slashes();
      assertEquals("I", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("E d^,z");
      xPathLexer2.identifier();
      Token token3 = xPathLexer2.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.rightParen();
      Token token4 = xPathLexer1.minus();
      assertEquals("\"", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("d", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.0558073933754346
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      Token token0 = xPathLexer0.equals();
      assertEquals("k", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("X]mJK_e");
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("q", token2.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("/?", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      XPathLexer xPathLexer3 = new XPathLexer("btH,lY6");
      Token token4 = xPathLexer3.nextToken();
      assertEquals("btH", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("V", token5.getTokenText());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("k", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(4, token7.getTokenType());
      assertEquals("]", token7.getTokenText());
      
      Token token8 = xPathLexer3.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer5.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.925188831120217
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer1.relationalOperator();
      xPathLexer1.leftBracket();
      xPathLexer0.dollar();
      xPathLexer1.pipe();
      xPathLexer1.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.minus();
      Token token0 = xPathLexer2.leftParen();
      assertEquals(1, token0.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.564030450104664
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("BpiR+Y");
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      xPathLexer0.rightParen();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer1.or();
      xPathLexer1.leftParen();
      xPathLexer0.equals();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.119881987093257
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.equals();
      assertEquals("%", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("R", token2.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("{>", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("/", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.setXPath("+x9-`");
      xPathLexer0.rightParen();
      Token token9 = xPathLexer0.minus();
      assertEquals("x", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token10 = xPathLexer1.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals("9-", token11.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token12 = xPathLexer1.identifier();
      assertEquals(15, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("$");
      Token token13 = xPathLexer3.nextToken();
      assertEquals("$", token13.getTokenText());
      
      xPathLexer1.rightParen();
      Token token14 = xPathLexer1.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer0.rightParen();
      assertEquals(2, token15.getTokenType());
      assertEquals("`", token15.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token16 = xPathLexer1.dollar();
      assertEquals(26, token16.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8990773808646935
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("X]mJK_e");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer1.at();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("k", token1.getTokenText());
      
      xPathLexer1.currentPosition();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("^q", token2.getTokenText());
      
      xPathLexer1.and();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer1.slashes();
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.nextToken();
      Token token5 = xPathLexer2.equals();
      assertEquals("]", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(".N|oDE2r(n");
      xPathLexer1.plus();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("?", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("V", token8.getTokenText());
      
      xPathLexer1.minus();
      XPathLexer xPathLexer4 = new XPathLexer("q<PDLc2<P");
      xPathLexer3.identifierOrOperatorName();
      Token token9 = xPathLexer4.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer4.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer4.pipe();
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer4.minus();
      assertEquals("D", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer3.nextToken();
      assertEquals("|", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
      
      xPathLexer4.leftParen();
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer3.plus();
      assertEquals("o", token14.getTokenText());
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer3.identifier();
      assertEquals("DE2r", token15.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.097781501574422
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+ 3<g");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("+", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(" ", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.setXPath("c+ 3<g");
      Token token3 = xPathLexer0.rightBracket();
      token3.toString();
      xPathLexer0.rightBracket();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals(" ", token4.getTokenText());
      
      xPathLexer0.identifier();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(7, token6.getTokenType());
      assertEquals("<", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("g", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      xPathLexer2.rightBracket();
      Token token13 = xPathLexer2.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.028482064103911
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer1.doubleColon();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (z6)", string0);
      
      xPathLexer1.setPreviousToken(token0);
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("]", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token5 = xPathLexer1.identifier();
      assertEquals("", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.dollar();
      assertEquals("`", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.minus();
      XPathLexer xPathLexer5 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token9 = xPathLexer5.leftParen();
      assertEquals("z", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1428751293049118
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer0.leftBracket();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.identifier();
      token0.toString();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      xPathLexer0.identifier();
      String string0 = token0.toString();
      assertEquals("[ (15) (q)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("=", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("m:", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("x+58KQx", token5.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.number();
      assertEquals("58", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1875646581335277
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.currentPosition();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer0.dollar();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.or();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.slashes();
      xPathLexer1.plus();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer1.at();
      xPathLexer1.setXPath("^a?lOCf?Wd4YbSrxp");
      xPathLexer0.identifier();
      xPathLexer1.rightParen();
      xPathLexer2.nextToken();
      xPathLexer1.literal();
      xPathLexer2.nextToken();
      xPathLexer2.relationalOperator();
      xPathLexer0.minus();
      Token token1 = xPathLexer2.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.199645850111061
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("O", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals("x", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer("c%O)xR{>/");
      Token token5 = xPathLexer0.star();
      assertEquals("{", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("S?s',_q'");
      Token token9 = xPathLexer3.comma();
      assertEquals("S", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer3.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer5.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer1.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6704825462047037
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(";@V+`");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer1.not();
      assertEquals(";", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer2.literal();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(16, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("dJ_'n$*~Ya");
      Token token5 = xPathLexer5.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("d", token5.getTokenText());
      
      Token token6 = xPathLexer5.leftBracket();
      assertEquals("J", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("V+", token8.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1804615075307563
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      Token token2 = xPathLexer0.not();
      assertEquals("/", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      token1.toString();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      String string0 = token1.toString();
      assertEquals("[ (15) (q)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("%", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("=m", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(":", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals(" ", token9.getTokenText());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(" ", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      xPathLexer1.or();
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer0.rightBracket();
      assertEquals("+", token14.getTokenText());
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer1.comma();
      assertEquals(32, token15.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4616768149740764
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(":_yaH 9+,eJ?N#A\"");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.rightBracket();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.563514167659728
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UW2Y;F` TY");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("U", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("W2", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("UW2Y;F` TY");
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("U", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals("W", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("2", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer2.leftParen();
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("Y", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7040050738515498
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("i5", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("E", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("<", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("%", token8.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6272529826193454
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ct~8lh");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("ct", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("8", token1.getTokenText());
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("_q=o07^Yp3[p");
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("_", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer2.dots();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("ct~8lh");
      Token token8 = xPathLexer5.dots();
      assertEquals("c", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5268906973953102
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Cotq]'jPiHE^N");
      Token token0 = xPathLexer0.slashes();
      assertEquals("C", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Q%SFl");
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("tq", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("'", token4.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.089750384084412
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.equals();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("O", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.nextToken();
      token0.toString();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("xR", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(12, token4.getTokenType());
      assertEquals(">/", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (1) (c)");
      xPathLexer1.plus();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer1.leftParen();
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("(", token11.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer3.mod();
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer0.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer0.star();
      assertEquals(20, token15.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2672658336296088
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.consume((-2909));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4576361860849534
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+ 3<g");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("c+ 3<g");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token1 = xPathLexer2.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("+", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("c+", token7.getTokenText());
      
      Token token8 = xPathLexer4.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer4.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6467074926126404
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("UW2Y;F` TY");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(";@V+`");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals(";", token0.getTokenText());
      
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.star();
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("`", token4.getTokenText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6316165917815293
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ct~8lh");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("!I\"");
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.literal();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("I", token1.getTokenText());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("\"", token3.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3794115356078898
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!I\"");
      xPathLexer0.literal();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("!", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("\"", token4.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6140843782142809
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|E_zZyC4uOTY`9o>pK;");
      XPathLexer xPathLexer1 = new XPathLexer("Q%SFl");
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("E_zZyC4uOTY", token2.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("`", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("|E_zZyC4uOTY`9o>pK;");
      Token token4 = xPathLexer3.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8985699940576546
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Wcok>78}WYUN-^");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer("S?s',_q'");
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      Token token3 = xPathLexer3.dollar();
      assertEquals("?", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer3.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("s", token5.getTokenText());
      
      Token token6 = xPathLexer1.relationalOperator();
      assertEquals(">", token6.getTokenText());
      assertEquals(9, token6.getTokenType());
      assertNotNull(token6);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("S?s',_q'");
      Token token7 = xPathLexer3.minus();
      assertEquals("'", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals(",", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer6 = new XPathLexer("Wcok>78}WYUN-^");
      Token token10 = xPathLexer6.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("Wc", token10.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.872007046937954
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("%:", token0.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.at();
      assertEquals("`", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.mod();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals("%", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9521722001150077
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token0 = xPathLexer1.leftBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (3) (-)", string0);
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(".", token2.getTokenText());
      assertEquals(31, token2.getTokenType());
      
      xPathLexer1.dollar();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.XPathLexer", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("voH}k1=s^{QO]!EQh+?");
      Token token4 = xPathLexer3.dollar();
      assertEquals("v", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer3.comma();
      assertEquals("o", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer3.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer3.operatorName();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5197634393191657
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("D\"!/e");
      xPathLexer1.slashes();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftParen();
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.colon();
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("D\"!/e");
      xPathLexer4.leftBracket();
      xPathLexer4.colon();
      xPathLexer3.at();
      xPathLexer4.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("~<[j6 DF0):{NX");
      xPathLexer5.minus();
      xPathLexer1.dots();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.842075661989064
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Wcok>78}WYUN-^");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer("S6?'1_'");
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      xPathLexer3.dollar();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer3.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.minus();
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("Wcok>78}WYUN-^");
      Token token7 = xPathLexer6.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("W", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("Wcok>78}WYUN-^");
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token8 = xPathLexer1.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.079920324926167
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("9JN");
      xPathLexer1.div();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7082583066709485
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("SA{+&>L@blGI.#i;");
      xPathLexer0.or();
      int int0 = xPathLexer0.endPosition();
      assertEquals(17, int0);
      
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("SA", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(">", token5.getTokenText());
      assertEquals(9, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.6167491081814165
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Wcok>78}WYUN-^");
      XPathLexer xPathLexer1 = new XPathLexer("Wcok>78}WYUN-^");
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer1.star();
      xPathLexer2.dollar();
      xPathLexer0.plus();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      assertNull(xPathLexer3.getXPath());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8939134235955895
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Wcok>78}WYUN-^");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("$gHDg!\"R:x9:R");
      xPathLexer0.nextToken();
      Token token2 = xPathLexer1.literal();
      assertEquals(27, token2.getTokenType());
      assertEquals("cok>78}", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals("U", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("N-", token5.getTokenText());
      
      Token token6 = xPathLexer3.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7670555863994
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jvzUrh\"wbgR");
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.setXPath("L-p(&/*m");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("L-p", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("(", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("-x(3h,L;4");
      xPathLexer2.div();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("&", token9.getTokenText());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("-", token10.getTokenText());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5174866619716858
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("BpiR+Y");
      xPathLexer0.minus();
      Token token0 = xPathLexer1.nextToken();
      assertEquals("BpiR", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.at();
      assertEquals("+", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6074888253018895
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("D\"!/e");
      Token token0 = xPathLexer1.slashes();
      assertEquals("D", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("D\"!/e");
      XPathLexer xPathLexer3 = new XPathLexer("D\"!/e");
      Token token1 = xPathLexer1.minus();
      assertEquals("\"", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer3.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("D", token3.getTokenText());
      
      Token token4 = xPathLexer2.dots();
      assertEquals("\"", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer4.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.284155290436085
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(12, token3.getTokenType());
      assertEquals("q/", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("?", token4.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.or();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      XPathLexer xPathLexer1 = new XPathLexer("}fjbc+[(eBPb#'q");
      Token token9 = xPathLexer1.equals();
      assertEquals("}", token9.getTokenText());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals("fj", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer1.dots();
      assertEquals("b", token15.getTokenText());
      assertEquals(13, token15.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token16 = xPathLexer0.minus();
      assertEquals(6, token16.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.012101847506522
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      Token token1 = xPathLexer0.dots();
      assertEquals("o", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token2 = xPathLexer1.leftBracket();
      xPathLexer1.identifier();
      token2.toString();
      Token token3 = xPathLexer1.slashes();
      assertEquals("'", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (17) (c)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (3) (-)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".werken.saxpath.XPathLexer", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (3) (-)");
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      xPathLexer0.nextToken();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7739882751880338
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ct~8lh");
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.star();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6649063658250731
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals("h", token2.getTokenText());
      
      xPathLexer0.star();
      xPathLexer1.leftBracket();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(20, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      Token token6 = xPathLexer1.comma();
      assertEquals("o", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("k'~W`nQ");
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals("k", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7467857158812379
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(".", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("k'~W`nQ");
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals("k", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.496748661279494
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("D\"!/e");
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("D", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("D\"!/e");
      xPathLexer1.nextToken();
      xPathLexer2.literal();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer3.comma();
      xPathLexer0.nextToken();
      xPathLexer2.nextToken();
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.2805565677414465
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("BpiR+Y");
      Token token0 = xPathLexer1.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Bp", token0.getTokenText());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("iR", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals("+", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.1116161536075575
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer1.literal();
      xPathLexer1.dollar();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer2.star();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      assertFalse(xPathLexer3.equals((Object)xPathLexer0));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.7171829464569144
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jvzUrh\"wbgR");
      Token token0 = xPathLexer0.slashes();
      assertEquals("j", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("vzUrh", token1.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("jvzUrh\"wbgR");
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.not();
      assertEquals("\"", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("-qlk");
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("-qlk");
      Token token8 = xPathLexer3.rightParen();
      assertEquals("-", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer2.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("-", token10.getTokenText());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.4433292885814764
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.doubleColon();
      xPathLexer0.mod();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-1195));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4395802788367955
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(3, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(1, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.000334721987711
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("x", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("R{>/", token7.getTokenText());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.9399798109366237
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      xPathLexer1.leftBracket();
      xPathLexer0.minus();
      xPathLexer1.leftParen();
      xPathLexer1.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer1.not();
      xPathLexer0.rightBracket();
      xPathLexer1.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      xPathLexer2.number();
      xPathLexer0.dollar();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("=");
      xPathLexer5.mod();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.consume();
      xPathLexer6.operatorName();
      xPathLexer5.nextToken();
      xPathLexer6.rightParen();
      xPathLexer1.relationalOperator();
      xPathLexer1.pipe();
      Token token0 = xPathLexer6.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6277487560719974
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cQ 3sg");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("cQ 3sg");
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      xPathLexer2.hasMoreChars();
      Token token2 = xPathLexer2.minus();
      assertEquals("-", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("s", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("fN(GY4vv/]N");
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer1.rightBracket();
      assertEquals("Q", token8.getTokenText());
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer4.nextToken();
      assertEquals(1, token9.getTokenType());
      assertEquals("(", token9.getTokenText());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      assertEquals(" ", token10.getTokenText());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6616901913004867
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("w", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("e", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.dots();
      assertEquals("r", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("k", token7.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.7855442979050389
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0PXb^");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("0", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer("0PXb^");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token1 = xPathLexer2.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer3.mod();
      xPathLexer2.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("PXb", token2.getTokenText());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6553538877754121
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(";@V+`");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(";@V+`", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer5.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer5.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer5.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals(";@", token7.getTokenText());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.3338681719413548
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sqyt?9");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("sqyt", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer1.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer1.rightParen();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":Vq|AYSi5r~CAf");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer2.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer3.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.992293878841922
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+ 3<g");
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(" ", token2.getTokenText());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.rightBracket();
      String string0 = token3.toString();
      assertEquals("[ (4) (3)", string0);
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("<", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("g", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5215289240809493
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]1~)_LEKct?G=t#jE$F");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.number();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("]", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("1", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("~", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.890331956677815
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.or();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      Token token8 = xPathLexer1.identifier();
      assertEquals(15, token8.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("0GYhaqO");
      Token token9 = xPathLexer2.nextToken();
      assertEquals("0", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.6033941447300861
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.equals();
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("X]mJK_e");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("X", token1.getTokenText());
      
      xPathLexer1.at();
      xPathLexer1.leftBracket();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer4.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("k", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer3.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.dots();
      Token token7 = xPathLexer3.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8501859657175457
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}VN3iTy");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("z", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("G<n^");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer2.dollar();
      assertEquals("G", token2.getTokenText());
      
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer("X_Pw9/Swp");
      Token token3 = xPathLexer0.star();
      assertEquals("`", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("S?s',_q'");
      Token token5 = xPathLexer4.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer4.plus();
      assertEquals("?", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("%", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer2.number();
      assertEquals(30, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6001784520315694
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ct~8lh");
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("TVbr]$?A*k/h0");
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token0 = xPathLexer3.slashes();
      assertEquals("[", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("~8lh", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("TVOC.");
      Token token7 = xPathLexer7.dots();
      assertEquals("T", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3854468238411441
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      Token token1 = xPathLexer2.leftBracket();
      assertEquals("^", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.dollar();
      assertEquals(26, token3.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.4470964781128437
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("LS6p /QXa9@ctX%4dh");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("LS6p", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.leftParen();
      assertEquals(1, token3.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8948206516995652
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6|b[8!ug]Es9");
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.LA((-1));
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.7007145004361992
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.equals();
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("X]mJK_e");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals(4, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      xPathLexer3.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("!T");
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("J", token6.getTokenText());
      
      Token token7 = xPathLexer5.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("!", token7.getTokenText());
      
      Token token8 = xPathLexer5.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("T", token8.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.518619784593558
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("D\"!/e");
      Token token0 = xPathLexer1.slashes();
      assertEquals("D", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("D\"!/e");
      xPathLexer1.nextToken();
      xPathLexer2.literal();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token3 = xPathLexer3.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer1.leftBracket();
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.getPreviousToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.291028470890675
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      XPathLexer xPathLexer1 = new XPathLexer("nraM+s!gxW2~@]:");
      Token token0 = xPathLexer0.minus();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%O)xR{>/", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals("n", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      xPathLexer1.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer2.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals("a", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8804945677005338
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("V", token4.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(21, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      Token token9 = xPathLexer1.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6669767566309441
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("z", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G<n^");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer2.dollar();
      assertEquals("G", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("G<n^");
      Token token3 = xPathLexer3.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("_EJ*.;W'>");
      xPathLexer3.identifierOrOperatorName();
      Token token4 = xPathLexer0.dots();
      assertEquals("`", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer0.at();
      assertEquals("%", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer3.relationalOperator();
      assertEquals(7, token6.getTokenType());
      assertEquals("<", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals("n", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.5963753045751392
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Wcok>78}WYUN-^");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer0.literal();
      xPathLexer2.nextToken();
      xPathLexer1.dollar();
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer("Wcok>78}WYUN-^");
      xPathLexer3.star();
      xPathLexer1.dollar();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      assertFalse(xPathLexer4.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.6588082433241975
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.dollar();
      assertEquals("q", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("/", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token3 = xPathLexer1.rightParen();
      assertEquals("k", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token4 = xPathLexer3.notEquals();
      assertEquals("k^", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer3.minus();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer4.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals("?", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals("V", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.minus();
      Token token9 = xPathLexer3.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("/", token9.getTokenText());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4106823858580144
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|E_zZyC4uOTY`9o>pK;");
      XPathLexer xPathLexer1 = new XPathLexer("Gj;5W6q");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Gj", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.identifier();
      assertEquals("", token2.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6198274631255472
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      XPathLexer xPathLexer2 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token2 = xPathLexer2.minus();
      assertEquals("-", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer2.dots();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals("-", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4404850773493902
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[*)Rl>i[{ \u0000>xgtL");
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("[*", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(2, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("R", token4.getTokenText());
      
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("O", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(")", token8.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token9 = xPathLexer0.minus();
      assertEquals("x", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.6066346675505163
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("z6", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.colon();
      assertEquals("`", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("`%z]`n>fhh}V3iTy", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("%", token7.getTokenText());
      
      xPathLexer4.nextToken();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token8 = xPathLexer0.dots();
      assertEquals("z", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer5.equals();
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.090603149036051
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("%", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("O", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(")", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("R{", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(9, token5.getTokenType());
      assertEquals(">", token5.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("c%O)xR{>/");
      Token token10 = xPathLexer1.plus();
      assertEquals("c", token10.getTokenText());
      
      xPathLexer0.not();
      Token token11 = xPathLexer1.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals("%", token11.getTokenText());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      assertEquals("O", token12.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("E d^,z");
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer1.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals(")", token14.getTokenText());
      
      Token token15 = xPathLexer0.dollar();
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer2.colon();
      assertEquals(18, token16.getTokenType());
      assertEquals("E", token16.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.0075038903545437
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1170));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.0301403178895554
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("m", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("er", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("k", token7.getTokenText());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("en.saxpath.Token", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("", token9.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.5411766670372906
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      XPathLexer xPathLexer1 = new XPathLexer("v)'9R1y!c_Lgs6{6");
      xPathLexer0.literal();
      xPathLexer1.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5576023167892843
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}VN3iTy");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("z", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G<n^");
      xPathLexer0.slashes();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("G<n^");
      Token token1 = xPathLexer3.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("_EJ*.;W'>");
      Token token2 = xPathLexer3.identifierOrOperatorName();
      assertEquals("", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer0.at();
      assertEquals("%", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer3.relationalOperator();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer6.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer("-qlk");
      Token token6 = xPathLexer7.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("-", token6.getTokenText());
      
      Token token7 = xPathLexer7.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("q", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("z", token8.getTokenText());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("_", token9.getTokenText());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("EJ", token11.getTokenText());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.6468341908464765
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|E_zZyC4uOTY`9o>pK;");
      Token token0 = xPathLexer0.star();
      assertEquals("|", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("|E_zZyC4uOTY`9o>pK;");
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.colon();
      assertEquals("E", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("_zZyC4uOTY", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("`", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals(1, token6.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.2474475857741878
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".dx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("d", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("Yi{b?#tKX-2(cL d");
      Token token5 = xPathLexer2.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.9733852221479737
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.currentPosition();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.equals();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("c%O)xR{>/");
      xPathLexer1.minus();
      XPathLexer xPathLexer2 = new XPathLexer("E d^,z");
      Token token6 = xPathLexer2.minus();
      assertEquals("E", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.identifierOrOperatorName();
      xPathLexer0.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("#|<?=}N7");
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("d", token7.getTokenText());
      
      xPathLexer2.rightParen();
      Token token8 = xPathLexer3.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(",z", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer5.not();
      assertEquals(23, token11.getTokenType());
      assertEquals("#", token11.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.2047063876144537
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      Token token4 = xPathLexer0.not();
      token4.toString();
      xPathLexer0.not();
      xPathLexer0.identifier();
      String string0 = token4.toString();
      assertEquals("[ (23) (x)", string0);
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("{", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.identifier();
      String string1 = token3.toString();
      assertEquals("[ (2) ())", string1);
      
      xPathLexer0.setPreviousToken(token1);
      assertEquals(21, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.doubleColon();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(9, token6.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.leftBracket();
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals("/", token9.getTokenText());
      assertEquals(17, token9.getTokenType());
      
      xPathLexer2.or();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.slashes();
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.0531267533516884
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("O", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("R", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("{", token6.getTokenText());
      
      Token token7 = xPathLexer0.relationalOperator();
      assertEquals(9, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("/", token8.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("}!MbO4{gjHmC");
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("}", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("x?D2_p]");
      xPathLexer2.operatorName();
      Token token10 = xPathLexer1.notEquals();
      assertEquals("!M", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("c%O)xR{>/");
      Token token11 = xPathLexer3.leftBracket();
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer1.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.3159581307013468
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+ 3<g");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("c+ 3<g");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("Q%SFl");
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("+ ", token2.getTokenText());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer6.minus();
      assertEquals(6, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.1835183909224773
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("O", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("xR", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token6);
      assertEquals("/", token6.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer3.whitespace();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer2.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer0.whitespace();
      assertEquals((-2), token14.getTokenType());
      assertEquals("", token14.getTokenText());
      
      Token token15 = xPathLexer1.doubleColon();
      assertEquals(19, token15.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.336779875367922
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("7", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.rightParen();
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token8.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("E d^,z");
      Token token9 = xPathLexer2.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      Token token10 = xPathLexer2.dots();
      assertEquals("d", token10.getTokenText());
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer2.rightBracket();
      assertEquals("^", token11.getTokenText());
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer2.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals(",", token12.getTokenText());
      
      Token token13 = xPathLexer2.identifier();
      assertEquals(15, token13.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.177132868048484
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.number();
      assertEquals("", token0.getTokenText());
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (15) (q)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token5 = xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token5);
      assertEquals("V", token5.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.minus();
      Token token6 = xPathLexer0.pipe();
      assertEquals("m", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.rightParen();
      Token token7 = xPathLexer0.minus();
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token8);
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals(" ", token10.getTokenText());
      
      Token token11 = xPathLexer1.at();
      assertEquals("o", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token12 = xPathLexer2.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer2.dollar();
      assertEquals(26, token13.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer("k^q/?V%=m:  x+58KQx");
      Token token14 = xPathLexer4.rightParen();
      assertEquals("k", token14.getTokenText());
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.600137627373476
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer("J_CF}`*b-J2;-wO");
      Token token0 = xPathLexer1.slashes();
      assertEquals("J", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer3 = new XPathLexer("Q%SFl");
      Token token1 = xPathLexer3.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("z", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("Q%SFl");
      Token token4 = xPathLexer6.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("Q", token4.getTokenText());
      
      Token token5 = xPathLexer6.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("_CF", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer7.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.6766415251608262
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("%", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("O", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer1.pipe();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("{", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("c%O)xR{>/");
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer2.dots();
      assertEquals("%", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.pipe();
      assertEquals("O", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.300607878006674
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("e", token5.getTokenText());
      
      xPathLexer0.notEquals();
      Token token6 = xPathLexer0.dots();
      assertEquals("e", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      assertEquals("s", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals("a", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals("x", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals("path.Token", token10.getTokenText());
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.635138051418778
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals("z6", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer1.notEquals();
      assertEquals("`%", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("z6", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer2.pipe();
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals("`", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("%", token11.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4340661788780469
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.878722963651382
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("^", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("/", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("?", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("k^q/?V%=m:  xE58KQx");
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("k^", token5.getTokenText());
      
      Token token6 = xPathLexer3.minus();
      assertEquals("q", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.pipe();
      Token token7 = xPathLexer4.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("V", token8.getTokenText());
      
      Token token9 = xPathLexer0.dots();
      assertEquals("%", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token10 = xPathLexer3.number();
      assertEquals(30, token10.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.9393567697410248
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("BpiR+Y");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals("BpiR", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("+", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer3.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("Y", token7.getTokenText());
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("Y", token8.getTokenText());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.0187775682212137
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      xPathLexer1.leftBracket();
      xPathLexer0.minus();
      Token token1 = xPathLexer1.leftParen();
      assertEquals("h", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("'", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.minus();
      assertEquals("o", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.1783445868704527
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("-", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("h", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("hd6");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("co", token2.getTokenText());
      
      xPathLexer2.minus();
      Token token3 = xPathLexer0.at();
      assertEquals("'", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer1.minus();
      assertEquals("h", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("*", token5.getTokenText());
      
      Token token6 = xPathLexer3.colon();
      assertEquals(18, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer4.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer1.div();
      xPathLexer0.or();
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      xPathLexer3.not();
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer2.not();
      assertEquals("w", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.014872509553493
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("o", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("m", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      xPathLexer0.notEquals();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("k", token6.getTokenText());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.notEquals();
      assertEquals("en", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      Token token9 = xPathLexer0.at();
      assertEquals("s", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftParen();
      assertEquals(1, token10.getTokenType());
      assertEquals("a", token10.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.2099662862492964
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.or();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.plus();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.setXPath("E d^,z");
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(" ", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer0.minus();
      assertEquals("d", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals("^", token12.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.921952950984088
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.minus();
      xPathLexer1.mod();
      Token token2 = xPathLexer1.pipe();
      assertEquals("o", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.minus();
      Token token5 = xPathLexer1.number();
      assertEquals(31, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.minus();
      assertEquals("w", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.dollar();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals("e", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.1226953618998468
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("^a?lOCf?Wd4YbSrxp", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.minus();
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.230107310943066
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      Token token1 = xPathLexer0.equals();
      assertEquals("%", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      Token token4 = xPathLexer0.minus();
      token0.toString();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("{", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.whitespace();
      token0.toString();
      String string0 = token3.toString();
      assertEquals("[ (3) ())", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("hd6");
      xPathLexer1.whitespace();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer1.setPreviousToken(token4);
      Token token8 = xPathLexer1.star();
      assertEquals("d", token8.getTokenText());
      
      xPathLexer1.minus();
      Token token9 = xPathLexer1.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer1.minus();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      String string1 = token0.toString();
      assertEquals("[ (1) (c)", string1);
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer0.dollar();
      assertEquals(26, token14.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (3) ())");
      Token token15 = xPathLexer3.rightParen();
      assertEquals(2, token15.getTokenType());
      assertEquals("[", token15.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.995115308090731
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("m", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(".", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token5 = xPathLexer0.colon();
      assertEquals("w", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("er", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("k", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.dots();
      assertEquals("n.", token9.getTokenText());
      assertEquals(14, token9.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.553161526305895
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("jqMd''22co)&T>;");
      xPathLexer2.leftParen();
      xPathLexer1.currentPosition();
      xPathLexer1.notEquals();
      xPathLexer1.and();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer1.slashes();
      xPathLexer0.dots();
      xPathLexer2.or();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer2.leftParen();
      xPathLexer1.plus();
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer3.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.0259553411381086
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.or();
      String string0 = token0.toString();
      assertEquals("[ (26) (^)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.leftParen();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer1.dollar();
      Token token5 = xPathLexer0.pipe();
      assertEquals("?", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      xPathLexer2.leftParen();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("lOCf", token6.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer0.minus();
      assertEquals("?", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      assertEquals("W", token8.getTokenText());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.2516707347771976
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("7");
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertEquals("7", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7351747221062346
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.435803525949301
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.currentPosition();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierStartChar('Z');
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.consume(11);
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume((-2467));
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.4784679158751584
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer1.doubleColon();
      assertEquals("z6", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.colon();
      assertEquals("`", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.dots();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Yi{b?#tKX-2(cL d");
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.7923810113613925
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.383656633394966
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.leftBracket();
      xPathLexer0.currentPosition();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.setXPath("zC%dZ?654{0LB7");
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierStartChar('Z');
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.consume(9);
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.consume((-2467));
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.1757480242702325
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.number();
      xPathLexer0.consume((-1081));
      xPathLexer0.endPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.7531521324316064
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.currentPosition();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.rightParen();
      xPathLexer0.slashes();
      xPathLexer1.dots();
      xPathLexer1.or();
      xPathLexer0.leftParen();
      xPathLexer2.equals();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("7");
      xPathLexer0.plus();
      xPathLexer2.not();
      xPathLexer3.rightParen();
      xPathLexer2.minus();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=3.6011273063436096
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.dots();
      xPathLexer0.hasMoreChars();
      xPathLexer0.minus();
      xPathLexer0.div();
      Token token0 = xPathLexer0.dots();
      assertEquals(14, token0.getTokenType());
      assertEquals("m.", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer2.star();
      assertEquals("c", token3.getTokenText());
      
      xPathLexer1.minus();
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token5 = xPathLexer3.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals(1, token7.getTokenType());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("r", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightBracket();
      xPathLexer4.relationalOperator();
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      assertEquals("k", token12.getTokenText());
      
      xPathLexer2.and();
      Token token13 = xPathLexer4.rightBracket();
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.718641836191527
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.minus();
      assertEquals("z", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("6", token1.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("65d]E~|Nu1y<e");
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("6", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("XVfqTVq-_3Se)DV86hj");
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals("d", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token6 = xPathLexer3.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals(")", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.6919890067460013
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.minus();
      xPathLexer2.dollar();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer0.dots();
      Token token0 = xPathLexer4.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.947031238387316
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Wcok>78}WYUN-^");
      XPathLexer xPathLexer2 = new XPathLexer("BpiR+Y");
      Token token0 = xPathLexer1.literal();
      assertEquals(27, token0.getTokenType());
      assertEquals("cok>78}", token0.getTokenText());
      assertNotNull(token0);
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token1 = xPathLexer3.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals("Y", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("Xzplb");
      Token token3 = xPathLexer4.minus();
      assertEquals("X", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.5127488831986526
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}VN3iTy");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer1.rightParen();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("z", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("G<n^");
      xPathLexer0.slashes();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("G<n^");
      Token token1 = xPathLexer3.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("_EJ*.;W'>");
      Token token2 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer3.relationalOperator();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      assertNotNull(token4);
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.minus();
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer("-qlk");
      Token token5 = xPathLexer7.dollar();
      assertEquals("-", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer7.dots();
      assertEquals("q", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("z", token7.getTokenText());
      
      Token token8 = xPathLexer4.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("_", token8.getTokenText());
      
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      int int0 = xPathLexer3.endPosition();
      assertEquals(4, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.3687594517255226
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cQ 3sg");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.dots();
      assertEquals("Q", token1.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("cQ 3sg");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer2.notEquals();
      assertEquals("cQ", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("3", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer2.leftBracket();
      assertEquals(" ", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.minus();
      Token token9 = xPathLexer3.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.89144528866373
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.rightBracket();
      Token token0 = xPathLexer1.leftBracket();
      xPathLexer1.mod();
      xPathLexer1.relationalOperator();
      xPathLexer0.getXPath();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.1057062150371832
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%:T4i5Eu`<[vM/\"Vp");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-530));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=3.0935075834395827
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer1.pipe();
      xPathLexer1.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.minus();
      xPathLexer1.number();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer1.minus();
      xPathLexer2.pipe();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer1.colon();
      Token token0 = xPathLexer2.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.9711835907199564
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.leftBracket();
      xPathLexer1.mod();
      xPathLexer1.relationalOperator();
      xPathLexer1.getXPath();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.2394532672646728
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath(";q3\"1PD P");
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.consume((-2909));
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=3.5171454535638667
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.LA(16);
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      xPathLexer1.plus();
      xPathLexer1.dollar();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer1.dots();
      xPathLexer1.at();
      xPathLexer1.identifier();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("]1~)_LEKct?G=t#jE$F");
      xPathLexer3.at();
      xPathLexer0.equals();
      Token token0 = xPathLexer3.or();
      assertNull(token0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.649023542899588
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.endPosition();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.390909225730919
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "z6`%z]`n>fhh}V3iTy";
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.502375550381569
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.consume((-1304));
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume(32);
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.whitespace();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.6124787162704326
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.or();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('2');
      assertFalse(boolean0);
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('B');
      assertTrue(boolean1);
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=3.4276216693822272
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhph}V3iTy");
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.identifier();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.pipe();
      xPathLexer1.rightParen();
      xPathLexer1.leftParen();
      xPathLexer0.dollar();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer(">.hB[");
      xPathLexer2.notEquals();
      xPathLexer2.consume((-172));
      // Undeclared exception!
      try { 
        xPathLexer2.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.736301038417738
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("gZj v2QYqh&nd9H");
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("gZ", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("j", token7.getTokenText());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals(" ", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(",jj9l9zb");
      Token token10 = xPathLexer3.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals(",", token10.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token11 = xPathLexer3.minus();
      assertEquals("j", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=3.018937448679387
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.div();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.0795731806074667
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ct~8lh");
      Token token0 = xPathLexer0.slashes();
      assertEquals("c", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("t", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      String string0 = token2.toString();
      assertEquals("[ (4) (~)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("lh", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (~)");
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.6865862794638793
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("m", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals(".w", token3.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.01745582631024
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q%SFl");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(")");
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals(")", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("ct~8lh");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer5.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer4.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer6.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer5.star();
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.7038576278273263
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jvzUrh\"wbgR");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("j", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("vz", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("rh", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("\"", token5.getTokenText());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals("w", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("jvzUrh\"wbgR");
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=2.895443689303474
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.829326123788035
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("%O)xR{>/", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer1.pipe();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("x", token5.getTokenText());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("c%O)xR{>/");
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("%", token8.getTokenText());
      
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("O", token9.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.221972568523661
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+ 3<g");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.dots();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.and();
      xPathLexer0.setXPath("c+ 3<g");
      Token token1 = xPathLexer0.rightBracket();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.or();
      assertNull(token2);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.885093552405193
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.equals();
      assertEquals("%", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("O", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("x", token3.getTokenText());
      
      xPathLexer0.currentPosition();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("R{", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.rightParen();
      assertEquals("/", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("c%O)xR{>/");
      Token token13 = xPathLexer0.dots();
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer1.rightParen();
      assertEquals(2, token14.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.7976725346148312
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c%O)xR{>/");
      Token token0 = xPathLexer0.leftParen();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("O", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("x", token4.getTokenText());
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("{", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) (c)", string0);
      
      Token token7 = xPathLexer0.colon();
      assertEquals("/", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=3.4283937716255033
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("-h'*oS7LY;3Fv|lz,");
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals("h", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("'", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("o", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("S", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      xPathLexer1.notEquals();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("Y", token8.getTokenText());
      
      xPathLexer1.operatorName();
      Token token9 = xPathLexer0.notEquals();
      assertEquals("we", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals("r", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.at();
      assertEquals(16, token11.getTokenType());
      assertEquals(";", token11.getTokenText());
      
      Token token12 = xPathLexer1.slashes();
      assertEquals("3", token12.getTokenText());
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.9700437629489005
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c+ 3<g");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("c+ 3<g");
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("Q%SFl");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer2.nextToken();
      assertEquals("%SFl", token5.getTokenText());
      
      Token token6 = xPathLexer1.comma();
      assertEquals("+", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
      assertEquals("3", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token9 = xPathLexer0.dots();
      assertEquals("g", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.6498136786300632
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      xPathLexer0.colon();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer1.at();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 145
  /*Coverage entropy=3.4727830966404496
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.or();
      Token token1 = xPathLexer1.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer1.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.6491193938973945
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E`?m3");
      xPathLexer0.number();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("E", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("`?", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("m", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.slashes();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.8177214040287604
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      Token token0 = xPathLexer0.star();
      assertEquals("z", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.literal();
      assertNotNull(token2);
      
      Token token3 = xPathLexer0.at();
      Token token4 = xPathLexer0.number();
      String string0 = token3.toString();
      assertEquals("[ (16) (n)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (23) (6)", string1);
      
      token2.toString();
      String string2 = token2.toString();
      assertEquals("[ (27) (%z])", string2);
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals(30, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(">f", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.consume();
      Token token6 = xPathLexer0.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("V", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("3", token8.getTokenText());
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.5293012380118662
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.isIdentifierChar('f');
      xPathLexer0.leftBracket();
      xPathLexer0.consume();
      xPathLexer0.minus();
      xPathLexer0.doubleColon();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=3.5222532611028243
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.plus();
      xPathLexer0.operatorName();
      xPathLexer0.mod();
      xPathLexer0.minus();
      xPathLexer0.div();
      xPathLexer0.identifier();
      xPathLexer0.isIdentifierStartChar('$');
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=2.7560521147686172
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.isIdentifierStartChar('>');
      xPathLexer0.comma();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.number();
      xPathLexer0.isIdentifierChar('>');
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=1.3899268748963802
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("7", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.6401602605847116
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer1 = new XPathLexer("J_CF}`*b-J2;-wO");
      Token token0 = xPathLexer1.slashes();
      assertEquals("J", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("z6`%z]`n>fhh}V3iTy");
      XPathLexer xPathLexer3 = new XPathLexer("Q%SFl");
      Token token1 = xPathLexer3.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("z", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer4.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals("z", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("Q%SFl");
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      assertEquals("6", token6.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=2.06939240324284
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jvzUrh\"wbgR");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token1);
      
      token1.toString();
      Token token2 = xPathLexer0.rightBracket();
      String string0 = token1.toString();
      assertEquals("[ (15) (vzUrh)", string0);
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (4) (\")", string1);
      
      token1.toString();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("j", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("g", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=1.4161086741087767
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^a?lOCf?Wd4YbSrxp");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.minus();
      assertEquals("a", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("?lOCf?Wd4YbSrxp", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("$=Yv*LAS");
      Token token4 = xPathLexer0.plus();
      assertEquals("O", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals("$", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.8872569749260304
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpah.Token");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("m.", token2.getTokenText());
  }
}
