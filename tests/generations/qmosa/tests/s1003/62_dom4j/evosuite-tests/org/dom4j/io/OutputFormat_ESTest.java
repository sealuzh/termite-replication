/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 11:13:08 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3814530139364471
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("$K@X`/u3L");
      String[] stringArray0 = new String[5];
      outputFormat0.setSuppressDeclaration(false);
      assertFalse(outputFormat0.isXHTML());
      
      stringArray0[0] = "-xhtml-xhtml";
      stringArray0[1] = "-timTe]]t";
      stringArray0[2] = "-indent";
      stringArray0[3] = "$K@X`/u3L";
      stringArray0[4] = "-xhtml-xhtml;uhWvWcf";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandE!ptyEU^,^.CN2[Oi%Aa");
      assertFalse(outputFormat0.isOmitEncoding());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray0[4] = "fx;i";
      stringArray0[5] = "-omitEncoding";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 3);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("#)Hj$", false, "html:cbfDtb6Jr@ G");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty-xithlW";
      stringArray0[1] = "-padText";
      stringArray0[2] = "-expandEmpty-xithlW";
      stringArray0[3] = "#)Hj$";
      stringArray0[4] = "-padText";
      stringArray0[5] = "iBn<L9c";
      stringArray0[6] = "html:cbfDtb6Jr@ G";
      stringArray0[7] = "";
      stringArray0[8] = "";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isPadText());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.551724692416236
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "p&L0<yV";
      stringArray0[1] = "p&L0<yV";
      stringArray0[2] = "p&L0<yV";
      stringArray0[3] = "p&L0<yV";
      stringArray0[4] = "p&L0<yV";
      stringArray0[5] = "p&L0<yV";
      stringArray0[6] = "p&L0<yV";
      stringArray0[7] = "p&L0<yV";
      outputFormat1.parseOptions(stringArray0, 2);
      outputFormat1.setLineSeparator("");
      outputFormat0.setLineSeparator("p&L0<yV");
      outputFormat0.setNewlines(false);
      assertEquals("p&L0<yV", outputFormat0.getLineSeparator());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndentSize((-1645));
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.getLineSeparator();
      outputFormat3.setSuppressDeclaration(true);
      outputFormat3.setXHTML(false);
      outputFormat1.getLineSeparator();
      outputFormat3.getLineSeparator();
      OutputFormat.createPrettyPrint();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat1.setIndent((String) null);
      assertTrue(outputFormat1.isNewlines());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2513455062884817
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("iVOB");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "iVOB";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-xhtml-xithlW";
      stringArray0[3] = "-expandEmpty-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "iVOB";
      outputFormat0.parseOptions(stringArray0, 1);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "wFy@o=h(VJX95";
      stringArray1[1] = "-expandEmpty-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray1[2] = "-trimText";
      stringArray1[3] = "-indentSize";
      stringArray1[4] = "-expandEmptyqL)\"FZ!>z";
      stringArray1[5] = "-expandEmpty-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray1[6] = "-xhtml-xithlW";
      stringArray1[7] = "-xhtml-xithlW";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, 1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-expandEmptyqL)\"FZ!>z\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4208587745273524
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[1] = stringArray0[0];
      String[] stringArray1 = new String[4];
      stringArray1[0] = "-suppressDeclaration";
      stringArray1[1] = stringArray0[6];
      stringArray1[2] = stringArray0[5];
      stringArray1[3] = "-suppressDeclaration";
      OutputFormat outputFormat0 = new OutputFormat("hT=l+>", true, "hT=l+>");
      String[] stringArray2 = new String[6];
      stringArray2[0] = "WEH]AL?,at'|JRE";
      stringArray2[1] = "-suppressDeclaration";
      stringArray2[2] = "-suppressDeclaration";
      stringArray2[3] = "-suppressDeclaration";
      stringArray2[4] = "-suppressDeclaration";
      stringArray2[5] = "-suppressDeclaration";
      outputFormat0.parseOptions(stringArray2, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray2, (-1726984408));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1726984408
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "-expandEmpty:Wdne)o8{X-bq";
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty:Wdne)o8{X-bq");
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty:Wdne)o8{X-bq", false, "ADU");
      outputFormat1.setIndent("ADU");
      outputFormat1.setIndentSize(1601);
      OutputFormat outputFormat2 = new OutputFormat("", false, "-/b}';g`J4:b^M_");
      outputFormat2.setIndent(false);
      // Undeclared exception!
      outputFormat1.setIndentSize(9972);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1304602490789444
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-trimText";
      stringArray0[1] = "-xhtml-xhtml:cubfDtb6Jr@ G";
      stringArray0[2] = "-xhtml-xhtml:cubfDt6Jr@G";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-xhtml-xithlW";
      stringArray0[5] = "-xhtml-xhtml:cubfDtb6Jr@ G";
      stringArray0[6] = "@MR?\"GK{`{";
      stringArray0[7] = "-xhtml-xithlW";
      stringArray0[8] = "-xhtml-xhtml:cubfDt6Jr@G";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isTrimText());
      assertEquals(6, int0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "NLMm8;~UWR-jAN+f";
      stringArray0[2] = "-newlines";
      stringArray0[3] = "-expandEmptz";
      OutputFormat outputFormat0 = new OutputFormat("-newlines");
      assertFalse(outputFormat0.isNewlines());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-mitEncoing");
      outputFormat0.setAttributeQuoteCharacter('\'');
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.386202823118563
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String string0 = "";
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setEncoding("");
      int int0 = (-2412);
      outputFormat0.setNewLineAfterNTags((-2412));
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent("-expandEmptyqL)\"FZ!z");
      outputFormat0.setIndent("-expandEmptyqL)\"FZ!z");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getAttributeQuoteCharacter();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      outputFormat1.setSuppressDeclaration(true);
      stringArray0[0] = "-expandEmptyqL)\"FZ!z";
      stringArray0[1] = "-expandEmptyqL)\"FZ!z";
      outputFormat1.setEncoding("");
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat1.setAttributeQuoteCharacter('\"');
      stringArray0[4] = "-expandEmptyqL)\"FZ!z";
      stringArray0[5] = "-expandEmptyqL)\"FZ!z";
      stringArray0[6] = "-expandEmptyqL)\"FZ!z";
      outputFormat1.setLineSeparator("-newlines");
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, (-2412));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2412
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[6] = "";
      stringArray0[7] = "";
      OutputFormat outputFormat0 = new OutputFormat("", false);
      String string0 = outputFormat0.getIndent();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("", string0);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isPadText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.260228994863853
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(34);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.getIndent();
      assertEquals("                                  ", outputFormat0.getIndent());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.725314996873787
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.getAttributeQuoteCharacter();
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setPadText(true);
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat0.isOmitEncoding();
      outputFormat1.getEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setAttributeQuoteCharacter('\"');
      outputFormat1.setIndent("9AU;gLP/l");
      outputFormat1.setEncoding("-expandEmptyp!eY59he!k)_66wj");
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "UTF-8";
      outputFormat0.setAttributeQuoteCharacter('\"');
      stringArray0[1] = "-expandEmptyp!eY59he!k)_66wj";
      stringArray0[2] = "qL)\"FZ!>z";
      stringArray0[3] = "-expandEmptyp!eY59he!k)_66wj";
      stringArray0[4] = "-expandEmptyp!eY59he!k)_66wj";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.isExpandEmptyElements();
      outputFormat1.setIndent((String) null);
      assertEquals("-expandEmptyp!eY59he!k)_66wj", outputFormat1.getEncoding());
      
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\"', char0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("");
      String string1 = "-epandEmptyp!eY59he!k)_6wj";
      outputFormat0.setEncoding("");
      outputFormat0.getEncoding();
      char char0 = 'Y';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1431128238477373
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmpty-exp8ndEmpty-xhtml-xJthl ");
      OutputFormat outputFormat1 = new OutputFormat("-lineSeparator");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-xhtml:cubfDtb6Jr@ G";
      stringArray0[1] = "-xhtml-xithlW";
      stringArray0[2] = "-lineSeparator";
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.898760145475768
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isXHTML();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewLineAfterNTags(0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "`bYq^s]S2HL";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setEncoding((String) null);
      outputFormat0.setNewlines(true);
      outputFormat0.isXHTML();
      OutputFormat outputFormat1 = new OutputFormat((String) null);
      outputFormat1.setExpandEmptyElements(true);
      outputFormat1.setNewLineAfterNTags(39);
      assertTrue(outputFormat1.isExpandEmptyElements());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.getLineSeparator();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isNewlines());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0329233799129258
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("J@Z\"pKjrwoHA&d[)T[S");
      outputFormat0.setIndent("!{p0");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("@h?3_(wUY7e'");
      outputFormat0.setIndent("!{p0");
      outputFormat0.setIndent("s6PCFDq7DT5vY0");
      outputFormat0.setIndent("J@Z\"pKjrwoHA&d[)T[S");
      assertEquals("J@Z\"pKjrwoHA&d[)T[S", outputFormat0.getIndent());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat((String) null, true, (String) null);
      outputFormat0.setIndent(false);
      int int0 = 1;
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      outputFormat0.setEncoding((String) null);
      outputFormat0.getEncoding();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('z');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (z)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9827855643221146
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(")", true, "  ");
      outputFormat0.setIndent(true);
      OutputFormat outputFormat1 = new OutputFormat("-encoding", true, "-lineSeparator");
      outputFormat1.setEncoding((String) null);
      OutputFormat outputFormat2 = new OutputFormat("LJt?&;)yYg\"");
      int int0 = 2;
      outputFormat2.setIndentSize(2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-encoding";
      outputFormat0.parseOptions(stringArray0, 1649);
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat outputFormat3 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1508863157155376
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setPadText(true);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[1] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[2] = "";
      stringArray0[3] = "XO~AS`x\"ny<:8OJ|%";
      outputFormat0.setNewLineAfterNTags(1);
      stringArray0[5] = "XO~AS`x\"ny<:8OJ|%";
      stringArray0[8] = "XO~AS`x\"ny<:8OJ|%";
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setTrimText(true);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndent("IP}%unr4u|/K,%");
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[2] = "-lineSeparat";
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = outputFormat0.getIndent();
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertNull(string0);
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.9410699503727398
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      boolean boolean0 = true;
      outputFormat0.setLineSeparator(")");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[6];
      stringArray0[1] = "&4=r5&iqtouYY;;";
      stringArray0[2] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = "~I8L!\"";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1662630289));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1662630289
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setNewLineAfterNTags((-1157));
      outputFormat0.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals((-1157), outputFormat0.getNewLineAfterNTags());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isExpandEmptyElements();
      boolean boolean0 = outputFormat0.isNewLineAfterDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1013448627418367
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setLineSeparator("-indent");
      OutputFormat.createPrettyPrint();
      outputFormat0.isTrimText();
      outputFormat0.setExpandEmptyElements(false);
      assertEquals("-indent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.240038709954772
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndentSize((-191));
      outputFormat0.setLineSeparator(")");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ")";
      stringArray0[1] = "Invalid attribute quote character (";
      stringArray0[2] = ")";
      stringArray0[3] = ")";
      stringArray0[4] = ")";
      stringArray0[5] = "~I8L!\"";
      outputFormat0.parseOptions(stringArray0, 2390);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("-indent");
      outputFormat0.isTrimText();
      outputFormat0.setExpandEmptyElements(false);
      assertEquals("-indent", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "0p~M3etYTpEi";
      stringArray0[1] = "";
      stringArray0[2] = "kOusF63y$oGh";
      stringArray0[3] = "3?Y2z3)LK9R(Yt;FZ}3";
      String string0 = outputFormat0.getLineSeparator();
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhthl ");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtml-xhthl ";
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals(0, int0);
      
      boolean boolean0 = outputFormat0.isPadText();
      assertFalse(boolean0);
      
      String string0 = outputFormat0.getLineSeparator();
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("-xhtml-xhthl ", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtml-xhthl ");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-xhtml-xhthl ";
      outputFormat0.getNewLineAfterNTags();
      assertFalse(outputFormat0.isPadText());
      
      outputFormat0.setPadText(true);
      outputFormat0.isPadText();
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isPadText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("*!<-:#lPB|", true, ",");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals(",", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals('\"', char0);
      assertEquals("*!<-:#lPB|", outputFormat0.getIndent());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1641933683302232
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-exp8ndEmpty-xs`ml-x6thl ");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty-xithlW";
      stringArray0[1] = "@yz~X.A`#Q&.iS3x@n";
      stringArray0[2] = "-expandEmpty-xithlW";
      stringArray0[4] = "-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray0[5] = "-expandEmpty-xithlW";
      stringArray0[6] = "-exp8ndEmpty-xs`ml-x6thl ";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-xhtml:cubfDtb6Jr@ G";
      stringArray0[1] = "zrz{f1{YlC";
      stringArray0[2] = "-xhtml:cubfDtb6Jr@ G";
      stringArray0[3] = "-expandEmp`y-rimText";
      stringArray0[4] = "-xhml-xQithlW";
      outputFormat0.setNewlines(true);
      assertTrue(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-exp8ndEmpty-xs`ml-x6thl ");
      outputFormat0.setLineSeparator("~JacptEe");
      String[] stringArray0 = new String[26];
      stringArray0[0] = "NLm8;~\"UWRjAN+";
      stringArray0[1] = ".VX:Rs";
      stringArray0[2] = "-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray0[4] = "-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray0[5] = "-expaCndEmpty-xithlW";
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xithlW");
      outputFormat0.setIndentSize((-2361));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xithlW";
      stringArray0[1] = "#)Hj$";
      stringArray0[3] = "-xithlW";
      stringArray0[3] = "-xhtml-xhtml:cubfDtb6Jr@ G";
      stringArray0[4] = "-expandEmpty-xithlW";
      stringArray0[5] = "-xhtml-xhtml:cubfDtb6Jr@ G";
      stringArray0[6] = "-xithlW";
      stringArray0[7] = "-xhtml-mitEncoing";
      stringArray0[8] = "-xhtml-xithlW";
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = null;
      stringArray0[1] = "-xhtmlwv2]mQdhbf1f9";
      stringArray0[2] = "v]mhbf1f9";
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[1] = " J}]";
      stringArray0[2] = "Y}|VCQ]";
      OutputFormat outputFormat0 = new OutputFormat("Y}|VCQ]");
      String string0 = outputFormat0.getIndent();
      assertEquals("Y}|VCQ]", string0);
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.1380501687234124
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isOmitEncoding();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[7];
      outputFormat0.setAttributeQuoteCharacter('\"');
      stringArray0[2] = "qL)\"FZ!z";
      stringArray0[3] = "qL)\"FZ!z";
      stringArray0[4] = "qL)\"FZ!z";
      outputFormat0.setEncoding("qL)\"FZ!z");
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setAttributeQuoteCharacter('\"');
      char char0 = '\\';
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('\\');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (\\)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4208587745273524
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expandEmpty-x?thl");
      outputFormat0.setIndent("");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("*r}/M26)TlW&1!|.-&x");
      outputFormat0.setIndent("-x?thl");
      outputFormat0.setIndent("O0@UG^?E5");
      assertEquals("O0@UG^?E5", outputFormat0.getIndent());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-exp8ndEmpty-xhtml-x6thl ");
      String[] stringArray0 = new String[12];
      stringArray0[1] = "-xhtml-exp8ndEmpty-xhtml-xJthl ";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "NLMm8~\"UW*-jANs";
      stringArray0[1] = ".VX:Rs";
      stringArray1[2] = "-expandEmptz";
      stringArray1[3] = "%mMn<tokcs4k";
      stringArray1[4] = "-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray1[5] = "-expandEmpty-xithlW";
      stringArray1[6] = "-xhtml-exp8ndEmpty-xhtml-xJthl ";
      outputFormat0.parseOptions(stringArray1, 0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals("-exp8ndEmpty-xhtml-x6thl ", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.6711893730418441
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("zrz{f1{YlC", false);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "A_>5b?rAeIK[2tm ~.";
      stringArray0[2] = "'XIzi$h$nl3tg";
      stringArray0[3] = "zrz{f1{YlC";
      stringArray0[4] = "Zf2`5I$$GL4z'!36rzC";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(2, int0);
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("zrz{f1{YlC", outputFormat0.getIndent());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.1603159682381894
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(",u1+L25 GrO!&");
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isXHTML();
      outputFormat0.setEncoding(",u1+L25 GrO!&");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[5];
      outputFormat1.setNewLineAfterNTags(1);
      stringArray0[0] = ",u1+L25 GrO!&";
      stringArray0[1] = "";
      stringArray0[2] = ",u1+L25 GrO!&";
      outputFormat0.setIndent("org.dom4j.io.OutputFormat");
      stringArray0[3] = ",u1+L25 GrO!&";
      stringArray0[4] = ",u1+L25 GrO!&";
      outputFormat1.setNewLineAfterNTags(1);
      outputFormat1.parseOptions(stringArray0, 4458);
      outputFormat0.setIndentSize(4458);
      outputFormat0.setNewLineAfterNTags((-105));
      outputFormat1.setPadText(true);
      outputFormat0.isNewlines();
      assertEquals(",u1+L25 GrO!&", outputFormat0.getEncoding());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setIndent(false);
      outputFormat2.setIndent("-encoding");
      assertFalse(outputFormat2.isPadText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.963354960867429
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lineSeparator");
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtml-xhtml:cubfDt6Jr@G";
      stringArray0[1] = "-xhtml-mitEncoing";
      stringArray0[2] = "-xhtml-mitEncoing";
      stringArray0[3] = "-xhtml-xhtml:cubfDt6Jr@G";
      stringArray0[4] = "-xhtml;uhWvWcf";
      stringArray0[5] = "-xhtml;uhWvWcf";
      stringArray0[6] = "-xhtml-mitEncoing";
      stringArray0[7] = "-xhtml-mitEncoing";
      stringArray0[8] = "-xhtml-xhtml:cubfDt6Jr@G";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(9, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-exp8ndEmpty-xs`ml-x6thl ");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expandE!ptyEU^,^.CN2[Oi%Aa";
      stringArray0[1] = "-exp8ndEmpty-xs`ml-x6thl ";
      stringArray0[2] = "-encoding";
      stringArray0[3] = "-exp8ndEmpty-xs`ml-x6thl ";
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertEquals("-exp8ndEmpty-xs`ml-x6thl ", outputFormat0.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setTrimText(false);
      outputFormat0.isTrimText();
      outputFormat0.setPadText(true);
      outputFormat0.setXHTML(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.isTrimText();
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setPadText(false);
      outputFormat0.isNewlines();
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\"&kY%*UPNN]\"WL2*";
      stringArray0[1] = null;
      stringArray0[2] = null;
      int int0 = outputFormat0.parseOptions(stringArray0, 2018);
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals(2018, int0);
  }
}
