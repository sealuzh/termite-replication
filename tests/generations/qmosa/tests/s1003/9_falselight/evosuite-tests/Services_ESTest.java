/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 10:38:29 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3502705392332346
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://3]S");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "3]S");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("3]S", (-1));
      assertEquals(4, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)107;
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("zk;6z,CvR!Nx", 1);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://ml\\l5'RG/tEaSe0F:328");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "0m|Jm4A`b^~:(rV");
      Services.testHTTP("mll5'RG/tEaSe0F", 328);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("(>0DNXho-<_|", (-1648));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("127.0.0.1", 77);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("", 77);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2745180899177098
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.reset();
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", 0);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.code = (-4075);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.time = 1626L;
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.reset();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-3509));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("#h63jgzO+nBv^||I", (-4354));
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("** Erreur g\u00E9n\u00E9r\u00E9e : ", (-1529));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2022L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-624L));
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis((-152L));
      System.setCurrentTimeMillis(3147L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      
      Services.testPOP3("", 0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3((String) null, (-116));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2022L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-624L));
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis((-152L));
      System.setCurrentTimeMillis(3147L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1829L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3(") **", (-227));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-227));
      System.setCurrentTimeMillis(216L);
      services_SIMPLE_Result0.reset();
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0);
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", (-1299));
      System.setCurrentTimeMillis((-1141L));
      services_SIMPLE_Result0.toString();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5678136347030915
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("", 0);
      services_SIMPLE_Result0.time = (long) 0;
      services_SIMPLE_Result0.Error = "";
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.works = true;
      services_SIMPLE_Result0.toString();
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.reset();
      services_SIMPLE_Result1.Error = "";
      services_SIMPLE_Result1.time = 0L;
      services_SIMPLE_Result1.Error = "**URL Mal Form\u00E9** (";
      services_SIMPLE_Result1.reset();
      services_SIMPLE_Result1.reset();
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.code = (-4075);
      services_HTTP_Result0.time = 1626L;
      services_HTTP_Result0.reset();
      services_SIMPLE_Result1.reset();
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.reset();
      assertFalse(services_SIMPLE_Result0.works);
      
      services_HTTP_Result0.toString();
      Services.testSMTP("**** Resultat : \n** Fonctionnement : true\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 0);
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("** Poid de la page : ", 1626);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2022L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-624L));
      System.setCurrentTimeMillis(216L);
      System.setCurrentTimeMillis((-152L));
      System.setCurrentTimeMillis(3147L);
      System.setCurrentTimeMillis((-51L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-51L));
      System.setCurrentTimeMillis(2510L);
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 2677);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services services0 = new Services();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byte[] byteArray0 = new byte[2];
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      boolean boolean0 = NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      assertFalse(boolean0);
  }
}
