/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 11:29:27 GMT 2019
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.AnyWrapperMsgGenerator;
import com.ib.client.Contract;
import com.ib.client.ContractDetails;
import com.ib.client.EWrapperMsgGenerator;
import com.ib.client.Execution;
import com.ib.client.Order;
import com.ib.client.OrderState;
import com.ib.client.TagValue;
import com.ib.client.UnderComp;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EWrapperMsgGenerator_ESTest extends EWrapperMsgGenerator_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale0.getDisplayName();
      locale0.stripExtensions();
      EWrapperMsgGenerator.tickOptionComputation((-1), 50, 50, (-1), 1.0, 1452.8193649395587);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.updatePortfolio((Contract) null, 2124, (-1478.37201327103), (-3411.209378912487), (-3475.3), 334.6589, (-1083.54322984541), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis((-952L));
      Contract contract0 = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractMsg((Contract) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, (-0.414769799474637), "BAG", (String) null, (String) null, "OptionPutOpenInterest", (String) null, vector0, (String) null, false, (String) null, "com.ib.client.ContraciDetails");
      Order order0 = new Order();
      contract1.m_comboLegsDescrip = "com.ib.client.TagValue";
      vector0.parallelStream();
      contract1.m_secId = null;
      contract0.m_symbol = "!lesqj ";
      vector0.clear();
      OrderState orderState0 = new OrderState("AvgVolume", (String) null, (String) null, "v24%,-'H=r]rs{s", 835.949, 730.3326019934111, 788.55, "z~~Q", "88\"i6");
      EWrapperMsgGenerator.openOrder(0, contract1, order0, orderState0);
      Vector<TagValue> vector1 = new Vector<TagValue>();
      vector1.stream();
      vector1.subList(0, 0);
      TagValue tagValue0 = new TagValue("z~~Q", "`6?J2Q)cOHE KmlQGqp");
      vector1.addElement(tagValue0);
      Vector<TagValue> vector2 = new Vector<TagValue>();
      Vector<TagValue> vector3 = new Vector<TagValue>();
      TagValue tagValue1 = new TagValue("=a]_X7=s` =Lj}W?e", "8R");
      vector1.add(tagValue1);
      TagValue tagValue2 = new TagValue();
      // Undeclared exception!
      try { 
        tagValue2.equals("8R");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      UnaryOperator.identity();
      Vector<Object> vector1 = new Vector<Object>();
      EWrapperMsgGenerator.tickOptionComputation(50, 13, 13, (-1055.006668418), 0.0, (-1.0));
      Vector<TagValue> vector2 = new Vector<TagValue>();
      Integer integer0 = new Integer(15);
      Integer integer1 = new Integer(489);
      Integer integer2 = new Integer((-354));
      Integer integer3 = new Integer((-354));
      Vector<TagValue> vector3 = new Vector<TagValue>();
      Integer integer4 = new Integer(1102);
      Integer integer5 = new Integer(3554);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      TagValue tagValue0 = new TagValue("id=50  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = N/A", "IndexFuturePremium");
      TagValue tagValue1 = new TagValue("id=50  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = N/A", "id=50  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = N/A");
      TagValue tagValue2 = new TagValue();
      // Undeclared exception!
      try { 
        tagValue1.equals("id=50  modelOptComp: vol = 13.0 delta = N/A: modelPrice = 0.0: pvDividend = N/A");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Order order0 = new Order();
      EWrapperMsgGenerator.tickOptionComputation(96, 13, 0, 461.04494, 1, 1.7976931348623157E308);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) Integer.MAX_VALUE);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Object object0 = new Object();
      Predicate<Object> predicate7 = predicate4.and(predicate1);
      predicate2.test(predicate3);
      Predicate<Object> predicate8 = predicate0.or(predicate3);
      Predicate<Object> predicate9 = predicate3.or(predicate2);
      predicate4.or(predicate9);
      Predicate<Object> predicate10 = predicate5.negate();
      Predicate<Object> predicate11 = predicate10.negate();
      Predicate<Object> predicate12 = predicate8.and(predicate11);
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate1.or(predicate2);
      Predicate<Object> predicate15 = predicate7.negate();
      predicate2.or(predicate3);
      Predicate<Object> predicate16 = predicate0.negate();
      predicate16.negate();
      Predicate<Object> predicate17 = predicate16.negate();
      predicate13.negate();
      predicate8.and(predicate13);
      Predicate<Object> predicate18 = predicate14.or(predicate8);
      predicate6.negate();
      predicate14.negate();
      predicate17.negate();
      predicate12.or(predicate5);
      predicate17.negate();
      Predicate<Object> predicate19 = predicate18.negate();
      Predicate<Object> predicate20 = predicate15.negate();
      Predicate<Object> predicate21 = predicate20.or(predicate19);
      assertNotNull(predicate21);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(13);
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.fundamentalData(3, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(822, 13, 822, 30.42009867653, 30.42009867653, 822);
      assertEquals("id=822  modelOptComp: vol = 822.0 delta = N/A: modelPrice = 30.42009867653: pvDividend = 822.0", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.bondContractDetails(15, (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract1 = new Contract(0, (String) null, "BAG", (String) null, (-0.414769799474637), "BAG", (String) null, (String) null, "OptionPutOpenInterest", (String) null, vector0, (String) null, false, (String) null, "com.ib.client.ContractDetails");
      Order order0 = new Order();
      vector0.parallelStream();
      contract1.m_secIdType = "MsgId=10 :: MsgType=-1178 :: Origin=q8Uc?L3Fk.|S0f4) :: Message=";
      order0.m_hidden = false;
      vector0.removeAll(contract1.m_comboLegs);
      OrderState orderState0 = new OrderState((String) null, (String) null, (String) null, (String) null, 0, 0.0, 0, "OptionPutOpenInterest", "kRbc'U@U");
      orderState0.m_maintMargin = null;
      orderState0.m_commissionCurrency = "com.ib.client.ContractDetails";
      String string0 = EWrapperMsgGenerator.openOrder(0, contract1, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(96);
      Integer integer2 = new Integer(13);
      Order order0 = new Order();
      EWrapperMsgGenerator.tickOptionComputation(96, 13, 0, 461.04494, 1, 0.0);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) Integer.MAX_VALUE);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate0);
      Predicate<Object> predicate6 = Predicate.isEqual((Object) "com.ib.client.ontract");
      TagValue tagValue0 = new TagValue("id=96  modelOptComp: vol = 0.0 delta = N/A: modelPrice = 1.0: pvDividend = 0.0", "");
      Predicate<Object> predicate7 = predicate1.negate();
      Object object0 = new Object();
      Object object1 = new Object();
      predicate4.and(predicate1);
      predicate2.test(predicate7);
      Predicate<Object> predicate8 = predicate7.or(predicate3);
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate0.and(predicate1);
      Predicate<Object> predicate11 = predicate8.and(predicate10);
      predicate1.or(predicate2);
      Predicate<Object> predicate12 = predicate2.or(predicate1);
      Predicate<Object> predicate13 = predicate0.and(predicate12);
      predicate1.negate();
      Predicate<Object> predicate14 = predicate4.negate();
      predicate7.negate();
      Predicate<Object> predicate15 = predicate14.negate();
      Predicate<Object> predicate16 = predicate15.negate();
      predicate9.or(predicate16);
      predicate13.or(predicate11);
      Predicate<Object> predicate17 = predicate8.or(predicate6);
      Predicate<Object> predicate18 = predicate17.or(predicate10);
      assertFalse(predicate18.equals((Object)predicate10));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(13);
      Integer integer2 = new Integer(13);
      Order order0 = new Order();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) Integer.MAX_VALUE);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate.isEqual((Object) "com.ib.client.Contract");
      Predicate<Object> predicate5 = Predicate.isEqual((Object) null);
      Object object0 = new Object();
      Object object1 = new Object();
      predicate2.test(predicate5);
      Predicate<Object> predicate6 = predicate5.or(predicate3);
      Predicate<Object> predicate7 = predicate0.and(predicate1);
      predicate6.and(predicate7);
      Predicate<Object> predicate8 = predicate1.or(predicate2);
      Predicate<Object> predicate9 = predicate2.or(predicate1);
      predicate1.negate();
      Predicate<Object> predicate10 = predicate0.and(predicate9);
      Predicate<Object> predicate11 = predicate6.negate();
      Predicate<Object> predicate12 = predicate8.negate();
      predicate4.negate();
      Predicate<Object> predicate13 = predicate10.negate();
      Predicate<Object> predicate14 = predicate11.or(predicate13);
      predicate12.or(predicate14);
      String string0 = EWrapperMsgGenerator.tickPrice((-754), 2577, (-388.56), 0);
      assertEquals("id=-754  unknown=-388.56  noAutoExecute", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EWrapperMsgGenerator.tickOptionComputation(807, 13, 807, (-106.95410968268119), 1.7976931348623157E308, 807);
      Function.identity();
      Function.identity();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<TagValue, TagValue> function1 = Function.identity();
      Function<Object, Integer> function2 = unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      function2.compose((Function<? super TagValue, ?>) function1);
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function<Object, Integer> function3 = unaryOperator0.compose((Function<? super Object, ? extends Integer>) function2);
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function3);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      assertEquals("kor", locale0.getISO3Language());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      UnaryOperator.identity();
      Vector<Object> vector1 = new Vector<Object>();
      int int0 = 13;
      int int1 = 99;
      vector0.stream();
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(99);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer1;
      integerArray0[1] = integer1;
      integerArray0[2] = integer1;
      integerArray0[3] = integer0;
      integerArray0[4] = integer1;
      integerArray0[5] = integer0;
      integerArray0[6] = integer1;
      integerArray0[7] = integer1;
      vector0.toArray(integerArray0);
      TagValue tagValue0 = new TagValue("}*l6WS#5", "13WeekLow");
      Vector<TagValue> vector2 = new Vector<TagValue>();
      vector2.add(tagValue0);
      Order order0 = new Order();
      OrderState orderState0 = new OrderState((String) null, (String) null, "}", "~De-~-\"", int0, Integer.MAX_VALUE, 388.723485009177, "P=6@", "2E:3MHc");
      Contract contract0 = new Contract();
      UnderComp underComp0 = new UnderComp();
      contract0.m_underComp = underComp0;
      contract0.m_right = " discretionaryAmt=";
      String string0 = EWrapperMsgGenerator.openOrder(int1, contract0, order0, orderState0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(13);
      Order order0 = new Order();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      locale0.getDisplayName();
      locale0.stripExtensions();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, (-776), 1562.9110758, 0.0, 13, 1.7976931348623157E308);
      assertEquals("id=0  unknown: vol = 1562.9110758 delta = 0.0", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      locale0.getDisplayName();
      Locale locale1 = Locale.ITALIAN;
      locale0.getDisplayScript(locale1);
      Locale locale2 = locale0.stripExtensions();
      locale2.getDisplayName(locale0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(794, 794, 1.0, 1.0, (-2062.833832705), 2.113396605E9);
      assertEquals("id=794  unknown: vol = 1.0 delta = 1.0", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickOptionComputation(822, 13, 822, 30.4201, 1.7976931348623157E308, 822);
      assertEquals("id=822  modelOptComp: vol = 822.0 delta = N/A: modelPrice = N/A: pvDividend = 822.0", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Order order0 = new Order();
      EWrapperMsgGenerator.tickOptionComputation(96, 13, 0, 461.04494, 1, 1.7976931348623157E308);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) Integer.MAX_VALUE);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Object object0 = new Object();
      Predicate<Object> predicate7 = predicate4.and(predicate1);
      predicate2.test(predicate3);
      Predicate<Object> predicate8 = predicate7.negate();
      Predicate<Object> predicate9 = predicate3.or(predicate2);
      predicate4.or(predicate9);
      Predicate<Object> predicate10 = predicate5.negate();
      Predicate<Object> predicate11 = predicate10.negate();
      Predicate<Object> predicate12 = predicate8.and(predicate11);
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate12.negate();
      Predicate<Object> predicate15 = predicate7.negate();
      Predicate<Object> predicate16 = predicate2.or(predicate3);
      Predicate<Object> predicate17 = predicate0.negate();
      predicate17.negate();
      Predicate<Object> predicate18 = predicate17.negate();
      predicate13.negate();
      predicate8.and(predicate13);
      Predicate<Object> predicate19 = predicate14.or(predicate8);
      predicate6.negate();
      predicate14.negate();
      predicate18.negate();
      predicate12.or(predicate5);
      predicate16.or(predicate6);
      Predicate<Object> predicate20 = predicate19.negate();
      Predicate<Object> predicate21 = predicate15.negate();
      Predicate<Object> predicate22 = predicate21.or(predicate20);
      assertNotNull(predicate22);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Contract contract0 = new Contract();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(13, 13, 2104533975, (-1.0), 0.0, (-1.0));
      assertEquals("id=13  modelOptComp: vol = 2.104533975E9 delta = -1.0: modelPrice = 0.0: pvDividend = N/A", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode0);
      locale0.getDisplayName();
      locale0.stripExtensions();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(50, (-551), 1.7976931348623157E308, (-551), (-551), 50);
      assertEquals("id=50  unknown: vol = N/A delta = N/A", string0);
      
      String string1 = EWrapperMsgGenerator.tickOptionComputation(2339, 3, (-551), (-2846.0), (-2846.0), 2339);
      assertEquals("id=2339  askSize: vol = N/A delta = N/A", string1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UnaryOperator<TagValue> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = unaryOperator1.compose((Function<? super Object, ? extends Integer>) function0);
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Integer> function2 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function1);
      Function<Object, Integer> function3 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function2);
      UnaryOperator.identity();
      Function.identity();
      function3.compose((Function<? super TagValue, ?>) unaryOperator0);
      Function.identity();
      Function.identity();
      Function.identity();
      unaryOperator2.compose((Function<? super Object, ? extends Integer>) function1);
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = locale0.stripExtensions();
      locale1.getDisplayName(locale0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation((-793), 13, (-2062.833832705), 1.7976931348623157E308, (-551.0), 13);
      assertEquals("id=-793  modelOptComp: vol = N/A delta = N/A: modelPrice = N/A: pvDividend = 13.0", string0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWrapperMsgGenerator.tickPrice((-1436639375), 13, 1.7976931348623157E308, (-1436639375));
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) vector0);
      // Undeclared exception!
      try { 
        predicate0.and((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      locale0.getDisplayName();
      locale0.stripExtensions();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(1073741824, (-263), 2088.52108671484, (-551), 1073741824, 1.0);
      assertEquals("id=1073741824  unknown: vol = 2088.52108671484 delta = N/A", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      String string0 = EWrapperMsgGenerator.tickOptionComputation(0, 80, 1.7976931348623157E308, 80, 1.0, 2002.9);
      assertEquals("id=0  unknown: vol = N/A delta = N/A", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.ITALY;
      locale1.getDisplayName();
      Locale locale2 = locale0.stripExtensions();
      locale1.getDisplayLanguage();
      locale2.getDisplayName(locale0);
      String string0 = EWrapperMsgGenerator.tickOptionComputation(822, (-551), 0.0, (-4319.1270246), 1.7976931348623157E308, 0.0);
      assertEquals("id=822  unknown: vol = 0.0 delta = N/A", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Contract contract0 = new Contract();
      contract0.m_strike = 1844.26421668713;
      Order order0 = new Order();
      EWrapperMsgGenerator.updatePortfolio(contract0, 0, 1.7976931348623157E308, 2, 0, Integer.MAX_VALUE, 1.7976931348623157E308, (String) null);
      order0.m_allOrNone = false;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.contractDetails((-2749), (ContractDetails) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9687776175299367
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.accountDownloadEnd("b83,0EBV/38");
      assertEquals("accountDownloadEnd: b83,0EBV/38", string0);
      
      String string1 = EWrapperMsgGenerator.currentTime((-2316L));
      assertEquals("current time = -2316 (Dec 31, 1969 11:21:24 PM)", string1);
      
      String string2 = EWrapperMsgGenerator.updateNewsBulletin(369, 369, "a_j", "accountDownloadEnd: b83,0EBV/38");
      assertEquals("MsgId=369 :: MsgType=369 :: Origin=accountDownloadEnd: b83,0EBV/38 :: Message=a_j", string2);
      
      String string3 = EWrapperMsgGenerator.updateAccountValue("e", "", "a_j", "]I!");
      assertEquals("updateAccountValue: e  a_j ]I!", string3);
      
      String string4 = EWrapperMsgGenerator.tickSize(22, 369, 22);
      assertEquals("id=22  unknown=22", string4);
      
      EWrapperMsgGenerator.scannerParameters("&LoHH");
      EWrapperMsgGenerator.updateAccountTime((String) null);
      String string5 = EWrapperMsgGenerator.receiveFA(369, "&LoHH");
      assertEquals("FA: null &LoHH", string5);
      
      EWrapperMsgGenerator eWrapperMsgGenerator0 = new EWrapperMsgGenerator();
      String string6 = EWrapperMsgGenerator.realtimeBar(10, 369, 369, (-579.7145), 22, 1323.3839770376, (-3336L), (-579.7145), 22);
      assertEquals("id=10 time = 369 open=369.0 high=-579.7145 low=22.0 close=1323.3839770376 volume=-3336 count=22 WAP=-579.7145", string6);
      
      EWrapperMsgGenerator.nextValidId(63);
      String string7 = EWrapperMsgGenerator.nextValidId((-4135));
      assertEquals("Next Valid Order ID: -4135", string7);
      
      String string8 = EWrapperMsgGenerator.scannerParameters("b83,0EBV/38");
      assertEquals("SCANNER PARAMETERS:\nb83,0EBV/38", string8);
      
      String string9 = EWrapperMsgGenerator.execDetailsEnd(369);
      assertEquals("reqId = 369 =============== end ===============", string9);
      
      String string10 = EWrapperMsgGenerator.updateAccountTime("'MM$lWHspf6z&G:IcJ");
      assertEquals("updateAccountTime: 'MM$lWHspf6z&G:IcJ", string10);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      String string0 = EWrapperMsgGenerator.scannerDataEnd(41);
      assertEquals("id = 41 =============== end ===============", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(816, 2134145240, "ZNs*7rmkm", 2134145240, 816, (-434.29188), (-2135164073));
      assertEquals("updateMktDepth: 816 2134145240 ZNs*7rmkm 2134145240 816 -434.29188 -2135164073", string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EWrapperMsgGenerator.tickGeneric(1507, 3238, 3238);
      Vector<Object> vector0 = new Vector<Object>();
      Integer integer0 = new Integer(2125570549);
      Integer integer1 = new Integer(1507);
      Integer integer2 = new Integer(3238);
      Integer integer3 = new Integer(1);
      Integer integer4 = new Integer(13);
      Integer integer5 = new Integer((-1436639375));
      Integer integer6 = new Integer(1);
      Integer integer7 = new Integer(1);
      vector0.add((Object) integer7);
      AnyWrapperMsgGenerator.error(663, (-296), "])oDJE33}@A_.R");
      System.setCurrentTimeMillis(4097L);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Contract contract0 = new Contract();
      Execution execution0 = new Execution(3138, (-389), "`EW:Z:X)_Z&~L+]h`", (String) null, "`EW:Z:X)_Z&~L+]h`", (String) null, (String) null, 0, 0.0, (-389), (-389), 0, (-5856.0));
      execution0.m_permId = 3138;
      String string0 = EWrapperMsgGenerator.execDetails(2139841357, contract0, execution0);
      assertEquals(" ---- Execution Details begin ----\nreqId = 2139841357\norderId = 3138\nclientId = -389\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\ncontractExchange = null\ncurrency = null\nlocalSymbol = null\nexecId = `EW:Z:X)_Z&~L+]h`\ntime = null\nacctNumber = `EW:Z:X)_Z&~L+]h`\nexecutionExchange = null\nside = null\nshares = 0\nprice = 0.0\npermId = 3138\nliquidation = -389\ncumQty = 0\navgPrice = -5856.0\n ---- Execution Details end ----\n", string0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Execution execution0 = new Execution(960, 960, "N20-", "N20-", "?a\"1", "?a\"1", "?a\"1", 2127070206, 960, 947, 2127070206, 960, 181.83603);
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.execDetails(960, (Contract) null, execution0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar(28, 28, 28, (-185.0), 1509.684095495392, 1.7976931348623157E308, 28, (-470.635977814796), 28);
      assertEquals("id=28 time = 28 open=28.0 high=-185.0 low=1509.684095495392 close=1.7976931348623157E308 volume=28 count=28 WAP=-470.635977814796", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.realtimeBar((-411), (-411), (-411), (-411), 4027.085, 1456.860633206163, 1L, (-1.0), (-2143302542));
      assertEquals("id=-411 time = -411 open=-411.0 high=-411.0 low=4027.085 close=1456.860633206163 volume=1 count=-2143302542 WAP=-1.0", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Integer integer0 = new Integer(13);
      Integer integer1 = new Integer(13);
      Object object0 = new Object();
      String string0 = EWrapperMsgGenerator.tickPrice((-2353), (-576), (-2353), 2145273506);
      assertEquals("id=-2353  unknown=-2353.0  canAutoExecute", string0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.tickEFP(412, (-3092), 1.7976931348623157E308, " TIF=", (-3080.776025928699), (-1), "com.ib.client.TickType", 3626.3443909, 756.543478772729);
      assertEquals("id=412  unknown: basisPoints = 1.7976931348623157E308/ TIF= impliedFuture = -3080.776025928699 holdDays = -1 futureExpiry = com.ib.client.TickType dividendImpact = 3626.3443909 dividends to expiry = 756.543478772729", string0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UnderComp underComp0 = new UnderComp();
      underComp0.m_delta = (double) (-2139111392);
      underComp0.m_delta = (double) (-2139111392);
      EWrapperMsgGenerator.deltaNeutralValidation(2083, underComp0);
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract((-2614), "id = 2083 underComp.conId =0 underComp.delta =-2.139111392E9 underComp.price =0.0", "id = 2083 underComp.conId =0 underComp.delta =-2.139111392E9 underComp.price =0.0", "id = 2083 underComp.conId =0 underComp.delta =-2.139111392E9 underComp.price =0.0", (-2.139111392E9), "id = 2083 underComp.conId =0 underComp.delta =-2.139111392E9 underComp.price =0.0", "id = 2083 underComp.conId =0 underComp.delta =-2.139111392E9 underComp.price =0.0", "id = 2083 underComp.conId =0 underComp.delta =-2.139111392E9 underComp.price =0.0", "TLUDm", "xQ&xPBFTwl6,Rj;16Q;", vector0, "xQ&xPBFTwl6,Rj;16Q;", false, " equityWithLoan=", "primaryExch = ");
      UnderComp underComp1 = contract0.m_underComp;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.deltaNeutralValidation(6765, (UnderComp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      String string0 = EWrapperMsgGenerator.tickSnapshotEnd((-3635));
      assertEquals("id=-3635 =============== end ===============", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.managedAccounts("  It does not support API scanner subscription.");
      assertEquals("Connected : The list of managed accounts are : [  It does not support API scanner subscription.]", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateNewsBulletin(3745, (-2147483646), "OptionA@skExchStr", (String) null);
      assertEquals("MsgId=3745 :: MsgType=-2147483646 :: Origin=null :: Message=OptionA@skExchStr", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.fundamentalData(822, "&w<VIa,;gbb");
      assertEquals("id  = 822 len = 11\n&w<VIa,;gbb", string0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2((-2146743646), (-1131), "<5c5V0b![!", (-2146743646), 2696, (-1131), (-2146743646));
      assertEquals("updateMktDepth: -2146743646 -1131 <5c5V0b![! -2146743646 2696 -1131.0 -2146743646", string0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.updateMktDepthL2(10, 10, "V:?$p>dX@r#j", 155, 4230, (-2146743646), 4230);
      assertEquals("updateMktDepth: 10 10 V:?$p>dX@r#j 155 4230 -2.146743646E9 4230", string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String string0 = "z~~Q";
      OrderState orderState0 = new OrderState("MsgId=", "MsgId=", "MsgId=", "V:?$p>dX@r#j", 2858.0, 2858.0, (-1.0), "z~~Q", "fhl_");
      Order order0 = new Order();
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.openOrder((-1), (Contract) null, order0, orderState0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      predicate0.negate();
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      predicate5.or(predicate4);
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate3);
      Predicate<Object> predicate7 = predicate6.or(predicate0);
      predicate7.or(predicate2);
      predicate0.negate();
      Predicate<Object> predicate8 = predicate6.negate();
      predicate8.test(predicate5);
      predicate6.negate();
      predicate0.or(predicate8);
      ContractDetails contractDetails0 = new ContractDetails();
      String string0 = EWrapperMsgGenerator.bondContractDetails(2273, contractDetails0);
      assertEquals("reqId = 2273 ===================================\n ---- Bond Contract Details begin ----\nsymbol = null\nsecType = null\ncusip = null\ncoupon = 0.0\nmaturity = null\nissueDate = null\nratings = null\nbondType = null\ncouponType = null\nconvertible = false\ncallable = false\nputable = false\ndescAppend = null\nexchange = null\ncurrency = null\nmarketName = null\ntradingClass = null\nconid = 0\nminTick = 0.0\norderTypes = null\nvalidExchanges = null\nnextOptionDate = null\nnextOptionType = null\nnextOptionPartial = false\nnotes = null\nlongName = null\n ---- Bond Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_liquidHours = ": basisPoints = ";
      contractDetails0.m_putable = true;
      contractDetails0.m_convertible = true;
      String string0 = EWrapperMsgGenerator.scannerData(2147483646, 2147483646, contractDetails0, " hidden=", (String) null, (String) null, (String) null);
      assertEquals("id = 2147483646 rank=2147483646 symbol=null secType=null expiry=null strike=0.0 right=null exchange=null currency=null localSymbol=null marketName=null tradingClass=null distance= hidden= benchmark=null projection=null legsStr=null", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      UnaryOperator.identity();
      UnaryOperator.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      UnaryOperator.identity();
      Function.identity();
      Function.identity();
      ContractDetails contractDetails0 = new ContractDetails();
      contractDetails0.m_summary = null;
      contractDetails0.m_tradingClass = null;
      // Undeclared exception!
      try { 
        EWrapperMsgGenerator.scannerData(30, 42, contractDetails0, "z1V};u%FMxs", "6sU#KCW_>Yn?V5Qioo", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EWrapperMsgGenerator", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      UnaryOperator<TagValue> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = unaryOperator1.compose((Function<? super Object, ? extends Integer>) function0);
      function1.compose((Function<? super TagValue, ?>) unaryOperator0);
      unaryOperator0.andThen((Function<? super TagValue, ? extends Integer>) function1);
      TagValue tagValue0 = new TagValue(".U=!pcoL&;i}", ".U=!pcoL&;i}");
      vector0.addElement(tagValue0);
      UnaryOperator.identity();
      vector0.removeElement(unaryOperator0);
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      vector0.containsAll(set0);
      vector0.ensureCapacity(45);
      vector0.trimToSize();
      EWrapperMsgGenerator.updateMktDepth(50, 876, 45, 45, 2.1270702086416986E9, 50);
      Vector<TagValue> vector1 = new Vector<TagValue>();
      vector1.clear();
      // Undeclared exception!
      try { 
        vector0.insertElementAt(tagValue0, 409);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 409 > 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      vector0.trimToSize();
      AnyWrapperMsgGenerator.connectionClosed();
      Vector<TagValue> vector1 = new Vector<TagValue>();
      Vector<TagValue> vector2 = new Vector<TagValue>();
      TagValue tagValue0 = new TagValue();
      Object object0 = new Object();
      TagValue tagValue1 = new TagValue("6>*Te", "Q<;i_8y");
      tagValue0.m_value = null;
      TagValue tagValue2 = new TagValue();
      TagValue tagValue3 = new TagValue();
      Vector<TagValue> vector3 = new Vector<TagValue>();
      vector3.addElement(tagValue1);
      Vector<TagValue> vector4 = new Vector<TagValue>();
      Vector<TagValue> vector5 = new Vector<TagValue>();
      TagValue tagValue4 = new TagValue((String) null, "");
      vector3.add(tagValue3);
      TagValue tagValue5 = new TagValue();
      vector5.add(tagValue2);
      TagValue tagValue6 = new TagValue("Q<;i_8y", "exchange = ");
      Vector<TagValue> vector6 = new Vector<TagValue>();
      TagValue tagValue7 = new TagValue((String) null, (String) null);
      vector5.add(tagValue7);
      String string0 = EWrapperMsgGenerator.updateMktDepth(443, 50, (-551), 938, 50, 938);
      assertEquals("updateMktDepth: 443 50 -551 938 50.0 938", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract((-2003), "!*F8d.@a%b1q~a", "!*F8d.@a%b1q~a", "R:!qTa(*!M2T[&\"r(>", 0.0, "I%BAG", "Hwm", " auctionStrategy=", "P,AF!z", "-", vector0, "J=^7KYQmHqz`u&Z0", true, "Z,{R3rj`@XY2nYF", "[v.pxb#");
      String string0 = EWrapperMsgGenerator.updatePortfolio(contract0, 10, (-2003), 0.0, 0.0, 0.0, 3554.0, "P,AF!z");
      assertNotNull(string0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      TagValue tagValue0 = new TagValue();
      vector0.add(tagValue0);
      Contract contract0 = new Contract((-2220), "SCANNER PARAMETERS:\n", "I4dlAP*s18:@", "wa]{9\"|K,?D", (-2220), "Oy>4']", (String) null, (String) null, "yHBPhdJKKM9/$", "Oy>4']", vector0, "yHBPhdJKKM9/$", true, "Q`%[sf2", (String) null);
      Order order0 = new Order();
      Order order1 = new Order();
      String string0 = EWrapperMsgGenerator.orderStatus((-2220), (String) null, (-2744), 3, (-2704.53429095), (-1820), 0, 0.0, 0, "l5by`/K,j&J(F23Sa");
      assertEquals("order status: orderId=-2220 clientId=0 permId=-1820 status=null filled=-2744 remaining=3 avgFillPrice=-2704.53429095 lastFillPrice=0.0 parent Id=0 whyHeld=l5by`/K,j&J(F23Sa", string0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Contract contract0 = new Contract();
      Order order0 = new Order();
      order0.m_continuousUpdate = 1073741824;
      String string0 = EWrapperMsgGenerator.orderStatus(0, ";1 fDdC)Y+>_N!1", 0, 0, Integer.MAX_VALUE, 1073741824, 1361, Integer.MAX_VALUE, 1988, (String) null);
      assertEquals("order status: orderId=0 clientId=1988 permId=1073741824 status=;1 fDdC)Y+>_N!1 filled=0 remaining=0 avgFillPrice=2.147483647E9 lastFillPrice=2.147483647E9 parent Id=1361 whyHeld=null", string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      Contract contract0 = new Contract(15, "  It does not support API scanner subscription.", "volu/vyy", "volu/vyy", 15, "!*F8d.@a%b1q~a", " startingPrice=", "!*F8d.@a%b1q~a", "volu/vyy", ">d@`Xua`sa5$FH:;c", vector0, "  It does not support API scanner subscription.", false, "volu/vyy", "!*F8d.@a%b1q~a");
      ContractDetails contractDetails0 = new ContractDetails(contract0, "volu/vyy", "*8>M[veGQ5ZZ_JL", (-1.0), "", (String) null, 0, "fundamentals", "id=13  modelOptComp=13.0", "  It does not support API scanner subscription.", "N/A", "", "G", "id=99  unknown=id=99  unknown=99.0", "  It does not support API scanner subscription.");
      String string0 = EWrapperMsgGenerator.scannerData(15, 15, contractDetails0, (String) null, "", (String) null, "  It does not support API scanner subscription.");
      assertNotNull(string0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EWrapperMsgGenerator.contractDetailsEnd(13);
      Vector<TagValue> vector0 = new Vector<TagValue>();
      Integer integer0 = new Integer((-2157));
      Predicate<Object> predicate0 = Predicate.isEqual((Object) vector0);
      Predicate<Object> predicate1 = null;
      // Undeclared exception!
      try { 
        predicate0.and((Predicate<? super Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<Object> vector0 = new Vector<Object>();
      OrderState orderState0 = new OrderState();
      Order order0 = new Order();
      EWrapperMsgGenerator.updatePortfolio(contract0, Integer.MAX_VALUE, 0, 'n', 0.0, Integer.MAX_VALUE, 'y', "");
      Vector<TagValue> vector1 = new Vector<TagValue>();
      Consumer<TagValue> consumer0 = (Consumer<TagValue>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer0);
      vector1.stream();
      TagValue tagValue0 = new TagValue((String) null, "updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n2147483647 0.0 110.0 0.0 2.147483647E9 121.0 ");
      vector1.addElement(tagValue0);
      Vector<TagValue> vector2 = new Vector<TagValue>();
      Vector<TagValue> vector3 = new Vector<TagValue>();
      TagValue tagValue1 = new TagValue("updatePortfolio: conid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\n2147483647 0.0 110.0 0.0 2.147483647E9 121.0 ", (String) null);
      TagValue tagValue2 = new TagValue();
      tagValue1.equals(tagValue2);
      TagValue tagValue3 = new TagValue("", (String) null);
      vector3.add(tagValue3);
      TagValue tagValue4 = new TagValue();
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        tagValue1.equals(integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      UnaryOperator<TagValue> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function1 = unaryOperator1.compose((Function<? super Object, ? extends Integer>) function0);
      function1.compose((Function<? super TagValue, ?>) unaryOperator0);
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.andThen((Function<? super TagValue, ? extends String>) function2);
      unaryOperator0.andThen((Function<? super TagValue, ? extends Integer>) function1);
      TagValue tagValue0 = new TagValue(".U=!pcoL&;i}", ".U=!pcoL&;i}");
      vector0.addElement(tagValue0);
      UnaryOperator.identity();
      vector0.removeElement(unaryOperator0);
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      vector0.containsAll(set0);
      vector0.ensureCapacity(45);
      EWrapperMsgGenerator.openOrderEnd();
      Vector<TagValue> vector1 = new Vector<TagValue>();
      vector1.clear();
      // Undeclared exception!
      try { 
        vector1.insertElementAt(tagValue0, (-551));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      String string0 = "V:?$p>dX@r#j";
      TagValue tagValue0 = new TagValue("V:?$p>dX@r#j", "^E4.THp*<Dtd!A6rB");
      Vector<TagValue> vector0 = new Vector<TagValue>();
      vector0.add(tagValue0);
      OrderState orderState0 = new OrderState();
      Contract contract0 = new Contract();
      Order order0 = new Order();
      EWrapperMsgGenerator.openOrder(29, contract0, order0, orderState0);
      Vector<TagValue> vector1 = new Vector<TagValue>();
      vector1.remove((Object) tagValue0);
      // Undeclared exception!
      try { 
        vector0.forEach((Consumer<? super TagValue>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.orderStatus(2739, "id  = -1978 len = 3\n5ZP", 1983327868, 1983327868, 0.0, 935, 2739, 1983327868, 935, "zB}*;%2 {`>qZKtF@I");
      assertEquals("order status: orderId=2739 clientId=935 permId=935 status=id  = -1978 len = 3\n5ZP filled=1983327868 remaining=1983327868 avgFillPrice=0.0 lastFillPrice=1.983327868E9 parent Id=2739 whyHeld=zB}*;%2 {`>qZKtF@I", string0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Vector<Integer> vector0 = new Vector<Integer>(linkedList0);
      Contract contract0 = new Contract(2144480762, "]+}\bamu4$X4", " TIF=", " TIF=", 2144480762, "]+}\bamu4$X4", "R:!qTa(*!M2T[&\"r(>", "S{zhDWzSuO>n+{$", (String) null, ",#K?4u9R", vector0, "LlavD:EZm9NP>e", true, "&\"j", "S{zhDWzSuO>n+{$");
      String string0 = EWrapperMsgGenerator.contractMsg(contract0);
      assertEquals("conid = 2144480762\nsymbol = ]+}\bamu4$X4\nsecType =  TIF=\nexpiry =  TIF=\nstrike = 2.144480762E9\nright = ]+}\bamu4$X4\nmultiplier = R:!qTa(*!M2T[&\"r(>\nexchange = S{zhDWzSuO>n+{$\nprimaryExch = LlavD:EZm9NP>e\ncurrency = null\nlocalSymbol = ,#K?4u9R\n", string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "id=2147483647 date = U_<SbES:Pbg=Zdq open=0.0 high=2.147483647E9 low=3689.51539321651 close=1963.2338712 volume=2355 count=1478 WAP=2355.0 hasGaps=true");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate0.and(predicate2);
      predicate0.or(predicate4);
      predicate0.negate();
      predicate3.negate();
      predicate3.negate();
      Predicate<Object> predicate5 = predicate2.or(predicate1);
      predicate2.or(predicate5);
      String string0 = EWrapperMsgGenerator.historicalData((-807), "A8E~", (-807), (-807), (-807), (-4022.97), (-807), (-4357), 1.7976931348623157E308, false);
      assertEquals("id=-807 date = A8E~ open=-807.0 high=-807.0 low=-807.0 close=-4022.97 volume=-807 count=-4357 WAP=1.7976931348623157E308 hasGaps=false", string0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = EWrapperMsgGenerator.historicalData((-2436), "L>J7Hio5QE5LM$", (-2436), 1043.8303017, 1173.0910629805, 263.73182561719, (-2024), (-2024), 1173.0910629805, false);
      assertEquals("id=-2436 date = L>J7Hio5QE5LM$ open=-2436.0 high=1043.8303017 low=1173.0910629805 close=263.73182561719 volume=-2024 count=-2024 WAP=1173.0910629805 hasGaps=false", string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Vector<TagValue> vector0 = new Vector<TagValue>();
      UnaryOperator.identity();
      int int0 = 5;
      Integer integer0 = new Integer(5);
      Integer[] integerArray0 = new Integer[8];
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(99);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(139);
      integerArray0[2] = integer2;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      integerArray0[5] = integer0;
      integerArray0[6] = integer0;
      integerArray0[7] = integer0;
      Integer[] integerArray1 = vector0.toArray(integerArray0);
      vector0.toArray(integerArray1);
      Vector<TagValue> vector1 = new Vector<TagValue>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      TagValue tagValue0 = new TagValue();
      String string0 = EWrapperMsgGenerator.tickSize(13, int0, (-833));
      assertEquals("id=13  lastSize=-833", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TagValue tagValue0 = new TagValue("V:?$p>dX@r#j", "^E4.THp*<Dtd!A6rB");
      Vector<TagValue> vector0 = new Vector<TagValue>();
      vector0.add(tagValue0);
      OrderState orderState0 = new OrderState();
      String string0 = EWrapperMsgGenerator.historicalData((-1), (String) null, (-1.0), 0.0, 0.0, 0.0, (-2146709510), (-2146709510), (-1), true);
      assertEquals("id=-1 date = null open=-1.0 high=0.0 low=0.0 close=0.0 volume=-2146709510 count=-2146709510 WAP=-1.0 hasGaps=true", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Contract contract0 = new Contract();
      Vector<Object> vector0 = new Vector<Object>();
      Contract contract1 = new Contract();
      ContractDetails contractDetails0 = new ContractDetails(contract1, (String) null, (String) null, (-381.162), "~~wT_HomM&-en", "CdMrcAs5qc+{[BI^", 0, (String) null, "XP~2=", "0EQ_c&+F9`M/FtH)", (String) null, (String) null, "openEFP", (String) null, "T");
      contractDetails0.m_category = null;
      String string0 = EWrapperMsgGenerator.contractDetails((-3278), contractDetails0);
      assertEquals("reqId = -3278 ===================================\n ---- Contract Details begin ----\nconid = 0\nsymbol = null\nsecType = null\nexpiry = null\nstrike = 0.0\nright = null\nmultiplier = null\nexchange = null\nprimaryExch = null\ncurrency = null\nlocalSymbol = null\nmarketName = null\ntradingClass = null\nminTick = -381.162\nprice magnifier = 0\norderTypes = ~~wT_HomM&-en\nvalidExchanges = CdMrcAs5qc+{[BI^\nunderConId = 0\nlongName = null\ncontractMonth = XP~2=\nindustry = 0EQ_c&+F9`M/FtH)\ncategory = null\nsubcategory = null\ntimeZoneId = openEFP\ntradingHours = null\nliquidHours = T\n ---- Contract Details End ----\n", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "Gm:0E-8qov#`E#g6,e@");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate2.negate();
      predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate1.negate();
      predicate3.or(predicate1);
      String string0 = EWrapperMsgGenerator.tickString(4145, (-2147483645), "Gm:0E-8qov#`E#g6,e@");
      assertEquals("id=4145  unknown=Gm:0E-8qov#`E#g6,e@", string0);
  }
}
