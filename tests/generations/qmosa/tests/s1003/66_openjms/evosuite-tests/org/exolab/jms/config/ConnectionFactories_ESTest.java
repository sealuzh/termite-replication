/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 13:01:50 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.StringReader;
import java.io.Writer;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.069485831493454
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      topicConnectionFactory0.setName("the argument 'target' must not be null or empty.");
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.validate();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getXMLVersion();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getSystemId();
      locator2Impl1.getLineNumber();
      locator2Impl1.setPublicId("Th namespace associated with the prefix '");
      locator2Impl0.getLineNumber();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories1.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      StringReader stringReader0 = new StringReader("Th namespace associated with the prefix '");
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      topicConnectionFactoryArray0[2] = topicConnectionFactory1;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      connectionFactories1.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getConnectionFactory();
      connectionFactories1.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getConnectionFactoryCount());
      
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0, true);
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getLineNumber();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl0.getPublicId();
      locatorImpl0.setLineNumber(0);
      locator2Impl0.setLineNumber(0);
      locatorImpl1.setColumnNumber(0);
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getLineNumber();
      locatorImpl1.setSystemId((String) null);
      locator2Impl0.getPublicId();
      locator2Impl1.getSystemId();
      locator2Impl2.setLineNumber(0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getColumnNumber();
      locatorImpl0.setLineNumber(1776);
      locator2Impl0.setXMLVersion((String) null);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locatorImpl2.getLineNumber();
      locator2Impl3.setPublicId("mapping.fieldNotAccessible");
      locator2Impl0.getLineNumber();
      locatorImpl2.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.067996766631831
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getXMLVersion();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getSystemId();
      locator2Impl1.setPublicId("Th namespace associated with the prefix '");
      locator2Impl0.getLineNumber();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories1.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      StringReader stringReader0 = new StringReader("Th namespace associated with the prefix '");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      connectionFactories1.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getConnectionFactory();
      connectionFactories1.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getConnectionFactoryCount();
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(1, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl2.getColumnNumber();
      locator2Impl1.setSystemId((String) null);
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl1.getPublicId();
      locatorImpl0.setLineNumber(0);
      locatorImpl1.setLineNumber(0);
      locatorImpl2.setColumnNumber(0);
      locatorImpl0.setLineNumber((-2595));
      locator2Impl2.getLineNumber();
      locatorImpl2.setSystemId((String) null);
      locatorImpl0.getPublicId();
      locator2Impl0.getPublicId();
      locator2Impl1.getSystemId();
      locator2Impl2.setLineNumber(0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getColumnNumber();
      locatorImpl0.setLineNumber(1776);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locator2Impl3.setPublicId("Th namespace associated with the prefix '");
      locator2Impl0.getLineNumber();
      locatorImpl1.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
      assertEquals(6, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setPublicId((String) null);
      locator2Impl1.getEncoding();
      locator2Impl1.setSystemId("7qp16Li/1Fi/bsD:");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl1.getXMLVersion();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl1.getXMLVersion();
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl2.getLineNumber();
      locator2Impl2.getColumnNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locator2Impl2.getLineNumber();
      locatorImpl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl2);
      locator2Impl0.getLineNumber();
      locator2Impl0.getLineNumber();
      locatorImpl0.setLineNumber(21);
      locatorImpl0.setSystemId((String) null);
      locatorImpl2.getSystemId();
      locator2Impl0.setColumnNumber(0);
      locatorImpl2.setColumnNumber(0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      SAXParseException sAXParseException1 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockThrowable mockThrowable0 = new MockThrowable();
      sAXParseException1.getSuppressed();
      SAXParseException sAXParseException2 = new SAXParseException("7qp16Li/1Fi/bsD:", locator2Impl0, sAXParseException1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = connectionFactories0.getXAQueueConnectionFactory(0);
      assertNull(xAQueueConnectionFactory0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl1.getSystemId();
      locatorImpl1.setPublicId("ouput");
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setPublicId((String) null);
      locator2Impl0.getPublicId();
      locator2Impl1.getLineNumber();
      locator2Impl0.setPublicId("7qp16Li/1Fi/dsd:");
      locator2Impl1.setSystemId("7qp16Li/1Fi/dsd:");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl1.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locator2Impl2.setSystemId((String) null);
      locator2Impl2.setEncoding((String) null);
      locatorImpl2.getLineNumber();
      locator2Impl2.getColumnNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locator2Impl0.getLineNumber();
      locatorImpl2.getLineNumber();
      locator2Impl2.getLineNumber();
      locatorImpl2.getPublicId();
      locatorImpl0.getLineNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl2);
      locator2Impl3.getLineNumber();
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl2);
      locatorImpl4.getSystemId();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl4);
      locatorImpl0.getLineNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = connectionFactories0.getXATopicConnectionFactory(0);
      assertNull(xATopicConnectionFactory0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setPublicId((String) null);
      locator2Impl1.setColumnNumber(0);
      locator2Impl1.getEncoding();
      locator2Impl1.setSystemId("Tj5dBz;qrCv(`z");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl0.getLineNumber();
      locator2Impl1.getXMLVersion();
      locator2Impl2.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl2.getLineNumber();
      locator2Impl0.getLineNumber();
      locator2Impl2.getColumnNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locator2Impl2.getLineNumber();
      LocatorImpl locatorImpl4 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl4);
      locator2Impl3.getLineNumber();
      locator2Impl0.getLineNumber();
      locatorImpl0.setLineNumber((-1));
      locatorImpl0.setSystemId((String) null);
      locatorImpl2.getSystemId();
      locator2Impl0.setColumnNumber(0);
      locatorImpl2.setColumnNumber(0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      SAXParseException sAXParseException1 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockThrowable mockThrowable0 = new MockThrowable();
      SAXParseException sAXParseException2 = new SAXParseException("Tj5dBz;qrCv(`z", locator2Impl0, sAXParseException1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(7, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      topicConnectionFactory0.setName("the argument 'target' must not be null or empty.");
      connectionFactories0.validate();
      connectionFactories0.getQueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getLineNumber();
      locator2Impl0.setPublicId("Th namespace associated with the prefix '");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories1.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories1.setConnectionFactory(connectionFactoryArray0);
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte)65;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte) (-45);
      byteArray0[6] = (byte)84;
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[4];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory1;
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[2] = queueConnectionFactory2;
      QueueConnectionFactory queueConnectionFactory3 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[3] = queueConnectionFactory3;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      byteArray0[7] = (byte)126;
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      ParserAdapter parserAdapter2 = null;
      try {
        parserAdapter2 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      locator2Impl0.setLineNumber((-1287));
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl0);
      locatorImpl1.getLineNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.setEncoding("$]DQAx5b2FW*.7");
      LocatorImpl locatorImpl4 = new LocatorImpl();
      locator2Impl0.setLineNumber(3926);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getEncoding();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      locator2Impl3.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl1);
      locatorImpl2.getPublicId();
      locatorImpl1.setPublicId((String) null);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getXAConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.1369635613227986
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getXMLVersion();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getSystemId();
      locator2Impl1.setPublicId("Th namespace associated with the prefix '");
      locator2Impl0.getLineNumber();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories1.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      StringReader stringReader0 = new StringReader("Th namespace associated with the prefix '");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      connectionFactories1.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getConnectionFactory();
      connectionFactories1.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getConnectionFactory(0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-58));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory((ConnectionFactory) null);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[17];
      connectionFactories0.getConnectionFactory(0);
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl2);
      locatorImpl0.getLineNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl0.setContentHandler(defaultHandler2_0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl3);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.endElement("", "", "JtF oQ9pm1.");
      xMLFilterImpl1.startPrefixMapping("X/a)v", "X/a)v");
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      xMLFilterImpl0.getContentHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactoryCount();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      XAConnectionFactory xAConnectionFactory1 = connectionFactories0.getXAConnectionFactory(0);
      assertSame(xAConnectionFactory1, xAConnectionFactory0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[2];
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory1;
      xAQueueConnectionFactoryArray0[7] = xAQueueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory(0);
      assertEquals(2, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXATopicConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte)15;
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte) (-25);
      byteArray0[3] = (byte) (-25);
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)49;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#W_V}qQcB");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w:Ocs|DJRDp|tv");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      xAConnectionFactory0.setName("CbTT]zyn");
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      boolean boolean1 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      int int0 = 316;
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      try { 
        connectionFactories2.setXAConnectionFactory(316, xAConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl2.getColumnNumber();
      locator2Impl1.getXMLVersion();
      locator2Impl1.setSystemId((String) null);
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl0.setLineNumber(0);
      locatorImpl1.setLineNumber(0);
      locatorImpl2.setColumnNumber(0);
      locatorImpl0.setLineNumber((-2595));
      locatorImpl2.setSystemId((String) null);
      locatorImpl0.getPublicId();
      locator2Impl0.getPublicId();
      locator2Impl1.getSystemId();
      locator2Impl2.setLineNumber(0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getColumnNumber();
      locatorImpl0.setLineNumber(1776);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locator2Impl3.setPublicId("Th namespace associated with the prefix '");
      locator2Impl0.getLineNumber();
      locatorImpl3.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[4];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      try { 
        connectionFactories0.setTopicConnectionFactory(0, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.217613887895213
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      topicConnectionFactory0.setName("the argument 'target' must not be null or empty.");
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.validate();
      connectionFactories0.validate();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      int int0 = 0;
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactory1.setName("org.exolab.jms.config.ConnectionFactories");
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory2 = connectionFactories0.getTopicConnectionFactory(0);
      topicConnectionFactory2.isValid();
      topicConnectionFactory1.validate();
      topicConnectionFactoryArray0[5] = topicConnectionFactory2;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      topicConnectionFactoryArray0[7] = topicConnectionFactory0;
      topicConnectionFactory0.isValid();
      topicConnectionFactoryArray0[8] = topicConnectionFactory0;
      connectionFactories0.clearXAConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl1.getColumnNumber();
      locator2Impl1.getXMLVersion();
      locator2Impl1.setSystemId((String) null);
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl0.setLineNumber(0);
      locatorImpl1.setLineNumber(0);
      locatorImpl2.setColumnNumber(0);
      locatorImpl0.setLineNumber((-2595));
      locatorImpl2.setSystemId((String) null);
      locatorImpl0.getPublicId();
      locator2Impl0.getPublicId();
      locator2Impl1.getSystemId();
      locator2Impl2.setLineNumber(0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getColumnNumber();
      locatorImpl0.setLineNumber(1776);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locator2Impl3.setPublicId("Th namespace associated with the prefix '");
      locator2Impl0.getLineNumber();
      locatorImpl3.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[4];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      try { 
        connectionFactories0.setTopicConnectionFactory(0, (TopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory(0, (ConnectionFactory) null);
      connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
      char[] charArray0 = new char[7];
      charArray0[0] = '-';
      charArray0[1] = 'C';
      charArray0[2] = '-';
      charArray0[3] = '-';
      charArray0[4] = 'p';
      charArray0[5] = 'Q';
      charArray0[6] = '\'';
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      Enumeration enumeration1 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotSame(enumeration1, enumeration0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setPublicId((String) null);
      locator2Impl1.getEncoding();
      locator2Impl1.setSystemId("7qp16Li/1Fi/dsD:");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl1.getXMLVersion();
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl2.getLineNumber();
      locatorImpl1.getSystemId();
      locator2Impl2.getColumnNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locator2Impl2.getLineNumber();
      locatorImpl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl2);
      locator2Impl0.getLineNumber();
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl4);
      locatorImpl0.getLineNumber();
      locatorImpl3.getPublicId();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.notationDecl((String) null, "", "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributes2Impl0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      assertNull(xATopicConnectionFactory0.getName());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl0);
      locatorImpl2.setPublicId("");
      locatorImpl0.setSystemId((String) null);
      locatorImpl0.setSystemId((String) null);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl2);
      locatorImpl0.getLineNumber();
      xMLFilterImpl0.unparsedEntityDecl("hashtaje", "hashtaje", (String) null, "org.exolab.castor.marshalling.validation");
      xMLFilterImpl0.getContentHandler();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      locatorImpl3.getLineNumber();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getEncoding();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getXMLVersion();
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locatorImpl0.getPublicId();
      locator2Impl3.setPublicId("xnBXp`&:'E7!49AwSh");
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl2);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-2908), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl2.skippedEntity("_+zM'_8X.u");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl5);
      xMLFilterImpl5.unparsedEntityDecl((String) null, (String) null, "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type", "OU/P");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl8.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl((String) null, "org.exolab.castor.types.OperationNotSupportedException", "");
      xMLFilterImpl8.skippedEntity(" y77*|?A-H9~!aRrWXS");
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      xMLFilterImpl11.endDocument();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl9);
      xMLFilterImpl12.getContentHandler();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = connectionFactories0.getXATopicConnectionFactory();
      assertEquals(0, xATopicConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory(5439, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 5439, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1R/Pn[Z@25P#nGRY} ");
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[8];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      StringReader stringReader0 = new StringReader("`bi2|@");
      try { 
        XAQueueConnectionFactory.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[17];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(17, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl0.setLineNumber((-1287));
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl1);
      locatorImpl2.getLineNumber();
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl0);
      locatorImpl4.getColumnNumber();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setEncoding((String) null);
      LocatorImpl locatorImpl5 = new LocatorImpl();
      locatorImpl2.setLineNumber(1);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getEncoding();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl3);
      locator2Impl4.getPublicId();
      locator2Impl0.setPublicId("7>b{q02");
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl3);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setPublicId((String) null);
      locator2Impl1.setColumnNumber(0);
      locator2Impl1.getEncoding();
      locator2Impl1.setSystemId("[OE^~5WU+O4yF");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl0.getLineNumber();
      locator2Impl1.getXMLVersion();
      locator2Impl2.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl2.getLineNumber();
      locator2Impl2.getColumnNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locator2Impl2.getLineNumber();
      locatorImpl2.getPublicId();
      LocatorImpl locatorImpl4 = new LocatorImpl();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl4);
      locator2Impl3.getLineNumber();
      locator2Impl0.getLineNumber();
      locatorImpl0.setSystemId((String) null);
      locatorImpl2.getSystemId();
      locator2Impl0.setColumnNumber(0);
      locatorImpl2.setColumnNumber(0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      SAXParseException sAXParseException1 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockThrowable mockThrowable0 = new MockThrowable();
      locator2Impl2.getSystemId();
      SAXParseException sAXParseException2 = new SAXParseException("[OE^~5WU+O4yF", locator2Impl0, sAXParseException1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[7];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(7, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.getQueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      try { 
        connectionFactories1.setQueueConnectionFactory(3192, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.917970816057719
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactory0.setName("the argument 'target' must not be null or empty.");
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      connectionFactories0.validate();
      connectionFactories0.validate();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[9];
      int int0 = 0;
      connectionFactories0.getTopicConnectionFactory(0);
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[5];
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl2.skippedEntity("_+zM'_8X.u");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl6);
      xMLFilterImpl1.unparsedEntityDecl("}|jh>)z[]>jeLd{6+NW", "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type", "", "~otS");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl8.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl4.getParent();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl4);
      xMLFilterImpl7.notationDecl("@Kx$`?2i?z!N,f|i0@7", "", (String) null);
      xMLFilterImpl3.skippedEntity("");
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      xMLFilterImpl1.endDocument();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl11);
      xMLFilterImpl9.getContentHandler();
      try { 
        connectionFactories0.setQueueConnectionFactory((-1), (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte) (-6);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.util.DefaultObjectFactory");
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((int) (byte) (-6), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = 'p';
      charArray0[2] = '\u001E';
      charArray0[3] = 'g';
      charArray0[4] = '&';
      charArray0[5] = 'D';
      charArray0[6] = '~';
      charArray0[7] = '[';
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(1325, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1325, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[17];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactoryCount();
      try { 
        connectionFactories0.getQueueConnectionFactory(17);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.995417150219457
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.clearXATopicConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.isValid();
      connectionFactories0.clearXAConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      xATopicConnectionFactory0.setName("j");
      try { 
        connectionFactories0.setXATopicConnectionFactory(1, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(610, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      String string0 = "v),;):.0~.Fk'aD.C";
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl4.setContentHandler(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl4);
      String string1 = null;
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-8), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl2.getColumnNumber();
      locator2Impl1.getXMLVersion();
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getSystemId();
      locatorImpl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl1.getPublicId();
      locatorImpl0.setLineNumber(0);
      locatorImpl1.setLineNumber(0);
      locatorImpl2.setColumnNumber(0);
      locatorImpl0.setLineNumber((-2595));
      locatorImpl2.setSystemId((String) null);
      locatorImpl0.getPublicId();
      locator2Impl0.getPublicId();
      locator2Impl1.getSystemId();
      locator2Impl2.setLineNumber(30);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getColumnNumber();
      locatorImpl0.setLineNumber(1776);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locator2Impl3.setPublicId("Th namespace associated with the prefix '");
      locator2Impl2.getLineNumber();
      locatorImpl3.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(1, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "e&AB`s\f*?Hv");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setSystemId("7qp16Li/1Fi/bsD:");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl1.getXMLVersion();
      locatorImpl0.getSystemId();
      locatorImpl1.getPublicId();
      locatorImpl0.setLineNumber(0);
      locatorImpl1.setLineNumber(0);
      locatorImpl2.setSystemId((String) null);
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      locatorImpl0.setLineNumber(1755);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.setPublicId("The namespace associated with the prefix '");
      locator2Impl2.getLineNumber();
      locatorImpl3.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory((-1937), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setPublicId((String) null);
      locator2Impl1.setColumnNumber(0);
      locator2Impl1.getEncoding();
      locator2Impl1.setSystemId("&Ltq+.G\"jJ<c");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locator2Impl1.getXMLVersion();
      locator2Impl2.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl2.getLineNumber();
      locator2Impl0.getLineNumber();
      locator2Impl0.setXMLVersion((String) null);
      locator2Impl2.getColumnNumber();
      locator2Impl2.getLineNumber();
      locatorImpl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl2);
      locator2Impl0.getLineNumber();
      locator2Impl0.getLineNumber();
      locatorImpl0.setLineNumber(21);
      locatorImpl0.setSystemId((String) null);
      locatorImpl2.getSystemId();
      locator2Impl0.setColumnNumber(0);
      locatorImpl2.setColumnNumber(0);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      SAXParseException sAXParseException1 = new SAXParseException((String) null, (String) null, (String) null, 0, 0);
      MockThrowable mockThrowable0 = new MockThrowable();
      SAXParseException sAXParseException2 = new SAXParseException("&Ltq+.G\"jJ<c", locator2Impl0, sAXParseException1);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(57, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      XAConnectionFactory xAConnectionFactory2 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[8];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory2;
      xAConnectionFactoryArray0[2] = xAConnectionFactory2;
      xAConnectionFactoryArray0[3] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory2;
      xAConnectionFactoryArray0[6] = xAConnectionFactory2;
      xAConnectionFactoryArray0[7] = xAConnectionFactory1;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.getConnectionFactory();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory3 = new XAConnectionFactory();
      connectionFactories2.getTopicConnectionFactory();
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      connectionFactories0.getXAConnectionFactory();
      assertEquals(8, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl2.skippedEntity("_+zM'_8X.u");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl4);
      xMLFilterImpl4.unparsedEntityDecl((String) null, (String) null, "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type", "OU/P");
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl7.getParent();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl6.getParent();
      xMLFilterImpl2.notationDecl((String) null, "org.exolab.castor.types.OperationNotSupportedException", "");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      xMLFilterImpl7.skippedEntity("OU/P");
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl10.endDocument();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl8);
      xMLFilterImpl11.getContentHandler();
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[7];
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-24);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$-sC>V7nj\u0005");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-24);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Illegal Text data found as child of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(1842, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1842, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locatorImpl0.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl2.getColumnNumber();
      locator2Impl1.setSystemId((String) null);
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getSystemId();
      locator2Impl0.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl1.getPublicId();
      locatorImpl0.setLineNumber(0);
      locatorImpl1.setLineNumber(0);
      locatorImpl2.setColumnNumber(0);
      locatorImpl0.setLineNumber(0);
      locator2Impl2.getLineNumber();
      locatorImpl2.setSystemId((String) null);
      locatorImpl0.getPublicId();
      locator2Impl0.getPublicId();
      locator2Impl1.getSystemId();
      locator2Impl2.setLineNumber(0);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      locatorImpl0.getColumnNumber();
      locatorImpl0.setLineNumber(1776);
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl3.getColumnNumber();
      locatorImpl3.getLineNumber();
      locator2Impl3.setPublicId("mapping.fieldNotAccessible");
      locator2Impl0.getLineNumber();
      locatorImpl3.getPublicId();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl5.getDTDHandler();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl6.skippedEntity("hx");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl8.unparsedEntityDecl((String) null, (String) null, "+zM'_X.u", "7Z:K%Uz");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl6.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl10.getDTDHandler();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.notationDecl("7Z:K%Uz", "hx", (String) null);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl13.skippedEntity("}g\"hN");
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl13.endDocument();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl2.getContentHandler();
      xMLFilterImpl16.getContentHandler();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      xMLFilterImpl12.getContentHandler();
      try { 
        connectionFactories0.setQueueConnectionFactory(22, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl6.skippedEntity("");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl8.unparsedEntityDecl((String) null, (String) null, "+zM'_X.u", "D?Hfj");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl6.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.notationDecl("-?xbjtl)LNgC&U>`q", "", (String) null);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl13.skippedEntity("}g\"hN");
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl13.endDocument();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl8.getContentHandler();
      xMLFilterImpl16.getContentHandler();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      xMLFilterImpl16.getContentHandler();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = null;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)20;
      try { 
        connectionFactories0.getXATopicConnectionFactory(198);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-729));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(38, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateQueueConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = false;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ihgI)Z+WCM=W.\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ihgI)Z+WCM=W.\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory((XAConnectionFactory) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = 'p';
      charArray0[2] = '\u001E';
      charArray0[3] = 'g';
      charArray0[4] = '&';
      charArray0[5] = 'D';
      charArray0[6] = '~';
      charArray0[7] = '[';
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory((-2610));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Marshaller.enableDebug = false;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ihgI)Z+WCM=W.\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ihgI)Z+WCM=W.\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      try { 
        connectionFactories0.getTopicConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-1), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 340;
      int int1 = (-1020);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      connectionFactories0.marshal((Writer) mockPrintWriter0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      String string0 = null;
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = 'p';
      charArray0[2] = '\u001E';
      charArray0[3] = 'g';
      charArray0[4] = '&';
      charArray0[5] = 'D';
      charArray0[6] = '~';
      charArray0[7] = '[';
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[0] = null;
      xATopicConnectionFactoryArray0[1] = null;
      xATopicConnectionFactoryArray0[2] = null;
      xATopicConnectionFactoryArray0[3] = null;
      xATopicConnectionFactoryArray0[4] = null;
      xATopicConnectionFactoryArray0[5] = null;
      xATopicConnectionFactoryArray0[6] = null;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(1, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      connectionFactories0.getXATopicConnectionFactoryCount();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      Locale locale0 = Locale.GERMAN;
      try { 
        xMLReaderAdapter0.setLocale(locale0);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // setLocale not supported
         //
         verifyException("org.xml.sax.helpers.XMLReaderAdapter", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory2 = connectionFactories0.getXATopicConnectionFactory(0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory2;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setSystemId("D-Z|%{Uw?;!<u6!m~C");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl3 = new LocatorImpl();
      locatorImpl3.getLineNumber();
      locatorImpl1.getSystemId();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl1);
      locator2Impl2.getLineNumber();
      locatorImpl3.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl3);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("ha2htaje", "ha2htaje");
      xMLFilterImpl0.resolveEntity("", "");
      xMLFilterImpl0.startPrefixMapping("g%Fmx>aX?G3ko8)sez", "org.exolab.castor.indent");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionFactories0.getQueueConnectionFactoryCount();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte) (-6);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.util.DefaultObjectFactory");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IlMegyl0Tet datacoPd as child of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        connectionFactories0.getXAQueueConnectionFactory((int) (byte) (-6));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte)15;
      byteArray0[2] = (byte)15;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl2.skippedEntity("_+zM'_8X.u");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl5);
      xMLFilterImpl5.unparsedEntityDecl((String) null, (String) null, "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type", "OU/P");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl8.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl10.getParent();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl6);
      xMLFilterImpl11.notationDecl((String) null, (String) null, "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type");
      xMLFilterImpl1.skippedEntity("a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type");
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      xMLFilterImpl6.endDocument();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl12);
      xMLFilterImpl2.getContentHandler();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl6);
      xMLFilterImpl15.getContentHandler();
      xMLFilterImpl13.getContentHandler();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl5.getDTDHandler();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl6.skippedEntity("hx");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      xMLFilterImpl7.unparsedEntityDecl((String) null, (String) null, "+zM_Xu", "B]eohLc1n");
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl6.getParent();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl9.getDTDHandler();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.notationDecl("B]eohLc1n", "hx", (String) null);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      xMLFilterImpl12.unparsedEntityDecl("hRv/Y:GbyQVho3Co^", "B]eohLc1n", (String) null, "+zM_Xu");
      xMLFilterImpl12.skippedEntity("}g\"hsN");
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl2.getContentHandler();
      xMLFilterImpl14.getContentHandler();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl11);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.8321903306637974
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactory0.setName("the argument 'target' must not be null or empty.");
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.validate();
      connectionFactories0.validate();
      connectionFactories0.validate();
      connectionFactories0.getTopicConnectionFactory(0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a8]");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory((int) (byte)0);
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ihgI)Z+WCM=W.\"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ihgI)Z+WCM=W.\"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)111;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a8]");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(10, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(67, queueConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 67, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactory0.setName("");
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      assertEquals(1, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getColumnNumber();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locator2Impl0.setLineNumber((-1409));
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.setSystemId("7qp16Li/1Fi/bsD:");
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl1.getColumnNumber();
      locator2Impl2.setLineNumber(0);
      locator2Impl2.setColumnNumber(4);
      locator2Impl2.getSystemId();
      locator2Impl2.setColumnNumber(0);
      locatorImpl2.getLineNumber();
      locatorImpl1.getSystemId();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl1);
      locator2Impl2.getLineNumber();
      locatorImpl2.getPublicId();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.notationDecl((String) null, (String) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(940);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl5.getDTDHandler();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl6.skippedEntity("hx");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl8.unparsedEntityDecl((String) null, (String) null, "+zM'_X.u", "B]eohLc1n");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl6.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl10.getDTDHandler();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.notationDecl("B]eohLc1n", "hx", (String) null);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      xMLFilterImpl13.skippedEntity("}g\"hsN");
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl9);
      xMLFilterImpl13.endDocument();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl7);
      xMLFilterImpl2.getContentHandler();
      xMLFilterImpl16.getContentHandler();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl12);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte) (-24);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Illegal Text data found as child of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(18);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory((-497));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = null;
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      try { 
        connectionFactories0.addXATopicConnectionFactory(1691, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1691, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl3.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl2.skippedEntity("_+zM'_8X.u");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl5);
      xMLFilterImpl5.unparsedEntityDecl((String) null, (String) null, "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type", "OU/P");
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl9.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl6);
      xMLFilterImpl10.notationDecl((String) null, (String) null, "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type");
      xMLFilterImpl1.skippedEntity("a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type");
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl13.getContentHandler();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl15);
      xMLFilterImpl10.getContentHandler();
      xMLFilterImpl11.getContentHandler();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(24, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 24, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte)59;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXATopicConnectionFactoryCount();
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)121;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#W_V}qQcB");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#W_V}qQcB");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(2364);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(1774);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte) (-6);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.util.DefaultObjectFactory");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IlMegyl0Tet datacoPd as child of: ");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|]y+(W7`;-&vUV5}z");
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = 'p';
      charArray0[2] = '$';
      charArray0[3] = 'g';
      charArray0[4] = '&';
      charArray0[5] = 'D';
      charArray0[6] = '~';
      charArray0[7] = '[';
      stringReader0.read(charArray0);
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl3.setContentHandler(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl6.skippedEntity("");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl(xMLFilterImpl2);
      SAXParseException sAXParseException0 = new SAXParseException("", "", "xsi", 65536, 65536);
      xMLFilterImpl2.warning(sAXParseException0);
      xMLFilterImpl8.unparsedEntityDecl((String) null, (String) null, "_+zM'_8X.u", "");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl6.getParent();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl5);
      xMLFilterImpl1.notationDecl("-?xbjtl)LNgC&U>`q", "", "a NAMESPACE or an ATTRIBUTE can only be add as a sibling to a node of the same type");
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl13.skippedEntity("}g\"hN");
      xMLFilterImpl13.endDocument();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl14);
      xMLFilterImpl4.getContentHandler();
      xMLFilterImpl4.getContentHandler();
      try { 
        connectionFactories0.marshal((ContentHandler) xMLFilterImpl12);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }
}
