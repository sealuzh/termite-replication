/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 06:07:03 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.168908227356118
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtml}Q~fQbmp|f'2s@Dh',";
      stringArray0[1] = "}QQbmp|p'2s@%h',";
      stringArray0[2] = "-omitEncoding";
      stringArray0[3] = "}QQbmp|p'2s@%h',";
      stringArray0[4] = "}QQbmp|p'2s@%h',";
      stringArray0[5] = "}QQbmp|p'2s@%h',";
      stringArray0[6] = "-expandEmpty}Qbmp|p'2s@%h',";
      stringArray0[7] = "e-W)+j*'";
      stringArray0[8] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      outputFormat0.parseOptions(stringArray0, 2);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setIndent(false);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      outputFormat1.setIndent("-omitEncoding");
      assertEquals("-omitEncoding", outputFormat1.getIndent());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setExpandEmptyElements(true);
      String string0 = "HBYs!a";
      int int0 = 2147483645;
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("U$>ceLK$+[\"V");
      assertFalse(outputFormat0.isNewlines());
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "U$>ceLK$+[\"V";
      stringArray0[1] = "-newlines";
      stringArray0[2] = "iQ+X)FU,";
      stringArray0[3] = "U$>ceLK$+[\"V";
      stringArray0[4] = "U$>ceLK$+[\"V";
      stringArray0[5] = "-newlines";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isNewlines());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6082062719797112
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4_SZ", false);
      outputFormat0.setIndent(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("fWy4W6%I` ^S0_<'\"Vh");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-indent");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "-indent";
      outputFormat0.setLineSeparator("");
      stringArray0[2] = "fWy4W6%I` ^S0_<'\"Vh";
      stringArray0[3] = "-newlines";
      stringArray0[4] = "4_SZ";
      stringArray0[5] = "-indent";
      stringArray0[6] = "4_SZ";
      stringArray0[7] = "fWy4W6%I` ^S0_<'\"Vh";
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-408));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -408
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0781676595676055
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "}QQbmp|p'2Lvs9%h',";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "-encoding";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      stringArray0[6] = "}QQbmp|p'2Lvs9%h',";
      outputFormat0.parseOptions(stringArray0, 2);
      assertEquals("-trimText", outputFormat0.getEncoding());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.665664105514813
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "org.dom4j.io.OutputFormat";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "Hm8|D<<qn";
      stringArray0[4] = "pk+_DJvCs>h";
      stringArray0[5] = "&S:xusHRp:[-2XBVT?";
      stringArray0[6] = "he5)vky8(NGd l5 t";
      outputFormat1.parseOptions(stringArray0, 2);
      // Undeclared exception!
      try { 
        outputFormat1.parseOptions((String[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(false);
      String string0 = null;
      outputFormat0.setPadText(false);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      outputFormat0.setExpandEmptyElements(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('y');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (y)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2144088048571873
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[18];
      stringArray0[0] = "-axpandEmptyRpaH=Yt";
      stringArray0[1] = "-axpandEmptyRpaH=Yt";
      stringArray0[2] = "-axpandEmptyRpaH=Yt";
      stringArray0[3] = "-axpandEmptyRpaH=Yt";
      outputFormat0.parseOptions(stringArray0, 0);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.007426685212453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-trimTe'=xt";
      String[] stringArray1 = new String[2];
      stringArray1[0] = "-trimTe'=xt";
      stringArray1[1] = "oR~21f";
      int int0 = outputFormat0.parseOptions(stringArray1, 0);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      String[] stringArray2 = new String[8];
      stringArray2[0] = "-padText";
      stringArray2[1] = "oR~21f";
      stringArray2[2] = "oR~21f";
      stringArray2[3] = "-padText";
      stringArray2[4] = "oR~21f";
      stringArray2[5] = "-trimTe'=xt";
      stringArray2[6] = "-trimTe'=xt";
      stringArray2[7] = "oR~21f";
      int int1 = outputFormat1.parseOptions(stringArray2, 0);
      assertFalse(int1 == int0);
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isNewlines());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isXHTML());
      assertTrue(outputFormat3.isPadText());
      assertEquals("  ", outputFormat3.getIndent());
      assertEquals("\n", outputFormat3.getLineSeparator());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat3.getEncoding());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertTrue(outputFormat3.isNewlines());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3270571454102504
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "N.[nf!_$18TH|kg27";
      stringArray0[1] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      stringArray0[2] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      stringArray0[3] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      stringArray0[4] = "-lineSeparator";
      stringArray0[5] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      outputFormat0.parseOptions(stringArray0, 2);
      assertEquals("-expandEmptyK_EZGu_X4f6MV=@0]", outputFormat0.getLineSeparator());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.952564203246303
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize((-1));
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setOmitEncoding(false);
      outputFormat1.setOmitEncoding(true);
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.getLineSeparator();
      outputFormat0.isOmitEncoding();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat0.getLineSeparator();
      outputFormat0.isOmitEncoding();
      outputFormat1.isOmitEncoding();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\n";
      stringArray0[3] = "\n";
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-77847530));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -77847530
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3098849832717785
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = new OutputFormat("y#XFBLw.`}", true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-indentSize";
      stringArray0[2] = "y#XFBLw.`}";
      stringArray0[3] = "@scu)NBTdf5";
      stringArray0[4] = "@scu)NBTdf5";
      stringArray0[5] = "y#XFBLw.`}";
      stringArray0[6] = "y#XFBLw.`}";
      stringArray0[7] = "@scu)NBTdf5";
      stringArray0[8] = "@scu)NBTdf5";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.305663096808308
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, (String) null);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndentSize((-130));
      outputFormat0.getEncoding();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(false);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator("!#BJb7P4]q<");
      outputFormat2.setIndent(false);
      assertEquals("!#BJb7P4]q<", outputFormat2.getLineSeparator());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat3.setOmitEncoding(false);
      OutputFormat outputFormat4 = OutputFormat.createPrettyPrint();
      outputFormat4.setXHTML(true);
      outputFormat1.getLineSeparator();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = null;
      stringArray0[4] = "d@]s*T0H|uaN";
      stringArray0[5] = null;
      stringArray0[6] = null;
      int int0 = outputFormat4.parseOptions(stringArray0, 1196);
      assertEquals(1196, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.162873512995223
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = true;
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(true);
      outputFormat0.setNewLineAfterNTags((-1834));
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.getLineSeparator();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndent(true);
      outputFormat1.getLineSeparator();
      outputFormat0.isExpandEmptyElements();
      outputFormat1.setLineSeparator("");
      OutputFormat.createCompactFormat();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getLineSeparator();
      outputFormat1.isExpandEmptyElements();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setNewLineAfterDeclaration(false);
      outputFormat2.setExpandEmptyElements(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, 299);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1816633428102712
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = "-denti^me";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-denti^me";
      stringArray0[2] = "zeJs;<";
      outputFormat0.parseOptions(stringArray0, 0);
      int int1 = 574;
      outputFormat0.getNewLineAfterNTags();
      int int2 = (-2013);
      outputFormat0.setNewLineAfterNTags((-2013));
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1861));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1861
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.650442143368543
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setAttributeQuoteCharacter('\'');
      assertEquals('\'', outputFormat0.getAttributeQuoteCharacter());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.105466563402199
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isNewlines();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "!#BJb7P4]q<!2@j )";
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("");
      OutputFormat outputFormat1 = new OutputFormat(",AB$({g:0{Vc^!");
      outputFormat1.setIndentSize(0);
      outputFormat1.isNewlines();
      outputFormat0.getLineSeparator();
      outputFormat1.setIndent("-expandEmpty");
      assertEquals("-expandEmpty", outputFormat1.getIndent());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3514341962233967
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4`SZ", true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("qCRN6JGR");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      outputFormat0.setIndent("Invalid attribute quote character (");
      outputFormat0.setIndent("4`SZ");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("+q 4G$");
      outputFormat0.setIndent("h>+kX&MV9T3N");
      outputFormat0.setIndent(" ");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("h>+kX&MV9T3N");
      assertEquals("h>+kX&MV9T3N", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals("\n", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1603159682381894
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RpaH=Y[";
      stringArray0[1] = "";
      OutputFormat outputFormat1 = new OutputFormat("", false, "L#Sr*nj");
      outputFormat1.setXHTML(true);
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat2.setLineSeparator("L#Sr*nj");
      outputFormat0.setIndent("");
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setNewLineAfterNTags(630);
      assertEquals(630, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.isNewlines();
      outputFormat1.isXHTML();
      boolean boolean0 = outputFormat3.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1552340359689492
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ">ykdugL";
      stringArray0[1] = ">ykdugL";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[19];
      stringArray1[0] = "^I}Tol[>";
      stringArray1[1] = "-expandEmptyK_EZGs_X4f6MV=@0]";
      outputFormat0.parseOptions(stringArray0, 20);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.parseOptions(stringArray0, 4880);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.105614371145167
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-trimText";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isTrimText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
      assertTrue(outputFormat2.isNewlines());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isPadText());
      assertFalse(outputFormat2.isXHTML());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isTrimText());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptyK_EZGu_X4f6MV=@0]", false);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      outputFormat0.parseOptions(stringArray0, 689);
      int int0 = 1;
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-907));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -907
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.2173536745202456
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(1186);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "T4TY5";
      stringArray0[1] = "";
      stringArray0[2] = "jd";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.setIndent("JPr >kM");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(39);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setIndent("-xhtml");
      outputFormat0.setXHTML(false);
      outputFormat1.setPadText(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent(false);
      assertEquals(1186, outputFormat0.getNewLineAfterNTags());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.4470616671435974
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("78:loteeo-oI!k", false, "78:loteeo-oI!k");
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "78:loteeo-oI!k";
      outputFormat0.setIndent("ZR_y~(R*\";7pyP_");
      stringArray0[1] = "78:loteeo-oI!k";
      stringArray0[2] = "78:loteeo-oI!k";
      stringArray0[3] = "78:loteeo-oI!k";
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.setIndentSize(0);
      outputFormat1.setPadText(false);
      outputFormat1.isPadText();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setTrimText(false);
      outputFormat1.setIndent("Td_O7)X42n-8vf[");
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(false);
      outputFormat0.parseOptions(stringArray0, 1002);
      outputFormat1.setXHTML(false);
      outputFormat0.setTrimText(false);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.7403440760878386
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-xhtml-xhtml@scu)NBBdf5";
      stringArray0[1] = "-indent";
      stringArray0[2] = "IN3b";
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat0.getIndent());
      assertTrue(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isPadText());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndent("-expandEmpty");
      boolean boolean0 = outputFormat1.isOmitEncoding();
      assertFalse(outputFormat1.isNewlines());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertEquals('\"', outputFormat1.getAttributeQuoteCharacter());
      assertEquals("-expandEmpty", outputFormat1.getIndent());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertTrue(outputFormat1.isTrimText());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(boolean0);
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertFalse(outputFormat1.isPadText());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.0774620515710067
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "T45";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.setIndent("JPr >kM");
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndentSize(39);
      outputFormat0.setTrimText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isXHTML();
      outputFormat0.setIndent("-xhtml");
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setPadText(true);
      OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(false);
      assertFalse(outputFormat0.isSuppressDeclaration());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.3048808282294293
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setXHTML(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.getEncoding();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize(34);
      outputFormat1.setPadText(true);
      outputFormat0.setIndent(false);
      outputFormat2.getNewLineAfterNTags();
      outputFormat1.isOmitEncoding();
      outputFormat1.getIndent();
      outputFormat1.getIndent();
      outputFormat0.getIndent();
      assertFalse(outputFormat0.isPadText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.499209142756132
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4`cSZ", true);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("qCR[6JGR");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent("h>+kX&MV9T3N");
      outputFormat0.setIndent("fWy4W6%I` ^S0_<'\"Vh");
      outputFormat0.setIndent("-indentSize");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("h>+kX&MV9T3N");
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-xpbndEmpt4_SZ");
      outputFormat0.setIndent(")j,4}Bh0|'vmw'2$");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("-xhtmlzeJs;<");
      outputFormat0.setIndent("-padText");
      outputFormat0.setIndent("-xhtmlzeJs;<");
      outputFormat0.setIndent("qCR[6JGR");
      outputFormat0.setIndent("-encoding");
      assertEquals("-encoding", outputFormat0.getIndent());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3932303833810415
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setEncoding("");
      outputFormat1.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setPadText(false);
      outputFormat1.setTrimText(false);
      OutputFormat outputFormat2 = new OutputFormat("", false);
      outputFormat1.setOmitEncoding(true);
      outputFormat0.getEncoding();
      String string0 = "$Oqh^yjs-A83";
      outputFormat1.setIndent("$Oqh^yjs-A83");
      outputFormat0.setXHTML(false);
      outputFormat0.getIndent();
      outputFormat0.isTrimText();
      outputFormat1.setOmitEncoding(false);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat2.setLineSeparator("  ");
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter('h');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (h)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-rimTexH");
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setAttributeQuoteCharacter('\"');
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      
      OutputFormat outputFormat1 = new OutputFormat("-rimTexH");
      assertFalse(outputFormat1.isOmitEncoding());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isXHTML());
      assertFalse(outputFormat1.isExpandEmptyElements());
      assertEquals("-rimTexH", outputFormat1.getIndent());
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
      assertEquals("\n", outputFormat1.getLineSeparator());
      assertEquals("UTF-8", outputFormat1.getEncoding());
      assertFalse(outputFormat1.isSuppressDeclaration());
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      assertFalse(outputFormat1.isTrimText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.966813170718882
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(true);
      String[] stringArray0 = new String[8];
      outputFormat0.setIndent(false);
      stringArray0[0] = "";
      stringArray0[1] = "ruKMi`FXeEr@~&d";
      outputFormat0.setIndent("\n");
      stringArray0[2] = "#";
      outputFormat0.setNewlines(true);
      stringArray0[3] = "";
      stringArray0[4] = "";
      outputFormat0.parseOptions(stringArray0, 404);
      stringArray0[5] = "y^:*-pRDa{J$~9h";
      outputFormat0.getIndent();
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(34);
      outputFormat0.setPadText(true);
      outputFormat0.isPadText();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-xhtml78:loteeo-oI!k");
      outputFormat1.isPadText();
      outputFormat0.parseOptions(stringArray0, 34);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('x');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (x)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.0137769906887404
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("78:loteeo-oI!k", true, "78:loteeo-oI!k");
      outputFormat0.setTrimText(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(0);
      outputFormat1.setPadText(true);
      outputFormat1.isPadText();
      outputFormat0.getIndent();
      outputFormat0.setTrimText(false);
      outputFormat1.setIndent("Td_O7)X42n-8vf[");
      OutputFormat.createPrettyPrint();
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat1.setXHTML(false);
      outputFormat0.setTrimText(false);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.7239853072104983
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String string0 = ">ykdugL";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-kdentize";
      stringArray0[1] = "zeJs;<";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 60);
      String[] stringArray1 = new String[8];
      stringArray1[0] = "-kdentize";
      stringArray1[1] = "zeJs;<";
      stringArray1[2] = "zeJs;<";
      stringArray1[3] = "zeJs;<";
      stringArray1[4] = ">ykdugL";
      stringArray1[5] = "zeJs;<";
      stringArray1[6] = "zeJs;<";
      stringArray1[7] = "zeJs;<";
      outputFormat0.parseOptions(stringArray1, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1498));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1498
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.878160607823009
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[8];
      stringArray0[1] = "ruKMi`FXeEr@~&d";
      outputFormat0.parseOptions(stringArray0, 34);
      stringArray0[2] = "#";
      stringArray0[2] = "";
      stringArray0[4] = "";
      stringArray0[5] = "y^:*-pRDa{J$~9h";
      outputFormat0.getIndent();
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(34);
      outputFormat0.setPadText(false);
      outputFormat0.isPadText();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-xhtml78:loteeo-oI!k");
      outputFormat0.isPadText();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('x');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (x)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.011015831001672
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("78:loteeo-oI!k", false, "78:loteeo-oI!k");
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "78:loteeo-oI!k";
      outputFormat0.setIndent("ZR_y~(R*\";7pyP_");
      stringArray0[1] = "78:loteeo-oI!k";
      stringArray0[2] = "78:loteeo-oI!k";
      stringArray0[3] = "78:loteeo-oI!k";
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndentSize(0);
      outputFormat1.isPadText();
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setTrimText(false);
      outputFormat1.setIndent("Td_O7)X42n-8vf[");
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setXHTML(true);
      outputFormat0.parseOptions(stringArray0, 1002);
      outputFormat0.setTrimText(false);
      assertEquals("", outputFormat0.getIndent());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4351190240817195
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-kdenti^e");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("RacL>.6OO");
      outputFormat0.setIndent(" ");
      outputFormat0.setIndent("-kdenti^e");
      outputFormat0.setIndent("RacL>.6OO");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent(" ");
      outputFormat0.setIndent(" ");
      outputFormat0.setIndent("N.[nf!_$18T");
      outputFormat0.setIndent("qCR[6JGR");
      outputFormat0.setIndent("5A #g]]\"$?nBu");
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent("-kdenti^e");
      assertEquals("-kdenti^e", outputFormat0.getIndent());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3042644954097065
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setSuppressDeclaration(true);
      outputFormat1.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setEncoding("yt2E+s:cqLLO?x");
      outputFormat0.getIndent();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent("yt2E+s:cqLLO?x");
      outputFormat1.setPadText(false);
      outputFormat1.setNewLineAfterNTags((-666));
      outputFormat0.isXHTML();
      outputFormat0.isSuppressDeclaration();
      OutputFormat outputFormat2 = new OutputFormat((String) null);
      String[] stringArray0 = new String[18];
      outputFormat2.setOmitEncoding(false);
      outputFormat1.setIndent("yt2E+s:cqLLO?x");
      OutputFormat.createCompactFormat();
      stringArray0[0] = "yt2E+s:cqLLO?x";
      // Undeclared exception!
      try { 
        outputFormat2.parseOptions(stringArray0, (-666));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -666
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("IiF.l%", false);
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[7];
      stringArray0[1] = "-xhtml>ykdugL";
      stringArray0[2] = "IiF.l%";
      stringArray0[3] = "-expandEmpty";
      stringArray0[4] = "_<=%aai6]2Mt\"al02T";
      stringArray0[5] = null;
      stringArray0[6] = "q`Nr_`ZjA+$";
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0248847886694654
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setNewLineAfterNTags((-166));
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(false);
      outputFormat0.setNewLineAfterNTags((-666));
      outputFormat0.isXHTML();
      outputFormat0.isSuppressDeclaration();
      String[] stringArray0 = new String[1];
      String[] stringArray1 = new String[0];
      outputFormat0.setIndent(stringArray0[0]);
      outputFormat0.parseOptions(stringArray1, 488);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getLineSeparator();
      outputFormat0.setIndentSize(488);
      assertFalse(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.662650173853336
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-axpandEmptyRpaH=Yt";
      stringArray0[1] = "-axpandEmptyRpaH=Yt";
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setEncoding((String) null);
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isOmitEncoding());
      assertTrue(outputFormat2.isPadText());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertTrue(outputFormat2.isNewlines());
      assertFalse(outputFormat2.isXHTML());
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('/');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (/)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-padText", true, "-lineSeparator");
      outputFormat0.setEncoding("3%|Mb=;LIb*.?:");
      String[] stringArray0 = new String[3];
      stringArray0[2] = "-xhtml+O8J}w8#{dH";
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.isNewlines();
      outputFormat0.setLineSeparator("-newlines");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "!#BJb7P4]q<!2@j )";
      outputFormat0.setNewLineAfterNTags((-1529));
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1465723465));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1465723465
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8418693803360036
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat0 = new OutputFormat("L#Sr*nj");
      outputFormat0.setIndent("RpaH=Y[");
      String string0 = OutputFormat.STANDARD_INDENT;
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      
      outputFormat1.setIndentSize((-4097));
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.isExpandEmptyElements();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat3.isOmitEncoding());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      
      OutputFormat outputFormat1 = new OutputFormat();
      assertFalse(outputFormat1.isPadText());
      assertFalse(outputFormat1.isNewlines());
      assertFalse(outputFormat1.isTrimText());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "/GgBs";
      stringArray0[2] = "!#BJb7";
      stringArray0[3] = "!#BJb7";
      boolean boolean0 = outputFormat2.isNewlines();
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertFalse(outputFormat2.isXHTML());
      assertEquals("  ", outputFormat2.getIndent());
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertFalse(outputFormat2.isOmitEncoding());
      assertTrue(outputFormat2.isPadText());
      assertTrue(boolean0);
      assertFalse(outputFormat2.isSuppressDeclaration());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2187488747250645
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "RpaH=Y[";
      stringArray0[1] = "[Bq?9-^a:I-+t-";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isPadText());
      assertEquals("  ", outputFormat1.getIndent());
      
      OutputFormat outputFormat2 = new OutputFormat("oR~21f", true, "=&SazIg!%AE$XIV");
      assertEquals(0, outputFormat2.getNewLineAfterNTags());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertEquals("=&SazIg!%AE$XIV", outputFormat2.getEncoding());
      assertTrue(outputFormat2.isNewlines());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertFalse(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isPadText());
      assertEquals("oR~21f", outputFormat2.getIndent());
      
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      outputFormat0.parseOptions(stringArray0, 17);
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals(0, int0);
      
      String string0 = outputFormat3.getLineSeparator();
      assertFalse(outputFormat3.isExpandEmptyElements());
      assertTrue(outputFormat3.isTrimText());
      assertFalse(outputFormat3.isXHTML());
      assertFalse(outputFormat3.isSuppressDeclaration());
      assertTrue(outputFormat3.isNewLineAfterDeclaration());
      assertFalse(outputFormat3.isOmitEncoding());
      assertEquals('\"', outputFormat3.getAttributeQuoteCharacter());
      assertFalse(outputFormat3.isNewlines());
      assertFalse(outputFormat3.isPadText());
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewlines(false);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "K_EZGu_X4f6MV=@0]";
      stringArray0[1] = "K_EZGu_X4f6MV=@0]";
      stringArray0[2] = "Xp0T!dJ].1";
      OutputFormat outputFormat1 = new OutputFormat("K_EZGu_X4f6MV=@0]", false, "");
      String[] stringArray1 = new String[7];
      stringArray1[0] = "-/7:Z;-OnqD.O3IT";
      stringArray1[1] = "K_EZGu_X4f6MV=@0]";
      stringArray1[2] = "-/7:Z;-OnqD.O3IT";
      stringArray1[3] = "";
      stringArray1[4] = "  ";
      stringArray1[5] = "wu<9f>86\"9hVt3Ul";
      stringArray1[6] = "K_EZGu_X4f6MV=@0]";
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7313422137828889
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("4`cSZ", true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("qCR[6JGR");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("g7PP>2>z+HoB}yh");
      outputFormat0.setIndent("h>+kX&MV9T3N");
      outputFormat0.setIndent("fWy4W6%I` ^S0_<'\"Vh");
      outputFormat0.setIndent("g7PP>2>z+HoB}yh");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("h>+kX&MV9T3N");
      outputFormat0.setIndent("-lineSeparator");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-xpbndEmpt4_SZ");
      outputFormat0.setIndent(")j,4}Bh0|'vmw'2$");
      outputFormat0.setIndent("-padText");
      outputFormat0.setIndent("-xhtmlzeJs;<");
      outputFormat0.setIndent("-padText");
      outputFormat0.setIndent("-xhtmlzeJs;<");
      outputFormat0.setIndent("qCR[6JGR");
      outputFormat0.setIndentSize((-3531));
      outputFormat0.setIndent("-encoding");
      outputFormat0.setIndent("-expandEmpty-expandEmrty^I}Tol[>");
      assertEquals("-expandEmpty-expandEmrty^I}Tol[>", outputFormat0.getIndent());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      boolean boolean0 = outputFormat0.isTrimText();
      assertFalse(boolean0);
      assertFalse(outputFormat0.isPadText());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isNewlines());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.145277367387215
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "-expandEmptyK_EZGu_X4f6MV=@0]";
      outputFormat0.parseOptions(stringArray0, 1566);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 3626);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1911230802));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1911230802
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.787359462961205
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(false);
      String[] stringArray0 = new String[1];
      outputFormat0.setEncoding("4oEwXG%p-V=DwX");
      outputFormat0.setEncoding("@");
      outputFormat0.setPadText(true);
      stringArray0[0] = "@";
      outputFormat0.setEncoding((String) null);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndent("@");
      outputFormat0.getEncoding();
      outputFormat0.setIndent("");
      assertEquals("@", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[2] = "osh";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.6997608016132726
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = ",ykdu\"L";
      stringArray0[1] = ",ykdu\"L";
      int int0 = 0;
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1668761521));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1668761521
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0405960141840258
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[2] = "osh";
      OutputFormat outputFormat0 = new OutputFormat("osh");
      outputFormat0.setIndent("%i8s2Zi4O4[oYmV>");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("^:=QND/pUF*X");
      outputFormat0.setIndent("osh");
      outputFormat0.setIndent("wb-z&PZW");
      outputFormat0.setIndent("%i8s2Zi4O4[oYmV>");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("x2m{[']Ng");
      outputFormat0.setIndent("osh");
      outputFormat0.setIndent("-indentSize");
      assertEquals("-indentSize", outputFormat0.getIndent());
  }
}
