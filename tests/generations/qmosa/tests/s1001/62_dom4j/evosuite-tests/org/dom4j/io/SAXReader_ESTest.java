/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 06:21:59 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMDocument;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.PruningElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.DefaultDocument;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jaxen.SimpleVariableContext;
import org.jaxen.VariableContext;
import org.junit.runner.RunWith;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.SAXNotSupportedException;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3087432950398514
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.unparsedEntityDecl("{WG%,", "{WG%,", "{WG%,", "{WG%,");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("{WG%,");
      sAXReader0.setEntityResolver(sAXReader_SAXEntityResolver0);
      InputSource inputSource0 = new InputSource("r8/z.:qt:CC");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/r8/z.:qt:CC (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/r8/z.:qt:CC (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.391772851204174
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream1.skip(0L);
      sAXReader0.setEncoding("L+x7z;c9");
      byteArrayInputStream1.reset();
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"L+X7Z;C9\". Nested exception: Invalid encoding name \"L+X7Z;C9\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.192118194633298
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.getParent();
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "8,O|7MgZA[~8D}RSZo2", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl2.characters(charArray0, 2543, 1);
      xMLFilterImpl0.endElement((String) null, (String) null, (String) null);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl3);
      xMLFilterImpl0.endElement("NqEn/IN'PD", "#<c=>i{s4", "NqEn/IN'PD");
      xMLFilterImpl2.setDTDHandler(xMLFilterImpl0);
      xMLFilterImpl0.resolveEntity("oho<96rHioO", "8,O|7MgZA[~8D}RSZo2");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl2.resolveEntity((String) null, "org.dom4j.io.SAXReader");
      xMLFilterImpl0.setParent(xMLFilterImpl3);
      StringReader stringReader0 = new StringReader("//tmp/file:/0A");
      StringReader stringReader1 = new StringReader("//tmp/('C{<L)e0<]OA0('C{<L)e0<]OA");
      StringReader stringReader2 = new StringReader("");
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader2, "org.dom4j.io.SAXReader");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl1.getParent();
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "8,O|7MgZA[~8D}RSZo2", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.characters(charArray0, 2543, 1);
      xMLFilterImpl0.endElement((String) null, (String) null, (String) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl2);
      xMLFilterImpl0.endElement("NqEn/IN'PD", "#<c=>i{s4", "NqEn/IN'PD");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#<c=>i{s4");
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl1);
      xMLFilterImpl1.resolveEntity("org.dom4j.jaxb.JAXBReader$PruningElementHandler", "#<c=>i{s4");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.resolveEntity("//tmp/('C{<L)e0<]OA0('C{<L)e0<]OA", "=,OV51vfTY{");
      xMLFilterImpl0.setParent(xMLFilterImpl2);
      xMLFilterImpl3.ignorableWhitespace(charArray0, 130, 1);
      // Undeclared exception!
      try { 
        sAXReader0.setProperty("aN=wfa$YBaz{'&kWC9", (Object) null);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3863046904967216
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[1];
          FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$RDNUNMG.S{l");
          byteArray0[0] = (byte)0;
          NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "EwX#IdJC!so0");
          SAXReader sAXReader0 = new SAXReader(true);
          sAXReader0.setEncoding("EwX#IdJC!so0");
          URL uRL0 = MockURL.getFileExample();
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2464595940144036
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId("8CX>I9=V:Knw");
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      xMLReaderAdapter0.startPrefixMapping("X4L!]?d$", "//tmp/c0s1http:/xml.org/sax/features/use-locator2");
      char[] charArray0 = new char[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "L`0h4s},E1");
      charArray0[0] = 't';
      parserAdapter0.characters(charArray0, 982, (-3818));
      parserAdapter0.ignorableWhitespace(charArray0, 982, 1168);
      parserAdapter0.setDocumentLocator(locator2Impl0);
      sAXReader0.setEncoding("T_${vcnD_;z{OzkHT");
      xMLReaderAdapter0.processingInstruction("R>n}l[4pc!)<D8O6", "f");
      File file0 = MockFile.createTempFile("T_${vcnD_;z{OzkHT", "X4L!]?d$", (File) null);
      sAXReader0.createDefaultEntityResolver("/B(v");
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"T_${VCND_;Z{OZKHT\". Nested exception: Invalid encoding name \"T_${VCND_;Z{OZKHT\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3917728512041743
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = "\" culd not be added to the branch \"";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" culd not be added to the branch \"");
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" culd not be added to the branch \"");
      sAXReader0.setEncoding("//tmp/http:/xml.org/sax/features/namespaces0e?z~&Yy^K'<Q?IFNr]n");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" culd not be added to the branch \"");
      StringReader stringReader0 = new StringReader("\" culd not be added to the branch \"");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.418521658670515
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1579), (-1579));
      sAXReader0.setEncoding("X8E8Xthju)E");
      byteArrayInputStream0.markSupported();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.reset();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXReader0.getErrorHandler();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      try { 
        sAXReader0.read((InputStream) sequenceInputStream0, "whO9`oz4o~J|#");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"X8E8XTHJU)E\". Nested exception: Invalid encoding name \"X8E8XTHJU)E\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.264864441992683
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      char[] charArray0 = new char[2];
      charArray0[0] = '>';
      charArray0[1] = '~';
      int int0 = 47;
      xMLFilterImpl0.characters(charArray0, 47, 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      sAXReader0.isStripWhitespaceText();
      sAXReader0.getErrorHandler();
      sAXReader0.isIncludeExternalDTDDeclarations();
      String string0 = " [CDATA: \"";
      StringReader stringReader0 = new StringReader(" [CDATA: \"");
      sAXReader0.createDefaultEntityResolver(" [CDATA: \"");
      xMLFilterImpl0.characters(charArray0, '>', 47);
      // Undeclared exception!
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2975883560528287
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId("8CX>I9=V:Knw");
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      xMLReaderAdapter0.startPrefixMapping("X4L!]?d$", "//tmp/c0s1http:/xml.org/sax/features/use-locator2");
      char[] charArray0 = new char[1];
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "L`0h4s},E1");
      charArray0[0] = 't';
      parserAdapter0.characters(charArray0, 982, (-3818));
      parserAdapter0.ignorableWhitespace(charArray0, 982, 1168);
      parserAdapter0.setDocumentLocator(locator2Impl0);
      sAXReader0.setEncoding("T_${vcnD_;z{OzkHT");
      String string0 = "R>n}l[4pc!)<D8O6";
      xMLReaderAdapter0.processingInstruction("R>n}l[4pc!)<D8O6", "f");
      try { 
        sAXReader0.read("2]J,dy");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: 2]J,dy Nested exception: no protocol: 2]J,dy
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      xMLFilterImpl1.notationDecl(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      xMLFilterImpl1.endElement(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      String string0 = "";
      xMLFilterImpl0.endElement("", "", "");
      char[] charArray0 = new char[8];
      charArray0[0] = 'y';
      xMLFilterImpl1.endDocument();
      charArray0[1] = '9';
      charArray0[2] = '6';
      charArray0[3] = ']';
      charArray0[4] = 'F';
      charArray0[5] = '@';
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      charArray0[6] = '6';
      charArray0[7] = 't';
      xMLFilterImpl0.ignorableWhitespace(charArray0, 't', 't');
      String string1 = "zF^_n)v(~[u<s";
      // Undeclared exception!
      try { 
        sAXReader0.setFeature("//tmp/`);Y|A)wL9|#ch%1`);Y|A)wL9|#ch%", true);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3336670288259223
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      xMLFilterImpl1.notationDecl(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      xMLFilterImpl1.endElement(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      xMLFilterImpl0.endElement(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      char[] charArray0 = new char[8];
      charArray0[0] = 'y';
      xMLFilterImpl1.endDocument();
      charArray0[1] = '9';
      charArray0[2] = '6';
      charArray0[3] = ']';
      charArray0[4] = 'F';
      xMLFilterImpl1.getErrorHandler();
      charArray0[5] = '@';
      charArray0[6] = 'F';
      sAXReader0.getXMLReader();
      xMLFilterImpl0.ignorableWhitespace(charArray0, '\u0000', '\u0000');
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultDocument defaultDocument0 = new DefaultDocument();
      sAXReader0.createContentHandler(xMLFilterImpl0);
      try { 
        sAXReader0.read(" [MrocessingnstructiBn: &");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1579), (-1579));
      int int0 = 678;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 678, 3747);
      sAXReader0.setFeature("http://xml.org/sax/features/namespace-prefixes", false);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-16);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      BeanElement beanElement0 = new BeanElement((QName) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createAttribute((Element) beanElement0, "The node \"", "Qm_5#HH!q'\"xyi.mX");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      try { 
        sAXReader0.setFeature("http://xml.org/sax/features/use-locator2", true);
        fail("Expecting exception: SAXNotSupportedException");
      
      } catch(SAXNotSupportedException e) {
         //
         // Feature 'http://xml.org/sax/features/use-locator2' is read only.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.2990696902149015
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m\"5AuoTuGF:dr$Hdk");
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.endElement(">l>1WM(VT_sWfQ]Rml", "org.jaxen.dom4j.Dom4jXPath", "org.jaxen.dom4j.Dom4jXPath");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)116;
      byteArray0[3] = (byte)58;
      byteArray0[4] = (byte) (-97);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      byteArray0[5] = (byte) (-79);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)58, 3144);
      // Undeclared exception!
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5350813079469847
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/('C{<L)e0<5] OA1&");
      sAXReader_SAXEntityResolver0.resolveEntity("B+8`pItCKcpY\"F\"|:", "ID");
      sAXReader_SAXEntityResolver0.resolveEntity("ID", "::");
      sAXReader_SAXEntityResolver0.resolveEntity("apos", "B+8`pItCKcpY\"F\"|:");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      String string0 = "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA";
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader1 = new SAXReader(parserAdapter0);
      StringReader stringReader0 = null;
      try {
        stringReader0 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2487663399462696
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "2,#' N0\"9]9H/7wLu";
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("2,#' N0\"9]9H/7wLu");
      sAXReader_SAXEntityResolver0.resolveEntity("2,#' N0\"9]9H/7wLu", "E%ZpkM");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("//tmp/Invalid path of length: 07IT{o(G9#c", "");
      inputSource0.getCharacterStream();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputSource inputSource0 = null;
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      documentFactory0.createDocType("u52Ju 4dz", "u52Ju 4dz", "u52Ju 4dz");
      boolean boolean0 = true;
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.notationDecl("org.dom4j.io.JAXPHelper", "org.dom4j.io.JAXPHelper", "W;5q\"[a(%yktXt'7~x");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.endElement("org.dom4j.io.JAXPHelper", "org.dom4j.io.JAXPHelper", "kZ%oPDY");
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl0);
      xMLFilterImpl0.endElement("NXaTRB@H", "E 6`AsrHWIm}+7<[rJ", "NXaTRB@H");
      xMLFilterImpl1.endDocument();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.startPrefixMapping("org.dom4j.io.JAXPHelper", (String) null);
      SAXParseException sAXParseException0 = new SAXParseException("Vg|r*", "T1xe", "wtvy;4nB/", 12, 8155);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.366660627207849
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.368430198903718
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "l<y6Q,]yRtag`v)B.$i";
      String string1 = "%yP9*,ve1N29!2^?";
      File file0 = MockFile.createTempFile("%yP9*,ve1N29!2^?", "%yP9*,ve1N29!2^?");
      String string2 = "HpBVqZiiE]0";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("HpBVqZiiE]0");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "//tmp/Couldn't create SAX reader0Couldn't create SAX reader");
      MockFile mockFile0 = new MockFile("HpBVqZiiE]0");
      mockFile0.mkdirs();
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile1 = new MockFile("%yP9*,ve1N29!2^?", "HpBVqZiiE]0");
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      mockFile1.setReadable(true);
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Simulated IOException Nested exception: Simulated IOException
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3649871560466242
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[1];
          byteArray0[0] = (byte)0;
          FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
          FileSystemHandling.createFolder((EvoSuiteFile) null);
          DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
          FileSystemHandling.shouldAllThrowIOExceptions();
          FileSystemHandling.createFolder((EvoSuiteFile) null);
          FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
          FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "T9V$~ZAj");
          SAXReader sAXReader0 = new SAXReader();
          FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
          URI uRI0 = MockURI.aFTPURI;
          XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
          sAXReader0.setEntityResolver(xMLFilterImpl0);
          URI uRI1 = MockURI.parseServerAuthority(uRI0);
          URL uRL0 = MockURI.toURL(uRI1);
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
          XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
          XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
          xMLFilterImpl2.notationDecl("NqEn/IN'PD", "[*3", "NqEn/IN'PD");
          char[] charArray0 = new char[5];
          xMLFilterImpl0.characters(charArray0, 1, 47);
          xMLFilterImpl1.characters(charArray0, 1443, (-455));
          SAXReader sAXReader0 = new SAXReader((XMLReader) null);
          xMLFilterImpl2.endDocument();
          xMLFilterImpl2.resolveEntity("NqEn/IN'PD", "#<c=>i{s4");
          XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
          Locator2Impl locator2Impl0 = new Locator2Impl();
          Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
          LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
          URI uRI0 = MockURI.aFTPURI;
          URL uRL0 = MockURI.toURL(uRI0);
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      File file0 = MockFile.createTempFile("('C{<L)e0<5] OA", "('C{<L)e0<5] OA");
      MockFile.createTempFile("('C{<L)e0<5] OA", "('C{<L)e0<5] OA");
      String string0 = "_d0DUS";
      MockFile mockFile0 = new MockFile(file0, "_d0DUS");
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(file0, "('C{<L)e0<5] OA");
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-G");
      MockFile mockFile0 = new MockFile("03r,[;@}]3x;R:Ll", "[[}qKzxzo$tYJvzl");
      mockFile0.setExecutable(true);
      MockFile mockFile1 = new MockFile(mockFile0, "//tmp/Invalid path of length: 07IT{o(G9#c");
      MockFile mockFile2 = new MockFile("//tmp/Invalid path of length: 07IT{o(G9#c", "[[}qKzxzo$tYJvzl");
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("/>]");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        sAXReader0.read((Reader) stringReader0, "/>]");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document />] : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.3367045838905973
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.markSupported();
      byteArrayInputStream1.reset();
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      InputSource inputSource0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      try { 
        sAXReader0.read((InputStream) pipedInputStream0, "9+?");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.characters(charArray0, 38, (-2238));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl3.characters(charArray0, (-2238), 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl0.resolveEntity("", "ww9?dL&4|d;T6j4Z");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl3.resolveEntity("c2Z:kI=l", "");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl6.ignorableWhitespace(charArray0, 23, (-457));
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5518037159737408
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("_}$9di\"%Hm.c4-Bd(T");
      sAXReader_SAXEntityResolver0.resolveEntity("ls-PhZJb'O", "//tmp/(}'C{<L)e0<5] OA0(}'C{<L)e0<5] OA");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("7gy'.bdIn%sd|A", "<");
      sAXReader_SAXEntityResolver0.resolveEntity("q=5&6s3cH|G", "q=5&6s3cH|G");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("//tmp/org.dom4j.QName0l<y6Q,]yRtag`v)B.$i");
      sAXReader_SAXEntityResolver1.resolveEntity("//tmp/org.dom4j.QName0l<y6Q,]yRtag`v)B.$i", ")VH`/-Zx7<TC7/t~5D");
      SAXReader sAXReader1 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver2 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver2.resolveEntity(")VH`/-Zx7<TC7/t~5D", "_}$9di\"%Hm.c4-Bd(T");
      InputSource inputSource1 = sAXReader_SAXEntityResolver1.resolveEntity("Ck!Qz~", "//tmp/%yP9*,ve1N29!2^?0%yP9*,ve1N29!2^?");
      assertFalse(inputSource1.equals((Object)inputSource0));
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2022886064254612
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("2,#' N0\"9]9H/7wLu");
      sAXReader_SAXEntityResolver0.resolveEntity("_}$9di\"%Hm.c4-Bd(T", ")VH`/-Zx7<TC7/t~5D");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("Ck!Qz~", "Ck!Qz~");
      sAXReader_SAXEntityResolver0.resolveEntity(")VH`/-Zx7<TC7/t~5D", (String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("4.,", "");
      SAXReader sAXReader0 = new SAXReader();
      InputSource inputSource1 = sAXReader_SAXEntityResolver0.resolveEntity("2,#' N0\"9]9H/7wLu", "e[9V&&Hs[P8~(LI");
      assertFalse(inputSource1.equals((Object)inputSource0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.addHandler(" [Entity: &", dispatchHandler0);
      DOMDocument dOMDocument0 = new DOMDocument();
      assertNull(dOMDocument0.getNodeValue());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "set(int,Object) unsupported";
      try { 
        sAXReader0.read("set(int,Object) unsupported");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/set(int,Object) unsupported (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/set(int,Object) unsupported (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.2792257981339743
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("2,#' N0\"9]9_/7wLu");
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("5Y hu*fQC,EAqT,I");
      InputSource inputSource0 = new InputSource(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      defaultDocumentFactory0.createElement("7\"_])FaCL|>q&NWm~hP", "wKx8");
      sAXReader0.getEncoding();
      sAXReader0.setStripWhitespaceText(true);
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      defaultDocumentFactory0.createNamespace("iU)pK_r,KO(W22^$", "");
      dispatchHandler0.removeHandler("N<Qc&W)idQ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wKx8");
      dispatchHandler0.addHandler("iU)pK_r,KO(W22^$", (ElementHandler) null);
      sAXReader0.addHandler("", dispatchHandler0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      sAXReader0.setIncludeInternalDTDDeclarations(false);
      sAXReader0.isMergeAdjacentText();
      sAXReader0.isValidating();
      defaultDocumentFactory0.createQName("", "");
      sAXReader0.getXMLReader();
      sAXReader0.setEncoding("");
      try { 
        MockURL.URL("Kz*On", "Validation not supported for XMLReader: ", (-915), "wKx8");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid port number :-915
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.6151782215214676
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setMergeAdjacentText(false);
      sAXReader0.isIgnoreComments();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      sAXReader0.getXMLReader();
      dispatchHandler0.resetHandlers();
      dispatchHandler0.resetHandlers();
      String string0 = null;
      dispatchHandler0.removeHandler((String) null);
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader(false);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.endDTD();
      SAXReader sAXReader2 = new SAXReader();
      sAXReader2.setIgnoreComments(false);
      sAXReader1.isValidating();
      sAXReader2.setDefaultHandler(dispatchHandler0);
      try { 
        sAXReader2.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.881766240540306
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setMergeAdjacentText(false);
      sAXReader0.isIgnoreComments();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      dispatchHandler0.resetHandlers();
      dispatchHandler0.resetHandlers();
      dispatchHandler0.removeHandler((String) null);
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.getXMLFilter();
      SAXReader sAXReader1 = new SAXReader(xMLReader0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.endDTD();
      SAXReader sAXReader2 = new SAXReader();
      sAXReader2.setIgnoreComments(false);
      sAXReader1.isValidating();
      sAXReader2.setDefaultHandler(dispatchHandler0);
      assertTrue(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("5Y hu*fQC,EAqT,I");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      xMLFilterImpl0.endElement("org.dom4j.tree.BackedList", "Given node cannot be a child of an entity reference", "Given node cannot be a child of an entity reference");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      ElementStack elementStack0 = new ElementStack();
      elementStack0.getDispatchHandler();
      sAXReader0.setDefaultHandler((ElementHandler) null);
      MockFile mockFile0 = new MockFile("}!+'e\"9o@k4");
      MockFile mockFile1 = new MockFile("}!+'e\"9o@k4");
      mockFile1.createNewFile();
      MockFile mockFile2 = new MockFile(mockFile1, "}!+'e\"9o@k4");
      assertFalse(mockFile2.equals((Object)mockFile1));
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.336704583890597
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      String string0 = "\" culd not be added to the branch \"";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" culd not be added to the branch \"");
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" culd not be added to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" culd not be added to the branch \"");
      StringReader stringReader0 = new StringReader("\" culd not be added to the branch \"");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3087432950398514
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader();
      InputSource inputSource0 = new InputSource();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.5345863065472094
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.resetHandlers();
      sAXReader0.removeHandler("#r\"+Swe_6CGjH");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#r\"+Swe_6CGjH");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.setErrorHandler(defaultHandler2_0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)57;
      byteArray0[1] = (byte)71;
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)47;
      byteArray0[5] = (byte)50;
      byteArray0[6] = (byte)19;
      try { 
        sAXReader0.read("$Ie{F0R3K%");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: $Ie{F0R3K% Nested exception: no protocol: $Ie{F0R3K%
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("2,#' N0\"9]9H/7wLu");
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/tmp/http:/xml.org/sax/features/namespace-prefixes0(BC{<L)e0<5] OA0substring-after() requires two arguments.", "http://xml.org/sax/handlers/LexicalHandler");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver1 = new SAXReader.SAXEntityResolver("4.,");
      sAXReader_SAXEntityResolver1.resolveEntity(")VH`/-Zx7<TC7/t~5D", ")VH`/-Zx7<TC7/t~5D");
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      URI uRI0 = MockURI.aHttpURI;
      sAXReader0.getXMLFilter();
      MockURI.toURL(uRI0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//tmp/Co)IkUBDu|iRYgi]H0Co)IkUBDu|iRYgi]H");
      SAXReader sAXReader0 = new SAXReader(true);
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/";
      stringArray0[1] = "q;OOA@Nqqao|$5;vX";
      stringArray0[2] = "";
      stringArray0[3] = "+XC";
      stringArray0[4] = "/";
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      PruningElementStack pruningElementStack0 = new PruningElementStack(stringArray0, pruningDispatchHandler0);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      pruningDispatchHandler0.addHandler("+XC", dispatchHandler0);
      pruningElementStack0.getDispatchHandler();
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertTrue(sAXReader0.isValidating());
      assertNotNull(documentFactory0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      sequenceInputStream1.markSupported();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getErrorHandler();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream1, 4644);
      sequenceInputStream1.markSupported();
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream((InputStream) null);
      assertFalse(bufferedInputStream1.equals((Object)bufferedInputStream0));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6183972463477247
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      dispatchHandler0.removeHandler("@bNBSqh)");
      xMLFilterImpl0.processingInstruction((String) null, "@bNBSqh)");
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.setIgnoreComments(true);
      sAXReader0.isStringInternEnabled();
      sAXReader0.getEntityResolver();
      String string0 = "p";
      SAXParseException sAXParseException0 = new SAXParseException("`0ydS:4Zy4s3{CgD=", (String) null, "p", (-1280), 2588);
      dispatchHandler0.removeHandler("Mi~yASP");
      MockException mockException0 = new MockException(sAXParseException0);
      sAXParseException0.getMessage();
      SAXParseException sAXParseException1 = new SAXParseException((String) null, (String) null, "@bNBSqh)", (-880), 2588, mockException0);
      xMLFilterImpl0.error(sAXParseException1);
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, sAXContentHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@711c7ea5 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.239095456210609
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.getParent();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl("[*3", "[*3", "#eoQij6aH4RR]g8s.");
      char[] charArray0 = new char[5];
      charArray0[0] = 's';
      charArray0[1] = 'M';
      charArray0[2] = 'C';
      charArray0[3] = '9';
      charArray0[4] = 's';
      xMLFilterImpl0.characters(charArray0, 47, 18);
      xMLFilterImpl1.characters(charArray0, 2543, (-1));
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl1.endDocument();
      xMLFilterImpl0.resolveEntity("//tmp/('C{<L)e0<]OA0('C{<L)e0<]OA", "//tmp/('C{<L)e0<]OA0('C{<L)e0<]OA");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      URI uRI0 = MockURI.aFTPURI;
      URL uRL0 = MockURI.toURL(uRI0);
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.characters(charArray0, 38, (-2242));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.characters(charArray0, (-2242), 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl0.resolveEntity("", "ww9?dL&4|d;T6j4Z");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl3.resolveEntity("c2Z:kI=l", "");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("Invalid node type. Cannot add node: ");
      try { 
        sAXReader0.read((Reader) stringReader0, "fuu");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.unparsedEntityDecl("{WG%,", "{WG%,", "{WG%,", "{WG%,");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.characters(charArray0, 38, (-2242));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.characters(charArray0, (-2242), 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "]&Kd");
      xMLFilterImpl0.resolveEntity("", "ww9?dL&4|d;T6j4Z");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl3.resolveEntity("c2Z:kI=l", "");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl((XMLReader) null);
      StringReader stringReader0 = new StringReader("Invalid node type. Cannot add node: ");
      try { 
        sAXReader0.read((Reader) stringReader0, "fuu");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl("Dhk3Sc4v", "Dhk3Sc4v", "r8/z.:qt:CC");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      xMLFilterImpl2.endElement("#<c=>i{s4", "", "NqEn/IN'PD");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl2);
      xMLFilterImpl2.endElement("NqEn/IN'PD", (String) null, "//home/ubuntu/termite/projects/62_dom4j/3yfvOH;!t/ ZV&eYDg/M#c|F0Q(<5");
      xMLFilterImpl0.endDocument();
      sAXReader0.setXMLReader(xMLFilterImpl2);
      xMLFilterImpl2.resolveEntity("", "D}b(mPKNUp<%>a");
      char[] charArray0 = new char[6];
      charArray0[0] = '3';
      charArray0[1] = '6';
      charArray0[1] = '3';
      charArray0[0] = '6';
      xMLFilterImpl2.ignorableWhitespace(charArray0, 65535, 39);
      try { 
        sAXReader0.setXMLReaderClassName("r8/z.:qt:CC");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class r8/z.:qt:CC not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.getErrorHandler();
      sAXReader0.setErrorHandler((ErrorHandler) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-104);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.notationDecl("gQ7EAp9=KK8KlR", (String) null, "http://xml.org/sax/properties/declaration-handler");
      xMLFilterImpl0.endElement("5nk>/V;.cypNk'", "#<c=>i{s4", "#<c=>i{s4");
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl0);
      xMLFilterImpl0.endElement("gQ7EAp9=KK8KlR", "#<c=>i{s4", "getEncoding");
      xMLFilterImpl0.endDocument();
      xMLFilterImpl0.resolveEntity("getEncoding", "TJ");
      char[] charArray0 = new char[6];
      charArray0[0] = '6';
      charArray0[1] = '6';
      charArray0[2] = '/';
      charArray0[3] = '/';
      charArray0[4] = '6';
      charArray0[5] = 'g';
      xMLFilterImpl0.ignorableWhitespace(charArray0, 65535, (byte) (-104));
      try { 
        sAXReader1.setXMLReaderClassName("http://xml.org/sax/features/namespace-prefixes");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class http://xml.org/sax/features/namespace-prefixes not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.isMergeAdjacentText();
      String string0 = "";
      String string1 = "";
      try { 
        MockURI.URI("", "", "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: ://#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " could not be addd to the branch \"");
      SAXReader sAXReader0 = new SAXReader(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " could not be addd to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " could not be addd to the branch \"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//tmp/Co)IkUBDu|iRYgi]H0Co)IkUBDu|iRYgi]H");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      String string0 = "l<y6Q,]yRtag`v)B.$i";
      MockFile mockFile0 = new MockFile("l<y6Q,]yRtag`v)B.$i", "l<y6Q,]yRtag`v)B.$i");
      String string1 = "HpBVqZiiE]0";
      MockFile mockFile1 = new MockFile("HpBVqZiiE]0");
      mockFile1.mkdirs();
      MockFile.createTempFile("HpBVqZiiE]0", "l<y6Q,]yRtag`v)B.$i");
      MockFile mockFile2 = new MockFile("HpBVqZiiE]0", "HpBVqZiiE]0");
      mockFile1.setWritable(true);
      MockFile mockFile3 = new MockFile(mockFile0, "HpBVqZiiE]0");
      SAXReader sAXReader0 = new SAXReader();
      boolean boolean0 = true;
      mockFile3.setReadable(true);
      try { 
        sAXReader0.read((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      String string0 = "l<y6Q,]yRtag`v)B.$i";
      File file0 = MockFile.createTempFile("//tmp/3a\\tgVz~,uEM&8Jt7-0/tmp/]h#DYh+aa~~lQwxC+t=0Invalid path of length: ", "//tmp/3a\\tgVz~,uEM&8Jt7-0/tmp/]h#DYh+aa~~lQwxC+t=0Invalid path of length: ");
      String string1 = "6d_9";
      MockFile mockFile0 = new MockFile("6d_9");
      mockFile0.setWritable(true);
      MockFile mockFile1 = new MockFile(file0, "//tmp/]h#}Yh)aa~~lQwxC+t=0Invalid path of length: ");
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.getXMLFilter();
      sAXReader0.installXMLFilter((XMLReader) null);
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "//tmp/isEqual0('C{<L)e0<5] OA");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.endElement("(:=", "(:=", (String) null);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      MockFile mockFile0 = new MockFile("//tmp/isEqual0('C{<L)e0<5] OA", "JcTMU");
      MockFile mockFile1 = new MockFile(mockFile0, "UJF!hLumGd.xkGU");
      sAXReader0.removeHandler("61#_ybx1PqI)]");
      MockFile mockFile2 = new MockFile(mockFile0, "61#_ybx1PqI)]");
      StringReader stringReader0 = new StringReader("![lu*2aM");
      DOMDocument dOMDocument0 = new DOMDocument();
      assertNull(dOMDocument0.getXMLEncoding());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, (String) null);
      SAXReader sAXReader0 = new SAXReader((DocumentFactory) null);
      sAXReader0.createXMLReader();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getEncoding();
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      SAXReader sAXReader0 = new SAXReader();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader0.setEntityResolver(sAXReader_SAXEntityResolver0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DOMDocument dOMDocument0 = new DOMDocument("");
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//tmp/Co)IkUBDu|iRYgi]H0Co)IkUBDu|iRYgi]H");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1579), (-1579));
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)41;
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory0.createQName("`y~?ML4>vA");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory(documentFactory0);
      sAXReader0.setDocumentFactory(documentFactory0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setValidation(true);
      assertTrue(sAXReader0.isValidating());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setStripWhitespaceText(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\" could not be added to the branch \"");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "//tmp/Co)IkUBDu|iRYgi]H0Co)IkUBDu|iRYgi]H");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.5370729966451027
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.resetHandlers();
      pruningDispatchHandler0.resetHandlers();
      pruningDispatchHandler0.removeHandler((String) null);
      sAXReader0.setMergeAdjacentText(true);
      sAXReader0.getErrorHandler();
      sAXReader0.setDispatchHandler(pruningDispatchHandler0);
      sAXReader0.setErrorHandler((ErrorHandler) null);
      pruningDispatchHandler0.removeHandler("org.dom4j.tree.DefaultComment");
      try { 
        sAXReader0.read("\" data: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: \" data:  Nested exception: no protocol: \" data: 
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("y*V[4w=O8]/G5yT", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class y*V[4w=O8]/G5yT not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXContentHandler sAXContentHandler0 = sAXReader0.createContentHandler(xMLFilterImpl0);
      sAXReader0.setErrorHandler(sAXContentHandler0);
      locatorImpl0.getSystemId();
      sAXReader0.setStringInternEnabled(true);
      XMLFilterImpl xMLFilterImpl1 = (XMLFilterImpl)sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.getEntityResolver();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl1);
      sAXReader1.setXMLFilter(xMLFilterImpl1);
      sAXReader1.setEntityResolver(sAXContentHandler0);
      try { 
        sAXReader0.setXMLReaderClassName("//tmp/Invalid path of length: 07IT{o(G9#c");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class //tmp/Invalid path of length: 07IT{o(G9#c not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.2975883560528287
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl("Dhk3Sc4v", "Dhk3Sc4v", "r8/z.:qt:CC");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      xMLFilterImpl0.characters(charArray0, 1, 47);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.endElement("l", "NqEn/IN'PD", "NqEn/IN'PD");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl3);
      xMLFilterImpl2.endElement("NqEn/IN'PD", "", "NqEn/IN'PD");
      LocatorImpl locatorImpl0 = new LocatorImpl();
      xMLFilterImpl2.setDocumentLocator(locatorImpl0);
      xMLFilterImpl1.endDocument();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl4.resolveEntity("{fAv*", "k#g%4Hh");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader1 = new SAXReader(parserAdapter0, true);
      StringReader stringReader0 = new StringReader("k#g%4Hh");
      try { 
        sAXReader1.read((Reader) stringReader0, "Dhk3Sc4v");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@65b49b04 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@65b49b04 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.notationDecl(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      xMLFilterImpl1.endElement(" [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &", " [MrocessingnstructiBn: &");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      
      xMLFilterImpl0.endElement("", "", "");
      xMLFilterImpl1.endDocument();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("?i3xyW!Z(/~", "");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      SAXReader sAXReader1 = new SAXReader();
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader1.isStringInternEnabled());
      assertFalse(sAXReader1.isMergeAdjacentText());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.3562639359193818
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException("CDATASection nodes cannot have children", mockThrowable0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl1);
      SAXParseException sAXParseException0 = new SAXParseException("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA", locatorImpl2, mockException0);
      sAXParseException0.getException();
      sAXParseException0.getMessage();
      SAXParseException sAXParseException1 = new SAXParseException("//home/ubuntu/termite/projects/62_dom4j/3yfvOH;!t/ ZV&eYDg/M#c|F0Q(<5", "Q(<5", "", (-333), (-3276));
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl0.error(sAXParseException0);
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.createContentHandler(xMLFilterImpl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(xMLFilterImpl0, defaultHandler2_0);
      sAXReader0.setDispatchHandler((DispatchHandler) null);
      DefaultDocumentFactory.getInstance();
      sAXReader0.getDocumentFactory();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("Q(<5");
      StringReader stringReader0 = new StringReader("|2'A:J\"$?gdc]<gl");
      StringReader stringReader1 = new StringReader("vPRhKq_R");
      try { 
        sAXReader0.read((Reader) stringReader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      locator2Impl0.setXMLVersion("org.jaxen.pattern.NameTest");
      locator2Impl0.getXMLVersion();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      xMLFilterImpl0.setDocumentLocator(locatorImpl2);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertNotNull(xMLReader0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(false);
      DOMDocument dOMDocument0 = new DOMDocument();
      sAXReader0.createDefaultEntityResolver("e8XdU(B,6E8APc?(|D");
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl(attributesImpl1);
      xMLReaderAdapter0.startElement("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA", "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA", "/#6X6w)/C71{j{t+", attributes2Impl0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      boolean boolean0 = sAXReader0.isIncludeExternalDTDDeclarations();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.unparsedEntityDecl("{WG%,", "{WG%,", "{WG%,", "{WG%,");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.startDocument();
      xMLFilterImpl2.setParent(xMLFilterImpl1);
      xMLFilterImpl0.characters(charArray0, 38, (-2242));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.characters(charArray0, (-2242), 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "]&Kd");
      xMLFilterImpl2.resolveEntity("h@z*gA49oI", "ww9Z?dL&4|d;T6j4Z");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.notationDecl("NqEn/IN'PD", "+Fo", "NqEn/IN'PD");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.getParent();
      xMLFilterImpl1.resolveEntity("=_?{$sxb", "h@z*gA49oI");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.ignorableWhitespace(charArray0, (-456), 1794);
      try { 
        sAXReader0.setProperty("]&Kd", xMLFilterImpl4);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: ]&Kd
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-13);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " could not be addd to the branch \"");
      SAXReader sAXReader0 = new SAXReader(false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " could not be addd to the branch \"");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        sAXReader0.read("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.notationDecl(" />]", " />]", "tZQw uAYI7J1yE");
      xMLFilterImpl0.notationDecl("r8/z.:qt:CC", "r8/z.:qt:CC", "r8/z.:qt:CC");
      char[] charArray0 = new char[2];
      charArray0[0] = '4';
      charArray0[1] = '4';
      xMLFilterImpl1.characters(charArray0, 1, (-1172));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl4.setDTDHandler(xMLFilterImpl2);
      xMLFilterImpl4.endElement("//tmp/http:/xml.org/sax/features/namespaces0e?z~&Yy^K'<Q?IFNr]n", "Dhk3Sc4v", "(?K^mp");
      xMLFilterImpl1.endElement("%N5=0p[", (String) null, "r8/z.:qt:CC");
      xMLFilterImpl1.endDocument();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl2.resolveEntity("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA", "l");
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      StringReader stringReader0 = new StringReader("%N5=0p[");
      try { 
        sAXReader0.read("PHI!\u0004r{)P>Lt 9q");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: PHI!\u0004r{)P>Lt 9q Nested exception: no protocol: PHI!\u0004r{)P>Lt 9q
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1579), (-1579));
      int int0 = 678;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 678, 3747);
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.unparsedEntityDecl("{WG%,", "{WG%,", "{WG%,", "{WG%,");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.startDocument();
      xMLFilterImpl0.characters(charArray0, 38, (-2242));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.characters(charArray0, (-2242), 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "]&Kd");
      xMLFilterImpl2.resolveEntity("h@z*gA49oI", "ww9Z?dL&4|d;T6j4Z");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.notationDecl("NqEn/IN'PD", "+Fo", "NqEn/IN'PD");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.getParent();
      xMLFilterImpl1.resolveEntity("=_?{$sxb", "h@z*gA49oI");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.ignorableWhitespace(charArray0, (-456), 1794);
      try { 
        sAXReader0.setProperty("]&Kd", xMLFilterImpl4);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: ]&Kd
         //
         verifyException("org.xml.sax.helpers.XMLFilterImpl", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-104);
      byteArray0[2] = (byte) (-104);
      byteArray0[3] = (byte) (-104);
      byteArray0[4] = (byte) (-104);
      File file0 = MockFile.createTempFile("l<y6Q,]yRtag`v)B.$i", "l<y6Q,]yRtag`v)B.$i");
      MockFile mockFile0 = new MockFile(file0, "1w+8yYt");
      MockFile mockFile1 = new MockFile(" }Sh8G=:jV#Q+'[", "//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
      MockFile mockFile2 = new MockFile("l<y6Q,]yRtag`v)B.$i", "~EtQ");
      MockFile mockFile3 = new MockFile(mockFile1, "//tmp/Invalid path of length: 07IT{o(G9#c");
      MockFile mockFile4 = new MockFile(mockFile2, "+\"!dzWz)u=");
      try { 
        sAXReader0.read("//tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: //tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA Nested exception: no protocol: //tmp/http:/xml.org/sax/features/namespace-prefixes0('C{<L)e0<5] OA
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.unparsedEntityDecl("{WG%,", "{WG%,", "{WG%,", "{WG%,");
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.startDocument();
      xMLFilterImpl2.setParent(xMLFilterImpl1);
      xMLFilterImpl0.characters(charArray0, 38, (-2242));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.characters(charArray0, (-2242), 47);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl1);
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl3.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "]&Kd");
      xMLFilterImpl2.resolveEntity("h@z*gA49oI", "ww9Z?dL&4|d;T6j4Z");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.notationDecl("NqEn/IN'PD", "+Fo", "NqEn/IN'PD");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.getParent();
      xMLFilterImpl1.resolveEntity("=_?{$sxb", "h@z*gA49oI");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=_?{$sxb");
      sAXReader0.getDispatchHandler();
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertNotNull(dispatchHandler0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1579), (-1579));
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.markSupported();
      sAXReader0.resetHandlers();
      DefaultDocument defaultDocument0 = new DefaultDocument();
      Enumeration<ObjectInputStream> enumeration0 = (Enumeration<ObjectInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      sequenceInputStream0.markSupported();
      try { 
        sAXReader0.read((InputSource) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4642567260559776
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("2,#' N0\"9]9H/7wLu");
      sAXReader_SAXEntityResolver0.resolveEntity("2,#' N0\"9]9H/7wLu", "E%ZpkM");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("//tmp/Invalid path of length: 07IT{o(G9#c", "");
      sAXReader_SAXEntityResolver0.resolveEntity("2,#' N0\"9]9H/7wLu", "hItp:</xml.org/sax/features/validation");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      inputSource0.getCharacterStream();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(documentFactory0);
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.close();
      sequenceInputStream0.mark(1767);
      Enumeration<InputStream> enumeration1 = null;
      SequenceInputStream sequenceInputStream1 = null;
      try {
        sequenceInputStream1 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.616658115912942
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/('C{<L)e0<5] OA0http:/xml.org/sax/features/namespace-prefixes");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " [ProcessingInstruction: &");
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.endElement("//tm/QF{+TtM%^o@;N0('C{<L)e0<5] OA", " [ProcessingInstruction: &", "(:=");
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      sAXReader0.getXMLReader();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      SAXReader sAXReader1 = new SAXReader();
      sAXReader1.configureReader(xMLFilterImpl1, defaultHandler0);
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader2 = new SAXReader(defaultDocumentFactory0, true);
      assertFalse(sAXReader2.isIncludeInternalDTDDeclarations());
      
      sAXReader2.setIncludeInternalDTDDeclarations(true);
      sAXReader2.createContentHandler(xMLFilterImpl1);
      assertTrue(sAXReader2.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.3111802789964604
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 40, 79);
      byteArrayInputStream0.read(byteArray0);
      try { 
        sAXReader0.read((InputStream) byteArrayInputStream0, "CDATA_SECTION_NODE");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(true);
      try { 
        sAXReader0.setFeature("org.dom4j.io.SAXReader", true);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature 'org.dom4j.io.SAXReader' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.333443371183037
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
          XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
          XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
          xMLFilterImpl2.notationDecl(" />]", " />]", "tZQw uAYI7J1yE");
          xMLFilterImpl0.notationDecl("r8/z.:qt:CC", "r8/z.:qt:CC", "r8/z.:qt:CC");
          char[] charArray0 = new char[2];
          charArray0[0] = '4';
          charArray0[1] = '4';
          xMLFilterImpl1.characters(charArray0, 1, (-1172));
          XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
          XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl1);
          xMLFilterImpl4.endElement("//tmp/http:/xml.org/sax/features/namespaces0e?z~&Yy^K'<Q?IFNr]n", "Dhk3Sc4v", "(?K^mp");
          XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
          Locator2Impl locator2Impl0 = new Locator2Impl();
          Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
          LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
          URI uRI0 = MockURI.aFTPURI;
          URL uRL0 = MockURI.toURL(uRI0);
          SAXReader sAXReader0 = new SAXReader((String) null);
          try { 
            sAXReader0.read(uRL0);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //  Nested exception: Security manager blocks (\"java.lang.RuntimePermission\" \"ftpClientProvider\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // sun.net.ftp.FtpClientProvider.<init>(FtpClientProvider.java:60)
             // sun.net.ftp.impl.DefaultFtpClientProvider.<init>(DefaultFtpClientProvider.java:31)
             // sun.net.ftp.FtpClientProvider$1.run(FtpClientProvider.java:151)
             // java.security.AccessController.doPrivileged(Native Method)
             // sun.net.ftp.FtpClientProvider.provider(FtpClientProvider.java:141)
             // sun.net.ftp.FtpClient.create(FtpClient.java:108)
             // sun.net.www.protocol.ftp.FtpURLConnection.connect(FtpURLConnection.java:286)
             // sun.net.www.protocol.ftp.FtpURLConnection.getInputStream(FtpURLConnection.java:400)
             // org.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(Unknown Source)
             // org.apache.xerces.impl.XMLVersionDetector.determineDocVersion(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
             // org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
             // org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
             // org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)
             // org.dom4j.io.SAXReader.read(SAXReader.java:436)
             // org.dom4j.io.SAXReader.read(SAXReader.java:288)
             // sun.reflect.GeneratedMethodAccessor254.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.dom4j.io.SAXReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getParent();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl2.unparsedEntityDecl("{WG%,", "{WG%,", "{WG%,", "{WG%,");
      String string0 = "NqEn/IN'PD";
      xMLFilterImpl2.notationDecl("NqEn/IN'PD", "r8/z.:qt:CC", "NqEn/IN'PD");
      char[] charArray0 = new char[5];
      xMLFilterImpl1.notationDecl("NqEn/IN'PD", "NqEn/IN'PD", "r8/z.:qt:CC");
      xMLFilterImpl0.characters(charArray0, 38, (-2242));
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.characters(charArray0, (-2242), 47);
      SAXReader sAXReader0 = null;
      try {
        sAXReader0 = new SAXReader("NqEn/IN'PD");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class NqEn/IN'PD not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      documentFactory0.createComment("xmlns:");
      SimpleVariableContext simpleVariableContext0 = new SimpleVariableContext();
      documentFactory0.createXPath("xmlns:", (VariableContext) simpleVariableContext0);
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }
}
