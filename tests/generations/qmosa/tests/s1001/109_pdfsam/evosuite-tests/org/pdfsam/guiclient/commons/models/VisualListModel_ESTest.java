/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 07:13:39 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.InputMethodListener;
import java.awt.event.ItemListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.awt.image.ConvolveOp;
import java.awt.image.IndexColorModel;
import java.awt.image.Kernel;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.io.InputStream;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.EventListener;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.SortedSet;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.media.jai.CollectionOp;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLayeredPane;
import javax.swing.text.DefaultEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.2317034931256
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox0.getDebugGraphicsOptions();
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      int[] intArray1 = new int[4];
      intArray1[0] = 7;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      JComboBox<Integer> jComboBox2 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox3 = new JComboBox<Integer>();
      jComboBox3.getVetoableChangeListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      visualListModel0.reverseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.186860125886492
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.setData(visualPageListItemArray0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.moveUpIndex(1);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9280478396261032
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1725;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 1726
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[2] = visualPageListItemArray0[0];
      visualPageListItemArray0[4] = visualPageListItemArray0[2];
      visualListModel0.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.parallelStream();
      stack1.add(visualPageListItemArray0[0]);
      stack1.stream();
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[3]);
      stack2.add(visualPageListItemArray0[1]);
      stack0.add(visualPageListItemArray0[0]);
      int[] intArray0 = new int[4];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -1
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1629970982806674
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[1]);
      stack0.add(visualPageListItemArray0[1]);
      visualListModel0.updateElementAt((-1293), visualPageListItemArray0[3]);
      visualListModel0.updateElementAt((-1293), (VisualPageListItem) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      assertEquals(9, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2795985195609845
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Parsing layout options for \"");
      intArray0[0] = 1725;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener2);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>(stack0);
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m}!ut4q8N2knkJ?");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m}!ut4q8N2knkJ?");
      VisualListModel visualListModel1 = new VisualListModel();
      Point point0 = jComboBox1.getLocation();
      point0.translate(1, 1);
      Rectangle rectangle0 = new Rectangle(point0);
      rectangle0.setFrameFromDiagonal((Point2D) point0, (Point2D) point0);
      visualListModel1.reverseElements(intArray0);
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1725
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8548720307766424
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox0.getDebugGraphicsOptions();
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      int[] intArray1 = new int[4];
      intArray1[0] = (-1);
      visualListModel0.moveUpIndexes(intArray1);
      try { 
        visualListModel0.moveDownIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.733018899307246
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      AffineTransform.getRotateInstance((double) 50000, (double) 50000);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster2);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      Stack<String> stack0 = new Stack<String>();
      visualListModel0.removeElements(intArray0, true);
      jComboBox0.addInputMethodListener((InputMethodListener) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertArrayEquals(new int[] {0}, intArray1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.143654440989084
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualListModel0.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.138526235860879
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.retainAll(vector0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.add(visualPageListItemArray0[1]);
      vector1.add(visualPageListItemArray0[0]);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      visualListModel0.moveUpIndex(6);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModl");
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.Zuclient.commons.models.VisualstModel");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0, stack0);
      parameterBlock0.setSources(stack0);
      Hashtable<RenderingHints.Key, Integer> hashtable0 = new Hashtable<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      CollectionOp collectionOp0 = new CollectionOp("org.pdfsam.Zuclient.commons.models.VisualstModel", parameterBlock0, renderingHints0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"org.pdfsam.Zuclient.commons.models.VisualstModel\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.335619291339705
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[1]);
      stack0.add(visualPageListItemArray0[1]);
      visualListModel0.updateElementAt((-1293), visualPageListItemArray0[3]);
      visualListModel0.updateElementAt((-1293), (VisualPageListItem) null);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0474725747311235
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      AffineTransform.getRotateInstance((double) 50000, (double) 50000);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.384693857457614
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[5];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.moveDownIndexes(intArray0);
      Point point0 = new Point();
      Point2D.Double point2D_Double0 = new Point2D.Double(0, 0.0);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(0);
      Point2D point2D0 = affineTransform0.deltaTransform((Point2D) point0, (Point2D) point2D_Double0);
      point2D_Double0.clone();
      Point2D.Double point2D_Double1 = new Point2D.Double(0.0, (-1.0));
      Point point1 = new Point(0, 14);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      jComboBox0.revalidate();
      Point point2 = jComboBox0.getLocation();
      point2.translate(0, 0);
      Rectangle rectangle0 = new Rectangle(point1);
      point2D0.clone();
      rectangle0.height = 14;
      rectangle0.setFrameFromDiagonal((Point2D) point1, point2D0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.565394837118028
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 1725;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1725
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.1331337395597156
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      AffineTransform.getRotateInstance((double) 50000, (double) 50000);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener0);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster0, (WindowListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      Class<DefaultEditorKit.PasteAction> class0 = DefaultEditorKit.PasteAction.class;
      AWTEventMulticaster.getListeners((EventListener) inputMethodListener1, class0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster4, (InputMethodListener) aWTEventMulticaster2);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.setSelectedItem((Object) null);
      jComboBox0.getVetoableChangeListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster5, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.93504084661911
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1725;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove(inputMethodListener0, (InputMethodListener) aWTEventMulticaster0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster2, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) aWTEventMulticaster1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.getVetoableChangeListeners();
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster0, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) aWTEventMulticaster0);
      jComboBox0.addInputMethodListener(aWTEventMulticaster1);
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1725
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2801913757879855
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1725;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], level [");
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(1);
      visualListModel0.removeElements((-1), 1725, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel1 = new VisualListModel();
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1724
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 682
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1880689886806706
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int[] intArray1 = new int[5];
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], level [");
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], level [");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.reverseElements(intArray0);
      Stack<Integer> stack0 = new Stack<Integer>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], level [");
      visualListModel0.moveDownIndexes(intArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], level [");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.4995031243532093
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener2, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener2);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>(stack0);
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      jComboBox0.addInputMethodListener(inputMethodListener3);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel1.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel1.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.703628129285174
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(0, 0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Aa'7|Zb*V#= n[[3(");
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.descendingIterator();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) treeSet0);
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements(32, (Collection<VisualPageListItem>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.065887923253935
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AffineTransform.getRotateInstance((double) 23, (double) 23);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.remove(inputMethodListener0, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.add(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener2, inputMethodListener2);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener2, inputMethodListener3);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster1, (InputMethodListener) null);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove(inputMethodListener2, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener2);
      AWTEventMulticaster.remove(inputMethodListener2, (InputMethodListener) aWTEventMulticaster0);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.remove(inputMethodListener3, (InputMethodListener) aWTEventMulticaster3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, inputMethodListener4);
      AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) aWTEventMulticaster3);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      jComboBox0.getVetoableChangeListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster2, (HierarchyBoundsListener) aWTEventMulticaster4);
      jComboBox0.addInputMethodListener(aWTEventMulticaster1);
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.571138882620417
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity(1326);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U0}iT");
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U0}iT");
      visualListModel0.moveDownIndexes(intArray1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U0}iT");
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U0}iT");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U0}iT");
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.5523844651014715
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.setData(vector0);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = 0;
      intArray1[1] = 0;
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[12];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], level [");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], level [");
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.setData(visualPageListItemArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.pdfsam.guiclient.commons.models.VisualListModel");
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel1.removeElementAt(0, true);
      assertEquals(11, visualListModel1.getSize());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 681
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.042901725385895
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox0.getDebugGraphicsOptions();
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      int[] intArray1 = new int[4];
      intArray1[0] = 7;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      JComboBox<Integer> jComboBox2 = new JComboBox<Integer>();
      JComboBox<Integer> jComboBox3 = new JComboBox<Integer>();
      jComboBox3.getVetoableChangeListeners();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.remove(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add(hierarchyBoundsListener3, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove(hierarchyBoundsListener4, hierarchyBoundsListener2);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 1725);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      Integer.min((-384), 1725);
      Integer.sum(18, 1);
      Integer[] integerArray0 = new Integer[7];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(32);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((-384));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer(18);
      integerArray0[3] = integer3;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[4] = integer4;
      Integer integer5 = JLayeredPane.MODAL_LAYER;
      integerArray0[5] = integer5;
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      integerArray0[6] = integer6;
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(integerArray0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox0.getDebugGraphicsOptions();
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      int[] intArray1 = new int[4];
      intArray1[0] = 7;
      Integer.toUnsignedLong(39);
      Integer integer0 = new Integer(682);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      unaryOperator0.apply(integer0);
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends Integer>) function0);
      Integer.getInteger("org.pdfsam.guiclient.commons.models.VisualListModel", (-1));
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Stack<Integer> stack0 = new Stack<Integer>();
      stack0.add((Integer) 7);
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function1);
      Integer integer2 = new Integer((-2165));
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = JLayeredPane.POPUP_LAYER;
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      int int0 = visualListModel0.getSize();
      assertEquals(10, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) locale_FilteringMode1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate2.or(predicate0);
      predicate2.test(predicate0);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) locale_FilteringMode1);
      predicate4.or(predicate1);
      Predicate<Object> predicate8 = predicate6.negate();
      Predicate<Object> predicate9 = predicate0.and(predicate8);
      Predicate<Object> predicate10 = predicate2.or(predicate9);
      Predicate<Object> predicate11 = predicate5.negate();
      predicate11.negate();
      predicate10.or(predicate0);
      Object object0 = new Object();
      predicate5.or(predicate7);
      Predicate<Object> predicate12 = predicate11.negate();
      Predicate.isEqual((Object) visualListModel0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_RENDERING;
      predicate1.or(predicate3);
      predicate0.negate();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      predicate2.negate();
      Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate13 = predicate8.and(predicate12);
      predicate13.negate();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.updateElementAt(46, (VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3113369638633987
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1725;
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener1);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener2);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>(stack0);
      jComboBox1.getGraphics();
      jComboBox0.printAll((Graphics) null);
      jComboBox0.getVetoableChangeListeners();
      jComboBox0.addInputMethodListener(inputMethodListener3);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1725
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.234044601196686
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.133133739559716
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray0);
      AffineTransform.getRotateInstance((double) 50000, (double) 50000);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster0, (ItemListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      Stack<String> stack0 = new Stack<String>();
      jComboBox0.addInputMethodListener((InputMethodListener) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 682;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox0.getDebugGraphicsOptions();
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((ItemListener) null, (ItemListener) null);
      AWTEventMulticaster.remove((ItemListener) null, (ItemListener) null);
      AWTEventMulticaster.remove((ItemListener) null, (ItemListener) null);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.remove(inputMethodListener1, (InputMethodListener) null);
      InputMethodListener inputMethodListener4 = AWTEventMulticaster.remove(inputMethodListener2, (InputMethodListener) null);
      InputMethodListener inputMethodListener5 = AWTEventMulticaster.remove(inputMethodListener4, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.remove(inputMethodListener5, inputMethodListener3);
      JComboBox<Integer> jComboBox2 = new JComboBox<Integer>();
      Stack<String> stack0 = new Stack<String>();
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      jComboBox0.addInputMethodListener((InputMethodListener) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 682
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, 1725);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.moveDownIndex(0);
      stack0.add((VisualPageListItem) null);
      HashMap<RenderingHints.Key, VisualPageListItem> hashMap0 = new HashMap<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      float[] floatArray0 = new float[1];
      floatArray0[0] = (float) 0;
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      hashMap0.put(sunHints_Key0, (VisualPageListItem) null);
      float[] floatArray1 = new float[15];
      floatArray1[0] = 255.0F;
      floatArray1[1] = 255.0F;
      floatArray1[2] = 255.0F;
      RescaleOp rescaleOp0 = new RescaleOp(floatArray0, floatArray1, renderingHints0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(0, 0, 1910);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1910
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.2994293914683173
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = visualPageListItemArray0[0];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = visualPageListItemArray0[2];
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.trimToSize();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.containsAll(stack0);
      stack1.addAll((Collection<? extends VisualPageListItem>) stack0);
      stack1.add(visualPageListItemArray0[0]);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack1.forEach(consumer0);
      stack0.add(visualPageListItemArray0[5]);
      stack1.stream();
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[3]);
      stack2.add(visualPageListItemArray0[1]);
      stack0.add(visualPageListItemArray0[0]);
      stack0.add(visualPageListItemArray0[4]);
      Boolean boolean0 = new Boolean("KsK`");
      stack2.retainAll(stack0);
      stack2.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1254), visualPageListItemArray0[3]);
      visualListModel0.elementChanged(visualPageListItemArray0[2]);
      visualListModel0.subList(1, 1, true);
      assertEquals(7, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3080570415126394
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Aa'7|Zb*V#= n[[3(");
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity((-1341));
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((-1341), (Collection<VisualPageListItem>) vector0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Rectangle rectangle0 = new Rectangle((-1), (-1));
      rectangle0.y = (-1);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) (-1), (double) (-1));
      Point point0 = new Point();
      Point2D.Double point2D_Double0 = new Point2D.Double((-2511.145737600429), (-1));
      affineTransform0.deltaTransform((Point2D) point0, (Point2D) point2D_Double0);
      Point2D.Double point2D_Double1 = new Point2D.Double(-0.0, -0.0);
      point2D_Double1.setLocation(0.0, (double) (-1));
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)24;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      visualListModel0.removeElements((-1), (-1), true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.reverseElements(intArray0);
      Stack<Integer> stack0 = new Stack<Integer>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$Of\")}uG");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      visualListModel0.getSize();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem((-2955));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      vector0.add(integer0);
      UnaryOperator.identity();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(677, 677);
      UnaryOperator.identity();
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = new Integer((-2724));
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong(677);
      String string0 = "yS9IxC<";
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.compareUnsigned(677, 677);
      VisualListModel visualListModel0 = new VisualListModel();
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.243951948479806
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Rectangle rectangle0 = new Rectangle((-1), (-1));
      float[] floatArray0 = new float[5];
      floatArray0[0] = (float) (-1);
      floatArray0[1] = (float) (-1);
      floatArray0[2] = (float) (-1);
      floatArray0[3] = (float) (-1);
      floatArray0[4] = (float) (-1);
      Kernel kernel0 = new Kernel((-1), (-1), floatArray0);
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      AffineTransform.getRotateInstance(0.0, (double) (-1.0F));
      Point point0 = new Point();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Could not find root logger information. Is this OK?");
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 0;
      intArray1[2] = (-1);
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = (-1);
      intArray1[6] = (-1);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-53));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-53)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.304960205575741
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = visualPageListItemArray0[0];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = visualPageListItemArray0[2];
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.trimToSize();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.containsAll(stack0);
      stack1.addAll((Collection<? extends VisualPageListItem>) stack0);
      stack0.clear();
      stack1.add(visualPageListItemArray0[0]);
      stack1.add(visualPageListItemArray0[0]);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack1.forEach(consumer0);
      stack0.add(visualPageListItemArray0[5]);
      stack1.stream();
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[3]);
      stack2.add(visualPageListItemArray0[1]);
      stack0.add(visualPageListItemArray0[0]);
      stack0.add(visualPageListItemArray0[4]);
      Boolean.valueOf("KsK`");
      stack2.retainAll(stack0);
      stack2.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1254), visualPageListItemArray0[3]);
      assertEquals(7, visualListModel0.getSize());
      
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel1.prependAllElements(stack2);
      assertEquals(2, visualListModel1.getSize());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.replaceAll(unaryOperator0);
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = FPXDescriptor.MAX_RESOLUTION;
      VisualListModel visualListModel1 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.prependAllElements(linkedHashSet0);
      assertEquals(1, visualListModel2.getSize());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity((-1341));
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      vector0.add((VisualPageListItem) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.setData(vector0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity(270);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q|F6");
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.449191882584089
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = visualPageListItemArray0[0];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = visualPageListItemArray0[2];
      visualPageListItemArray0[5] = null;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.containsAll(stack0);
      stack1.addAll((Collection<? extends VisualPageListItem>) stack0);
      stack1.add(visualPageListItemArray0[0]);
      stack1.stream();
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[3]);
      stack2.add(visualPageListItemArray0[1]);
      stack0.add(visualPageListItemArray0[0]);
      stack2.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1254), visualPageListItemArray0[3]);
      visualListModel0.elementChanged(visualPageListItemArray0[2]);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      visualListModel0.appendAllElements(stack0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel1.addElementAt((VisualPageListItem) null, 3);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.337827080898473
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.5317010678737124
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      visualListModel0.moveUpIndexes(intArray1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(0, 0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rendering class: [");
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.5453929420108388
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Rectangle rectangle0 = new Rectangle((-1), (-1), (-1), (-1));
      rectangle0.y = (-1);
      rectangle0.height = (-1);
      rectangle0.y = (-1);
      AffineTransform affineTransform0 = new AffineTransform((double) (-1), (double) (-1), (double) (-1), (double) (-1), (double) (-1), (double) (-1));
      Point point0 = new Point();
      Point2D.Double point2D_Double0 = new Point2D.Double((-1), (-1));
      Point2D.Double point2D_Double1 = new Point2D.Double((-1), 0);
      point2D_Double0.setLocation((-1.0), 10.0);
      Point2D.Double point2D_Double2 = new Point2D.Double(0, (-1));
      Point2D.Double point2D_Double3 = new Point2D.Double(0.0, 0.0);
      point0.translate((-1), 50000);
      Rectangle rectangle1 = new Rectangle(point0);
      point2D_Double3.x = (double) (-1);
      rectangle1.setFrameFromDiagonal((Point2D) point2D_Double1, (Point2D) point0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[8];
      intArray1[2] = 50000;
      point2D_Double1.y = (double) 0;
      rectangle0.width = 0;
      intArray1[5] = (-1);
      point2D_Double0.x = (double) (-1);
      intArray1[7] = (-1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.removeElements(0, (-1), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(1, 3170, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Rectangle rectangle0 = new Rectangle((-1), (-1), (-1), (-1));
      float[] floatArray0 = new float[5];
      rectangle0.y = (-1);
      floatArray0[1] = (float) (-1);
      floatArray0[2] = (float) (-1);
      rectangle0.height = (-1);
      rectangle0.y = (-1);
      Kernel kernel0 = new Kernel((-1), (-1), floatArray0);
      AffineTransform.getRotateInstance(0.0, (double) (-1.0F));
      Point point0 = new Point();
      Point2D.Double point2D_Double0 = new Point2D.Double((-1), (-1));
      Point2D.Double point2D_Double1 = new Point2D.Double((-1), 0);
      point2D_Double0.setLocation((-1.0), 10.0);
      Point2D.Double point2D_Double2 = new Point2D.Double(0, (-1));
      Point2D.Double point2D_Double3 = new Point2D.Double(0.0, 0.0);
      Point point1 = new Point((-1), 0);
      point1.translate((-1), 50000);
      Rectangle rectangle1 = new Rectangle(point1);
      rectangle1.setFrameFromDiagonal((Point2D) point2D_Double2, (Point2D) point2D_Double3);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements((int[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[3] = "";
      int[] intArray0 = new int[6];
      intArray0[4] = 2452;
      intArray0[1] = (-1827);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      intArray0[2] = 255;
      intArray0[3] = (-3591);
      intArray0[4] = 0;
      visualListModel0.moveDownIndex((-1827));
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-111);
      byteArray0[1] = (byte) (-111);
      byteArray0[2] = (byte) (-111);
      byteArray0[3] = (byte)1;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((byte)1, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Map size (0) must be >= 1
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-80);
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte) (-23);
      boolean boolean0 = true;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(984, (-1424), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(984) > toIndex(-1424)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(270, "T");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity((-1341));
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex((-679));
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      vector0.add(integer0);
      UnaryOperator.identity();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(688, 688);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = unaryOperator0.apply(integer4);
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong(688);
      Integer.compareUnsigned(688, 688);
      UnaryOperator.identity();
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      vector0.add(integer6);
      Integer.min((-5248), 688);
      Integer.compareUnsigned((-753), (-187));
      Integer integer8 = new Integer(688);
      unaryOperator0.apply(integer8);
      Integer integer9 = new Integer(688);
      vector0.add(integer5);
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      vector0.replaceAll(unaryOperator0);
      Integer integer10 = FPXDescriptor.MAX_RESOLUTION;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(1968, (Collection<VisualPageListItem>) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      assertEquals(0, stack0.size());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.3168084546157512
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.trimToSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-1212);
      intArray1[1] = (-23);
      intArray1[2] = 3144;
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel1.undeleteElements(intArray1);
      assertNotSame(intArray1, intArray0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.9594045983154567
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElementAt((VisualPageListItem) null, (-1));
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[0] = visualPageListItemArray0[0];
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = visualPageListItemArray0[2];
      visualPageListItemArray0[5] = null;
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.trimToSize();
      visualListModel0.addElement(visualPageListItemArray0[0]);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      stack1.containsAll(stack0);
      stack1.addAll((Collection<? extends VisualPageListItem>) stack0);
      stack0.clear();
      stack1.add(visualPageListItemArray0[0]);
      stack1.add(visualPageListItemArray0[0]);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      stack0.add(visualPageListItemArray0[5]);
      stack1.stream();
      Stack<VisualPageListItem> stack2 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[3]);
      boolean boolean0 = new Boolean(true);
      stack0.add(visualPageListItemArray0[0]);
      stack0.add(visualPageListItemArray0[4]);
      Boolean.valueOf("KsK`");
      stack2.retainAll(stack0);
      stack2.add((VisualPageListItem) null);
      visualListModel0.updateElementAt((-1254), visualPageListItemArray0[3]);
      visualListModel0.elementChanged(visualPageListItemArray0[2]);
      stack2.add(visualPageListItemArray0[2]);
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1, 1, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(688, 688);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("(;P$xMEQR#", 688);
      unaryOperator0.apply(integer1);
      Integer integer2 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer3 = unaryOperator0.apply(integer2);
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer integer5 = new Integer(688);
      Integer.compareUnsigned(688, 688);
      UnaryOperator.identity();
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      vector0.add(integer4);
      Integer integer7 = FPXDescriptor.MAX_RESOLUTION;
      Integer.compare(14, 27);
      unaryOperator0.apply(integer7);
      Integer integer8 = IIPResolutionDescriptor.MAX_RESOLUTION;
      vector0.add(integer3);
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      vector0.replaceAll(unaryOperator0);
      Stack<Integer> stack0 = new Stack<Integer>();
      stack0.trimToSize();
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer10 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer11 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getSize();
      visualListModel0.getSize();
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(2662, 2662, false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity((-1341));
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(4, 1, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      int[] intArray0 = new int[6];
      intArray0[1] = (-1827);
      intArray0[2] = 255;
      intArray0[4] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1827), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1827)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.7717125398561
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      visualListModel0.moveUpIndexes(intArray1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      visualListModel0.setData(visualPageListItemArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(0, 0, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Aa'7|Zb*V#= n[[3(");
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      Object object0 = visualListModel0.getElementAt(50000);
      assertNull(object0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator.identity();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(688, 688);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("(;P$xMEQR#", 688);
      Integer integer2 = new Integer(688);
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer4 = unaryOperator0.apply(integer3);
      Integer integer5 = new Integer(688);
      unaryOperator0.apply(integer3);
      Integer.compareUnsigned(688, 688);
      UnaryOperator.identity();
      Integer integer6 = JLayeredPane.DEFAULT_LAYER;
      vector0.add(integer0);
      Integer integer7 = FPXDescriptor.MAX_RESOLUTION;
      Integer.toUnsignedLong((-4830));
      Integer integer8 = new Integer(688);
      unaryOperator0.apply(integer7);
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends Integer>) function0);
      Integer.getInteger("(;P$xMEQR#", 0);
      Integer integer9 = IIPResolutionDescriptor.MAX_RESOLUTION;
      vector0.add(integer4);
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.ensureCapacity((-1341));
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-3118), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      treeSet0.containsAll(vector0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) "FT/bU*#i/w");
      Object object0 = new Object();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.or(predicate1);
      Predicate<Object> predicate4 = predicate1.and(predicate2);
      Predicate<VisualPageListItem> predicate5 = predicate0.or(predicate4);
      Predicate<VisualPageListItem> predicate6 = predicate5.and(predicate3);
      predicate6.negate();
      TreeSet<VisualPageListItem> treeSet2 = new TreeSet<VisualPageListItem>();
      predicate3.and(predicate2);
      treeSet2.removeIf(predicate6);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements(250, (Collection<VisualPageListItem>) treeSet1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      Vector<DefaultEditorKit.PasteAction> vector0 = new Vector<DefaultEditorKit.PasteAction>();
      treeSet0.containsAll(vector0);
      TreeSet<VisualPageListItem> treeSet1 = new TreeSet<VisualPageListItem>((SortedSet<VisualPageListItem>) treeSet0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Predicate<Object> predicate1 = Predicate.isEqual((Object) locale_FilteringMode1);
      predicate1.test(visualListModel0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = Predicate.isEqual((Object) locale_FilteringMode0);
      Predicate<Object> predicate4 = predicate2.and(predicate3);
      Predicate<Object> predicate5 = predicate2.or(predicate1);
      Predicate<Object> predicate6 = predicate4.or(predicate5);
      predicate3.and(predicate5);
      predicate0.or(predicate1);
      Predicate<VisualPageListItem> predicate7 = predicate0.negate();
      predicate7.and(predicate4);
      predicate0.negate();
      predicate6.and(predicate3);
      treeSet0.removeIf(predicate2);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) treeSet1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.trimToSize();
      VisualListModel visualListModel0 = new VisualListModel();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      integerArray0[1] = integer1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      integerArray0[3] = integer3;
      int int0 = 4;
      Integer integer4 = Integer.valueOf(4);
      integerArray0[4] = integer4;
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = (int) integerArray0[1];
      intArray0[2] = int0;
      intArray0[3] = (int) integerArray0[1];
      intArray0[4] = int0;
      intArray0[5] = 8;
      intArray0[6] = (int) integerArray0[1];
      intArray0[7] = 255;
      intArray0[8] = int0;
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super DefaultEditorKit.PasteAction, ? extends Integer>) function0);
      Function<Object, Integer> function1 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function1);
      vector0.trimToSize();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1, 1, true);
      assertNull(collection0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(91);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(479);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.362843374280337
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      Rectangle rectangle0 = new Rectangle((-1), (-1));
      rectangle0.y = (-1);
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) (-1), (double) (-1));
      Point point0 = new Point();
      Point2D.Double point2D_Double0 = new Point2D.Double((-2511.145737600429), (-1));
      affineTransform0.deltaTransform((Point2D) point0, (Point2D) point2D_Double0);
      Point2D.Double point2D_Double1 = new Point2D.Double(-0.0, -0.0);
      point2D_Double1.setLocation(0.0, (double) (-1));
      Point point1 = new Point((-1), 0);
      point2D_Double0.y = (-1.0);
      point1.translate(0, 49986);
      Rectangle rectangle1 = new Rectangle(point1);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = (-1);
      intArray1[1] = 0;
      intArray1[2] = (-1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.elementsChanged();
      visualListModel0.undeleteElements(intArray1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.605676463181275
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      int[] intArray0 = new int[1];
      visualListModel0.reverseElements(intArray0);
      int[] intArray1 = new int[5];
      visualListModel0.moveUpIndexes(intArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">@FF9^d;h4");
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayDeque0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel0.removeElements(0, 0, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "q~]HaOc8Q");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      visualListModel0.moveUpIndexes(intArray1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "], ~oev2l =f[");
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator.identity();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      Integer.max(688, 688);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      unaryOperator0.apply(integer1);
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer integer3 = unaryOperator0.apply(integer2);
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong(688);
      Integer.compareUnsigned(688, 688);
      UnaryOperator.identity();
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      vector0.add(integer4);
      Integer integer6 = new Integer(688);
      unaryOperator0.apply(integer6);
      Integer integer7 = new Integer(688);
      vector0.add(integer3);
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      vector0.replaceAll(unaryOperator0);
      Integer integer8 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer9 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer10 = JLayeredPane.POPUP_LAYER;
      Integer integer11 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[7];
      intArray0[1] = 1;
      intArray0[2] = 3305;
      visualListModel0.subList(3305, 1);
      intArray0[3] = 429;
      intArray0[5] = (-1694);
      intArray0[6] = (-1694);
      visualListModel0.moveUpIndex(1);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)7;
      byteArray1[3] = (byte)1;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(11, 678, byteArray1, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      unaryOperator0.apply(integer0);
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      vector0.replaceAll(unaryOperator0);
      vector0.trimToSize();
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.prependAllElements((Collection<VisualPageListItem>) null);
      assertNotSame(visualListModel2, visualListModel0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      vector0.add(integer0);
      UnaryOperator.identity();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(688, 688);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = unaryOperator0.apply(integer4);
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong(688);
      Integer.compareUnsigned(688, 688);
      UnaryOperator.identity();
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      vector0.add(integer6);
      Integer.min((-5248), 688);
      Integer.compareUnsigned((-753), (-187));
      Integer integer8 = new Integer(688);
      unaryOperator0.apply(integer8);
      Integer integer9 = new Integer(688);
      vector0.add(integer5);
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function0);
      vector0.replaceAll(unaryOperator0);
      Integer integer10 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer11 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer12 = JLayeredPane.POPUP_LAYER;
      Integer integer13 = FPXDescriptor.MAX_RESOLUTION;
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-5248), (-1120), false);
      assertNull(collection0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-3433), (-3433));
      visualListModel0.moveDownIndex(2332);
      byte[] byteArray0 = new byte[0];
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel((-3120), 2859, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of pixel bits must be > 0
         //
         verifyException("java.awt.image.ColorModel", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      vector0.add(integer0);
      UnaryOperator.identity();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(677, 677);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      Integer integer5 = new Integer((-2724));
      Integer integer6 = JLayeredPane.MODAL_LAYER;
      Integer.toUnsignedLong(677);
      Integer integer7 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.compareUnsigned(677, 677);
      UnaryOperator.identity();
      Integer integer8 = JLayeredPane.POPUP_LAYER;
      vector0.add(integer6);
      Integer.min((-5248), 677);
      Integer.compareUnsigned((-2724), 0);
      Integer integer9 = JLayeredPane.PALETTE_LAYER;
      Integer integer10 = JLayeredPane.PALETTE_LAYER;
      Integer integer11 = new Integer(2240);
      Integer integer12 = JLayeredPane.DEFAULT_LAYER;
      vector0.add(integer12);
      vector0.replaceAll(unaryOperator0);
      Integer integer13 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer14 = JLayeredPane.DRAG_LAYER;
      Integer integer15 = JLayeredPane.PALETTE_LAYER;
      Integer integer16 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.prependAllElements(linkedHashSet0);
      assertEquals(0, linkedHashSet0.size());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.trimToSize();
      DefaultComboBoxModel<Integer> defaultComboBoxModel0 = new DefaultComboBoxModel<Integer>(vector0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(defaultComboBoxModel0);
      VisualListModel visualListModel0 = new VisualListModel();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      VisualListModel visualListModel1 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel1.getElementAt((-9));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener2 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener1);
      HierarchyBoundsListener hierarchyBoundsListener3 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener4 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener5 = AWTEventMulticaster.add(hierarchyBoundsListener1, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener6 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener2);
      HierarchyBoundsListener hierarchyBoundsListener7 = AWTEventMulticaster.add(hierarchyBoundsListener5, hierarchyBoundsListener6);
      AWTEventMulticaster.remove(hierarchyBoundsListener5, hierarchyBoundsListener4);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      HierarchyBoundsListener hierarchyBoundsListener8 = AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener3);
      AWTEventMulticaster.remove(hierarchyBoundsListener2, hierarchyBoundsListener4);
      AWTEventMulticaster.remove(hierarchyBoundsListener8, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, hierarchyBoundsListener7);
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(1120);
      assertNull(object0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator.identity();
      Integer integer0 = FPXDescriptor.MAX_RESOLUTION;
      Integer.max(688, 688);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer1 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.getInteger("(;P$xMEQR#", 688);
      Integer integer2 = new Integer(688);
      Integer integer3 = IIPResolutionDescriptor.MAX_RESOLUTION;
      unaryOperator0.apply(integer3);
      Integer integer4 = new Integer(688);
      unaryOperator0.apply(integer3);
      Integer.compareUnsigned(688, 688);
      UnaryOperator.identity();
      Integer integer5 = JLayeredPane.DEFAULT_LAYER;
      vector0.add(integer0);
      Integer integer6 = FPXDescriptor.MAX_RESOLUTION;
      Integer.toUnsignedLong((-4830));
      Integer integer7 = new Integer(688);
      unaryOperator0.apply(integer6);
      Function<String, Integer> function0 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<String, Integer> function1 = (Function<String, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super String, ? extends Integer>) function1);
      Integer integer8 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer integer9 = IIPResolutionDescriptor.MAX_RESOLUTION;
      vector0.add(integer9);
      Function<Object, Integer> function2 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super Object, ? extends Integer>) function2);
      Integer integer10 = new Integer(688);
      Integer integer11 = JLayeredPane.PALETTE_LAYER;
      Integer integer12 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer13 = JLayeredPane.POPUP_LAYER;
      Integer integer14 = JLayeredPane.DEFAULT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer3;
      integerArray0[1] = integer0;
      integerArray0[4] = integer0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-384), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -384
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.iterator();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      vector0.replaceAll(unaryOperator0);
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = JLayeredPane.POPUP_LAYER;
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer[] integerArray0 = new Integer[9];
      integerArray0[0] = integer3;
      integerArray0[3] = integer0;
      integerArray0[4] = integer0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-384), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -384
         //
         verifyException("java.util.Vector", e);
      }
  }
}
