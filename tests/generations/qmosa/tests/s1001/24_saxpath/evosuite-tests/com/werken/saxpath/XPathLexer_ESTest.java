/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 05:28:19 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.582006443044006
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.isIdentifierStartChar('[');
      xPathLexer0.or();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierStartChar('[');
      xPathLexer0.consume((-1430));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.9676508877973458
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer2.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("&/u?0&YrcBQ");
      Token token3 = xPathLexer3.comma();
      assertEquals("&", token3.getTokenText());
      
      xPathLexer3.minus();
      Token token4 = xPathLexer3.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer3.not();
      assertEquals("?", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.consume(3);
      xPathLexer3.or();
      xPathLexer4.nextToken();
      xPathLexer3.identifier();
      Token token6 = xPathLexer4.getPreviousToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.minus();
      Token token7 = xPathLexer3.minus();
      assertEquals("&", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer5.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer2.literal();
      Token token10 = xPathLexer5.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer0.comma();
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer1.leftParen();
      Token token12 = xPathLexer2.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0786346885401072
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals("a", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.literal();
      assertNull(token4);
      
      xPathLexer3.identifier();
      XPathLexer xPathLexer5 = new XPathLexer("u06hb6r?Vp,h.h^/V");
      Token token5 = xPathLexer5.plus();
      assertEquals("u", token5.getTokenText());
      
      xPathLexer5.leftParen();
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("t", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer5.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("6h", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("sy");
      Token token9 = xPathLexer6.doubleColon();
      assertEquals("sy", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("h.XPathLexer", token10.getTokenText());
      
      Token token11 = xPathLexer6.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer5.nextToken();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer4.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token14 = xPathLexer8.equals();
      assertEquals(21, token14.getTokenType());
      
      xPathLexer8.mod();
      Token token15 = xPathLexer4.comma();
      assertEquals(32, token15.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.0881908159886837
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N8P+");
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-1760));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7970468309383838
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.minus();
      assertEquals("c", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("KVisu!;aj)]");
      xPathLexer2.slashes();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("KVisu!;aj)]");
      Token token2 = xPathLexer3.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer1.getPreviousToken();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer3.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer3.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("isu", token4.getTokenText());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      xPathLexer6.leftParen();
      xPathLexer6.div();
      Token token6 = xPathLexer5.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals("o", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8638207912490947
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.minus();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.dots();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("KVisu!;aj)]");
      xPathLexer2.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer("KVisu!;aj)]");
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.and();
      xPathLexer5.setPreviousToken(token0);
      xPathLexer2.getPreviousToken();
      xPathLexer1.relationalOperator();
      xPathLexer0.at();
      XPathLexer xPathLexer6 = new XPathLexer("<6^2dtqW");
      xPathLexer6.leftBracket();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.and();
      xPathLexer0.slashes();
      XPathLexer xPathLexer8 = new XPathLexer("r6_%Un$9^U03:.s,X");
      xPathLexer7.getPreviousToken();
      xPathLexer5.and();
      xPathLexer6.nextToken();
      xPathLexer8.doubleColon();
      xPathLexer2.div();
      xPathLexer0.pipe();
      Token token1 = xPathLexer2.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.160454945377586
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer1.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.or();
      xPathLexer3.and();
      xPathLexer1.consume(1);
      xPathLexer0.relationalOperator();
      xPathLexer1.minus();
      Token token0 = xPathLexer1.minus();
      token0.toString();
      xPathLexer3.setPreviousToken(token0);
      xPathLexer1.getPreviousToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.at();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer("82.%0(\"<P)j_JaL");
      xPathLexer3.comma();
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer7 = new XPathLexer("82.%0(\"<P)j_JaL");
      xPathLexer7.slashes();
      xPathLexer1.getPreviousToken();
      xPathLexer2.and();
      xPathLexer6.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer1.div();
      xPathLexer7.LA(1);
      xPathLexer7.doubleColon();
      xPathLexer6.nextToken();
      Token token1 = xPathLexer3.or();
      assertNull(token1);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.235509635647939
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("8h^p8g&=[DS))(,6if4");
      xPathLexer1.at();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.or();
      xPathLexer1.colon();
      xPathLexer0.or();
      xPathLexer1.and();
      xPathLexer1.number();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer0.getPreviousToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("3h[(>${'-y]eA7");
      xPathLexer2.leftBracket();
      xPathLexer1.comma();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer3.slashes();
      xPathLexer1.getPreviousToken();
      xPathLexer1.and();
      xPathLexer2.nextToken();
      xPathLexer3.identifier();
      xPathLexer1.doubleColon();
      xPathLexer1.div();
      xPathLexer3.equals();
      Token token1 = xPathLexer2.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7702120892310353
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>=0");
      xPathLexer0.star();
      xPathLexer0.setXPath("Vbg%VxJ5");
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.div();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer0.plus();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.or();
      xPathLexer3.plus();
      XPathLexer xPathLexer5 = new XPathLexer("<I@k/aB;{_lA*&zY1%");
      xPathLexer5.star();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.dollar();
      xPathLexer3.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer3.not();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.relationalOperator();
      xPathLexer7.nextToken();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer6.equals();
      xPathLexer8.literal();
      xPathLexer1.comma();
      Token token0 = xPathLexer3.or();
      assertNull(token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.594452834594821
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("&dI;;6\"[(Mj}Yvaar");
      xPathLexer1.leftParen();
      xPathLexer1.nextToken();
      xPathLexer0.star();
      xPathLexer1.dollar();
      xPathLexer0.operatorName();
      xPathLexer1.not();
      xPathLexer1.leftParen();
      xPathLexer1.operatorName();
      String string0 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8653166416107283
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("F^h0'&0[Y;-J^e");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("F", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.star();
      Token token2 = xPathLexer0.dollar();
      assertEquals("h", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("`");
      xPathLexer0.plus();
      Token token4 = xPathLexer1.star();
      assertEquals("`", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("`");
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.at();
      Token token7 = xPathLexer0.plus();
      assertEquals("&", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(30, token8.getTokenType());
      assertEquals("0", token8.getTokenText());
      
      xPathLexer4.pipe();
      xPathLexer1.identifierOrOperatorName();
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.pipe();
      assertEquals(17, token10.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1774898011677855
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("RaOZz");
      xPathLexer1.setXPath("RaOZz");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("RaOZz", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.not();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("9eYlB0;e{)i");
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer1.slashes();
      xPathLexer1.and();
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer2.number();
      assertEquals(30, token8.getTokenType());
      assertEquals("9", token8.getTokenText());
      
      xPathLexer2.setPreviousToken(token1);
      assertEquals(11, token1.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("e", token12.getTokenText());
      
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      assertEquals("Yl", token13.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.div();
      Token token14 = xPathLexer1.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer4.rightBracket();
      assertEquals(4, token15.getTokenType());
      
      Token token16 = xPathLexer2.comma();
      assertEquals(32, token16.getTokenType());
      assertEquals("B", token16.getTokenText());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9492488538389714
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.getXPath();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.or();
      xPathLexer1.and();
      xPathLexer2.consume((-1961));
      // Undeclared exception!
      try { 
        xPathLexer2.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.783925309145645
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(13);
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("0$N<p");
      xPathLexer2.plus();
      xPathLexer0.plus();
      xPathLexer2.star();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer("[ (4) (c)");
      xPathLexer1.nextToken();
      xPathLexer1.dollar();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("[ (4) (c)");
      xPathLexer2.consume();
      xPathLexer2.endPosition();
      XPathLexer xPathLexer5 = new XPathLexer("ze;s6$Z[(~");
      xPathLexer3.at();
      xPathLexer5.nextToken();
      xPathLexer1.equals();
      XPathLexer xPathLexer6 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      xPathLexer0.rightParen();
      xPathLexer4.mod();
      Token token2 = xPathLexer2.or();
      assertNull(token2);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.6400783874220473
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("XvGZ");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.not();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer2.div();
      xPathLexer3.whitespace();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("-");
      xPathLexer5.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer("-");
      xPathLexer7.nextToken();
      xPathLexer6.not();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.literal();
      xPathLexer0.comma();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.and();
      XPathLexer xPathLexer10 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer10.equals();
      Token token1 = xPathLexer8.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0530588866738304
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer0.plus();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("cn");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer2.star();
      xPathLexer2.dollar();
      xPathLexer1.notEquals();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("[*,91TnD");
      xPathLexer3.not();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer2.comma();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer("h<J:7aD+kC");
      xPathLexer4.slashes();
      xPathLexer3.equals();
      Token token0 = xPathLexer5.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.176314919595938
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer1.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("XvGZ");
      xPathLexer3.and();
      xPathLexer2.and();
      xPathLexer0.div();
      xPathLexer1.whitespace();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.plus();
      xPathLexer2.plus();
      xPathLexer3.star();
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      xPathLexer3.consume();
      xPathLexer1.endPosition();
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer1.rightParen();
      xPathLexer2.star();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.consume((-220));
      xPathLexer5.pipe();
      // Undeclared exception!
      try { 
        xPathLexer5.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.1172579293431246
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("8@m{}'+");
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals("8", token3.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      Token token4 = xPathLexer1.number();
      assertEquals("", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer3.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.identifierOrOperatorName();
      assertNotNull(token8);
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer5 = new XPathLexer("8@m{}'+");
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer("8@m{}'+");
      Token token10 = xPathLexer6.nextToken();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.005224286708896
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      xPathLexer0.star();
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("C{>#Z{");
      xPathLexer0.div();
      xPathLexer1.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("cn");
      xPathLexer3.plus();
      xPathLexer1.star();
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("]!}(t D|sI=-");
      xPathLexer0.operatorName();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("ml88&CWF1b0Qp");
      xPathLexer5.or();
      xPathLexer0.slashes();
      xPathLexer5.currentPosition();
      xPathLexer3.nextToken();
      xPathLexer2.rightParen();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.minus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer4.relationalOperator();
      xPathLexer6.pipe();
      xPathLexer6.colon();
      Token token0 = xPathLexer2.div();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3146057008369567
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.slashes();
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer1.minus();
      assertEquals("o", token3.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.dots();
      assertEquals(".", token4.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("XvGZ");
      xPathLexer3.and();
      xPathLexer2.and();
      xPathLexer0.div();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token6 = xPathLexer0.plus();
      assertEquals("w", token6.getTokenText());
      
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      assertEquals("er", token8.getTokenText());
      
      Token token9 = xPathLexer3.star();
      assertEquals("X", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      xPathLexer2.currentPosition();
      Token token12 = xPathLexer3.nextToken();
      assertEquals("vGZ", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer3.rightParen();
      assertEquals(2, token13.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token14 = xPathLexer2.minus();
      assertEquals(6, token14.getTokenType());
      
      xPathLexer3.identifierOrOperatorName();
      xPathLexer1.relationalOperator();
      Token token15 = xPathLexer0.pipe();
      assertEquals("k", token15.getTokenText());
      assertEquals(17, token15.getTokenType());
      
      Token token16 = xPathLexer0.colon();
      assertEquals("e", token16.getTokenText());
      assertEquals(18, token16.getTokenType());
      
      xPathLexer2.div();
      Token token17 = xPathLexer3.leftParen();
      assertEquals(1, token17.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.077738926363104
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("F^h0'&0[Y;-J^e");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("'", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("&", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("0", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.setPreviousToken(token1);
      assertEquals(23, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token7 = xPathLexer0.whitespace();
      assertEquals("", token7.getTokenText());
      assertEquals((-2), token7.getTokenType());
      
      xPathLexer2.setXPath("p*\"{MOWD\"Rz^_KI){f>");
      xPathLexer0.nextToken();
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer0.at();
      Token token9 = xPathLexer0.nextToken();
      assertEquals(";-J^e", token9.getTokenText());
      
      xPathLexer0.leftParen();
      Token token10 = xPathLexer2.leftParen();
      assertEquals(1, token10.getTokenType());
      assertEquals("*", token10.getTokenText());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      assertEquals("-", token12.getTokenText());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.0773042221817692
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.comma();
      token1.toString();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("[ (32) (k)");
      xPathLexer1.comma();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer1.operatorName();
      xPathLexer4.and();
      xPathLexer3.nextToken();
      xPathLexer4.doubleColon();
      xPathLexer0.div();
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (c)");
      // Undeclared exception!
      try { 
        xPathLexer5.LA((-1716));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.957894356725961
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer(">(65)u {{p$GEx2No[");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer1.relationalOperator();
      xPathLexer0.dots();
      xPathLexer1.mod();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer(">(65)u {{p$GEx2No[");
      xPathLexer0.plus();
      xPathLexer1.plus();
      xPathLexer3.star();
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer(">(65)u {{p$GEx2No[");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dollar();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer1.endPosition();
      XPathLexer xPathLexer7 = new XPathLexer(">(65)u {{p$GEx2No[");
      xPathLexer2.at();
      xPathLexer0.nextToken();
      xPathLexer6.equals();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer3.rightParen();
      xPathLexer3.mod();
      Token token0 = xPathLexer6.or();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.767146673958897
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.minus();
      assertEquals("c", token0.getTokenText());
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("KVisu!;aj)]");
      XPathLexer xPathLexer3 = new XPathLexer("KVisu!;aj)]");
      Token token1 = xPathLexer3.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("<6^2dtqW");
      Token token2 = xPathLexer5.leftBracket();
      assertEquals("<", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.relationalOperator();
      xPathLexer3.nextToken();
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("KVisu", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token5 = xPathLexer7.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer5.comma();
      assertEquals("6", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer7.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.208010783839566
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("<6^2dtqW");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token8 = xPathLexer2.slashes();
      assertEquals("6", token8.getTokenText());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer2.getPreviousToken();
      xPathLexer0.and();
      Token token10 = xPathLexer1.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.identifier();
      assertEquals("", token11.getTokenText());
      
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("^2", token12.getTokenText());
      
      xPathLexer2.div();
      Token token13 = xPathLexer2.equals();
      assertEquals("d", token13.getTokenText());
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.1605480972859077
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.consume((-1932));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1032594862428047
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("j?-kT?");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer2.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.dollar();
      assertEquals("j", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer0.doubleColon();
      xPathLexer2.nextToken();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer1.doubleColon();
      assertEquals("?-", token11.getTokenText());
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.div();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer6.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer4.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2684601846350754
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token2);
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("NOAo#X#>5M");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.number();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("NOAo#X#>5M");
      Token token4 = xPathLexer3.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      Token token5 = xPathLexer5.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("NOAo", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer4.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("N", token8.getTokenText());
      
      Token token9 = xPathLexer2.minus();
      assertEquals("#", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer3.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer3.literal();
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1216156502984185
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals("C", token0.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("{>#Z{", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("{", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      Token token3 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token3);
      assertEquals(">", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("C{>#Z{");
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("C{>#Z{");
      xPathLexer0.and();
      xPathLexer2.comma();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.identifier();
      assertEquals("Z", token5.getTokenText());
      
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.minus();
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("{", token7.getTokenText());
      
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer4.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer1.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer4.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer4.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer1.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8571842298806465
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token1 = xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.setPreviousToken(token1);
      assertEquals(5, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(13);
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      xPathLexer1.leftParen();
      xPathLexer1.and();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer2.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.consume(6);
      XPathLexer xPathLexer4 = new XPathLexer("[ (4) (c)");
      Token token5 = xPathLexer4.slashes();
      assertEquals("[", token5.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer3.getPreviousToken();
      xPathLexer1.and();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("Lexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer0.div();
      char char0 = xPathLexer1.LA(13);
      assertEquals('\uFFFF', char0);
      
      Token token9 = xPathLexer4.not();
      assertEquals(" ", token9.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1819618487758037
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      xPathLexer2.div();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("[");
      xPathLexer4.plus();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("GxN\"EWhgAEV+:aA;^");
      Token token3 = xPathLexer5.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("G", token3.getTokenText());
      
      Token token4 = xPathLexer5.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer5.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("\"", token6.getTokenText());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(".w", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      xPathLexer5.nextToken();
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer5.nextToken();
      assertEquals("EWhgAEV+:aA;^", token10.getTokenText());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer2.equals();
      assertEquals("[", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
      
      xPathLexer3.literal();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.comma();
      xPathLexer4.or();
      Token token13 = xPathLexer7.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9692354698781864
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("m", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.dots();
      assertEquals(14, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token5 = xPathLexer0.number();
      assertEquals(31, token5.getTokenType());
      
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("v]\"RE5=,.lwS$Zkk9m");
      Token token6 = xPathLexer3.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("v", token6.getTokenText());
      
      Token token7 = xPathLexer2.leftParen();
      assertEquals(1, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("u)tC/\"5`bLp3ia()fsz");
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("u", token8.getTokenText());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("r", token9.getTokenText());
      
      xPathLexer2.notEquals();
      XPathLexer xPathLexer5 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      Token token10 = xPathLexer3.nextToken();
      assertEquals(4, token10.getTokenType());
      assertEquals("]", token10.getTokenText());
      
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(":w.Bp9zrj;`j");
      xPathLexer6.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token12 = xPathLexer8.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer8.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer5.doubleColon();
      assertEquals(19, token14.getTokenType());
      assertEquals("co", token14.getTokenText());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2774308462698576
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      Token token0 = xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.setPreviousToken(token0);
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.whitespace();
      xPathLexer0.number();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer2.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.at();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      xPathLexer0.div();
      // Undeclared exception!
      try { 
        xPathLexer5.LA((-3243));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6583903222893612
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      Token token0 = xPathLexer1.rightBracket();
      assertEquals("7", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.leftBracket();
      xPathLexer2.leftBracket();
      xPathLexer1.or();
      xPathLexer3.and();
      xPathLexer1.consume(1);
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.minus();
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer2.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      xPathLexer2.plus();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("!", token4.getTokenText());
      
      xPathLexer3.consume();
      Token token5 = xPathLexer1.at();
      assertEquals(">", token5.getTokenText());
      
      Token token6 = xPathLexer3.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.leftParen();
      assertEquals(1, token9.getTokenType());
      
      xPathLexer2.div();
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3751508220082735
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      xPathLexer1.or();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.consume((-1854));
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer("[ (4) (c)");
      xPathLexer4.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.star();
      xPathLexer4.comma();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.plus();
      xPathLexer6.plus();
      xPathLexer2.star();
      xPathLexer5.dollar();
      // Undeclared exception!
      try { 
        xPathLexer3.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2729329708776773
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.setXPath("F^h0'&0[Y;-J^e");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals("c", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.at();
      assertEquals("'", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("F^h0'&0[Y;-J^e");
      xPathLexer0.leftBracket();
      Token token7 = xPathLexer0.comma();
      assertEquals("0", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token8);
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.getPreviousToken();
      xPathLexer1.and();
      Token token10 = xPathLexer0.nextToken();
      assertEquals(3, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
      
      xPathLexer1.identifier();
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer1.div();
      Token token12 = xPathLexer0.equals();
      assertEquals("Y", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.145654677961904
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.sapath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("t", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals("h.", token1.getTokenText());
      assertEquals(14, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.sapath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.literal();
      Token token4 = xPathLexer3.identifier();
      assertEquals("com.werken.sapath.XPathLexer", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("u06hb6r?Vp,h.`^/V");
      Token token5 = xPathLexer5.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer5.leftParen();
      assertEquals("0", token6.getTokenText());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("X", token8.getTokenText());
      
      xPathLexer5.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("sy");
      xPathLexer3.mod();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("PathLexer", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer6.not();
      assertEquals("s", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.sapath.XPathLexer");
      Token token11 = xPathLexer3.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer4.div();
      Token token12 = xPathLexer4.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer8.pipe();
      assertEquals(17, token13.getTokenType());
      
      xPathLexer3.div();
      Token token14 = xPathLexer5.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6564305544003408
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer(",kAk/[{h^>oq=");
      Token token0 = xPathLexer2.plus();
      assertEquals(",", token0.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.and();
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer3.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer2.dollar();
      assertEquals("k", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("Ak", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer3.not();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.div();
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.8772164702012135
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.at();
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer0.div();
      Token token1 = xPathLexer1.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("th.XPathLexer", token2.getTokenText());
      
      Token token3 = xPathLexer1.plus();
      assertEquals("o", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("e)\"I]");
      xPathLexer2.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      
      Token token4 = xPathLexer2.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      xPathLexer0.setXPath("e)\"I]");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(")", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer2.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.1166556587101755
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("w", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer("[ (4) (c)");
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.literal();
      assertEquals(27, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("erken.saxpath.XPathLexer", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[yp^')");
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals("c", token10.getTokenText());
      assertEquals(1, token10.getTokenType());
      
      Token token11 = xPathLexer4.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
      
      Token token12 = xPathLexer4.dollar();
      assertEquals("y", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      xPathLexer4.notEquals();
      xPathLexer2.doubleColon();
      Token token13 = xPathLexer2.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      xPathLexer0.not();
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.div();
      Token token15 = xPathLexer1.equals();
      assertEquals(")", token15.getTokenText());
      
      Token token16 = xPathLexer2.pipe();
      assertEquals(17, token16.getTokenType());
      
      xPathLexer1.div();
      Token token17 = xPathLexer5.minus();
      assertEquals(6, token17.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.172669169574973
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("F^h0'&0[Y;-J^e");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.star();
      assertEquals("^", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("'", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("&", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.rightParen();
      xPathLexer0.and();
      Token token7 = xPathLexer0.slashes();
      assertEquals("0", token7.getTokenText());
      
      xPathLexer0.and();
      xPathLexer1.setPreviousToken(token6);
      assertEquals("c", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals("o", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer3.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token11.getTokenText());
      
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token13 = xPathLexer0.nextToken();
      assertEquals("Y;-J^e", token13.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token14 = xPathLexer0.doubleColon();
      assertEquals("Y;", token14.getTokenText());
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7508566440476607
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("KVisu!;aj)]");
      Token token1 = xPathLexer3.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("<6^2dtqW");
      Token token2 = xPathLexer5.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token3 = xPathLexer3.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("Vi", token3.getTokenText());
      
      xPathLexer6.nextToken();
      Token token4 = xPathLexer2.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token5 = xPathLexer3.nextToken();
      assertEquals("su", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer8.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer2.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer5.comma();
      assertEquals("6", token9.getTokenText());
      
      xPathLexer3.or();
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6488201174715882
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.consume((-1274));
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.star();
      XPathLexer xPathLexer5 = new XPathLexer("Gv\"5WD6{j8#04n/<i");
      xPathLexer4.slashes();
      XPathLexer xPathLexer6 = new XPathLexer("?(IuN.j:V]%`Q y");
      xPathLexer2.currentPosition();
      xPathLexer4.nextToken();
      xPathLexer4.equals();
      xPathLexer5.rightParen();
      xPathLexer4.mod();
      Token token0 = xPathLexer5.or();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9653852451514453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer1.slashes();
      xPathLexer1.rightBracket();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.or();
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer3.minus();
      xPathLexer2.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.plus();
      xPathLexer2.plus();
      xPathLexer3.not();
      xPathLexer1.relationalOperator();
      xPathLexer1.dollar();
      xPathLexer1.nextToken();
      xPathLexer1.consume();
      xPathLexer0.endPosition();
      xPathLexer1.at();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.equals();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.comma();
      Token token0 = xPathLexer6.or();
      assertNull(token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8632618536442296
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("RaOZz");
      xPathLexer1.setXPath("RaOZz");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer1.dollar();
      xPathLexer0.operatorName();
      xPathLexer1.not();
      xPathLexer0.identifier();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("RaOZz");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer2.slashes();
      xPathLexer2.and();
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer("<6^2dtqW");
      xPathLexer4.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("<6^2dtqW");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.relationalOperator();
      xPathLexer5.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.div();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.equals();
      xPathLexer4.pipe();
      xPathLexer8.div();
      xPathLexer5.minus();
      Token token2 = xPathLexer6.pipe();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.118881742150045
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("RaOZz");
      xPathLexer1.setXPath("RaOZz");
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("R", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("RaOZz");
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer2.slashes();
      assertEquals("R", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer2.and();
      Token token6 = xPathLexer2.number();
      xPathLexer1.setPreviousToken(token6);
      Token token7 = xPathLexer1.getPreviousToken();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("<6^2dtqW");
      Token token9 = xPathLexer4.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals("<", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("<6^2dtqW");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer5.relationalOperator();
      assertEquals(7, token10.getTokenType());
      assertEquals("<", token10.getTokenText());
      
      xPathLexer0.nextToken();
      Token token11 = xPathLexer2.nextToken();
      assertEquals("aOZz", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer2.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer2.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer3.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.836555997545564
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.2611907868634167
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      Token token2 = xPathLexer1.minus();
      assertEquals("o", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      Token token3 = xPathLexer2.dots();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.number();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer4.rightParen();
      assertEquals("c", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer2.leftBracket();
      xPathLexer3.slashes();
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.getPreviousToken();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.at();
      xPathLexer5.leftBracket();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.comma();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertEquals(".werken.saxpath.XPathLexer", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer6.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer4.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token13 = xPathLexer8.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("c", token13.getTokenText());
      
      Token token14 = xPathLexer0.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.956247118191747
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.setXPath("F^h0'&0[Y;-J^e");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.star();
      assertEquals("^", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("h", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("0", token3.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.rightParen();
      Token token5 = xPathLexer0.slashes();
      assertEquals("'", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer1.setPreviousToken(token4);
      Token token6 = xPathLexer1.getPreviousToken();
      assertEquals(2, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer3.comma();
      assertEquals("c", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals("om.werken.saxpath.XPathLexer", token10.getTokenText());
      
      Token token11 = xPathLexer3.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.getPreviousToken();
      assertEquals(15, token12.getTokenType());
      assertEquals("F", token12.getTokenText());
      
      xPathLexer2.and();
      xPathLexer0.nextToken();
      Token token13 = xPathLexer1.doubleColon();
      assertEquals("m.", token13.getTokenText());
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer2.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.9183535546680783
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.minus();
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("J", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("T5$MXp/U");
      xPathLexer2.plus();
      Token token3 = xPathLexer0.star();
      assertEquals(":", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("T5$MXp/U");
      Token token4 = xPathLexer3.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("T", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("T5$MXp/U");
      xPathLexer2.or();
      xPathLexer1.consume();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("5", token6.getTokenText());
      
      Token token7 = xPathLexer4.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.pipe();
      assertEquals("$", token8.getTokenText());
      
      xPathLexer2.LA(1);
      Token token9 = xPathLexer4.equals();
      assertEquals("$", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.7832765229968373
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer1.star();
      XPathLexer xPathLexer3 = new XPathLexer("0$N<p");
      xPathLexer2.plus();
      xPathLexer1.plus();
      xPathLexer3.star();
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("0$N<p");
      xPathLexer3.nextToken();
      xPathLexer4.dollar();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.endPosition();
      XPathLexer xPathLexer6 = new XPathLexer("0$N<p");
      xPathLexer3.at();
      xPathLexer2.nextToken();
      xPathLexer1.equals();
      XPathLexer xPathLexer7 = new XPathLexer("ze;s6$Z[(~");
      xPathLexer5.rightParen();
      xPathLexer2.mod();
      Token token0 = xPathLexer3.or();
      assertNull(token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.124864526165363
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer1.div();
      xPathLexer0.number();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("h<J:7aD+kC");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.at();
      assertEquals(":", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer3.notEquals();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("7", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer3.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer2.notEquals();
      assertEquals("<J", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("h<J:7aD+kC");
      Token token9 = xPathLexer0.comma();
      assertEquals("a", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token10);
      assertEquals(15, token10.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer0.nextToken();
      assertEquals(5, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals(":", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer2.equals();
      assertEquals("7", token14.getTokenText());
      assertEquals(21, token14.getTokenType());
      
      xPathLexer4.and();
      Token token15 = xPathLexer0.plus();
      assertEquals("k", token15.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6671701265738053
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer("{2?");
      Token token1 = xPathLexer1.nextToken();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (-1) ({2?)", string1);
      
      Token token2 = xPathLexer1.plus();
      assertEquals("{", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      String string2 = token3.toString();
      assertEquals("[ (15) (om.werken.saxpath.XPathLexer)", string2);
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("Y>$d=]t*nz}f-J");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer1.nextToken();
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer(",HzVZ5}yTS");
      Token token7 = xPathLexer5.nextToken();
      assertEquals(32, token7.getTokenType());
      assertEquals(",", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer4.pipe();
      assertEquals(17, token8.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.1353962584448185
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      Token token1 = xPathLexer1.minus();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("XvGZ");
      Token token3 = xPathLexer3.not();
      assertEquals("X", token3.getTokenText());
      
      xPathLexer3.and();
      xPathLexer2.and();
      xPathLexer0.div();
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("XvGZ");
      Token token6 = xPathLexer5.doubleColon();
      assertEquals("Xv", token6.getTokenText());
      
      Token token7 = xPathLexer5.nextToken();
      assertEquals("GZ", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.literal();
      xPathLexer5.comma();
      XPathLexer xPathLexer7 = new XPathLexer("tKzKuR=");
      Token token10 = xPathLexer7.slashes();
      assertEquals("t", token10.getTokenText());
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer5.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.569341570609185
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("%DC|~?X;OX");
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("%DC|~?X;OX");
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer3.getPreviousToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer(")");
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer5.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer4.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer6.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer8.not();
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.367224846374865
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("cn");
      xPathLexer0.div();
      xPathLexer0.consume((-693));
      xPathLexer1.relationalOperator();
      xPathLexer1.minus();
      xPathLexer1.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9639533747093527
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.or();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("a", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.consume();
      xPathLexer1.literal();
      XPathLexer xPathLexer3 = new XPathLexer("u06hb6r?Vp,h.`^/V");
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer3.plus();
      assertEquals("u", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("06", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("sy");
      Token token6 = xPathLexer0.nextToken();
      assertEquals(13, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      Token token7 = xPathLexer4.not();
      assertEquals("s", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer3.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer6.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer0.or();
      Token token11 = xPathLexer4.nextToken();
      assertEquals(15, token11.getTokenType());
      assertEquals("y", token11.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.9756339104969443
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals("<", token1.getTokenText());
      assertEquals(7, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("J", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer1.not();
      xPathLexer0.div();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(":", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("mSq[~=8 $p`B DF");
      xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("m", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("7", token5.getTokenText());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("Sq", token7.getTokenText());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals("[~", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer2.div();
      Token token12 = xPathLexer2.pipe();
      assertEquals("8", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.797175363557785
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("KVisu!;aj)]");
      XPathLexer xPathLexer2 = new XPathLexer("KVisu!;aj)]");
      Token token1 = xPathLexer2.slashes();
      assertEquals("K", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("<6^2dtqW");
      Token token2 = xPathLexer4.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer1.nextToken();
      Token token4 = xPathLexer6.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token5 = xPathLexer6.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer4.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("6", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("m", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("!", token8.getTokenText());
      
      Token token9 = xPathLexer1.getPreviousToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("KVisu", token9.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2732836586956164
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Oa-@w<Ysl)~Tj-m");
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.055668788572063
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("mF8ca|h!{Q(fV_UXy '");
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("F", token1.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.star();
      assertEquals("8", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals("c", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.operatorName();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("a", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("ml88&CWF1b0Qp");
      xPathLexer2.or();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer2.currentPosition();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer4.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer4.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("l", token9.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("3q5/z01+'PgFdx'8bs?");
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.div();
      Token token12 = xPathLexer3.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer4.pipe();
      assertEquals("8", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer4.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.111048496303249
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.minus();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals("o", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("XvGZ");
      Token token3 = xPathLexer3.not();
      assertEquals("X", token3.getTokenText());
      
      xPathLexer3.and();
      xPathLexer2.and();
      xPathLexer0.div();
      Token token4 = xPathLexer1.colon();
      assertEquals("o", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("XvGZ");
      Token token6 = xPathLexer4.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer5.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("XvGZ", token7.getTokenText());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer5.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer5.and();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer7.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer5.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer1.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.9556058662703326
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token1 = xPathLexer0.minus();
      assertEquals("h", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(":", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals("7aD", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("+k", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.1171179868547254
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.not();
      token0.toString();
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.rightParen();
      xPathLexer1.slashes();
      xPathLexer1.and();
      xPathLexer0.number();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer2.getPreviousToken();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer("h<J:7aD+kC");
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer("h<J:7aD+kC");
      xPathLexer4.comma();
      XPathLexer xPathLexer6 = new XPathLexer("<6^2dtqW");
      xPathLexer6.identifierOrOperatorName();
      xPathLexer1.slashes();
      xPathLexer5.colon();
      xPathLexer6.getPreviousToken();
      xPathLexer4.and();
      xPathLexer5.nextToken();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.div();
      assertNull(token1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2049917322936277
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("F^h0'&0[Y;-J^e");
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("h", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      String string0 = token4.toString();
      assertEquals("[ (5) (0)", string0);
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (15) (F)", string1);
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      xPathLexer0.operatorName();
      Token token13 = xPathLexer0.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer0.number();
      assertEquals(30, token14.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9613532773480196
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("Rop~a67PGs>j'%D");
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer2.getPreviousToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.doubleColon();
      xPathLexer8.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer4.star();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer6.literal();
      xPathLexer0.comma();
      xPathLexer6.rightBracket();
      xPathLexer9.not();
      xPathLexer6.whitespace();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.0551245016778967
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.div();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.operatorName();
      xPathLexer3.star();
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer6.operatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer6.or();
      Token token6 = xPathLexer5.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer5.and();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("7", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer5.leftParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("^", token11.getTokenText());
      
      Token token12 = xPathLexer5.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer4.not();
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.987834433522873
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer2.identifierOrOperatorName();
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.doubleColon();
      Token token5 = xPathLexer2.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer2.nextToken();
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer2.div();
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9806203550656845
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.plus();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("cn");
      xPathLexer0.div();
      xPathLexer1.identifier();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer("cn");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("J", token0.getTokenText());
      
      Token token1 = xPathLexer3.star();
      assertEquals("c", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer3.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("n", token2.getTokenText());
      
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(18, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      Token token6 = xPathLexer3.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("cn");
      xPathLexer6.operatorName();
      Token token8 = xPathLexer6.identifierOrOperatorName();
      assertNotNull(token8);
      assertEquals("cn", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer("cn");
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer8.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer5.literal();
      XPathLexer xPathLexer10 = new XPathLexer("cn");
      Token token11 = xPathLexer10.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer3.slashes();
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6068618164601465
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("871gI}rYY@z");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("8", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("g", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("I}", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.colon();
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("YY", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("871gI}rYY@z");
      Token token6 = xPathLexer2.nextToken();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals("@z", token7.getTokenText());
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.218731653577806
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.rightParen();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer1.setPreviousToken(token4);
      Token token5 = xPathLexer1.getPreviousToken();
      assertEquals("c", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftBracket();
      assertEquals("o", token7.getTokenText());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer3.dots();
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer3.comma();
      assertEquals("o", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer3.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("m", token10.getTokenText());
      
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals("om.werken.saxpath.XPathLexer", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer1.doubleColon();
      assertEquals("m.", token12.getTokenText());
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.079437478746696
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("sbB*;}MT");
      xPathLexer2.div();
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer3.plus();
      Token token2 = xPathLexer3.colon();
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer3.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer2.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.doubleColon();
      assertEquals("}M", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer4.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      xPathLexer2.nextToken();
      Token token12 = xPathLexer4.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("-N*HyGA.C3,@");
      Token token13 = xPathLexer1.equals();
      assertEquals(21, token13.getTokenType());
      
      xPathLexer6.literal();
      xPathLexer2.pipe();
      Token token14 = xPathLexer3.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer3.comma();
      assertEquals(32, token15.getTokenType());
      
      Token token16 = xPathLexer2.pipe();
      assertEquals(17, token16.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.9301019173461234
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.at();
      assertEquals("e", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("rk", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("en", token5.getTokenText());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.not();
      assertEquals("s", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("a", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertEquals(27, token8.getTokenType());
      assertNotNull(token8);
      assertEquals("path.XPathLe", token8.getTokenText());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("e", token9.getTokenText());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      xPathLexer0.nextToken();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.069324600017033
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cowerken.saxpathXPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      token0.toString();
      token0.toString();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("erken.saxpathXPathLexer", token3.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer0.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.9248630189829368
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer2.nextToken();
      token0.toString();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.leftParen();
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-3176));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.1727515288955277
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token1 = xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("o", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer1.setXPath("/Za@Tmik");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(11, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("Z", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals("a", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      char char0 = xPathLexer0.LA(13);
      assertEquals('\uFFFF', char0);
      
      Token token6 = xPathLexer0.minus();
      assertEquals("h", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(".XPathLexer", token8.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer1.notEquals();
      assertEquals("@T", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.endPosition();
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      assertEquals("", token10.getTokenText());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.157196351920048
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.star();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      int int0 = (-3106);
      xPathLexer0.consume((-3106));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.0045619482534827
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.div();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer4.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.operatorName();
      Token token3 = xPathLexer3.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer6.operatorName();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer6.or();
      Token token6 = xPathLexer5.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer5.and();
      xPathLexer6.currentPosition();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer6.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("7", token8.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer5.leftParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.pipe();
      Token token9 = xPathLexer7.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertNotNull(token9);
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals("^7!>^]K<3<iJdu", token11.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token12 = xPathLexer8.pipe();
      assertEquals(17, token12.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.790389971042826
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume((-601));
      xPathLexer0.getXPath();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.7597584610944392
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jo@kOSG}C^S8E3K;+");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.nextToken();
      token1.toString();
      token2.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.or();
      assertNull(token3);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.1819034668388078
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("h<J:7aD+kC");
      xPathLexer3.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("h<J:7aD+kC");
      xPathLexer0.comma();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("(^");
      xPathLexer5.getPreviousToken();
      xPathLexer2.and();
      xPathLexer4.nextToken();
      xPathLexer1.doubleColon();
      xPathLexer5.div();
      xPathLexer0.pipe();
      Token token0 = xPathLexer3.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7202064561299344
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/#s;?");
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.hasMoreChars();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.identifier();
      xPathLexer0.rightParen();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-821));
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("/#s;?");
      xPathLexer1.literal();
      xPathLexer1.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.8927659806472352
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.dots();
      assertEquals(14, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer5.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer3.identifier();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("u06hb6r?Vp,h.`^/V");
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer3.and();
      xPathLexer2.star();
      Token token6 = xPathLexer6.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("u", token6.getTokenText());
      
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("[ (4) (c)");
      xPathLexer5.doubleColon();
      Token token8 = xPathLexer6.nextToken();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("sy");
      Token token10 = xPathLexer5.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer2.div();
      Token token11 = xPathLexer7.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
      
      Token token12 = xPathLexer7.pipe();
      assertEquals(" ", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
      
      xPathLexer5.div();
      Token token13 = xPathLexer4.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer8.star();
      assertEquals(20, token14.getTokenType());
      assertEquals("s", token14.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.338481100995154
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      xPathLexer1.leftBracket();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("[");
      Token token2 = xPathLexer4.plus();
      assertEquals("[", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer3.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (c)");
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      Token token6 = xPathLexer5.nextToken();
      assertEquals(3, token6.getTokenType());
      
      xPathLexer2.or();
      Token token7 = xPathLexer0.slashes();
      assertEquals(".", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer5.nextToken();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer5.nextToken();
      assertEquals("4", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals("w", token10.getTokenText());
      
      Token token11 = xPathLexer5.dots();
      assertEquals(")", token11.getTokenText());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer5.identifierOrOperatorName();
      assertNull(token13);
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token14 = xPathLexer6.pipe();
      assertEquals("c", token14.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token15 = xPathLexer6.equals();
      assertEquals(21, token15.getTokenType());
      assertEquals("o", token15.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token16 = xPathLexer6.pipe();
      assertEquals(17, token16.getTokenType());
      
      Token token17 = xPathLexer8.literal();
      assertNull(token17);
      
      Token token18 = xPathLexer6.comma();
      assertEquals(".", token18.getTokenText());
      assertEquals(32, token18.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.308022769668673
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "(?C{f/8i`D[E)Q'j";
      XPathLexer xPathLexer0 = new XPathLexer("(?C{f/8i`D[E)Q'j");
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.equals();
      token0.toString();
      token0.toString();
      xPathLexer0.dots();
      token0.toString();
      xPathLexer0.consume((-2135));
      xPathLexer0.consume();
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.274602392547318
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.dots();
      assertEquals(14, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token4 = xPathLexer0.number();
      assertEquals(".", token4.getTokenText());
      assertEquals(31, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("w", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("v]\"RE5=,.lwS$Zkk9m");
      Token token6 = xPathLexer3.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("u)tC/\"5`bLp3ia()fsz");
      Token token7 = xPathLexer4.star();
      assertEquals("u", token7.getTokenText());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("r", token8.getTokenText());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer3.doubleColon();
      Token token10 = xPathLexer3.nextToken();
      assertEquals("RE5", token10.getTokenText());
      
      Token token11 = xPathLexer4.not();
      assertEquals(")", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(":w.Bp9zrj;`j");
      Token token12 = xPathLexer6.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals(":w", token12.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.div();
      Token token13 = xPathLexer6.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer6.pipe();
      assertEquals("B", token14.getTokenText());
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer1.leftBracket();
      assertEquals("w", token15.getTokenText());
      
      Token token16 = xPathLexer5.comma();
      assertEquals("c", token16.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.343989749022359
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer1.div();
      xPathLexer0.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.8920574767125904
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("cn");
      xPathLexer0.div();
      Token token0 = xPathLexer1.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.literal();
      xPathLexer0.plus();
      Token token1 = xPathLexer2.colon();
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("cn");
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer3.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer3.dollar();
      assertEquals("n", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer3.nextToken();
      Token token10 = xPathLexer4.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer4.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer1.literal();
      Token token12 = xPathLexer3.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer5.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
      assertEquals(":", token14.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8345538333897249
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7^7!>^]K<3<iJdu");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("^", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("7", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ukN6#Q,-Z_Kn[");
      xPathLexer1.div();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.plus();
      assertEquals("!", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("&=g");
      xPathLexer3.dollar();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals("^]", token8.getTokenText());
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("K", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.div();
      Token token10 = xPathLexer2.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer2.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.881036214289275
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("co.wrken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token1 = xPathLexer0.rightBracket();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      token0.toString();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("wrken.saxpath.XPathLexer", token3.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (4) (o)", string1);
      
      xPathLexer0.setPreviousToken(token1);
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNull(token4);
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.0218790313629844
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.literal();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.687465857860002
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("Bt_LW#");
      Token token0 = xPathLexer1.star();
      assertEquals("B", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("t_LW", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("#", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.not();
      Token token7 = xPathLexer1.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer2.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.8893442540506178
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.getPreviousToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("G|8Vm|;LC>WC4");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("L<*z+T+B/N");
      xPathLexer3.and();
      xPathLexer3.comma();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer2.getPreviousToken();
      xPathLexer1.and();
      xPathLexer2.nextToken();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.div();
      xPathLexer4.equals();
      Token token2 = xPathLexer2.relationalOperator();
      assertNull(token2);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9616291023802357
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.LA(1737);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.091950561836626
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("C", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("{", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Z", token3.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer1.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.868195715052156
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals("C", token0.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.identifierOrOperatorName();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.minus();
      Token token3 = xPathLexer2.slashes();
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer2.not();
      assertEquals(" ", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer3.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("Z", token6.getTokenText());
      
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer2.minus();
      assertEquals("(", token7.getTokenText());
      
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer4.literal();
      assertNull(token11);
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.star();
      Token token12 = xPathLexer0.comma();
      assertEquals("{", token12.getTokenText());
      assertEquals(32, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer7.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer2.identifier();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.09194267135649
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>=0");
      Token token0 = xPathLexer0.star();
      assertEquals("C", token0.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(10, token1.getTokenType());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("0", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer0.minus();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.minus();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer1.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer1.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.8856132115110094
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.at();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('N');
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.952387246042388
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      String string0 = "com.werken.saxpath.Token";
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.slashes();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer1.at();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer2.number();
      xPathLexer0.rightBracket();
      String string1 = "v]\"RE5=,.lwS$Zkk9m";
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.978407921592613
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("4)");
      Token token0 = xPathLexer0.at();
      assertEquals("4", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(")", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('\\');
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer0.at();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.1425108249520743
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("7^7!>^]K<3<iJdu");
      xPathLexer1.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.leftBracket();
      xPathLexer2.leftBracket();
      xPathLexer1.or();
      xPathLexer3.and();
      xPathLexer1.consume(1);
      xPathLexer0.relationalOperator();
      xPathLexer1.minus();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('T');
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('0');
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.058020057671015
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer1.dots();
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer0.number();
      Token token1 = xPathLexer0.rightBracket();
      token1.toString();
      xPathLexer2.nextToken();
      token0.toString();
      token1.toString();
      XPathLexer xPathLexer3 = new XPathLexer("[ (4) (w)");
      xPathLexer3.operatorName();
      xPathLexer2.star();
      xPathLexer1.nextToken();
      xPathLexer2.pipe();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-2718));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.9018192866557562
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      xPathLexer0.or();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.literal();
      assertNull(token2);
      
      xPathLexer3.identifier();
      XPathLexer xPathLexer4 = new XPathLexer("u06hb6r?Vp,h.`^/V");
      Token token3 = xPathLexer4.plus();
      assertEquals("u", token3.getTokenText());
      
      Token token4 = xPathLexer4.leftParen();
      assertEquals("0", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer4.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("6h", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("sy");
      Token token8 = xPathLexer5.doubleColon();
      assertEquals("sy", token8.getTokenText());
      
      xPathLexer5.plus();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer5.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token11 = xPathLexer6.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.div();
      Token token12 = xPathLexer3.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer7.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer1.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.859632244605152
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.consume(13);
      xPathLexer0.getXPath();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer3.identifier();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("u06hb6r?Vp,h.`^/V");
      Token token4 = xPathLexer5.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("u", token4.getTokenText());
      
      Token token5 = xPathLexer5.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("0", token5.getTokenText());
      
      Token token6 = xPathLexer5.leftParen();
      assertEquals("6", token6.getTokenText());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer5.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("hb", token9.getTokenText());
      
      xPathLexer1.doubleColon();
      Token token10 = xPathLexer0.nextToken();
      assertEquals(13, token10.getTokenType());
      assertEquals(".", token10.getTokenText());
      
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer4.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.div();
      Token token13 = xPathLexer4.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer6.pipe();
      assertEquals(17, token14.getTokenType());
      
      xPathLexer3.div();
      Token token15 = xPathLexer4.minus();
      assertEquals(6, token15.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.8534432242026864
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.consume(104);
      xPathLexer0.getXPath();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(113);
      XPathLexer xPathLexer2 = new XPathLexer("5f]6_JyaiEtZR`_{19");
      xPathLexer0.star();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      xPathLexer2.slashes();
      xPathLexer0.currentPosition();
      xPathLexer0.nextToken();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      xPathLexer4.minus();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.9439116471439613
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer1.slashes();
      assertEquals("c", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.dots();
      assertEquals(14, token4.getTokenType());
      assertEquals("m.", token4.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(".", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("&C)]K");
      xPathLexer1.leftParen();
      xPathLexer4.operatorName();
      Token token8 = xPathLexer4.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("&C", token8.getTokenText());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.896814754428918
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/#s;?");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      assertEquals("#", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals("?", token3.getTokenText());
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.identifier();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer0.plus();
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.setXPath("!0riJ1v;iJT1-H");
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("!", token10.getTokenText());
      
      xPathLexer0.slashes();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.identifier();
      assertEquals("iJ1v", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer0.doubleColon();
      assertEquals(";i", token13.getTokenText());
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals("J", token14.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token15 = xPathLexer0.literal();
      assertNull(token15);
      
      Token token16 = xPathLexer0.leftBracket();
      assertEquals(3, token16.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.032164001586865
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.setXPath("h<J:7aD+kC");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer1.pipe();
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.literal();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("GG0#'W95f>n~3]{g-$/");
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer3.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer4.notEquals();
      assertEquals("GG", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.doubleColon();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("7", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals("a", token8.getTokenText());
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals("0#", token10.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.div();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token11 = xPathLexer7.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer3.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("D", token13.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2128924652602249
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.LA(1242);
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.0673806392192313
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer1.dots();
      assertEquals("m.", token2.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer0.plus();
      assertEquals(".", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("w", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("ml88&CWF1b0Qp");
      xPathLexer2.or();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      xPathLexer2.currentPosition();
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer3.minus();
      assertEquals("l", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("3q5/z01+'PgFdx'8bs?");
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.div();
      Token token13 = xPathLexer2.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer3.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("8", token14.getTokenText());
      
      Token token15 = xPathLexer3.at();
      assertEquals("8", token15.getTokenText());
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.9107142574617688
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.literal();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("VmV*O2mSb0f0$@.8");
      xPathLexer0.plus();
      xPathLexer1.star();
      xPathLexer2.dollar();
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (c)");
      xPathLexer0.and();
      xPathLexer4.nextToken();
      xPathLexer3.or();
      xPathLexer4.slashes();
      xPathLexer0.endPosition();
      xPathLexer3.leftBracket();
      xPathLexer4.relationalOperator();
      xPathLexer2.minus();
      xPathLexer2.relationalOperator();
      xPathLexer2.pipe();
      xPathLexer3.colon();
      XPathLexer xPathLexer6 = new XPathLexer(")");
      Token token1 = xPathLexer6.div();
      assertNull(token1);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.171194087487118
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      String string0 = token0.toString();
      assertEquals("[ (4) (c)", string0);
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (c)");
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer1.leftBracket();
      assertEquals(3, token2.getTokenType());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer("[");
      Token token4 = xPathLexer4.plus();
      assertEquals("[", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer2.or();
      Token token8 = xPathLexer0.slashes();
      assertEquals("m", token8.getTokenText());
      
      xPathLexer4.currentPosition();
      xPathLexer5.nextToken();
      xPathLexer5.nextToken();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(".", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer5.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
      
      xPathLexer5.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer6.pipe();
      assertEquals("c", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer6.equals();
      assertEquals(21, token13.getTokenType());
      assertEquals("o", token13.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token14 = xPathLexer8.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer6.comma();
      assertEquals(32, token15.getTokenType());
      assertEquals("m", token15.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.6493125874962486
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('[');
      xPathLexer0.dots();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.colon();
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('[');
      assertFalse(boolean0);
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer0.and();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token11);
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.1856169388757904
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.not();
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.rightParen();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.setPreviousToken(token4);
      Token token6 = xPathLexer1.getPreviousToken();
      assertEquals("c", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      Token token7 = xPathLexer1.leftBracket();
      assertEquals("o", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.doubleColon();
      assertEquals("m.", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.7065489510698892
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      xPathLexer1.minus();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.dots();
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer1.literal();
      assertNull(token3);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("XvGZ");
      xPathLexer3.and();
      xPathLexer2.and();
      xPathLexer0.div();
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      int int0 = xPathLexer2.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      Token token5 = xPathLexer0.comma();
      assertEquals("m", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      Token token7 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.leftParen();
      xPathLexer3.div();
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer3.not();
      assertEquals("X", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer5.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      char char0 = xPathLexer0.LA(5);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.7325244032327616
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^jo@kOSG}C^S8E3K;+");
      Token token0 = xPathLexer0.plus();
      assertEquals("^", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (15) (jo)", string0);
      
      Token token2 = xPathLexer0.plus();
      Token token3 = xPathLexer0.nextToken();
      String string1 = token2.toString();
      assertEquals("[ (5) (@)", string1);
      
      String string2 = token3.toString();
      assertEquals("[ (-1) (kOSG}C^S8E3K;+)", string2);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("O", token5.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.0601890772059583
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      xPathLexer0.comma();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.minus();
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token14 = xPathLexer2.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.1096064806420083
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.2472418381704546
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.2020455324532504
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.dots();
      assertEquals(14, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals("w", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token5 = xPathLexer0.number();
      assertEquals(".", token5.getTokenText());
      assertEquals(31, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("v]\"RE5=,.lwS$Zkk9m");
      Token token7 = xPathLexer3.plus();
      assertEquals("v", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer2.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("u)tC/\"5`bLp3ia()fsz");
      Token token8 = xPathLexer4.star();
      assertEquals("u", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("r", token9.getTokenText());
      
      Token token10 = xPathLexer2.notEquals();
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.wrken.saxpath.XPattLexer");
      xPathLexer3.doubleColon();
      Token token11 = xPathLexer3.nextToken();
      assertEquals("RE5", token11.getTokenText());
      
      Token token12 = xPathLexer4.not();
      assertEquals(")", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(":w.Bp9zrj;`j");
      xPathLexer6.doubleColon();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token13 = xPathLexer8.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer8.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer5.doubleColon();
      assertEquals(19, token15.getTokenType());
      assertEquals("co", token15.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.6719603234085543
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("C{>#Z{");
      Token token0 = xPathLexer0.star();
      assertEquals("C", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals("", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("#Z", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.6672962358800536
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("jo@kOSG}C^S8E3K;+");
      Token token0 = xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      String string0 = token1.toString();
      assertEquals("[ (15) (o)", string0);
      assertEquals(15, token1.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (16) (@)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("j", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.star();
      assertEquals("}", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("^", token5.getTokenText());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      char char0 = xPathLexer0.LA(5);
      assertEquals('\uFFFF', char0);
  }
}
