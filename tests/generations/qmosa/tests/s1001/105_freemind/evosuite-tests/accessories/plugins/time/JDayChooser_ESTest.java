/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 01:05:36 GMT 2020
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.ClonePlugin;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.main.FreeMindApplet;
import freemind.modes.MindIcon;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ComponentEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseListener;
import java.awt.image.ImageObserver;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.io.File;
import java.io.PrintStream;
import java.text.AttributedCharacterIterator;
import java.text.NumberFormat;
import java.time.DateTimeException;
import java.time.chrono.Chronology;
import java.util.Calendar;
import java.util.Date;
import java.util.Hashtable;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import javax.help.ForwardAction;
import javax.help.plaf.basic.BasicTOCNavigatorUI;
import javax.swing.Action;
import javax.swing.ActionMap;
import javax.swing.DebugGraphics;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLayeredPane;
import javax.swing.JMenu;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JTextPane;
import javax.swing.KeyStroke;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SwingConstants;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.event.MenuKeyEvent;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AsyncBoxView;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.MutableAttributeSet;
import javax.swing.text.NumberFormatter;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.fop.image.FopImage;
import org.apache.fop.image.JpegImage;
import org.apache.fop.pdf.PDFDocument;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.xerces.parsers.SecurityConfiguration;
import org.apache.xerces.util.SymbolTable;
import org.apache.xerces.util.XMLGrammarPoolImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.persist.HsqlProperties;
import org.jibx.runtime.impl.UnmarshallingContext;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.876499574192111
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x");
      jDayChooser0.day = (-2285);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jDayChooser0.addMouseListener(mouseListener0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      JMenu jMenu0 = new JMenu("x", false);
      menuElementArray0[0] = (MenuElement) jMenu0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 8501, 589L, 0, 8501, 's', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.setKeyCode((-2285));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      fopImage_ImageInfo0.width = 532;
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.keyPressed(menuKeyEvent0);
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.getDay();
      jDayChooser0.drawDays();
      assertEquals((-2285), jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.8126229831147738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x");
      jDayChooser0.day = (-2285);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jDayChooser0.addMouseListener(mouseListener0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      JMenu jMenu0 = new JMenu("x", false);
      menuElementArray0[0] = (MenuElement) jMenu0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 8501, 589L, 0, 8501, 's', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.setKeyCode((-2285));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = ImageObserver.ALLBITS;
      jDayChooser0.setMonth((-4224));
      jDayChooser0.isDecorationBordersVisible();
      Hashtable<AttributedCharacterIterator.Attribute, String> hashtable0 = new Hashtable<AttributedCharacterIterator.Attribute, String>();
      Font font0 = Font.getFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      jDayChooser0.setFont(font0);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.780913602769236
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 486, 0L, 61445, (-3000), 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode((-1390));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = ImageObserver.ALLBITS;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jDayChooser0.setMonth(255);
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.isDecorationBackgroundVisible();
      assertEquals(30, jDayChooser0.getDay());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8126229831147738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x");
      jDayChooser0.day = (-2285);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jDayChooser0.addMouseListener(mouseListener0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      JMenu jMenu0 = new JMenu("x", false);
      menuElementArray0[0] = (MenuElement) jMenu0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 8501, 589L, 0, 8501, 's', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.setKeyCode((-2285));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = SwingConstants.NORTH_WEST;
      jDayChooser0.setMonth((-4224));
      jDayChooser0.isDecorationBordersVisible();
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7329045285804874
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("accessories.plugins.time.JDayChooser$1", vetoableChangeListener0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("freemind.modes.MapAdapter", vetoableChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy1);
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate((-2516), 10, (-1850), 7, 434);
      jDayChooser0.setMaxSelectableDate(mockDate0);
      Locale locale0 = Locale.FRENCH;
      Locale.setDefault(locale0);
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(2040);
      SecurityConfiguration securityConfiguration0 = new SecurityConfiguration(symbolTable0, xMLGrammarPoolImpl0);
      Locale locale1 = securityConfiguration0.getLocale();
      locale0.getDisplayName(locale1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.initDecorations();
      jDayChooser0.setMonth(486);
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.765686580753037
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x");
      jDayChooser0.day = (-2285);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jDayChooser0.addMouseListener(mouseListener0);
      jDayChooser0.setMonth(8501);
      jDayChooser0.setEnabled(true);
      UnmarshallingContext unmarshallingContext0 = new UnmarshallingContext();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jDayChooser0.setDecorationBordersVisible(true);
      int int0 = ImageObserver.ALLBITS;
      jDayChooser0.setMonth(255);
      jDayChooser0.isDecorationBordersVisible();
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
      jDayChooser0.setCalendar(calendar0);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Class<BasicTOCNavigatorUI> class0 = BasicTOCNavigatorUI.class;
      jDayChooser0.getListeners(class0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate(478L);
      jDayChooser0.setMinSelectableDate((Date) null);
      jDayChooser0.drawWeeks();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Class<BasicTOCNavigatorUI> class0 = BasicTOCNavigatorUI.class;
      jDayChooser0.getListeners(class0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate(478L);
      jDayChooser0.setMinSelectableDate(mockDate0);
      jDayChooser0.drawWeeks();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1979), 270L, (-1979), 29, '9');
      jDayChooser0.keyReleased(keyEvent0);
      assertFalse(jDayChooser0.isFocusTraversalPolicySet());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9191412278193987
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JComponent.getDefaultLocale();
      jDayChooser0.setAutoscrolls(false);
      jDayChooser0.setVerifyInputWhenFocusTarget(false);
      jDayChooser0.getX();
      jDayChooser0.getMaxSelectableDate();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(450);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setMaxDayCharacters(450);
      jDayChooser0.getSundayForeground();
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setDayBordersVisible(false);
      Color color0 = jDayChooser0.getWeekdayForeground();
      Color.getColor("day", 3);
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.setAlwaysFireDayProperty(true);
      jDayChooser0.getSundayForeground();
      System.setCurrentTimeMillis(0);
      jDayChooser0.setYear(292);
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.7329045285804874
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("accessories.plugins.time.JDayChooser$1", vetoableChangeListener0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("freemind.modes.MapAdapter", vetoableChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy1);
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate((-2516), 10, (-1850), 7, 434);
      jDayChooser0.setMaxSelectableDate(mockDate0);
      Locale locale0 = Locale.FRENCH;
      Locale.setDefault(locale0);
      SymbolTable symbolTable0 = new SymbolTable();
      XMLGrammarPoolImpl xMLGrammarPoolImpl0 = new XMLGrammarPoolImpl(2040);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(true);
      int int0 = ImageObserver.ALLBITS;
      jDayChooser0.setMonth(486);
      jDayChooser0.isDecorationBordersVisible();
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.removeNotify();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)127;
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)11;
      byteArray0[3] = (byte)82;
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte) (-40);
      byteArray0[6] = (byte)36;
      byteArray0[7] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      AWTEventMulticaster.add((FocusListener) metalComboBoxEditor_UIResource0, (FocusListener) jDayChooser0);
      jDayChooser0.addFocusListener(metalComboBoxEditor_UIResource0);
      MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar)jDayChooser0.calendar;
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_ISOLATED;
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser_DecoratorButton1, 529, "day", 7);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.8005634091045097
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Windows");
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x");
      jDayChooser0.day = (-2285);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jDayChooser0.addMouseListener(mouseListener0);
      jDayChooser0.getDay();
      jDayChooser0.setMonth(0);
      jDayChooser0.isDecorationBordersVisible();
      MockDate mockDate0 = new MockDate();
      jDayChooser0.setMonth(0);
      jDayChooser0.isDecorationBordersVisible();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getInputMap();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 5, 5, 21, 0, '^');
      jDayChooser0.keyPressed(keyEvent0);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.753252865192132
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      ForwardAction forwardAction0 = new ForwardAction(jDayChooser0);
      MouseListener mouseListener0 = AWTEventMulticaster.add((MouseListener) forwardAction0, (MouseListener) forwardAction0);
      jDayChooser0.addMouseListener(mouseListener0);
      JMenu jMenu0 = new JMenu("day", false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      menuElementArray0[0] = (MenuElement) jMenu0;
      menuElementArray0[1] = (MenuElement) jMenu0;
      menuElementArray0[2] = (MenuElement) jMenu0;
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 6, 1213L, 6, 6, 's', menuElementArray0, menuSelectionManager0);
      menuKeyEvent0.setKeyCode(6);
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(false);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = ImageObserver.ALLBITS;
      jDayChooser0.setMonth(394);
      jDayChooser0.isDecorationBordersVisible();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.7920286004112502
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay((-1056));
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      jDayChooser0.getTreeLock();
      jDayChooser0.getTreeLock();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.getDay();
      jDayChooser1.setMonth(3473);
      jDayChooser1.isDecorationBordersVisible();
      MockDate mockDate0 = new MockDate();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "day";
      stringArray0[1] = "day";
      jDayChooser0.setMonth(398);
      jDayChooser1.isDecorationBordersVisible();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 1372, 1372, 398, 1430, '^');
      jDayChooser0.keyPressed(keyEvent0);
      JDayChooser jDayChooser2 = new JDayChooser(false);
      // Undeclared exception!
      try { 
        jDayChooser2.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.0010523098686046
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setDay(486);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 486, 0L, 61445, (-3000), 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode((-1390));
      jDayChooser0.keyTyped(menuKeyEvent0);
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      jDayChooser0.getMaxDayCharacters();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 0, true, jDayChooser0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setMaxDayCharacters(13);
      jDayChooser0.setMonth(0);
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.getWeekdayForeground();
      int int0 = jDayChooser0.getDay();
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertEquals(31, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.748571835554026
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 486, 0L, 61445, (-3000), 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode((-1390));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(true);
      int int0 = ImageObserver.ALLBITS;
      jDayChooser0.setMonth(255);
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.getDaysInMonth();
      jDayChooser0.initDecorations();
      assertEquals(30, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.firePropertyChange("Pn G5_iIu#@4RGvob2o", (-1855), 100);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.focusLost((FocusEvent) null);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      ActionEvent actionEvent0 = new ActionEvent(integer0, 100, "9Y&b?O!tJw G['~?", (-1855));
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6266116706270752
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      PDFDocument pDFDocument0 = pDFDocumentGraphics2D0.getPDFDocument();
      PDFInfo pDFInfo0 = pDFDocument0.getInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      FocusEvent focusEvent0 = null;
      try {
        focusEvent0 = new FocusEvent((Component) null, 3, true, jDayChooser0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = (-1056);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      jDayChooser0.getTreeLock();
      jDayChooser0.setFocus();
      Parser parser0 = new Parser();
      Parser parser1 = new Parser();
      Properties properties0 = FreeMindApplet.defaultProps;
      HsqlProperties hsqlProperties0 = new HsqlProperties((Properties) null);
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection(hsqlProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.persist.HsqlProperties", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6819027531177633
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(486);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 486, 0L, 61445, (-3000), 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode((-1390));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.7155758490664885
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MenuSelectionManager.defaultManager();
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.updateUI();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = ImageObserver.ALLBITS;
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 486);
      Locale locale0 = Locale.ROOT;
      NumberFormat numberFormat0 = NumberFormat.getCurrencyInstance(locale0);
      NumberFormatter numberFormatter0 = new NumberFormatter(numberFormat0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatter) numberFormatter0);
      FocusEvent focusEvent1 = new FocusEvent(jFormattedTextField0, 0, false);
      jDayChooser0.focusGained(focusEvent0);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.671760120846313
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      int int0 = (-911);
      jDayChooser0.setMonth((-911));
      jDayChooser0.getMaxDayCharacters();
      MenuElement[] menuElementArray0 = new MenuElement[4];
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      File file0 = MockFile.createTempFile("1D(_28#WWLJC1N;R$pE", "day");
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      mockPrintStream0.print(true);
      PrintStream printStream0 = mockPrintStream0.format((Locale) null, "day", (Object[]) null);
      jDayChooser0.list(printStream0);
      assertEquals(23399L, file0.length());
      
      jDayChooser0.drawDays();
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.getSelectedDay();
      Color color0 = jDayChooser0.sundayForeground;
      float[] floatArray0 = new float[8];
      floatArray0[0] = 1965.433F;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (float) 12356;
      floatArray0[3] = (float) (-1925);
      floatArray0[4] = (float) 12356;
      floatArray0[5] = (float) 12356;
      floatArray0[6] = (float) (-1925);
      floatArray0[7] = (float) 0;
      Color.RGBtoHSB(12356, (-1925), 0, floatArray0);
      jDayChooser0.setWeekdayForeground(color0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.5604230937343346
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = 5;
      jDayChooser0.setDay(5);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      jDayChooser0.getTreeLock();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_TERMINAL;
      defaultStyledDocument0.getProperty(integer0);
      jDayChooser0.init();
      Element element0 = defaultStyledDocument0.getCharacterElement((-1056));
      AsyncBoxView asyncBoxView0 = new AsyncBoxView(element0, (-869));
      AttributeSet attributeSet0 = asyncBoxView0.getAttributes();
      AbstractDocument.LeafElement abstractDocument_LeafElement0 = null;
      try {
        abstractDocument_LeafElement0 = defaultStyledDocument0.new LeafElement(element0, attributeSet0, 41, (-869));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Illegal cast to MutableAttributeSet
         //
         verifyException("javax.swing.text.AbstractDocument$AbstractElement", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      int int0 = jDayChooser0.getDay();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.8043490098333104
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.drawDays();
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(13, 1, false);
      KeyStroke.getKeyStroke('t');
      jDayChooser0.getActionForKeyStroke(keyStroke0);
      jDayChooser0.setEnabled(false);
      jDayChooser0.setMonth(27);
      jDayChooser0.setDay(29);
      jDayChooser0.setDay(27);
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JPopupMenu jPopupMenu0 = new JPopupMenu("accessories.plugins.time.JDayChooser$DecoratorButton");
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      menuElementArray0[1] = (MenuElement) jCheckBoxMenuItem0;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 1303, 4225L, 9985, 2315, 't', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyPressed(menuKeyEvent0);
      assertEquals(27, jDayChooser0.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8819565363293704
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setDay(486);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      JPanel jPanel0 = jDayChooser0.weekPanel;
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jPanel0, 61445, 3090L, 61445, 39, 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode(930);
      jDayChooser0.keyTyped(menuKeyEvent0);
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      jDayChooser0.setDecorationBackgroundColor((Color) null);
      jDayChooser0.setWeekOfYearVisible(false);
      jDayChooser0.updateUI();
      jDayChooser0.getMaxDayCharacters();
      FocusEvent focusEvent0 = new FocusEvent(jPanel0, 0, false, jPanel0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser0.setMaxSelectableDate(date0);
      jDayChooser0.setDecorationBordersVisible(false);
      int int0 = jDayChooser0.getDay();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.730244429789841
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("accessories.plugins.time.JDayChooser$1", vetoableChangeListener0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("freemind.modes.MapAdapter", vetoableChangeListenerProxy0);
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.setEnabled(false);
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate((-2516), 14, (-1850), 7, 434);
      MockDate mockDate1 = new MockDate((-2516), 14, (-1850), (-2516), (-2516));
      Locale locale0 = Locale.FRENCH;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      jDayChooser0.setLocale(locale0);
      jDayChooser0.setMonth((-1181));
      jDayChooser0.isDayBordersVisible();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      JTextPane jTextPane0 = new JTextPane();
      Style style0 = jTextPane0.getLogicalStyle();
      Font font0 = defaultStyledDocument0.getFont(style0);
      jDayChooser0.setFont(font0);
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6527697871323417
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "est");
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.add((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      jDayChooser0.addMouseListener(defaultCaret0);
      Parser parser0 = new Parser();
      parser0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6266116706270757
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      int int0 = 6;
      jDayChooser0.setMaxDayCharacters(6);
      // Undeclared exception!
      try { 
        Chronology.of("{_7-gQD/tDWIDC");
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Unknown chronology: {_7-gQD/tDWIDC
         //
         verifyException("java.time.chrono.AbstractChronology", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.687273879171463
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setSelectableDateRange(date0, date0);
      MenuSelectionManager.defaultManager();
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      FopImage.ImageInfo fopImage_ImageInfo1 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo1);
      FopImage.ImageInfo fopImage_ImageInfo2 = new FopImage.ImageInfo();
      JpegImage jpegImage1 = new JpegImage(fopImage_ImageInfo2);
      jpegImage0.getTransparentColor();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getCharacterElement(0);
      JTextPane jTextPane0 = new JTextPane();
      MutableAttributeSet mutableAttributeSet0 = jTextPane0.getInputAttributes();
      AbstractDocument.LeafElement abstractDocument_LeafElement0 = null;
      try {
        abstractDocument_LeafElement0 = defaultStyledDocument0.new LeafElement(element0, mutableAttributeSet0, 33, 163);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Illegal cast to MutableAttributeSet
         //
         verifyException("javax.swing.text.AbstractDocument$AbstractElement", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getInputContext();
      ClonePlugin clonePlugin0 = new ClonePlugin();
      clonePlugin0.getMindMapController();
      MindIcon.factory("X_iXtw");
      Class<BasicTOCNavigatorUI> class0 = BasicTOCNavigatorUI.class;
      jDayChooser0.getListeners(class0);
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.isDayBordersVisible();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.769861455747857
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(486);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 486, 0L, 61445, (-3000), 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode((-1390));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      Character character0 = Character.valueOf('2');
      KeyStroke keyStroke0 = KeyStroke.getKeyStroke(character0, (-2855));
      jDayChooser0.getConditionForKeyStroke(keyStroke0);
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      JPopupMenu jPopupMenu0 = new JPopupMenu("day");
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem();
      MenuSelectionManager menuSelectionManager1 = new MenuSelectionManager();
      MenuSelectionManager menuSelectionManager2 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent1 = new MenuKeyEvent(jPopupMenu0, 486, (-3000), 0, 9801, 'K', (MenuElement[]) null, menuSelectionManager2);
      jDayChooser0.keyPressed(menuKeyEvent0);
      jDayChooser0.getSundayForeground();
      Date date0 = jDayChooser0.getMinSelectableDate();
      jDayChooser0.setMinSelectableDate(date0);
      int int0 = jDayChooser0.getDay();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ",FRpnEA^FoD");
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser0, 210, "3FOaQyW<$.@TXBn", 2457L, 816);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // accessories.plugins.time.JDayChooser cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.removeNotify();
      boolean boolean0 = jDayChooser_DecoratorButton0.isFocusable();
      assertFalse(boolean0);
      
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser_DecoratorButton0, (-3000), (-479L), (-3000), 27, 'K', (MenuElement[]) null, menuSelectionManager0);
      menuKeyEvent0.paramString();
      menuKeyEvent0.setKeyCode((-1390));
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      EmptyBorder emptyBorder0 = new EmptyBorder(0, (-3000), 94, 0);
      Rectangle rectangle0 = AbstractBorder.getInteriorRectangle((Component) jDayChooser0, (Border) emptyBorder0, 33, (-1312), 30, (-3000));
      jDayChooser0.getBounds(rectangle0);
      Class<BasicTOCNavigatorUI> class0 = BasicTOCNavigatorUI.class;
      jDayChooser0.getListeners(class0);
      jDayChooser0.setDayBordersVisible(false);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.701765291241601
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("Center", (VetoableChangeListener) null);
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy0);
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.getDay();
      jDayChooser0.setMonth(98304);
      jDayChooser0.isDecorationBordersVisible();
      MockDate mockDate0 = new MockDate();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Metal";
      stringArray0[1] = "Metal";
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      HierarchyBoundsListener hierarchyBoundsListener1 = AWTEventMulticaster.add(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.remove(hierarchyBoundsListener1, hierarchyBoundsListener1);
      jDayChooser0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      jDayChooser0.getMinSelectableDate();
      Color color0 = Color.WHITE;
      jDayChooser0.setForeground(color0);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setDayBordersVisible(true);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.setMaxDayCharacters(0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.7325637712329622
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.setSelectableDateRange(date0, date0);
      MenuSelectionManager.defaultManager();
      JPanel jPanel0 = jDayChooser0.weekPanel;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate(0L);
      jDayChooser0.setMinSelectableDate(date0);
      assertFalse(jDayChooser0.isDayBordersVisible());
      
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.drawWeeks();
      assertTrue(jDayChooser1.isDayBordersVisible());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.701765291241601
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("accessories.plujins.time.UDayChooser$1", vetoableChangeListener0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("freemind.modes.MapAdapter", vetoableChangeListenerProxy0);
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy1);
      jDayChooser0.getMouseMotionListeners();
      jDayChooser0.setDayBordersVisible(false);
      MockDate mockDate0 = new MockDate((-2516), (-2516), (-1850), 7, (-2516));
      jDayChooser0.setMaxSelectableDate(mockDate0);
      Locale locale0 = Locale.FRENCH;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.updateUI();
      assertFalse(jDayChooser1.isDecorationBordersVisible());
      
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      jDayChooser1.setDecorationBordersVisible(true);
      int int0 = ImageObserver.ALLBITS;
      jDayChooser1.setMonth((-1850));
      JDayChooser jDayChooser2 = new JDayChooser();
      boolean boolean0 = jDayChooser2.isDecorationBordersVisible();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.593621512459067
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(486);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      AWTEventMulticaster.add((FocusListener) metalComboBoxEditor_UIResource0, (FocusListener) jDayChooser0);
      jDayChooser0.addFocusListener(metalComboBoxEditor_UIResource0);
      MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar)jDayChooser0.calendar;
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ARABIC_ISOLATED;
      jDayChooser0.setDay(143);
      jDayChooser0.getSelectedDay();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6717601208463124
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setWeekOfYearVisible(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.7072400880413086
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      jDayChooser0.setAlignmentY(0.285F);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(true);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      
      jDayChooser0.updateUI();
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 0);
      JButton[] jButtonArray0 = new JButton[9];
      JButton jButton0 = new JButton("day");
      jButtonArray0[0] = jButton0;
      jDayChooser0.getSelectedDay();
      jButtonArray0[1] = null;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jButtonArray0[2] = (JButton) jDayChooser_DecoratorButton0;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      jButtonArray0[3] = (JButton) jDayChooser_DecoratorButton1;
      ActionMap actionMap0 = jDayChooser0.getActionMap();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 203, 203);
      actionMap0.get(mockGregorianCalendar0);
      JButton jButton1 = new JButton((Action) null);
      jButtonArray0[4] = jButton1;
      JButton jButton2 = new JButton();
      jButtonArray0[5] = jButton2;
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("14", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getContainerListeners();
      jDayChooser0.isWeekOfYearVisible();
      UnmarshallingContext unmarshallingContext0 = new UnmarshallingContext();
      String string0 = "";
      jdbcCallableStatement jdbcCallableStatement0 = null;
      try {
        jdbcCallableStatement0 = new jdbcCallableStatement((jdbcConnection) null, "day", (-1084));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcPreparedStatement", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.54581551528304
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setDay(486);
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("accessories.plugins.time.JDayChooser$1", vetoableChangeListener0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("freemind.modes.MapAdapter", vetoableChangeListenerProxy0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.addVetoableChangeListener(vetoableChangeListenerProxy1);
      FopImage.ImageInfo fopImage_ImageInfo0 = new FopImage.ImageInfo();
      JpegImage jpegImage0 = new JpegImage(fopImage_ImageInfo0);
      jpegImage0.getTransparentColor();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      Element element0 = defaultStyledDocument0.getCharacterElement((-2032));
      JTextPane jTextPane0 = new JTextPane();
      JTextPane jTextPane1 = new JTextPane(defaultStyledDocument0);
      MutableAttributeSet mutableAttributeSet0 = jTextPane1.getInputAttributes();
      AbstractDocument.LeafElement abstractDocument_LeafElement0 = null;
      try {
        abstractDocument_LeafElement0 = defaultStyledDocument0.new LeafElement(element0, mutableAttributeSet0, 0, 132);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Illegal cast to MutableAttributeSet
         //
         verifyException("javax.swing.text.AbstractDocument$AbstractElement", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.616230775360895
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setMaxDayCharacters((-1182));
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5983833927870665
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8577201603748152
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JComponent.getDefaultLocale();
      jDayChooser0.setAutoscrolls(false);
      jDayChooser0.setVerifyInputWhenFocusTarget(false);
      jDayChooser0.getX();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      jDayChooser0.setDay(0);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setMaxDayCharacters(450);
      jDayChooser0.getSundayForeground();
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setDayBordersVisible(false);
      Color color0 = jDayChooser0.getWeekdayForeground();
      float[] floatArray0 = new float[6];
      floatArray0[0] = (float) 0;
      floatArray0[1] = (float) 0;
      floatArray0[2] = (-2225.0F);
      floatArray0[3] = (float) (-1603);
      floatArray0[4] = (float) 0;
      floatArray0[5] = (float) (-1603);
      Color.RGBtoHSB(0, 0, (-1603), floatArray0);
      jDayChooser0.setSundayForeground(color0);
      jDayChooser0.getInputMap();
      jDayChooser0.getMinSelectableDate();
      jDayChooser0.setAlwaysFireDayProperty(true);
      assertFalse(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      ComponentEvent componentEvent0 = new ComponentEvent(jDayChooser0, 901);
      jDayChooser0.dispatchEvent(componentEvent0);
      jDayChooser0.getLocale();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6354848637097823
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }
}
