/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 06:39:42 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.AbstractIscTrHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBConnectionProperties;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBBlobField;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.firebirdsql.jdbc.field.FBCachedLongVarCharField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.314432939095597
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.parallelStream();
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      GDSType.getType("PURE_JAVA");
      javaGDSImpl0.createDatabaseParameterBuffer();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5594225882686272
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      PriorityBlockingQueue<FBCachedBlobField> priorityBlockingQueue0 = new PriorityBlockingQueue<FBCachedBlobField>();
      linkedList0.retainAll(priorityBlockingQueue0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      fBCachedFetcher0.setFetchSize(678);
      linkedList0.clone();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.getFetchSize();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6041277927823434
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList1);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet1);
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher1.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.next();
      FBCachedFetcher fBCachedFetcher2 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher2.next();
      fBCachedFetcher1.deleteRow();
      fBCachedFetcher2.next();
      fBCachedFetcher1.isFirst();
      assertTrue(fBCachedFetcher1.isLast());
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5071077749368813
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-9);
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte) (-44);
      byteArray0[8] = (byte) (-79);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.clone();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.382319062877711
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.parallelStream();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      int int0 = 1;
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList0.addAll(1, (Collection<? extends byte[][]>) linkedList2);
      fBCachedFetcher0.insertRow((byte[][]) null);
      GDSHelper gDSHelper0 = null;
      int int1 = 78;
      fBCachedFetcher0.absolute(1);
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3671826753393668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.clone();
      linkedList1.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertEquals(3, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3521533144972606
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBResultSet0.next();
      linkedList1.clone();
      linkedList1.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[4][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-118);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      linkedList0.add(byteArray0);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-118);
      byteArray4[6] = (byte) (-118);
      byteArray4[2] = (byte) (-118);
      byteArray4[3] = (byte) (-118);
      byteArray4[4] = (byte) (-118);
      byteArray4[5] = (byte) (-125);
      byteArray4[6] = (byte) (-118);
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setStatementType((byte) (-118));
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3311862932133196
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.clone();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(fBCachedFetcher0.isEmpty());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.995295628324261
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-118);
      byte[] byteArray1 = new byte[10];
      byteArray1[0] = (byte) (-118);
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte) (-118);
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte) (-118);
      byteArray1[5] = (byte) (-125);
      byteArray1[6] = (byte) (-118);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      linkedList1.stream();
      linkedList1.parallelStream();
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.first();
      System.setCurrentTimeMillis((byte) (-118));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.48259406247719
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.equals("");
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      byte[][] byteArray0 = new byte[2][8];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[1] = (byte) (-2);
      byteArray2[2] = (byte)14;
      byteArray2[3] = (byte)18;
      byteArray2[4] = (byte) (-18);
      byteArray2[5] = (byte)123;
      byteArray0[1] = byteArray2;
      fBCachedFetcher0.updateRow(byteArray0);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl5 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      javaGDSImpl1.receiveResponse(isc_db_handle_impl5, 1465);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl6 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl3.registerTransaction(isc_tr_handle_impl0);
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_db_handle_impl4.clearWarnings();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.354640740535752
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte) (-118);
      byte[][] byteArray1 = new byte[3][2];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[5] = (byte) (-118);
      linkedList0.add(byteArray1);
      byteArray0[6] = (byte) (-118);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setStatementType(2004);
      GDSType.getType((String) null);
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl0.registerTransaction(isc_tr_handle_impl0);
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      MockThread mockThread0 = new MockThread();
      MockThread.currentThread();
      MockThread mockThread1 = new MockThread();
      mockThread0.getStackTrace();
      MockThread.getDefaultUncaughtExceptionHandler();
      mockThread1.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.reset();
      MockThread.interrupted();
      mockThread1.run();
      MockThread mockThread2 = new MockThread(mockThread1);
      MockThread.getAllStackTraces();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.getAllStackTraces();
      Thread[] threadArray0 = new Thread[6];
      threadArray0[0] = (Thread) mockThread1;
      threadArray0[1] = (Thread) mockThread0;
      threadArray0[2] = (Thread) mockThread2;
      threadArray0[3] = (Thread) mockThread0;
      threadArray0[4] = (Thread) mockThread0;
      threadArray0[5] = (Thread) mockThread2;
      MockThread.enumerate(threadArray0);
      MockThread.getAllStackTraces();
      MockThread.reset();
      MockThread.enumerate(threadArray0);
      MockThread.getAllStackTraces();
      MockThread.dumpStack();
      MockThread mockThread3 = new MockThread((ThreadGroup) null, threadArray0[2]);
      MockThread mockThread4 = new MockThread((ThreadGroup) null, threadArray0[4], ",kM<x6&J(Dj");
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher1.relative(3);
      assertTrue(fBCachedFetcher1.isAfterLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4821598462375025
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isLast());
      assertEquals(3, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("UNIQUE_FLAG");
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread();
      MockThread.getDefaultUncaughtExceptionHandler();
      mockThread0.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread2 = new MockThread("UNIQUE_FLAG");
      MockThread mockThread3 = new MockThread(mockThread0, "UNIQUE_FLAG");
      MockThread mockThread4 = new MockThread((ThreadGroup) null, mockThread3, "UNIQUE_FLAG");
      mockThread1.getStackTrace();
      MockThread mockThread5 = new MockThread(mockThread0, "C6h{s+W:>b");
      MockThread.interrupted();
      MockThread mockThread6 = new MockThread(mockThread3);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[17];
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread0;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.reset();
      mockThread3.run();
      MockThread mockThread7 = new MockThread(mockThread6, "C6h{s+W:>b");
      MockThread.enumerate(threadArray0);
      MockThread mockThread8 = new MockThread(mockThread1, "-[(GuwP'1QK");
      MockThread mockThread9 = new MockThread((ThreadGroup) null, mockThread8, "0\"a}^`(6Dl9rwU");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.isEmpty();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6876045942226745
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.clone();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      fBResultSet0.next();
      fBCachedFetcher0.absolute((-1716));
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.477162848666209
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1984543287850427
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[7];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[0] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[2] = fBCachedLongVarCharFieldArray0[1];
      fBCachedLongVarCharFieldArray0[3] = fBCachedLongVarCharFieldArray0[2];
      fBCachedLongVarCharFieldArray0[4] = fBCachedLongVarCharFieldArray0[3];
      fBCachedLongVarCharFieldArray0[5] = fBCachedLongVarCharFieldArray0[4];
      fBCachedLongVarCharFieldArray0[6] = fBCachedLongVarCharFieldArray0[5];
      linkedList0.toArray(fBCachedLongVarCharFieldArray0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isBeforeFirst();
      byte[][] byteArray0 = new byte[6][4];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-95);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)9;
      byteArray1[3] = (byte) (-24);
      byteArray1[4] = (byte)25;
      byteArray1[5] = (byte)118;
      byteArray1[6] = (byte) (-89);
      byteArray1[7] = (byte) (-44);
      byteArray1[8] = (byte)4;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)9;
      byteArray2[1] = (byte)4;
      byteArray2[2] = (byte) (-89);
      byteArray2[3] = (byte) (-95);
      byteArray2[4] = (byte) (-112);
      byteArray2[6] = (byte) (-89);
      byteArray2[7] = (byte)118;
      byteArray2[8] = (byte)118;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-95);
      byteArray3[1] = (byte) (-89);
      byteArray3[2] = (byte) (-24);
      byteArray3[3] = (byte) (-44);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte)25;
      byteArray4[1] = (byte)4;
      byteArray4[2] = (byte) (-24);
      byteArray4[3] = (byte)0;
      byteArray4[4] = (byte)9;
      byteArray4[5] = (byte)4;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte)118;
      byteArray5[2] = (byte)0;
      byteArray5[3] = (byte) (-89);
      byteArray5[4] = (byte) (-44);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[4];
      byteArray6[0] = (byte) (-112);
      byteArray6[1] = (byte)9;
      byteArray6[2] = (byte)4;
      byteArray6[3] = (byte) (-24);
      byteArray0[5] = byteArray6;
      fBCachedFetcher0.insertRow(byteArray0);
      assertTrue(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8246445216539908
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[4][1];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      linkedList0.add(byteArray0);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-118);
      byteArray4[6] = (byte) (-118);
      byteArray4[2] = (byte) (-118);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      predicate3.test(fileSystemHandling0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate3.and(predicate2);
      predicate4.or(predicate0);
      predicate5.test(linkedList0);
      Predicate<Object> predicate6 = predicate5.or(predicate3);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate3);
      predicate7.negate();
      predicate0.and(predicate3);
      Predicate<Object> predicate8 = predicate6.or(predicate7);
      Predicate.isEqual((Object) predicate2);
      predicate8.or(predicate4);
      predicate3.negate();
      predicate7.negate();
      predicate4.negate();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 1465);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl0.receiveResponse(isc_db_handle_impl1, 1465);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSelectCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setUpdateCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8393579695774942
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("UNIQUE_FLAG");
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread mockThread2 = new MockThread(mockThread0, "UNIQUE_FLAG");
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread2, "UNIQUE_FLAG");
      mockThread1.getStackTrace();
      MockThread mockThread4 = new MockThread(mockThread0, "C6h{s+W:>b");
      MockThread.interrupted();
      MockThread mockThread5 = new MockThread(mockThread2);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[17];
      mockThread5.getStackTrace();
      MockThread mockThread6 = new MockThread((ThreadGroup) null, "^KkC94m5");
      MockThread mockThread7 = new MockThread(mockThread2, "^KkC94m5");
      MockThread mockThread8 = new MockThread((ThreadGroup) null, mockThread7, "^KkC94m5");
      mockThread2.getStackTrace();
      byte[][] byteArray0 = new byte[8][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte) (-49);
      byteArray1[2] = (byte)72;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte) (-70);
      byteArray1[5] = (byte)67;
      byteArray1[6] = (byte)118;
      byteArray1[7] = (byte) (-8);
      byteArray1[8] = (byte) (-82);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-70);
      byteArray3[1] = (byte)67;
      byteArray3[2] = (byte)39;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte)118;
      byteArray4[1] = (byte) (-66);
      byteArray4[2] = (byte)72;
      byteArray4[3] = (byte) (-49);
      byteArray4[4] = (byte) (-88);
      byteArray4[5] = (byte) (-66);
      byteArray4[6] = (byte) (-67);
      byteArray4[7] = (byte) (-2);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[7];
      byteArray5[0] = (byte) (-82);
      byteArray5[1] = (byte)118;
      byteArray5[2] = (byte) (-67);
      byteArray5[3] = (byte) (-49);
      byteArray5[4] = (byte) (-10);
      byteArray5[5] = (byte)11;
      byteArray5[6] = (byte) (-2);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte)67;
      byteArray6[1] = (byte)118;
      byteArray6[2] = (byte) (-2);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[2];
      byteArray7[0] = (byte)11;
      byteArray7[1] = (byte)39;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[5];
      byteArray8[0] = (byte) (-66);
      byteArray8[1] = (byte) (-66);
      byteArray8[2] = (byte) (-67);
      byteArray8[3] = (byte) (-49);
      byteArray8[4] = (byte) (-2);
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      MockThread mockThread9 = new MockThread(mockThread6, "^KkC94m5");
      MockThread.interrupted();
      MockThread.interrupted();
      MockThread mockThread10 = new MockThread(mockThread8);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap2 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.reset();
      MockThread mockThread11 = new MockThread(mockThread5, "C6h{s+W:>b");
      MockThread.enumerate(threadArray0);
      MockThread mockThread12 = new MockThread((ThreadGroup) null, mockThread5, "C6h{s+W:>b");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-5298));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.166330769463752
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.329762467869229
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte) (-112);
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte) (-71);
      byteArray0[5] = (byte) (-9);
      byteArray0[6] = (byte)57;
      byteArray0[7] = (byte) (-44);
      byteArray0[8] = (byte) (-79);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.clone();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.push((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      fBCachedFetcher0.next();
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isEmpty());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][5];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)108;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)108;
      byteArray2[1] = (byte)108;
      byteArray2[2] = (byte)108;
      byteArray2[3] = (byte)108;
      byteArray2[4] = (byte)108;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte)108;
      byteArray3[1] = (byte)108;
      byteArray3[2] = (byte)108;
      byteArray3[3] = (byte)108;
      byteArray3[4] = (byte)108;
      byteArray3[5] = (byte)108;
      byteArray3[6] = (byte)108;
      byteArray3[7] = (byte)108;
      byteArray3[8] = (byte) (-23);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte) (-23);
      byteArray4[1] = (byte) (-23);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-23);
      byteArray5[1] = (byte) (-41);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte) (-41);
      byteArray6[1] = (byte) (-23);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-41);
      byteArray7[1] = (byte) (-41);
      byteArray7[2] = (byte) (-41);
      byteArray7[3] = (byte) (-23);
      byteArray7[4] = (byte) (-23);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte) (-41);
      byteArray8[1] = (byte) (-41);
      byteArray8[2] = (byte) (-23);
      byteArray8[3] = (byte) (-41);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[8];
      byteArray9[0] = (byte) (-23);
      byteArray9[1] = (byte)108;
      byteArray9[2] = (byte)108;
      byteArray9[3] = (byte)108;
      byteArray9[4] = (byte)108;
      byteArray9[5] = (byte) (-41);
      byteArray9[6] = (byte) (-41);
      byteArray9[7] = (byte)108;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      databaseParameterBufferImp0.addArgument((-1793));
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.peek();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      linkedList1.removeIf(predicate0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R!JZB09L+P'xv]");
      linkedList1.removeFirstOccurrence((Object) null);
      boolean boolean0 = fBCachedFetcher1.absolute(335544707);
      assertEquals(2, fBCachedFetcher1.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][6];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)103;
      byteArray1[1] = (byte) (-81);
      byteArray1[2] = (byte)103;
      byteArray1[3] = (byte) (-63);
      byteArray1[4] = (byte) (-94);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-94);
      byteArray2[1] = (byte) (-63);
      byteArray2[2] = (byte) (-63);
      byteArray2[3] = (byte)103;
      byteArray0[1] = byteArray2;
      byteArray0[2] = byteArray1;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-94);
      byteArray3[1] = (byte) (-63);
      byteArray3[2] = (byte)103;
      byteArray0[3] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte) (-94);
      byteArray4[1] = (byte)125;
      byteArray4[2] = (byte) (-63);
      byteArray0[4] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte) (-63);
      byteArray5[1] = (byte)103;
      byteArray5[2] = (byte) (-94);
      byteArray5[3] = (byte)49;
      byteArray5[4] = (byte) (-81);
      byteArray0[5] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte)49;
      byteArray6[1] = (byte)103;
      byteArray6[2] = (byte)125;
      byteArray6[3] = (byte) (-63);
      byteArray6[4] = (byte)49;
      byteArray6[5] = (byte) (-2);
      byteArray6[6] = (byte)125;
      byteArray0[6] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[1] = (byte)103;
      byteArray7[2] = (byte)125;
      byteArray7[3] = (byte) (-81);
      byteArray7[4] = (byte)23;
      byteArray7[5] = (byte) (-81);
      byteArray0[7] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte)23;
      byteArray8[1] = (byte)23;
      byteArray8[2] = (byte) (-81);
      byteArray8[3] = (byte) (-94);
      byteArray0[8] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(335544707);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7875550098159887
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      linkedList2.add((byte[][]) null);
      linkedList1.parallelStream();
      linkedList1.add((byte[][]) null);
      linkedList1.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread.interrupted();
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[1];
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.previous();
      assertTrue(fBCachedFetcher1.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      javaGDSImpl0.createEventHandle("PURE_JAVA");
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_db_handle_impl1.in = null;
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_db_handle_impl1.in = null;
      isc_db_handle_impl1.getWarnings();
      isc_db_handle_impl2.setODSMinorVersion(1503);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      javaGDSImpl0.receiveResponse(isc_db_handle_impl1, 1503);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      byte[][] byteArray0 = new byte[5][4];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-98);
      byteArray1[1] = (byte) (-31);
      byteArray1[5] = (byte)18;
      byteArray1[3] = (byte)39;
      byteArray1[4] = (byte)95;
      byteArray1[5] = (byte) (-118);
      byteArray1[6] = (byte)90;
      byteArray1[7] = (byte)62;
      byteArray1[8] = (byte)119;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-98);
      byteArray2[1] = (byte) (-118);
      byteArray2[2] = (byte) (-31);
      byteArray2[3] = (byte)95;
      byteArray2[4] = (byte)39;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[9];
      byteArray3[0] = (byte) (-98);
      byteArray1[1] = (byte) (-31);
      byteArray3[2] = (byte) (-31);
      byteArray3[3] = (byte)119;
      byteArray3[4] = (byte)39;
      byteArray3[6] = (byte)62;
      byteArray3[7] = (byte)90;
      byteArray3[8] = (byte)18;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte) (-118);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)90;
      byteArray5[1] = (byte)62;
      byteArray5[2] = (byte)39;
      byteArray5[3] = (byte)95;
      byteArray5[4] = (byte) (-98);
      byteArray0[4] = byteArray5;
      isc_stmt_handle_impl.printRow(byteArray0);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl5 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.wire.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_tr_handle_impl();
      isc_stmt_handle_impl1.registerTransaction(isc_tr_handle_impl0);
      JavaGDSImpl.parseRawAddress("'LB");
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl1, databaseParameterBufferImp0, isc_db_handle_impl3, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.statement = null;
      isc_db_handle_impl3.clearWarnings();
      isc_stmt_handle_impl0.setStatementType(1);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 6, 3, isc_stmt_handle_impl6, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[3];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharFieldArray0[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("_&+");
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread();
      MockThread.getDefaultUncaughtExceptionHandler();
      mockThread0.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread2 = new MockThread((ThreadGroup) null, "_&+");
      MockThread mockThread3 = new MockThread(mockThread0, "_&+");
      MockThread mockThread4 = new MockThread((ThreadGroup) null, mockThread3, "_&+");
      MockThread mockThread5 = new MockThread();
      MockThread.reset();
      MockThread.getAllStackTraces();
      MockThread mockThread6 = new MockThread(mockThread5, "_&+");
      mockThread0.getContextClassLoader();
      MockThread.interrupted();
      MockThread mockThread7 = new MockThread(mockThread3);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[25];
      MockThread.reset();
      mockThread7.getContextClassLoader();
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread2;
      threadArray0[2] = (Thread) mockThread2;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.reset();
      mockThread3.run();
      MockThread mockThread8 = new MockThread(mockThread7, "_&+");
      MockThread.enumerate(threadArray0);
      MockThread mockThread9 = new MockThread(mockThread1, "_&+");
      MockThread mockThread10 = new MockThread((ThreadGroup) null, mockThread9, "0\"a}^`(6Dl9rwU");
      byte[][] byteArray0 = new byte[5][7];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)0;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte) (-39);
      byteArray4[1] = (byte)18;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte) (-39);
      byteArray5[2] = (byte)18;
      byteArray5[3] = (byte)0;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Object object0 = new Object();
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate5.or(predicate6);
      Predicate<Object> predicate8 = predicate2.and(predicate1);
      Integer integer0 = new Integer(1524);
      Predicate<Delayed> predicate9 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate10 = predicate3.negate();
      Predicate<Object> predicate11 = predicate3.negate();
      Predicate<Object> predicate12 = predicate11.negate();
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate13.negate();
      Predicate<Object> predicate15 = predicate7.or(predicate0);
      Predicate<Object> predicate16 = predicate2.and(predicate15);
      predicate16.test(predicate15);
      Predicate<Object> predicate17 = predicate16.and(predicate3);
      predicate9.negate();
      Predicate<Object> predicate18 = predicate8.negate();
      predicate5.test(predicate10);
      predicate1.or(predicate12);
      Predicate<Object> predicate19 = predicate18.negate();
      predicate19.negate();
      predicate7.and(predicate10);
      predicate17.negate();
      predicate2.negate();
      predicate15.negate();
      Predicate<Object> predicate20 = predicate14.negate();
      predicate20.and(predicate16);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-53);
      byteArray1[1] = (byte)94;
      byteArray1[2] = (byte)73;
      byteArray1[3] = (byte)83;
      byteArray1[4] = (byte) (-21);
      byteArray1[5] = (byte)109;
      byteArray1[6] = (byte) (-52);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("7*l6");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jMXPrincipal0);
      Object object0 = new Object();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("7*l6");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.or(predicate0);
      Predicate<Object> predicate5 = predicate2.and(predicate1);
      Predicate<Object> predicate6 = predicate4.or(predicate5);
      predicate2.and(predicate1);
      Predicate<Object> predicate7 = Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate8 = predicate0.negate();
      predicate8.negate();
      Predicate<Object> predicate9 = predicate3.negate();
      predicate7.and(predicate1);
      Predicate<Object> predicate10 = predicate8.or(predicate0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Predicate<Object> predicate11 = predicate6.or(predicate0);
      Predicate<Object> predicate12 = predicate2.and(predicate11);
      predicate12.test(predicate11);
      Predicate<Object> predicate13 = predicate3.or(predicate12);
      predicate4.test(predicate7);
      predicate13.or(predicate9);
      Predicate.isEqual(object0);
      predicate4.and(predicate5);
      jMXPrincipal0.equals(predicate9);
      Predicate<Object> predicate14 = predicate2.negate();
      Predicate<Object> predicate15 = predicate5.or(predicate11);
      predicate14.negate();
      Predicate<Object> predicate16 = predicate1.negate();
      Predicate<Object> predicate17 = predicate10.and(predicate15);
      predicate16.and(predicate17);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("7*l6");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jMXPrincipal0);
      Object object0 = new Object();
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("7*l6");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      Predicate<Object> predicate6 = predicate2.and(predicate1);
      Predicate<Object> predicate7 = predicate5.or(predicate6);
      predicate2.and(predicate1);
      Predicate<Object> predicate8 = Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate9 = predicate0.negate();
      predicate9.negate();
      Predicate<Object> predicate10 = predicate3.negate();
      predicate8.and(predicate1);
      Predicate<Object> predicate11 = predicate9.or(predicate0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Predicate<Object> predicate12 = predicate7.or(predicate0);
      Predicate<Object> predicate13 = predicate2.and(predicate12);
      predicate13.test(predicate12);
      Predicate<Object> predicate14 = predicate3.or(predicate13);
      predicate5.test(predicate8);
      predicate14.or(predicate10);
      Predicate.isEqual(object0);
      predicate5.and(predicate6);
      jMXPrincipal0.equals(predicate10);
      Predicate<Object> predicate15 = predicate2.negate();
      Predicate<Object> predicate16 = predicate6.or(predicate12);
      predicate15.negate();
      Predicate<Object> predicate17 = predicate1.negate();
      Predicate<Object> predicate18 = predicate11.and(predicate16);
      predicate17.and(predicate18);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][8];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("7*l6");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) jMXPrincipal0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate5.or(predicate6);
      Predicate<Object> predicate8 = predicate2.and(predicate1);
      Integer integer0 = new Integer(1516);
      Predicate<Delayed> predicate9 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate10 = predicate3.negate();
      Predicate<Object> predicate11 = predicate1.negate();
      Predicate<Object> predicate12 = predicate11.negate();
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate13.negate();
      Predicate<Object> predicate15 = predicate5.negate();
      Predicate<Object> predicate16 = predicate7.or(predicate0);
      Predicate<Object> predicate17 = predicate8.negate();
      predicate17.test(predicate16);
      Predicate<Object> predicate18 = predicate17.and(predicate3);
      predicate9.negate();
      predicate3.or(predicate17);
      predicate5.test(predicate10);
      Predicate<Object> predicate19 = predicate12.negate();
      predicate7.and(predicate10);
      Predicate<Object> predicate20 = predicate11.negate();
      predicate3.negate();
      predicate14.negate();
      predicate19.and(predicate20);
      predicate18.and(predicate15);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      javaGDSImpl0.createEventHandle("PURE_JAVA");
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_db_handle_impl1.in = null;
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_db_handle_impl1.in = null;
      isc_db_handle_impl1.getWarnings();
      isc_db_handle_impl2.setODSMinorVersion(1503);
      isc_db_handle_impl1.getOpenTransactionCount();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl0.receiveResponse(isc_db_handle_impl1, 1503);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl5 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_db_handle_impl2.getResp_data_truncated();
      isc_tr_handle_impl0.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[][] byteArray0 = new byte[1][8];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte)1;
      byteArray1[3] = (byte)0;
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[9];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[0] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[2] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[3] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[4] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[5] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[6] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[7] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[8] = fBCachedLongVarCharField0;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((byte)0);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[][] byteArray0 = new byte[12][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[3];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[0] = fBCachedLongVarCharFieldArray0[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      Subject subject0 = new Subject();
      Class<byte[][]> class0 = byte[][].class;
      Set<byte[][]> set0 = subject0.getPublicCredentials(class0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>(set0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_db_handle_impl0.getSubject();
      isc_db_handle_impl0.setSubject((Subject) null);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener1 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener1);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.iterator();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[][] byteArray0 = new byte[5][8];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byteArray0[1] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[2] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[3] = gDSHelper0.BLOB_LENGTH_REQUEST;
      byteArray0[4] = gDSHelper0.BLOB_LENGTH_REQUEST;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("kP-Fii,3sK;U>8>");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("kP-Fii,3sK;U>8>");
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread();
      byte[][] byteArray0 = new byte[6][0];
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte) (-122);
      byteArray1[2] = (byte) (-13);
      byteArray1[3] = (byte) (-44);
      byteArray1[4] = (byte) (-44);
      byteArray1[5] = (byte) (-23);
      byteArray1[6] = (byte)40;
      byteArray1[7] = (byte)11;
      byteArray1[8] = (byte) (-49);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-122);
      byteArray2[1] = (byte) (-57);
      byteArray2[2] = (byte)11;
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte) (-44);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-23);
      byteArray3[1] = (byte) (-49);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[3];
      byteArray4[0] = (byte)40;
      byteArray4[1] = (byte) (-57);
      byteArray4[2] = (byte) (-57);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[2] = (byte) (-23);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte)11;
      byteArray6[2] = (byte) (-49);
      byteArray6[3] = (byte) (-13);
      byteArray6[4] = (byte)40;
      byteArray6[5] = (byte) (-49);
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      MockThread.getDefaultUncaughtExceptionHandler();
      mockThread0.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread2 = new MockThread((ThreadGroup) null, "_&+");
      MockThread mockThread3 = new MockThread(mockThread0, "_&+");
      MockThread mockThread4 = new MockThread((ThreadGroup) null, mockThread3, "_&+");
      mockThread1.getStackTrace();
      MockThread mockThread5 = new MockThread(mockThread0, "C6h{s+W:>b");
      mockThread5.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.interrupted();
      MockThread mockThread6 = new MockThread(mockThread3);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[5];
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.reset();
      MockThread mockThread7 = new MockThread(threadArray0[3], "-[(G]wQ'1QK");
      MockThread.enumerate(threadArray0);
      MockThread mockThread8 = new MockThread((ThreadGroup) null, threadArray0[4], "C6h{s+W:>b");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-5298));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("V*pz");
      MockThread mockThread0 = new MockThread("V*pz");
      MockThread mockThread1 = new MockThread("V*pz");
      MockThread mockThread2 = new MockThread("V*pz");
      mockThread2.getStackTrace();
      mockThread0.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.reset();
      MockThread.interrupted();
      mockThread2.run();
      MockThread mockThread3 = new MockThread(mockThread2);
      MockThread.getAllStackTraces();
      mockThread3.getContextClassLoader();
      MockThread.getDefaultUncaughtExceptionHandler();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      Thread[] threadArray0 = new Thread[10];
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread2;
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.enumerate(threadArray0);
      Thread[] threadArray1 = new Thread[5];
      threadArray1[0] = (Thread) mockThread0;
      MockThread.getAllStackTraces();
      MockThread.reset();
      threadArray1[1] = (Thread) mockThread3;
      threadArray1[2] = (Thread) mockThread2;
      threadArray1[3] = (Thread) mockThread2;
      threadArray1[1] = (Thread) mockThread0;
      MockThread.enumerate(threadArray1);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.dumpStack();
      mockThread3.run();
      MockThread mockThread4 = new MockThread(mockThread2, "T4GwR]></");
      MockThread mockThread5 = new MockThread((ThreadGroup) null, mockThread0, "V*pz");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative(3);
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("kP-Fii,3sK;U>8>");
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("kP-Fii,3sK;U>8>");
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread();
      Thread thread0 = MockThread.currentThread();
      MockThread mockThread2 = new MockThread(mockThread0, "7*l6");
      MockThread mockThread3 = new MockThread((ThreadGroup) null, mockThread2, "7*l6");
      mockThread1.getStackTrace();
      MockThread mockThread4 = new MockThread(mockThread0, "C6h{s+W:>b");
      mockThread4.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread.interrupted();
      MockThread.interrupted();
      MockThread mockThread5 = new MockThread(mockThread2);
      MockThread.getAllStackTraces();
      Thread[] threadArray0 = new Thread[5];
      threadArray0[0] = thread0;
      threadArray0[1] = thread0;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = thread0;
      threadArray0[4] = (Thread) mockThread0;
      MockThread.enumerate(threadArray0);
      MockThread.reset();
      MockThread mockThread6 = new MockThread(thread0, "-[(G]wQ'1QK");
      MockThread.enumerate(threadArray0);
      MockThread mockThread7 = new MockThread(mockThread4, "\"T@kL[2#OW9(1}#(");
      MockThread mockThread8 = new MockThread((ThreadGroup) null, threadArray0[4], "F(^J:l;");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.absolute((-5298));
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.354640740535752
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte) (-118);
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte) (-118);
      byte[][] byteArray1 = new byte[3][2];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byteArray1[2] = byteArray0;
      linkedList0.add(byteArray1);
      byteArray0[5] = (byte) (-125);
      byteArray0[6] = (byte) (-118);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      linkedList0.add((byte[][]) null);
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      int int0 = 2004;
      isc_stmt_handle_impl0.setStatementType(2004);
      GDSType.getType((String) null);
      FBConnectionProperties fBConnectionProperties0 = new FBConnectionProperties();
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null, fBConnectionProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("UNIQUE_FLAG");
      MockThread mockThread0 = new MockThread();
      MockThread mockThread1 = new MockThread();
      MockThread.getDefaultUncaughtExceptionHandler();
      mockThread0.setUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      MockThread mockThread2 = new MockThread((ThreadGroup) null, "UNIQUE_FLAG");
      MockThread mockThread3 = new MockThread(mockThread0, "UNIQUE_FLAG");
      MockThread mockThread4 = new MockThread((ThreadGroup) null, mockThread3, "UNIQUE_FLAG");
      mockThread1.getStackTrace();
      MockThread mockThread5 = new MockThread(mockThread0, "C6h{s+W:>b");
      MockThread.interrupted();
      MockThread mockThread6 = new MockThread(mockThread3);
      HashMap<Thread, StackTraceElement[]> hashMap0 = new HashMap<Thread, StackTraceElement[]>();
      Thread[] threadArray0 = new Thread[17];
      MockThread.reset();
      threadArray0[0] = (Thread) mockThread2;
      threadArray0[1] = (Thread) mockThread0;
      threadArray0[2] = (Thread) mockThread1;
      threadArray0[3] = (Thread) mockThread2;
      threadArray0[4] = (Thread) mockThread1;
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap1 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.enumerate(threadArray0);
      HashMap<Thread, StackTraceElement[]> hashMap2 = new HashMap<Thread, StackTraceElement[]>();
      MockThread.reset();
      mockThread0.run();
      MockThread mockThread7 = new MockThread(mockThread6, "UNIQUE_FLAG");
      MockThread.enumerate(threadArray0);
      MockThread mockThread8 = new MockThread(mockThread6, "C6h{s+W:>b");
      MockThread mockThread9 = new MockThread((ThreadGroup) null, mockThread2, "You cannot position to the row 0 with absolute() method.");
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.last();
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.537303308770071
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[][] byteArray0 = new byte[1][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[5];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[0] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[2] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[3] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[4] = fBCachedLongVarCharField0;
      linkedList0.toArray(fBCachedLongVarCharFieldArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isAfterLast();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][5];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      FBCachedLongVarCharField[] fBCachedLongVarCharFieldArray0 = new FBCachedLongVarCharField[5];
      FBCachedLongVarCharField fBCachedLongVarCharField0 = mock(FBCachedLongVarCharField.class, new ViolatedAssumptionAnswer());
      fBCachedLongVarCharFieldArray0[0] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[1] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[2] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[3] = fBCachedLongVarCharField0;
      fBCachedLongVarCharFieldArray0[4] = fBCachedLongVarCharField0;
      linkedList0.toArray(fBCachedLongVarCharFieldArray0);
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 1465);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl0.receiveResponse(isc_db_handle_impl1, 1465);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSelectCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setUpdateCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setStatementType(466);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte) (-61);
      byteArray1[2] = (byte)91;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte) (-61);
      byteArray2[2] = (byte) (-61);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)91;
      byteArray3[2] = (byte)91;
      byteArray3[3] = (byte) (-128);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte) (-61);
      byteArray5[2] = (byte)8;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-61);
      byteArray6[1] = (byte)91;
      byteArray6[2] = (byte) (-128);
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)0;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte) (-128);
      byteArray7[1] = (byte)8;
      byteArray7[2] = (byte) (-128);
      byteArray7[3] = (byte)91;
      byteArray7[4] = (byte)0;
      byteArray7[5] = (byte)91;
      byteArray7[6] = (byte)8;
      byteArray7[7] = (byte) (-61);
      byteArray7[8] = (byte)8;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte)91;
      byteArray8[1] = (byte)8;
      byteArray8[2] = (byte)0;
      byteArray8[3] = (byte)91;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[12];
      byteArray9[0] = (byte)91;
      byteArray9[1] = (byte)91;
      byteArray9[2] = (byte)91;
      byteArray9[3] = (byte) (-21);
      byteArray9[4] = (byte)48;
      byteArray9[5] = (byte)0;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_db_handle_impl1.in = null;
      isc_db_handle_impl0.getOpenTransactionCount();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_db_handle_impl1.in = null;
      isc_db_handle_impl0.getWarnings();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl5 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_tr_handle_impl isc_tr_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_tr_handle_impl();
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_tr_handle_impl1.registerStatementWithTransaction(isc_stmt_handle_impl4);
      isc_tr_handle_impl1.registerStatementWithTransaction(isc_stmt_handle_impl1);
      org.firebirdsql.gds.impl.wire.isc_tr_handle_impl isc_tr_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_tr_handle_impl();
      isc_tr_handle_impl2.unregisterStatementFromTransaction(isc_stmt_handle_impl1);
      isc_stmt_handle_impl1.registerTransaction(isc_tr_handle_impl2);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_db_handle_impl5.clearWarnings();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl5, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl6 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_db_handle_impl1.clearWarnings();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.relative((-1113));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate4.or(predicate5);
      Predicate<Object> predicate7 = predicate2.and(predicate1);
      Integer integer0 = new Integer(1524);
      Predicate<Delayed> predicate8 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate9 = predicate1.negate();
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate<Object> predicate11 = predicate10.negate();
      Predicate<Object> predicate12 = predicate11.negate();
      predicate12.negate();
      Predicate<Object> predicate13 = predicate6.or(predicate0);
      Predicate<Object> predicate14 = predicate2.and(predicate13);
      predicate14.test(predicate13);
      Predicate<Object> predicate15 = predicate14.and(predicate1);
      predicate8.negate();
      Predicate<Object> predicate16 = predicate7.negate();
      predicate4.test(predicate9);
      Predicate<Object> predicate17 = predicate2.negate();
      predicate13.or(predicate17);
      Predicate<Object> predicate18 = predicate1.or(predicate11);
      Predicate<Object> predicate19 = predicate16.negate();
      predicate19.negate();
      predicate6.and(predicate9);
      Predicate<Object> predicate20 = predicate15.negate();
      predicate18.negate();
      predicate20.negate();
      Predicate<Object> predicate21 = predicate15.negate();
      predicate14.and(predicate21);
      System.setCurrentTimeMillis(1190);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][3];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 1465);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl0.receiveResponse(isc_db_handle_impl1, 1465);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSelectCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setUpdateCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setStatementType(466);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte) (-61);
      byteArray1[2] = (byte)91;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte) (-61);
      byteArray2[2] = (byte) (-61);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)91;
      byteArray3[2] = (byte)91;
      byteArray3[3] = (byte) (-128);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte) (-61);
      byteArray5[2] = (byte)8;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-61);
      byteArray6[1] = (byte)91;
      byteArray6[2] = (byte) (-128);
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)0;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte) (-128);
      byteArray7[1] = (byte)8;
      byteArray7[2] = (byte) (-128);
      byteArray7[3] = (byte)91;
      byteArray7[4] = (byte)0;
      byteArray7[5] = (byte)91;
      byteArray7[6] = (byte)8;
      byteArray7[7] = (byte) (-61);
      byteArray7[8] = (byte)8;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[4];
      byteArray8[0] = (byte)91;
      byteArray8[1] = (byte)8;
      byteArray8[2] = (byte)0;
      byteArray8[3] = (byte)91;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[6];
      byteArray9[0] = (byte)91;
      byteArray9[1] = (byte)91;
      byteArray9[2] = (byte)91;
      byteArray9[3] = (byte) (-21);
      byteArray9[4] = (byte)48;
      byteArray9[5] = (byte)0;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.296693743028769
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.stream();
      linkedList0.parallelStream();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      LinkedHashSet<FBBlobField> linkedHashSet0 = new LinkedHashSet<FBBlobField>();
      linkedList0.removeAll(linkedHashSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add((byte[][]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.close();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      javaGDSImpl0.createEventHandle("PURE_JAVA");
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_db_handle_impl1.in = null;
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      isc_db_handle_impl1.in = null;
      isc_db_handle_impl1.getWarnings();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.removeRows();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl5 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl3 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl5.getTransaction();
      isc_stmt_handle_impl0.registerTransaction((AbstractIscTrHandle) null);
      JavaGDSImpl.parseRawAddress("You cannot position to the row 0 with absolute() method.");
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      isc_db_handle_impl5.clearWarnings();
      isc_stmt_handle_impl7.setStatementType(5);
      isc_stmt_handle_impl isc_stmt_handle_impl8 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      fBCachedFetcher0.isFirst();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.getRowNum();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl1 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl2 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl0, 1465);
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl3 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl4 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl2 = new JavaGDSImpl();
      javaGDSImpl0.receiveResponse(isc_db_handle_impl1, 1465);
      javaGDSImpl0.createIscBlobHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl4 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setSelectCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl5 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setUpdateCount((-1305));
      isc_stmt_handle_impl isc_stmt_handle_impl6 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl4.setStatementType(466);
      isc_stmt_handle_impl isc_stmt_handle_impl7 = new isc_stmt_handle_impl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-128);
      byteArray1[1] = (byte) (-61);
      byteArray1[2] = (byte)91;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-128);
      byteArray2[1] = (byte) (-61);
      byteArray2[2] = (byte) (-61);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)91;
      byteArray3[2] = (byte)91;
      byteArray3[3] = (byte) (-128);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[3];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte) (-61);
      byteArray5[2] = (byte)8;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-61);
      byteArray6[1] = (byte)91;
      byteArray6[2] = (byte) (-128);
      byteArray6[3] = (byte)0;
      byteArray6[4] = (byte)0;
      byteArray0[5] = byteArray6;
      byteArray0[6] = byteArray1;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte)91;
      byteArray7[1] = (byte)8;
      byteArray7[2] = (byte)0;
      byteArray0[7] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte)91;
      byteArray8[1] = (byte)91;
      byteArray8[2] = (byte)91;
      byteArray8[3] = (byte) (-21);
      byteArray8[4] = (byte)48;
      byteArray8[5] = (byte)0;
      byteArray0[8] = byteArray8;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
