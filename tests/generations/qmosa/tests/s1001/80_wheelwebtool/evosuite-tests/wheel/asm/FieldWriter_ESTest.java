/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 01:21:36 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      classWriter0.index = (-2444);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "ConstantValue", "The filters must not be null", "ConstantValue", "The filters must not be null");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      classWriter0.index = (-2444);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "ConstantValue", "The filters must not be null", "The filters must not be null", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-64));
      classWriter0.visit((-64), (-64), "\"R_ZN`)&v", "~m&;_bLtQ4T", "\"R_ZN`)&v", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65115, "~m&;_bLtQ4T", "", "The filters must not be null", "r,-Vy\"h97<?CIR9UKL");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777213);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777213, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      classWriter0.index = 131072;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "7&zftf|{$vR5CJs 4r^", "7&zftf|{$vR5CJs 4r^", "7&zftf|{$vR5CJs 4r^");
      fieldWriter0.getSize();
      // Undeclared exception!
      fieldWriter0.visitAnnotation("M", false);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1809));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-2), "", "RuntimeVisibleAnnotations", "", "RuntimeVisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (int) (byte)88;
      ClassWriter classWriter0 = new ClassWriter((byte)88);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)88, "/;g*>O0u", "/;g*>O0u", "/;g*>O0u", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-11));
      classWriter0.index = 131072;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Synthetic", "7&zftf|{$vR5CJs 4r^", "7&zftf|{$vR5CJs 4r^", "7&zftf|{$vR5CJs 4r^");
      fieldWriter0.visitAnnotation("7&zftf|{$vR5CJs 4r^", false);
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(32);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 1776, "RuntimeVisibleAnnotations", "gZ0$|8Ds,Y85B&t~P", "", byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777226);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777226, "{P\"SOPI^jNhQ", "{P\"SOPI^jNhQ", "{P\"SOPI^jNhQ", "{P\"SOPI^jNhQ");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[8];
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 4096, "e=", "{P\"SOPI^jNhQ", (String) null, "{P\"SOPI^jNhQ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6330395116644678
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(32);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      ByteVector byteVector0 = new ByteVector(32);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6546695645285008
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      ByteVector byteVector0 = new ByteVector(32);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-64));
      ByteVector byteVector0 = new ByteVector();
      classWriter0.visit((-64), (-64), "\"R_ZN`)&v", "~m&;_bLtQ4T", "\"R_ZN`)&v", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65115, "~m&;_bLtQ4T", "", "The filters must not be null", "r,-Vy\"h97<?CIR9UKL");
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteVector byteVector0 = new ByteVector(65535);
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-744), "H|mr>_`bTL/.2?JU?i", "+lVJ<Ars[08YiY", "/;h[*LOm6", "/;h[*LOm6");
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "ConstantValue", "The filters must not be null", "The filters must not be null", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-12), "", "", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-421), "org.apache.commons.io.filefilte?.HiddenileFilter", "org.apache.commons.io.filefilte?.HiddenileFilter", "org.apache.commons.io.filefilte?.HiddenileFilter", "org.apache.commons.io.filefilte?.HiddenileFilter");
      String[] stringArray0 = new String[0];
      classWriter0.visit(49, (-421), "org.apache.commons.io.filefilte?.HiddenileFilter", "|", "|", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8599672810355049
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777220);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777220, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2444));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 185, "", "", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "V!aNWDHBSsKtoT=", "/;h[*LOm6", "7&zftf|{$vR5CJs 4r^", (Object) null);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1, "/;h[*LOm6", "/;h[*LOm6", "V!aNWDHBSsKtoT=", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-421), "org.apache.commons.io.filefilte?.HiddenileFilter", "org.apache.commons.io.filefilte?.HiddenileFilter", "org.apache.commons.io.filefilte?.HiddenileFilter", "org.apache.commons.io.filefilte?.HiddenileFilter");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte)88, "/;h[*LOm6", "", "", (Object) null);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
