/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 07:14:14 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.900451807338465
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("variable.name.label");
      rawVariable0.setName("B");
      User.checkValidUserIDField("ItVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setTerm("ItVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      derivedVariable1.setYear("variable.name.label");
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList4);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable3);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable3.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.getForm();
      // Undeclared exception!
      try { 
        arrayList6.listIterator((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.91744264088867
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("variable.name.label");
      rawVariable0.setName("B");
      User.checkValidUserIDField("ItVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel(")@\r*){qby B;&");
      derivedVariable0.removeSupportingDocument(supportingDocument1);
      supportingDocument0.setDocumentCode("B");
      User.checkValidUserIDField("variable.name.label");
      ArrayList<SupportingDocument> arrayList4 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList4);
      rawVariable0.getSupportingDocuments();
      derivedVariable0.getIdentifier();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      System.setCurrentTimeMillis(2821L);
      derivedVariable0.getIdentifier();
      System.setCurrentTimeMillis(2821L);
      ArrayList<Variable> arrayList5 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList5);
      derivedVariable0.addSourceVariables(arrayList5);
      assertEquals(")@\r*){qby B;&", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.314371970281624
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ontologyTerm1.setIdentifier((-2473));
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList3);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.7158968067482654
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEvent0.setChangedObjectIdentifier((-2004318069));
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "Gf$~-bp8g@nz,", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setDescription("e:`");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.clear();
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent4);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent4.getVariableOwnerID());
      
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList2.add(ontologyTerm1);
      rawVariable0.setOntologyTerms(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      Variable variable0 = derivedVariable0.getAlternativeVariable();
      assertFalse(variable0.isCoded());
      assertFalse(variable0.isNewRecord());
      assertFalse(variable0.isCleaned());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.259345973978942
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.clear();
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.retainAll(linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.columnStart = "nf8";
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setCleaningDescription("4wv");
      derivedVariable0.getFilePath();
      derivedVariable0.columnEnd = null;
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.getColumnStart();
      derivedVariable0.getForm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable0.getIdentifier();
      derivedVariable1.getCleaningStatus();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.listIterator();
      arrayList1.add((Variable) derivedVariable1);
      derivedVariable0.addSourceVariables(arrayList1);
      derivedVariable1.getNotes();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.930696131995678
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("6Uac+qtr");
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("\"5]&yYsxmksW%C,.D", "6Uac+qtr");
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel0);
      derivedVariable0.setCleaned(false);
      derivedVariable0.addValueLabel(valueLabel0);
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getColumnStart();
      rawVariable0.getQuestionNumber();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2174595135485236
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setAvailability("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument0.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      derivedVariable1.setLabel("B");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      User.checkValidUserIDField("variable.year.label");
      derivedVariable1.setCleaned(true);
      derivedVariable1.setCoded(true);
      derivedVariable1.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis(2821L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("DUPLICATE_VARIABLE");
      rawVariable0.setColumnEnd("DUPLICATE_VARIABLE");
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      Integer integer0 = new Integer((-1977));
      arrayList0.remove((Object) integer0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.993564320523925
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User("Ij", "E>");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setQuestionNumber("E>");
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable1.setIdentifier((-2992));
      user0.setIdentifier((-2992));
      rawVariable0.setName("E>");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      rawVariable1.isCoded();
      assertEquals("-2992", rawVariable1.getDisplayItemIdentifier());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.0213871988776284
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle("variable.name.label");
      rawVariable0.setName("0k ");
      User.checkValidUserIDField("ItVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setTerm("variable.saveChanges.valueChanged");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList4 = derivedVariable2.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList4);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable3.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList7 = derivedVariable1.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList7);
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("0k ", rawVariable0.getName());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2212632680088102
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList1);
      derivedVariable2.setIdentifier((-1899));
      derivedVariable2.updateOntologyTerm(ontologyTerm0);
      derivedVariable2.getColumnStart();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      Variable.validateFields(rawVariable1);
      derivedVariable2.createVariableSummary();
      assertEquals((-1899), derivedVariable2.getIdentifier());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("MUhC");
      derivedVariable0.setCodeBookNumber("vnfyvUk2E/v?yL");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setCategory("VB_^");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8778952727983707
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "WM,,";
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.setCategory((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("WM,,", "]jcm%@");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument1);
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.notes = "UNABLE_TO_GET_ORIGINAL_AVAILABILITY_STATE";
      derivedVariable0.getYear();
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getCategory();
      derivedVariable0.getValueLabels();
      derivedVariable0.getName();
      derivedVariable0.isNewRecord();
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.createVariableSummary();
      // Undeclared exception!
      try { 
        derivedVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      supportingDocument0.setIdentifier(47);
      arrayList0.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.setIsNewRecord(true);
      supportingDocument3.setFilePath("variable.columnEnd.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument4);
      rawVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setTitle("S~6K`U ");
      supportingDocument0.setTitle("UX.C2 ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.getFilePath();
      assertTrue(rawVariable0.isNewRecord());
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setValue("MacawProperties");
      String string0 = "US-/N~}|id~V3>@";
      user0.setEmail("US-/N~}|id~V3>@");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      // Undeclared exception!
      try { 
        rawVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.7663113257660132
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.columnEnd = null;
      rawVariable0.clone();
      rawVariable0.questionNumber = null;
      rawVariable0.getName();
      rawVariable0.getFilePath();
      System.setCurrentTimeMillis((-1L));
      rawVariable0.createVariableSummary();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      User user0 = new User("variable.cleaningDescription.label", "");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      User.detectFieldChanges(user0, user0, user0);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.7395563130358958
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath((String) null);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument2.setTitle("variable.columnEnd.label");
      rawVariable0.addSupportingDocument(supportingDocument3);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.setIdentifier((-1981));
      supportingDocument4.setFilePath((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument5);
      User user0 = new User();
      supportingDocument1.setTitle("1");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument4.setTitle("variable.columnEnd.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertTrue(rawVariable0.isCleaned());
      
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIsNewRecord(true);
      rawVariable0.addSupportingDocument(supportingDocument2);
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      User user0 = new User();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      arrayList3.add(supportingDocument0);
      supportingDocument3.setTitle("supportingDocument.fileName.saveChanges");
      supportingDocument1.setDocumentCode("y");
      User.checkValidUserIDField("variable.label.label");
      System.setCurrentTimeMillis(1L);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.792904926173455
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("p=7|OAy");
      rawVariable0.getFilePath();
      rawVariable0.getDisplayName();
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.columnEnd = "(*A,4T#.AMvZzh";
      supportingDocument0.setTitle("macsw.businessLayer.Variable");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getColumnEnd();
      assertEquals("p=7|OAy", rawVariable0.getLabel());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1709567065574427
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ChangeEventType changeEventType0 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "VARIABLE", "]@c4( Qkdo84v");
      MockDate mockDate0 = new MockDate(53, 64, 64);
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setIdentifier(2);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getColumnStart();
      derivedVariable2.setCleaned(true);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.getIdentifier();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable2);
      assertTrue(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0770600871751785
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument0.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      User.checkValidUserIDField("variable.year.label");
      derivedVariable1.setCleaned(true);
      derivedVariable1.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.803035814407887
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "p=7|OAy", "p=7|OAy");
      macawChangeEvent0.setChangedObjectIdentifier(22);
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "Gf$~-bp8g@nz,", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm1.setDescription("K!YT");
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.clear();
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable1);
      assertNotNull(macawChangeEvent4);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent4.getVariableOwnerID());
      
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable1.setOntologyTerms(arrayList0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.964052011031814
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("E>");
      rawVariable0.setLabel("p=7|OAy");
      rawVariable0.columnEnd = "+>z!X";
      rawVariable0.setCleaned(true);
      rawVariable0.form = "qsoK=ELu7XM'(s";
      rawVariable0.getFilePath();
      rawVariable0.getDisplayName();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.isCleaned();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertEquals("p=7|OAy", rawVariable0.getLabel());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.992740721271704
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("E>");
      rawVariable0.setLabel("p=7|OAy");
      rawVariable0.columnEnd = "+>z!X";
      rawVariable0.setCleaned(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getFilePath();
      rawVariable1.getDisplayName();
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable1.containsSupportingDocument(supportingDocument1);
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertEquals("p=7|OAy", rawVariable0.getLabel());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("v*}d`J6q+gm@, E");
      rawVariable0.getFilePath();
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(30);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getFilePath();
      assertEquals("v*}d`J6q+gm@, E", rawVariable0.getLabel());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.7819651430024464
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("variable.name.label");
      rawVariable0.setName("B");
      User.checkValidUserIDField("ItVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setTerm("ItVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.createVariableSummary();
      derivedVariable1.cloneAttributes(derivedVariable0);
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList4);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList6 = derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList7 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList6);
      assertEquals("B", rawVariable0.getName());
      
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.746754576770669
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MockDate mockDate0 = new MockDate((-1667), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.cloneAttributes(derivedVariable0);
      supportingDocument0.setFileName("macaw.businessLayer.Variable");
      supportingDocument0.setDocumentCode("");
      rawVariable1.addSupportingDocument(supportingDocument1);
      derivedVariable0.cloneAttributes(rawVariable1);
      User user0 = new User();
      user0.setEmail("macaw.businessLayer.Variable");
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.setCodeBookNumber("macaw.businessLayer.Variable");
      derivedVariable0.setLabel("macaw.businessLayer.Variable");
      User.checkValidUserIDField("macaw.businessLayer.Variable");
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis((-1879048189));
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.93582674178978
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("variable.name.label");
      rawVariable0.setName("");
      User.checkValidUserIDField("ItVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlias("variable.columnStart.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setTerm("ItVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList4);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable3);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable3.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList6.listIterator((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.2582333057997075
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      ontologyTerm1.setIdentifier(149);
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      System.setCurrentTimeMillis(1016L);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.101075919434094
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      User user0 = new User((String) null, (String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user1 = new User("uZW5^w33z}", "uZW5^w33z}");
      user0.setAddressLine2("user.affiliation.saveChanges");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1911762989));
      ontologyTerm2.setDescription((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setIdentifier((-4971));
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getColumnStart();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.containsOntologyTerm(ontologyTerm2);
      derivedVariable0.getSupportingDocuments();
      assertEquals("-4971", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.955178801826039
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setTitle("user.firstName.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSupportingDocument(supportingDocument1);
      supportingDocument3.setDocumentCode("ETe#H<");
      User.checkValidUserIDField("Unknown");
      derivedVariable1.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      System.setCurrentTimeMillis(853L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.33270670580812
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ChangeEventType changeEventType0 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "VARIABLE", "]@c4( Qkdo84v");
      MockDate mockDate0 = new MockDate(53, 64, 64);
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("VARIABLE", "VARIABLE");
      User user1 = new User();
      user1.setAddressLine2("?4\"v0!");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("<Y\u0004f");
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.setOntologyTerms(arrayList2);
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.873742248561684
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList2);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setFilePath("p=7|OAy");
      supportingDocument0.setFilePath("%bTm_-n");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      rawVariable0.containsSupportingDocument(supportingDocument2);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument2.setTitle("variable.availability.label");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument1.setTitle("variable.cleaningStatus.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.getCodeBookNumber();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      assertNotNull(macawChangeEvent0);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1530612680157026
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("macaw.businessLayer.DerivedVariable");
      rawVariable1.setCleaned(true);
      rawVariable1.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("macaw.businessLayer.DerivedVariable");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      User user0 = new User((String) null, "#7Tz9BF|s@}]#");
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("macaw.businessLayer.DerivedVariable");
      user0.setFirstName((String) null);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable2.getOntologyTerms();
      Comparator<OntologyTerm> comparator0 = (Comparator<OntologyTerm>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      ontologyTerm0.setNewRecord(true);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable3 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("macaw.businessLayer.DerivedVariable", rawVariable1.getLabel());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ontologyTerm2.setDescription("variable.notes.label");
      ArrayList<OntologyTerm> arrayList2 = rawVariable2.getOntologyTerms();
      rawVariable3.setOntologyTerms(arrayList2);
      rawVariable3.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("p=7|OAy");
      rawVariable0.setCleaned(true);
      rawVariable0.getFilePath();
      rawVariable0.getDisplayName();
      rawVariable0.getFilePath();
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.columnEnd = "(*A,4T#.AMvZzh";
      supportingDocument1.setTitle("macsw.businessLayer.Variable");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getLabel();
      assertEquals("p=7|OAy", rawVariable0.getLabel());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.8602678338284107
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setIdentifier((-1280));
      ontologyTerm0.setDescription("XbIVTl/uyj2zf");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      rawVariable0.getLabel();
      assertEquals("-1280", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=4.04505937822912
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      rawVariable0.createVariableSummary();
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      ValueLabel valueLabel0 = new ValueLabel();
      hashMap0.remove((Object) valueLabel0, (Object) ontologyTerm0);
      Collection<Integer> collection0 = hashMap0.values();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.containsAll(collection0);
      arrayList0.trimToSize();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(valueLabel0);
      rawVariable0.setSupportingDocuments(arrayList1);
      rawVariable0.setValueLabels(arrayList0);
      rawVariable0.getCleaningStatus();
      rawVariable0.setColumnEnd("lha.mrc.ac.uk:LHA");
      rawVariable0.addSupportingDocuments(arrayList1);
      ArrayList<Variable> arrayList2 = derivedVariable0.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList2);
      derivedVariable0.addSourceVariable(derivedVariable1);
      rawVariable0.getAlias();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      supportingDocument0.setFileName("Unknown");
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      derivedVariable1.setLabel("Unknown");
      derivedVariable1.getCategory();
      rawVariable0.getValueLabels();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.clone();
      rawVariable1.getForm();
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      derivedVariable1.clone();
      assertEquals("Unknown", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      User user0 = new User("2vxnbosjO;T77yh-{", "2vxnbosjO;T77yh-{");
      ValueLabel valueLabel0 = new ValueLabel();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = null;
      arrayList0.add((OntologyTerm) null);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.850407589770435
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent(changeEventType0, "INVALID_ADMINISTRATOR", "Gf$~-bp8g@nz,");
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ontologyTerm0.setDescription("e:`");
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.clear();
      ArrayList<Variable> arrayList3 = new ArrayList<Variable>();
      derivedVariable1.setSourceVariables(arrayList3);
      User user0 = new User();
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent3);
      
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList4);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.961250926241102
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "Gf$~-bp8g@nz,", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setColumnEnd("K!YT");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setDescription("e:`");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.clear();
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      assertEquals("K!YT", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.367420033319239
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEvent0.setUserID("macaw.system.MacawErrorType");
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setValue("I#r 7Xkvf6Q$D-vfbEL");
      user0.setEmail("US-/N~}|id~V3>@");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      derivedVariable0.getOntologyTerms();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.087411089192162
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setColumnEnd("macaw.system.MacawErrorType");
      arrayList1.add(ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ontologyTerm0.setTerm("y0NYc9\"xr+U");
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.getYear();
      assertEquals("macaw.system.MacawErrorType", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.9878682813922497
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable0.hasSameDisplayName(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.hasSameDisplayName(rawVariable0);
      User user0 = new User("e4v{'z", "cvR~b]{V:S+f*H%");
      user0.setAddressLine2(")~DcHB");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription(")~DcHB");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.getQuestionNumber();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.setLabel("");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable1.setLabel("");
      RawVariable rawVariable4 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable0);
      rawVariable1.createVariableSummary();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.9642071291975114
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.setCleaningStatus("");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      rawVariable0.setSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setLabel("");
      derivedVariable0.form = "cvR~b]{V:S+f*H%";
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.codeBookNumber = null;
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      rawVariable0.setCategory("cvR~b]{V:S+f*H%");
      rawVariable0.setColumnEnd("cvR~b]{V:S+f*H%");
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6231815443565125
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MockDate mockDate0 = new MockDate((-2034458190), (-2034458190), (-1435));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      User user0 = new User();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel1, valueLabel1);
      valueLabel1.setValue("S~6K`U ");
      user0.setEmail("I#r 7Xkvf6Q$D-vfbEL");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList1);
      assertEquals(1, arrayList1.size());
      
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.getName();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2278680974667573
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable2.setOntologyTerms(arrayList1);
      arrayList1.add((OntologyTerm) null);
      derivedVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        derivedVariable2.removeOntologyTerms(arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.090852107382033
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCategory((String) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.remove((Object) ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      derivedVariable1.questionNumber = null;
      User user0 = new User("a ,-]rBpYv#>", "user.phone.label");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable0.setCodeBookNumber((String) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.getValueLabels();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      User user1 = new User();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm0, ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      derivedVariable1.getQuestionNumber();
      rawVariable0.setLabel((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.436107988992441
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZ5^3z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<String> arrayList4 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setOntologyTerms(arrayList3);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      boolean boolean1 = derivedVariable2.isCoded();
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable2.isCleaned());
      assertFalse(derivedVariable2.isNewRecord());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("m$^BH3tEw");
      rawVariable0.setLabel("");
      rawVariable0.getYear();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCoded(false);
      rawVariable1.setForm("m$^BH3tEw");
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getForm();
      assertEquals("m$^BH3tEw", rawVariable1.getForm());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.908238329122374
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList2);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath((String) null);
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument0);
      rawVariable0.containsSupportingDocument(supportingDocument6);
      User user1 = new User();
      supportingDocument1.setTitle("1");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument5.setTitle("variable.columnEnd.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getColumnEnd();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument1.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("INVALID_ADMINISTRATOR");
      derivedVariable1.removeSupportingDocument(supportingDocument3);
      User.checkValidUserIDField("B");
      derivedVariable1.setCleaned(true);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.46307548517626
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.786456060735981
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>(0);
      arrayList0.clone();
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.columnEnd = "variable.cleaningStatus.label";
      String string0 = rawVariable0.getDisplayItemIdentifier();
      assertEquals("0", string0);
      
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      String string1 = rawVariable0.getFilePath();
      assertEquals("", string1);
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable3);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("sNNz^f)");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.addSourceVariable(rawVariable0);
      boolean boolean0 = rawVariable3.isCleaned();
      assertFalse(boolean0);
      
      rawVariable1.setOntologyTerms(arrayList1);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.89425613647302
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      User user0 = new User("K!YT", "EBg !F8/");
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel.differencesExist(user0, rawVariable1, valueLabel0, valueLabel0);
      valueLabel0.setValue("82chS$R{?L4)m}");
      user0.setEmail("S!$,ds=");
      User user1 = new User("macaw.businessLayer.Variable", "Y0j'JM>$oywl7>0B");
      ValueLabel valueLabel1 = new ValueLabel();
      User user2 = new User("S!$,ds=", "macaw.businessLayer.DerivedVariable");
      MacawChangeEvent macawChangeEvent4 = Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable0);
      assertNotNull(macawChangeEvent4);
      assertEquals(0, (int)macawChangeEvent4.getVariableOwnerID());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent4.getChangeMessage());
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable1.setOntologyTerms(arrayList0);
      ontologyTerm0.setDescription("K!YT");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList2);
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, derivedVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.7376047261943706
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable2.getOntologyTerms();
      derivedVariable2.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      ArrayList<Variable> arrayList3 = derivedVariable2.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList3);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.addOntologyTerms(arrayList2);
      derivedVariable3.setSourceVariables(arrayList3);
      assertEquals(0, derivedVariable3.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setForm("6..ZFxPN6Sx?)92");
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.parallelStream();
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setColumnStart("]lB aK@s}=u@W3[;w=");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.getNotes();
      derivedVariable0.getFilePath();
      assertEquals("6..ZFxPN6Sx?)92", derivedVariable0.getForm());
      
      derivedVariable1.getYear();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.789071579480532
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      User user0 = new User("uZW5^w33z}", (String) null);
      user0.setAddressLine2((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList1);
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList2);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      derivedVariable1.addSourceVariable(derivedVariable0);
      rawVariable0.setOntologyTerms(arrayList1);
      derivedVariable0.getNotes();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("c?Ou");
      derivedVariable0.setAvailability("Pr");
      derivedVariable0.setIdentifier((-1));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("xZ@ISsM+");
      ontologyTerm0.setNewRecord(true);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.getNotes();
      derivedVariable0.getOntologyTerms();
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.codeBookNumber = "J2<DNM]'+&O";
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("J2<DNM]'+&O");
      supportingDocument1.setFilePath("J2<DNM]'+&O");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.setTitle("%V4>");
      supportingDocument2.setTitle("");
      rawVariable0.containsSupportingDocument(supportingDocument5);
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.807370666398563
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath((String) null);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument2.setTitle("variable.columnEnd.label");
      rawVariable0.addSupportingDocument(supportingDocument3);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument4.setFilePath((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument5);
      User user0 = new User();
      supportingDocument1.setTitle("1");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument4.setTitle("variable.columnEnd.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      assertTrue(rawVariable0.isCleaned());
      
      rawVariable0.cloneAttributes(rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=3.0209944644642754
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsSupportingDocument(supportingDocument2);
      User user0 = new User();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.add(supportingDocument2);
      supportingDocument3.setTitle((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("INVALID_ADMINISTRATOR");
      derivedVariable0.removeSupportingDocument(supportingDocument3);
      supportingDocument1.setDocumentCode("lOP;cX6BP$reL");
      User.checkValidUserIDField("INVALID_SUPPORTING_DOCUMENT");
      derivedVariable0.addSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, rawVariable1, derivedVariable1);
      System.setCurrentTimeMillis(0);
      derivedVariable1.getIdentifier();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=3.7164885784618957
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.7250381240621206
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MockDate mockDate0 = new MockDate((-1667), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEvent1.setVariableOwnerID(0);
      macawChangeEventArray0[1] = macawChangeEvent1;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.setLabel((String) null);
      rawVariable0.cloneAttributes(derivedVariable0);
      supportingDocument0.setFileName("macaw.businessLayer.Variable");
      supportingDocument0.setDocumentCode("");
      rawVariable1.addSupportingDocument(supportingDocument1);
      derivedVariable0.cloneAttributes(rawVariable1);
      User user0 = new User();
      user0.setEmail("macaw.businessLayer.Variable");
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.setCodeBookNumber("macaw.businessLayer.Variable");
      derivedVariable0.setLabel("macaw.businessLayer.Variable");
      derivedVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getIdentifier();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertTrue(derivedVariable0.isCleaned());
      assertEquals(2, arrayList1.size());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.2176751082305217
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.setAvailability("UNABLE_TO_UPDATE_ALIAS_FILE_PATH");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument0.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      derivedVariable1.setLabel("B");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      arrayList0.add(supportingDocument5);
      User.checkValidUserIDField("variable.year.label");
      derivedVariable1.setCleaned(true);
      derivedVariable1.setCoded(true);
      derivedVariable1.codeBookNumber = "variable.isCleaned.saveChanges.changedToNotClean";
      derivedVariable1.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("variable.isCleaned.saveChanges.changedToNotClean", derivedVariable1.getCodeBookNumber());
      
      System.setCurrentTimeMillis(2821L);
      rawVariable0.getAvailability();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable2.removeSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable2.getAvailability());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.68574814773747
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.clone();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable0.setNotes("\"K*");
      derivedVariable0.setSourceVariables(arrayList1);
      User user0 = new User("ETe#H<", "iDwG)4-~F");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("\"K*", derivedVariable0.getNotes());
      
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, derivedVariable2, derivedVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.8425989821491995
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      rawVariable0.setYear("B");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.setCoded(true);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable1.getFilePath();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      System.setCurrentTimeMillis(1164L);
      Variable.validateFields(rawVariable0);
      assertEquals("B", rawVariable0.getYear());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.3092813506787335
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      derivedVariable1.setValueLabels(arrayList1);
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.614523535698504
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      derivedVariable1.setIsNewRecord(false);
      assertFalse(derivedVariable1.isNewRecord());
      
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
      
      derivedVariable0.getLabel();
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.467009395483105
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable2.addSourceVariable(derivedVariable0);
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.7366162102910074
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAvailability("K!YT");
      derivedVariable2.removeOntologyTerms(arrayList1);
      assertEquals("K!YT", derivedVariable2.getAvailability());
      
      ArrayList<String> arrayList2 = new ArrayList<String>();
      derivedVariable0.setIsNewRecord(true);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable1.removeSourceVariable(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.7860342593768137
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      String string0 = "22^";
      rawVariable0.setCleaningDescription("22^");
      rawVariable0.getCleaningDescription();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAvailability("$VALUES");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getAlias();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.add((Variable) rawVariable0);
      arrayList1.add((Variable) rawVariable0);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.getAlias();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.listIterator();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.clone();
      derivedVariable0.codeBookNumber = "UNABLE_TO_DELETE_USER";
      derivedVariable0.setSourceVariables(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable1.getSupportingDocuments();
      derivedVariable1.addSupportingDocuments(arrayList2);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getIdentifier();
      User user0 = new User("ETe#H<", "ETe#H<");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("UNABLE_TO_DELETE_USER", derivedVariable0.getCodeBookNumber());
      
      System.setCurrentTimeMillis(4454L);
      derivedVariable1.getIdentifier();
      System.setCurrentTimeMillis(4454L);
      derivedVariable1.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "Unknown";
      derivedVariable0.getCleaningDescription();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.034906141988013
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument2);
      User user0 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.setTitle("VB_^");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setLabel("VB_^");
      User.checkValidUserIDField("INVALID_ADMINISTRATOR");
      derivedVariable0.columnEnd = "J@0HHhF";
      derivedVariable1.setCleaned(true);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      assertEquals("VB_^", derivedVariable0.getLabel());
      
      System.setCurrentTimeMillis(0);
      ArrayList<MacawChangeEvent> arrayList2 = RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertTrue(arrayList2.isEmpty());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      User user0 = new User("5@B|;N-NH; 5? ", (String) null);
      user0.setAddressLine2("jypV$@iSc");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = null;
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.436107988992441
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZ5^3z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable0.setCoded(true);
      derivedVariable1.removeOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<String> arrayList4 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable0.setOntologyTerms(arrayList3);
      ontologyTerm3.setTerm("9[7(xDs{?=#");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable0.isCoded());
      
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(derivedVariable0.isCoded());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.7398824251536404
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEvent0.setChangeType(changeEventType0);
      MockDate mockDate0 = new MockDate((-1435), (-1435), (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      derivedVariable1.setOntologyTerms(arrayList1);
      derivedVariable1.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList4);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable2.addSourceVariable(rawVariable0);
      rawVariable0.setOntologyTerms(arrayList2);
      assertEquals(0, arrayList2.size());
      
      derivedVariable2.getAlias();
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.6385607973884073
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.questionNumber.label";
      derivedVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User("LwK9>", "LwK9>");
      RawVariable rawVariable2 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("", derivedVariable1.getNotes());
      assertEquals("", derivedVariable1.getYear());
      assertEquals("", derivedVariable1.getQuestionNumber());
      assertEquals("", derivedVariable1.getColumnStart());
      assertEquals("", derivedVariable1.getCleaningDescription());
      assertEquals("", derivedVariable1.getColumnEnd());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("variable.questionNumber.label", derivedVariable1.getCodeBookNumber());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.8319111112237936
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("0k ");
      derivedVariable0.setNotes("w4?#2Amm@*:W");
      derivedVariable0.setCodeBookNumber("w4?#2Amm@*:W");
      derivedVariable0.setCleaningDescription("DUPLICATE_CLEANING_STATE");
      derivedVariable0.getFilePath();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getForm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.getCleaningStatus();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setForm("E>");
      rawVariable0.setLabel("p=7|OAy");
      rawVariable0.columnEnd = "+>z!X";
      rawVariable0.setCleaned(true);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("+>z!X");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.4522469794234416
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<String> arrayList3 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      assertFalse(derivedVariable1.isNewRecord());
      
      ArrayList<Variable> arrayList4 = new ArrayList<Variable>();
      derivedVariable2.addSourceVariables(arrayList4);
      derivedVariable2.removeOntologyTerm(ontologyTerm1);
      assertFalse(derivedVariable2.isCoded());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("0", derivedVariable2.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.9082383291223737
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList2);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument1);
      supportingDocument3.setFilePath((String) null);
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      User user1 = new User();
      rawVariable0.containsSupportingDocument(supportingDocument6);
      User user2 = new User();
      supportingDocument1.setTitle("variable.columnEnd.label");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument5.setTitle("variable.columnEnd.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.getSupportingDocuments();
      rawVariable0.getYear();
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.938801404860013
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "p=7|OAy", "p=7|OAy");
      macawChangeEvent0.setChangedObjectIdentifier(22);
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "Gf$~-bp8g@nz,", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setDescription("e:`");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User("Gf$~-bp8g@nz,", "v");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertTrue(arrayList1.isEmpty());
      
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.listIterator(0);
      rawVariable0.setOntologyTerms(arrayList0);
      System.setCurrentTimeMillis((-3814L));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2141739247775263
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("MacawProperties", "LwK9>");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertNotNull(macawChangeEvent0);
      
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.271759469228055
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm3);
      assertFalse(boolean0);
      
      String string0 = derivedVariable1.getCategory();
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.772644090861921
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setCleaningDescription("supportingDocument.fileName.label");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath((String) null);
      rawVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument6.setFilePath("variable.columnEnd.label");
      User user0 = new User();
      rawVariable0.containsSupportingDocument(supportingDocument6);
      User user1 = new User();
      supportingDocument1.setTitle("1");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument5.setTitle("variable.columnEnd.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("supportingDocument.fileName.label", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.815865618238333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      rawVariable0.setColumnStart("y<");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1));
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      Variable.validateFields(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addSupportingDocuments(arrayList0);
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("y<", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=3.746913791416266
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User("|=(J%LUh", "|=(J%LUh");
      valueLabel0.setValue("y>Pv~Y;9/");
      rawVariable0.setAlias("y>Pv~Y;9/");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getCleaningDescription();
      rawVariable0.questionNumber = "=['H3z%(Nxp6h@*";
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      rawVariable0.getYear();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.clone();
      assertEquals("y>Pv~Y;9/", rawVariable0.getAlias());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.38615474653985
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("uZW5^w33z}");
      rawVariable0.getOntologyTerms();
      assertEquals("uZW5^w33z}", rawVariable0.getColumnEnd());
      
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<String> arrayList3 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.861360833848534
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ChangeEventType changeEventType0 = ChangeEventType.USER;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "bO-Y4w2rC{t:");
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      ChangeEventType changeEventType1 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "macaw.businessLayer.Variable", "Je)K-YyKXx7ZMM_%[");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      rawVariable0.setColumnStart("Je)K-YyKXx7ZMM_%[");
      ontologyTerm0.setDescription(">p\"M`GDuq5d&Y^J");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      arrayList2.clear();
      derivedVariable0.setSourceVariables(arrayList2);
      User user0 = new User();
      User user1 = new User();
      user1.setAffiliation("macaw.businessLayer.Variable");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertEquals("Je)K-YyKXx7ZMM_%[", rawVariable0.getColumnStart());
      
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.8543624671784884
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      supportingDocument1.setDescription("INVALID_ADMINISTRATOR");
      arrayList0.add(supportingDocument2);
      derivedVariable0.setColumnEnd("general.fieldValue.blank");
      supportingDocument0.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("B");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      supportingDocument3.setDocumentCode("B");
      Object object0 = derivedVariable0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual(object0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      arrayList0.removeIf(predicate2);
      User.checkValidUserIDField("supportingDocument.documentCode.saveChanges");
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis(2821L);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument1.setTitle("supportingDocument.documentCode.saveChanges");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      Variable.validateFields(derivedVariable1);
      assertEquals("B", derivedVariable1.getLabel());
      
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.1358302146488843
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList1);
      supportingDocument1.setFilePath("G;n`*kmqU)uFp*I*Y");
      supportingDocument1.setFilePath("J2<DNM]'+&O");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      rawVariable0.getCodeBookNumber();
      rawVariable0.columnStart = "G;n`*kmqU)uFp*I*Y";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm0);
      rawVariable1.setOntologyTerms(arrayList1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      assertEquals("G;n`*kmqU)uFp*I*Y", rawVariable0.getColumnStart());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.041367781626836
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      mockDate0.clone();
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      User user0 = new User("2vxnbosjO;T77yh-{", "I#r 7Xkvf6Q$D-vfbEL");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setValue("I#r 7Xkvf6Q$D-vfbEL");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.setQuestionNumber("2vxnbosjO;T77yh-{");
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList2);
      assertEquals("2vxnbosjO;T77yh-{", rawVariable0.getQuestionNumber());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.8474265714725395
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      User user0 = new User();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setTitle("variable.name.label");
      rawVariable0.setName("B");
      User.checkValidUserIDField("ItVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      arrayList3.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.setTerm("ItVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList4 = derivedVariable0.getOntologyTerms();
      rawVariable0.form = "sb?1%9Ki7D\"(Z)p[vUE";
      derivedVariable1.removeOntologyTerms(arrayList4);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable1, derivedVariable3);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable3.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList6.listIterator((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.976869612402297
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("v*}d`J6q+gm@, E");
      rawVariable0.setCleaned(true);
      rawVariable0.getFilePath();
      rawVariable0.getFilePath();
      rawVariable0.setColumnStart("z2ERg");
      rawVariable0.createVariableSummary();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(30);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("v*}d`J6q+gm@, E", rawVariable0.getLabel());
      
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable2);
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCategory("@z>6");
      rawVariable0.setCleaningStatus("@z>6");
      rawVariable0.getCleaningStatus();
      assertEquals("@z>6", rawVariable0.getCategory());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.5280403553936055
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeOntologyTerms(arrayList1);
      derivedVariable0.setCodeBookNumber("p=7|OA?");
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm2);
      derivedVariable0.getSourceVariables();
      assertEquals("p=7|OA?", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3448446247581223
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEventArray0[1] = macawChangeEvent1;
      ChangeEventType changeEventType1 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType1, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[2] = macawChangeEvent2;
      ChangeEventType changeEventType2 = ChangeEventType.VARIABLE;
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent(changeEventType2, "", "Tm");
      macawChangeEventArray0[3] = macawChangeEvent3;
      User user0 = new User();
      macawChangeEventArray0[4] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent4 = new MacawChangeEvent(changeEventType2, "", "89S,w4");
      MacawChangeEvent macawChangeEvent5 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      macawChangeEventArray0[6] = macawChangeEvent5;
      arrayList0.toArray(macawChangeEventArray0);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.setYear("a-uN\"AD]+1w");
      assertEquals("a-uN\"AD]+1w", rawVariable0.getYear());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.225259264364949
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User("( ,XR5[&XYo'd0V3", "( ,XR5[&XYo'd0V3");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList0.add(supportingDocument4);
      supportingDocument0.setTitle("( ,XR5[&XYo'd0V3");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("B");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      supportingDocument3.setDocumentCode("B");
      User.checkValidUserIDField("variable.year.label");
      derivedVariable1.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("2vxnbosjO;T77yh-{");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      assertEquals("2vxnbosjO;T77yh-{", rawVariable1.getNotes());
      
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.75012938226178
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList0.add(supportingDocument4);
      supportingDocument0.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("INVALID_ADMINISTRATOR");
      derivedVariable0.setLabel("B");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      supportingDocument3.setDocumentCode("B");
      User.checkValidUserIDField("variable.year.label");
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.getIdentifier();
      System.setCurrentTimeMillis(2821L);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getSourceVariables();
      assertEquals("INVALID_ADMINISTRATOR", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.739362224009198
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      macawChangeEvent0.setChangeType(changeEventType0);
      MockDate mockDate0 = new MockDate((-1435), 0, (-1879048189));
      macawChangeEvent0.setDate(mockDate0);
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEvent1.setDate(mockDate0);
      macawChangeEventArray0[1] = macawChangeEvent1;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.cloneAttributes(rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm2);
      arrayList1.add(ontologyTerm2);
      derivedVariable1.setOntologyTerms(arrayList1);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable1.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList4);
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable1.addSourceVariable(rawVariable0);
      rawVariable0.setOntologyTerms(arrayList2);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.772451152409287
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setName("W#*'#ECu[.;3sZ/zdz");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      Consumer<SupportingDocument> consumer0 = (Consumer<SupportingDocument>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      arrayList2.add(supportingDocument0);
      arrayList2.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList2);
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument3.setFilePath((String) null);
      supportingDocument2.getDisplayName();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.isCleaned.saveChanges.changedToNotClean");
      supportingDocument2.setTitle("variable.columnEnd.label");
      rawVariable0.addSupportingDocument(supportingDocument3);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument4.setFilePath((String) null);
      rawVariable0.containsSupportingDocument(supportingDocument5);
      User user0 = new User();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument4.setTitle("variable.columnEnd.label");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(rawVariable0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.cloneAttributes(rawVariable0);
      assertEquals("W#*'#ECu[.;3sZ/zdz", rawVariable0.getName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.9185962069270124
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList0.add(ontologyTerm2);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setOntologyTerms(arrayList0);
      derivedVariable2.getOntologyTerms();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.columnEnd = null;
      derivedVariable3.removeOntologyTerms(arrayList0);
      derivedVariable3.setIdentifier((-2087831322));
      assertEquals((-2087831322), derivedVariable3.getIdentifier());
      
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList2.add(supportingDocument0);
      derivedVariable2.removeSupportingDocuments(arrayList2);
      derivedVariable1.setIsNewRecord(true);
      boolean boolean0 = derivedVariable2.containsOntologyTerm(ontologyTerm2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.notes = "ETe#H<";
      String string0 = derivedVariable0.getDisplayName();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("", string0);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.8988327955119217
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "ETe#H<", "W;5+YTzcY");
      MockDate mockDate0 = new MockDate();
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      macawChangeEvent1.setDate(mockDate0);
      MockDate mockDate1 = new MockDate(0, (-133), 2394);
      mockDate1.getTime();
      macawChangeEvent0.setDate(mockDate1);
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent();
      User user0 = new User("macaw.businessLayer.Variable", "W;5+YTzcY");
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setValue("6*My7&@C");
      user0.setEmail("Y0j'JM>$oywl7>0B");
      User user1 = new User("", "6*My7&@C");
      ValueLabel valueLabel1 = new ValueLabel();
      User user2 = new User("macaw.businessLayer.DerivedVariable", "macaw.businessLayer.Variable");
      MacawChangeEvent macawChangeEvent3 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent3);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent3.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent3.getVariableOwnerID());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.0969560855646265
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument3);
      rawVariable0.containsSupportingDocument(supportingDocument3);
      User user0 = new User();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setDescription("INVALID_ADMINISTRATOR");
      arrayList0.add(supportingDocument4);
      supportingDocument0.setTitle("INVALID_ADMINISTRATOR");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("B");
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      supportingDocument3.setDocumentCode("B");
      User.checkValidUserIDField("variable.year.label");
      derivedVariable1.addSupportingDocuments(arrayList0);
      derivedVariable1.getSupportingDocuments();
      derivedVariable1.getIdentifier();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis(2821L);
      derivedVariable0.getIdentifier();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.9909617646516393
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setName("ETe#H<");
      User.checkValidUserIDField("INVALID_ADMINISTRATOR");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        arrayList2.listIterator(1625);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1625
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.0409217910818356
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      rawVariable0.containsSupportingDocument(supportingDocument1);
      User user0 = new User();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = rawVariable0.getSupportingDocuments();
      arrayList3.add(supportingDocument0);
      supportingDocument3.setTitle("supportingDocument.fileName.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("INVALID_ADMINISTRATOR");
      derivedVariable0.removeSupportingDocument(supportingDocument2);
      arrayList0.add(supportingDocument0);
      supportingDocument1.setDocumentCode("y");
      User.checkValidUserIDField("variable.label.label");
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSupportingDocuments();
      derivedVariable0.getIdentifier();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getIdentifier();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.203456186693981
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addOntologyTerm(ontologyTerm0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.371917784443677
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZ5^3z}");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable1.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm4);
      ArrayList<String> arrayList4 = new ArrayList<String>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      arrayList1.listIterator(1);
      assertFalse(arrayList1.contains(ontologyTerm0));
      
      rawVariable0.setOntologyTerms(arrayList5);
      System.setCurrentTimeMillis(890L);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5652789553347763
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      System.setCurrentTimeMillis(0L);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm(ontologyTerm2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.9809797969806207
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("uZW5^w33z}");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      User user0 = new User("-;fXNBymJ!&i", "F@/){96 zM_&qrL/5+");
      user0.setAddressLine2("-;fXNBymJ!&i");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setDescription("v*}d`J6q+gm@, E");
      user0.setFirstName((String) null);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable2.getOntologyTerms();
      ontologyTerm2.setNewRecord(true);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm3);
      derivedVariable2.removeOntologyTerms(arrayList2);
      derivedVariable1.updateOntologyTerm(ontologyTerm1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      assertTrue(arrayList1.contains(ontologyTerm1));
      
      rawVariable2.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = rawVariable1.getOntologyTerms();
      rawVariable1.setOntologyTerms(arrayList4);
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      derivedVariable0.getSourceVariables();
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("macaw.businessLayer.User");
      derivedVariable0.setFilePath("");
      ArrayList<ValueLabel> arrayList0 = null;
      derivedVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.clone();
      valueLabel0.hasSameDisplayName(valueLabel1);
      // Undeclared exception!
      try { 
        derivedVariable0.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.581687993791636
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      rawVariable0.questionNumber = "X";
      arrayList0.listIterator();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList2);
      arrayList0.clone();
      derivedVariable0.setSourceVariables(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      arrayList1.add((Variable) rawVariable1);
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("X", rawVariable2.getQuestionNumber());
      assertEquals("", rawVariable2.getYear());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("", rawVariable2.getFilePath());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("", rawVariable2.getAlias());
      assertEquals("", rawVariable2.getCodeBookNumber());
      assertEquals("", rawVariable2.getCleaningDescription());
      assertEquals("", rawVariable2.getColumnStart());
      assertEquals("", rawVariable2.getLabel());
      assertEquals("Unknown", rawVariable2.getCategory());
      
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.0153240288903493
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.setFilePath("sF}$9/bhZ9nQ");
      MacawChangeEvent[] macawChangeEventArray0 = new MacawChangeEvent[7];
      ChangeEventType changeEventType0 = ChangeEventType.VALUE_LABEL;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "macaw.businessLayer.Variable", "macaw.businessLayer.Variable");
      macawChangeEventArray0[0] = macawChangeEvent0;
      MacawChangeEvent macawChangeEvent1 = new MacawChangeEvent();
      MacawChangeEvent macawChangeEvent2 = new MacawChangeEvent(changeEventType0, "Ls`XaSF>o6R-|fd7f", "K!YT");
      MacawChangeEvent macawChangeEvent3 = new MacawChangeEvent();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setOntologyTerms(arrayList0);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      System.setCurrentTimeMillis((-1695L));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm3);
      rawVariable0.getLabel();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }
}
