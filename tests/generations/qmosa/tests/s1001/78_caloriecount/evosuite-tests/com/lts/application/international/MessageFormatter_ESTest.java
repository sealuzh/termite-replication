/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 05:11:45 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.95571359982777
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Locale locale0 = Locale.US;
      StringReader stringReader0 = new StringReader("gpRzZ})[UEkBR");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      messageFormatter1.addBundle(propertyResourceBundle0);
      messageFormatter1.getMessage("gpRzZ})[UEkBR");
      String string0 = "3R[-=";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("3R[-=");
      mockPrintWriter0.close();
      long long0 = 0L;
      mockPrintWriter0.print(0L);
      String string1 = null;
      MockPrintWriter mockPrintWriter1 = null;
      try {
        mockPrintWriter1 = new MockPrintWriter("s!ZfBd", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // charsetName
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      messageFormatter0.createLoadException(linkedList0);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.markSupported();
      byte[] byteArray0 = new byte[0];
      sequenceInputStream0.read(byteArray0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream1);
      MessageFormatter messageFormatter1 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("DFgJ");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", (Object) null, (Object) messageFormatter0, (Object) messageFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      String string0 = null;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("tm6~kBGl*\"+]", messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("com.lts.application.menu.ApplicationMenuBuilder", mockThrowable0);
      linkedList0.add((Object) messageFormatter_LoadBundleError0);
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException0.getKey());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      Object object0 = new Object();
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", object0, (Object) messageFormatter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      List<Locale> list1 = resourceBundle_Control0.getCandidateLocales("com.lts.application.international.MessageFormatter$LoadBundleError", locale0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle(list1, list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Locale cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pipedInputStream0);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(0L);
      sequenceInputStream0.close();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      Enumeration<InputStream> enumeration3 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration3).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration3);
      Enumeration<SequenceInputStream> enumeration4 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      Object object0 = new Object();
      LinkedList<InputStream> linkedList0 = new LinkedList<InputStream>();
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard", (Object) null);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "<Q@y(_oT3A+}";
      Object object1 = new Object();
      objectArray0[1] = object1;
      objectArray0[2] = (Object) null;
      objectArray0[3] = (Object) "resources.messages.standard";
      objectArray0[3] = (Object) applicationException0;
      applicationException0.setKey("resources.messages.standard");
      objectArray0[5] = (Object) "<Q@y(_oT3A+}";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("<Q@y(_oT3A+}", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 47;
      String string0 = "/]R";
      StringReader stringReader0 = new StringReader("/]R");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      String string1 = "=Ki'h3";
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("=Ki'h3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable("resources.messages.standard");
      messageFormatter0.myLastException = (Throwable) mockThrowable0;
      Throwable throwable0 = messageFormatter0.getLastException();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage(throwable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("DeH..ete", "8", "Xc#", 47);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[7] = stackTraceElement0;
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      mockThrowable0.setOriginForDelegate(stackTraceElement0);
      StringWriter stringWriter0 = new StringWriter(17);
      StackTraceElement stackTraceElement1 = new StackTraceElement("C", "1.DLMSyKlz,~", "co.lts.applictGon.error=.RemovingTempFmles", 47);
      StackTraceElement stackTraceElement2 = new StackTraceElement("DeH..ete", "8", "t9in}Al4m", 47);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("com.lts.LTSRuntimeException");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      StringReader stringReader0 = new StringReader("critcal.error.unknown");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("; and resource path: ", (Object[]) stackTraceElementArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      ApplicationException applicationException0 = new ApplicationException("*6fff~");
      Throwable[] throwableArray0 = applicationException0.getSuppressed();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      sequenceInputStream0.mark((-1073741822));
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      Integer integer0 = new Integer((-1073741822));
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0, 2);
      pushbackInputStream1.unread((-1952257859));
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      sequenceInputStream0.skip(0L);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte)70;
      StringReader stringReader0 = new StringReader("H[;%rGBcs1~Dt");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.formatMessage("H[;%rGBcs1~Dt", (Object[]) throwableArray0, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.close();
      mockPrintWriter0.print((long) 47);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      mockPrintWriter0.print('%');
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      printWriter1.println(47);
      char[] charArray0 = new char[36];
      printWriter0.print("h1V}XLj=ZlWNj/GQ");
      printWriter1.flush();
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      printWriter0.println("h1V}XLj=ZlWNj/GQ");
      charArray0[4] = 'U';
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println((double) 47);
      printWriter2.flush();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.println(charArray0);
      mockPrintWriter1.write(charArray0, 47, 47);
      mockPrintWriter0.write(charArray0);
      printWriter2.print(47);
      printWriter0.println('%');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter2);
      mockPrintWriter0.println('$');
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.UK;
      locale0.stripExtensions();
      Locale locale1 = Locale.CANADA;
      locale1.getUnicodeLocaleAttributes();
      locale0.getDisplayScript(locale1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      locale0.getUnicodeLocaleAttributes();
      Locale locale2 = Locale.GERMANY;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale3 = Locale.GERMANY;
      Locale.forLanguageTag("");
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.close();
      mockPrintWriter0.print((long) 47);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      mockPrintWriter0.print('%');
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      printWriter1.println(47);
      char[] charArray0 = new char[36];
      printWriter0.print("h1V}XLj=ZlWNj/GQ");
      printWriter1.flush();
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      printWriter0.println("h1V}XLj=ZlWNj/GQ");
      charArray0[4] = 'U';
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println((double) 47);
      printWriter2.flush();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.println(charArray0);
      mockPrintWriter1.write(charArray0, 47, 47);
      mockPrintWriter0.write(charArray0);
      printWriter2.print(47);
      printWriter0.println('%');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter2);
      mockPrintWriter0.println('$');
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) null, locale0, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.close();
      mockPrintWriter0.print((long) 47);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      mockPrintWriter0.print('%');
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      printWriter1.println(47);
      char[] charArray0 = new char[36];
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      printWriter0.println("h1V}XLj=ZlWNj/GQ");
      charArray0[4] = 'U';
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println((double) 47);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.write(charArray0, 47, 47);
      mockPrintWriter0.write(charArray0);
      mockPrintWriter0.println('%');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter2);
      mockPrintWriter2.println();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.310106597280475
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("DeH..ete", "8", "Xc#", 47);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[4] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[7] = stackTraceElement0;
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[5];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stackTraceElementArray1[2] = stackTraceElement0;
      stackTraceElementArray1[3] = stackTraceElement0;
      stackTraceElementArray1[4] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("Xc#", "createAction", "DeH..ete", 1106);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("1.DLMSyKlz,~");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: 1.DLMSyKlz,~
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("editNode");
      mockPrintWriter0.close();
      mockPrintWriter0.print(0L);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.println((double) (-682.011F));
      mockPrintWriter1.println((-682.011F));
      mockPrintWriter1.print('m');
      mockPrintWriter0.append('L');
      mockPrintWriter0.print(14);
      mockPrintWriter0.println(3110);
      printWriter0.print("null");
      char[] charArray0 = new char[7];
      charArray0[0] = '%';
      charArray0[2] = 'm';
      charArray0[3] = 'L';
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0, locale_FilteringMode2);
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) list1, locale_FilteringMode1);
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.ENGLISH;
      Locale.forLanguageTag("PQ5~iYJ/-F_FtO9");
      locale1.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) set1, locale_FilteringMode3);
      locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list2, locale_FilteringMode4);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) null);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString(list1);
      assertEquals("java.class, java.properties", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer(4);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("R4", (Object) linkedList0, (Object) integer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources("cB[uu]RimW}wh", (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale1 = Locale.JAPAN;
      ClassLoader.getSystemClassLoader();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale1 = Locale.JAPAN;
      ClassLoader.getSystemClassLoader();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 21);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, dataInputStream1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 47);
      pushbackInputStream1.markSupported();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add(".");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("critical.qustion.saveFaild");
      ApplicationException applicationException1 = new ApplicationException("critical.qustion.saveFaild");
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) applicationException0;
      applicationException0.addData(objectArray0);
      ApplicationException applicationException2 = new ApplicationException("critical.qustion.saveFaild");
      ApplicationException applicationException3 = new ApplicationException(applicationException0, "critical.qustion.saveFaild");
      ApplicationException applicationException4 = new ApplicationException(applicationException3, "critical.qustion.saveFaild");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("DeH..ete", "8", "Xc#", 47);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      stackTraceElementArray0[3] = stackTraceElement0;
      stackTraceElementArray0[4] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      stackTraceElementArray0[7] = stackTraceElement0;
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[5];
      stackTraceElementArray1[0] = stackTraceElement0;
      stackTraceElementArray1[1] = stackTraceElement0;
      stackTraceElementArray1[2] = stackTraceElement0;
      stackTraceElementArray1[3] = stackTraceElement0;
      stackTraceElementArray1[4] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("Xc#", "createAction", "DeH..ete", 1106);
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.flush();
      mockPrintWriter0.close();
      mockPrintWriter0.print((long) 47);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      char[] charArray0 = new char[36];
      mockPrintWriter0.print((long) 47);
      printWriter0.print("h1V}XLj=ZlWNj/GQ");
      printWriter1.flush();
      charArray0[1] = 'e';
      charArray0[5] = 'e';
      charArray0[4] = 'U';
      mockPrintWriter0.println((float) 47);
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter2.println('\u0000');
      printWriter2.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter2.print(0L);
      printWriter2.println();
      printWriter2.println(4986.126);
      mockPrintWriter0.flush();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 47);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(bufferedInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(bufferedInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 47);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      DataInputStream dataInputStream2 = new DataInputStream(pipedInputStream1);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      PushbackInputStream pushbackInputStream2 = new PushbackInputStream(pipedInputStream1, 47);
      pushbackInputStream1.close();
      pushbackInputStream0.markSupported();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer(47);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage(".", (Object) pipedInputStream0, (Object) sequenceInputStream1, (Object) sequenceInputStream2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode0);
      Locale locale0 = Locale.FRENCH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null, locale_FilteringMode2);
      Locale locale1 = Locale.ENGLISH;
      locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString(list0);
      assertFalse(list0.contains(string0));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale1 = Locale.JAPAN;
      ClassLoader.getSystemClassLoader();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "ZePbsYNT4.vU%u9Q5H?";
      objectArray0[1] = (Object) "-1/W=HT%{2";
      objectArray0[2] = (Object) "/DeHete";
      objectArray0[3] = (Object) "-1/W=HT%{2";
      objectArray0[4] = (Object) "-1/W=HT%{2";
      objectArray0[5] = (Object) "sz6b9kWdVd('AOseOo3";
      objectArray0[6] = (Object) "-1/W=HT%{2";
      Object object1 = new Object();
      objectArray0[7] = object1;
      objectArray0[8] = (Object) "sz6b9kWdVd('AOseOo3";
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.getMessage("/DeHete", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.clearAssertionStatus();
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader1.setClassAssertionStatus("Error trying to setup listeners", false);
      classLoader2.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listResources("o?w,9rT5Txd_zr5", classLoader1);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      assertSame(classLoader3, classLoader0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      sequenceInputStream0.close();
      sequenceInputStream0.mark((-1073741822));
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      sequenceInputStream0.available();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration1);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream1, 3696);
      sequenceInputStream1.available();
      pushbackInputStream1.markSupported();
      pushbackInputStream1.unread(0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer(1282);
      ApplicationException applicationException0 = new ApplicationException("critcal.error.unknown", sequenceInputStream2);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("+5", applicationException0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage(messageFormatter_LoadBundleError0.error);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("editNode");
      mockPrintWriter0.close();
      mockPrintWriter0.print(0L);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) null);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.println((double) (-682.011F));
      mockPrintWriter1.println((-682.011F));
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter0);
      mockPrintWriter0.println((-48.128));
      printWriter0.println((-758.7F));
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(printWriter0);
      printWriter0.println((double) 0L);
      printWriter0.println((-682.011F));
      mockPrintWriter1.print('V');
      mockPrintWriter1.append('O');
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("P=^RPf:w>UKq5mn9nz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("editNode");
      mockPrintWriter0.close();
      mockPrintWriter0.print(0L);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.print('m');
      mockPrintWriter0.append('L');
      mockPrintWriter0.print(14);
      mockPrintWriter0.print('<');
      mockPrintWriter0.println(3110);
      char[] charArray0 = new char[7];
      charArray0[0] = '%';
      charArray0[1] = 'D';
      charArray0[2] = 'm';
      charArray0[3] = 'L';
      charArray0[4] = '%';
      charArray0[5] = '%';
      charArray0[6] = '%';
      mockPrintWriter0.write(charArray0);
      mockPrintWriter0.print(5);
      mockPrintWriter0.print("com.lts.applicatGon.error=.RemovingTempFmles");
      mockPrintWriter1.flush();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("e@d?A1u4W}Gd(N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) linkedList0, locale_FilteringMode0);
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      linkedList0.clone();
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) list2, locale_FilteringMode1);
      Locale locale0 = Locale.KOREAN;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list1, list0, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.close();
      mockPrintWriter0.print((long) 47);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      mockPrintWriter0.print('%');
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      printWriter1.println(47);
      char[] charArray0 = new char[36];
      printWriter1.flush();
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      printWriter0.println("h1V}XLj=ZlWNj/GQ");
      charArray0[4] = 'U';
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println((double) 47);
      printWriter2.flush();
      printWriter1.println(charArray0);
      printWriter0.write(charArray0, 47, 47);
      mockPrintWriter0.write(charArray0);
      printWriter2.print(47);
      printWriter0.println('%');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter2);
      mockPrintWriter0.println('$');
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) null, locale0, (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.close();
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      mockPrintWriter0.print('%');
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      printWriter1.println(47);
      char[] charArray0 = new char[36];
      charArray0[1] = '%';
      charArray0[2] = '%';
      charArray0[3] = '%';
      printWriter0.println("h1V}XLj=ZlWNj/GQ");
      charArray0[4] = 'U';
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println((double) 47);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.write(charArray0, 47, 47);
      mockPrintWriter0.write(charArray0);
      printWriter2.print(47);
      mockPrintWriter0.println('%');
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("; and resource path: ", "w*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      linkedList1.stream();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList2 = new LinkedList<ApplicationException>();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      List list0 = MessageFormatter.buildList(objectArray0);
      assertEquals(8, list0.size());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Locale locale0 = Locale.FRENCH;
      locale0.getUnicodeLocaleKeys();
      locale0.getDisplayScript((Locale) null);
      locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.FRENCH;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[9];
      try { 
        messageFormatter0.formatMessage("", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("z]3LWrpy?uRp?g_/C:", "resources.messages.standard", "z]3LWrpy?uRp?g_/C:", (-2073432485));
      mockThrowable1.setOriginForDelegate(stackTraceElement0);
      messageFormatter0.getLastException();
      MockThrowable mockThrowable2 = new MockThrowable((Throwable) null);
      ApplicationException applicationException0 = new ApplicationException("critical.question.saveFailed");
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      assertFalse(classLoader2.equals((Object)classLoader1));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("h1V}XLj=ZlWNj/GQ");
      mockPrintWriter0.close();
      mockPrintWriter0.print((long) 47);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println(47);
      PrintWriter printWriter1 = mockPrintWriter0.append('U');
      printWriter1.println(47);
      char[] charArray0 = new char[36];
      printWriter0.print("h1V}XLj=ZlWNj/GQ");
      printWriter1.flush();
      printWriter0.println("h1V}XLj=ZlWNj/GQ");
      charArray0[4] = 'U';
      PrintWriter printWriter2 = printWriter1.append((CharSequence) "h1V}XLj=ZlWNj/GQ");
      printWriter0.println((double) 47);
      printWriter2.flush();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0);
      mockPrintWriter1.println(charArray0);
      mockPrintWriter1.write(charArray0, 47, 47);
      mockPrintWriter0.write(charArray0);
      Integer integer0 = new Integer(3204);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) linkedList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = classLoader0.getParent();
      classLoader1.clearAssertionStatus();
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader1.setClassAssertionStatus("PU)|Gu$~Y", false);
      classLoader2.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listResources("o?w,9rT5Txd_zr5", classLoader1);
      ClassLoader classLoader3 = ClassLoader.getSystemClassLoader();
      assertSame(classLoader3, classLoader0);
  }
}
