/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 06:15:18 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.ComponentOrientation;
import java.awt.Image;
import java.awt.event.KeyListener;
import java.io.FileFilter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.swing.ActionMap;
import javax.swing.Box;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JMenuBar;
import javax.swing.plaf.metal.MetalTreeUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.javax.swing.MockSpinnerDateModel;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.util.file.FileSuffixFilter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("y0\"\"U5/sD7><+j8 *,I", "y0\"\"U5/sD7><+j8 *,I", "generatorName", (String) null, (-1982292595), "y0\"\"U5/sD7><+j8 *,I", 2825, 2825, (-1), (-1), "E7|4Qf:2_Qs.Ti[", "E7|4Qf:2_Qs.Ti[", (-1), 65535, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3046, 3046, 3046, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = null;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, (String) null, "O_@Ud%l", (-1578), "r4%Yh1IB):4>0b", 16777215, 9, 93, 5, (String) null, "<h3S9t[4*FOL", 93, 5, "!b]J|=N1_Ep)");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.getColumnList(tableColumnInfoArray0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      jMenuBar0.addKeyListener((KeyListener) null);
      ActionMap actionMap0 = new ActionMap();
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayVariant(locale1);
      ComponentOrientation.getOrientation(locale0);
      ActionMap actionMap1 = new ActionMap();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "N?L'T(Iu#]";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "N?L'T(Iu#]";
      stringArray0[5] = "oM:3pZ^zDfdwTYe.`";
      stringArray0[6] = "N?L'T(Iu#]";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      dBCopyPlugin1.getWebSite();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "zw#]xSzQ.^(*4BLU", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "blJl)n", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "UE}3{y4Nv/h;vo fYAO");
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte)7;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)7;
      byteArray0[7] = (byte)7;
      byteArray0[8] = (byte)7;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~h}d;ga/qZ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "87MHv6,zA");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "w?![vVP0O*r~(W", ". Using 'max'");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (byte)7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon("$sr{i7Jg(:rm2");
      imageIcon0.getIconWidth();
      imageIcon0.toString();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("G[4-OT(&DfF<h0TS|Kr", "G[4-OT(&DfF<h0TS|Kr", "+\" 43qu*@A6l_E", "$sr{i7Jg(:rm2", (-1), "SELECT view_definition ", 530, (-1), (-1), 0, "+\" 43qu*@A6l_E", "SELECT view_definition ", 530, 1007, "$sr{i7Jg(:rm2");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("select ", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("select ");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(530, tableColumnInfo0, (ISession) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("SELECT view_definition ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "2!i", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1111, "{Ow,uLDG", 6, 1772, 1772, 8, (String) null, "SELECT view_definition ", 0, (-1), (String) null);
      tableColumnInfo1.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.replaceOtherDataType(tableColumnInfo1, (ISession) null);
      System.setCurrentTimeMillis(1111);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, 998);
      System.setCurrentTimeMillis(998);
      System.setCurrentTimeMillis((-3075L));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "fileOpenInSpecifiedDir", "g ");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Wh@vZU");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7H'm]=7\"}0W\"");
      dBCopyPlugin0.getSourceSession();
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "o#/^6Hl^9j");
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getUserSQLHistoryFile();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("SB@^W$qUVLnq", "SB@^W$qUVLnq", fileWrapper0);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getPluginsDirectory();
      applicationFileWrappersImpl2.getSQuirrelJarFile();
      applicationFileWrappersImpl2.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl2.getPluginsDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.createTempFile("usercode", (String) null, fileWrapper0);
      fileWrapperFactoryImpl1.create("DBUtil.info.executeupdate");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      ImageIcon imageIcon2 = new ImageIcon("LvY1?q");
      imageIcon2.getIconWidth();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      ImageIcon imageIcon3 = new ImageIcon(byteArray0);
      imageIcon1.toString();
      ImageIcon imageIcon4 = new ImageIcon(byteArray0, "z5Ct&v/8iBM{Wydli");
      ImageIcon imageIcon5 = new ImageIcon("v@s(l&^U`");
      Image image0 = imageIcon3.getImage();
      imageIcon1.toString();
      imageIcon3.getImage();
      ImageIcon imageIcon6 = new ImageIcon(image0);
      imageIcon6.toString();
      ImageIcon imageIcon7 = new ImageIcon();
      imageIcon3.toString();
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-41);
      byteArray1[1] = (byte) (-41);
      byteArray1[2] = (byte) (-41);
      byteArray1[3] = (byte) (-41);
      Integer integer0 = new Integer((byte) (-41));
      ImageIcon imageIcon8 = new ImageIcon("v@s(l&^U`");
      imageIcon3.toString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "mxSV&eN+prS}", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getWelcomeFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Unknown");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0, "H'QXb=K8*Cw`wA*J");
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("H'QXb=K8*Cw`wA*J", "H'QXb=K8*Cw`wA*J", fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3, ",\n\tPRIMARY KEY ");
      fileWrapperImpl0.delete();
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl("Unknown", "H'QXb=K8*Cw`wA*J");
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl(fileWrapperImpl4, "[l,nU/*b([d*ZX`Q");
      fileWrapperImpl7.mkdirs();
      FileWrapperImpl fileWrapperImpl8 = new FileWrapperImpl(fileWrapperImpl7);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getPluginsDirectory();
      applicationFileWrappersImpl0.getFAQFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent(16, (-1414));
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, "lvarbinary($l)");
      imageIcon0.toString();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType(".nextval from sys.tables", (Icon) imageIcon0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("lvarbinary($l)", "}OJduB\u0007eh|5pf", " 0ASCADE", "Fb/^4o", (-5), "i&W>9Jj", (byte)18, (byte) (-27), (-2069), (-900), "blob sub_type 1", "c[g+eM", (-5), (-3), "!<gFuc%j%aMFsX:Es*");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("uxPWv}xrq7T7I;B4");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      tableColumnInfoArray0[1] = tableColumnInfo0;
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      vector0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(vector0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Vector<IDatabaseObjectInfo> vector0 = new Vector<IDatabaseObjectInfo>();
      dBCopyPlugin0.setSourceDatabaseObjects(vector0);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Skipping FK (", "}OJduB\u0007eh|5pf");
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, ")Gh>[_ V5");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, (String) null, "}OJduB\u0007eh|5pf", "Rendering class: [");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(".nextval from sys.tables", "varchar2($l)", "c=`f*}@?<", "1[Cc7>mU-_7qh*^:|", 2004, "varchar2($l)", (-5), 2004, (-5), 2000, "`h/0X%n)$:h/QAHf*", "1[Cc7>mU-_7qh*^:|", (-5), 2004, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("J~f2!!^=8[;", (Icon) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Unknown", "Unknown");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0, "7#aajkyR@2$BZ8Y9\"E");
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("7#aajkyR@2$BZ8Y9\"E", (String) null, fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3, "Unknown");
      fileWrapperImpl0.delete();
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter("l<*WdsS\"I^;*UA!tC4");
      fileWrapperImpl2.listFiles((FileFilter) fileSuffixFilter0);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl2);
      fileWrapperImpl2.mkdir();
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl("^1W5BgjB0T4Y=ygH{", "iF,Uwpd#fQQ");
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl(fileWrapperImpl0, "zw#]xSzQ.^(*4BLU");
      fileWrapperImpl7.setReadOnly();
      FileWrapperImpl fileWrapperImpl8 = new FileWrapperImpl(fileWrapperImpl7, "^1W5BgjB0T4Y=ygH{");
      FileWrapperImpl fileWrapperImpl9 = new FileWrapperImpl(fileWrapperImpl6, "zw#]xSzQ.^(*4BLU");
      fileWrapperImpl3.setReadOnly();
      fileWrapperImpl4.mkdirs();
      FileWrapperImpl fileWrapperImpl10 = new FileWrapperImpl(fileWrapperImpl2);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl11 = new FileWrapperImpl("zw#]xSzQ.^(*4BLU");
      applicationFileWrappersImpl0.getPluginsDirectory();
      FileWrapperImpl fileWrapperImpl12 = new FileWrapperImpl(fileWrapperImpl10);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("");
      FileWrapperImpl fileWrapperImpl13 = new FileWrapperImpl("^1W5BgjB0T4Y=ygH{");
      fileWrapperFactoryImpl0.create("zw#]xSzQ.^(*4BLU");
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "+Gcu fn?&IK1V>d", "~(\u0005iNz/?");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Skipping FK (", "+m_]CmFDkq", "Skipping FK (", "Skipping FK (", (-4), "DBUtil.error.tablenotfound", 696, 788, (-4), 788, (String) null, "posstr", (-3), (-4), "9cu!:GI%");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("Skipping FK (");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("+m_]CmFDkq", icon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      IndexInfo.IndexType indexInfo_IndexType0 = IndexInfo.IndexType.STATISTIC;
      arrayList0.trimToSize();
      UnaryOperator<ITableInfo> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.iterator();
      arrayList0.remove((Object) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      ImageIcon imageIcon2 = new ImageIcon("LvY1?q");
      imageIcon2.getIconWidth();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      ImageIcon imageIcon3 = new ImageIcon(byteArray0);
      imageIcon1.toString();
      ImageIcon imageIcon4 = new ImageIcon(byteArray0, "z5Ct&v/8iBM{Wydli");
      ImageIcon imageIcon5 = new ImageIcon("v@s(l&^U`");
      Image image0 = imageIcon3.getImage();
      imageIcon1.toString();
      ImageIcon imageIcon6 = new ImageIcon(image0);
      imageIcon3.toString();
      ImageIcon imageIcon7 = new ImageIcon();
      imageIcon2.toString();
      ImageIcon imageIcon8 = new ImageIcon(byteArray0, "javax.swing.ImageIcon@140c8bbe");
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-41);
      byteArray1[1] = (byte) (-41);
      byteArray1[2] = (byte) (-41);
      byteArray1[3] = (byte) (-41);
      ImageIcon imageIcon9 = new ImageIcon(byteArray1);
      imageIcon2.toString();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "dc vtelt", "DBUtil.error.bindclobfailure", "H>9IXqt\"p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("u(9\",o.pT&uZk1b_", "C}HS?.c4", "ghO", "C}HS?.c4", (byte)2, "6x<_K@", (byte)2, 92, (-1509), (-1968526675), "C}HS?.c4", "6x<_K@", 1843, 2001, "xm=EUPbmhqWc?");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ZBvUn:h0=", "t`! ", "@Ro,r;I*cr/fPJ", "NV`No$iYk7IIpe#+F3a", (-6), "ZBvUn:h0=", (-1593), 593, (-1788), 428, (String) null, "NV`No$iYk7IIpe#+F3a", 3681, 4, "t`! ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(3681, tableColumnInfo0, (ISession) null);
      assertEquals(3681, int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)103;
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("}OJduB\u0007eh|5pf", "[w02x", "^NGHrnc\"31W%4Ou@", "}OJduB\u0007eh|5pf", (byte)0, "}OJduB\u0007eh|5pf", 6, (byte)103, (byte) (-21), (byte)103, "^NGHrnc\"31W%4Ou@", "[w02x", (byte)103, (byte)103, "[w02x");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      ImageIcon imageIcon2 = new ImageIcon("LvY1?q");
      imageIcon2.getIconWidth();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      ImageIcon imageIcon3 = new ImageIcon(byteArray0);
      ImageIcon imageIcon4 = new ImageIcon(byteArray0, "z5Ct&v/8iBM{Wydli");
      ImageIcon imageIcon5 = new ImageIcon("v@s(l&^U`");
      Image image0 = imageIcon3.getImage();
      ImageIcon imageIcon6 = new ImageIcon(image0);
      imageIcon3.toString();
      TableColumnInfo[] tableColumnInfoArray0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(" RENAME TO ", ",#NiwHGA-B24r&0");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getPluginsDirectory();
      FileWrapperImpl.createTempFile(" RENAME TO ", ",#NiwHGA-B24r&0", fileWrapperImpl0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("Skipping FK (");
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DBUtil.info.executequery", (String) null, ",#NiwHGA-B24r&0", (String) null, 3656, "nextval ('", 846, 2000, 8, 6, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.info.executequery", 8, 846, "Skipping FK (");
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(3656, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getLibraryDirectory();
      applicationFiles0.getWelcomeFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.getDriverPropertiesClone();
      uidIdentifier0.setString("<^qw2+bs!G@bb<y");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString("<^qw2+bs!G@bb<y");
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1315));
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier1);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      imageIcon0.getIconWidth();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      ImageIcon imageIcon2 = new ImageIcon(byteArray0);
      imageIcon0.toString();
      ImageIcon imageIcon3 = new ImageIcon(byteArray0, "P|No");
      ImageIcon imageIcon4 = new ImageIcon("Could not find resource: [");
      Image image0 = imageIcon4.getImage();
      imageIcon1.toString();
      ImageIcon imageIcon5 = new ImageIcon(image0);
      imageIcon5.toString();
      ImageIcon imageIcon6 = new ImageIcon();
      imageIcon6.toString();
      ImageIcon imageIcon7 = new ImageIcon(byteArray0, "mgAO;0<{S;b");
      ImageIcon imageIcon8 = new ImageIcon(byteArray0);
      imageIcon7.toString();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "javax.swing.ImageIcon@37afb0cb", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvzY1?q");
      ImageIcon imageIcon2 = new ImageIcon("LvzY1?q");
      imageIcon2.getIconWidth();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-74);
      ImageIcon imageIcon3 = new ImageIcon(byteArray0);
      imageIcon1.toString();
      ImageIcon imageIcon4 = new ImageIcon(byteArray0, "zCt&v$8iBM{Wydli");
      imageIcon3.getImageLoadStatus();
      ImageIcon imageIcon5 = new ImageIcon("v@s(l&^U`");
      Image image0 = imageIcon3.getImage();
      imageIcon1.toString();
      imageIcon3.getImage();
      ImageIcon imageIcon6 = new ImageIcon(image0);
      imageIcon6.toString();
      ImageIcon imageIcon7 = new ImageIcon();
      imageIcon3.toString();
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-74);
      byteArray1[1] = (byte) (-74);
      byteArray1[2] = (byte) (-74);
      byteArray1[3] = (byte) (-74);
      Integer integer0 = new Integer((byte) (-74));
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-793));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getUserSQLHistoryFile();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("SB@^W$qUVLnq", "SB@^W$qUVLnq", fileWrapper0);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getPluginsDirectory();
      applicationFileWrappersImpl2.getSQuirrelJarFile();
      applicationFileWrappersImpl2.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl2.getPluginsDirectory();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.createTempFile("usercode", (String) null, fileWrapper0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("select count(*) from ", (String) null, "Sun HADB", "NC}b!tx@", 8, "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", 8, 8, 225, (-2105376123), (String) null, (String) null, 8, (-1764), (String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      System.setCurrentTimeMillis((-2105376123));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "~U]Im<2MOQ+Dw", "[w02x", "}OJduB\u0007eh|5pf", (-165), "}OJduB\u0007eh|5pf", (-165), (byte) (-21), (-2), (-1238), "}OJduB\u0007eh|5pf", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2), (-8051), " CASCADE");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginAppSettingsFolder();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.setCopyMenuEnabled(false);
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-165), int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("3RENAME TO ", ",#NiwHGA-B24r&0");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl1.getPluginsDirectory();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0, ",#NiwHGA-B24r&0");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "integer");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte) (-21);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " 0ASCADE");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" 0ASCADE", (String) null, "6?!\";\"|{j`ZQ/", "+v%Ptt,", 3966, "o6E0-tNw<}K1RXC", 2003, 90, (-6), 502, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Fb/^4o", (-3600), 90, "6?!\";\"|{j`ZQ/");
      DBUtil.isBinaryType(tableColumnInfo0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getWelcomeFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Unknown");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0, "&$9O}fs>S*s8Da");
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("&$9O}fs>S*s8Da", "]B2<N", fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3, "instr");
      fileWrapperImpl2.delete();
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl3);
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(fileWrapperImpl1);
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 1781);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ActionMap actionMap0 = new ActionMap();
      ActionMap actionMap1 = new ActionMap();
      actionMap1.getParent();
      Box.createVerticalBox();
      ActionMap actionMap2 = new ActionMap();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, (-1));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("lvarbinary($l)", "[mean=", ".nextval from sys.tables", "Ul|[-D.ZeJl]w6", (-5), "=F\"h>", (-5), (-5), (-5), (-5), ".nextval from sys.tables", "=F\"h>", (-5), (-3), "-d%*V(!N{");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType(" 0ASCADE", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      imageIcon0.getIconWidth();
      DBUtil.typesAreEquivalent(16, (-1));
      System.setCurrentTimeMillis((-1));
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("{Q57jct\u0001LNo0~*+", "", "IObjectTreeAPI == null", "path.images", (-2), "informix", (-2), (-2), (-7), (-41), "{Q57jct\u0001LNo0~*+", (String) null, (-1544), (-1544), "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("bKJl)q");
      DatabaseObjectType.createNewDatabaseObjectType("~SznVZ%wNBSR-[y9p");
      DatabaseObjectType.createNewDatabaseObjectType("org.apache.commonsQcli.O|tionValidator", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("path.images");
      DatabaseObjectType.createNewDatabaseObjectType("BE}YjKSQIan");
      DatabaseObjectType.createNewDatabaseObjectType("{Q57jct\u0001LNo0~*+", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("~SznVZ%wNBSR-[y9p");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      DatabaseObjectType.createNewDatabaseObjectType("[SJ1fKWz", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      jMenuBar0.addKeyListener((KeyListener) null);
      DBUtil.typesAreEquivalent(2001, (-715));
      System.setCurrentTimeMillis(1529L);
      System.setCurrentTimeMillis((-3449L));
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("path.images", (String) null, ")sX", "LFu", (-3), (String) null, (-7), (-4), (-728), (-41), ")sX", "i4Sm_/}=", 318, 2001, ")sX");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      DatabaseObjectType.createNewDatabaseObjectType(" ", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      arrayList0.add((IDatabaseObjectInfo) null);
      arrayList0.add((IDatabaseObjectInfo) null);
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      assertEquals(2, list1.size());
      
      List<ITableInfo> list2 = DBUtil.convertObjectToTableList(arrayList0);
      assertNotSame(list2, list0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBUtil.typesAreEquivalent((-7), 27);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(27);
      SQLDriver sQLDriver0 = new SQLDriver(integerIdentifier0);
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias(integerIdentifier0);
      MockSpinnerDateModel mockSpinnerDateModel0 = null;
      try {
        mockSpinnerDateModel0 = new MockSpinnerDateModel();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // illegal value
         //
         verifyException("javax.swing.SpinnerDateModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getWelcomeFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Unknown");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0, "&$9O}fs>S*s8Da");
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("&$9O}fs>S*s8Da", "]B2<N", fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3, "instr");
      fileWrapperImpl2.delete();
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl3);
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(fileWrapperImpl1);
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl(fileWrapperImpl1, ">U0WpG6/!oJ");
      fileWrapperImpl6.setReadOnly();
      fileWrapperImpl1.mkdirs();
      FileWrapperImpl fileWrapperImpl8 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getPluginsDirectory();
      applicationFileWrappersImpl0.getFAQFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo2 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      ImageIcon imageIcon2 = new ImageIcon();
      imageIcon2.getIconWidth();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      ImageIcon imageIcon3 = new ImageIcon(byteArray0);
      imageIcon1.toString();
      ImageIcon imageIcon4 = new ImageIcon(byteArray0, "z5Ct&v/8iBM{Wydli");
      imageIcon3.getImageLoadStatus();
      ImageIcon imageIcon5 = new ImageIcon("v@s(l&^U");
      Image image0 = imageIcon3.getImage();
      imageIcon1.toString();
      imageIcon3.getImage();
      ImageIcon imageIcon6 = new ImageIcon(image0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", "LvY1?q", "scripts", (String) null, 1848, "LvY1?q", 1702, 1702, 4, (-76), "SQmCo#^e", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", (-1), 1848, "SQmCo#^e");
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      Connection connection0 = null;
      SQLAlias sQLAlias0 = new SQLAlias();
      int int0 = 2038;
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2038);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Byte byte0 = new Byte((byte)2);
      DBUtil.fixCase((ISession) null, "");
      System.setCurrentTimeMillis((byte)2);
      System.setCurrentTimeMillis(1063L);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      ActionMap actionMap0 = new ActionMap();
      Locale locale0 = Locale.CANADA;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) arrayDeque0);
      SynchronousQueue<String> synchronousQueue0 = new SynchronousQueue<String>();
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "lxY;f");
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      vector0.removeIf(predicate3);
      synchronousQueue0.offer("lxY;f", (-1709L), timeUnit0);
      Locale.lookupTag(vector0, synchronousQueue0);
      ComponentOrientation componentOrientation0 = ComponentOrientation.getOrientation(locale0);
      jMenuBar0.applyComponentOrientation(componentOrientation0);
      ActionMap actionMap1 = new ActionMap();
      actionMap1.allKeys();
      actionMap1.size();
      jMenuBar0.setActionMap(actionMap1);
      int int0 = new Integer(0);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "i^cf4Hb&G%rNW");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("q'wwtNzRF]PL/", (String) null, "q'wwtNzRF]PL/", (String) null, 1274, (String) null, (-6), (-2592), 2465, 1274, (String) null, "DomainOrder.NONE", 1274, 2025, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo2 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("DomainOrder.NONE", "q'wwtNzRF]PL/", "DomainOrder.NONE", "DomainOrder.NONE", (-2592), "q'wwtNzRF]PL/", 2, 1, (-2592), 1, "DomainOrder.NONE", "q'wwtNzRF]PL/", 0, 2, "DomainOrder.NONE");
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("<^qw2+bs!G@bb<y", 1829, 182, 182);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Unknown", "Unknown");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0, "7#aajkyR@2$BZ8Y9\"E");
      FileWrapperImpl fileWrapperImpl2 = FileWrapperImpl.createTempFile("7#aajkyR@2$BZ8Y9\"E", (String) null, fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3, "Unknown");
      fileWrapperImpl0.delete();
      FileSuffixFilter fileSuffixFilter0 = new FileSuffixFilter("l<*WdsS\"I^;*UA!tC4");
      fileWrapperImpl2.listFiles((FileFilter) fileSuffixFilter0);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl2);
      fileWrapperImpl2.mkdir();
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl("^1W5BgjB0T4Y=ygH{", "iF,Uwpd#fQQ");
      FileWrapperImpl fileWrapperImpl7 = new FileWrapperImpl(fileWrapperImpl0, "zw#]xSzQ.^(*4BLU");
      fileWrapperImpl7.setReadOnly();
      FileWrapperImpl fileWrapperImpl8 = new FileWrapperImpl(fileWrapperImpl7, "^1W5BgjB0T4Y=ygH{");
      FileWrapperImpl fileWrapperImpl9 = new FileWrapperImpl(fileWrapperImpl6, "zw#]xSzQ.^(*4BLU");
      fileWrapperImpl3.setReadOnly();
      fileWrapperImpl4.mkdirs();
      FileWrapperImpl fileWrapperImpl10 = new FileWrapperImpl(fileWrapperImpl2);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl11 = new FileWrapperImpl("zw#]xSzQ.^(*4BLU");
      applicationFileWrappersImpl0.getPluginsDirectory();
      FileWrapperImpl fileWrapperImpl12 = new FileWrapperImpl(fileWrapperImpl10);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("");
      FileWrapperImpl fileWrapperImpl13 = new FileWrapperImpl("^1W5BgjB0T4Y=ygH{");
      fileWrapperFactoryImpl0.create("7#aajkyR@2$BZ8Y9\"E");
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ActionMap actionMap0 = new ActionMap();
      Box box0 = Box.createVerticalBox();
      actionMap0.allKeys();
      box0.getActionMap();
      ActionMap actionMap1 = box0.getActionMap();
      actionMap1.size();
      ActionMap actionMap2 = new ActionMap();
      actionMap2.clear();
      actionMap2.clear();
      ActionMap actionMap3 = box0.getActionMap();
      actionMap3.setParent(actionMap1);
      actionMap3.size();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "O9QD'Rz\"ut!zH'=", "net.sourceforge.squirrel_sql.fw.util.log.Log4jLoggerFactory", "u^", 14, "u^", (-26), (-26), 40, (-1465), (String) null, "#", (-1465), 14, "usercode");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      DatabaseObjectType.createNewDatabaseObjectType("");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDT;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType4);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, " lFOREIGN KEY ", "H+Qb4#uKZ9_b6L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ITableInfo iTableInfo0 = null;
      int int0 = 3396;
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL((SessionInfoProvider) null, (String) null, (ITableInfo) null, 3396);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      LinkedHashSet<TableInfo> linkedHashSet0 = new LinkedHashSet<TableInfo>();
      linkedHashSet0.iterator();
      arrayList0.listIterator();
      arrayList0.addAll((Collection<? extends ITableInfo>) linkedHashSet0);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ImageIcon imageIcon0 = new ImageIcon();
      ImageIcon imageIcon1 = new ImageIcon("LvY1?q");
      imageIcon0.getIconWidth();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte) (-17);
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-110);
      ImageIcon imageIcon2 = new ImageIcon(byteArray0);
      imageIcon2.toString();
      ImageIcon imageIcon3 = new ImageIcon(byteArray0, ")");
      imageIcon3.toString();
      imageIcon2.toString();
      ImageIcon imageIcon4 = new ImageIcon();
      imageIcon4.toString();
      ImageIcon imageIcon5 = new ImageIcon("=i=3Qu", "eB7");
      imageIcon2.toString();
      MetalTreeUI metalTreeUI0 = new MetalTreeUI();
      metalTreeUI0.getCollapsedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("LvY1?q", (Icon) null);
      ImageIcon imageIcon6 = new ImageIcon("javax.swing.ImageIcon@45d5630b", "eB7");
      ImageIcon imageIcon7 = new ImageIcon("eB7", "Tu?E");
      imageIcon7.toString();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("lvarbinary($l)", "[mean=", ".nextval from sys.tables", "[mean=", (-5), "Fb/^4o", (-5), (-5), (-5), (-5), ".nextval from sys.tables", "Fb/^4o", (-5), (-3), "-d%*V(!N{");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      int int0 = DBUtil.replaceDistinctDataType((-5), tableColumnInfo0, (ISession) null);
      assertEquals((-5), int0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.getLastStatementValues();
      dBCopyPlugin0.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBUtil.getLastStatement();
      DBUtil.setLastStatement((String) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, (String) null, "'4fZ~C", "!fr 1w%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      int int0 = 71;
      int int1 = (-31);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("null", "et.sourseforge.sqirrel_sql.%lugins.dbcopy.dbcopy", "et.sourseforge.sqirrel_sql.%lugins.dbcopy.dbcopy", (String) null, 1161, ".^>:vdDN.@lU", 1161, 1161, (-3034), (-3034), (String) null, (String) null, 71, (-31), "null");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "null", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.so^rceforge.squirrel_sql.fw.dialects.8cKoiDialectExt$McKoiDialectHelper");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      jMenuBar0.addKeyListener((KeyListener) null);
      ActionMap actionMap0 = new ActionMap();
      Locale locale0 = Locale.CANADA;
      locale0.getDisplayVariant(locale0);
      ActionMap actionMap1 = new ActionMap();
      actionMap1.remove(locale0);
      actionMap1.size();
      jMenuBar0.setActionMap(actionMap0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, ".", "v@s(l&^U`", "qGhYQKz8/QK<=8&Sp3", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatementValues());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBUtil.setLastStatementValues("zLJ;n~7(OpawNJ9Mt$x");
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("net.sourceforge.squirrel_sql.fw.dialects.McKoiDialectExt$McKoiDialectHelper", ")", "gSW[Y49^+T$;$", (ISession) null, false, 1099);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) foreignKeyInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$1460712637 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[8];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      int int0 = 1827;
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("<^qw2+bs!G@bb<y", 1827, 182, 182);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      ActionMap actionMap0 = new ActionMap();
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayVariant(locale1);
      ComponentOrientation.getOrientation(locale0);
      ActionMap actionMap1 = new ActionMap();
      actionMap1.getParent();
      actionMap1.remove(locale0);
      actionMap0.get((Object) null);
      actionMap0.size();
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      KeyListener keyListener0 = mock(KeyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(keyListener0, keyListener0);
      AWTEventMulticaster.add((KeyListener) null, (KeyListener) null);
      jMenuBar0.addKeyListener((KeyListener) null);
      ActionMap actionMap0 = new ActionMap();
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.ENGLISH;
      locale0.getDisplayVariant(locale1);
      ComponentOrientation.getOrientation(locale0);
      ActionMap actionMap1 = new ActionMap();
      actionMap1.remove(locale0);
      actionMap1.size();
      jMenuBar0.setActionMap(actionMap0);
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "tWi@FOU2", "tWi@FOU2", "tWi@FOU2");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("3A:#go9 A,B21d", "Unknown 'series' key.", "S:N]`jq41.KT0Wl%8", foreignKeyInfo0, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-3));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBUtil.typesAreEquivalent((-2048), (-2048));
      SQLAlias sQLAlias0 = new SQLAlias();
      assertFalse(sQLAlias0.isConnectAtStartup());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-2013265917));
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier(225);
      IntegerIdentifier integerIdentifier2 = new IntegerIdentifier((-2013265917));
      boolean boolean0 = DBUtil.typesAreEquivalent(225, 2005);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.transferFocusBackward();
      ActionMap actionMap0 = new ActionMap();
      Locale locale0 = Locale.CANADA;
      ComponentOrientation componentOrientation0 = ComponentOrientation.getOrientation(locale0);
      jMenuBar0.applyComponentOrientation(componentOrientation0);
      ActionMap actionMap1 = new ActionMap();
      actionMap1.allKeys();
      actionMap1.size();
      jMenuBar0.setActionMap(actionMap1);
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "xg;f", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "xg;f", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "AND T2.tabid = T1.tabid", "BE}YjKSQIan");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
