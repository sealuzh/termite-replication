/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 06:37:46 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import net.sourceforge.schemaspy.model.xml.TableMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6103750560929169
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 142, 3);
      foreignKeyConstraint0.getDeleteRuleDescription();
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string1);
      assertEquals(142, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2N4XAKB]\"`{]");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-302), (-302));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u=2J:X:Qj&b_Sz[<=.");
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.getName();
      assertEquals((-302), foreignKeyConstraint0.getUpdateRule());
      assertEquals((-302), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = null;
      Table table0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 83, 83);
      int int0 = 1729;
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getName();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Config config0 = new Config();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      config0.getColumnDetails();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 12, 3);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "I2A*_V^|bXWH{M#poUf", (-404), 151);
      foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals((-404), foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "' to ", 0, 0);
      foreignKeyConstraint0.addChildColumn(tableColumn0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertTrue(boolean0);
      
      foreignKeyConstraint0.addParentColumn(tableColumn0);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      String string0 = ForeignKeyConstraint.toString(list0);
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertNull(string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      linkedList1.add((TableColumn) null);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      LinkedList<TableColumn> linkedList2 = new LinkedList<TableColumn>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[6] = (byte)21;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)21;
      byteArray0[5] = (byte)0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cas=cade on delete");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "mbYh", 16, 16);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nfOHm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "mbYh", 476, 476);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)21;
      byteArray0[5] = (byte)21;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mbYh");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Cas=cade on delete");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "mbYh", 16, 16);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nfOHm");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mbYh");
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "mbYh", 476, 476);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HM!^!KPI3T]w", 33, 33);
      assertFalse(foreignKeyConstraint0.isNullOnDelete());
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "HM!^!KPI3T]w", 33, 2);
      foreignKeyConstraint1.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint1.isNullOnDelete();
      assertTrue(boolean0);
      assertEquals(33, foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2943075196071256
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "SCROLL", 120, 120);
      foreignKeyConstraint0.getChildColumns();
      List<TableColumn> list0 = foreignKeyConstraint0.getParentColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.isNullOnDelete();
      foreignKeyConstraint0.getDeleteRuleDescription();
      foreignKeyConstraint0.getDeleteRule();
      foreignKeyConstraint0.getDeleteRuleDescription();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Config config0 = new Config();
      config0.setPromptForPasswordEnabled(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "I2A*_V^|bXWH{M#poUf");
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Object object0 = new Object();
      linkedList0.removeFirstOccurrence(object0);
      linkedList0.add((TableColumn) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", (byte) (-32), 3);
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-32);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[2] = (byte) (-32);
      byteArray0[3] = (byte) (-32);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte)0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis((byte) (-32));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ";2Rk:";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", 1, 1);
      foreignKeyConstraint0.isRestrictDelete();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("Jl9!AZo`N06ST[*", (String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"Jl9!AZo`N06ST[*\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.8298249359591239
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HM!^!PI3T]w", 0, 0);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("C", string0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6052468509647115
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Config config0 = new Config();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      config0.getColumnDetails();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 12, 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "I2A*_V^|bXWH{M#poUf", (-404), 151);
      foreignKeyConstraint1.getDeleteRuleAlias();
      assertEquals(151, foreignKeyConstraint1.getDeleteRule());
      assertEquals((-404), foreignKeyConstraint1.getUpdateRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2407560846182575
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", 2, 2);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ":g", 2, (-193));
      int int0 = new Integer((-193));
      foreignKeyConstraint0.getDeleteRuleDescription();
      Config config0 = Config.getInstance();
      int int1 = new Integer((-193));
      config0.getDbType();
      config0.setHost("ora");
      String string0 = "sJ <iKA8R?_";
      String string1 = "Cascade on delete";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("Cascade on delete", "ktIK.Op-", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"Cascade on delete\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 76, 76);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ":g", 2, (-193));
      Config config0 = Config.getInstance();
      foreignKeyConstraint0.getDeleteRuleName();
      config0.setHost(";2Rk:");
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", ";2Rk:", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \".meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j^");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)_0$AgHO)smKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)_0$AgHO)smKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)_0$AgHO)smKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "j^");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 484, 16);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)_0$AgHO)smKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertEquals(484, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(16, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Config.getInstance();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 2, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string1);
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 484, 16);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      foreignKeyConstraint0.getParentTable();
      assertEquals(484, foreignKeyConstraint0.getUpdateRule());
      assertEquals(16, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", 2, 2);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      Config config0 = new Config();
      config0.setMaxDetailedTabled(2);
      config0.isEncodeCommentsEnabled();
      config0.getMaxDetailedTables();
      String string0 = null;
      config0.getDbType();
      config0.setHost("ora");
      String string1 = "b;XRx2Y^B";
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string2 = "dr$YeqQ3l\"TuC9";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta(":", ".uJn,<syBo#(J", "b;XRx2Y^B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \":\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Config config0 = new Config();
      TableColumn tableColumn0 = null;
      linkedList0.add((TableColumn) null);
      linkedList0.add((TableColumn) null);
      config0.isImpliedConstraintsEnabled();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      linkedList0.add((TableColumn) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 3, (byte) (-32));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "UTF-8", (byte) (-32), 3);
      foreignKeyConstraint1.addChildColumn((TableColumn) null);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0, 0).when(resultSet0).getInt(anyString());
      doReturn((Object) null).when(resultSet0).getObject(anyString());
      doReturn((String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyString());
      TableColumn tableColumn1 = null;
      try {
        tableColumn1 = new TableColumn((Table) null, resultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 76, 76);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      foreignKeyConstraint0.getChildTable();
      assertEquals(76, foreignKeyConstraint0.getDeleteRule());
      assertEquals(76, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.2943001352744115
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "HM!^!KPI3T]w", 0, 0);
      foreignKeyConstraint0.isReal();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      foreignKeyConstraint0.isNullOnDelete();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isRestrictDelete();
      boolean boolean1 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
      
      int int1 = foreignKeyConstraint0.getDeleteRule();
      assertTrue(int1 == int0);
      
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleName();
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string1);
      
      boolean boolean2 = foreignKeyConstraint0.isReal();
      assertTrue(boolean2);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 12, (-2265));
      boolean boolean0 = foreignKeyConstraint0.isReal();
      Integer integer0 = new Integer(12);
      boolean boolean1 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = foreignKeyConstraint0.isImplied();
      assertEquals((-2265), foreignKeyConstraint0.getDeleteRule());
      assertEquals(12, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean2);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 76, 76);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(76, foreignKeyConstraint0.getDeleteRule());
      assertEquals(76, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", (-19), (-19));
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-19), int0);
      assertEquals((-19), foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", 2, 2);
      foreignKeyConstraint0.isRestrictDelete();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      HashMap<String, Table> hashMap0 = new HashMap<String, Table>();
      TableMeta tableMeta0 = mock(TableMeta.class, new ViolatedAssumptionAnswer());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 76, 76);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertEquals(76, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(76, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jc");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 484, 16);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "%9)+0$AOWsmKn");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      System.setCurrentTimeMillis(484);
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(16, foreignKeyConstraint0.getDeleteRule());
      assertEquals(484, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "DECIMAL_DIGITS", 9, 1);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(9, int0);
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", foreignKeyConstraint0.getDeleteRuleDescription());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.02285770806073
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", 1, 1);
      foreignKeyConstraint0.getDeleteRuleDescription();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ";2Rk:", (-3383), 2078);
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getName();
      foreignKeyConstraint0.getDeleteRuleAlias();
      System.setCurrentTimeMillis(1);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5103090061340354
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";2Rk:", 2, 2);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, ":g", 2, 2);
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals(1, int0);
      
      int int1 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(2, foreignKeyConstraint1.getUpdateRule());
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", foreignKeyConstraint1.getDeleteRuleDescription());
      assertEquals((-1), int1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Table table0 = null;
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      Config config0 = new Config();
      linkedList0.add((TableColumn) null);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setIsAutoUpdated(true);
      LinkedList<TableColumn> linkedList1 = new LinkedList<TableColumn>();
      linkedList1.add((TableColumn) null);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0, (-2726), (-60));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vp(.e^.m(GtqH45G", 0, (-2265));
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals((-2265), int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setIsAutoUpdated(false);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.removeParent(tableColumn1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
