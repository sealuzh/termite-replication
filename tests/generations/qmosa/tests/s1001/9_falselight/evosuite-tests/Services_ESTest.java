/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 04:50:44 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.045558893889891
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://!:14");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "vT9 ] \"|hIa");
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      services_HTTP_Result1.code = (-5511);
      services_HTTP_Result1.page_weight = 0;
      services_HTTP_Result1.time = 2080L;
      services_HTTP_Result1.toString();
      Services.testHTTP("!", 14);
      Services.testHTTP("", 0);
      services_HTTP_Result1.reset();
      assertEquals(0, services_HTTP_Result1.code);
      
      Services.testHTTP("", 14);
      Services.HTTP_Result services_HTTP_Result2 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result3 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result4 = new Services.HTTP_Result();
      assertEquals(0L, services_HTTP_Result4.time);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.237229799594417
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://xYhn3-=2");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "vT9 ] \"|hIa");
      Services.testHTTPS("xYhn3-=2", (-1));
      services_SIMPLE_Result0.works = false;
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.time = 2080L;
      services_HTTP_Result0.toString();
      Services.testHTTP("!", (-1));
      Services.testHTTP("", 0);
      services_HTTP_Result0.reset();
      assertEquals(0L, services_HTTP_Result0.time);
      
      Services.testHTTP("", 12);
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("", 0);
      services_HTTP_Result1.Error = "";
      Services.HTTP_Result services_HTTP_Result2 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result3 = new Services.HTTP_Result();
      Services.HTTP_Result services_HTTP_Result4 = Services.testHTTP("", 0);
      assertEquals(0, services_HTTP_Result4.page_weight);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 2312);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      Services.testPOP3("SOB upl2?~,f4wWPPri>", 2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis(2312);
      System.setCurrentTimeMillis((-3L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 2320);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      Services.testSMTP("SOB ) l2U~,f4wWPGi>", 2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(2320);
      System.setCurrentTimeMillis(19L);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("", (-1447));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 1);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("", (-84));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services services0 = new Services();
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.856882596414008
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.time = 0L;
      services_SIMPLE_Result0.Error = "";
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.toString();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
      
      services_SIMPLE_Result0.reset();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testSMTP("", (-1404));
      assertFalse(services_SIMPLE_Result1.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("}&", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("uhM..9mr/HsLWSxZ", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("** Temps : ", (-2047));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }
}
