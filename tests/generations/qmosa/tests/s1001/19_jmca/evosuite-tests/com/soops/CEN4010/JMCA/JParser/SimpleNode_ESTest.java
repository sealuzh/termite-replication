/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 01:01:43 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("*");
      simpleNode0.setIdentifier("</idenfierXS>");
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.write("</idenfierXS>");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.identifiers = null;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<=");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      stringWriter0.append('N');
      // Undeclared exception!
      try { 
        simpleNode0.toString("*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8222653373287878
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(86);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      String string0 = null;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump((String) null, stringWriter0);
      simpleNode0.parent = null;
      simpleNode0.jjtGetParent();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 1444);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream1);
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtAddChild((Node) null, 86);
      String string1 = " : ";
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump(" : ", stringWriter1);
      try { 
        pushbackInputStream1.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.flush();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode0.setIdentifier(")");
      simpleNode0.dump("}", stringWriter1);
      StringWriter stringWriter2 = new StringWriter();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "*lshft", (-553), 1208);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.666332585328325
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3833));
      SimpleNode simpleNode1 = new SimpleNode(30);
      simpleNode0.parent = (Node) simpleNode1;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.setIdentifier((String) null);
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetParent();
      StringWriter stringWriter0 = new StringWriter(30);
      simpleNode2.dump(")", stringWriter0);
      simpleNode1.toString(")");
      simpleNode2.jjtAddChild(simpleNode0, 30);
      assertEquals(31, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5735160760972796
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter(47);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.dump("</idenfierXS>", stringWriter0);
      simpleNode0.setIdentifier("&&");
      simpleNode0.toString();
      simpleNode0.dump("&&", stringWriter0);
      assertEquals("<InstanceOfExpression>\n  <identifier>*amp</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.8222900060250078
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      String string0 = "v";
      simpleNode0.setIdentifier("v");
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser("v");
      simpleNode0.dump("</identifier>", stringWriter0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      try { 
        javaParser0.Name();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(73);
      String string0 = "v";
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("v");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1595888143086257
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ";");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringWriter stringWriter2 = stringWriter1.append('N');
      simpleNode0.toString("WhPiy+c");
      simpleNode0.setIdentifier(";");
      simpleNode0.dump("%:Z~xu=-2A~&Rd", stringWriter2);
      MockFile mockFile0 = new MockFile("<");
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.setIdentifier("@");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(63);
      simpleNode0.dump("@", stringWriter0);
      simpleNode0.setIdentifier("@");
      StringWriter stringWriter2 = stringWriter0.append('S');
      simpleNode0.setIdentifier("@");
      stringWriter2.flush();
      simpleNode0.toString(";c;C{%|Wc%Q9,(=");
      simpleNode0.setIdentifier("E");
      simpleNode0.id = 669;
      StringWriter stringWriter3 = stringWriter0.append('S');
      StringWriter stringWriter4 = stringWriter3.append('T');
      StringWriter stringWriter5 = stringWriter4.append((CharSequence) "@");
      // Undeclared exception!
      try { 
        simpleNode0.dump("boolean", stringWriter5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("61vb");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "61vb");
      charArray0[2] = '7';
      stringReader0.ready();
      charArray0[3] = 'Y';
      charArray0[4] = 'G';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBuffer charBuffer1 = CharBuffer.allocate(62);
      charBuffer1.read(charBuffer0);
      charBuffer1.compact();
      charBuffer1.asReadOnlyBuffer();
      charBuffer0.compact();
      charBuffer0.read(charBuffer1);
      CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      char[] charArray1 = new char[1];
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      CharBuffer.allocate('7');
      stringReader0.read(charBuffer2);
      stringReader0.read(charArray1, 0, 0);
      stringReader0.mark(0);
      CharBuffer.allocate(3436);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      simpleNode0.jjtGetChild(0);
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      stringWriter0.getBuffer();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringReader stringReader0 = new StringReader(",+>e1=;]psOKV;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 84);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      simpleNode0.toString(",+>e1=;]psOKV;");
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (-1106101594));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1106101594. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SystemInUtil.addInputLine(">");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WhPiy+c");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      stringWriter0.append('N');
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "WhPiy+c");
      simpleNode0.toString("SwitchLabel");
      char[] charArray0 = new char[18];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      charArray0[5] = 'N';
      charArray0[6] = 'N';
      charArray0[7] = 'N';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      assertEquals("NNNNNNNNN\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000<InstanceOfExpression>\n  <identifier>*lt</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.156750971308615
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("61vb");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      String string0 = "}";
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(0);
      simpleNode0.dump("}", stringWriter0);
      String string1 = ";aB7";
      simpleNode0.setIdentifier("61vb");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.toString(";aB7");
      StringWriter stringWriter3 = new StringWriter(1517);
      SimpleNode simpleNode1 = new SimpleNode((-2966));
      simpleNode1.dump("ry)", stringWriter3);
      URI uRI0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("61vb");
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.duplicate();
      stringReader0.read(charBuffer0);
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      stringReader0.read(charArray0, 0, 0);
      stringReader0.read(charArray0);
      stringReader0.mark(0);
      simpleNode0.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter(255);
      String string0 = null;
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("&", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(18);
      StringWriter stringWriter2 = stringWriter1.append('m');
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = stringWriter1.append((CharSequence) "w<");
      StringWriter stringWriter5 = stringWriter2.append((CharSequence) "&");
      StringWriter stringWriter6 = stringWriter4.append('m');
      StringWriter stringWriter7 = stringWriter0.append((CharSequence) "&");
      stringWriter7.append('l');
      StringWriter stringWriter8 = new StringWriter();
      stringWriter7.close();
      stringWriter6.append((CharSequence) "&");
      stringWriter3.append((CharSequence) "w<");
      stringWriter0.close();
      StringWriter stringWriter9 = stringWriter3.append('.');
      StringWriter stringWriter10 = stringWriter5.append('.');
      char[] charArray0 = new char[1];
      charArray0[0] = 'W';
      stringWriter10.write(charArray0);
      stringWriter10.append((CharSequence) "&");
      StringWriter stringWriter11 = new StringWriter('m');
      stringWriter9.write((-1316));
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "&", (-1610612734), 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 18;
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "&";
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("&", stringWriter0);
      StringWriter stringWriter1 = new StringWriter(18);
      char char0 = 'm';
      StringWriter stringWriter2 = stringWriter1.append('m');
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = stringWriter1.append((CharSequence) "w<");
      stringWriter2.append((CharSequence) "&");
      StringWriter stringWriter5 = stringWriter4.append('m');
      StringWriter stringWriter6 = stringWriter0.append((CharSequence) "&");
      StringWriter stringWriter7 = new StringWriter(18);
      StringWriter stringWriter8 = new StringWriter();
      stringWriter2.close();
      stringWriter6.close();
      stringWriter5.append((CharSequence) "&");
      stringWriter3.append((CharSequence) "w<");
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      // Undeclared exception!
      try { 
        stringWriter2.write(charArray0, 18, 18);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9532710147058912
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("61vb");
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = 'Z';
      charArray0[2] = '7';
      charArray0[3] = 'O';
      charArray0[4] = 'H';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      char[] charArray1 = new char[0];
      CharBuffer charBuffer1 = CharBuffer.allocate(0);
      CharBuffer.allocate('7');
      stringReader0.read(charBuffer1);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      stringReader0.ready();
      stringReader0.read(charArray1, 0, 0);
      stringReader0.mark(0);
      CharBuffer.allocate(3436);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.dump("OOtN3\"A]Y4kX@", stringWriter0);
      simpleNode0.dump("6ye jBJg", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("OOtN3\"A]Y4kX@", stringWriter0);
      simpleNode0.jjtAddChild((Node) null, 3436);
      assertEquals(3437, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.9608919796672832
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("Rv");
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0000';
      stringReader0.ready();
      charArray0[3] = '\u0000';
      stringReader0.read();
      charArray0[4] = '\u0000';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBuffer charBuffer1 = CharBuffer.allocate(62);
      charBuffer0.clear();
      charBuffer1.duplicate();
      charBuffer1.limit(0);
      CharBuffer.allocate(0);
      stringReader0.read(charBuffer1);
      CharBuffer.allocate('\u0000');
      charBuffer1.read(charBuffer0);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      charBuffer0.read(charBuffer1);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      CharBuffer charBuffer3 = CharBuffer.allocate(0);
      charBuffer2.order();
      CharBuffer.allocate('\u0000');
      stringReader0.read(charBuffer3);
      CharBuffer.allocate(0);
      stringReader0.mark(0);
      charBuffer3.read(charBuffer2);
      StringWriter stringWriter0 = new StringWriter(82);
      SimpleNode simpleNode1 = new SimpleNode('U');
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.dump("^aT}bx[VM[_Ft( DV", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(476);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 476
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.36764947740014225
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.setIdentifier(">>");
      StringWriter stringWriter0 = new StringWriter();
      JavaParser javaParser0 = new JavaParser(">>");
      simpleNode0.setIdentifier("FormalParameters");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("FormalParameters", stringWriter1);
      JavaParser javaParser1 = new JavaParser("FormalParameters");
      JavaParser javaParser2 = new JavaParser(javaParser0.token_source);
      JavaCharStream javaCharStream0 = javaParser0.jj_input_stream;
      JavaParser javaParser3 = new JavaParser("Ux+QIQH~RQXC");
      JavaParser javaParser4 = new JavaParser(javaParser2.token_source);
      JavaCharStream javaCharStream1 = javaParser4.jj_input_stream;
      StringReader stringReader0 = new StringReader("FormalParameters");
      JavaCharStream javaCharStream2 = new JavaCharStream((Reader) null, 73, (-1));
      JavaParserTokenManager javaParserTokenManager0 = null;
      try {
        javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream2, 507);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : 507. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "9";
      SimpleNode simpleNode0 = new SimpleNode(61);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter(2080);
      stringWriter0.append((CharSequence) "9");
      // Undeclared exception!
      try { 
        simpleNode0.dump("9", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1379814178673198
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      StringWriter stringWriter0 = new StringWriter(26);
      SimpleNode simpleNode0 = new SimpleNode(2326);
      simpleNode0.setIdentifier("*,qb^5lNkLg M8Px]o");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 26);
      simpleNode1.jjtClose();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier("%rVT1t1Y^");
      simpleNode1.toString();
      SimpleNode simpleNode2 = new SimpleNode(26);
      simpleNode2.setIdentifier("<=");
      simpleNode2.dump("<=", stringWriter0);
      simpleNode1.jjtOpen();
      simpleNode1.toString("");
      simpleNode2.jjtOpen();
      simpleNode1.jjtAddChild(simpleNode2, 26);
      simpleNode1.dump("PDjhLEV#9", stringWriter0);
      assertEquals("<ExplicitConstructorInvocation>\n  <identifier>*le</identifier>\n</ExplicitConstructorInvocation>\n<ExplicitConstructorInvocation><ExplicitConstructorInvocation>\n  <identifier>*le</identifier>\n</ExplicitConstructorInvocation>\n</ExplicitConstructorInvocation>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.8953326659680909
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(68);
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "Compilati8nUnit";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      simpleNode0.dump("Compilati8nUnit", stringWriter0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      URI uRI0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1106101594));
      JavaParser javaParser0 = new JavaParser((Reader) null);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-728));
      Node node0 = simpleNode1.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-728));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("61vb");
      char[] charArray0 = new char[21];
      charArray0[1] = '\u0000';
      charArray0[2] = '\u0000';
      stringReader0.ready();
      charArray0[3] = '\u0000';
      charArray0[4] = '\u0000';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBuffer charBuffer1 = CharBuffer.allocate(62);
      charBuffer1.duplicate();
      stringReader0.read(charBuffer1);
      charBuffer1.read(charBuffer0);
      charBuffer0.read(charBuffer1);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      char[] charArray1 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate(0);
      CharBuffer.allocate('\u0000');
      stringReader0.read(charBuffer3);
      simpleNode0.jjtAddChild(simpleNode0, 0);
      stringReader0.read(charArray1, 0, 0);
      stringReader0.mark(0);
      CharBuffer.allocate(10);
      charBuffer3.read(charBuffer2);
      StringWriter stringWriter0 = new StringWriter(0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-154417720));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -154417720
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 95;
      SimpleNode simpleNode0 = new SimpleNode(95);
      simpleNode0.jjtAddChild(simpleNode0, 95);
      Node node0 = null;
      String string0 = "|y~";
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      StringWriter stringWriter0 = new StringWriter(95);
      // Undeclared exception!
      simpleNode0.dump("|y~", stringWriter0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2321477418566442
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      StringWriter stringWriter0 = new StringWriter(26);
      SimpleNode simpleNode0 = new SimpleNode(2326);
      simpleNode0.dump("2sC3", stringWriter0);
      simpleNode0.setIdentifier("*,qb^5lNkLg M8Px]o");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 26);
      simpleNode1.jjtClose();
      simpleNode1.jjtGetParent();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier("%rVT1t1Y^");
      simpleNode1.toString();
      SimpleNode simpleNode2 = new SimpleNode(26);
      char[] charArray0 = new char[3];
      charArray0[0] = '\"';
      charArray0[1] = '9';
      charArray0[2] = '?';
      stringWriter0.write(charArray0);
      simpleNode2.setIdentifier("<=");
      simpleNode1.jjtOpen();
      simpleNode1.toString("");
      simpleNode2.jjtOpen();
      simpleNode1.jjtAddChild(simpleNode2, 26);
      simpleNode1.dump("PDjhLEV#9", stringWriter0);
      simpleNode2.toString("PDjhLEV#9");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(873);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      char[] charArray0 = new char[0];
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetChild(0);
      StringWriter stringWriter0 = new StringWriter(255);
      String string0 = null;
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SystemInUtil.addInputLine(">");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WhPiy+c");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      stringWriter0.append('N');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.toString("SwitchLabel");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".S.");
      char[] charArray0 = new char[8];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      charArray0[2] = 'N';
      charArray0[3] = 'N';
      charArray0[4] = 'N';
      charArray0[5] = 'N';
      charArray0[6] = 'N';
      charArray0[7] = 'N';
      stringWriter0.write(charArray0);
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      assertEquals("NNNNNNNNN<InstanceOfExpression>\n  <identifier>*ge</identifier>\n</InstanceOfExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.7031315809655685
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(47);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WhPiy+c");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      stringWriter0.append('N');
      simpleNode0.toString("SwitchLabel");
      simpleNode0.setIdentifier(">=");
      simpleNode0.dump(">=", stringWriter0);
      MockFile mockFile0 = new MockFile("<");
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("61vb");
      String string0 = "<<";
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(43);
      simpleNode0.setIdentifier("<<");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter1.append((CharSequence) "61vb");
      StringWriter stringWriter4 = stringWriter2.append('[');
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '%';
      stringWriter3.write(charArray0);
      stringWriter4.append((CharSequence) "<<");
      String string1 = "}I";
      simpleNode0.toString("\"new\"");
      StringWriter stringWriter5 = new StringWriter(0);
      simpleNode0.dump("xJ2<DNM]'", stringWriter4);
      StringWriter stringWriter6 = new StringWriter();
      stringWriter0.append((CharSequence) "61vb");
      StringWriter stringWriter7 = null;
      try {
        stringWriter7 = new StringWriter((-1076860143));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.20478541691352
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 10);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      jJTJavaParserState0.pushNode(simpleNode0);
      SimpleNode simpleNode1 = (SimpleNode)jJTJavaParserState0.rootNode();
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("");
      simpleNode0.setIdentifier("EnumConstant");
      simpleNode0.jjtClose();
      simpleNode0.toString("");
      simpleNode0.setIdentifier("");
      simpleNode0.toString();
      simpleNode0.parser = javaParser0;
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.setIdentifier("EnumConstant : EnumConstant : ");
      simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(simpleNode1, 10);
      simpleNode0.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 18);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-1));
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "WhPiy+c");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        simpleNode0.toString("SwitchLabel");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      simpleNode0.setIdentifier("B");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(73);
      simpleNode0.dump("B", stringWriter0);
      simpleNode0.setIdentifier("^");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter1.append('&');
      simpleNode0.toString("\" \"");
      StringWriter stringWriter4 = new StringWriter(1517);
      simpleNode0.dump("\" \"", stringWriter1);
      StringWriter stringWriter5 = new StringWriter();
      stringWriter0.append('&');
      stringWriter5.append((CharSequence) "B");
      stringWriter5.append('&');
      // Undeclared exception!
      try { 
        stringWriter3.append((CharSequence) "B", (-217), 1517);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier(">");
      simpleNode0.dump(">", stringWriter0);
      StringBuffer stringBuffer0 = new StringBuffer(">");
      StringReader stringReader0 = new StringReader(",+>e1=;]psOKV;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 84);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      simpleNode0.toString(",+>e1=;]psOKV;");
      int int0 = (-1106101594);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (-1106101594));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1106101594. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 84;
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<", stringWriter0);
      StringBuffer stringBuffer0 = new StringBuffer("<");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringReader stringReader0 = new StringReader(",+>e1=;]psOKV;");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 84);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      simpleNode0.toString(",+>e1=;]psOKV;");
      int int1 = (-1106101594);
      JavaParserTokenManager javaParserTokenManager1 = null;
      try {
        javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream0, (-1106101594));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error: Ignoring invalid lexical state : -1106101594. State unchanged.
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9943536917623688
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = '7';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBuffer charBuffer1 = CharBuffer.allocate(62);
      charBuffer1.read(charBuffer0);
      charBuffer0.read(charBuffer1);
      CharBuffer.allocate(0);
      char[] charArray1 = new char[1];
      CharBuffer.allocate(0);
      CharBuffer.allocate('7');
      CharBuffer.allocate(3436);
      StringWriter stringWriter0 = new StringWriter('7');
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.dump("^aT}bx[VM[_Ft( DV", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(476);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 476
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SystemInUtil.addInputLine("f#NiehI?6?BQ e_M8k");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaParser javaParser0 = new JavaParser(pushbackInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 3120);
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3120
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.8717814824679823
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringReader stringReader0 = new StringReader("Rv");
      char[] charArray0 = new char[5];
      charArray0[1] = '\u0000';
      stringReader0.ready();
      charArray0[3] = '\u0000';
      stringReader0.read();
      charArray0[4] = '\u0000';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBuffer charBuffer1 = CharBuffer.allocate(62);
      charBuffer0.clear();
      charBuffer1.duplicate();
      charBuffer1.flip();
      charBuffer0.clear();
      CharBuffer.allocate(0);
      stringReader0.read(charBuffer1);
      CharBuffer.allocate('\u0000');
      charBuffer1.read(charBuffer0);
      charBuffer0.read(charBuffer1);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      stringReader0.read(charBuffer0);
      CharBuffer charBuffer3 = CharBuffer.allocate(0);
      CharBuffer.allocate('\u0000');
      stringReader0.read(charBuffer3);
      charBuffer2.flip();
      CharBuffer.allocate(0);
      stringReader0.mark(0);
      charBuffer3.read(charBuffer2);
      StringWriter stringWriter0 = new StringWriter(82);
      SimpleNode simpleNode1 = new SimpleNode('U');
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.dump("^a5T}bx[VM[_Ft( DV", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(456);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 456
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = 'Y';
      charArray0[2] = 'Y';
      charArray0[3] = 'Y';
      charArray0[4] = 'Y';
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharBuffer charBuffer1 = CharBuffer.allocate(62);
      charBuffer1.duplicate();
      charBuffer1.read(charBuffer0);
      charBuffer0.read(charBuffer1);
      CharBuffer charBuffer2 = CharBuffer.allocate(0);
      char[] charArray1 = new char[1];
      CharBuffer charBuffer3 = CharBuffer.allocate(0);
      CharBuffer.allocate('Y');
      simpleNode0.jjtAddChild(simpleNode0, 0);
      CharBuffer.allocate(0);
      charBuffer3.read(charBuffer2);
      SimpleNode simpleNode1 = new SimpleNode('Y');
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(476);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 476
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("61vb");
      StringReader stringReader0 = new StringReader("61vb");
      javaParser0.ReInit((Reader) stringReader0);
      int int0 = 1065;
      String string0 = "ZTis3Tn~nG9$";
      StringWriter stringWriter0 = new StringWriter();
      javaParser0.UnaryExpression();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 125);
      String string1 = "]7'qp)qS${>aG~ge";
      // Undeclared exception!
      try { 
        simpleNode0.toString("9>");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 125
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
