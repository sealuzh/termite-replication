/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 05:44:38 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.HeadlessException;
import java.awt.List;
import java.awt.ScrollPane;
import java.awt.datatransfer.SystemFlavorMap;
import java.awt.dnd.DropTarget;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.InputMethodListener;
import java.io.BufferedReader;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.util.Collection;
import java.util.function.Predicate;
import java.util.stream.Stream;
import javax.swing.Icon;
import javax.swing.JApplet;
import javax.swing.JCheckBox;
import javax.swing.JLayeredPane;
import javax.swing.JPasswordField;
import javax.swing.JSpinner;
import javax.swing.plaf.basic.BasicRadioButtonMenuItemUI;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSState;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("~m)JTQ=UQUU*FHB)n");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSJshopVars.interrogation = (int) (byte)39;
      JSJshopVars.leftPar = (int) (byte)39;
      jSJshop0.parserFile("~m)JTQ=UQUU*FHB)n");
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2772569862978458
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.isGround();
      Object object0 = new Object();
      Stream stream0 = jSTaskAtom0.stream();
      jSTaskAtom0.add(object0);
      jSTaskAtom0.add(object0);
      Object object1 = new Object();
      jSTaskAtom0.add((Object) null);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) stream0;
      objectArray0[1] = object1;
      objectArray0[2] = (Object) stream0;
      objectArray0[3] = (Object) jSTaskAtom0;
      objectArray0[4] = object0;
      objectArray0[5] = (Object) stream0;
      Object object2 = new Object();
      objectArray0[6] = object2;
      jSTaskAtom0.toArray(objectArray0);
      jSTaskAtom0.add((Object) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("z3");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "z3";
      stringArray0[1] = "all";
      stringArray0[2] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.isGround();
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) jSTaskAtom0;
      objectArray1[1] = (Object) jSTaskAtom0;
      objectArray1[2] = (Object) jSTaskAtom0;
      objectArray1[3] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = (Object) jSTaskAtom0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSTaskAtom0;
      objectArray2[3] = (Object) jSTaskAtom0;
      objectArray2[4] = (Object) jSTaskAtom0;
      objectArray2[5] = (Object) jSTaskAtom0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[8];
      objectArray3[0] = (Object) jSTaskAtom0;
      objectArray3[1] = (Object) jSTaskAtom0;
      objectArray3[2] = (Object) jSTaskAtom0;
      objectArray3[3] = (Object) jSTaskAtom0;
      objectArray3[4] = (Object) jSTaskAtom0;
      objectArray3[5] = (Object) jSTaskAtom0;
      objectArray3[6] = (Object) jSTaskAtom0;
      objectArray3[7] = (Object) jSTaskAtom0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[3];
      objectArray4[0] = (Object) jSTaskAtom0;
      objectArray4[1] = (Object) jSTaskAtom0;
      Object object0 = new Object();
      objectArray4[2] = object0;
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[2];
      Object object1 = new Object();
      objectArray5[0] = object1;
      objectArray5[1] = object0;
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[0];
      objectArray0[5] = objectArray6;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray4);
      jSTaskAtom0.add((Object) defaultTableModel0);
      Object object2 = new Object();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      jSTaskAtom0.add((Object) jSPairPlanTSListNodes0);
      jSTaskAtom0.stream();
      jSTaskAtom0.add(object2);
      jSTaskAtom0.add(object2);
      Object object3 = new Object();
      Object object4 = new Object();
      jSTaskAtom0.listIterator(1);
      jSTaskAtom0.iterator();
      jSTaskAtom0.add((Object) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSJshop jSJshop0 = new JSJshop();
      jSTaskAtom0.add((Object) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("all/7=hxkd'SPzx");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "z3");
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("all", "7=hxkd'SPzx", (JApplet) null);
      assertNotNull(bufferedReader0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "********* tree finl solution*******");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/d^8vIZd6ydV");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&m+=\"m#!O$");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)36;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "Error 2 in Util.getBufferedReader : ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "EF(ArO");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "I\"");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      System.setCurrentTimeMillis(2670L);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)58;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("~m)JTQ=UQUU*FHB)n");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byteArray0[1] = (byte)58;
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader((byte)58);
      jSJshop0.parserFile("~m)JTQ=UQUU*FHB)n");
      ScrollPane scrollPane0 = null;
      try {
        scrollPane0 = new ScrollPane((byte)58);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "i8tZe`)q");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "i8tZe`)q");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "uw~y");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JApplet jApplet0 = JSJshop.applet;
      JApplet jApplet1 = JSJshop.applet;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)44;
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte)91;
      byteArray0[7] = (byte) (-57);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "|>0wv");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "|>0wv");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error 2 in Util.getBufferedReader : ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("~m)JTQ=UQUU*FHB)n");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.parserFile("~m)JTQ=UQUU*FHB)n");
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5425058673927379
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/85_shop");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Error 2 in Util.getBufferedReader : ");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "jYm:!,~r}|]@mT4-K");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "********* tree final solution*******");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "H@eK3{L6b82<3=_");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "q(Lq!M!:rRUn`!g");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      jSTaskAtom0.isGround();
      Object object0 = new Object();
      Object object1 = new Object();
      jSTaskAtom0.add(object0);
      jSTaskAtom0.add((Object) null);
      Object[][] objectArray0 = new Object[0][1];
      Object[] objectArray1 = new Object[5];
      objectArray1[0] = null;
      objectArray1[1] = (Object) jSTaskAtom0;
      objectArray1[2] = null;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(")");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)14;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Object[] objectArray2 = new Object[7];
      objectArray2[0] = null;
      Object object2 = new Object();
      objectArray2[1] = object2;
      Object object3 = new Object();
      jSTaskAtom0.add(object3);
      objectArray2[2] = (Object) jSTaskAtom0;
      objectArray2[3] = (Object) jSTaskAtom0;
      objectArray2[4] = object1;
      objectArray2[5] = object1;
      objectArray2[6] = null;
      Object[] objectArray3 = new Object[6];
      objectArray3[0] = object0;
      objectArray3[1] = (Object) jSTaskAtom0;
      objectArray3[2] = (Object) jSTaskAtom0;
      objectArray3[3] = object2;
      objectArray3[4] = null;
      objectArray3[5] = object3;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray3);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(")", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)39;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("~m)JTQ=UQUU*FHB)n");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.parserFile("~m)JTQ=UQUU*FHB)n");
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "h&B?BuQ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)23;
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader(60);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      boolean boolean0 = true;
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      byte[] byteArray0 = new byte[6];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[0] = (byte)65;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.apostrophe = (int) (byte)65;
      jSJshop0.testParser();
      JPasswordField jPasswordField0 = new JPasswordField("{9O");
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      JApplet jApplet1 = JSJshop.applet;
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader((String) null, (String) null, (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) jSTaskAtom0;
      objectArray1[1] = (Object) jSTaskAtom0;
      objectArray1[3] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = (Object) jSTaskAtom0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSTaskAtom0;
      objectArray2[3] = (Object) jSTaskAtom0;
      objectArray2[5] = (Object) jSTaskAtom0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[8];
      objectArray3[0] = (Object) jSTaskAtom0;
      objectArray3[1] = (Object) jSTaskAtom0;
      objectArray3[2] = (Object) jSTaskAtom0;
      objectArray3[3] = (Object) jSTaskAtom0;
      objectArray3[5] = (Object) jSTaskAtom0;
      objectArray3[6] = (Object) jSTaskAtom0;
      objectArray3[7] = (Object) jSTaskAtom0;
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[3];
      objectArray4[0] = (Object) jSTaskAtom0;
      objectArray4[1] = (Object) jSTaskAtom0;
      objectArray4[2] = objectArray2[5];
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[2];
      objectArray5[0] = objectArray3[1];
      objectArray5[1] = objectArray2[5];
      objectArray0[4] = objectArray5;
      Object[] objectArray6 = new Object[0];
      objectArray0[5] = objectArray6;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, objectArray4);
      jSTaskAtom0.add((Object) defaultTableModel0);
      Object object0 = new Object();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = new JSPairPlanTSListNodes();
      jSTaskAtom0.add((Object) jSPairPlanTSListNodes0);
      jSTaskAtom0.add(object0);
      jSTaskAtom0.add(object0);
      Object object1 = new Object();
      Object object2 = new Object();
      jSTaskAtom0.iterator();
      jSTaskAtom0.add((Object) null);
      JSJshop jSJshop0 = new JSJshop();
      jSTaskAtom0.add((Object) null);
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("all", "7=hxkd'SPzx", (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JApplet jApplet0 = JSJshop.applet;
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      JSJshop jSJshop0 = new JSJshop();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.parserFile("/>qL[n-a;lf");
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI basicTreeUI1 = new BasicTreeUI();
      basicTreeUI1.getCollapsedIcon();
      JCheckBox jCheckBox0 = new JCheckBox((Icon) null);
      JCheckBox jCheckBox1 = new JCheckBox((Icon) null);
      assertFalse(jCheckBox1.isFocusTraversalPolicyProvider());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getTree();
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI basicTreeUI1 = new BasicTreeUI();
      basicTreeUI1.getCollapsedIcon();
      JCheckBox jCheckBox0 = new JCheckBox((Icon) null);
      JCheckBox jCheckBox1 = new JCheckBox((Icon) null);
      assertFalse(jCheckBox1.isFocusTraversalPolicyProvider());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      JSJshop.main(stringArray0);
      SystemFlavorMap.getDefaultFlavorMap();
      boolean boolean0 = false;
      List list0 = null;
      try {
        list0 = new List(1285, false);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = null;
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, "all");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      Object[][] objectArray0 = new Object[6][4];
      Object[] objectArray1 = new Object[4];
      objectArray1[0] = (Object) jSTaskAtom0;
      objectArray1[1] = (Object) jSTaskAtom0;
      objectArray1[3] = (Object) jSTaskAtom0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[6];
      objectArray2[0] = (Object) jSTaskAtom0;
      objectArray2[1] = (Object) jSTaskAtom0;
      objectArray2[2] = (Object) jSTaskAtom0;
      objectArray2[3] = (Object) jSTaskAtom0;
      Object object0 = new Object();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      jSTaskAtom0.add(objectArray1[1]);
      Object[][] objectArray3 = new Object[9][2];
      objectArray3[0] = objectArray2;
      objectArray3[1] = objectArray1;
      objectArray3[2] = objectArray2;
      objectArray3[3] = objectArray2;
      objectArray3[4] = objectArray1;
      objectArray3[5] = objectArray2;
      objectArray3[6] = objectArray1;
      objectArray3[7] = objectArray2;
      Object[] objectArray4 = new Object[6];
      objectArray4[0] = (Object) integer0;
      objectArray4[1] = (Object) jSTaskAtom0;
      objectArray4[2] = object0;
      objectArray4[3] = (Object) integer0;
      objectArray4[4] = (Object) jSTaskAtom0;
      objectArray4[5] = (Object) jSTaskAtom0;
      objectArray3[8] = objectArray4;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray3, objectArray1);
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(")", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "[ ";
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("[ ", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("~V9.*8v=kO", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.colon = 1263;
      JSJshopVars.minus = 1326;
      jSJshop0.dom();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "a,QJOV";
      stringArray0[1] = "";
      Reader reader0 = null;
      StreamTokenizer streamTokenizer0 = null;
      try {
        streamTokenizer0 = new StreamTokenizer((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI basicTreeUI1 = new BasicTreeUI();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      jSJshop0.getDeleteList();
      JSpinner jSpinner0 = new JSpinner();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0);
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      BasicTreeUI basicTreeUI1 = new BasicTreeUI();
      BasicRadioButtonMenuItemUI basicRadioButtonMenuItemUI0 = new BasicRadioButtonMenuItemUI();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSState jSState0 = new JSState();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSState0.standarizerListLogicalAtoms();
      jSListLogicalAtoms0.addAll((Collection) jSState0);
      jSState0.removeAll(jSState0);
      Predicate<String> predicate0 = Predicate.isEqual((Object) jSListLogicalAtoms0);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<String> predicate2 = predicate0.or(predicate1);
      Predicate<String> predicate3 = predicate2.and(predicate0);
      Predicate<String> predicate4 = predicate3.negate();
      jSState0.removeIf(predicate4);
      jSState0.Cdr();
      JSListLogicalAtoms jSListLogicalAtoms1 = new JSListLogicalAtoms();
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSState jSState0 = new JSState();
      jSState0.standarizerListLogicalAtoms();
      jSState0.setName("; ");
      jSState0.standarizerListLogicalAtoms();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "; ";
      stringArray0[1] = "; ";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "D!17Bl:d xoN)U[";
      stringArray0[1] = "_p@n^$^";
      stringArray0[2] = "Expecting constant symbol as term";
      stringArray0[3] = "r}hisixis%g(ma2c";
      JSJshop.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "c-jkk";
      stringArray0[1] = "Mw[[<$(,(Dy";
      stringArray0[2] = "= ";
      stringArray0[3] = "74oz:P,=Ux^VYiQW$";
      stringArray0[4] = "t7h~nCU>Sye7q6<49";
      stringArray0[5] = "puf";
      stringArray0[6] = "gXj>6QfMO&yR}-[/";
      stringArray0[7] = "3joTSr<)Op";
      stringArray0[8] = "error 2 in util.getbufferedreader : ";
      JSJshop.main(stringArray0);
      assertEquals(9, stringArray0.length);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = null;
      MockURL.getFtpExample();
      jSJshop0.tree();
      int int0 = (-1982997859);
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(pipedReader0);
      streamTokenizer2.commentChar((-4));
      StreamTokenizer streamTokenizer3 = new StreamTokenizer(pipedReader0);
      streamTokenizer3.commentChar(1);
      streamTokenizer3.slashStarComments(false);
      StreamTokenizer streamTokenizer4 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String string0 = ">=";
      String string1 = " ";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(">=", " ");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
