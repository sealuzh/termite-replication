/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 06:01:13 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.regex.PatternSyntaxException;
import javax.sql.ConnectionPoolDataSource;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.context.ContextService;
import org.apache.derby.iapi.services.io.DynamicByteArrayOutputStream;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.impl.db.SlaveDatabase;
import org.apache.derby.impl.sql.compile.CreateIndexNode;
import org.apache.derby.impl.sql.compile.InsertNode;
import org.apache.derby.impl.sql.compile.ReplaceAggregatesWithCRVisitor;
import org.apache.derby.impl.sql.compile.ResultColumnList;
import org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBTrigger;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.TransactionParameterBuffer;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.LocalGDSImpl;
import org.firebirdsql.gds.impl.wire.TransactionParameterBufferImpl;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.Driver;
import org.h2.engine.SessionRemote;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueResultSet;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.Table;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.hsqldb.persist.HsqlProperties;
import org.hsqldb.rowio.RowOutputTextLog;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;
import org.postgresql.ds.PGPooledConnection;
import org.postgresql.jdbc4.Jdbc4ResultSet;
import org.postgresql.xa.PGXAConnection;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.895579548702389
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.setBeginPosition(113);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dynamicByteArrayOutputStream1);
      DBUtil.available("There are unclosnd database res2urces: ", "There are unclosnd database res2urces: ", "There are unclosnd database res2urces: ", "\"W @qZ'a;0Y26GJn");
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "There are unclosnd database res2urces: ");
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 connection(s)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.autoReconnect((-1768));
      SessionRemote sessionRemote3 = new SessionRemote();
      SessionRemote sessionRemote4 = new SessionRemote();
      SessionRemote sessionRemote5 = new SessionRemote();
      sessionRemote2.getLobConnection();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBUtil.available("`F", "(magic byte is 0x", "+-", "`O1l=d(LqmG");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) jdbcConnection0, "`O1l=d(LqmG", "`F", false, false, false, false, "WD", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      Locale.forLanguageTag("There are unclosnd database res2urces: ");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.flush();
      dynamicByteArrayOutputStream1.reset();
      dynamicByteArrayOutputStream1.write(718);
      dynamicByteArrayOutputStream1.write(69);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)95;
      byteArray0[1] = (byte) (-101);
      dynamicByteArrayOutputStream1.write(byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.queryString((PreparedStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.info;
      Level level2 = Level.debug;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler.setDefaultLevel(level1);
      Level level3 = Level.error;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.debug;
      ErrorHandler.setDefaultLevel(level4);
      Level level5 = Level.trace;
      ErrorHandler.setDefaultLevel(level5);
      DBUtil.getOpenResultSetCount();
      System.setCurrentTimeMillis(868L);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      rowOutputTextLog0.fill(0, 120);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)89;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)28;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "--''");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--\".EB~6R#Q[w9@2B15", 77);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      rowOutputTextLog0.writeShort((byte)28);
      rowOutputTextLog0.writeByte(0);
      rowOutputTextLog0.writeChars("#=*[OvuUKC");
      DBUtil.format(simpleResultSet0);
      Proxy proxy0 = (Proxy)DBUtil.createLoggingResultSet(simpleResultSet0, (Statement) null);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      String string0 = "9";
      String string1 = "ignoring column ";
      DBUtil.getOpenStatementCount();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "select count(*) from ", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcPreparedStatement", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Class<PGXAConnection> class0 = PGXAConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "+?0J;XkGF=jZB", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Recover recover0 = new Recover();
      ErrorMessages errorMessages0 = new ErrorMessages();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      boolean boolean0 = false;
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      // Undeclared exception!
      try { 
        DBUtil.close((Connection) proxy0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.proxy.PooledConnectionHandler", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      SessionRemote sessionRemote3 = new SessionRemote();
      SessionRemote sessionRemote4 = new SessionRemote();
      SessionRemote sessionRemote5 = new SessionRemote();
      sessionRemote3.getLobConnection();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection1 = new jdbcConnection(session1);
      DBUtil.close((Connection) jdbcConnection1);
      assertNotSame(jdbcConnection1, jdbcConnection0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      SessionRemote sessionRemote3 = new SessionRemote();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "r4~LlW)h)9o8[{Xl", true, stringArray0);
      DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
      System.setCurrentTimeMillis(14);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      rowOutputTextLog0.writeInt(1);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("SyscolumnsIndex2Identifier", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((Statement) null);
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      DBUtil.currentLine(simpleResultSet1);
      System.setCurrentTimeMillis((byte) (-104));
      Class<Driver> class0 = Driver.class;
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("h(6", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ErrorHandler.getDefault();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog2 = new RowOutputTextLog();
      rowOutputTextLog0.writeString((String) null);
      rowOutputTextLog1.writeChars("");
      rowOutputTextLog1.writeIntData(1007);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "XBXB", false, 102, (-756), 0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000006
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "j~(&(A=PfK,DGbsk=";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "j~(&(A=PfK,DGbsk=", true, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBPrimaryKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'j~(&(A=PfK,DGbsk=' not found in table 'null'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 result set(s)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9493397599420716
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dynamicByteArrayOutputStream1);
      DBUtil.available("There are unclosnd database res2urces: ", "There are unclosnd database res2urces: ", "There are unclosnd database res2urces: ", "\"W @qZ'a;0Y26GJn");
      SessionRemote sessionRemote0 = new SessionRemote();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "There are unclosnd database res2urces: ");
      sessionRemote0.getLobConnection();
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 connection(s), 1 result set(s)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ErrorHandler.getDefault();
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl2 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl2.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl3 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl2.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl4 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl5 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl5.deepCopy();
      transactionParameterBufferImpl4.deepCopy();
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("klvs[b]WF=B3:oL", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      jdbcConnection0.reset();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("Y0XZHY&[2kB:Wu`v+7k", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.currentLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.deepCopy();
      TransactionParameterBuffer transactionParameterBuffer0 = transactionParameterBufferImpl0.deepCopy();
      transactionParameterBufferImpl0.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl2 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBuffer0.deepCopy();
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("<V]x<nG", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Locale.forLanguageTag("There are uncloSn! database res2urces: ");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource0.getLogWriter();
      pGConnectionPoolDataSource0.setLogWriter((PrintWriter) null);
      pGConnectionPoolDataSource0.setSsl(false);
      System.setCurrentTimeMillis(1733L);
      Object[] objectArray0 = DBUtil.parseResultRow(simpleResultSet0);
      assertEquals(0, objectArray0.length);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5377182630837076
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      jdbcConnection0.reset();
      Level level0 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.info;
      Level level2 = Level.debug;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler.setDefaultLevel(level0);
      Level level3 = Level.error;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.debug;
      ErrorHandler.setDefaultLevel(level4);
      Class<PGPooledConnection> class0 = PGPooledConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("i=Jfj\"_ht", (Connection) jdbcConnection0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      SessionRemote sessionRemote3 = new SessionRemote();
      SessionRemote sessionRemote4 = new SessionRemote();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) errorMessages0;
      objectArray0[1] = (Object) errorMessages0;
      Table table0 = mock(Table.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(table0).getColumnCount();
      doReturn((int[]) null).when(table0).getColumnTypes();
      rowOutputTextLog0.writeRow(objectArray0, table0);
      rowOutputTextLog0.writeByte(1782);
      rowOutputTextLog0.writeChars("There are unclosnd database res2urces: ");
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) errorMessages0;
      objectArray0[1] = (Object) errorMessages0;
      Table table0 = mock(Table.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(table0).getColumnCount();
      doReturn((int[]) null).when(table0).getColumnTypes();
      rowOutputTextLog0.writeRow(objectArray0, table0);
      rowOutputTextLog0.writeByte(1782);
      rowOutputTextLog0.writeChars("getBinaryStream");
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((Statement) null);
      JdbcConnectionPool.create((String) null, "O#yVGnza7.", (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RDB$CHARACTER_SETS");
      DBUtil.close((ResultSet) simpleResultSet0);
      PGConnectionPoolDataSource pGConnectionPoolDataSource0 = new PGConnectionPoolDataSource();
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create((ConnectionPoolDataSource) pGConnectionPoolDataSource0);
      // Undeclared exception!
      try { 
        jdbcConnectionPool0.getConnection("O#yVGnza7.", "Connecting the database failed silently - probably due to wrong driver (");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.jdbcx.JdbcConnectionPool", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Error getting statement from result set");
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      objectOutputStream0.writeChars(" result set(s)");
      byte[] byteArray0 = new byte[1];
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) mockFileOutputStream0;
      objectArray0[1] = (Object) "Error getting statement from result set";
      Table table0 = mock(Table.class, new ViolatedAssumptionAnswer());
      byteArray0[0] = (byte) (-63);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream(byteArray0);
      dynamicByteArrayOutputStream0.write(byteArray0);
      DBUtil.close((ResultSet) null);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.countRows("'NI_(P&._'%`K", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      rowOutputTextLog0.fill(0, 120);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)89;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)28;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "--''");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("--\".EB~6R#Q[w9@2B15", 77);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      rowOutputTextLog0.writeShort((byte)28);
      rowOutputTextLog0.writeByte(0);
      rowOutputTextLog0.writeChars("#=*[OvuUKC");
      DBUtil.format(simpleResultSet0);
      Statement statement0 = DBUtil.getStatement(simpleResultSet0);
      assertNull(statement0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.reset();
      dynamicByteArrayOutputStream1.write(59);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-101);
      dynamicByteArrayOutputStream1.write(byteArray0);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Locale.forLanguageTag("There are uncloSn! database res2urces: ");
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      assertTrue(simpleResultSet0.isClosed());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      CreateIndexNode createIndexNode0 = new CreateIndexNode();
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("--prepared statement(s)", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = "O:56ve";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("O:56ve.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "O:56ve");
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        DBUtil.connect("O:56ve", true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      System.setCurrentTimeMillis(2515L);
      Proxy proxy0 = (Proxy)DBUtil.createLoggingStatementHandler((Statement) null, false);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Connecting the database failed silently - probably due to wrong driver (");
      String[] stringArray0 = new String[0];
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "--+-RD", false, stringArray0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = defaultDBTable0.getPrimaryKeyConstraint();
      boolean boolean1 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint1);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-72);
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog2 = new RowOutputTextLog();
      rowOutputTextLog2.writeChars("org.apache.derby.impl.sql.compile.OrderedColumnList");
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("", 'f', (Connection) null, false, (ErrorHandler) null);
      assertNotNull(dBExecutionResult0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler.getDefault();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      recover0.openFile("JVd>]QrS,3-8B", "------org.databene.JDBC", false);
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("------org.databene.JDBC", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.trace;
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler.setDefaultLevel(level0);
      Level level2 = Level.fatal;
      ErrorHandler errorHandler0 = new ErrorHandler("java.sql.Types=", level2);
      ErrorHandler.setDefaultLevel(level0);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("----org.apache.derby.impl.sql.compile.OrderedColumnList", (Connection) null, true, errorHandler0);
      assertNotNull(dBExecutionResult0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InsertNode insertNode0 = new InsertNode();
      insertNode0.disablePrivilegeCollection();
      Class<String> class0 = String.class;
      ReplaceAggregatesWithCRVisitor replaceAggregatesWithCRVisitor0 = new ReplaceAggregatesWithCRVisitor((ResultColumnList) null, 2022, class0);
      replaceAggregatesWithCRVisitor0.visit(insertNode0);
      InsertNode insertNode1 = (InsertNode)insertNode0.accept(replaceAggregatesWithCRVisitor0);
      Properties properties0 = insertNode0.targetProperties;
      insertNode1.fkInfo = null;
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      InsertNode insertNode2 = (InsertNode)replaceAggregatesWithCRVisitor0.visit(insertNode1);
      rowOutputTextLog0.writeString("+r'@u+%x");
      replaceAggregatesWithCRVisitor0.visit(insertNode2);
      rowOutputTextLog0.writeChars("derby.env.jdk.");
      SlaveDatabase slaveDatabase0 = new SlaveDatabase();
      TableContainer tableContainer0 = new TableContainer("derby.env.jdk.");
      tableContainer0.getSchema();
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      // Undeclared exception!
      try { 
        DBUtil.parseResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/Oa:56ve.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "J+t");
      DBUtil.getConnectData("Oa:56ve");
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      // Undeclared exception!
      try { 
        internalTransactionCoordinator_MetaDataTransactionCoordinator0.ensureTransaction();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.InternalTransactionCoordinator$MetaDataTransactionCoordinator", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      DBSchema dBSchema0 = new DBSchema("^Bsas");
      String string0 = "org.apache.derby.impl.sql.execute.IndexValueRow";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.apache.derby.impl.sql.execute.IndexValueRow", dBSchema0);
      dBSchema0.addTable(defaultDBTable0);
      dBSchema0.getSequences(false);
      DBUtil.dependencyOrderedTables(dBSchema0);
      LocalGDSImpl localGDSImpl0 = null;
      try {
        localGDSImpl0 = new LocalGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.deepCopy();
      TransactionParameterBuffer transactionParameterBuffer0 = transactionParameterBufferImpl0.deepCopy();
      transactionParameterBufferImpl0.deepCopy();
      transactionParameterBufferImpl0.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl2 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl3 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBuffer0.deepCopy();
      // Undeclared exception!
      try { 
        DBUtil.query("<V]x<nG", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.reset();
      dynamicByteArrayOutputStream1.write(59);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-101);
      dynamicByteArrayOutputStream1.write(byteArray0);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dynamicByteArrayOutputStream1);
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet(0L, (-3428));
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("O:56ve.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "O:56ve");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.getMetaData("O:56ve", true, true, true, true, "O:56ve", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String string0 = "RFQ-[%]5<~`";
      boolean boolean0 = true;
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "[ZB{!0fXn::cxF", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: [ZB{!0fXn::cxF
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      DBUtil.close((Connection) null);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(true);
      errorHandler0.setLoggingStackTrace(true);
      try { 
        DBUtil.runScript("", (String) null, ':', (Connection) null, true, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("(", "(", 'a', (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: (
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dynamicByteArrayOutputStream1);
      Locale.forLanguageTag("There are unclosnd database res2urces: ");
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("--", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(rowOutputTextLog0);
      rowOutputTextLog0.writeLong((-501L));
      rowOutputTextLog0.writeChars("1?o)b59l");
      rowOutputTextLog0.toString();
      Class<Jdbc4ResultSet> class0 = Jdbc4ResultSet.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.close((Statement) null);
      String string0 = "org.hsqldb.jdbc.jdbcConnection";
      boolean boolean0 = true;
      boolean boolean1 = false;
      DBUtil.checkReadOnly("org.h2.index.NonUniqueHashIndex", false);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("org.h2.index.NonUniqueHashIndex", "V-vk@4b),lq", "org.hsqldb.jdbc.jdbcConnection", "1?o)b59l", "org.hsqldb.jdbc.jdbcConnection", "\uFFFD\uFFFD\u0000\u0005\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u000B\u00001\u0000?\u0000o\u0000)\u0000b\u00005\u00009\u0000l");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting V-vk@4b),lq failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("O:56ve.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "O:56ve");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("O:56ve", true, true, true, true, "O:56ve", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for 'O:56ve'
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      DBSchema dBSchema0 = new DBSchema((String) null);
      DBTrigger dBTrigger0 = new DBTrigger((String) null, dBSchema0);
      dBTrigger0.isIdentical(dBSchema0);
      dBTrigger0.toString();
      dBSchema0.addTrigger(dBTrigger0);
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(dBSchema0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultSet(simpleResultSet0);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      InsertNode insertNode0 = new InsertNode();
      CreateIndexNode createIndexNode0 = new CreateIndexNode();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl2 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl3 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl1.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl4 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      TransactionParameterBuffer transactionParameterBuffer0 = transactionParameterBufferImpl2.deepCopy();
      assertNotSame(transactionParameterBuffer0, transactionParameterBufferImpl3);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object object0 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertNotNull(object0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      System.setCurrentTimeMillis(2537L);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.autoReconnect(27);
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote1 = new SessionRemote();
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.getLobConnection();
      DBUtil.close((Connection) null);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.write(59);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-101);
      Level level0 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      Class<PGPooledConnection> class0 = PGPooledConnection.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      boolean boolean0 = true;
      boolean boolean1 = true;
      try { 
        DBUtil.getMetaData((Connection) null, "\"2/!%VaGn!^<Y~", "\"2/!%VaGn!^<Y~", true, false, true, true, "bW;g+:iyx<", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FormatableProperties formatableProperties0 = new FormatableProperties();
      jdbcDriver.getConnection("Ex", formatableProperties0);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "Ex", true, (-1754), 59, 2973);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: Ex
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      System.setCurrentTimeMillis(2515L);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object[] objectArray0 = DBUtil.nextLine(simpleResultSet0);
      assertNull(objectArray0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      SimpleResultSet simpleResultSet1 = new SimpleResultSet();
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("O:56ve.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "O:56ve");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.getMetaData("O:56ve", false, false, false, true, "O:56ve", true, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Recover recover0 = new Recover();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "npdJ*)", (String) null, true, true, false, true, ")dDamFJ+gJ", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 0
         // )dDamFJ+gJ
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBUtil.existsEnvironment("+|q1m");
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      Recover recover0 = new Recover();
      recover0.openFile("IS@8:}GdgLd @^Bh]O", (String) null, false);
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "(4bj9di", "org.databene.SQL", true, false, false, true, "+|q1m", true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '+' near index 0
         // +|q1m
         // ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      try { 
        DBUtil.getMetaData((Connection) null, "null", "^0", true, false, false, false, "6#,%", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        DBUtil.connect("", (String) null, (String) null, "", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DBUtil.executeUpdate((String) null, (Connection) null);
      Integer integer0 = new Integer(0);
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator();
      InsertNode insertNode0 = new InsertNode();
      Properties properties0 = insertNode0.targetProperties;
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.deepCopy();
      transactionParameterBufferImpl0.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl2 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      TransactionParameterBuffer transactionParameterBuffer0 = transactionParameterBufferImpl2.deepCopy();
      assertNotSame(transactionParameterBuffer0, transactionParameterBufferImpl0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InsertNode insertNode0 = new InsertNode();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(false);
      Level level0 = Level.ignore;
      Level level1 = Level.debug;
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler.setDefaultLevel(level0);
      Level level2 = Level.trace;
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.error;
      Level level4 = Level.debug;
      ErrorHandler.setDefaultLevel(level4);
      Level level5 = Level.trace;
      ErrorHandler.setDefaultLevel(level5);
      // Undeclared exception!
      try { 
        DBUtil.runScript("No JDBC driver class name provided", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueResultSet valueResultSet0 = ValueResultSet.get((ResultSet) null);
      valueResultSet0.getResultSet();
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InsertNode insertNode0 = new InsertNode();
      insertNode0.disablePrivilegeCollection();
      Class<String> class0 = String.class;
      ReplaceAggregatesWithCRVisitor replaceAggregatesWithCRVisitor0 = new ReplaceAggregatesWithCRVisitor((ResultColumnList) null, 2022, class0);
      replaceAggregatesWithCRVisitor0.visit(insertNode0);
      InsertNode insertNode1 = (InsertNode)insertNode0.accept(replaceAggregatesWithCRVisitor0);
      Properties properties0 = insertNode0.targetProperties;
      insertNode1.fkInfo = null;
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      InsertNode insertNode2 = (InsertNode)replaceAggregatesWithCRVisitor0.visit(insertNode1);
      rowOutputTextLog0.writeString("+r'@u+%x");
      replaceAggregatesWithCRVisitor0.visit(insertNode2);
      rowOutputTextLog0.writeChars("derby.env.jdk.");
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      rowOutputTextLog1.writeIntData(299);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "+r'@u+%x", false, 2, 59, 1336);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ErrorHandler.getDefault();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog2 = new RowOutputTextLog();
      rowOutputTextLog1.writeString("8F");
      rowOutputTextLog0.writeChars("--Error in executing SQL:");
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "--Error in executing SQL:", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler.getDefault();
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog1 = new RowOutputTextLog();
      RowOutputTextLog rowOutputTextLog2 = new RowOutputTextLog();
      rowOutputTextLog0.reset();
      RowOutputTextLog rowOutputTextLog3 = new RowOutputTextLog();
      rowOutputTextLog3.fill(0, 3112);
      RowOutputTextLog rowOutputTextLog4 = new RowOutputTextLog();
      rowOutputTextLog0.writeChars("XBCX0.S");
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("--1?o)b59l", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ErrorHandler.getDefault();
      TransactionParameterBufferImpl transactionParameterBufferImpl0 = new TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl2 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl2.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl3 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl2.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl4 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl4.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl5 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl5.deepCopy();
      transactionParameterBufferImpl4.deepCopy();
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("klvs[b]WF=B3:oL", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.983818251559958
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      Connection connection0 = null;
      boolean boolean0 = false;
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      try { 
        DBUtil.runScript("", "", (Connection) null, false, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RowOutputTextLog rowOutputTextLog0 = new RowOutputTextLog();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(rowOutputTextLog0);
      rowOutputTextLog0.writeLong((-501L));
      rowOutputTextLog0.writeChars("1?o)b59l");
      rowOutputTextLog0.toString();
      Class<Jdbc4ResultSet> class0 = Jdbc4ResultSet.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBUtil.close((Statement) null);
      DBUtil.checkReadOnly("org.h2.index.NonUniqueHashIndex", false);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "V-vk@4b),lq", "org.hsqldb.jdbc.jdbcConnection", "One-row database query returned multiple rows: ", "org.hsqldb.jdbc.jdbcConnection", "One-row database query returned multiple rows: ");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      Recover recover1 = new Recover();
      recover1.openFile("re", "=QuUz0nLBh", false);
      try { 
        DBUtil.connect("=QuUz0nLBh", "re", "re", "=QuUz0nLBh", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting =QuUz0nLBh failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("b=$2$-|kk3Yig\"gh", "[9YoQc=6\"dsVHbX", (Connection) null, false, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: b=$2$-|kk3Yig\"gh
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("8f>:jZSykyYBPyWCl=");
      DBSchema dBSchema0 = new DBSchema("8f>:jZSykyYBPyWCl=", dBCatalog0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("SYSFOREIGNKEYS", dBSchema0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "8f>:jZSykyYBPyWCl=";
      stringArray0[1] = null;
      stringArray0[2] = "8f>:jZSykyYBPyWCl=";
      stringArray0[3] = "8f>:jZSykyYBPyWCl=";
      stringArray0[4] = "SYSFOREIGNKEYS";
      stringArray0[5] = "8f>:jZSykyYBPyWCl=";
      stringArray0[6] = "SYSFOREIGNKEYS";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent(dBUniqueConstraint0, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Recover recover0 = new Recover();
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream0 = new DynamicByteArrayOutputStream();
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream1 = new DynamicByteArrayOutputStream();
      dynamicByteArrayOutputStream1.write(59);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)95;
      byteArray0[1] = (byte) (-101);
      dynamicByteArrayOutputStream1.write(byteArray0);
      DynamicByteArrayOutputStream dynamicByteArrayOutputStream2 = new DynamicByteArrayOutputStream(dynamicByteArrayOutputStream1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(dynamicByteArrayOutputStream1);
      Locale.forLanguageTag("There are unclosnd database res2urces: ");
      String string0 = DBUtil.escape("VF");
      assertEquals("VF", string0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("RFQ-[%]5<~`", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: RFQ-[%]5<~`
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.autoReconnect(380);
      sessionRemote0.getLobStorage();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote2 = new SessionRemote();
      SessionRemote sessionRemote3 = new SessionRemote();
      SessionRemote sessionRemote4 = new SessionRemote();
      sessionRemote1.getLobConnection();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Session session1 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection1 = new jdbcConnection(session1);
      DBUtil.close((Connection) jdbcConnection1);
      assertNotSame(jdbcConnection1, jdbcConnection0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, 'a', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("+-RD", '\u0080', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.info;
      Level level2 = Level.fatal;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler.setDefaultLevel(level1);
      Level level3 = Level.error;
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.debug;
      ErrorHandler.setDefaultLevel(level4);
      // Undeclared exception!
      try { 
        DBUtil.runScript("There are uncloSn! database res2urces: ", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      boolean boolean0 = new Boolean(" connecti(s)");
      Class<jdbcDriver> class0 = jdbcDriver.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      Level level0 = Level.ignore;
      ErrorHandler.setDefaultLevel(level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript(" connecti(s)", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("42Z26", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      Integer integer0 = new Integer(0);
      try { 
        Integer.parseUnsignedInt("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl0 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl0.deepCopy();
      transactionParameterBufferImpl0.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl1 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      TransactionParameterBufferImpl transactionParameterBufferImpl2 = new TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl3 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl4 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl4.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl5 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      transactionParameterBufferImpl4.deepCopy();
      org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl transactionParameterBufferImpl6 = new org.firebirdsql.gds.impl.jni.TransactionParameterBufferImpl();
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("Prepare called before end", true, true, false, true, ";,@Z", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Prepare called before end.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.connect("--O`4D5}_qd7x=9X", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '--O`4D5}_qd7x=9X.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-38);
      byteArray0[2] = (byte)115;
      byteArray0[3] = (byte) (-26);
      byteArray0[4] = (byte) (-104);
      byteArray0[5] = (byte) (-54);
      byteArray0[6] = (byte) (-39);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DBUtil.getOpenStatementCount();
      DBUtil.getOpenPreparedStatementCount();
      jdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new jdbcConnection((HsqlProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcConnection", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.3634541894442356
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      CreateIndexNode createIndexNode0 = new CreateIndexNode();
      CreateIndexNode createIndexNode1 = new CreateIndexNode();
      createIndexNode1.getProperties();
      String string0 = " failed: ";
      RealTableScanStatistics realTableScanStatistics0 = null;
      try {
        realTableScanStatistics0 = new RealTableScanStatistics((-24731098), 2, 386, 0, 1, 1, 164L, 0, "`!hF6)6n8|w,x|U2L", "--Expected a row.", "Sk", false, "*7?a5l", (Properties) null, " b\"JRZ", "+-", "No JDBC driver class name specified", "pG*I{!/", (-2415), true, 2, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DBUtil.resetMonitors();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "XSDFD.S";
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint("XSDFD.S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'u.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      org.postgresql.Driver driver0 = new org.postgresql.Driver();
      Properties properties0 = new Properties();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, (String) null, "--ws\"^&i$_\"", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
