/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:04:44 GMT 2019
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xmlpull.mxp1.MXParserNonValidating;
import org.xmlpull.mxp1_serializer.MXSerializer;
import wheel.ErrorPage;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.components.TextArea;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("[{5]");
      dynamicSelectModel1.value("[{5]");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("org.mvel.util.FstList@0000000052");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.util.CollectionParser", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "+g[E6";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("+g[E6");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getOptionCount();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.310322637655681
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      Object object1 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[-]");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("[-]");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.label("[-]");
      dynamicSelectModel1.getObjects();
      dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000052");
      ElExpression elExpression0 = new ElExpression("org.mvel.util.FastList@0000000052");
      int int0 = 130;
      dynamicSelectModel3.getLabel(0);
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(130);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 130
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.013338657966414
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      Object object1 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[-]");
      dynamicSelectModel1.value("[-]");
      dynamicSelectModel0.translateValue("[-]");
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      String string0 = dynamicSelectModel0.getValue(0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.1629970982806674
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[-]");
      dynamicSelectModel1.translator(" s;oG5{7y~Lgx-n8-");
      dynamicSelectModel1.value("[-]");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000052");
       //  fail("Expecting exception: RuntimeException");
       // Unstable assertion
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression  s;oG5{7y~Lgx-n8- to translate value ' org.mvel.util.FastList@0000000052'
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1706697325517674
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[-]");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("[-]");
      dynamicSelectModel2.getOptionCount();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000052");
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue((-1913));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1913
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.013338657966414
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[-]");
      dynamicSelectModel1.value("[-]");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000052");
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue((-1913));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1913
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = null;
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator((String) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("?0A");
      dynamicSelectModel2.value("?0A");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.translator("Epression ");
      // Undeclared exception!
      try { 
        dynamicSelectModel3.getOptionCount();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.Boolean
         //
         verifyException("org.mvel.MVELInterpretedRuntime", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "[-]";
      dynamicSelectModel0.collection("[-]");
      dynamicSelectModel0.empty(dynamicSelectModel0);
      dynamicSelectModel0.getObjects();
      System.setCurrentTimeMillis(502L);
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.2925683891723425
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[]");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("[]");
      dynamicSelectModel2.enumeration("[]");
      dynamicSelectModel1.collection("[]");
      dynamicSelectModel0.getOptionCount();
      dynamicSelectModel0.translateValue("tm");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getValue(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      dynamicSelectModel0.enumeration(" to create a dynamic ISelectModel.");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("[-]");
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2508570947192676
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.collection("[]");
      Collection collection0 = dynamicSelectModel2.getObjects();
      Collection collection1 = dynamicSelectModel2.getObjects();
      assertSame(collection1, collection0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9715503473033111
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      String string0 = "[-]";
      String string1 = "[-]";
      String string2 = "?";
      dynamicSelectModel0.collection("?");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.value("?");
      dynamicSelectModel1.collection("[-]");
      dynamicSelectModel0.getObjects();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("[-]");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.Boolean
         //
         verifyException("org.mvel.MVELInterpretedRuntime", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = new Boolean("empty");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)104;
      byteArray0[3] = (byte)104;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte) (-14);
      byteArray0[6] = (byte) (-21);
      byteArray0[7] = (byte)57;
      byteArray0[8] = (byte)93;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("+g[E6");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getObjects();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("-K]");
      dynamicSelectModel1.value("-K]");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("org.mvel.util.FastList@0000000052");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Any any0 = new Any(errorPage0, charBuffer0);
      errorPage0._postProcessRequest();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)68;
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      dynamicSelectModel0.enumeration("?c KLY]ejg0&R");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(2523);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.Boolean
         //
         verifyException("org.mvel.MVELInterpretedRuntime", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "ep[ty";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("ep[ty");
      // Undeclared exception!
      dynamicSelectModel1.getOptionCount();
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      dynamicSelectModel0.setComponent(errorPage0);
      ErrorPage errorPage1 = new ErrorPage();
      Component component0 = dynamicSelectModel0.getComponent();
      assertTrue(component0.equals((Object)errorPage1));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MXSerializer mXSerializer0 = new MXSerializer();
      MXParserNonValidating mXParserNonValidating0 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating1 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating2 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating3 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating4 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating5 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating6 = new MXParserNonValidating();
      MXSerializer mXSerializer1 = new MXSerializer();
      MXSerializer mXSerializer2 = new MXSerializer();
      MXSerializer mXSerializer3 = new MXSerializer();
      MXSerializer mXSerializer4 = new MXSerializer();
      MXParserNonValidating mXParserNonValidating7 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating8 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating9 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating10 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating11 = new MXParserNonValidating();
      mXParserNonValidating8.getText();
      ElExpression elExpression0 = new ElExpression((String) null);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.enumeration((String) null);
      dynamicSelectModel0.label("N(DrZE");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.PropertyAccessor", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("B[Y,sSB!yQeJ0++r");
      // Undeclared exception!
      dynamicSelectModel1.getLabel((-3477));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      String string0 = "wheel.util.CalendarConversionHandler";
      ElExpression elExpression0 = new ElExpression("wheel.util.CalendarConversionHandler");
      Any any0 = new Any(errorPage0, elExpression0);
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      dynamicSelectModel0.setComponent(any0);
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("''Ap[{ca:MVxu");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel((-1141027674));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = null;
      dynamicSelectModel0.enumeration((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("org.mvel.util.FastList@0000000051");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.PropertyAccessor", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = "~empty";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("~empty");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.MVELInterpretedRuntime", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      int int0 = 2338;
      String string0 = "()I";
      dynamicSelectModel0.enumeration("()I");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getLabel(2338);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Integer
         //
         verifyException("org.mvel.ASTNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.cite();
      ElExpression elExpression0 = new ElExpression("wheel.util.CalendarConversionHandler");
      Any any0 = new Any(errorPage0, elExpression0);
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      dynamicSelectModel0.setComponent(any0);
      dynamicSelectModel0.enumeration("''Ap[{ca:MVxu");
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.empty("wheel.util.CalendarConversionHandler");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("wheel.util.CalendarConversionHandler");
      dynamicSelectModel2.getComponent();
      dynamicSelectModel0.setComponent(any0);
      int int0 = 200;
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(200);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      ElExpression elExpression0 = new ElExpression("wheel.util.CalendarConversionHandler");
      Any any0 = new Any(errorPage0, elExpression0);
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      dynamicSelectModel0.setComponent(any0);
      dynamicSelectModel0.value("wheel.util.CalendarConversionHandler");
      dynamicSelectModel0.getComponent();
      dynamicSelectModel0.getTopLevelComponent();
      // Undeclared exception!
      try { 
        any0.buttonInput("wheel.util.StringSelectModel");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Form elements can be created only by compoents that are attached to a form component.
         //
         verifyException("wheel.components.ComponentCreator", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "~Io r?Pbcgo<$1;i";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("~Io r?Pbcgo<$1;i");
      dynamicSelectModel1.value("~Io r?Pbcgo<$1;i");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.MVELInterpretedRuntime", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = null;
      dynamicSelectModel0.enumeration((String) null);
      Object object24 = new Object();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue((-1505));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mvel.PropertyAccessor", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("C|D3");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.label("C|D3");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.collection("'");
      dynamicSelectModel3.value((String) null);
      dynamicSelectModel3.collection("rf[wE4IK(3,");
      // Undeclared exception!
      dynamicSelectModel0.getValue(2531);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "07DZa`MGvzW^6jUjmwM");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dynamicSelectModel0.collection("z]2snwPC");
      // Undeclared exception!
      dynamicSelectModel0.getObjects();
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      System.setCurrentTimeMillis((-525L));
      DynamicSelectModel dynamicSelectModel1 = new DynamicSelectModel();
      dynamicSelectModel0.collection("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("");
      dynamicSelectModel1.label(" to create a dynaic ISelectModel.");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Value attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("v]");
      dynamicSelectModel1.value("v]");
      // Undeclared exception!
      dynamicSelectModel0.translateValue("C,o7W |RYKMU<les:Pr");
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("?%UWqx^qC?\"!XEQY ");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getObjects();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.Boolean
         //
         verifyException("org.mvel.MVELInterpretedRuntime", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("empty");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getOptionCount();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression empty evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      System.setCurrentTimeMillis((-288L));
      ElExpression elExpression0 = new ElExpression("XPBf*F];r74caCz{");
      ElExpression elExpression1 = new ElExpression("XPBf*F];r74caCz{");
      System.setCurrentTimeMillis(1659L);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "empty";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getComponent();
      Any any0 = null;
      try {
        any0 = new Any((Component) null, "empty");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression null evaluated to null. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.value("uppb");
      dynamicSelectModel0.enumeration("uppb");
      dynamicSelectModel0.validate();
      System.setCurrentTimeMillis((-1454L));
      ErrorPage errorPage0 = new ErrorPage();
      // Undeclared exception!
      try { 
        errorPage0.getSubmittedForm();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Tried to access a form, but none was submitted.
         //
         verifyException("wheel.components.StandaloneComponent", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "empty";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("empty");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.validate();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Label attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel0.setTopLevelComponent(errorPage0);
      dynamicSelectModel0.value("xfZO0?J~#ec->");
      dynamicSelectModel0.getTopLevelComponent();
      System.setCurrentTimeMillis(2883L);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = null;
      dynamicSelectModel0.enumeration("org.mvel.util.FastList@0000000051");
      Object object22 = new Object();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue((-1505));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression org.mvel.util.FastList@0000000051.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      dynamicSelectModel0.value("h;+r'tL{`!h+&GLXik");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue((-859));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String string0 = "empty";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
      Any any0 = null;
      try {
        any0 = new Any((Component) null, "empty");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.components.Component", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 107);
      System.setCurrentTimeMillis(0L);
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label("org.mvel.util.FastList0000000052");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.enumeration("org.mvel.util.FastList0000000052");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel(107);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression org.mvel.util.FastList0000000052.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)104;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "toString()");
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.label((String) null);
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel(2416);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      Object object0 = new Object();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("[-]");
      dynamicSelectModel1.value("[-]");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        dynamicSelectModel1.translateValue("org.mvel.util.FstList@0000000052");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression [-].values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.reset();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-57);
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)109;
      byteArray0[4] = (byte)109;
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte) (-14);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      System.setCurrentTimeMillis((-1044L));
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = "empty";
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.collection("empty");
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression empty evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getObjects();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      errorPage0.h4();
      TextArea textArea0 = new TextArea(errorPage0, (String) null, "org.mvel.util.FastList@0000000076");
      Any any0 = new Any(textArea0, (CharSequence) null);
      textArea0.validationRule("org.mvel.util.FastList@0000000076", "iOV<[");
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.translateValue("iOV<[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      pipedOutputStream0.flush();
      pipedOutputStream0.close();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      pipedOutputStream0.flush();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.close();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      ElExpression elExpression0 = new ElExpression("4<nhNe?4E+!7,");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, elExpression0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MXParserNonValidating mXParserNonValidating0 = new MXParserNonValidating();
      StringReader stringReader0 = new StringReader("G;");
      mXParserNonValidating0.setInput((Reader) stringReader0);
      MXParserNonValidating mXParserNonValidating1 = new MXParserNonValidating();
      MXSerializer mXSerializer0 = new MXSerializer();
      MXSerializer mXSerializer1 = new MXSerializer();
      mXSerializer0.getFeature("G;");
      MXSerializer mXSerializer2 = new MXSerializer();
      MXSerializer mXSerializer3 = new MXSerializer();
      MXSerializer mXSerializer4 = new MXSerializer();
      MXSerializer mXSerializer5 = new MXSerializer();
      MXParserNonValidating mXParserNonValidating2 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating3 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating4 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating5 = new MXParserNonValidating();
      MXParserNonValidating mXParserNonValidating6 = new MXParserNonValidating();
      mXParserNonValidating4.clone();
      MXParserNonValidating mXParserNonValidating7 = new MXParserNonValidating();
      mXParserNonValidating7.getText();
      System.setCurrentTimeMillis(0L);
      ElExpression elExpression0 = new ElExpression("\"sK}LbaJ");
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel(elExpression0, elExpression0, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }
}
