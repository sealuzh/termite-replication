/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 04:20:50 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.4361623253853443
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "The wildcard array must not be null", "", (String) null, "The wildcard array must not be null");
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = (int) (byte)49;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.933720058514398
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      classWriter0.index = (-1919);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 493, "RuntimeVisibleAnnotations", "The wildcard must not be null", "", (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(115, byteArray0.length);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "The wildcard array must not be null", "", (String) null, "The wildcard array must not be null");
      classWriter0.version = (int) (byte)49;
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9146224676606434
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      classWriter0.index = (-1919);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "The wildcard array must not be null", "", (String) null, "The wildcard array must not be null");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(137, byteArray0.length);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5859526183035508
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1147), "is@Am>e3Vr)F", "is@Am>e3Vr)F", "is@Am>e3Vr)F", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "The wildcard array must not be null", "", (String) null, "The wildcard array must not be null");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1923));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1923), "The wildcard array must not be null", "", (String) null, "The wildcard array must not be null");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "The wildcard array must not be null", "#", (String) null, "The wildcard array must not be null");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putByteArray((byte[]) null, (byte)0, (-1919));
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("V\u0004i", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(127);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 127, "!aB9,]*;0c", "", "!aB9,]*;0c", "");
      ByteVector byteVector0 = new ByteVector(2);
      Attribute attribute0 = new Attribute((String) null);
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "MAU`(Kt;))'Nrdm/k", "", (String) null, "MAU`(Kt;))'Nrdm/k");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByteArray((byte[]) null, (byte)0, (-1919));
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6730116670092565
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "The wildcard array must not be null", "", (String) null, "The wildcard array must not be null");
      byte[] byteArray0 = new byte[2];
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(1);
      byteVector1.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1918), "RuntimeInvisibleAnnotations", "Deprecated", "RuntimeVisibleAnnotations", "RuntimeInvisibleAnnotations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1291);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, ",RSeMk5Xu2rpu'5Z*", "Synthetic", "Synthetic", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5940241655824705
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "org.apache.commons.io.filefilter.NameFileFilter", "", "org.apache.commons.io.filefilter.NameFileFilter", "");
      ByteVector byteVector0 = new ByteVector(2);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.064315403907995
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2842, "7[pDN", "bc", (String) null, "CBb>|{j@<)NX'0;qgc(");
      fieldWriter0.visitAnnotation("Sensitive", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(148, byteArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9146224676606434
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1147), "is@Am>e3Vr)F", "Q;%Oon@", "is@Am>e3Vr)F", (Object) null);
      classWriter0.version = 155;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(96, byteArray0.length);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0360334832009355
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1147), "is@Am>e3Vr)F", "Q;%Oon@", "is@Am>e3Vr)F", (Object) null);
      fieldWriter0.visitAnnotation("Q;%Oon@", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(154, byteArray0.length);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1919), "MAU`(Kt;))'Nrdm/k", "", (String) null, "MAU`(Kt;))'Nrdm/k");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 493, "RuntimeVisibleAnnotations", "The wildcard must not be null", "", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1829));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-109), "", "+e@8U<iS?312s}Q^", "", ")eY9H`E/\"Kr#~i406j");
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
