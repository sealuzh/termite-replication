/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 04:26:43 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3975249161571877
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      byte[] byteArray0 = classWriter0.toByteArray();
      classWriter0.version = 49;
      classWriter0.newClassItem("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newInteger(49);
      classWriter0.newClass("Signature");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-629), "Signature", "Signature", "Signature", (Object) null);
      fieldWriter0.getSize();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.skipBytes(91);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ClassWriter classWriter1 = new ClassWriter(37);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 5, "Signature", "Signature", "!7x'^$", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(91);
      FieldWriter fieldWriter2 = fieldWriter0.next;
      fieldWriter2.put(byteVector0);
      FieldWriter fieldWriter3 = classWriter0.firstField;
      FieldWriter fieldWriter4 = classWriter0.lastField;
      fieldWriter2.getSize();
      fieldWriter3.put(byteVector1);
      FieldWriter fieldWriter5 = classWriter1.lastField;
      int int0 = fieldWriter2.getSize();
      assertEquals(16, int0);
      
      fieldWriter2.put(byteVector0);
      int int1 = fieldWriter0.getSize();
      assertEquals(22, int1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9104437014054871
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-732));
      classWriter0.index = (-3973);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "gc'JHs?uL*xK*", "", "gc'JHs?uL*xK*", "vv6-7v.C]");
      ByteVector byteVector0 = new ByteVector(4096);
      ByteVector byteVector1 = byteVector0.putShort(2);
      ByteVector byteVector2 = byteVector1.put12(415, 4096);
      ByteVector byteVector3 = byteVector1.put12((-3969), 1055);
      ByteVector byteVector4 = byteVector2.put11(1055, 2271);
      byteVector3.put11(4096, 63619);
      classWriter0.newInteger(4096);
      ByteVector byteVector5 = byteVector0.putInt(889);
      byteVector5.putLong((-732));
      byteVector3.putByte(468);
      ByteVector byteVector6 = byteVector0.putUTF8("gc'JHs?uL*xK*");
      fieldWriter0.put(byteVector6);
      fieldWriter0.put(byteVector3);
      byteVector3.putByte(415);
      fieldWriter0.put(byteVector4);
      assertSame(byteVector4, byteVector0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(88);
      classWriter0.version = 88;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rs1KBNgNy]0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("n");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("n");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile2, byteArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3111), "A<\"oCGD4.2s`BRV+{", "U/mdsp", "8g.K", (Object) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8g.K");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1926));
      Attribute attribute0 = new Attribute("");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byteVector1.putByte(4096);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = new PipedInputStream();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream3 = new PipedInputStream(pipedOutputStream0, 4096);
      DataInputStream dataInputStream1 = new DataInputStream(pipedInputStream2);
      DataInputStream dataInputStream2 = new DataInputStream(pipedInputStream1);
      String string0 = "RuntimeVisibleAnnotations";
      classWriter0.index = 65535;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 764, "Nmt{zZ}gaStV", "RuntimeVisibleAnnotations", "", "RuntimeVisibleAnnotations");
      ByteVector byteVector2 = byteVector0.putByte(764);
      // Undeclared exception!
      fieldWriter0.put(byteVector2);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter((-1691));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "8g.K", (String) null, (Object) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "@F&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Hikandler");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = 207;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4102453456579889
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(57);
      classWriter0.newClassItem("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-628), "Signature", "Signature", "Signature", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Signature");
      byteVector0.put12(43, 1183);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      fieldWriter0.next = null;
      fieldWriter0.put(byteVector0);
      fieldWriter0.next = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      fieldWriter0.getSize();
      FieldWriter fieldWriter2 = classWriter0.firstField;
      fieldWriter2.getSize();
      byteVector0.length = 2101;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FieldWriter fieldWriter3 = null;
      try {
        fieldWriter3 = new FieldWriter(classWriter0, 28, "]Q#(m88\"fy dX?b5m", "[", "Signature", (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.1346301204632487
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter((-1919));
      Item item0 = classWriter0.newClassItem("RuntimeVisibleAnnotations");
      item0.set((-22));
      classWriter0.index = (-22);
      Item[] itemArray0 = new Item[6];
      classWriter0.visitField((-2627), "RuntimeVisibleAnnotations", "RuntimeInvisibleAnnotations", (String) null, (Object) null);
      item0.strVal3 = "RuntimeInvisibleAnnotations";
      item0.strVal2 = "dW]2pNwZ";
      itemArray0[1] = item0;
      itemArray0[3] = item0;
      item0.hashCode = (-1919);
      itemArray0[3] = item0;
      itemArray0[5] = itemArray0[4];
      item0.set((-2627));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Zqm5G]Z", "RuntimeVisibleAnnotations", "dW]2pNwZ", "dW]2pNwZ");
      fieldWriter0.getSize();
      fieldWriter0.getSize();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.6048485688326348
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      String string0 = "";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65527, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(65527);
      fieldWriter0.put(byteVector0);
      fieldWriter0.visitAnnotation("", true);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 65535);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      dataInputStream1.skipBytes((-101));
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1604, "", "", (String) null, "");
      DataInputStream dataInputStream3 = new DataInputStream(pipedInputStream1);
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream1);
      DataInputStream dataInputStream5 = new DataInputStream(dataInputStream1);
      ByteVector byteVector0 = new ByteVector();
      classWriter0.threshold = (-3614);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(63);
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.version = 63;
      classWriter0.newClassItem("Signature");
      classWriter0.newInteger(167);
      classWriter0.newClass("Signature");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-629), "Signature", "Signature", "Signature", (Object) null);
      fieldWriter0.getSize();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.skipBytes(2);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.flush();
      fieldWriter0.getSize();
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream1);
      DataInputStream dataInputStream4 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.available();
      dataInputStream1.available();
      dataInputStream4.readUnsignedShort();
      dataInputStream1.readDouble();
      dataInputStream4.mark(2);
      dataInputStream3.available();
      dataInputStream0.readFloat();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0225955941538991
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(84);
      String string0 = "#q\":t#";
      int int0 = (-628);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-628), "#q\":t#", "#q\":t#", "#q\":t#", (Object) null);
      Attribute attribute0 = new Attribute("2r;,>4");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5087115443129062
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65525, "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(47);
      classWriter0.version = 47;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "Signature";
      classWriter0.newClass("Signature");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-628), "Signature", "Signature", "Signature", (Object) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0, 65535);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      dataInputStream1.skipBytes((-101));
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1604, "", "", (String) null, "");
      DataInputStream dataInputStream3 = new DataInputStream(pipedInputStream2);
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream1);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1919));
      Item item0 = new Item((-1919));
      item0.set(7);
      item0.set((-1919));
      Item[] itemArray0 = new Item[6];
      item0.strVal3 = "RuntimeInvisibleAnnotations";
      item0.index = (-1919);
      item0.set(1);
      item0.strVal2 = "RuntimeVisibleAnnotations";
      itemArray0[1] = item0;
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      item0.hashCode = (-1919);
      itemArray0[3] = item0;
      itemArray0[5] = itemArray0[4];
      classWriter0.typeTable = itemArray0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, " `5,n6*", "RuntimeVisibleAnnotations", "g+-O&,N$", "g+-O&,N$");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12(3548, 3548);
      byteVector1.putByte((-137));
      classWriter0.newMethod("g+-O&,N$", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", true);
      byteVector1.putShort((-1919));
      ByteVector byteVector2 = byteVector1.putByte((-1919));
      byteVector2.put12((-137), (-301));
      fieldWriter0.put(byteVector2);
      assertSame(byteVector1, byteVector2);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9104437014054871
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-732));
      classWriter0.index = (-3973);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "gc'JHs?uL*xK*", "", "gc'JHs?uL*xK*", "vv6-7v.C]");
      ByteVector byteVector0 = new ByteVector(4096);
      ByteVector byteVector1 = byteVector0.putShort(2);
      ByteVector byteVector2 = byteVector1.put12(411, 4096);
      ByteVector byteVector3 = byteVector1.put12((-3969), 1011);
      ByteVector byteVector4 = byteVector2.put11(1011, 2271);
      byteVector3.put11(4096, 63619);
      classWriter0.newInteger(4096);
      ByteVector byteVector5 = byteVector0.putInt(889);
      ByteVector byteVector6 = byteVector5.putLong((-732));
      byteVector6.putShort(8);
      fieldWriter0.put(byteVector4);
      fieldWriter0.put(byteVector3);
      ByteVector byteVector7 = byteVector3.putByte(411);
      fieldWriter0.put(byteVector4);
      assertSame(byteVector4, byteVector7);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(48);
      classWriter0.version = 48;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rs1KBNgNy]0");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/80_wheelwebtool");
      FileSystemHandling.setPermissions(evoSuiteFile1, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A<\"oCGD4.2s`BRV+{");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "8g.K");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3111), "A<\"oCGD4.2s`BRV+{", "U/mdsp", "8g.K", (Object) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8g.K");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0840532024728213
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.close();
      DataInputStream dataInputStream1 = null;
      DataInputStream dataInputStream2 = new DataInputStream((InputStream) null);
      dataInputStream2.skipBytes((-101));
      pipedOutputStream0.close();
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream2);
      pipedInputStream0.mark(65530);
      ClassWriter classWriter0 = new ClassWriter(1527);
      pipedInputStream1.markSupported();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", (String) null, "");
      DataInputStream dataInputStream4 = new DataInputStream(pipedInputStream1);
      DataInputStream dataInputStream5 = new DataInputStream(dataInputStream0);
      pipedOutputStream0.flush();
      fieldWriter0.getSize();
      DataInputStream dataInputStream6 = new DataInputStream(pipedInputStream0);
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 65530, "", (String) null, "", dataInputStream2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.58249986045546
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2750));
      classWriter0.visitSource("ConstantValue", "sru<S3Evs=!");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, Integer.MAX_VALUE, "VeqD-2jm&eIFZ", "sa[(XM*f", "sa[(XM*f", "VeqD-2jm&eIFZ");
      classWriter0.firstField = fieldWriter0;
      classWriter0.firstField.visitAnnotation("sru<S3Evs=!", false);
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(2739);
      ByteVector byteVector2 = byteVector1.putUTF8("org.apache.commons.io.filefilter.AndFileFilter");
      ByteVector byteVector3 = byteVector2.putShort(2395);
      ByteVector byteVector4 = byteVector3.putInt(Integer.MAX_VALUE);
      ByteVector byteVector5 = byteVector4.putInt(131072);
      fieldWriter0.put(byteVector4);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("", true);
      classWriter0.firstField.getSize();
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("VeqD-2jm&eIFZ", false);
      fieldWriter0.getSize();
      classWriter0.firstField.put(byteVector5);
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("", true);
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0, 65535);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      dataInputStream1.skipBytes((-101));
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1604, "", "", (String) null, "");
      DataInputStream dataInputStream3 = new DataInputStream(pipedInputStream2);
      DataInputStream dataInputStream4 = new DataInputStream(dataInputStream1);
      DataInputStream dataInputStream5 = new DataInputStream(dataInputStream1);
      ByteVector byteVector0 = new ByteVector();
      classWriter0.threshold = (-3614);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("The size must be non-negative", false);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1691));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "8g.K", (String) null, (Object) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R@&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      fieldWriter0.visitAnnotation("Synthetic", true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Hikandler");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-1691));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "8g.K", (String) null, (Object) null);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R@&");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      fieldWriter0.visitAnnotation("Synthetic", true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Hikandler");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dmi2&m{ND^fE!w#f?");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A<\"oCGD4.2sBRV+{");
      ClassWriter classWriter0 = new ClassWriter(48);
      classWriter0.version = 48;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Class");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rs1KBNgNy]0");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A<\"oCGD4.2sBRV+{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A<\"oCGD4.2sBRV+{");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("n");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("n");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3111), "A<\"oCGD4.2sBRV+{", "U<mdsp", "8g.K", (Object) null);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "6");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "~C:niEzsgSDZVapl<8^");
      Attribute attribute0 = new Attribute("rs1KBNgNy]0");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("6", true);
      assertNotNull(annotationVisitor0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      pipedOutputStream0.close();
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream0, 1539);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      dataInputStream1.skipBytes((-101));
      pipedOutputStream0.close();
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      pipedInputStream2.mark(65530);
      ClassWriter classWriter0 = new ClassWriter(1539);
      pipedInputStream2.markSupported();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 65530, "", "", "", dataInputStream2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.DataInputStream@7137ae20
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
