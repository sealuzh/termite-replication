/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 04:17:37 GMT 2020
 */

package org.jsecurity.web;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import javax.servlet.ServletOutputStream;
import javax.servlet.ServletRequest;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.ServletResponse;
import javax.servlet.ServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jsecurity.authc.AuthenticationListener;
import org.jsecurity.authc.AuthenticationToken;
import org.jsecurity.authc.SimpleAuthenticationInfo;
import org.jsecurity.authc.UsernamePasswordToken;
import org.jsecurity.authc.credential.Md2CredentialsMatcher;
import org.jsecurity.authc.pam.AllSuccessfulModularAuthenticationStrategy;
import org.jsecurity.authc.pam.AtLeastOneSuccessfulModularAuthenticationStrategy;
import org.jsecurity.authc.pam.ModularAuthenticationStrategy;
import org.jsecurity.authc.pam.ModularRealmAuthenticator;
import org.jsecurity.authz.ModularRealmAuthorizer;
import org.jsecurity.authz.permission.AllPermission;
import org.jsecurity.authz.permission.WildcardPermission;
import org.jsecurity.authz.permission.WildcardPermissionResolver;
import org.jsecurity.mgt.DefaultSecurityManager;
import org.jsecurity.realm.Realm;
import org.jsecurity.realm.SimpleAccountRealm;
import org.jsecurity.session.Session;
import org.jsecurity.subject.DelegatingSubject;
import org.jsecurity.subject.PrincipalCollection;
import org.jsecurity.subject.SimplePrincipalCollection;
import org.jsecurity.subject.Subject;
import org.jsecurity.web.DefaultWebSecurityManager;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultWebSecurityManager_ESTest extends DefaultWebSecurityManager_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper6.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(servletResponse0).getBufferSize();
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper3.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper5);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper5);
      servletResponseWrapper4.getOutputStream();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      servletResponseWrapper4.getBufferSize();
      InetAddress inetAddress0 = MockInetAddress.getByName("8n&O)v");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection();
      simplePrincipalCollection0.add(servletResponseWrapper6, ")Ypr` _9jj@Z;;e/[0J");
      DefaultSecurityManager defaultSecurityManager0 = new DefaultSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, true, inetAddress0, (Session) null, defaultSecurityManager0);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("Illegal hexadecimal charcter ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper0, servletResponseWrapper4);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6807679837119678
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("The convenience passthrough methods for setting session id cookie attributes are only available when the underlying S@ssionManager implemetation is ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      Collection<Realm> collection0 = defaultWebSecurityManager0.getRealms();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection((Collection) collection0, "org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320/org.jsecurity.realm.text.PropertiesRealm-0-accounts.index");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection();
      SimplePrincipalCollection simplePrincipalCollection2 = new SimplePrincipalCollection(simplePrincipalCollection1);
      simplePrincipalCollection2.iterator();
      simplePrincipalCollection0.addAll((PrincipalCollection) simplePrincipalCollection2);
      simplePrincipalCollection2.add(defaultWebSecurityManager0, ")&d/[i`5)+");
      char[] charArray0 = new char[1];
      charArray0[0] = 'g';
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockInetAddress.getLocalHost();
      SimplePrincipalCollection simplePrincipalCollection3 = new SimplePrincipalCollection(simplePrincipalCollection2);
      Integer integer0 = new Integer(0);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm("tW");
      Md2CredentialsMatcher md2CredentialsMatcher0 = new Md2CredentialsMatcher();
      simpleAccountRealm1.setCredentialsMatcher(md2CredentialsMatcher0);
      defaultWebSecurityManager0.setSessionIdCookieMaxAge(551);
      System.setCurrentTimeMillis(2448L);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) servletRequestWrapper0, (ServletResponse) servletResponseWrapper0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.servlet.ServletRequestWrapper cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7249347863977138
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("The convenience passthrough methods for setting session id cookie attributes are only available when the underlying S@ssionManager implemetation is ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      Collection<Realm> collection0 = defaultWebSecurityManager0.getRealms();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection((Collection) collection0, "org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      WildcardPermissionResolver wildcardPermissionResolver1 = new WildcardPermissionResolver();
      wildcardPermissionResolver1.resolvePermission("Resource [");
      WildcardPermission wildcardPermission0 = new WildcardPermission("net.sf.ehcache.store.DiskStore$DiskElement", true);
      wildcardPermissionResolver1.resolvePermission("*?DdO{>FO");
      simpleAccountRealm0.setPermissionResolver(wildcardPermissionResolver0);
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.isHttpSessionMode();
      defaultWebSecurityManager0.setSessionIdCookieSecure(true);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager1.setSessionIdCookieSecure(false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
      servletRequestWrapper4.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper3);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.lookup(linkedList0, linkedList1);
      servletResponseWrapper5.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper4);
      servletResponseWrapper7.getOutputStream();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      InetAddress inetAddress0 = MockInetAddress.getByName("ofYr");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection();
      simplePrincipalCollection1.add(servletResponseWrapper4, "60wUlFbH6Vi]");
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, true, inetAddress0, (Session) null, defaultWebSecurityManager0);
      Subject subject0 = defaultWebSecurityManager0.createSubject((PrincipalCollection) simplePrincipalCollection1, true, (Session) null, (ServletRequest) servletRequestWrapper1, (ServletResponse) servletResponseWrapper5);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind(subject0, servletRequestWrapper4, servletResponseWrapper3);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper1.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper3.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper3);
      servletResponseWrapper1.getOutputStream();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      InetAddress inetAddress0 = MockInetAddress.getByName("jsecurity");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection();
      simplePrincipalCollection0.add(simplePrincipalCollection1, "org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, true, inetAddress0, (Session) null, defaultWebSecurityManager0);
      System.setCurrentTimeMillis((-1078L));
      defaultWebSecurityManager0.getPrincipals((Session) null, servletRequestWrapper2, servletResponseWrapper3);
      defaultWebSecurityManager0.getPrincipals((Session) null);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.3592367006650063
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper0.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((Locale) null).when(servletResponse0).getLocale();
      doReturn((ServletOutputStream) null, (ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper3);
      servletResponseWrapper6.getLocale();
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper6);
      servletResponseWrapper3.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper9);
      servletResponseWrapper1.getOutputStream();
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
      servletResponseWrapper8.getOutputStream();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      InetAddress inetAddress0 = MockInetAddress.getByName(")Ypr` _9jj@Z;;e/[0J");
      simplePrincipalCollection0.iterator();
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection();
      Object object0 = new Object();
      simplePrincipalCollection0.add(object0, ")Ypr` _9jj@Z;;e/[0J");
      servletResponseWrapper1.reset();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm(")Ypr` _9jj@Z;;e/[0J");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection1, false, inetAddress0, (Session) null, defaultWebSecurityManager0);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
      defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper4, servletResponseWrapper4);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      Subject subject0 = defaultWebSecurityManager0.createSubject((PrincipalCollection) simplePrincipalCollection0, false, (Session) null, (ServletRequest) servletRequestWrapper5, (ServletResponse) servletResponseWrapper6);
      assertFalse(subject0.isAuthenticated());
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(defaultWebSecurityManager0);
      Object object0 = new Object();
      delegatingSubject0.logout();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind(delegatingSubject0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper1.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper5);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper6);
      servletResponseWrapper7.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper1.getOutputStream();
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper10);
      ServletResponseWrapper servletResponseWrapper12 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper13 = new ServletResponseWrapper(servletResponseWrapper6);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) null, (ServletResponse) servletResponseWrapper11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.session.ServletContainerSessionManager", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1490596969706202
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper1.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
      servletResponseWrapper3.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper0.getOutputStream();
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection();
      InetAddress inetAddress0 = MockInetAddress.getByName(")Ypr` _9jj@Z;;e/[0J");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection();
      simplePrincipalCollection1.add(servletResponseWrapper5, ")Ypr` _9jj@Z;;e/[0J");
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(simplePrincipalCollection0, true, inetAddress0, (Session) null, defaultWebSecurityManager0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper2, servletResponseWrapper6);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4019454593787288
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
      
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      Integer integer0 = new Integer(31536000);
      Integer integer1 = new Integer((-1794579907));
      Integer integer2 = new Integer(31536000);
      Integer integer3 = new Integer(101);
      Integer integer4 = new Integer((-1794579907));
      Integer integer5 = new Integer(246);
      Integer integer6 = new Integer((-1794579907));
      Integer integer7 = new Integer((-1));
      Integer integer8 = new Integer(1);
      Integer integer9 = new Integer((-1794579907));
      String string0 = defaultWebSecurityManager0.getSessionMode();
      assertEquals("jsecurity", string0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.1490596969706202
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setSessionMode("http");
      Integer integer0 = new Integer((-1794579907));
      Integer integer1 = new Integer(31536000);
      Integer integer2 = new Integer(101);
      Integer integer3 = new Integer((-1794579907));
      Integer integer4 = new Integer(246);
      Integer integer5 = new Integer((-1794579907));
      Integer integer6 = new Integer(96);
      Integer integer7 = new Integer(101);
      assertTrue(integer7.equals((Object)integer2));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission0 = new WildcardPermission("Y`X>", true);
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      WildcardPermissionResolver wildcardPermissionResolver1 = new WildcardPermissionResolver();
      WildcardPermissionResolver wildcardPermissionResolver2 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission1 = new WildcardPermission("8~85Y`h/,:O!L@]z7pE");
      wildcardPermissionResolver2.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      WildcardPermission wildcardPermission2 = new WildcardPermission("Y`X>");
      Integer integer0 = new Integer((-2482));
      Integer integer1 = new Integer((-2482));
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      boolean boolean0 = defaultWebSecurityManager0.isAuthenticated((Session) null, (ServletRequest) null, servletResponseWrapper0);
      assertFalse(boolean0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.6438218248324237
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("The convenience passthrough methods for setting session id cookie attributes are only available when the underlying S@ssionManager implemetation is ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      Collection<Realm> collection0 = defaultWebSecurityManager0.getRealms();
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setSessionMode("jsecurity");
      SimplePrincipalCollection simplePrincipalCollection0 = new SimplePrincipalCollection((Collection) collection0, "org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
      SimplePrincipalCollection simplePrincipalCollection1 = new SimplePrincipalCollection(simplePrincipalCollection0);
      SimplePrincipalCollection simplePrincipalCollection2 = new SimplePrincipalCollection(simplePrincipalCollection1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      defaultWebSecurityManager0.setSessionIdCookieName("CDu");
      defaultWebSecurityManager0.setSessionMode("http");
      Integer integer0 = new Integer((-1808018785));
      Integer integer1 = new Integer((-1808018785));
      Integer integer2 = new Integer(915);
      Integer integer3 = new Integer((-835));
      Integer integer4 = new Integer(2600);
      try { 
        Integer.valueOf("2iHa");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"2iHa\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7949173105176275
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("org.jsecurity.web.DefaultWebSecurityManager_AUTHENTICATED_SESSION_KEY");
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager1.setSessionMode("jsecurity");
      SimpleAccountRealm simpleAccountRealm1 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager2 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager2.getSessionMode();
      defaultWebSecurityManager1.setSessionIdCookiePath(">0k)h0OP5?(Y=-7,`");
      assertEquals("jsecurity", defaultWebSecurityManager1.getSessionMode());
      
      Integer integer0 = new Integer(0);
      SimpleAccountRealm simpleAccountRealm2 = new SimpleAccountRealm("org.jsecurity.web.DefaultWebSecurityManager_PRINCIPALS_SESSION_KEY");
      DefaultWebSecurityManager defaultWebSecurityManager3 = new DefaultWebSecurityManager(simpleAccountRealm2);
      DefaultWebSecurityManager defaultWebSecurityManager4 = new DefaultWebSecurityManager();
      defaultWebSecurityManager3.isHttpSessionMode();
      String string0 = defaultWebSecurityManager3.getSessionMode();
      assertEquals("http", string0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(defaultWebSecurityManager0);
      String[] stringArray0 = new String[0];
      LinkedList<String> linkedList0 = new LinkedList<String>();
      delegatingSubject0.hasRoles(linkedList0);
      delegatingSubject0.isPermittedAll(stringArray0);
      Object object0 = new Object();
      delegatingSubject0.logout();
      defaultWebSecurityManager0.newSessionManagerInstance();
      Integer integer0 = new Integer(997);
      Integer integer1 = new Integer((-935));
      Integer integer2 = new Integer((-935));
      Integer integer3 = new Integer((-935));
      Integer integer4 = new Integer(176);
      Integer integer5 = new Integer(997);
      Integer integer6 = new Integer(1);
      Integer integer7 = new Integer((-1995373104));
      Integer integer8 = new Integer((-1995373104));
      Integer integer9 = new Integer((-1101));
      assertFalse(integer9.equals((Object)integer1));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/jsecurity-ehcache/ehcache_auto_created_1392409281320");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, false);
      byteArray0[1] = (byte)30;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)42;
      Integer integer0 = new Integer((byte)12);
      Integer integer1 = new Integer(536870912);
      Integer integer2 = new Integer((byte)30);
      Integer integer3 = Integer.getInteger("http", integer2);
      Integer integer4 = new Integer((-242));
      defaultWebSecurityManager0.setRememberMeCookieMaxAge(integer3);
      System.setCurrentTimeMillis((byte)42);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieName("http");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("http");
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager1.setRememberMeCookieMaxAge((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null, (Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper0.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      servletRequestWrapper1.getLocales();
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper7);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper8);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper5);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper12 = new ServletResponseWrapper(servletResponseWrapper9);
      ServletResponseWrapper servletResponseWrapper13 = new ServletResponseWrapper(servletResponseWrapper9);
      ServletResponseWrapper servletResponseWrapper14 = new ServletResponseWrapper(servletResponseWrapper13);
      ServletResponseWrapper servletResponseWrapper15 = new ServletResponseWrapper(servletResponseWrapper8);
      servletResponseWrapper15.setContentLength(1213);
      ServletResponseWrapper servletResponseWrapper16 = new ServletResponseWrapper(servletResponseWrapper10);
      ServletResponseWrapper servletResponseWrapper17 = new ServletResponseWrapper(servletResponseWrapper7);
      ServletResponseWrapper servletResponseWrapper18 = new ServletResponseWrapper(servletResponseWrapper8);
      ServletResponseWrapper servletResponseWrapper19 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper20 = new ServletResponseWrapper(servletResponseWrapper8);
      servletResponseWrapper14.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper21 = new ServletResponseWrapper(servletResponseWrapper9);
      ServletResponseWrapper servletResponseWrapper22 = new ServletResponseWrapper(servletResponseWrapper21);
      ServletResponseWrapper servletResponseWrapper23 = new ServletResponseWrapper(servletResponseWrapper10);
      ServletResponseWrapper servletResponseWrapper24 = new ServletResponseWrapper(servletResponseWrapper14);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("v&2M.]/+Y^ilf@;");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((ServletRequest) servletRequestWrapper1, (ServletResponse) servletResponseWrapper1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.servlet.ServletRequestWrapper cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("org.jsecurity.web.session.ServletContainerSessionManager", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1383330595080277
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper0.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      servletResponseWrapper2.getOutputStream();
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper4);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      ServletRequest servletRequest1 = null;
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject((Session) null, (ServletRequest) null, (ServletResponse) servletResponseWrapper3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)30;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ModularRealmAuthenticator modularRealmAuthenticator0 = new ModularRealmAuthenticator();
      ModularAuthenticationStrategy modularAuthenticationStrategy0 = modularRealmAuthenticator0.getModularAuthenticationStrategy();
      defaultWebSecurityManager0.setModularAuthenticationStrategy(modularAuthenticationStrategy0);
      String string0 = defaultWebSecurityManager0.getSessionMode();
      assertEquals("http", string0);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookiePath("lzq0lHf/egr8+");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper1.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null, (ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper4);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper5);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper6);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper7);
      servletResponseWrapper0.getOutputStream();
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper9);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper6);
      servletResponseWrapper4.getOutputStream();
      ServletResponseWrapper servletResponseWrapper12 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper13 = new ServletResponseWrapper(servletResponseWrapper11);
      servletResponseWrapper13.getResponse();
      ServletResponseWrapper servletResponseWrapper14 = new ServletResponseWrapper(servletResponseWrapper13);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager0.getPrincipals((Session) null);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.isAuthenticated((Session) null);
      System.setCurrentTimeMillis(17L);
      System.setCurrentTimeMillis((-4453L));
      int int0 = (-623053532);
      Integer integer0 = new Integer((-362));
      Integer integer1 = new Integer((-623053532));
      int int1 = 3294;
      Integer integer2 = new Integer(3294);
      int int2 = 1394;
      Integer integer3 = new Integer(1394);
      try { 
        Integer.valueOf("k0[");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"k0[\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.245035274126178
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)68;
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper1.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
      servletResponseWrapper3.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper3);
      servletResponseWrapper0.getOutputStream();
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper2);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper3);
      servletResponseWrapper0.getResponse();
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper1);
      defaultWebSecurityManager0.createSubject((Session) null, (ServletRequest) servletRequestWrapper5, (ServletResponse) servletResponseWrapper4);
      defaultWebSecurityManager0.setRememberMeEncryptionCipherKey(byteArray0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      simpleAccountRealm0.init();
      WildcardPermission wildcardPermission0 = new WildcardPermission("J3;fyre2", true);
      AllPermission allPermission0 = new AllPermission();
      LinkedHashSet<AuthenticationListener> linkedHashSet0 = new LinkedHashSet<AuthenticationListener>();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieName("J3;fyre2");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6N)");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieMaxAge((-222));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [null].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-50);
      Integer integer0 = new Integer(31536000);
      Integer integer1 = new Integer((byte) (-50));
      Integer integer2 = new Integer((-2035148725));
      Integer integer3 = new Integer((-2035148725));
      Integer integer4 = new Integer((-2073638266));
      Integer integer5 = new Integer(1);
      Integer integer6 = new Integer(2060);
      Integer integer7 = new Integer((-1912799711));
      Integer integer8 = new Integer((-1912799711));
      Integer integer9 = new Integer(15);
      Integer integer10 = new Integer(2204);
      Integer integer11 = new Integer((-1995373146));
      DefaultWebSecurityManager defaultWebSecurityManager0 = null;
      try {
        defaultWebSecurityManager0 = new DefaultWebSecurityManager((Realm) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Realm argument cannot be null
         //
         verifyException("org.jsecurity.mgt.RealmSecurityManager", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      servletRequestWrapper0.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(servletResponse0).getContentType();
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper6);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper6);
      servletResponseWrapper3.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper11 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper12 = new ServletResponseWrapper(servletResponseWrapper10);
      servletResponseWrapper1.getOutputStream();
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponseWrapper servletResponseWrapper13 = new ServletResponseWrapper(servletResponseWrapper7);
      servletResponseWrapper3.reset();
      ServletResponseWrapper servletResponseWrapper14 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper15 = new ServletResponseWrapper(servletResponseWrapper6);
      servletResponseWrapper11.getContentType();
      ServletResponseWrapper servletResponseWrapper16 = new ServletResponseWrapper(servletResponseWrapper14);
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper5);
      ServletResponseWrapper servletResponseWrapper17 = new ServletResponseWrapper(servletResponseWrapper12);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.bind((Subject) null, servletRequestWrapper2, servletResponseWrapper15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-59);
      byteArray0[2] = (byte) (-59);
      ModularRealmAuthenticator modularRealmAuthenticator0 = new ModularRealmAuthenticator();
      AuthenticationListener authenticationListener0 = mock(AuthenticationListener.class, new ViolatedAssumptionAnswer());
      ModularRealmAuthorizer modularRealmAuthorizer0 = new ModularRealmAuthorizer();
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy0 = new AllSuccessfulModularAuthenticationStrategy();
      UsernamePasswordToken usernamePasswordToken0 = new UsernamePasswordToken("].  Allowed values are ", "].  Allowed values are ", true);
      usernamePasswordToken0.toString();
      SimpleAuthenticationInfo simpleAuthenticationInfo0 = new SimpleAuthenticationInfo(allSuccessfulModularAuthenticationStrategy0, modularRealmAuthenticator0, "<:;[ok<Y_8.o;");
      SimpleAuthenticationInfo simpleAuthenticationInfo1 = new SimpleAuthenticationInfo();
      allSuccessfulModularAuthenticationStrategy0.afterAllAttempts(usernamePasswordToken0, simpleAuthenticationInfo1);
      modularRealmAuthenticator0.setModularAuthenticationStrategy(allSuccessfulModularAuthenticationStrategy0);
      modularRealmAuthenticator0.setModularAuthenticationStrategy(allSuccessfulModularAuthenticationStrategy0);
      AtLeastOneSuccessfulModularAuthenticationStrategy atLeastOneSuccessfulModularAuthenticationStrategy0 = new AtLeastOneSuccessfulModularAuthenticationStrategy();
      modularRealmAuthenticator0.setModularAuthenticationStrategy(atLeastOneSuccessfulModularAuthenticationStrategy0);
      modularRealmAuthenticator0.add(authenticationListener0);
      AuthenticationListener authenticationListener1 = mock(AuthenticationListener.class, new ViolatedAssumptionAnswer());
      modularRealmAuthenticator0.remove(authenticationListener1);
      AllSuccessfulModularAuthenticationStrategy allSuccessfulModularAuthenticationStrategy1 = new AllSuccessfulModularAuthenticationStrategy();
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("v,^Lb");
      Class<AuthenticationToken> class0 = AuthenticationToken.class;
      simpleAccountRealm0.setAuthenticationTokenClass(class0);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      DelegatingSubject delegatingSubject0 = new DelegatingSubject(defaultWebSecurityManager0);
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      defaultWebSecurityManager0.bind(delegatingSubject0, servletRequestWrapper0, (ServletResponse) null);
      assertTrue(defaultWebSecurityManager0.isHttpSessionMode());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)88;
      Integer integer0 = new Integer((-2427));
      Integer integer1 = new Integer((-1475671634));
      Integer integer2 = new Integer((-1475671634));
      Integer integer3 = new Integer((-1475671634));
      Integer integer4 = new Integer((byte) (-50));
      Integer integer5 = new Integer(1870);
      Integer integer6 = new Integer((byte) (-50));
      Integer integer7 = new Integer(165);
      Integer integer8 = new Integer((-2114986304));
      System.setCurrentTimeMillis((-383));
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionIdCookieSecure(true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is org.jsecurity.web.session.DefaultWebSessionManager, which is enabled by default when the sessionMode is 'jsecurity'.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is ";
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("The convenience passthrough methods for setting session id cookie attributes are only available when the underlying SessionManager implementation is ");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      defaultWebSecurityManager0.getRealms();
      String string1 = null;
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setRememberMeCookiePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      Boolean boolean0 = new Boolean("8~85Y`h/,:O!L@]z7pE");
      WildcardPermissionResolver wildcardPermissionResolver1 = new WildcardPermissionResolver();
      wildcardPermissionResolver1.resolvePermission("{PZ*&%");
      WildcardPermissionResolver wildcardPermissionResolver2 = new WildcardPermissionResolver();
      wildcardPermissionResolver1.resolvePermission("g?ON");
      wildcardPermissionResolver2.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      wildcardPermissionResolver2.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      wildcardPermissionResolver2.resolvePermission("Y`X>");
      wildcardPermissionResolver2.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      wildcardPermissionResolver2.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      WildcardPermission wildcardPermission0 = new WildcardPermission("-r $RXzt[q:}-aKw\"o");
      wildcardPermissionResolver0.resolvePermission("fxv=2bYV~P{5=!l9CE");
      WildcardPermission wildcardPermission1 = new WildcardPermission("fxv=2bYV~P{5=!l9CE", true);
      WildcardPermissionResolver wildcardPermissionResolver3 = new WildcardPermissionResolver();
      wildcardPermissionResolver3.resolvePermission("WFXEcKN:^%X.{4 ");
      wildcardPermissionResolver3.resolvePermission("[W]LS~SI?WfEqV");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.isHttpSessionMode();
      System.setCurrentTimeMillis(120L);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.setRememberMeCookiePath("t/");
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.createSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.341994252232425
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      wildcardPermissionResolver0.resolvePermission("//");
      wildcardPermissionResolver0.resolvePermission("`La");
      wildcardPermissionResolver0.resolvePermission("//");
      wildcardPermissionResolver0.resolvePermission("//");
      ServletRequest servletRequest0 = mock(ServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Enumeration) null).when(servletRequest0).getLocales();
      doReturn((String) null).when(servletRequest0).getRemoteHost();
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(servletRequest0);
      ServletRequestWrapper servletRequestWrapper1 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper2 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper3 = new ServletRequestWrapper(servletRequestWrapper1);
      ServletRequestWrapper servletRequestWrapper4 = new ServletRequestWrapper(servletRequestWrapper2);
      servletRequestWrapper0.getLocales();
      ServletResponse servletResponse0 = mock(ServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((ServletOutputStream) null).when(servletResponse0).getOutputStream();
      ServletResponseWrapper servletResponseWrapper0 = new ServletResponseWrapper(servletResponse0);
      ServletResponseWrapper servletResponseWrapper1 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper2 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper3 = new ServletResponseWrapper(servletResponseWrapper2);
      ServletResponseWrapper servletResponseWrapper4 = new ServletResponseWrapper(servletResponseWrapper0);
      ServletResponseWrapper servletResponseWrapper5 = new ServletResponseWrapper(servletResponseWrapper1);
      ServletResponseWrapper servletResponseWrapper6 = new ServletResponseWrapper(servletResponseWrapper3);
      ServletResponseWrapper servletResponseWrapper7 = new ServletResponseWrapper(servletResponseWrapper3);
      servletResponseWrapper7.setLocale((Locale) null);
      ServletResponseWrapper servletResponseWrapper8 = new ServletResponseWrapper(servletResponseWrapper4);
      servletResponseWrapper0.getOutputStream();
      ServletRequestWrapper servletRequestWrapper5 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletRequestWrapper servletRequestWrapper6 = new ServletRequestWrapper(servletRequestWrapper0);
      ServletResponseWrapper servletResponseWrapper9 = new ServletResponseWrapper(servletResponseWrapper4);
      servletResponseWrapper9.getResponse();
      ServletRequestWrapper servletRequestWrapper7 = new ServletRequestWrapper(servletRequestWrapper2);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm();
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager(simpleAccountRealm0);
      ServletResponseWrapper servletResponseWrapper10 = new ServletResponseWrapper(servletResponseWrapper4);
      Collection<Realm> collection0 = defaultWebSecurityManager0.getRealms();
      DefaultWebSecurityManager defaultWebSecurityManager1 = new DefaultWebSecurityManager(collection0);
      defaultWebSecurityManager1.createSubject((Session) null, (ServletRequest) servletRequestWrapper2, (ServletResponse) servletResponseWrapper1);
      // Undeclared exception!
      try { 
        defaultWebSecurityManager1.createSubject();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No ServletRequest found in ThreadContext. Make sure WebUtils.bind() is being called. (typically called by JSecurityFilter)  This could also happen when running integration tests that don't properly call WebUtils.bind().
         //
         verifyException("org.jsecurity.web.WebUtils", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6N)");
      LinkedList<Realm> linkedList0 = new LinkedList<Realm>();
      DefaultWebSecurityManager defaultWebSecurityManager0 = null;
      try {
        defaultWebSecurityManager0 = new DefaultWebSecurityManager(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Realms collection argument cannot be empty.
         //
         verifyException("org.jsecurity.mgt.RealmSecurityManager", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission0 = new WildcardPermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      WildcardPermission wildcardPermission1 = new WildcardPermission("Y`X>");
      WildcardPermissionResolver wildcardPermissionResolver1 = new WildcardPermissionResolver();
      WildcardPermissionResolver wildcardPermissionResolver2 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission2 = new WildcardPermission("8~85Y`h/,:O!L@]z7pE");
      wildcardPermissionResolver2.resolvePermission("8~85Y`h/,:O!L@]z7pE");
      WildcardPermission wildcardPermission3 = new WildcardPermission("8~85Y`h/,:O!L@]z7pE", true);
      SimpleAccountRealm simpleAccountRealm0 = new SimpleAccountRealm("8~85Y`h/,:O!L@]z7pE");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      // Undeclared exception!
      try { 
        defaultWebSecurityManager0.setSessionMode("classpath");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid sessionMode [classpath].  Allowed values are public static final String constants in the org.jsecurity.web.DefaultWebSecurityManager class: 'http' or 'jsecurity', with 'http' being the default.
         //
         verifyException("org.jsecurity.web.DefaultWebSecurityManager", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      WildcardPermissionResolver wildcardPermissionResolver0 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission0 = new WildcardPermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("Y`X>");
      WildcardPermission wildcardPermission1 = new WildcardPermission("Y`X>");
      wildcardPermissionResolver0.resolvePermission("Udx04P");
      Boolean boolean0 = new Boolean("Udx04P");
      WildcardPermission wildcardPermission2 = new WildcardPermission("Y`X>");
      WildcardPermissionResolver wildcardPermissionResolver1 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission3 = new WildcardPermission("iK");
      wildcardPermissionResolver1.resolvePermission("iK");
      WildcardPermission wildcardPermission4 = new WildcardPermission("iK");
      WildcardPermissionResolver wildcardPermissionResolver2 = new WildcardPermissionResolver();
      wildcardPermissionResolver1.resolvePermission("Udx04P");
      WildcardPermission wildcardPermission5 = new WildcardPermission("Y`X>");
      WildcardPermission wildcardPermission6 = new WildcardPermission("Udx04P");
      wildcardPermissionResolver2.resolvePermission("Udx04P");
      WildcardPermission wildcardPermission7 = new WildcardPermission("Udx04P");
      WildcardPermission wildcardPermission8 = new WildcardPermission("-r $RXzt[q:}-aKw\"o");
      WildcardPermission wildcardPermission9 = new WildcardPermission("iK");
      WildcardPermission wildcardPermission10 = new WildcardPermission("Oi", false);
      WildcardPermissionResolver wildcardPermissionResolver3 = new WildcardPermissionResolver();
      WildcardPermission wildcardPermission11 = new WildcardPermission("Y`X>");
      wildcardPermissionResolver3.resolvePermission("WFXEcKN:^%X.{4 ");
      wildcardPermissionResolver3.resolvePermission("[W]LS~SI?WfEqV");
      DefaultWebSecurityManager defaultWebSecurityManager0 = new DefaultWebSecurityManager();
      defaultWebSecurityManager0.isHttpSessionMode();
      System.setCurrentTimeMillis(102L);
  }
}
