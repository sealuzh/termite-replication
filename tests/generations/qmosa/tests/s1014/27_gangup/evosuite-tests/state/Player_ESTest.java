/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:14:56 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Player player0 = new Player();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.9727115278367817
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.setMoney(0.0F);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player((short)4919);
      player1.setMoney((-2234.0F));
      player0.remove(player1);
      player0.type();
      player0.pack();
      player0.setZ((-2411.5469F));
      player0.type();
      player0.remove(player1);
      player0.isJoinOK(player1, false);
      player0.getStrength();
      player1.setDead(2774L, false);
      player1.prev = (Party) player0;
      player1.id = 0;
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      player1.pack();
      int int0 = player0.type();
      assertEquals((-2411.5469F), player0.getZ(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8827437576468555
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(4919, "", 4919);
      Player player1 = new Player(11705, "", "", 4919, (short)4919);
      player1.setZ((-2062.52F));
      player0.setJoinOK(player1, true);
      Player player2 = new Player(11705);
      player2.setJoinOK(player1, true);
      player2.setDead();
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      player0.head = party0;
      player0.setZ(0);
      Player player1 = new Player(589);
      player1.setJoinOK(player0, true);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)82;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-243), (byte)55);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.125543816101745
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      byte[] byteArray0 = player0.pack();
      Player player1 = new Player((-425), "Player", (String) null, (-425));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      player1.setJoinOK(player0, true);
      Player player2 = new Player((short)4919, (String) null, (String) null, (-235));
      player2.setY(0.2F);
      player2.getY();
      player0.setDead((-1771L), false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.isJoinOK(player2, true);
      player2.toString();
      assertEquals(0.2F, player2.getY(), 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte) (-1);
      MockFile mockFile0 = new MockFile("+3])", "");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      File file1 = MockFile.createTempFile("gGVh=6X2qFr<W97wCX", "", file0);
      file0.toURL();
      file1.setExecutable(false, false);
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      file1.getAbsolutePath();
      mockFile1.deleteOnExit();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/gGVh=6X2qFr<W97wCX0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile1.getCanonicalPath();
      mockFile1.toPath();
      MockFile mockFile3 = new MockFile("+3])");
      mockFile1.mkdirs();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-28), "", "", (byte)29);
      player0.toString();
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(29, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      player0.head = party0;
      player0.setZ((-1012.68976F));
      player0.setJoinOK(player0, true);
      player0.setY((short)4919);
      player0.getY();
      player0.getZ();
      player0.pack();
      System.setCurrentTimeMillis(0);
      player0.pack();
      player0.pack();
      assertEquals((-1012.68976F), player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)0;
      byteArray0[4] = (byte) (-1);
      MockFile mockFile0 = new MockFile("+3])", "");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      File file1 = MockFile.createTempFile("gGVh=6X2qFr<W97wCX", "", file0);
      mockFile0.getAbsoluteFile();
      file0.toURL();
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      file1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/gGVh=6X2qFr<W97wCX0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile1.getCanonicalPath();
      MockFile mockFile3 = new MockFile("+3])", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile1.mkdirs();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((byte)0, "", (String) null, (byte)0, (byte) (-1));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-1428));
      Party party0 = new Party((-1428));
      party0.remove(player0);
      party0.id = (int) (short)4919;
      party0.id = 773;
      party0.boss = (Party) player0;
      party0.id = (-1428);
      player0.add(party0);
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-1074));
      player0.setX((-1074));
      Party party0 = new Party();
      player0.setZ(1665.42F);
      Player player1 = new Player((short)4919);
      player0.setJoinOK(player1, false);
      player0.remove(party0);
      player0.add(player1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.setY(0.1F);
      player1.remove(party0);
      player1.getY();
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1433L);
      player0.getX();
      player0.gangStrength();
      assertEquals(1665.42F, player0.getZ(), 0.01F);
      
      System.setCurrentTimeMillis((-1074));
      System.setCurrentTimeMillis(946L);
      int int0 = player1.getStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player();
      player0.setDead();
      boolean boolean0 = player0.isDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      party0.getSubparty();
      player0.setZ(0);
      party0.id = 0;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte) (-58);
      byteArray0[0] = (byte) (-58);
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte) (-94);
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setJoinOK(player0, true);
      player0.remove((Party) null);
      player0.setY(586);
      player0.remove(party0);
      player0.isJoinOK(player0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      player0.isJoinOK(player0, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling0));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4466856169199285
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.head = party0.boss;
      party0.getSubparty();
      player0.setZ(0);
      party0.getSubparty();
      party0.id = 0;
      Player player1 = new Player(589);
      player1.setJoinOK(player0, true);
      player0.remove(party0.boss);
      party0.add(player0);
      player1.setY(589);
      player0.remove(party0);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(856L);
      player1.getX();
      System.setCurrentTimeMillis((-284L));
      System.setCurrentTimeMillis(946L);
      System.setCurrentTimeMillis(856L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(16);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, (short)4919);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0, (short)4919);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, bufferedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player0.setX(16);
      player0.setZ(16);
      assertEquals(16.0F, player0.getZ(), 0.01F);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(813, ";4%l`t^", (String) null, 813);
      player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(813, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.head = party0;
      player0.setZ(0);
      party0.id = 0;
      Player player1 = new Player(589);
      player0.remove(party0.boss);
      party0.add(player0);
      player1.setY(589);
      player0.remove(party0);
      player1.getY();
      System.setCurrentTimeMillis(856L);
      float float0 = player1.getX();
      assertEquals(589.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      MockFile mockFile0 = new MockFile("+3])", "");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      file0.toPath();
      File file1 = MockFile.createTempFile("gGVh=6X2qFr<W97wCX", "", file0);
      file0.toURL();
      file1.setExecutable(false, false);
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      file1.getAbsolutePath();
      mockFile1.deleteOnExit();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/gGVh=6X2qFr<W97wCX0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile0.getCanonicalPath();
      mockFile1.toPath();
      MockFile mockFile3 = new MockFile("");
      Player player0 = new Player((byte)29, "/home/ubuntu/termite/projects/27_gangup/+3])/gGVh=6X2qFr<W97wCX0", "/home/ubuntu/termite/projects/27_gangup/+3])", (-872));
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.head = party0;
      player0.setZ(0);
      party0.id = 0;
      Player player1 = new Player(589);
      party0.add(player0);
      player0.setY((short)4919);
      player0.remove(party0.boss);
      party0.next = (Party) player0;
      player0.getY();
      player0.getX();
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.0306023415568295
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(10, "eyY!fS(AZ~O+,G/pmP$", "", 2355);
      player0.setZ((-1338.387F));
      player0.setX(5213.0F);
      player0.pack();
      player0.getIP();
      player0.pack();
      Player player1 = new Player((short)4919, "bGgS*}F{9ncse", "", 4272);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.unpack(dataInputStream0);
      player1.gangStrength();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player1.getY();
      byte[] byteArray0 = player0.pack();
      Player player2 = new Player(1514, "bGgS*}F{9ncse", "", 1514);
      player2.getSubparty();
      sequenceInputStream0.read(byteArray0);
      player2.unpack(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      player2.unpack(dataInputStream0);
      assertEquals(5213.0F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0, (String) null, (String) null, 0, 0);
      player0.getIP();
      Player player1 = new Player(3, "G%1", 3);
      player0.remove(player1);
      player0.isJoinOK(player1, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-24);
      Player player2 = new Player();
      player2.setY(0.0F);
      player2.setX(0.1F);
      assertEquals(0.1F, player2.getX(), 0.01F);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1271454652812123
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = new Party();
      player0.next = party0;
      party0.prev = player0.next;
      player0.setMoney((-3713.4397F));
      player0.setConnected(false);
      player0.id = (-1531);
      player0.getStrength();
      player0.setMoney(0.0F);
      Player player1 = new Player((-734), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "hr&$.Igq", (-1), (-2789));
      player1.setDead();
      player1.setDead((long) (-734), true);
      player0.setJoinOK(player1, false);
      player0.isConnected();
      player0.setDead((-86L));
      System.setCurrentTimeMillis((-1531));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals((-86L), player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.9421822974250196
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player((-103), "b@ubfSuX", (-103));
      player0.setDead();
      player0.getPictureId();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte) (-99);
      player0.getMoney();
      player0.getTimeOfDeath();
      player0.getX();
      player0.setDead(0L, true);
      player0.setMoney((byte)2);
      player0.getZ();
      player0.getTimeOfDeath();
      player0.gangStrength();
      player0.setDead((long) (-103), true);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(1746, "h>[rCP|AC{|$Wcl,", 0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.970620935502287
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(806, "Ft1bl>-VWY@W1FK2", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 0, 0);
      Player player1 = new Player();
      player0.prev = (Party) player1;
      Player player2 = new Player(806, "", "0.0.0.0", 4919, 0);
      player0.setJoinOK(player2, false);
      player2.setY(0);
      player2.setX(0.1F);
      player2.setDead((-1L));
      long long0 = player2.getTimeOfDeath();
      assertEquals(0.1F, player2.getX(), 0.01F);
      assertEquals((-1L), long0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis(15000L);
      Player player0 = new Player((-5599), "", "R8d/@Sna`V", 636, (-2364));
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getStrength();
      System.setCurrentTimeMillis(1392409296320L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(1403.0F);
      Party party0 = new Party();
      player0.setZ(1403.0F);
      Player player1 = new Player((short)4919);
      Player player2 = null;
      // Undeclared exception!
      try { 
        player1.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9721987111105235
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      party0.getSubparty();
      player0.setZ(0);
      party0.id = 0;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte) (-58);
      byteArray0[0] = (byte) (-58);
      byteArray0[4] = (byte)98;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Player player1 = new Player((byte)98, "T8H3BEoj4(GV", ",c[L@q,6h6>~1w,0?", (-23864));
      player0.setJoinOK(player1, true);
      player1.setY((byte) (-56));
      player1.getY();
      player0.setDead(652L, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Enumeration<ByteArrayInputStream> enumeration1 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player1.unpack(dataInputStream0);
      player1.unpack(byteArray0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream1);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(652L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockFile mockFile0 = new MockFile("<TT[6", "<TT[6");
      mockFile0.setReadable(false, true);
      MockFile mockFile1 = new MockFile(mockFile0, "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<TT[6");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      Player player0 = new Player(773, "", 5);
      player0.setConnected(false);
      System.setCurrentTimeMillis((byte)2);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      player0.getName();
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 2294;
      Player player0 = new Player((-5343), "R", "", 2294, (-5343));
      player0.setDead((long) 2294);
      player0.isConnected();
      player0.setY((-5343));
      player0.setMoney((short)4919);
      player0.getName();
      player0.id = (-5343);
      player0.gangStrength();
      player0.getMoney();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isDead();
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals("Player-1", player0.getName());
      
      MockFile mockFile0 = new MockFile("", "+3])");
      mockFile0.getCanonicalFile();
      mockFile0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      File file0 = MockFile.createTempFile("WZWs", (String) null, (File) mockFile0);
      mockFile0.setExecutable(false, false);
      mockFile0.deleteOnExit();
      MockFile mockFile1 = new MockFile("/+3])", "/+3])");
      MockFile mockFile2 = new MockFile(mockFile1, "");
      mockFile1.getAbsolutePath();
      mockFile1.getAbsolutePath();
      mockFile0.renameTo(mockFile1);
      mockFile2.getCanonicalFile();
      mockFile1.renameTo(file0);
      mockFile0.getCanonicalPath();
      mockFile2.toPath();
      MockFile mockFile3 = new MockFile("WZWs");
      mockFile1.mkdirs();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Player player1 = new Player(5, "", (byte) (-1));
      assertEquals(1, player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals((-1), player1.getPictureId());
      assertEquals("0.0.0.0", player1.getIP());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = 0;
      String string0 = "{%Bv{-]*r";
      Player player0 = new Player(0, "{%Bv{-]*r", "{%Bv{-]*r", (-1846), 0);
      player0.gangStrength();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("9", "{%Bv{-]*r");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // {%Bv{-]*r
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      MockFile mockFile0 = new MockFile("l^~OlqH{Yi", "");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      File file1 = MockFile.createTempFile("gGVh=6X2qFr<W97wCX", "", file0);
      file0.toURL();
      mockFile0.deleteOnExit();
      MockFile mockFile1 = new MockFile(mockFile0, "l^~OlqH{Yi");
      file1.renameTo(mockFile0);
      mockFile1.createNewFile();
      file1.getAbsolutePath();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      mockFile0.getCanonicalFile();
      Player player0 = new Player((byte)29);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player29", player0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.576534609090467
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      player0.head = party0;
      player0.setMoney(0);
      player0.setZ(0);
      Player player1 = new Player(589);
      player1.setJoinOK(player0, true);
      player0.setY(0.1F);
      player0.getY();
      player1.isJoinOK(player0, false);
      player1.isJoinOK(player0, false);
      System.setCurrentTimeMillis((-2047L));
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player((-1101), "<TT[6", "<TT[6", (-1300), (-1101));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      MockFile mockFile0 = new MockFile("<TT[6", "<TT[6");
      MockFile mockFile1 = new MockFile(mockFile0, "");
      player0.getSubparty();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      player0.pack(dataOutputStream0);
      player0.pack();
      Player player1 = new Player((byte)2, "<TT[6", 5);
      System.setCurrentTimeMillis((byte)2);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      Player player0 = new Player(12037, "A{n5!q.", "6BqB,F^kLGa^i9u", 1);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      byteArray0[5] = (byte) (-1);
      MockFile mockFile0 = new MockFile("+3])", "");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.toPath();
      File file1 = MockFile.createTempFile("gGVh=6X2qFr<W97wCX", "", file0);
      file0.toURL();
      file1.setExecutable(false, false);
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      file1.getAbsolutePath();
      mockFile1.deleteOnExit();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/gGVh=6X2qFr<W97wCX0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile0.getCanonicalPath();
      mockFile1.toPath();
      MockFile mockFile3 = new MockFile("");
      MockFile mockFile4 = new MockFile("gGVh=6X2qFr<W97wCX");
      mockFile4.mkdirs();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(10, "gGVh=6X2qFr<W97wCX", "/home/ubuntu/termite/projects/27_gangup/+3])", (byte) (-1), 3546);
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(3546, player0.getStrength());
      assertEquals((-1), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("gGVh=6X2qFr<W97wCX", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.1958550791509905
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      player0.setZ(0);
      player0.setX(0);
      byte[] byteArray0 = player0.pack();
      player0.getIP();
      player0.pack();
      Player player1 = new Player(1826, "Player.unpack(): *** WARNING *** data is not of proper type!", "U.\" W$>(", (-1));
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((short)4919);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.setJoinOK(player1, true);
      player0.setY(2005.6F);
      player0.getY();
      player1.setDead((long) 1826, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream2);
      assertEquals(2005.6F, player0.getY(), 0.01F);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getIP();
      Player player1 = new Player((short)4919, "f#?6Wrv", 87);
      player1.remove(player0);
      player0.isJoinOK(player1, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-24);
      byteArray0[4] = (byte)5;
      byteArray0[7] = (byte)107;
      byteArray0[8] = (byte) (-21);
      player0.unpack(byteArray0);
      player0.setX((-2983.87F));
      System.setCurrentTimeMillis((byte) (-24));
      System.setCurrentTimeMillis((byte)41);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      MockFile mockFile0 = new MockFile("+3])");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.toPath();
      File file1 = MockFile.createTempFile("BVDgC;Y~'g", "", file0);
      file0.toURL();
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      mockFile1.delete();
      file1.getAbsolutePath();
      mockFile1.deleteOnExit();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/BVDgC;Y~'g0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile1.toPath();
      MockFile mockFile3 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/+3])", "+3])");
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile4.renameTo(mockFile0);
      mockFile4.getCanonicalPath();
      MockFile mockFile5 = new MockFile("+3])");
      MockFile mockFile6 = new MockFile(mockFile4, "gui.ModuleBrowserDialog$ModuleFilter");
      mockFile6.toURL();
      mockFile6.mkdirs();
      Player player0 = new Player((byte)29, "gui.ModuleBrowserDialog$ModuleFilter", "", (-1), (byte)29);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player1 = new Player(150, ">qRdW", 2809);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(1, player1.getStrength());
      assertFalse(player1.isDead());
      assertEquals(29, player0.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(2809, player1.getPictureId());
      assertTrue(player1.isConnected());
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(0, ";4%l`t^", ";4%l`t^", 0);
      player0.getName();
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      player0.head = party0;
      player0.setZ((-1012.68976F));
      Player player1 = new Player(0);
      player0.setY((short)4919);
      player0.getMoney();
      player1.setDead((long) (short)4919, true);
      byte[] byteArray0 = new byte[6];
      player0.remove(player1);
      byteArray0[0] = (byte)79;
      byteArray0[2] = (byte)59;
      byteArray0[4] = (byte) (-43);
      player1.setDead((long) (byte)59, true);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(59L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      MockFile mockFile0 = new MockFile("+3])");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.toPath();
      File file1 = MockFile.createTempFile("BVDCY~'g", "$~", (File) null);
      file0.toURL();
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      mockFile1.delete();
      file1.getAbsolutePath();
      mockFile1.deleteOnExit();
      mockFile1.getAbsolutePath();
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/+3])");
      mockFile1.renameTo(file0);
      MockFile mockFile3 = new MockFile("/tmp/BVDCY~'g0$~", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile0.getCanonicalPath();
      mockFile1.toPath();
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])", "+3])");
      MockFile mockFile5 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile5.renameTo(mockFile0);
      mockFile5.getCanonicalPath();
      MockFile mockFile6 = new MockFile("+3])");
      MockFile mockFile7 = new MockFile(mockFile5, "gui.ModuleBrowserDialog$ModuleFilter");
      mockFile7.toURL();
      mockFile7.mkdirs();
      Player player0 = new Player((byte)29, "gui.ModuleBrowserDialog$ModuleFilter", "/home/ubuntu/termite/projects/27_gangup/+3])", (-1), (byte)29);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("gui.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals((-1), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(29, player0.getStrength());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Player player0 = new Player(335, "", 335);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)1;
      player0.unpack(byteArray0);
      int int0 = player0.getPictureId();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(335, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      MockFile mockFile0 = new MockFile("+3])");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      mockFile0.toPath();
      File file1 = MockFile.createTempFile("BVDgC;Y~'g", "", (File) null);
      file0.toURL();
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      mockFile1.delete();
      file1.getAbsolutePath();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/tmp/BVDgC;Y~'g0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile0.getCanonicalPath();
      MockFile mockFile3 = new MockFile("", "BVDgC;Y~'g");
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile4.renameTo(mockFile0);
      mockFile4.getCanonicalPath();
      MockFile mockFile5 = new MockFile("+3])");
      MockFile mockFile6 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/+3])", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile6.mkdirs();
      Player player0 = new Player((-176), "gui.ModuleBrowserDialog$ModuleFilter", 0);
      int int0 = player0.type();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<TT[6/<TT[6");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)95;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      Player player0 = new Player((byte)95);
      player0.pack();
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals("Player95", player0.getName());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(10, (String) null, 0);
      String string0 = player0.getIP();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals("0.0.0.0", string0);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Player player0 = new Player((-946), "", 10);
      player0.setMoney((-946));
      player0.setY(1152.2F);
      player0.getMoney();
      player0.getX();
      player0.setDead(1L, true);
      assertEquals(1152.2F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<TT[6/<TT[6");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)95;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-1);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("STT[k", "");
      mockFile0.delete();
      mockFile0.getCanonicalFile();
      MockFile mockFile1 = new MockFile(mockFile0, "STT[k");
      mockFile0.getCanonicalFile();
      mockFile0.renameTo(mockFile1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      Player player0 = new Player(5, "", 2577);
      int int0 = player0.getStrength();
      assertEquals(1, int0);
      assertEquals(2577, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-4361), "Tx3oLNWOg", "Tx3oLNWOg", (-3406), 233);
      int int0 = player0.gangStrength();
      assertEquals(233, int0);
      
      int int1 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(233, int1);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals((-3406), player0.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player();
      player0.isDead();
      byte[] byteArray0 = player0.pack();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      Party party0 = player0.head;
      player0.add((Party) null);
      player0.setDead((long) 514);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.1731248118492754
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(4061, "gui.ModuleBrowserDialog$ModuleFilter", "", 0, 1);
      player0.setDead((long) 0);
      player0.getZ();
      player0.setZ(1);
      player0.setDead();
      player0.reset(false);
      player0.isConnected();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-88);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      player0.unpack(byteArray0);
      player0.reset(true);
      player0.getTimeOfDeath();
      player0.getPictureId();
      float float0 = player0.getZ();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1.0F, float0, 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      player0.id = (int) (byte)0;
      byteArray0[1] = (byte) (-99);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)1;
      player0.setZ(0.0F);
      player0.unpack(byteArray0);
      player0.setX(773.96F);
      player0.getPictureId();
      player0.pack();
      System.setCurrentTimeMillis((byte)90);
      System.setCurrentTimeMillis(335);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)1;
      player0.setZ(0.0F);
      player0.unpack(byteArray0);
      player0.getPictureId();
      player0.pack();
      System.setCurrentTimeMillis((byte)90);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Player player0 = new Player(0);
      MockFile mockFile0 = new MockFile("y}[nB\"@~[7^7qtHNF}8", "XL@Kp6vyv%@\":8OZv");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte) (-42);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("Player0", player0.getName());
      assertFalse(boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player(1737, "h>[rCP|ACw|$'cl,", 0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)29;
      byteArray0[6] = (byte)29;
      byteArray0[4] = (byte)29;
      MockFile mockFile0 = new MockFile("+3])", "");
      File file0 = mockFile0.getCanonicalFile();
      file0.getAbsolutePath();
      mockFile0.getAbsolutePath();
      file0.getAbsoluteFile();
      mockFile0.toPath();
      mockFile0.mkdirs();
      File file1 = MockFile.createTempFile("gGVh=6X2qFr<W97wCX", "", file0);
      file0.toURL();
      file1.setExecutable(false, false);
      mockFile0.delete();
      MockFile mockFile1 = new MockFile(mockFile0, "+3])");
      file1.getAbsolutePath();
      mockFile1.deleteOnExit();
      mockFile1.getAbsolutePath();
      mockFile1.renameTo(file0);
      MockFile mockFile2 = new MockFile("/home/ubuntu/termite/projects/27_gangup/+3])/gGVh=6X2qFr<W97wCX0", "/home/ubuntu/termite/projects/27_gangup/+3])");
      mockFile0.renameTo(mockFile1);
      mockFile0.getCanonicalPath();
      mockFile1.toPath();
      MockFile mockFile3 = new MockFile("");
      MockFile mockFile4 = new MockFile("gGVh=6X2qFr<W97wCX");
      mockFile4.mkdirs();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((byte)29, "", "/home/ubuntu/termite/projects/27_gangup/+3])", 1);
      float float0 = player0.getZ();
      assertEquals(1, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("", player0.getIP());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Player player0 = new Player(335, (String) null, 335);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-99);
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte)1;
      player0.unpack(byteArray0);
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(335, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player(1711, "", (String) null, 1760);
      long long0 = player0.getTimeOfDeath();
      assertEquals(1760, player0.getPictureId());
      assertEquals(0L, long0);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player();
      boolean boolean0 = player0.isConnected();
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(boolean0);
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("Player-1", player0.getName());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setX(0);
      Party party0 = new Party();
      party0.boss = (Party) player0;
      player0.head = party0.boss;
      party0.getSubparty();
      player0.setJoinOK(player0, true);
      player0.remove(party0.boss);
      party0.add(player0);
      player0.setY(589);
      player0.remove(party0);
      player0.reset(true);
      player0.isJoinOK(player0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      Player player1 = new Player(589, "", 5);
      boolean boolean0 = player1.isJoinOK(player0, false);
      assertEquals(589.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Player player0 = new Player(0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player0", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      
      MockFile mockFile0 = new MockFile("y}[nB\"@~[7^7qtHNF}8", "XL@Kp6vyv%@\":8OZv");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      filterOutputStream0.write(10);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-103);
      Player player1 = new Player((byte) (-103), "XL@Kp6vyv%@\":8OZv", "}'Ri", 95, 0);
      player1.reset(false);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("XL@Kp6vyv%@\":8OZv", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(95, player1.getPictureId());
  }
}
