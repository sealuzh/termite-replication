/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 03:50:19 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.removeXAConnectionFactory((XAConnectionFactory) null);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[4];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      connectionFactories0.getXAQueueConnectionFactoryCount();
      try { 
        pipedOutputStream0.connect(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      MockFile mockFile0 = new MockFile("q0?, 2&LUs)'r`pj");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      try { 
        connectionFactories0.marshal((Writer) mockPrintWriter0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.9107913288782323
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[3];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getConnectionFactoryCount();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      connectionFactories0.getXAConnectionFactory(0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId("org.xolab.jms.config.ConnectionFactories");
      xMLReaderAdapter0.startPrefixMapping("", "");
      QueueConnectionFactory queueConnectionFactory0 = null;
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      xMLReaderAdapter0.processingInstruction("", "org.xolab.jms.config.ConnectionFactories");
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      connectionFactories0.getQueueConnectionFactoryCount();
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      connectionFactories0.getXAConnectionFactoryCount();
      try { 
        connectionFactories0.marshal((ContentHandler) xMLReaderAdapter0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.155834175521103
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.isValid();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      Object object0 = new Object();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory1);
      connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
      connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(1, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories0.enumerateXAQueueConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      connectionFactories0.setConnectionFactory(0, connectionFactory1);
      assertFalse(connectionFactory1.equals((Object)connectionFactory0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[7];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pns!w&=|L?N");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl1);
      xMLReaderAdapter0.startPrefixMapping("xmlns", "e*wM$5,$tVn1*+B7");
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      xMLFilterImpl2.setParent(xMLFilterImpl1);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl0);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl1);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("RXsH[lkd'L\"gg", "", "e*wM$5,$tVn1*+B7", 0, 0);
      xMLFilterImpl0.warning(sAXParseException0);
      connectionFactories0.getConnectionFactoryCount();
      xMLFilterImpl0.endDocument();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      // Undeclared exception!
      try { 
        attributes2Impl1.isSpecified("xmlns");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No such attribute: xmlns
         //
         verifyException("org.xml.sax.ext.Attributes2Impl", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      xAConnectionFactory0.isValid();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[7];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      xAConnectionFactoryArray0[2] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory0;
      xAConnectionFactoryArray0[4] = xAConnectionFactory0;
      xAConnectionFactoryArray0[5] = xAConnectionFactory0;
      xAConnectionFactoryArray0[6] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      URI uRI0 = MockURI.aHttpURI;
      // Undeclared exception!
      try { 
        MockURI.parseServerAuthority((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[15];
      connectionFactories0.enumerateXAConnectionFactory();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      assertEquals(15, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      assertNull(topicConnectionFactory1.getName());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[7];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Pns!w&=|L?N");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl1);
      xMLReaderAdapter0.startPrefixMapping("xmlns", "e*wM$5,$tVn1*+B7");
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      locatorImpl1.getSystemId();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      xMLFilterImpl2.setDocumentLocator(locator2Impl0);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      xMLFilterImpl2.setParent(xMLFilterImpl1);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setContentHandler(xMLFilterImpl0);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl1);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      int int0 = 9;
      connectionFactories0.getConnectionFactory(0);
      try { 
        connectionFactories0.setConnectionFactory(9, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5094656225315988
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[5];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      Locale locale0 = Locale.ITALIAN;
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(5, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Locale locale0 = Locale.UK;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory1;
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory2;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories0.getXAConnectionFactory();
      assertEquals(7, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[20];
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[3];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory1;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[9];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory2;
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(3, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      int int0 = 0;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      connectionFactories0.getXAConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\">");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.addXAConnectionFactory((XAConnectionFactory) null);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory((-1316), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1316, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      Object object0 = new Object();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.CANADA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode2);
      locale0.getDisplayVariant(locale1);
      locale0.getDisplayScript();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "org.exolab.jms.config.ConnectionFactories";
      objectArray0[2] = object0;
      objectArray0[3] = (Object) stringWriter0;
      stringWriter0.close();
      objectArray0[4] = (Object) connectionFactories0;
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      assertEquals(1, connectionFactoryArray0.length);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\">");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.addXAConnectionFactory((XAConnectionFactory) null);
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      CharBuffer.allocate(1445);
      String string0 = "9\\kY7{R";
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[5];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1, 65);
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream4 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream5 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = new PipedInputStream(9);
      PipedOutputStream pipedOutputStream6 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream6);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream3);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-2100));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Locale locale0 = Locale.UK;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory1;
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory2;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory1;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(7, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5709195237181253
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[4];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = null;
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getConnectionFactoryCount();
      CharBuffer.allocate(0);
      connectionFactories0.getConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory(0);
      try { 
        connectionFactories0.getXATopicConnectionFactory((-1612));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Locale locale0 = Locale.KOREAN;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory1;
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory2;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[5] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[6] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(2);
      assertEquals(7, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.3597473990481395
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("2E+J5M}JU");
      Locale.forLanguageTag("N$.?c8xn");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactory1.setName("N$.?c8xn");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories1.addQueueConnectionFactory(queueConnectionFactory1);
      connectionFactories0.getQueueConnectionFactory(0);
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      xAConnectionFactory1.isValid();
      try { 
        connectionFactories1.setXAConnectionFactory((-372), xAConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      xMLReaderAdapter0.startPrefixMapping("e*wM$5,$tVn1*+B7", "");
      xMLFilterImpl1.setErrorHandler(xMLFilterImpl2);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLFilterImpl1.setParent(parserAdapter0);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl3.setContentHandler(xMLReaderAdapter0);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl1);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      attributes2Impl0.getValue("P$&Q_(MnZ09v(yg]b!", "");
      attributes2Impl0.getLength();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      xMLFilterImpl1.endDocument();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      xMLFilterImpl3.startElement("", "e*wM$5,$tVn1*+B7", (String) null, attributes2Impl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl2.getContentHandler();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(8, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " PUBLIC ");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      MockFile.createTempFile("PQ!3dAa=Xbx~((|", "YYAo");
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("PQ!3dAa=Xbx~((|", 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=pq!3daa=xbx~((|
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      Locale locale0 = Locale.ITALIAN;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[5];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory1);
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory1);
      assertEquals(5, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(21, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      Locale.forLanguageTag("org.exolab.jms.config.ConnectionFactories");
      connectionFactories0.addXAConnectionFactory(0, (XAConnectionFactory) null);
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories1.addConnectionFactory(0, connectionFactory0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      boolean boolean0 = connectionFactories2.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.unparsedEntityDecl("GR", "GR", "", "");
      xMLFilterImpl2.skippedEntity("GR");
      xMLReaderAdapter0.startPrefixMapping("GR", "Wk>]TT=|Z7IpMAV4Ls7");
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      xMLFilterImpl3.setErrorHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl1);
      xMLReaderAdapter0.startPrefixMapping("qtPp0{?m\"b", "zvN?S[\"e9ckdziTB)");
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl3);
      attributesImpl0.addAttribute("Wk>]TT=|Z7IpMAV4Ls7", "GR", ")C*%LpE", "T\";$q", "Xy<%");
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLFilterImpl1.setContentHandler(xMLReaderAdapter1);
      xMLReaderAdapter1.setEntityResolver(xMLFilterImpl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[25];
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Locale locale0 = Locale.UK;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      SAXParseException sAXParseException0 = new SAXParseException("u~twf1MPz%gA 4lCv<l", locator2Impl0);
      SAXParseException sAXParseException1 = new SAXParseException("org.exolab.castor.serializer", locator2Impl1, sAXParseException0);
      xMLFilterImpl0.fatalError(sAXParseException1);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      Locale locale1 = Locale.CHINA;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = connectionFactories0.getXATopicConnectionFactory();
      assertEquals(0, xATopicConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-1095), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(7, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 7, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-7), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.6220322287852307
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[3];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory1;
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[2] = queueConnectionFactory2;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Column : ");
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory2);
      connectionFactories0.isValid();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.getXAQueueConnectionFactory();
      try { 
        connectionFactories0.getQueueConnectionFactory((-1169));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.6145235356985044
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[3];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getConnectionFactoryCount();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locatorImpl0.setPublicId("org.exolab.jms.config.ConnectionFactories");
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      xMLReaderAdapter0.setDocumentLocator(locatorImpl0);
      connectionFactories0.getQueueConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.getConnectionFactory(0);
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Locale locale1 = Locale.CANADA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale2 = Locale.ENGLISH;
      Set<String> set0 = locale1.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange((String) null, 2147.2855025061845);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[2] = queueConnectionFactory0;
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[4] = queueConnectionFactory1;
      queueConnectionFactoryArray0[4] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[6] = queueConnectionFactory0;
      queueConnectionFactoryArray0[7] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.getQueueConnectionFactory(0);
      queueConnectionFactory2.setName("text/html");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories1.addQueueConnectionFactory(queueConnectionFactoryArray0[5]);
      try { 
        connectionFactories0.getQueueConnectionFactory((-3620));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = (-1);
      try { 
        connectionFactories0.getTopicConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(5, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = 0;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(20, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Locale locale0 = Locale.UK;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      int int0 = (-2098);
      try { 
        connectionFactories0.setQueueConnectionFactory((-2098), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.addXAQueueConnectionFactory(12, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 12, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "2E+J5\\M}JU";
      StringReader stringReader0 = new StringReader("2E+J5M}JU");
      String string1 = "N$.?c8xn";
      Locale.forLanguageTag("N$.?c8xn");
      StringWriter stringWriter1 = new StringWriter(0);
      stringWriter1.write((-1787));
      connectionFactories0.getTopicConnectionFactoryCount();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "N$.?c8xn", 1, (-2138));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory((-1195));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      int int0 = 301;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
      byte byte0 = (byte)1;
      int int1 = (-45);
      byte[] byteArray0 = new byte[0];
      try { 
        pipedOutputStream0.write(byteArray0, (-45), (-45));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl1.setContentHandler(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLFilterImpl4.setContentHandler(xMLFilterImpl2);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl6);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl3 = new AttributesImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl2.setContentHandler(xMLFilterImpl6);
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      int int0 = 328;
      Marshaller.enableDebug = false;
      try { 
        connectionFactories0.setXAQueueConnectionFactory(328, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-3492), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = false;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = null;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addXAConnectionFactory((-3242), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -3242, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter(9);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(9);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateTopicConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      int int0 = 0;
      URI uRI0 = MockURI.aHttpURI;
      // Undeclared exception!
      try { 
        MockURI.parseServerAuthority((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-35);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-35), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 38;
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(38, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(parserAdapter0);
      xMLReaderAdapter0.startPrefixMapping("}", (String) null);
      xMLFilterImpl1.setErrorHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(xMLFilterImpl3);
      xMLFilterImpl0.setContentHandler(xMLReaderAdapter1);
      xMLReaderAdapter1.setEntityResolver(xMLFilterImpl1);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl5.setContentHandler(xMLReaderAdapter1);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      try { 
        connectionFactories0.getXATopicConnectionFactory(1563);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      xMLFilterImpl4.setParent(xMLFilterImpl2);
      attributes2Impl0.getIndex("\"[U:rG,*kY;>SzP", "stW");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      xMLFilterImpl0.setParent(xMLFilterImpl2);
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl1.setContentHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      attributes2Impl0.getValue(")s916]^", "");
      attributes2Impl2.getLength();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl3);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "\"[U:rG,*kY;>SzP");
      StringWriter stringWriter2 = stringWriter1.append('J');
      stringWriter2.append((CharSequence) "\"[U:rG,*kY;>SzP");
      stringWriter1.append('B');
      stringWriter2.append((CharSequence) "");
      StringWriter stringWriter3 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      StringWriter stringWriter4 = new StringWriter();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = (-1528);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-1528));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      xMLFilterImpl0.setParent(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.unparsedEntityDecl("xmlns", "xmlns", "", "");
      xMLFilterImpl0.skippedEntity("xmlns");
      xMLReaderAdapter0.startPrefixMapping("xmlns", "");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      xMLReaderAdapter0.startPrefixMapping("}", "zvN?S[\"e9ckdziTB)");
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl1);
      xMLFilterImpl0.setDTDHandler(xMLFilterImpl4);
      attributesImpl0.addAttribute("", "xmlns", ")sC@*%LpE", "mapper.invalidParameterIndex", "Nl@");
      AttributesImpl attributesImpl1 = new AttributesImpl(attributesImpl0);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      xMLFilterImpl2.setContentHandler(xMLReaderAdapter1);
      xMLReaderAdapter1.setEntityResolver(xMLFilterImpl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      Locale locale0 = Locale.JAPAN;
      locale0.getUnicodeLocaleAttributes();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        linkedList0.remove(1406);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1406, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      int int0 = 0;
      Marshaller.enableDebug = false;
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
      MockFile.createTempFile("9kY7{R", "C(uyQlv`Wzy@vzb");
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockFile mockFile0 = new MockFile("Bad QName hvalue :'", "Bad QName hvalue :'");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Colum3n : ");
      Locale.forLanguageTag("");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      try { 
        connectionFactories1.getConnectionFactory(47);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(83, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 83, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.6855966703594754
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      connectionFactories0.marshal((Writer) stringWriter0);
      String string0 = null;
      connectionFactories0.validate();
      int int0 = (-1268);
      int int1 = (-910);
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-910));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockFile mockFile0 = new MockFile("Bad QName value :'");
      mockFile0.toURI();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Column : ");
      Locale.forLanguageTag("Bad QName value :'");
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      MockFile mockFile0 = new MockFile("Bad QName value :'");
      mockFile0.getCanonicalPath();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object object0 = new Object();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      Set<String> set1 = locale0.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList2, (Collection<String>) set0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1, locale_FilteringMode2);
      Locale locale1 = Locale.ITALIAN;
      locale1.getUnicodeLocaleAttributes();
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set1, locale_FilteringMode3);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) list1, locale_FilteringMode4);
      Collection<Locale> collection0 = null;
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("", 1981.533);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // weight=1981.533
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXATopicConnectionFactory();
      pipedInputStream0.markSupported();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      MockFile.createTempFile("PQ!3dAa=Xbx~((|", "YYAo");
      Locale locale0 = Locale.PRC;
      locale0.toLanguageTag();
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      locale1.hasExtensions();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList3 = new LinkedList<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList3, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1, locale_FilteringMode1);
      locale1.stripExtensions();
      Locale locale2 = Locale.CHINESE;
      StringWriter stringWriter0 = new StringWriter();
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(10);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = 0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      connectionFactories0.getQueueConnectionFactory();
      try { 
        connectionFactories0.getQueueConnectionFactory((-1945));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[7];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory1;
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = null;
      int int0 = 5;
      try { 
        connectionFactories0.getTopicConnectionFactory(5);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = null;
      int int0 = 0;
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      String string0 = null;
      int int0 = 460;
      StringWriter stringWriter0 = new StringWriter(460);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory(460, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 460, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = null;
      int int0 = 460;
      StringWriter stringWriter0 = new StringWriter(460);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getQueueConnectionFactoryCount();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1253));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      assertEquals(0, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      SAXParseException sAXParseException0 = new SAXParseException("", locator2Impl1);
      xMLFilterImpl1.error(sAXParseException0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLReaderAdapter0.startPrefixMapping("}", "}");
      xMLFilterImpl1.setErrorHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      xMLFilterImpl1.setContentHandler(xMLReaderAdapter0);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl2);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      xMLFilterImpl2.setContentHandler(defaultHandler2_0);
      try { 
        connectionFactories0.getXAConnectionFactory((-2745));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "&";
      String string1 = null;
      String string2 = "/Y!YYUCi";
      MockFile mockFile0 = new MockFile("/Y!YYUCi");
      connectionFactories0.getXAQueueConnectionFactoryCount();
      MockFile mockFile1 = new MockFile(mockFile0, "BBY$CrRA1{quZmdo");
      MockFile mockFile2 = new MockFile(mockFile0, "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, true);
      Locale locale0 = new Locale("/Y!YYUCi");
      boolean boolean0 = false;
      MockPrintStream mockPrintStream1 = null;
      try {
        mockPrintStream1 = new MockPrintStream(mockPrintStream0, false, "&");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // &
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      String string0 = "PQ!3dAa=Xbx~((|";
      String string1 = "YYAo";
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLReaderAdapter0.startPrefixMapping("xmlns", "xmlns");
      xMLFilterImpl1.setErrorHandler(xMLFilterImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException((String) null, (Locator) null);
      SAXParseException sAXParseException1 = new SAXParseException("xmlns", (Locator) null, sAXParseException0);
      SAXParseException sAXParseException2 = new SAXParseException("R!S", "sLL54E_KANlNma", "R!S", (-1319), 1975, sAXParseException1);
      xMLFilterImpl3.error(sAXParseException2);
      xMLFilterImpl3.setContentHandler(xMLReaderAdapter0);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl2);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl2 = new AttributesImpl();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      xMLFilterImpl2.setContentHandler(defaultHandler0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      connectionFactories0.getXAConnectionFactory();
      try { 
        connectionFactories0.getXAConnectionFactory(107);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" is a bad entry for the whiteSpace value");
      stringReader0.read();
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
