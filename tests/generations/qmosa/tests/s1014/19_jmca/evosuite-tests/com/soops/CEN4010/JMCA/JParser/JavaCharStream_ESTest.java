/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 03:47:12 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockRandomAccessFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      StringReader stringReader0 = new StringReader("yGRv$X");
      stringReader0.skip((-2585L));
      stringReader0.close();
      int int0 = 4072;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4072, 6);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1343, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.119616824536736
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String string0 = "\\HRB";
      StringReader stringReader0 = new StringReader("HRB");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte)29;
      intArray0[1] = (int) (byte)29;
      intArray0[2] = (int) (byte)29;
      javaCharStream0.bufline = intArray0;
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.2961408970315507
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-55);
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)81;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader0 = new StringReader("h,@d#^JDH3H");
      stringReader0.read();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "n");
      stringReader0.markSupported();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("[fG");
      stringReader0.markSupported();
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = 'Q';
      charArray0[2] = 'S';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      charArray0[6] = 'Q';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("IV3#Z");
      stringReader1.skip(1);
      StringReader stringReader2 = new StringReader(".");
      StringReader stringReader3 = new StringReader("IV3#Z");
      StringReader stringReader4 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, 98, 3);
      StringReader stringReader5 = new StringReader(".");
      stringReader5.skip((-1203L));
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(1);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int int0 = (-1252);
      javaCharStream0.maxNextCharInd = (-1252);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8133224558281076
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-23L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)30;
      javaCharStream0.adjustBeginLineColumn((byte) (-48), 0);
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-37);
      byteArray0[8] = (byte) (-118);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.skip(0L);
      javaCharStream0.bufpos = 0;
      sequenceInputStream0.skip(0L);
      javaCharStream0.Done();
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((byte)58);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hi");
      StringReader stringReader0 = new StringReader("hi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[7] = 'U';
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)76;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      stringReader0.read();
      charArray0[1] = 'c';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      stringReader0.read();
      charArray0[5] = '\\';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[6] = '\'';
      stringReader0.close();
      charArray0[7] = 'S';
      javaCharStream0.inBuf = 1;
      javaCharStream0.prevCharIsCR = false;
      StringReader stringReader1 = new StringReader("hi");
      stringReader1.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(1, 104);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9732617547983051
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-1);
      char[] charArray0 = new char[1];
      charArray0[0] = 'h';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      int int1 = 13;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 13);
      javaCharStream0.adjustBeginLineColumn((-2990), 13);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.available = 0;
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.057494004176557
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.skip(0L);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92);
      javaCharStream0.readChar();
      javaCharStream0.maxNextCharInd = (-1);
      javaCharStream0.UpdateLineColumn('I');
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.147576009616535
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      javaCharStream0.ReadByte();
      javaCharStream0.available = (-1);
      javaCharStream0.nextCharInd = 83;
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      stringReader0.mark(0);
      stringReader0.close();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.85609578070349
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[fG");
      char[] charArray0 = new char[6];
      stringReader0.markSupported();
      charArray0[0] = 'Q';
      charArray0[1] = 'R';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      stringReader0.read(charArray0);
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("[fG");
      StringReader stringReader2 = new StringReader("[fG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 87, 1);
      javaCharStream0.prevCharIsCR = true;
      stringReader1.skip(609L);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('[', char0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[4] = 'c';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = 'o';
      charArray0[6] = 'o';
      stringReader0.close();
      charArray0[7] = 'a';
      javaCharStream0.inBuf = 1;
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.backup((-1));
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5531577432135644
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StringReader stringReader0 = new StringReader("SE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-937), 12);
      javaCharStream0.adjustBeginLineColumn((-937), (-937));
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.8185957892116846
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      javaCharStream0.getBeginLine();
      javaCharStream0.backup((byte)9);
      javaCharStream0.BeginToken();
      stringReader0.reset();
      javaCharStream1.AdjustBuffSize();
      javaCharStream1.BeginToken();
      stringReader0.skip(0L);
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(4088, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3399002341122688
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      byte[] byteArray0 = new byte[2];
      intArray0[8] = (int) (byte)9;
      byteArray0[1] = (byte)9;
      javaCharStream0.ReInit((Reader) stringReader0, 9, (int) (byte)9, 2048);
      javaCharStream0.getBeginLine();
      javaCharStream0.backup(9);
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      StringReader stringReader2 = new StringReader("<IK?pVl1B{%q;~4ZW:");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte)9, (byte)9);
      javaCharStream0.adjustBeginLineColumn((byte)9, (-1));
      assertEquals(2039, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)72;
      byteArray0[7] = (byte) (-37);
      byteArray0[8] = (byte) (-118);
      sequenceInputStream0.read(byteArray0);
      javaCharStream0.backup(900);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.819853186285054
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      byte[] byteArray0 = new byte[2];
      intArray0[8] = (int) (byte)9;
      byteArray0[1] = (byte)9;
      javaCharStream0.ReInit((Reader) stringReader0, 9, (int) (byte)9, 2048);
      javaCharStream0.getBeginLine();
      javaCharStream0.backup(9);
      javaCharStream0.BeginToken();
      stringReader0.reset();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.BeginToken();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringReader0.skip(1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      char char0 = javaCharStream0.readChar();
      assertEquals(3, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-37);
      byteArray0[8] = (byte) (-118);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read(byteArray0, (-1), (int) (byte) (-37));
      sequenceInputStream0.skip(0L);
      javaCharStream0.bufpos = 0;
      sequenceInputStream0.skip(0L);
      int int0 = javaCharStream0.getColumn();
      int int1 = javaCharStream0.getColumn();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.3604548990578045
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      stringReader0.read();
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[4] = 'c';
      charArray0[3] = 'D';
      stringReader0.mark(1);
      stringReader0.reset();
      charArray0[4] = 'F';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      stringReader0.close();
      charArray0[7] = 'S';
      javaCharStream0.inBuf = (-27);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[4];
      charArray0[3] = 'B';
      charArray0[1] = 'Q';
      stringReader0.read(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(12);
      stringReader0.markSupported();
      charBuffer0.clear();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1189, (-480));
      javaCharStream0.ReInit((Reader) stringReader0, 580, 2048, 580);
      javaCharStream0.getBeginLine();
      javaCharStream0.backup(4);
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2915336713312904
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn(10, 10);
      javaCharStream0.adjustBeginLineColumn(10, 2900);
      assertEquals(2900, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5531577432135644
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 680, 680, 0);
      javaCharStream0.adjustBeginLineColumn(4096, 162);
      javaCharStream0.getBeginLine();
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      javaCharStream0.ReInit((Reader) stringReader0, 1, (-1094), 0);
      charArray0[4] = 'c';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      stringReader0.close();
      charArray0[7] = 'S';
      int int0 = 1;
      javaCharStream0.inBuf = 1;
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1405621802437347
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte) (-19);
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte) (-44);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(byteArrayInputStream0, 376);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream1, (byte) (-128), 75, (byte) (-19));
      javaCharStream0.readChar();
      pushbackInputStream0.read(byteArray0);
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getColumn();
      assertEquals(1, javaCharStream0.getBeginColumn());
      assertEquals(8, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.4505610714894437
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)9;
      byteArray0[8] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, 4090);
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, (byte)9, (-2647), (byte)9);
      javaCharStream1.readChar();
      pushbackInputStream0.read(byteArray0);
      stringReader0.skip(0);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (byte)9, (byte)9);
      JavaCharStream javaCharStream4 = new JavaCharStream(byteArrayInputStream0, (-1), 0);
      char char0 = javaCharStream1.readChar();
      assertEquals(8, javaCharStream1.getBeginColumn());
      assertEquals('\t', char0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.935639938126464
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
      
      StringReader stringReader0 = new StringReader(" column ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 9, 9);
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.ReadByte();
      assertEquals(' ', char0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip(3637L);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int int0 = 2048;
      StringReader stringReader0 = new StringReader("::W");
      javaCharStream0.ReInit((Reader) stringReader0, (int) (byte)0, (int) (byte) (-48), (int) (byte)0);
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9069014163712663
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hi");
      StringReader stringReader1 = new StringReader("");
      stringReader1.skip(1180L);
      stringReader0.markSupported();
      StringReader stringReader2 = new StringReader("!D3aAQbHEaj~\"");
      char[] charArray0 = new char[7];
      charArray0[0] = '2';
      charArray0[1] = '2';
      charArray0[2] = '2';
      charArray0[4] = 'I';
      charArray0[5] = 'X';
      charArray0[6] = 'w';
      stringReader2.read(charArray0);
      stringReader1.skip(7);
      StringReader stringReader3 = new StringReader("hi");
      StringReader stringReader4 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 72, 1);
      stringReader2.skip(1);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('A');
      assertEquals(2, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[2] = 'c';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = '\\';
      charArray0[6] = '\'';
      stringReader0.close();
      charArray0[7] = 'S';
      javaCharStream0.inBuf = (int) 'c';
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.GetImage();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4201970930867764
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)9;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)9;
      byteArray0[7] = (byte)9;
      byteArray0[8] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(dataInputStream0);
      dataInputStream0.readInt();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, 4090);
      JavaCharStream javaCharStream2 = new JavaCharStream(pushbackInputStream0, (byte)9, (-2647), (byte)9);
      javaCharStream1.readChar();
      stringReader0.skip(0);
      JavaCharStream javaCharStream3 = new JavaCharStream(stringReader0, (byte)9, (byte)9);
      JavaCharStream javaCharStream4 = new JavaCharStream(pushbackInputStream0, (-1), 4089);
      try { 
        javaCharStream2.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4060395717163217
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte) (-120);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      byteArrayInputStream0.skip((byte) (-120));
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      javaCharStream0.BeginToken();
      StringReader stringReader1 = new StringReader("`rUrtG%,I$dvi^>5h");
      char[] charArray0 = new char[1];
      charArray0[0] = '\u000E';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader1.read(charBuffer0);
      stringReader1.skip((byte) (-99));
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(6);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 0, 0);
      char[] charArray0 = new char[9];
      javaCharStream0.bufpos = (int) 'U';
      charArray0[1] = 'c';
      charArray0[2] = 'y';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = 'y';
      charArray0[2] = '\u0015';
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      stringReader0.close();
      javaCharStream0.inBuf = 16;
      javaCharStream0.prevCharIsCR = false;
      StringReader stringReader1 = new StringReader("hi");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader1.skip(609L);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.340534377469851
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DzW`|");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.skip((-4153L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      byteArrayInputStream0.reset();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 128, 6, 863);
      StringReader stringReader0 = new StringReader("p");
      stringReader0.read();
      stringReader0.read();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.close();
      StringReader stringReader1 = new StringReader("p");
      stringReader1.markSupported();
      stringReader1.skip(0L);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.7013090971439206
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.bufpos = 0;
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 30, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[7] = 'U';
      charArray0[1] = 'U';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = '\\';
      charArray0[6] = '\'';
      stringReader0.close();
      charArray0[7] = 'S';
      StringReader stringReader1 = new StringReader("hPk3#KUd?K5h,Z*h\"");
      stringReader1.close();
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(92);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.049821369905457
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[fG");
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = 'c';
      charArray0[2] = 'Q';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("8<yR");
      stringReader1.skip(3);
      StringReader stringReader2 = new StringReader("8<yR");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 'G', 3);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2);
      char char0 = javaCharStream1.readChar();
      assertEquals(0, javaCharStream1.bufpos);
      assertEquals('8', char0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char char0 = 'c';
      JavaCharStream.hexval('c');
      StringReader stringReader0 = new StringReader(":$RPg#;HdEhY");
      JavaCharStream.hexval('b');
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6145877225382006
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'Q';
      stringReader0.read(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(12);
      charBuffer0.clear();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1189, (-480));
      javaCharStream0.ReInit((Reader) stringReader0, 600, 2048, 600);
      javaCharStream0.getBeginLine();
      javaCharStream0.backup(6);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.getEndLine();
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.readChar();
      assertEquals(1194, javaCharStream0.bufpos);
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0529173451376552
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character ^t line ");
      StringReader stringReader1 = new StringReader("8^NeF?");
      stringReader1.markSupported();
      char[] charArray0 = new char[7];
      charArray0[0] = '-';
      charArray0[1] = '}';
      charArray0[2] = ' ';
      charArray0[3] = '}';
      charArray0[4] = '5';
      charArray0[5] = 'R';
      charArray0[6] = '*';
      stringReader1.read(charArray0);
      stringReader1.skip(0L);
      StringReader stringReader2 = new StringReader("");
      StringReader stringReader3 = new StringReader("e");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 79, (-4771));
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('x');
      javaCharStream0.UpdateLineColumn('8');
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-4769), int0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.6120172700343436
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      byte[] byteArray0 = new byte[2];
      intArray0[8] = (int) (byte)9;
      byteArray0[1] = (byte)9;
      javaCharStream0.ReInit((Reader) stringReader0, 9, (int) (byte)9, 2048);
      javaCharStream0.getBeginLine();
      javaCharStream0.backup(9);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[4] = 'c';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = '\\';
      charArray0[6] = '\\';
      stringReader0.close();
      charArray0[7] = 'S';
      javaCharStream0.inBuf = (int) 'D';
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      int int0 = JavaCharStream.hexval('7');
      assertEquals(7, int0);
      
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int1 = JavaCharStream.hexval('2');
      assertEquals(2, int1);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.6284420050717298
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaCharStream javaCharStream1 = new JavaCharStream((Reader) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JavaCharStream.hexval('F');
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.340534377469851
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DzW`|");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.skip((-4153L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)78;
      byteArray0[2] = (byte)78;
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)9;
      byteArray0[5] = (byte)78;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      byteArrayInputStream0.reset();
      javaCharStream0.readChar();
      javaCharStream0.ExpandBuff(true);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('N', char0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'Q';
      charArray0[2] = 'J';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('a');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = '\\';
      charArray0[6] = '\'';
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Reader reader0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, (-1907));
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.7646308653001808
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.bufpos = 0;
      javaCharStream0.adjustBeginLineColumn(0, 10);
      sequenceInputStream0.close();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-33);
      sequenceInputStream0.read(byteArray0);
      javaCharStream0.adjustBeginLineColumn((-1679), 0);
      int int0 = javaCharStream0.getLine();
      assertEquals((-1679), javaCharStream0.getEndLine());
      assertEquals((-1679), int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.548890335981778
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hi");
      char char0 = '8';
      JavaCharStream.hexval('8');
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.getLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.9416747221226878
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character ^t line ");
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-40L));
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.skip((-1756L));
      char[] charArray0 = new char[3];
      charArray0[0] = 'i';
      charArray0[1] = 't';
      charArray0[2] = 'J';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("lA^S$f");
      stringReader0.close();
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[2] = 'y';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      charArray0[5] = 'y';
      charArray0[6] = '\u0015';
      stringReader0.close();
      char[] charArray1 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray1.length);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.6024679790977038
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('1');
      assertEquals(1, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('f');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)9;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)9;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.6742240505684243
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte)68;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, (-1821), 9);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      StringReader stringReader0 = new StringReader("");
      javaCharStream1.ReInit((Reader) stringReader0, 11, (-554), 4096);
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(0, javaCharStream0.getEndColumn());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.5144869299060917
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[6];
      charArray0[1] = 'Q';
      charArray0[2] = 'W';
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
      
      charArray0[3] = '\\';
      charArray0[4] = '+';
      stringReader0.reset();
      charArray0[5] = 'i';
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1), (-1524), 11);
      assertEquals((-1), javaCharStream0.bufpos);
      
      stringReader0.close();
      int int1 = JavaCharStream.hexval('e');
      assertEquals(14, int1);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "FNt");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('E');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 2398, 768);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5531577432135644
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      javaCharStream0.adjustBeginLineColumn(84, (-1));
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.199441202575269
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int[] intArray0 = new int[4];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      intArray0[2] = 0;
      intArray0[3] = 0;
      javaCharStream0.bufline = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.1374209665233663
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte) (-120);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, (byte)82);
      javaCharStream0.ReInit((InputStream) dataInputStream0, (-606), 4090, (int) (byte)0);
      int int0 = JavaCharStream.hexval('1');
      javaCharStream0.ReadByte();
      int int1 = JavaCharStream.hexval('1');
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      stringReader0.markSupported();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      char[] charArray0 = new char[9];
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte) (-36);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[0] = 'U';
      charArray0[1] = 'c';
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 1, 84);
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(84, int0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("N)a");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1536), 3491, 640);
      javaCharStream0.BeginToken();
      javaCharStream0.inputStream = (Reader) stringReader0;
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-1536), int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*b1:Wz]`/fRJk^ |");
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.045899801278006
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte) (-20);
      byteArray0[4] = (byte)69;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-18);
      byteArray0[7] = (byte)97;
      byteArray0[8] = (byte)104;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 92, 1, (-1363));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u001A', char0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.4983393353896088
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark((-3963));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      int int0 = (-137);
      javaCharStream0.Done();
      Reader reader0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('+');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.bufpos = 4096;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9174716867505905
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn(68, 76);
      javaCharStream0.GetImage();
      javaCharStream0.getBeginColumn();
      javaCharStream0.ExpandBuff(false);
      assertEquals(69, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.1766453509367873
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)121;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte) (-27);
      byteArray0[4] = (byte) (-49);
      byteArray0[5] = (byte)13;
      byteArray0[6] = (byte)15;
      byteArray0[7] = (byte)80;
      byteArray0[8] = (byte)77;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 94);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('y', char0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'Q';
      charArray0[2] = 'J';
      stringReader0.read();
      charArray0[3] = '\\';
      charArray0[4] = '+';
      charArray0[5] = 'i';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 1793, 1793);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader1, (-1), 81, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('D');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.mark(77);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      javaCharStream0.FillBuff();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      MockRandomAccessFile mockRandomAccessFile0 = null;
      try {
        mockRandomAccessFile0 = new MockRandomAccessFile("Dw:eRQufl8", "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal mode \"com.soops.CEN4010.JMCA.JParser.JavaCharStream\" must be one of \"r\", \"rw\", \"rws\", or \"rwd\"
         //
         verifyException("java.io.RandomAccessFile", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)30;
      byteArray0[7] = (byte) (-37);
      byteArray0[8] = (byte) (-118);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read(byteArray0, (-1), (int) (byte) (-37));
      sequenceInputStream0.skip(0L);
      javaCharStream0.bufpos = 0;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      sequenceInputStream0.skip(0L);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-242), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2647), 93, (byte)9);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hi");
      StringReader stringReader0 = new StringReader("hi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[7] = 'U';
      stringReader0.read();
      charArray0[1] = 'c';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      stringReader0.read();
      charArray0[5] = '\\';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[6] = '\'';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hi");
      stringReader0.close();
      charArray0[7] = 'S';
      javaCharStream0.inBuf = 1;
      javaCharStream0.prevCharIsCR = false;
      StringReader stringReader1 = new StringReader("hi");
      stringReader1.markSupported();
      stringReader1.skip(609L);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.bufpos = 4096;
      int int0 = 10;
      stringReader0.skip(4096);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.157280995708096
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)85;
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.skip((-27L));
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(dataInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, (-1161), 1183, 2340);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte byte0 = (byte)25;
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 10, (-384));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte)51;
      byteArray0[4] = (byte)57;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)85;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 79, 1);
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\uFFFD', char0);
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-239), (-239), 3863);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte)86;
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte) (-54);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)14;
      byteArray0[7] = (byte)35;
      byteArray0[8] = (byte)92;
      pipedOutputStream0.write(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-1215), (-1112));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = 0;
      intArray0[7] = (-1);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)90;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)85;
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.skip((-27L));
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(dataInputStream0, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1, (-1161), 1183, 2340);
      String string0 = javaCharStream0.GetImage();
      assertNotNull(string0);
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.1817319207582866
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      StringReader stringReader1 = new StringReader("");
      stringReader1.close();
      StringReader stringReader2 = new StringReader("");
      stringReader2.markSupported();
      stringReader0.skip(1191L);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((Reader) null, (-611), 1, (-552));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.199325386865874
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.adjustBeginLineColumn(0, 3275);
      javaCharStream0.backup((-1692));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'Q';
      charArray0[2] = 'J';
      stringReader0.read();
      charArray0[3] = '\\';
      charArray0[4] = '+';
      charArray0[5] = 'i';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 1793, 1793);
      javaCharStream0.backup((-242));
      assertEquals(241, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.209605810084551
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hi");
      StringReader stringReader0 = new StringReader("hi");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[7] = 'U';
      stringReader0.read();
      charArray0[1] = 'c';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      charArray0[4] = 'F';
      stringReader0.read();
      charArray0[5] = '\\';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[6] = '\'';
      stringReader0.close();
      charArray0[7] = 'S';
      javaCharStream0.inBuf = (-1);
      javaCharStream0.prevCharIsCR = false;
      StringReader stringReader1 = new StringReader("hi");
      stringReader1.markSupported();
      stringReader1.skip(609L);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.3128868859883
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.skip((-27L));
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)58;
      byteArray0[3] = (byte) (-48);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)72;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-37);
      byteArray0[8] = (byte) (-118);
      sequenceInputStream0.read(byteArray0);
      sequenceInputStream0.read(byteArray0, (-1), (int) (byte) (-37));
      sequenceInputStream0.skip(0L);
      javaCharStream0.bufpos = 0;
      sequenceInputStream0.skip(0L);
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip((-1333L));
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.5179872908529677
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn(0, 1);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[fG");
      char[] charArray0 = new char[6];
      stringReader0.markSupported();
      charArray0[0] = 'Q';
      charArray0[1] = 'R';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      StringReader stringReader1 = new StringReader("[fG");
      stringReader1.skip(2121L);
      StringReader stringReader2 = new StringReader(",##)L+_E");
      StringReader stringReader3 = new StringReader(",##)L+_E");
      StringReader stringReader4 = new StringReader("");
      StringReader stringReader5 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader5, 1, (-421));
      javaCharStream0.adjustBeginLineColumn(87, 95);
      assertEquals(95, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 4911);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 4911, 4062);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'F';
      charArray0[3] = '&';
      charArray0[4] = 'H';
      charArray0[5] = 'S';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.maxNextCharInd = (-835);
      javaCharStream0.prevCharIsCR = false;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[fG");
      char[] charArray0 = new char[6];
      stringReader0.markSupported();
      charArray0[0] = 'Q';
      charArray0[1] = 'R';
      charArray0[3] = 'Q';
      charArray0[4] = 'Q';
      charArray0[5] = 'Q';
      stringReader0.read(charArray0);
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("[fG");
      StringReader stringReader2 = new StringReader("[fG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 3, 3);
      stringReader0.skip(0L);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('[', char0);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte)9;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, (byte) (-93));
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('w', char0);
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.336724853660327
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Dw:eRQufl8");
      stringReader0.read();
      stringReader0.mark(68);
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Dw:eRQufl8");
      stringReader0.reset();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      javaCharStream0.tokenBegin = 0;
      javaCharStream0.Done();
      stringReader0.ready();
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.ReInit((Reader) stringReader0, 0, 0, 0);
      stringReader0.read();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedOutputStream0.write(567);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.1090407622471203
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte) (-99);
      byteArray0[3] = (byte) (-120);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, (byte)14);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 66, (-1327), 4086);
      javaCharStream0.readChar();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, (byte)84);
      assertEquals(0, byteArrayInputStream0.available());
      
      pushbackInputStream1.read(byteArray0);
      StringReader stringReader0 = new StringReader("DKSX<gsHz@jD{t");
      stringReader0.markSupported();
      char char0 = javaCharStream0.readChar();
      assertEquals('T', char0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[9];
      charArray0[0] = 'A';
      charArray0[1] = 'a';
      charArray0[2] = 'a';
      charArray0[3] = '=';
      charArray0[4] = 'a';
      charArray0[5] = 'a';
      charArray0[6] = 'a';
      charArray0[7] = 'a';
      charArray0[8] = 'a';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.mark(81);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringReader0.read();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1dWA38$)+\"RbWwJ9ppf");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1589, (-296));
      char[] charArray0 = new char[6];
      charArray0[0] = '_';
      charArray0[1] = '\\';
      charArray0[2] = '_';
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      charArray0[3] = 'U';
      charArray0[4] = '_';
      charArray0[5] = 'U';
      stringReader0.read(charArray0);
      char[] charArray1 = javaCharStream0.GetSuffix(84);
      assertEquals(84, charArray1.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, (InputStream) null);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 2884, 2, 1419);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0287375017310743
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte)111;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)111, (byte)85);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, 1);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 9, (-1543), 7);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('E');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.901773211243061
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      StringReader stringReader1 = new StringReader(".>>kRf");
      StringReader stringReader2 = new StringReader("]@34h_FF(#nL2Y'}L");
      stringReader2.markSupported();
      char[] charArray0 = new char[6];
      charArray0[0] = 'M';
      charArray0[1] = 'U';
      charArray0[2] = '=';
      charArray0[3] = ']';
      charArray0[4] = 'O';
      charArray0[5] = '';
      stringReader0.read(charArray0);
      stringReader1.skip(0L);
      StringReader stringReader3 = new StringReader("");
      StringReader stringReader4 = new StringReader("TpY6+zbrX<>~bgWS%z");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader4, 2012, 82);
      stringReader0.skip(609L);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('T', char0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 148);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 0, 148);
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StringReader stringReader0 = new StringReader("B\"8D\"%-[|l(?1x3;~ l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.ReInit((Reader) stringReader0, (-1752), 2051);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = (-1);
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.read();
      sequenceInputStream0.skip(0L);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream1, sequenceInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream2, (-859), (-1227), (-859));
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=0.48831978220001765
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "hi");
      StringReader stringReader0 = new StringReader("hi");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte)98;
      byteArray0[4] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('.');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }
}
