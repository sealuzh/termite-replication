/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 05:34:42 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8244965477591744
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)4;
      byteArray0[2] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, 59, (byte)0);
      javaCharStream0.bufsize = (int) (byte)109;
      javaCharStream0.GetImage();
      byteArrayInputStream0.reset();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      javaCharStream0.bufpos = (int) '@';
      charArray0[2] = 'S';
      charArray0[3] = 'g';
      stringReader0.read(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 55, (-356));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('m', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0791755700068084
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.mark(1);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-21), (byte) (-21));
      stringReader0.read();
      stringReader0.markSupported();
      stringReader0.reset();
      JavaCharStream.hexval('a');
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-21), (byte) (-21));
      boolean boolean0 = javaCharStream0.prevCharIsLF;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (int) (byte) (-21), 2357);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8705256716602552
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      stringReader1.markSupported();
      stringReader0.reset();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte) (-121);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte) (-58);
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte)78;
      byteArray0[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\f', char0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("VO5");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.readChar();
      javaCharStream0.GetSuffix(1);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("f~#^5,pTZ_1l");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 886, 886);
      stringReader1.reset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.backup(8);
      stringReader1.read();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(0);
      assertEquals(4089, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte byte0 = (byte)8;
      byte byte1 = (byte)109;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)14;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)0, 59, (byte)14);
      byteArrayInputStream0.read(byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-594), (-1113), (int) (byte)109);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8705256716602552
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, 59, (byte)14);
      javaCharStream0.bufsize = (int) (byte)109;
      javaCharStream0.GetImage();
      byteArrayInputStream0.reset();
      byteArrayInputStream0.skip((-1));
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[4];
      byteArrayInputStream0.reset();
      charArray0[0] = '4';
      javaCharStream0.bufpos = (int) '@';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 0, (-1547));
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 11, (byte)14, 13);
      javaCharStream1.BeginToken();
      javaCharStream2.GetImage();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\r', char0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)8;
      StringReader stringReader0 = new StringReader("Ne/+HV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (byte)11, (byte)11);
      javaCharStream0.backup(86);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9061547465398496
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ip@-}0_");
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)109, 1);
      javaCharStream0.backup(2);
      stringReader0.read();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getColumn();
      assertEquals(4094, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.059714443944368
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StringReader stringReader0 = new StringReader("@B^pBv{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2846), 92);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(1);
      JavaCharStream.hexval('3');
      javaCharStream0.ReadByte();
      char char0 = javaCharStream0.readChar();
      assertEquals(92, javaCharStream0.getBeginColumn());
      assertEquals('@', char0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.010761683258147
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      StringReader stringReader0 = new StringReader("{.=f");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 126, 811);
      javaCharStream0.adjustBeginLineColumn((-1), 811);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4011, 811, 10);
      javaCharStream1.AdjustBuffSize();
      stringReader0.read();
      CharBuffer.allocate(68);
      CharBuffer.allocate(1);
      javaCharStream1.GetImage();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.822456686505235
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%j`;w.{kS<`4,");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3851), (-224));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getColumn();
      assertEquals((-3851), javaCharStream0.getBeginLine());
      assertEquals((-224), int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.9514940063202075
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)13;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 11, 59, (byte)14);
      javaCharStream0.bufsize = (int) (byte)109;
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[4];
      charArray0[0] = '4';
      javaCharStream0.bufpos = (int) '@';
      charArray0[2] = 'S';
      charArray0[3] = 'g';
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.7875058172986216
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      pipedInputStream0.mark(10);
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("hmzxZh|^E,A3X@");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 575, 4067, 1254);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('h', char0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("Q'o4G'|EntUttamt");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-101), 772);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, (-920));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sp\"k");
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("u#LE");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 13, (byte)34);
      javaCharStream0.nextCharInd = 0;
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('#', char0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NlM;w PO>'ukb");
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = '@';
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-21);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.720193459219825
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("'l7@G?y6WI$H+?O");
      StringReader stringReader1 = new StringReader("\f4\" 1^QJJ9Xp4\"");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 10);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\f', char0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.236205422297672
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringReader stringReader0 = new StringReader("696/as3Lbz>");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-826), 88);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.ReInit((Reader) stringReader0, 2181, 77);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.backup(1891);
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(77, 2181);
      javaCharStream0.getEndColumn();
      javaCharStream0.getLine();
      int int0 = javaCharStream0.getLine();
      assertEquals(2181, javaCharStream0.getEndColumn());
      assertEquals(77, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1998139591112977
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)109;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip((-1161L));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 72, 1085, (-2679));
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      javaCharStream0.BeginToken();
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.getEndLine();
      String string0 = javaCharStream0.GetImage();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals("m", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.659080698762253
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-801), (byte)11, (byte)0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getEndLine();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u0000', char0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8499960624928429
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 60, 60);
      javaCharStream0.backup(92);
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      stringReader0.mark(3062);
      javaCharStream0.adjustBeginLineColumn(735, 95);
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      stringReader0.read();
      CharBuffer.allocate(95);
      CharBuffer.allocate(3062);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      assertEquals(735, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "' +IxRZQju");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-826), 88);
      javaCharStream0.prevCharIsCR = false;
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 91, 91);
      char[] charArray0 = new char[7];
      charArray0[0] = 'Q';
      charArray0[1] = ':';
      charArray0[2] = '%';
      charArray0[3] = '2';
      charArray0[4] = '*';
      charArray0[5] = '+';
      charArray0[6] = 'Z';
      javaCharStream1.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.1441432707891592
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("696/as3Lbz>");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-826), 88);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.ReInit((Reader) stringReader0, 2181, 77);
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.getEndColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(77, 2181);
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(2181, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.010761683258147
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = 'i';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = 'j';
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 94, 94, 94);
      javaCharStream0.adjustBeginLineColumn(88, 88);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      CharBuffer charBuffer0 = CharBuffer.allocate(87);
      CharBuffer.allocate(88);
      charBuffer0.clear();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'a';
      charArray0[1] = 'c';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      javaCharStream0.bufpos = (int) 'J';
      charArray0[1] = 'c';
      javaCharStream0.backup(1);
      charArray0[6] = '\'';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 74
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Nv/4Ta,g5;sv^^wj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2846), 92);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(1);
      javaCharStream0.GetSuffix(1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedInputStream0.close();
      try { 
        pipedOutputStream0.write(56);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1443269941897842
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 76, 76);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      javaCharStream0.backup(92);
      javaCharStream0.inputStream = (Reader) stringReader0;
      JavaCharStream.hexval('3');
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      int int0 = javaCharStream0.getLine();
      assertEquals(4006, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sp\"k");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1), (byte) (-101), (byte)117);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals((-100), int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.487798380001651
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      stringReader1.markSupported();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 39, 1989, 1989);
      javaCharStream0.readChar();
      javaCharStream0.UpdateLineColumn('^');
      assertEquals(1990, javaCharStream0.getColumn());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9221134307541388
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      stringReader1.markSupported();
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("' +IxRZQju");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 39, 1989, 1989);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.adjustBeginLineColumn((-1), 39);
      assertEquals(39, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1333820386273419
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("7PtxaG!DUEMne");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-252), 1423);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[9];
      charArray0[0] = '7';
      charArray0[1] = '7';
      charArray0[2] = '9';
      charArray0[3] = '7';
      charArray0[4] = 'P';
      javaCharStream0.backup((-1367));
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(382, 92);
      JavaCharStream.hexval('7');
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('a', char0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.6901869825469116
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("7PtxaG!DUEMne");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1423, 1, 1423);
      javaCharStream0.backup((-921));
      javaCharStream0.backup(71);
      stringReader0.close();
      javaCharStream0.backup(1423);
      javaCharStream0.backup((-909));
      JavaCharStream.hexval('E');
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = 'i';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = 'j';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 6, 1798);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('e');
      assertEquals(14, int0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sp\"k");
      byteArray0[0] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (byte)117, (byte)34);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader("}IpVb&I>NvC)9GY");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("\"o");
      stringReader0.read();
      StringReader stringReader2 = new StringReader("}IpVb&I>NvC)9GY");
      char[] charArray0 = new char[1];
      charArray0[0] = 'e';
      stringReader2.read(charArray0);
      stringReader2.read();
      stringReader0.markSupported();
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0050683555949265
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Nv/4Ta,g5;sv^^wj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2846), (-2846));
      javaCharStream0.BeginToken();
      javaCharStream0.backup(1);
      char[] charArray0 = new char[3];
      charArray0[0] = 'g';
      charArray0[1] = '^';
      charArray0[2] = '^';
      stringReader0.read(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-2846), javaCharStream0.getBeginLine());
      assertEquals('5', char0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.1352402575267164
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)74, 69, 69);
      javaCharStream0.backup(1180);
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      javaCharStream0.backup(1180);
      stringReader0.read(charArray0);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn('\u0000', (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream1 = new PipedInputStream(87);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      CharBuffer.allocate(1180);
      javaCharStream0.GetImage();
      assertEquals(5, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)8;
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("696/as3Lbz>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-224), (-224));
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('6', char0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      byte byte0 = (byte)4;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-24);
      byteArray0[1] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pushbackInputStream0, 71, 1971, (-412));
      javaCharStream1.ReInit((InputStream) pushbackInputStream0);
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-569));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = JavaCharStream.hexval('4');
      assertEquals(4, int0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.962109677528301
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-826), 88);
      javaCharStream0.prevCharIsCR = true;
      stringReader0.ready();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(350, 350);
      assertEquals(350, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.1352402575267164
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)74, 69, 69);
      javaCharStream0.backup(1180);
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      javaCharStream0.backup(1180);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      pipedInputStream0.mark(86);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream1 = new PipedInputStream(87);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(0, (byte)74);
      assertEquals(5, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.1727640532816053
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1024), (byte)26, (byte)13);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      char[] charArray0 = new char[3];
      charArray0[0] = '4';
      charArray0[1] = '4';
      charArray0[2] = 'S';
      stringReader0.read(charArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(69);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((byte)14, (-1024));
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(14, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.939021599034533
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      stringReader1.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 1, 6);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.adjustBeginLineColumn(1417, 957);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      stringReader1.read();
      CharBuffer.allocate(522);
      CharBuffer.allocate(2945);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(18, (-1));
      javaCharStream0.readChar();
      char char0 = javaCharStream0.readChar();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      assertEquals('R', char0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.1214203231153572
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("[!Q[RGQ#$g$");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 0);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[2];
      charArray0[0] = '[';
      charArray0[1] = 'P';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.get(charArray0);
      javaCharStream0.backup((-4150));
      stringReader0.read(charBuffer0);
      javaCharStream0.getBeginLine();
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = (-1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int1 = (-1);
      int int2 = 10;
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), (-1), 10);
      javaCharStream0.bufcolumn = null;
      javaCharStream0.GetImage();
      javaCharStream0.inBuf = (-1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      stringReader0.markSupported();
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1290), 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1411), 92);
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      stringReader2.reset();
      stringReader1.read();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.BeginToken();
      assertEquals((-1411), javaCharStream0.getBeginLine());
      assertEquals('I', char0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7671949977916748
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ScI9#9|<X) peDAG");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 825, 825);
      javaCharStream0.backup(209);
      javaCharStream0.ExpandBuff(true);
      char[] charArray0 = new char[3];
      charArray0[1] = 's';
      charArray0[2] = '1';
      stringReader0.read(charArray0);
      javaCharStream0.backup(55);
      javaCharStream0.ReadByte();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(1973, 3);
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 24, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6424614604588819
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("CVJL;)'$K-#[");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4107, (byte)74);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.FillBuff();
      javaCharStream0.BeginToken();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.5717178057889214
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)74, 69, 69);
      javaCharStream0.backup(1180);
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      charArray0[2] = '\'';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      javaCharStream0.readChar();
      javaCharStream0.backup(94);
      JavaCharStream.hexval('c');
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      assertEquals(2824, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      stringReader1.markSupported();
      stringReader0.reset();
      int int0 = JavaCharStream.hexval('C');
      assertEquals(12, int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "";
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = 'i';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = 'j';
      stringReader0.read(charArray0);
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 81, 6);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.0050683555949265
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Nv/4Ta,g5;sv^^wj");
      StringReader stringReader1 = new StringReader("^Nv/4Ta,g5;sv^^wj");
      stringReader1.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 4072);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[2] = 's';
      charArray0[4] = 'F';
      charArray0[1] = '\\';
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("jv^F");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4079, (-221));
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, 4053, 4053, 969);
      javaCharStream1.backup(0);
      javaCharStream1.ReInit((Reader) stringReader0, 969, 4053, 4079);
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-221), int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hI,G7cA{[/");
      StringReader stringReader1 = new StringReader("hI,G7cA{[/");
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.0590443660090973
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%j`;w.{kS<`4,");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3851), (-224));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.GetSuffix(1867);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[2] = '\\';
      charArray0[4] = '\u0019';
      charArray0[5] = '\u0019';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, 6, 1793);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8848713335781604
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)74, 69, 69);
      javaCharStream0.backup(1180);
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      javaCharStream0.backup(1180);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream1 = new PipedInputStream(87);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      // Undeclared exception!
      try { 
        CharBuffer.allocate((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.mark(2480);
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "J4*8$l?Yp9'9|F$KEA");
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-688), 763, 0);
      javaCharStream0.backup(763);
      stringReader0.close();
      javaCharStream0.backup((-1));
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -762
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.9722048958684313
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "P\"k");
      byteArray0[2] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      JavaCharStream.hexval('D');
      StringReader stringReader0 = new StringReader("P\"k");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte) (-101), (byte)117);
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1299), (-1146));
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.1383972463477243
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)74, 69, 69);
      javaCharStream0.backup(1180);
      char[] charArray0 = new char[5];
      charArray0[0] = '\'';
      javaCharStream0.backup(1180);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream1 = new PipedInputStream(87);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      assertEquals(6, javaCharStream0.bufpos);
      
      javaCharStream0.GetImage();
      assertEquals(6, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.276422685805818
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 69);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream1, 2883, 11, (byte)74);
      javaCharStream0.backup(18);
      javaCharStream0.backup(1180);
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      javaCharStream0.BeginToken();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream2 = new PipedInputStream(69);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream2, 11, (-1580));
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9027480578409661
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      stringReader0.markSupported();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2207), 0);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("");
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("696/eas3Lbz>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-224), (-224));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      int int0 = javaCharStream0.getLine();
      assertEquals((-224), javaCharStream0.getBeginColumn());
      assertEquals((-224), int0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9298490955258454
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NlM;w PO>'ukb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 225, 1705);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = charBuffer0.get(charArray0);
      stringReader0.read(charBuffer1);
      javaCharStream0.getBeginLine();
      javaCharStream0.getLine();
      javaCharStream0.Done();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[6];
      charArray0[1] = 'I';
      stringReader0.reset();
      int int0 = JavaCharStream.hexval('0');
      assertEquals(0, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.08831978220001763
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      stringReader0.mark(0);
      char[] charArray0 = new char[6];
      stringReader0.read(charArray0);
      stringReader0.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 6, 0, 85);
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.2568646526994761
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = 'i';
      charArray0[3] = '/';
      charArray0[4] = '/';
      charArray0[5] = '/';
      charArray0[6] = 'j';
      stringReader0.read(charArray0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.get(charArray0);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 57, 1798);
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('2');
      assertEquals(2, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%j`;w.{kS<`4,");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5316410677211536
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sp\"k");
      byteArray0[0] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 2814);
      StringReader stringReader0 = new StringReader("%2SiB^ zH05sWLK");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 10);
      javaCharStream0.bufcolumn = null;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream.hexval('A');
      stringReader0.reset();
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StringReader stringReader0 = new StringReader("5m/Ix@*");
      StringReader stringReader1 = new StringReader("5m/Ix@*");
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "tQHl!");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)117;
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)117;
      byteArray0[4] = (byte)117;
      byteArray0[5] = (byte)117;
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte) (-101);
      byteArray0[8] = (byte)117;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1, (byte)117);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 92, (-1), 92);
      javaCharStream0.adjustBeginLineColumn((-2805), (byte)117);
      assertEquals((-2804), javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5792331346113395
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)8;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArrayInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 1697, 74);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\u000B', char0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.9092335993725373
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hI,G7cA{[/");
      stringReader0.read();
      stringReader0.mark(104);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 373);
      stringReader0.reset();
      javaCharStream0.ExpandBuff(false);
      int int0 = (-1);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 0);
      javaCharStream1.ReadByte();
      javaCharStream1.readChar();
      javaCharStream0.Done();
      stringReader0.ready();
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((Reader) stringReader0, (-1), 59, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.mark(1695);
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0246057783184221
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      StringReader stringReader2 = new StringReader("4!j27g");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringReader1.reset();
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-1407), 2356);
      javaCharStream0.readChar();
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.0431918705451206
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 76, (byte)109, 11);
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)14);
      StringReader stringReader0 = new StringReader("F)C5[Io");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream1.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1224);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'h';
      charArray0[1] = '~';
      charArray0[2] = '`';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.GetSuffix(559);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      int int0 = JavaCharStream.hexval('6');
      assertEquals(6, int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      stringReader1.markSupported();
      stringReader0.reset();
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7201934592198251
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'U';
      charArray0[1] = 'c';
      charArray0[2] = 's';
      charArray0[3] = 'D';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[4] = 'F';
      charArray0[1] = '\\';
      javaCharStream0.backup(1);
      charArray0[6] = '\'';
      javaCharStream0.ReInit((Reader) stringReader0, 1, 1, 1);
      stringReader0.read(charArray0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.3522610643775668
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)109;
      byteArray0[1] = (byte)109;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)109;
      byteArray0[7] = (byte)109;
      byteArray0[8] = (byte)4;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 72, 1085, (-2679));
      javaCharStream0.GetImage();
      javaCharStream0.AdjustBuffSize();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      javaCharStream0.BeginToken();
      byteArrayInputStream0.close();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.31424474485062986
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.flush();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-5064), 1, (-5064));
      StringReader stringReader0 = new StringReader("}_qd7");
      javaCharStream0.maxNextCharInd = 0;
      javaCharStream0.ReInit((Reader) stringReader0, 1, 0, 0);
      assertEquals((-1), javaCharStream0.bufpos);
      
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3373496508692947
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      stringReader0.skip(0L);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 0, 0);
      char[] charArray0 = new char[1];
      JavaCharStream.hexval('b');
      javaCharStream0.backup((-935));
      charArray0[0] = 'X';
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, (-242), (-242), 4088);
      javaCharStream0.Done();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[0] = 'i';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = 'j';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 81, 6, 6);
      javaCharStream0.GetSuffix(1);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getBeginLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("EL[WeXt43He7uW7]Xf");
      StringReader stringReader1 = new StringReader("EL[WeXt43He7uW7]Xf");
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream.hexval('1');
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(9);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.31424474485062986
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("^Nv/4Ta,g5;sv^^wj");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2846), 92);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      javaCharStream0.FillBuff();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      char[] charArray0 = new char[6];
      charArray0[0] = 'B';
      charArray0[1] = 'Q';
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StringReader stringReader0 = new StringReader("VO5");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.buffer;
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.5004024235381879
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 0, 0);
      char[] charArray0 = new char[9];
      charArray0[0] = 'B';
      charArray0[1] = 'c';
      PipedInputStream pipedInputStream0 = new PipedInputStream(9);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(178, 82);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2101, 2101, 2101);
      String string0 = "/Ur:Xnn{A$^=";
      StringReader stringReader0 = new StringReader("/Ur:Xnn{A$^=");
      char[] charArray0 = new char[7];
      charArray0[0] = 's';
      charArray0[1] = 'j';
      charArray0[2] = 'S';
      charArray0[3] = 'U';
      charArray0[4] = 'F';
      charArray0[6] = '\\';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NlM;w PO>'ukb");
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("kYsC{M(Fk");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4087, 4087);
      javaCharStream0.BeginToken();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kYsC{M(Fk");
      javaCharStream0.getBeginColumn();
      javaCharStream0.UpdateLineColumn('g');
      assertEquals(0, javaCharStream0.bufpos);
      
      javaCharStream0.ReInit((Reader) stringReader0, 1, (-476), 7);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null, (-1), (-1589));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2464), 1856, 1856);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("%j`;w.{kS<`4,");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      StringReader stringReader1 = new StringReader("%j`;w.{kS<`4,");
      stringReader1.mark(13);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, (-2441), (byte)83);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sp\"k");
      byteArray0[0] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      StringReader stringReader0 = new StringReader("");
      stringReader0.ready();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2430, (-2913), 61);
      javaCharStream0.nextCharInd = (int) (byte) (-101);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.7060571156426696
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader1 = new StringReader("fi[Ux");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 4079, (byte) (-21));
      javaCharStream0.available = (int) (byte) (-21);
      stringReader1.ready();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('f', char0);
  }

  /**
  //Test case number: 124
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      try { 
        JavaCharStream.hexval('|');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)8;
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 447, (byte) (-21));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      JavaCharStream javaCharStream1 = null;
      try {
        javaCharStream1 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 1285, 1285);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 10, (-384));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.0986122886681098
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.skip(0L);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(92);
      pipedOutputStream0.connect(pipedInputStream0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-18);
      byteArray0[2] = (byte)1;
      pipedOutputStream0.write(byteArray0);
      stringReader0.mark(11);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 3, 11);
      javaCharStream0.adjustBeginLineColumn((byte) (-19), (-99));
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      stringReader0.read(charArray0);
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1063), 0, 3720);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-943));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ixiKn5_~Txdmq");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 57, 57, 57);
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = 'R';
      charArray0[2] = 'P';
      charArray0[3] = 'Q';
      charArray0[4] = 'a';
      charArray0[5] = '';
      stringReader0.markSupported();
      charArray0[6] = '\\';
      charArray0[7] = '^';
      charArray0[8] = ':';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(648);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream0, 1372);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      intArray0[6] = 0;
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0, 98);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)23;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 12, (byte)0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.maxNextCharInd = 0;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.8697471905588148
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("f~#^5,pTZ_1l");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)8;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 71, 1967, 1967);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (byte)0, 71, (byte)0);
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQu");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQu");
      stringReader0.markSupported();
      stringReader1.reset();
      StringReader stringReader2 = new StringReader("' +IxRZQu");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, 32, 0, (-560));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.7326587201992074
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[1];
      charArray0[0] = '#';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.adjustBeginLineColumn(0, 3275);
      javaCharStream0.backup((-1692));
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.7658626662654013
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f~#^5,pTZ_1l");
      stringReader0.markSupported();
      CharBuffer charBuffer0 = CharBuffer.allocate(8);
      stringReader0.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 886, 886);
      stringReader0.reset();
      stringReader0.read();
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('^', char0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.8018249928868764
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("f~#^5,pTZ_1l");
      stringReader1.markSupported();
      CharBuffer charBuffer0 = CharBuffer.allocate(8);
      stringReader1.read(charBuffer0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 886, 886);
      stringReader1.reset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      javaCharStream0.backup((-1));
      stringReader1.read();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('#', char0);
  }

  /**
  //Test case number: 142
  /*Coverage entropy=0.7963116401738131
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (byte)34);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, 1, 82, 82);
      javaCharStream0.adjustBeginLineColumn(0, 1);
      assertEquals(1, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(10);
      pipedInputStream0.mark(10);
      pipedInputStream0.close();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 10, 10);
      javaCharStream0.adjustBeginLineColumn(10, 10);
      assertEquals(11, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.8605343774698508
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hI,G7cA{[/");
      stringReader0.read();
      stringReader0.mark(104);
      stringReader0.mark(0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 373);
      stringReader0.reset();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.readChar();
      javaCharStream0.ReadByte();
      javaCharStream0.readChar();
      javaCharStream0.Done();
      stringReader0.ready();
      javaCharStream0.ReInit((Reader) stringReader0, 104, 98, 104);
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      stringReader1.markSupported();
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("' +IxRZQju");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 39, 1989, 1989);
      char char0 = javaCharStream0.ReadByte();
      assertEquals((-1), javaCharStream0.bufpos);
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NlM;w PO>'ukb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 225, 1705);
      stringReader0.reset();
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      CharBuffer.wrap(charArray0);
      CharBuffer charBuffer0 = CharBuffer.allocate(225);
      charBuffer0.duplicate();
      stringReader0.read(charBuffer0);
      javaCharStream0.getBeginLine();
      javaCharStream0.GetImage();
      javaCharStream0.getEndColumn();
      javaCharStream0.ReadByte();
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(1705, javaCharStream0.getBeginColumn());
      assertEquals(225, int0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)117;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sp\"k");
      byteArray0[0] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringReader stringReader0 = new StringReader("7>%*tD");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3239), 95);
      stringReader0.ready();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('7', char0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.0278182748890377
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("NlM;w PO>'ukb");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 225, 1705);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = 'P';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      stringReader0.read(charBuffer0);
      CharBuffer charBuffer1 = charBuffer0.get(charArray0);
      stringReader0.read(charBuffer0);
      charBuffer1.clear();
      stringReader0.read(charBuffer1);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.getBeginColumn();
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 149
  /*Coverage entropy=1.487798380001651
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("' +IxRZQju");
      stringReader1.markSupported();
      stringReader0.reset();
      StringReader stringReader2 = new StringReader("' +IxRZQju");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, 39, 1989, 1989);
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 150
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 1, 0);
      javaCharStream0.Done();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 151
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-28);
      byteArray0[1] = (byte)84;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (byte) (-28), 6217, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      Enumeration<ByteArrayInputStream> enumeration1 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration1);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup((-4357));
      assertEquals(4356, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 153
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 101, 7);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('f');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 154
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 155
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q\"s7@)Umz");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 84, 64);
      javaCharStream0.ReInit((Reader) stringReader0, 84, 64, 84);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[2] = '\\';
      charArray0[4] = '+';
      charArray0[5] = '+';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4061, 4061, 0);
      javaCharStream0.ReInit((Reader) stringReader0, 78, 1, 0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=2.0761603255122334
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StringReader stringReader0 = new StringReader("' +IxRZQju");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-826), 88);
      javaCharStream0.ReInit((Reader) stringReader0, 92, (-5114));
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 158
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StringReader stringReader0 = new StringReader("<P(M7R");
      char[] charArray0 = new char[7];
      charArray0[0] = 'H';
      charArray0[1] = 'H';
      charArray0[2] = '\\';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      charArray0[6] = 'j';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 71, 6, 1793);
      javaCharStream0.ReInit((Reader) stringReader0, 1, 1, 86);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 159
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[5];
      StringReader stringReader0 = new StringReader("@79&IHgF0'gB");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.GetSuffix(14);
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)37;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)17;
      try { 
        pipedOutputStream0.write(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 160
  /*Coverage entropy=1.4402347497045995
  */
  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")h5iW,}g.?')a@cp");
      stringReader0.markSupported();
      stringReader0.markSupported();
      stringReader0.read();
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      stringReader1.markSupported();
      StringReader stringReader2 = new StringReader("mqgK|tCpP5*Q?;{");
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("mqgK|tCpP5*Q?;{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 85, 895);
      stringReader2.ready();
      char char0 = javaCharStream0.readChar();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('m', char0);
  }
}
