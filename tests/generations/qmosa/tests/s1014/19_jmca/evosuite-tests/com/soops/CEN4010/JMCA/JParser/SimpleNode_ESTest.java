/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 04:06:51 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(63);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write((-2857));
      stringWriter0.flush();
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.setIdentifier("|");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("<=");
      stringWriter1.flush();
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier((String) null);
      simpleNode0.dump(">", stringWriter1);
      assertEquals("<Literal>\n<identifier>Literal Value</identifier>\n</Literal>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.45820823797145316
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.dump(">", stringWriter0);
      simpleNode0.setIdentifier("|");
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("<=");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.setIdentifier(":SE;m8C /D");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.dump((String) null, stringWriter0);
      MockFile mockFile0 = new MockFile("G)FFP7GP1FT|Ce#V2G");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-20);
      byteArray0[1] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      MockFile mockFile1 = new MockFile(mockFile0, "fypHP)=nw");
      mockFile1.getAbsoluteFile();
      mockFile1.toURL();
      mockFile0.getCanonicalFile();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      mockFile0.toURI();
      // Undeclared exception!
      try { 
        MockFile.createTempFile(">", "NameList");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString();
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.identifiers = null;
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("NameList");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.8765307344001894
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      simpleNode0.setIdentifier(";");
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.dump((String) null, stringWriter0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser2 = new JavaParser((String) null);
      JavaParser javaParser3 = new JavaParser(javaParser2.token_source);
      simpleNode0.toString();
      try { 
        javaParser0.PrimarySuffix();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "<");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "<");
      MockFile mockFile0 = new MockFile("<", "<");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "<");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile1 = new MockFile("<");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "<");
      MockFile mockFile2 = new MockFile("<", "<");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-113);
      byteArray0[4] = (byte) (-68);
      byteArray0[5] = (byte) (-29);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)4;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "VariableInitializer");
      simpleNode0.dump("tiVb~%k%3rS=A", stringWriter0);
      assertEquals("<CompilationUnit>\n  <identifier>*lt</identifier>\n</CompilationUnit>\n", stringWriter0.toString());
      
      MockFile mockFile3 = new MockFile("E1ft");
      MockFile mockFile4 = new MockFile("VariableInitializer", "VariableInitializer");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile5 = new MockFile("<");
      FileSystemHandling.createFolder(evoSuiteFile1);
      mockFile5.toURI();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit : <", string0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1165107682127635
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("NameList", stringWriter0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.setIdentifier("{");
      StringReader stringReader0 = new StringReader("N3Khod73c=%1<#(");
      JavaParser javaParser0 = new JavaParser("<=");
      simpleNode0.dump("NameList", stringWriter0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser2 = new JavaParser("{");
      JavaParser javaParser3 = new JavaParser(javaParser0.token_source);
      simpleNode0.toString();
      try { 
        javaParser3.Initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9745638184346521
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("*le");
      String string0 = "-[Jg\\\"n,0JMsC#3_Q[";
      simpleNode0.setIdentifier("<<");
      simpleNode0.toString();
      simpleNode0.setIdentifier("<");
      simpleNode0.dump("<<", stringWriter1);
      StringReader stringReader0 = new StringReader("*gt");
      JavaParser javaParser0 = new JavaParser("*gt");
      try { 
        javaParser0.AssignmentOperator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6060252027357298
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("ZXII*,uNLj5~K");
      simpleNode0.toString();
      simpleNode0.setIdentifier(">>");
      simpleNode0.dump("VariableDeclaratorId : ZXII*,uNLj5~K", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5305096302300272
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"\r\"");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      FileSystemHandling.createFolder(evoSuiteFile0);
      simpleNode0.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = new StringWriter(0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "&&");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "CompilationUnit");
      simpleNode0.setIdentifier("\"\r\"");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&&");
      StringBuffer stringBuffer1 = new StringBuffer("CompilationUnit");
      stringBuffer1.insert(0, 0.0F);
      StringBuffer stringBuffer2 = new StringBuffer(stringBuffer1);
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) stringBuffer2);
      simpleNode0.dump("T1#Q", stringWriter2);
      MockFile mockFile0 = new MockFile("T1#Q", "uvETnQ/qoyAa");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile1 = new MockFile(mockFile0, "&&");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "\"\r\"");
      mockFile0.getAbsoluteFile();
      MockFile mockFile2 = new MockFile("FormalParameter");
      MockFile mockFile3 = new MockFile("FormalParameter");
      simpleNode0.dump("CompilationUnit", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*amp</identifier>\n  <identifier>\"\r\"</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5670609309552819
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(23);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.setIdentifier("&");
      simpleNode0.dump("=", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(23);
      try { 
        pipedInputStream0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9574066685330413
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(114);
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 58);
      simpleNode1.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.parent = (Node) simpleNode1;
      simpleNode0.id = 18;
      simpleNode0.jjtAddChild(simpleNode1, 58);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">+Z:q6n\"Vd2A`Cw;", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.setIdentifier("=Y~oB\"rZ'_");
      simpleNode0.toString();
      simpleNode1.dump("VariableDeclaratorId : =Y~oB\"rZ'_", stringWriter0);
      simpleNode0.dump("=Y~oB\"rZ'_", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(18);
      simpleNode2.parent = simpleNode0.parent;
      simpleNode0.toString("CastExpression");
      simpleNode1.dump("CastExpression", stringWriter0);
      simpleNode2.jjtGetNumChildren();
      simpleNode1.jjtAddChild(simpleNode1, 114);
      simpleNode0.jjtGetChild(18);
      simpleNode2.toString(">+Z:q6n\"Vd2A`Cw;");
      // Undeclared exception!
      simpleNode0.dump(">+Z:q6n\"Vd2A`Cw;", stringWriter0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0553968894746688
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(114);
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode1 = new SimpleNode(58);
      simpleNode1.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.id = 18;
      simpleNode0.jjtAddChild(simpleNode1, 58);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.dump(">+Z:q6n\"Vd2A`Cw;", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode(58);
      simpleNode2.jjtAddChild(simpleNode0, 1184);
      simpleNode2.parent = (Node) simpleNode0;
      simpleNode0.setIdentifier("=Y~oB\"9rZ'u$_");
      simpleNode2.toString();
      simpleNode1.dump("CastExpression", stringWriter0);
      SimpleNode simpleNode3 = new SimpleNode(18);
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "CastExpression");
      simpleNode0.dump(">+Z:q6n\"Vd2A`Cw;", stringWriter1);
      simpleNode0.toString();
      simpleNode0.jjtGetParent();
      simpleNode2.jjtGetParent();
      simpleNode3.jjtGetNumChildren();
      simpleNode1.dump("~0mfWve;%", stringWriter0);
      simpleNode2.toString("=Y~oB\"9rZ'u$_");
      simpleNode2.dump("CastExpression", stringWriter1);
      simpleNode1.jjtGetParent();
      simpleNode2.jjtAddChild(simpleNode0, 1);
      // Undeclared exception!
      try { 
        simpleNode3.jjtGetChild(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.355712859746894
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier("         java JavaParser < inputfile");
      StringReader stringReader0 = new StringReader("         java JavaParser < inputfile");
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.setIdentifier("}");
      simpleNode0.setIdentifier("VariableDeclaratorId");
      simpleNode0.setIdentifier("sT");
      simpleNode0.dump("*lt", stringWriter0);
      stringWriter0.append('\u0014');
      assertEquals("<VariableDeclaratorId>\n  <identifier>         java JavaParser < inputfile</identifier>\n  <identifier>VariableDeclaratorId</identifier>\n  <identifier>sT</identifier>\n</VariableDeclaratorId>\n\u0014", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      simpleNode0.jjtSetParent(simpleNode0);
      StringWriter stringWriter0 = new StringWriter(0);
      simpleNode0.jjtGetParent();
      int int1 = (-154);
      StringWriter stringWriter1 = null;
      try {
        stringWriter1 = new StringWriter((-154));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.900368082936878
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(18);
      simpleNode0.setIdentifier(">=");
      StringReader stringReader0 = new StringReader(">=");
      JavaParser javaParser0 = new JavaParser((String) null);
      simpleNode0.dump((String) null, stringWriter0);
      JavaParser javaParser1 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser2 = new JavaParser((String) null);
      JavaParser javaParser3 = new JavaParser(javaParser2.token_source);
      simpleNode0.toString();
      try { 
        javaParser0.PrimarySuffix();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6094379124341005
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(73);
      JavaParser javaParser0 = new JavaParser("v#HXI:Co<f`");
      Token token0 = javaParser0.token_source.getNextToken();
      javaParser0.jj_nt = token0;
      Node node0 = javaParser0.currNode;
      simpleNode0.jjtAddChild((Node) null, 73);
      simpleNode0.toString("");
      simpleNode0.jjtGetChild(73);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "}5,");
      SimpleNode simpleNode0 = new SimpleNode((-1982630758));
      simpleNode0.jjtAddChild(simpleNode0, 1);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1263));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1263
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.1894736293243366
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      StringWriter stringWriter1 = stringWriter0.append('4');
      simpleNode0.dump("-Oux_2>3<4\\VwL$@-P", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("yT^2}.@k8");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.toString();
      simpleNode0.jjtGetChild(0);
      simpleNode0.dump("yT^2}.@k8", stringWriter1);
      assertEquals("4<CompilationUnit></CompilationUnit>\n", stringWriter1.toString());
      assertEquals(1, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.6425990774875225
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 3203);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      JavaParser javaParser0 = new JavaParser((String) null);
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.write("NameList");
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringWriter stringWriter6 = stringWriter1.append((CharSequence) stringBuffer0);
      stringWriter5.append('=');
      stringWriter3.append('~');
      stringWriter6.append('=');
      simpleNode0.dump("</identifier>", stringWriter2);
      assertEquals(3204, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(114);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter(467);
      stringWriter0.flush();
      StringWriter stringWriter1 = stringWriter0.append('^');
      simpleNode0.dump("CastExpression", stringWriter1);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 1);
      assertEquals(2, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.7937300551584248
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile1 = new MockFile("(dZ^3-Z4G`3w$p=z/");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFile mockFile2 = new MockFile("(dZ^3-Z4G`3w$p=z/");
      stringWriter0.flush();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte)126;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-29);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)4;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SimpleNode simpleNode1 = new SimpleNode((-967));
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/replication/scripts/projects/19_jmca");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "(dZ^3-Z4G`3w$p=z/");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "VariableInitializer");
      simpleNode0.dump("tiVb~%k%3rS=A", stringWriter0);
      MockFile mockFile3 = new MockFile("y");
      MockFile mockFile4 = new MockFile("");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile mockFile5 = new MockFile("(dZ^3-Z4G`3w$p=z/");
      FileSystemHandling.createFolder(evoSuiteFile1);
      mockFile5.toURI();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      // Undeclared exception!
      try { 
        simpleNode1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -967
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6849547610531581
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      String string0 = ">=";
      simpleNode0.setIdentifier(">=");
      simpleNode0.toString();
      String string1 = null;
      stringWriter0.write("NameList");
      simpleNode0.setIdentifier((String) null);
      // Undeclared exception!
      try { 
        simpleNode0.dump(">", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.7668382315802122
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      simpleNode0.setIdentifier(">");
      StringWriter stringWriter0 = new StringWriter();
      SystemInUtil.addInputLine("+/%bt ");
      StringWriter stringWriter1 = new StringWriter(37);
      simpleNode0.setIdentifier("O");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(">");
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = stringWriter3.append('w');
      stringWriter4.append('8');
      stringWriter3.append((CharSequence) "&");
      stringWriter2.write("U%'_yGC{7&LNo'");
      StringWriter stringWriter5 = stringWriter3.append((CharSequence) "+/%bt ");
      stringWriter4.flush();
      simpleNode0.dump("+/%bt ", stringWriter5);
      assertEquals("w8&+/%bt <NameList>\n  <identifier>*gt</identifier>\n  <identifier>O</identifier>\n</NameList>\n", stringWriter5.toString());
      
      String string0 = simpleNode0.toString("O");
      assertEquals("ONameList : > : O", string0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(43);
      simpleNode0.jjtAddChild(simpleNode0, 43);
      SimpleNode simpleNode1 = (SimpleNode)simpleNode0.jjtGetChild(43);
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode1.parent = (Node) simpleNode0;
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(simpleNode0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3263));
      String string0 = "o{";
      simpleNode0.setIdentifier("o{");
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("o{", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-5));
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-5));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.allocate(818);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 3488);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(114);
      String string0 = "";
      JavaParser javaParser0 = new JavaParser("");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 58);
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode1.toString();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      int int0 = 18;
      simpleNode0.id = 18;
      simpleNode0.jjtAddChild(simpleNode1, 58);
      simpleNode1.parser = javaParser0;
      simpleNode0.jjtGetParent();
      try { 
        javaParser0.UnaryExpressionNotPlusMinus();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 271);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(nodeArray0[4], 6);
      assertEquals(7, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = ",|UCW~yR2kN-}v[";
      MockFile mockFile0 = new MockFile(",|UCW~yR2kN-}v[", ",|UCW~yR2kN-}v[");
      MockFile mockFile1 = new MockFile(mockFile0, ";@i3iAEw0\"jST{O*");
      SimpleNode simpleNode0 = new SimpleNode((-1491));
      // Undeclared exception!
      try { 
        simpleNode0.toString("/=");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1491
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 114;
      SimpleNode simpleNode0 = new SimpleNode(114);
      String string0 = "";
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      String string1 = "";
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      simpleNode0.id = 18;
      simpleNode0.jjtGetParent();
      simpleNode0.parent = null;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      simpleNode0.jjtOpen();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7917594692280547
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-3157));
      simpleNode0.jjtGetParent();
      simpleNode0.jjtClose();
      SimpleNode simpleNode1 = new SimpleNode((-3157));
      simpleNode1.jjtSetParent(simpleNode0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-3157));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.945910149055313
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ip");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("*lshft");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "ip");
      String string0 = "*lshft";
      JavaParser javaParser0 = new JavaParser("*lshft");
      javaParser0.StatementExpression();
      try { 
        javaParser0.MarkerAnnotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 2.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }
}
