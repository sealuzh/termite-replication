/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:39:55 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.net.MalformedURLException;
import java.time.Instant;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import java.util.Date;
import javax.xml.namespace.QName;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.AxisEngine;
import org.apache.axis.MessageContext;
import org.apache.axis.client.AxisClient;
import org.apache.axis.configuration.XMLStringProvider;
import org.apache.axis.deployment.wsdd.WSDDJAXRPCHandlerInfoChain;
import org.apache.axis.deployment.wsdd.WSDDTransport;
import org.apache.axis.encoding.DeserializationContext;
import org.apache.axis.encoding.SerializationContext;
import org.apache.axis.message.Detail;
import org.apache.axis.message.SOAPFaultElement;
import org.apache.axis.utils.Mapping;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLTableColElementImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.impl.XML11EntityScanner;
import org.apache.xerces.xni.XMLLocator;
import org.apache.xerces.xni.parser.XMLParseException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.xml.sax.InputSource;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException((String) null, ":Tb#z.qSQM", (String) null, (byte) (-5), (byte) (-5));
      sAXParseException0.getColumnNumber();
      sAXParseException0.getException();
      XML11EntityScanner xML11EntityScanner0 = new XML11EntityScanner();
      XMLParseException xMLParseException0 = new XMLParseException(xML11EntityScanner0, (String) null);
      sAXParseException0.getLocalizedMessage();
      xMLParseException0.addSuppressed(sAXParseException0);
      sAXParseException0.getPublicId();
      SAXParseException sAXParseException1 = new SAXParseException(":Tb#z.qSQM", ":Tb#z.qSQM", ":Tb#z.qSQM", (-5), (-5), (Exception) null);
      sAXParseException1.getSuppressed();
      xMLParseException0.getColumnNumber();
      xMLParseException0.getSuppressed();
      SAXParseException sAXParseException2 = new SAXParseException((String) null, (String) null, (String) null, (-5), (byte) (-5), xMLParseException0);
      sAXParseException0.getPublicId();
      sAXParseException0.getColumnNumber();
      xMLParseException0.getCharacterOffset();
      sAXParseException1.getLineNumber();
      SAXParseException sAXParseException3 = new SAXParseException((String) null, (String) null, ":Tb#z.qSQM", (-5), (-3352), sAXParseException0);
      sAXParseException1.getSuppressed();
      sAXParseException1.getStackTrace();
      sAXParseException1.printStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, ":Tb#z.qSQM", ":Tb#z.qSQM", (-1), (byte) (-5), sAXParseException1);
      sAXParseException4.printStackTrace();
      sAXParseException4.getStackTrace();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, ":Tb#z.qSQM", (String) null, (-1), (byte) (-5), sAXParseException3);
      sAXParseException5.getLineNumber();
      sAXParseException5.getLineNumber();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(":Tb#z.qSQM", (XBUSSystem) null, ":Tb#z.qSQM");
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.938619582733753
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("gKw-A5DC_&/#ZbwC", ":MTb#q}SM", "gKw-A5DC_&/#ZbwC", (byte) (-5), (byte) (-5));
      XML11EntityScanner xML11EntityScanner0 = new XML11EntityScanner();
      xML11EntityScanner0.getPublicId();
      XMLParseException xMLParseException0 = new XMLParseException((XMLLocator) null, (String) null);
      xML11EntityScanner0.getLineNumber();
      sAXParseException0.getPublicId();
      sAXParseException0.getSuppressed();
      Integer integer0 = new Integer((byte) (-5));
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("~L2X5Pb$", "(6#pW]un40kn&ynhL&y", "rWfd(jS(~0", (-44));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement(":MTb#q}SM", ":MTb#q}SM", "fZt5PUV", (-1));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("[7.=0&qdNpV", ":MTb#q}SM", ":MTb#q}SM", 15);
      stackTraceElementArray0[2] = stackTraceElement2;
      xMLParseException0.setStackTrace(stackTraceElementArray0);
      sAXParseException0.getCause();
      sAXParseException0.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray1 = sAXParseException0.getStackTrace();
      sAXParseException0.setStackTrace(stackTraceElementArray1);
      sAXParseException0.printStackTrace();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-5);
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte) (-5);
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException((String) null, ":Tb#z.gqSQM", (String) null, (byte) (-5), (byte) (-5));
      sAXParseException0.getColumnNumber();
      sAXParseException0.getException();
      XML11EntityScanner xML11EntityScanner0 = new XML11EntityScanner();
      XMLParseException xMLParseException0 = new XMLParseException(xML11EntityScanner0, (String) null);
      sAXParseException0.getLocalizedMessage();
      xMLParseException0.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException1 = new SAXParseException(":Tb#z.gqSQM", ":Tb#z.gqSQM", ":Tb#z.gqSQM", (-5), (-5), (Exception) null);
      sAXParseException1.getSuppressed();
      xMLParseException0.getColumnNumber();
      xMLParseException0.getSuppressed();
      SAXParseException sAXParseException2 = new SAXParseException((String) null, (String) null, (String) null, (-5), (byte) (-5), xMLParseException0);
      sAXParseException0.getPublicId();
      sAXParseException0.getColumnNumber();
      xMLParseException0.getCharacterOffset();
      sAXParseException1.getMessage();
      sAXParseException1.getLineNumber();
      SAXParseException sAXParseException3 = new SAXParseException((String) null, (String) null, (String) null, (-5), (-3373), sAXParseException0);
      sAXParseException1.getSuppressed();
      sAXParseException1.getStackTrace();
      sAXParseException1.printStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException((String) null, ":Tb#z.gqSQM", ":Tb#z.gqSQM", (-5), (byte) (-5));
      sAXParseException4.addSuppressed(sAXParseException3);
      sAXParseException4.printStackTrace();
      sAXParseException4.getStackTrace();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException((String) null, ":Tb#z.gqSQM", (String) null, (-1), (byte) (-5), sAXParseException3);
      sAXParseException0.getLineNumber();
      sAXParseException5.getLineNumber();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(":Tb#z.gqSQM", (XBUSSystem) null, (String) null);
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      recordTypeMessage0.setResponseDocument(coreDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[3] = (byte)70;
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("Y>l'x%y36,W2$xkvI&", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageContext.getCurrentContext();
      StringReader stringReader0 = new StringReader("authenticatedUser");
      InputSource inputSource0 = new InputSource("attachments.directory");
      DeserializationContext deserializationContext0 = new DeserializationContext((InputSource) null, (MessageContext) null, "quit.requested");
      deserializationContext0.getStartOfMappingsPos();
      Detail detail0 = new Detail();
      detail0.getFirstChild();
      detail0.getRecorder();
      QName qName0 = new QName("quit.requested", "securityProvider");
      detail0.getAttributesEx();
      inputSource0.setByteStream((InputStream) null);
      SOAPFaultElement sOAPFaultElement0 = new SOAPFaultElement();
      Mapping mapping0 = new Mapping("quit.requested", "isMsg");
      Mapping mapping1 = new Mapping("axis.wsdlgen.intfnamespace", "isMsg");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      WSDDTransport wSDDTransport0 = new WSDDTransport();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("http://xml.apache.org/axis/wsdd/");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      MessageContext.getCurrentContext();
      AxisClient axisClient0 = null;
      try {
        axisClient0 = new AxisClient();
        fail("Expecting exception: LinkageError");
      
      } catch(LinkageError e) {
         //
         // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
         //
         verifyException("org.apache.axis.AxisProperties", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("]3$\"A", (XBUSSystem) null, (String) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      recordTypeMessage0.setErrortext((String) null);
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte) (-115);
      byteArray0[4] = (byte) (-115);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte) (-115);
      byteArray0[7] = (byte) (-115);
      ByteArrayList.createByteArrayList(byteArray0, 157);
      Integer integer0 = new Integer((byte)0);
      assertEquals(0, (int)integer0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "P,H^vcJPQqx?m");
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = null;
      try {
        wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain(hTMLTableColElementImpl0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid WSDD element 'null' (wanted 'handlerInfoChain')
         //
         verifyException("org.apache.axis.deployment.wsdd.WSDDElement", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "DbFT{5$";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "Lv%t1F^yP:");
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = null;
      try {
        wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain(hTMLTableColElementImpl0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid WSDD element 'null' (wanted 'handlerInfoChain')
         //
         verifyException("org.apache.axis.deployment.wsdd.WSDDElement", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      WSDDJAXRPCHandlerInfoChain wSDDJAXRPCHandlerInfoChain0 = new WSDDJAXRPCHandlerInfoChain();
      XMLStringProvider xMLStringProvider0 = null;
      try {
        xMLStringProvider0 = new XMLStringProvider((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.axis.configuration.XMLStringProvider", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte)9;
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte) (-63);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)10;
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Instant instant0 = MockInstant.ofEpochSecond((long) (byte)9);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      ZonedDateTime zonedDateTime0 = MockInstant.atZone(instant0, zoneOffset0);
      try { 
        recordTypeMessage0.setResponseObject(zonedDateTime0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.time.ZonedDateTime cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "bse64");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("bse64", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte) (-63);
      Instant instant0 = MockInstant.ofEpochSecond((-3169L));
      Instant instant1 = MockInstant.plusMillis(instant0, 0L);
      Instant instant2 = MockInstant.minusNanos(instant1, 0L);
      Date date0 = Date.from(instant2);
      recordTypeMessage0.setResponseTimestamp(date0);
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)10;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      try { 
        recordTypeMessage0.setRequestObject(date0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.util.Date cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      WSDDTransport wSDDTransport0 = new WSDDTransport();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("EJB");
      recordTypeMessage0.getResponseObject();
      AxisEngine.getCurrentMessageContext();
      PrintWriter printWriter0 = mockPrintWriter0.printf("", (Object[]) wSDDTransport0.scopeStrings);
      SerializationContext serializationContext0 = new SerializationContext(mockPrintWriter0);
      wSDDTransport0.writeToContext(serializationContext0);
      SerializationContext serializationContext1 = new SerializationContext(mockPrintWriter0, (MessageContext) null);
      SerializationContext serializationContext2 = new SerializationContext(printWriter0, (MessageContext) null);
      wSDDTransport0.writeFlowsToContext(serializationContext2);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      wSDDTransport0.writeParamsToContext(serializationContext1);
      System.setCurrentTimeMillis(2);
      try { 
        MockURL.URL("ze!~}=yH8VeJQ+sIw", "Xh@'Gn1woW", "acceptMissingParams");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: ze!~}=yh8vejq+siw
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("gKw-A5DC_&/#ZbwC", ":MTb#qSQM", "gKw-A5DC_&/#ZbwC", (byte) (-5), (byte) (-5));
      sAXParseException0.getColumnNumber();
      XML11EntityScanner xML11EntityScanner0 = new XML11EntityScanner();
      xML11EntityScanner0.getPublicId();
      XMLParseException xMLParseException0 = new XMLParseException(xML11EntityScanner0, (String) null);
      xMLParseException0.getLiteralSystemId();
      sAXParseException0.getLocalizedMessage();
      xMLParseException0.getException();
      xML11EntityScanner0.getLineNumber();
      xMLParseException0.addSuppressed(sAXParseException0);
      xMLParseException0.getPublicId();
      sAXParseException0.getPublicId();
      SAXParseException sAXParseException1 = new SAXParseException(":MTb#qSQM", "gKw-A5DC_&/#ZbwC", ":MTb#qSQM", (-5), (-1), xMLParseException0);
      sAXParseException1.getMessage();
      sAXParseException1.getSuppressed();
      sAXParseException0.getColumnNumber();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("~L2X5Pb$", "", "defer", 1);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement(":MTb#qSQM", "\n\n", "fZt5PUV", (-1));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("[7.=`&qdE6NvpV", ":MTb#qSQM", ":MTb#qSQM", 15);
      stackTraceElementArray0[2] = stackTraceElement2;
      xMLParseException0.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException2 = new SAXParseException((String) null, "gKw-A5DC_&/#ZbwC", "gKw-A5DC_&/#ZbwC", (-5), (byte) (-5), xMLParseException0);
      xMLParseException0.getColumnNumber();
      sAXParseException1.getCause();
      xMLParseException0.getCharacterOffset();
      sAXParseException2.getLineNumber();
      sAXParseException1.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray1 = sAXParseException0.getStackTrace();
      sAXParseException1.getPublicId();
      sAXParseException2.getLineNumber();
      sAXParseException0.setStackTrace(stackTraceElementArray1);
      sAXParseException1.printStackTrace();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)36;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RxdH%>?ZM~WCfSO(D");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArrayList0.iterator();
      byteArrayList0.toByteArray();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("gOw", (XBUSSystem) null, "% qeh");
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      // Undeclared exception!
      try { 
        ByteArrayList.createByteArrayList((byte[]) null, (byte)36);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.base.bytearraylist.ByteArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-86);
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)61;
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte) (-63);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)10;
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }
}
