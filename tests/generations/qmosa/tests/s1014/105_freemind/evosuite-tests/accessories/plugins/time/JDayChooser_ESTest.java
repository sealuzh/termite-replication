/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 06:28:23 GMT 2019
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.controller.StructuredMenuHolder;
import freemind.modes.browsemode.BrowseController;
import freemind.modes.browsemode.BrowseMode;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.view.mindmapview.MultipleImage;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.SystemColor;
import java.awt.event.ActionEvent;
import java.awt.event.ContainerListener;
import java.awt.event.FocusEvent;
import java.awt.event.HierarchyListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.awt.image.LookupTable;
import java.awt.image.MemoryImageSource;
import java.awt.image.ShortLookupTable;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.sql.Timestamp;
import java.text.AttributedCharacterIterator;
import java.text.DateFormatSymbols;
import java.time.Instant;
import java.util.Calendar;
import java.util.Collection;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import javax.swing.AbstractButton;
import javax.swing.Box;
import javax.swing.DebugGraphics;
import javax.swing.JButton;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.event.MenuKeyEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Element;
import javax.swing.text.GapContent;
import javax.swing.text.LabelView;
import javax.swing.text.StyleContext;
import org.apache.batik.apps.svgbrowser.JSVGViewerFrame;
import org.apache.batik.ext.awt.g2d.GraphicContext;
import org.apache.batik.gvt.renderer.StrokingTextPainter;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.fop.fonts.FontInfo;
import org.apache.fop.pdf.PDFDocument;
import org.apache.fop.pdf.PDFInfo;
import org.apache.fop.pdf.PDFResourceContext;
import org.apache.fop.svg.PDFDocumentGraphics2D;
import org.apache.fop.svg.PDFGraphics2D;
import org.apache.xalan.templates.ElemVariablePsuedo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcCallableStatement;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.runner.RunWith;
import org.openstreetmap.gui.jmapviewer.Tile;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.2058280480625108
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JMenu jMenu0 = new JMenu();
      jMenu0.getPopupMenu();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.setDay(35);
      jDayChooser1.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, (-1837), (-1837), 8824, 9999, '*');
      keyEvent0.setKeyCode(35);
      jDayChooser0.keyPressed(keyEvent0);
      JButton jButton0 = new JButton();
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(28, jDayChooser1.getDay());
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.3160105377139524
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel();
      JTable jTable0 = new JTable(defaultTableModel0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      MultipleImage multipleImage0 = new MultipleImage(0.0);
      multipleImage0.getIconHeight();
      jTable0.getAncestorListeners();
      multipleImage0.getImage();
      defaultTableModel0.addRow((Vector) null);
      jTable0.checkImage((Image) null, 2381, 478, (ImageObserver) jDayChooser0);
      Color color0 = jTable0.getGridColor();
      Color color1 = Color.getColor("qGl8H6qW'.v(5V[b&->", color0);
      jDayChooser0.setDecorationBackgroundColor(color1);
      jDayChooser0.getDayPanel();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(true);
      jDayChooser0.setForeground(color0);
      jDayChooser0.getSundayForeground();
      jDayChooser0.drawDays();
      jDayChooser0.setMonth(16);
      assertTrue(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.2445030608496275
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      locale0.getScript();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      stack0.containsAll(set0);
      Calendar.getAvailableCalendarTypes();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("day");
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      Locale.LanguageRange.mapEquivalents(stack0, hashMap0);
      stack0.add(locale_LanguageRange0);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.getSelectedDay();
      InputEvent.getModifiersExText((-810));
      jDayChooser0.setFocus();
      jDayChooser0.setLocale(locale0);
      assertEquals(3, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.248116923235075
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      JTable jTable0 = new JTable(defaultTableModel0);
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      jPopupMenu0.setFocusTraversalPolicyProvider(true);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      menuElementArray0[1] = (MenuElement) jPopupMenu0;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu0, 0, 0, (-346), 6, (-374), (-346), (-1377), 29, false, menuElementArray0, menuSelectionManager0);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(0);
      jDayChooser0.setMaxDayCharacters(2);
      jDayChooser0.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-2199), 1774L, (-2199), 5, 'e');
      InputEvent.getModifiersExText(36);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.1678932552686234
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      locale0.getScript();
      byteArray0[1] = (byte)22;
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      jPopupMenu0.removeVetoableChangeListener((VetoableChangeListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      JMenu jMenu0 = new JMenu();
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      jMenu0.addHierarchyListener((HierarchyListener) null);
      jPopupMenu0.hasFocus();
      jPopupMenu0.setFocusTraversalPolicyProvider(false);
      jMenu0.isBorderPainted();
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      menuElementArray0[0] = (MenuElement) jMenu0;
      menuElementArray0[1] = (MenuElement) jPopupMenu0;
      menuElementArray0[2] = (MenuElement) jPopupMenu0;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenu0, (byte)22, 592, 21, 0, 0, 592, 1868, 6, true, menuElementArray0, menuSelectionManager0);
      String string0 = AbstractButton.CONTENT_AREA_FILLED_CHANGED_PROPERTY;
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.updateUI();
      SystemColor systemColor0 = SystemColor.menu;
      jDayChooser0.setDecorationBackgroundColor(systemColor0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.231125169149882
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      assertEquals(14, jDayChooser0.getDay());
      
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      jMenu0.getDelay();
      jPopupMenu0.repaint(909, 14, 218, 478);
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[1] = (int) 'z';
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      intArray0[3] = 478;
      intArray0[4] = 478;
      jMenu0.setPopupMenuVisible(false);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay(122);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(menuElementArray0, 14);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(false);
      JYearChooser jYearChooser0 = new JYearChooser();
      jDayChooser0.setYearChooser(jYearChooser0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.1609096373188827
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-341L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(1845);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.CHAR_INDEX;
      Box box0 = Box.createVerticalBox();
      jDayChooser0.add((String) null, (Component) box0);
      ActionEvent actionEvent0 = new ActionEvent(gVTAttributedCharacterIterator_TextAttribute0, (-574), (String) null, (-3264));
      actionEvent0.setSource((Object) null);
      actionEvent0.paramString();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.325877091300684
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      jMenu0.getPopupMenu();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      jPopupMenu0.setFocusTraversalPolicyProvider(false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu0, 6, 478, 478, 6, 'z', (-1377), 592, 0, false, menuElementArray0, menuSelectionManager0);
      InputEvent.getModifiersExText(13);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(6);
      jDayChooser0.setMaxDayCharacters(5);
      jDayChooser0.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 5, (-1377), (-100), 36, 'z');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      jDayChooser0.getSundayForeground();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1867270210280028
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Cursor cursor0 = JSVGViewerFrame.DEFAULT_CURSOR;
      jDayChooser0.setCursor(cursor0);
      jDayChooser0.weekPanel = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      Color color0 = DebugGraphics.flashColor();
      jDayChooser0.setWeekdayForeground(color0);
      jDayChooser0.isDecorationBordersVisible();
      // Undeclared exception!
      try { 
        jDayChooser0.setWeekOfYearVisible(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Container", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.2054733035890117
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDay();
      jDayChooser0.getSelectedDay();
      GapContent gapContent0 = new GapContent(14);
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(gapContent0, styleContext0);
      Element element0 = defaultStyledDocument0.getParagraphElement(9);
      LabelView labelView0 = new LabelView(element0);
      labelView0.getBackground();
      jDayChooser0.setSundayForeground((Color) null);
      LookupTable lookupTable0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "day");
      ElemVariablePsuedo elemVariablePsuedo0 = new ElemVariablePsuedo();
      SVGGraphics2D sVGGraphics2D0 = null;
      try {
        sVGGraphics2D0 = new SVGGraphics2D(elemVariablePsuedo0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ElemTemplateElement error: Function not supported!
         //
         verifyException("org.apache.xalan.templates.ElemTemplateElement", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.2054607286107037
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDay();
      jDayChooser0.getSelectedDay();
      jDayChooser0.drawDays();
      jDayChooser0.getDayPanel();
      jDayChooser0.isOpaque();
      MockDate mockDate0 = new MockDate(14, 14, 10, 10, 8716);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.236872675880645
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (int) 'z';
      intArray0[2] = 0;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jMenu0, 164, 122, (-2181), 1345, 0, 35, false, menuElementArray0, menuSelectionManager0);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(3366);
      jDayChooser0.setMaxDayCharacters(0);
      JPopupMenu jPopupMenu2 = new JPopupMenu((String) null);
      KeyEvent keyEvent0 = new KeyEvent(jPopupMenu2, 1345, 747, 1327, (-543), '\"');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.2443789479522347
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      JMenu jMenu0 = new JMenu();
      jMenu0.getPopupMenu();
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (int) 'z';
      intArray0[2] = 0;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay(0);
      JButton jButton0 = new JButton();
      KeyEvent keyEvent0 = new KeyEvent(jPopupMenu0, 2381, (-2181), 8824, 747, '+');
      keyEvent0.setKeyCode(33);
      // Undeclared exception!
      try { 
        jDayChooser0.keyPressed(keyEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[1] = (int) 'z';
      intArray0[3] = 478;
      intArray0[4] = 478;
      int int0 = 6;
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      jPopupMenu1.addHierarchyListener((HierarchyListener) null);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 6, 478, 0, 6, 0, (-1377), 6, 478, false, menuElementArray0, menuSelectionManager0);
      String[] stringArray0 = new String[5];
      // Undeclared exception!
      try { 
        JDayChooser.main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.278972999854119
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      jMenu0.isSelected();
      jMenu0.setRequestFocusEnabled(false);
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[1] = (int) 'z';
      intArray0[2] = 0;
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint((Graphics) null);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser1.isDayBordersVisible();
      jDayChooser0.drawWeeks();
      jDayChooser0.initDecorations();
      jDayChooser1.setWeekOfYearVisible(false);
      jDayChooser1.getMaxSelectableDate();
      assertFalse(jDayChooser1.isWeekOfYearVisible());
      
      jDayChooser_DecoratorButton0.isFocusable();
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.2614158021911326
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      jPopupMenu1.setFocusTraversalPolicyProvider(false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 6, 478, 478, 6, 'z', (-1377), 592, 'z', false, menuElementArray0, menuSelectionManager0);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      MenuSelectionManager menuSelectionManager1 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent1 = new MenuDragMouseEvent(jDayChooser0, 35, 0L, 35, 9999, 478, 9999, true, menuElementArray0, menuSelectionManager1);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(747);
      jDayChooser0.setMaxDayCharacters(6);
      JPopupMenu jPopupMenu2 = new JPopupMenu((String) null);
      KeyEvent keyEvent0 = new KeyEvent(jPopupMenu1, (-1902), 9999, (-1377), 747, 'H');
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.16477807491006
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      MockDate mockDate0 = new MockDate();
      jDayChooser0.getDay();
      SystemColor systemColor0 = SystemColor.windowBorder;
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setMonth(14);
      MockDate mockDate1 = new MockDate(14, 14, 14);
      BrowseMode browseMode0 = new BrowseMode();
      Date date0 = jDayChooser0.maxSelectableDate;
      jDayChooser0.setDay(36);
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(browseMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.2207759569652947
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[21];
      intArray0[1] = (int) 's';
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 478, 0L, (-285), 33, (-285), (-285), 115, 1660, true, menuElementArray0, menuSelectionManager0);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(478);
      jDayChooser0.setDay(478);
      jDayChooser0.setMaxDayCharacters((-2749));
      JPopupMenu jPopupMenu2 = new JPopupMenu("2");
      KeyEvent keyEvent0 = new KeyEvent(jPopupMenu1, 3366, (-2749), 7, 3366, 'B');
      jDayChooser0.keyPressed(keyEvent0);
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.097462582473991
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      locale0.getScript();
      locale0.getUnicodeLocaleAttributes();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      stack1.clone();
      locale0.getUnicodeLocaleAttributes();
      Calendar.getAvailableCalendarTypes();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("day");
      Stack<Locale.LanguageRange> stack2 = new Stack<Locale.LanguageRange>();
      stack2.add(locale_LanguageRange0);
      Font font0 = new Font((Map<? extends AttributedCharacterIterator.Attribute, ?>) null);
      JDayChooser jDayChooser1 = new JDayChooser();
      AffineTransform affineTransform0 = new AffineTransform((byte)25, 0.0, 0.0, (byte)25, 1617.498190267, (-1160.56354));
      GraphicContext graphicContext0 = new GraphicContext(affineTransform0);
      affineTransform0.translate((byte)25, 0.0);
      Font font1 = graphicContext0.getFont();
      jDayChooser1.setFont(font1);
      assertFalse(jDayChooser1.isWeekOfYearVisible());
      assertEquals(14, jDayChooser1.getDay());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1512245940094292
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis((-341L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(1845);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.ROTATION;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay((int) gVTAttributedCharacterIterator_TextAttribute0.ARABIC_ISOLATED);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setMonth((int) gVTAttributedCharacterIterator_TextAttribute0.ADJUST_ALL);
      assertEquals(1, jDayChooser0.getDay());
      
      JDayChooser jDayChooser1 = new JDayChooser(true);
      assertEquals(31, jDayChooser1.getDay());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.1609349675619263
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      System.setCurrentTimeMillis((-341L));
      boolean boolean0 = false;
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(1845);
      int int0 = (-2344);
      jDayChooser0.setYear((-2344));
      long long0 = 4L;
      int int1 = 14;
      int int2 = 3425;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int3 = (-325);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " [yQ7}SZ");
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      jdbcCallableStatement jdbcCallableStatement0 = null;
      try {
        jdbcCallableStatement0 = new jdbcCallableStatement(jdbcConnection0, "day", 3425);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcPreparedStatement", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.3447499788525916
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Instant instant0 = MockInstant.ofEpochSecond(2423L);
      Timestamp timestamp0 = Timestamp.from(instant0);
      jDayChooser0.setDecorationBackgroundVisible(false);
      assertEquals(14, jDayChooser0.getDay());
      
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      PDFInfo pDFInfo0 = new PDFInfo();
      jDayChooser0.setDay(84);
      jDayChooser0.setMaxDayCharacters(1414);
      jDayChooser0.getSelectedDay();
      jDayChooser0.updateUI();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 84, 0L, (-511), 486, '3');
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.WRITING_MODE;
      keyEvent0.setSource(gVTAttributedCharacterIterator_TextAttribute0);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setSelectableDateRange(timestamp0, timestamp0);
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.1962302574649577
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      System.setCurrentTimeMillis((-341L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxDayCharacters(1845);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.CHAR_INDEX;
      ActionEvent actionEvent0 = new ActionEvent(gVTAttributedCharacterIterator_TextAttribute0, (-574), (String) null, (-3264));
      actionEvent0.paramString();
      actionEvent0.paramString();
      jDayChooser0.setWeekOfYearVisible(false);
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.batik.gvt.text.GVTAttributedCharacterIterator$TextAttribute cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.15093828530084
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.weekPanel = (JPanel) jDayChooser0;
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.setWeekOfYearVisible(false);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.1287280798819306
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      JMenu jMenu0 = new JMenu();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte)22;
      byteArray0[7] = (byte)22;
      byteArray0[8] = (byte) (-29);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay((byte) (-29));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setMonth((byte) (-29));
      System.setCurrentTimeMillis(1752L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.2308802695494605
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte) (-40);
      byteArray0[4] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) set0, locale_FilteringMode0);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      jDayChooser0.setDecorationBackgroundVisible(false);
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.init();
      pDFInfo0.getCreationDate();
      jDayChooser0.setMinSelectableDate((Date) null);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1190997811351653
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      JMenu jMenu0 = new JMenu();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte)14;
      byteArray0[6] = (byte)22;
      byteArray0[7] = (byte)22;
      byteArray0[8] = (byte) (-29);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay(964);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setMonth(2178);
      JDayChooser jDayChooser1 = new JDayChooser(true);
      jDayChooser0.addListeners((byte)14);
      assertEquals(31, jDayChooser0.getDay());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2054607286107037
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      Date date0 = jDayChooser0.getMaxSelectableDate();
      SystemColor systemColor0 = SystemColor.windowBorder;
      jDayChooser0.isDayBordersVisible();
      jDayChooser0.setMinSelectableDate(date0);
      BrowseMode browseMode0 = new BrowseMode();
      jDayChooser0.getMinSelectableDate();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(browseMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.1194795941799534
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-672.7F);
      floatArray0[1] = 0.0721F;
      System.setCurrentTimeMillis(1257L);
      floatArray0[2] = (-2305.0F);
      floatArray0[3] = 0.0F;
      floatArray0[4] = (-1.0F);
      floatArray0[5] = 0.0F;
      floatArray0[6] = 884.0F;
      floatArray0[7] = (-1.0F);
      JDayChooser jDayChooser0 = new JDayChooser(true);
      ContainerListener containerListener0 = null;
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.3545241626571487
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      jPopupMenu1.setFocusTraversalPolicyProvider(false);
      jMenu0.isBorderPainted();
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 6, 478, 478, 6, 'z', (-1377), 592, 0, false, menuElementArray0, menuSelectionManager0);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(6);
      jDayChooser0.setMaxDayCharacters(5);
      jDayChooser0.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 5, (-1377), (-100), 36, 'z');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(true);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.3944007047085796
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (int) 'z';
      intArray0[2] = 0;
      intArray0[3] = 478;
      intArray0[4] = 478;
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(478, 0, intArray0, 478, 8928);
      jPopupMenu0.createImage((ImageProducer) memoryImageSource0);
      menuElementArray0[1] = (MenuElement) jPopupMenu1;
      JMenuItem jMenuItem0 = jMenu0.add("West");
      menuElementArray0[2] = (MenuElement) jMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 478, 1567L, 478, 478, 'z', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyTyped(menuKeyEvent0);
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(boolean0);
      
      jDayChooser0.setDayBordersVisible(true);
      jMenuItem0.doClick();
      jDayChooser0.setFocus();
      jDayChooser0.getSelectedDay();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.keyReleased(menuKeyEvent0);
      MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar)jDayChooser0.calendar;
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=1392409281320,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=1,YEAR=2014,MONTH=1,WEEK_OF_YEAR=7,WEEK_OF_MONTH=3,DAY_OF_MONTH=14,DAY_OF_YEAR=45,DAY_OF_WEEK=6,DAY_OF_WEEK_IN_MONTH=2,AM_PM=1,HOUR=8,HOUR_OF_DAY=20,MINUTE=21,SECOND=21,MILLISECOND=320,ZONE_OFFSET=0,DST_OFFSET=0]", mockGregorianCalendar0.toString());
      
      jDayChooser0.setEnabled(false);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getMinSelectableDate();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.0585780752841503
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getDaysInMonth();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.27188538733716
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = (int) 'z';
      intArray0[3] = 478;
      intArray0[4] = 478;
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(478, 0, intArray0, 478, 0);
      jPopupMenu0.createImage((ImageProducer) memoryImageSource0);
      menuElementArray0[1] = (MenuElement) jPopupMenu1;
      JMenuItem jMenuItem0 = jMenu0.add("West");
      menuElementArray0[2] = (MenuElement) jMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuKeyEvent menuKeyEvent0 = new MenuKeyEvent(jDayChooser0, 478, 1567L, 478, 478, 'z', menuElementArray0, menuSelectionManager0);
      jDayChooser0.keyTyped(menuKeyEvent0);
      jDayChooser0.isDayBordersVisible();
      JMenuBar jMenuBar0 = new JMenuBar();
      MenuSelectionManager menuSelectionManager1 = new MenuSelectionManager();
      MenuElement[] menuElementArray1 = new MenuElement[1];
      menuElementArray1[0] = (MenuElement) jPopupMenu1;
      MenuKeyEvent menuKeyEvent1 = new MenuKeyEvent(jPopupMenu1, 10, (-638L), 13, 'z', 'z', menuElementArray1, menuSelectionManager1);
      jDayChooser0.keyPressed(menuKeyEvent0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.0965652109688846
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      SVGGeneratorContext.GraphicContextDefaults sVGGeneratorContext_GraphicContextDefaults0 = new SVGGeneratorContext.GraphicContextDefaults();
      sVGGeneratorContext_GraphicContextDefaults0.getRenderingHints();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = GVTAttributedCharacterIterator.TextAttribute.X;
      jDayChooser0.getSelectedDay();
      sVGGeneratorContext_GraphicContextDefaults0.getRenderingHints();
      BufferedImage bufferedImage0 = Tile.LOADING_IMAGE;
      assertEquals(0, bufferedImage0.getMinTileX());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Point2D.Double point2D_Double0 = new Point2D.Double(0, 1.0);
      defaultCaret0.setFrameFromCenter((Point2D) point2D_Double0, (Point2D) point2D_Double0);
      jDayChooser0.removeMouseListener(defaultCaret0);
      jDayChooser0.setAlwaysFireDayProperty(true);
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1019, 1, 0, 1019, 0);
      jDayChooser0.today = (Calendar) mockGregorianCalendar0;
      jDayChooser0.getSelectedDay();
      Locale locale0 = null;
      DateFormatSymbols dateFormatSymbols0 = null;
      try {
        dateFormatSymbols0 = new DateFormatSymbols((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JMonthChooser jMonthChooser0 = new JMonthChooser();
      jMonthChooser0.isFocusable();
      jMonthChooser0.getAccessibleContext();
      jDayChooser0.setMonthChooser(jMonthChooser0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.1756654679400946
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[5];
      intArray0[1] = (int) 'z';
      intArray0[4] = 478;
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      jPopupMenu1.addHierarchyListener((HierarchyListener) null);
      KeyEvent keyEvent0 = new KeyEvent(jPopupMenu1, (-1377), (-421L), 23, 0, 'z');
      keyEvent0.setKeyCode(5175);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.keyPressed(keyEvent0);
      JButton jButton0 = new JButton();
      jDayChooser0.keyPressed(keyEvent0);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.206790369086877
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[21];
      intArray0[1] = (int) 's';
      jMenu0.getModel();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 478, 0L, (-285), 33, (-285), (-285), 115, 1660, true, menuElementArray0, menuSelectionManager0);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(478);
      jDayChooser0.setMaxDayCharacters(3);
      jDayChooser0.getSelectedDay();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(menuElementArray0, 12);
      jDayChooser0.setFocus();
      System.setCurrentTimeMillis(0L);
      jDayChooser0.getWeekdayForeground();
      assertEquals(3, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      jMenu0.getCursor();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      int[] intArray0 = new int[21];
      intArray0[1] = (int) 's';
      intArray0[3] = 478;
      intArray0[4] = 478;
      MenuSelectionManager.defaultManager();
      JDayChooser jDayChooser0 = new JDayChooser(true);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.325877091300684
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      jDayChooser0.getGraphicsConfiguration();
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      jPopupMenu1.setFocusTraversalPolicyProvider(false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 6, 478, 478, 6, 'z', (-1377), 592, 0, false, menuElementArray0, menuSelectionManager0);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(6);
      jDayChooser0.setMaxDayCharacters(5);
      jDayChooser0.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 5, (-1377), (-100), 36, 'z');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      boolean boolean0 = jDayChooser0.isWeekOfYearVisible();
      assertEquals(1, jDayChooser0.getDay());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.240161993746947
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getPropertyChangeListeners("TX^n");
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-852), false, jDayChooser0);
      jDayChooser0.focusLost(focusEvent0);
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.focusGained(focusEvent0);
      int int0 = 2333;
      long long0 = (-817L);
      int int1 = 502;
      char char0 = 'b';
      MenuElement[] menuElementArray0 = new MenuElement[5];
      StructuredMenuHolder structuredMenuHolder0 = new StructuredMenuHolder();
      MindMapMode mindMapMode0 = new MindMapMode();
      BrowseController browseController0 = null;
      try {
        browseController0 = new BrowseController(mindMapMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.1336798095581577
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MockInstant.ofEpochSecond(2423L);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      PDFInfo pDFInfo0 = new PDFInfo();
      Object[] objectArray0 = new Object[8];
      objectArray0[5] = (Object) pDFInfo0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 7);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxSelectableDate((Date) null);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.1017031813044653
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-672.7F);
      floatArray0[1] = 0.0721F;
      System.setCurrentTimeMillis(1257L);
      floatArray0[2] = (-2305.0F);
      floatArray0[3] = 0.0F;
      floatArray0[4] = (-1.0F);
      floatArray0[5] = 0.0F;
      floatArray0[1] = 884.0F;
      floatArray0[7] = (-1.0F);
      floatArray0[8] = 1167.9839F;
      color0.getRGBColorComponents(floatArray0);
      Color.getColor("Table.createPrimaryKey(column)", 1383);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setForeground(color0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      short[][] shortArray0 = new short[0][0];
      ShortLookupTable shortLookupTable0 = null;
      try {
        shortLookupTable0 = new ShortLookupTable((-1), shortArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.2393907380955107
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      PDFDocumentGraphics2D pDFDocumentGraphics2D0 = new PDFDocumentGraphics2D(true);
      FontInfo fontInfo0 = pDFDocumentGraphics2D0.getFontInfo();
      PDFDocument pDFDocument0 = new PDFDocument("(; ");
      PDFGraphics2D pDFGraphics2D0 = new PDFGraphics2D(false, fontInfo0, pDFDocument0, (PDFResourceContext) null, "ISO-8859-1", "3", 0.1F);
      jDayChooser0.printComponents(pDFGraphics2D0);
      defaultTableModel0.fireTableRowsDeleted((-2508), (-119));
      JTable jTable0 = new JTable(defaultTableModel0);
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      jPopupMenu0.setFocusTraversalPolicyProvider(true);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      menuElementArray0[1] = (MenuElement) jPopupMenu0;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu0, 0, 0, (-346), 6, (-374), (-346), (-1350), 29, false, menuElementArray0, menuSelectionManager0);
      String string0 = AbstractButton.ROLLOVER_ICON_CHANGED_PROPERTY;
      jDayChooser0.setDay(0);
      jDayChooser0.setMaxDayCharacters(2);
      jDayChooser0.getSelectedDay();
      jDayChooser0.getGraphicsConfiguration();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel((Object[]) null, 2199);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(false);
      jDayChooser0.drawWeeks();
      assertEquals(2, jDayChooser0.getMaxDayCharacters());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.1016375222848858
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Color color0 = Color.LIGHT_GRAY;
      float[] floatArray0 = new float[9];
      floatArray0[0] = (-672.7F);
      floatArray0[1] = 0.0721F;
      System.setCurrentTimeMillis(1257L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fKFR4]z(.^");
      floatArray0[2] = (-2305.0F);
      floatArray0[3] = 0.0F;
      floatArray0[4] = (-1.0F);
      floatArray0[5] = 0.0F;
      floatArray0[6] = 884.0F;
      floatArray0[7] = (-1.0F);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      boolean boolean0 = jDayChooser0.isDayBordersVisible();
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(boolean0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.1656137243334617
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      assertEquals(14, jDayChooser0.getDay());
      
      Locale locale0 = Locale.CANADA;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      locale0.getScript();
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)20;
      byteArray0[4] = (byte)25;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Metal");
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay((byte) (-112));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setMonth((byte)25);
      JDayChooser jDayChooser1 = new JDayChooser(false);
      jDayChooser1.initDecorations();
      int int0 = jDayChooser1.getDay();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.058591591902833
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      System.setCurrentTimeMillis((-341L));
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte)25;
      byteArray0[3] = (byte)25;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Locale locale0 = Locale.KOREA;
      locale0.getUnicodeLocaleAttributes();
      Calendar.getAvailableCalendarTypes();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("Xr|uZN|bK~!(k>V}.]", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("oVLq/{/=doyZexm");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=ovlq/{/=doyzexm
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.1336798095581577
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      boolean boolean0 = false;
      jDayChooser0.setDecorationBordersVisible(false);
      jDayChooser0.getMaxDayCharacters();
      try { 
        jDayChooser0.getMousePosition();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.Component", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.096641232508321
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O~eea~,w%lwXN.s4");
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      jDayChooser0.setDay(21);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      jDayChooser0.setMonth((-3266));
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners((-1425));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.0966040333564617
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(2433L);
      Timestamp.from(instant0);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.setObjectNumber(894);
      pDFInfo0.getCreationDate();
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMonth(38);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.271966418047799
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      locale0.getScript();
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)66;
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) stack0, (Collection<Locale>) linkedHashSet0, locale_FilteringMode0);
      byteArray0[4] = (byte)25;
      Stack<Locale.LanguageRange> stack1 = new Stack<Locale.LanguageRange>();
      locale0.getUnicodeLocaleAttributes();
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("day");
      stack1.add(locale_LanguageRange0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack1, (Collection<String>) set0, locale_FilteringMode1);
      jDayChooser0.setLocale(locale0);
      String string0 = AbstractButton.CONTENT_AREA_FILLED_CHANGED_PROPERTY;
      jDayChooser0.setDay(25);
      jDayChooser0.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-837), (-527L), (byte)66, 747, '');
      InputEvent.getModifiersExText(25);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      assertEquals(25, jDayChooser0.getDay());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.23080938526805
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte) (-40);
      byteArray0[4] = (byte)14;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      stack0.sort(comparator0);
      Set<String> set0 = Calendar.getAvailableCalendarTypes();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) set0, locale_FilteringMode0);
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      MockDate mockDate0 = new MockDate(12, 1572, (byte)20, 27, (-1693));
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setMaxSelectableDate(mockDate0);
      jDayChooser0.getMaxSelectableDate();
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.170087880043637
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[1];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      jPopupMenu0.removeVetoableChangeListener((VetoableChangeListener) null);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      jMenu0.addHierarchyListener((HierarchyListener) null);
      jPopupMenu0.hasFocus();
      jPopupMenu1.setFocusTraversalPolicyProvider(false);
      jMenu0.isBorderPainted();
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 6, 478, 478, 6, 'z', (-1377), 592, 0, false, menuElementArray0, menuSelectionManager0);
      String string0 = AbstractButton.CONTENT_AREA_FILLED_CHANGED_PROPERTY;
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.updateUI();
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.getDecorationBackgroundColor();
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.325877091300684
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JDayChooser jDayChooser0 = new JDayChooser();
      MenuElement[] menuElementArray0 = new MenuElement[3];
      JMenu jMenu0 = new JMenu();
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      JPopupMenu jPopupMenu1 = new JPopupMenu();
      jPopupMenu1.setFocusTraversalPolicyProvider(false);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu1, 6, 478, 478, 6, 'z', (-1377), 592, 0, false, menuElementArray0, menuSelectionManager0);
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      jDayChooser0.setDay(6);
      jDayChooser0.setMaxDayCharacters(5);
      jDayChooser0.getSelectedDay();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 5, (-1377), (-100), 36, 'z');
      InputEvent.getModifiersExText(21);
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.setFocus();
      jDayChooser0.getLocale();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.292142188093928
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      MockInstant.ofEpochSecond(2423L);
      jDayChooser0.setDecorationBackgroundVisible(false);
      assertEquals(14, jDayChooser0.getDay());
      
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      PDFInfo pDFInfo0 = new PDFInfo();
      jDayChooser0.setDay(84);
      jDayChooser0.setMaxDayCharacters(1414);
      jDayChooser0.getSelectedDay();
      jDayChooser0.updateUI();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 84, (-224L), (-511), 486, '3');
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.WRITING_MODE;
      keyEvent0.setSource(gVTAttributedCharacterIterator_TextAttribute0);
      jDayChooser0.keyPressed(keyEvent0);
      Object[] objectArray0 = new Object[17];
      KeyEvent.getKeyText((int) gVTAttributedCharacterIterator_TextAttribute0.ARABIC_NONE);
      objectArray0[0] = (Object) gVTAttributedCharacterIterator_TextAttribute0;
      objectArray0[10] = (Object) keyEvent0;
      objectArray0[3] = (Object) gVTAttributedCharacterIterator_TextAttribute0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) pDFInfo0;
      objectArray0[6] = (Object) null;
      objectArray0[7] = (Object) gVTAttributedCharacterIterator_TextAttribute0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 7);
      jDayChooser0.setFocus();
      jDayChooser0.setFocus();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2708720152376385
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      JTable jTable0 = new JTable(defaultTableModel0);
      JPopupMenu jPopupMenu0 = new JPopupMenu();
      jPopupMenu0.setFocusTraversalPolicyProvider(true);
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuElement[] menuElementArray0 = new MenuElement[2];
      menuElementArray0[0] = (MenuElement) jPopupMenu0;
      menuElementArray0[1] = (MenuElement) jPopupMenu0;
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jPopupMenu0, 0, 0, (-346), 6, (-374), (-346), (-1377), 29, false, menuElementArray0, menuSelectionManager0);
      menuDragMouseEvent0.paramString();
      jDayChooser0.getToolTipText((MouseEvent) menuDragMouseEvent0);
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(0);
      jDayChooser0.setMaxDayCharacters(2);
      jDayChooser0.getSelectedDay();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel((Object[]) null, 2199);
      jDayChooser0.setFocus();
      jDayChooser0.setEnabled(false);
      int int0 = jDayChooser0.getMaxDayCharacters();
      assertEquals(2, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.196242832443266
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      Locale locale0 = Locale.CANADA;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      locale0.getScript();
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)20;
      byteArray0[4] = (byte)25;
      PDFInfo pDFInfo0 = new PDFInfo();
      pDFInfo0.getCreationDate();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((byte) (-112), (byte)42, (byte)25);
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      jDayChooser0.setSelectableDateRange((Date) null, date0);
      MockDate mockDate0 = new MockDate((byte)20, (byte) (-112), (byte)42, (byte)20, 11);
      MockDate mockDate1 = new MockDate(0L);
      mockDate1.setTime((byte)25);
      MockDate.UTC((-84), 14, 1756, (byte)20, (byte)22, (-84));
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setMaxSelectableDate(mockDate0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }
}
