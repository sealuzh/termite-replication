/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 04:50:40 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      User user0 = new User();
      user0.setCounty("");
      User user1 = new User();
      user0.setAffiliation("");
      User user2 = new User("", "");
      user2.setPostCode("?mU7oXbP>/jBo0mHg");
      user1.setEmail((String) null);
      User user3 = new User();
      user3.setFirstName("|`HgLN");
      user3.setAddressLine2("NB}Wcp{>#h-cv=I(");
      user3.setStatus("0bp~YNGbzjHK+k[%[");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.setLabel((String) null);
      derivedVariable0.setName("NB}Wcp{>#h-cv=I(");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      User user4 = new User();
      User user5 = new User();
      System.setCurrentTimeMillis((-1L));
      derivedVariable0.getLabel();
      assertEquals("NB}Wcp{>#h-cv=I(", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.687091603856444
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setYear("UNABLE_TO_DELETE_USER");
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      rawVariable0.cloneAttributes(derivedVariable0);
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnEnd();
      user0.setAddressLine2("");
      rawVariable0.clone();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      rawVariable0.clone();
      assertEquals("UNABLE_TO_DELETE_USER", rawVariable0.getYear());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.7463568973953323
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      valueLabel0.hasSameDisplayName(valueLabel4);
      derivedVariable0.removeValueLabel(valueLabel3);
      derivedVariable0.setName((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("-");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("-", rawVariable0.getAlias());
      
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2100L);
      derivedVariable0.getName();
      derivedVariable0.getQuestionNumber();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.8383337333974468
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.setName("L[IzQE}mZv9hm1Is:{q");
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      User user2 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.hasSameDisplayName(derivedVariable2);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable4, rawVariable2);
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable1.getAlternativeVariable();
      assertEquals("L[IzQE}mZv9hm1Is:{q", derivedVariable1.getName());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.862681628353659
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.setName("UNABLE_TO_COMMIT_CHANGES");
      User user0 = new User();
      derivedVariable0.setCleaningStatus("UNABLE_TO_COMMIT_CHANGES");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.columnEnd = "UNABLE_TO_COMMIT_CHANGES";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      System.setCurrentTimeMillis(1689L);
      derivedVariable1.getDisplayName();
      assertEquals("UNABLE_TO_COMMIT_CHANGES", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.868898020744851
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setAlias("variable.codeBookNumber.label");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath("variable.codeBookNumber.label");
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setForm("~]NI<rpSIGC^W~SIUO");
      derivedVariable1.containsSourceVariable(derivedVariable0);
      derivedVariable0.setCodeBookNumber("variable.codeBookNumber.label");
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getFilePath();
      derivedVariable0.getValueLabels();
      derivedVariable0.getCategory();
      derivedVariable0.clone();
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6593340983935647
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0bp~YNGbzHK+k[%[");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0bp~YNGbzHK+k[%[");
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("general.fieldValue.unknown", "general.fieldValue.unknown");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setIdentifier((-2564));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("0bp~YNGbzjHK+k[%[");
      ontologyTerm1.setNameSpace("7tbI");
      rawVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      System.setCurrentTimeMillis(1461L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.177805086843726
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("j&6L=c8VE", "j&6L=c8VE");
      derivedVariable0.setIsNewRecord(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.setAvailability("(X|rVBHy%-Wc)N_");
      user0.setUserID("}%qdsQ9Sf!06Kku;H5");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.isNewRecord();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.getNotes();
      derivedVariable0.getName();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList2);
      rawVariable0.getCodeBookNumber();
      derivedVariable0.getIdentifier();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertTrue(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.78581255446605
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel2.hasSameDisplayName(valueLabel3);
      derivedVariable0.codeBookNumber = "-";
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setName("+");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User();
      user0.setPhone("+");
      Variable.validateFields(derivedVariable0);
      assertEquals("-", derivedVariable0.getCodeBookNumber());
      assertEquals("+", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "O;_V !O%b#s&C7\"1d(";
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCodeBookNumber();
      assertEquals("O;_V !O%b#s&C7\"1d(", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("9");
      rawVariable0.setCleaningDescription((String) null);
      rawVariable0.getSupportingDocuments();
      rawVariable0.setCodeBookNumber("9");
      rawVariable0.getCleaningDescription();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("9", rawVariable0.getCleaningStatus());
      
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.removeValueLabel(valueLabel0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel3.hasSameDisplayName(valueLabel4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("6}p");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      derivedVariable1.getName();
      assertEquals("6}p", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel0.getDisplayName();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      valueLabel3.setMissingValue(false);
      valueLabel0.hasSameDisplayName(valueLabel3);
      ValueLabel valueLabel7 = new ValueLabel();
      ValueLabel valueLabel8 = new ValueLabel();
      valueLabel7.hasSameDisplayName(valueLabel8);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setLabel("# BcYi[7s;r: .B");
      derivedVariable0.setName("variable.category.label");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getLabel();
      assertEquals("# BcYi[7s;r: .B", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.setLabel("?l#[N6(}u$");
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.getDisplayName();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel2.setValue("-");
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabel3.setValue("SmGm/");
      ValueLabel.validateFields(valueLabel2);
      valueLabel3.setMissingValue(false);
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel6.hasSameDisplayName(valueLabel4);
      derivedVariable0.setLabel("+");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getLabel();
      assertEquals("+", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4989990056051803
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.isCleaned();
      rawVariable0.getQuestionNumber();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "blank";
      derivedVariable0.setAlias("blank");
      derivedVariable0.getAlias();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlias("blank");
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "mE'Rb_xJu";
      derivedVariable0.setIsNewRecord(false);
      String string0 = derivedVariable0.getFilePath();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals("", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7687223429982204
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("MkPQlm`!>");
      supportingDocument0.setTitle("UNABLE_TO_CHECK_CATEGORY_DUPLICATE");
      rawVariable0.setCleaned(true);
      supportingDocument0.setDescription("MkPQlm`!>");
      supportingDocument0.setDocumentCode("INVALID_ALIAS_FILE_PATH");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      ValueLabel.validateFields(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("+");
      assertEquals("+", derivedVariable1.getName());
      
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getName();
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.7845238125730964
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("MkPQlm`!>");
      supportingDocument0.setTitle("MkPQlm`!>");
      rawVariable0.setCleaned(true);
      supportingDocument0.setDescription("MkPQlm`!>");
      supportingDocument0.setDocumentCode("INVALID_ALIAS_FILE_PATH");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeValueLabel(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable0.setName("mu:^&X[6");
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      User user1 = new User();
      System.setCurrentTimeMillis((-2564L));
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getName();
      assertEquals("mu:^&X[6", derivedVariable0.getName());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.columnStart = ",b1D>e";
      derivedVariable0.containsSourceVariable(derivedVariable1);
      derivedVariable0.addSourceVariable(derivedVariable1);
      String string0 = derivedVariable0.getAvailability();
      assertEquals("Unknown", string0);
      
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getNotes();
      derivedVariable0.getOntologyTerms();
      String string1 = derivedVariable1.getFilePath();
      assertEquals("", string1);
      assertEquals("", derivedVariable1.getCodeBookNumber());
      assertEquals("", derivedVariable1.getNotes());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.5810259613520468
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setNotes("variable.isCoded.label");
      derivedVariable0.getFilePath();
      derivedVariable0.clone();
      assertEquals("variable.isCoded.label", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.727492258648692
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      User user0 = new User("==", "J0_T\"oLZFL");
      User user1 = new User("noP8(5", "J0_T\"oLZFL");
      user0.setCity("Unknown");
      user0.setPassword("noP8(5");
      User user2 = new User("NON_EXISTENT_CLEANING_STATE", "");
      user1.setAffiliation("");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      rawVariable0.setNotes("J0_T\"oLZFL");
      rawVariable0.getForm();
      rawVariable0.isCoded();
      rawVariable0.getAvailability();
      rawVariable0.getDisplayName();
      rawVariable0.getNotes();
      rawVariable0.isCleaned();
      rawVariable0.getName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable1);
      User user3 = new User("NON_EXISTENT_CLEANING_STATE", ">h?Ak");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user3, derivedVariable0, derivedVariable1);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.8858318167384653
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User((String) null, "}");
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.columnStart = null;
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable3, rawVariable2);
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertFalse(rawVariable2.isCleaned());
      assertEquals(0, rawVariable2.getIdentifier());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals(1, arrayList1.size());
      assertFalse(rawVariable2.isNewRecord());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = null;
      rawVariable0.addSupportingDocument((SupportingDocument) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument(supportingDocument1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0ba~YNOGbzHK+z[%[");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0ba~YNOGbzHK+z[%[");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setIdentifier((-1841862325));
      ontologyTerm5.setNameSpace("0ba~YNOGbzHK+z[%[");
      ontologyTerm4.setOntologyName("GZNpzRIV_V>-F");
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      System.setCurrentTimeMillis(1461L);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9389248768935974
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("^gsoJq_3Q");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnEnd = "NON_EXISTENT_USER";
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable0.getFilePath();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.getSupportingDocuments();
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      assertEquals("NON_EXISTENT_USER", derivedVariable0.getColumnEnd());
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.8051063440149733
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(1);
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.createVariableSummary();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getColumnEnd();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.add((Variable) derivedVariable0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList2.add(supportingDocument1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      supportingDocument4.clone();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList6 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList7 = new ArrayList<SupportingDocument>();
      arrayList7.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList8 = new ArrayList<SupportingDocument>();
      arrayList1.spliterator();
      ArrayList<SupportingDocument> arrayList9 = new ArrayList<SupportingDocument>(arrayList8);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = (OntologyTerm)ontologyTerm1.clone();
      ontologyTerm1.setNameSpace("UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      rawVariable0.addOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm3);
      rawVariable1.setValueLabels((ArrayList<ValueLabel>) null);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ValueLabel valueLabel0 = new ValueLabel();
      // Undeclared exception!
      try { 
        rawVariable1.addValueLabel(valueLabel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.897130735569743
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      user0.setPostCode("?l#[N6(}u$");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel0.getDisplayName();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel2.setValue("?l#[N6(}u$");
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.validateFields(valueLabel5);
      valueLabel5.setMissingValue(false);
      valueLabel2.hasSameDisplayName(valueLabel0);
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel2.hasSameDisplayName(valueLabel0);
      derivedVariable0.removeValueLabel(valueLabel0);
      Variable.validateFields(derivedVariable0);
      derivedVariable0.setLabel("+");
      derivedVariable0.setName("+");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "as8]nC7m^.D_^@1}K";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getLabel();
      assertEquals("+", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.7017087941039986
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.setIdentifier((-1879048189));
      rawVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable1.getCodeBookNumber();
      rawVariable0.getIdentifier();
      User user0 = new User((String) null, ";r5zO\"iW4x2");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      assertEquals("-1879048189", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("*L%,");
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getNotes();
      derivedVariable0.getForm();
      assertEquals("*L%,", derivedVariable0.getForm());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      User user0 = new User();
      user0.setCounty("");
      User user1 = new User("", "");
      user0.setAffiliation("");
      User user2 = new User("", "");
      user1.setUserID("a'");
      user2.setPostCode("?mU7oXbP>/jBo0mHg");
      user1.setEmail((String) null);
      User user3 = new User("", "?mU7oXbP>/jBo0mHg");
      user3.setAddressLine2("");
      user3.setStatus("di(\"=`So4'-!Rf");
      user0.setAffiliation("p0yThEAjY|F3gFD.");
      user0.setAffiliation("NON_EXISTENT_USER");
      User user4 = new User();
      user4.setPassword("");
      user4.setAffiliation("}3?sY1");
      user0.setAddressLine1("");
      user4.setPhone("di(\"=`So4'-!Rf");
      User user5 = new User("macaw.system'hageEvKntType", "jw|Pn0Eh5!\"f[f");
      User user6 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user7 = new User();
      User user8 = new User("e^dq)Y&=z6)h-DX<h", "");
      user8.setPhone("=s6L!");
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.6384041189708594
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      User user0 = new User();
      User user1 = new User("noP8(5", "J0_T\"oLZFL");
      user0.setAffiliation("noP8(5");
      user0.setCity("Unknown");
      user0.setPassword("noP8(5");
      user0.setAffiliation("NON_EXISTENT_CLEANING_STATE");
      User user2 = new User();
      User user3 = new User();
      user3.setAddressLine1("J0_T\"oLZFL");
      User user4 = new User("Unknown", "N");
      user2.setAddressLine2("J0_T\"oLZFL");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      System.setCurrentTimeMillis((-2463L));
      System.setCurrentTimeMillis((-2463L));
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.8090273065804703
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("|/%^?28/&bVZ");
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("v");
      ontologyTerm0.setIdentifier((-3457));
      ontologyTerm0.setOntologyName("v");
      ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.isCoded();
      rawVariable0.createVariableSummary();
      User user0 = new User("Unknown", "bTR\"g^Z6q.gwKp");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      rawVariable0.clone();
      rawVariable0.getCleaningStatus();
      assertEquals("|/%^?28/&bVZ", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      User user0 = new User("n", "varialelabel.lael");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("D[oTOwxico:lXgy@<S");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setIdentifier(1701);
      rawVariable0.addOntologyTerm(ontologyTerm2);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm4);
      assertFalse(boolean0);
      
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList6 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList7 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList8 = derivedVariable0.getSupportingDocuments();
      arrayList8.spliterator();
      ArrayList<SupportingDocument> arrayList9 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList10 = new ArrayList<SupportingDocument>(arrayList2);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList8);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("9");
      ontologyTerm0.setOntologyName("D[oTOwxico:lXgy@<S");
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setTerm("D[oTOwxico:lXgy@<S");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("(X|rVBHy%-Wc)N_");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      System.setCurrentTimeMillis((-9L));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      ValueLabel valueLabel0 = new ValueLabel();
      System.setCurrentTimeMillis((-1L));
      boolean boolean0 = rawVariable1.isCleaned();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = rawVariable0.getOntologyTerms();
      rawVariable0.setOntologyTerms(arrayList2);
      supportingDocument0.setIdentifier(1633);
      rawVariable0.setQuestionNumber("a-rhV^D;&'P");
      rawVariable0.getValueLabels();
      rawVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      rawVariable0.getSupportingDocuments();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("a-rhV^D;&'P", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSourceVariable(derivedVariable0);
      derivedVariable1.columnStart = "@Lp2,\"IVLaq9}:B3a";
      derivedVariable0.containsSourceVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.75406995444614
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.removeSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.ensureCapacity((-382));
      derivedVariable0.setSourceVariables(arrayList1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.setCleaningStatus("9");
      derivedVariable0.setCleaningDescription("<=73");
      rawVariable0.getSupportingDocuments();
      derivedVariable0.getIdentifier();
      rawVariable0.setCodeBookNumber("9");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getIdentifier();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.clone();
      derivedVariable0.getFilePath();
      rawVariable0.getCleaningDescription();
      User user0 = new User("<=73", "");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAvailability("");
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      derivedVariable0.getAlias();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable1);
      assertEquals("9", rawVariable0.getCleaningStatus());
      
      derivedVariable1.getName();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.970275428696818
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setValue("variable.notes.label");
      valueLabel0.hasSameDisplayName(valueLabel2);
      derivedVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setLabel("9");
      derivedVariable0.setName("Yfzd]^/])lo*{G/");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("UNABLE_TO_UPDATE_CLEANING_STATE");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      user0.setAddressLine2("user.county.saveChanges");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      User user1 = new User();
      User user2 = new User("3#A`3FGaCe", "UNABLE_TO_DELETE_SUPPORTING_DOCUMENT");
      user0.setPhone("0bp~YNGbzHK+k[%[");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      derivedVariable1.getName();
      derivedVariable1.getAlternativeVariable();
      assertEquals("9", derivedVariable1.getLabel());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.024215884730063
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("|/%^?28/&bVZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("v");
      ontologyTerm0.setOntologyName("v");
      OntologyTerm ontologyTerm1 = (OntologyTerm)ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      User user0 = new User("v", "Unknown");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm1, ontologyTerm1);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setCleaned(false);
      rawVariable0.createVariableSummary();
      rawVariable0.setIdentifier(2336);
      User user1 = new User("", "supportingDocument.description.saveChanges");
      user0.setStatus("$VW@IN\"F");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertEquals("|/%^?28/&bVZ", rawVariable0.getCodeBookNumber());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.6634768436297365
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument2);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList1.add(supportingDocument1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.805975801225258
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlias("supportingDocument.title.label");
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel2.hasSameDisplayName(valueLabel3);
      derivedVariable0.setLabel("-");
      derivedVariable0.setName("+");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      user1.setUserID("supportingDocument.title.label");
      User user2 = new User();
      user1.setPhone("supportingDocument.title.label");
      System.setCurrentTimeMillis(1840L);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getName();
      assertEquals("supportingDocument.title.label", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.000970217924125
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setForm("VARIABLE");
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel2.hasSameDisplayName(valueLabel3);
      derivedVariable0.removeValueLabel(valueLabel2);
      valueLabel2.setLabel("-");
      derivedVariable0.setLabel("-");
      derivedVariable0.setName("+");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable3);
      assertEquals("+", derivedVariable0.getName());
      
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable1.getName();
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable5 = new RawVariable();
      Variable.validateFields(rawVariable5);
      assertEquals("Unknown", rawVariable5.getCleaningStatus());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      arrayList5.add(supportingDocument6);
      SupportingDocument supportingDocument8 = new SupportingDocument();
      arrayList5.add(supportingDocument8);
      rawVariable0.getNotes();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.5397543779043237
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      valueLabel0.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.setLabel((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      LinkedList<MacawChangeEvent> linkedList0 = new LinkedList<MacawChangeEvent>();
      arrayList0.containsAll(linkedList0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "Unknown";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_CHECK_DOCUMENT_EXISTS");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("", variableSummary0.getYear());
      assertEquals(0, variableSummary0.getIdentifier());
      assertEquals("", variableSummary0.getLabel());
      assertEquals("", variableSummary0.getName());
      
      User user0 = new User("Unknown", "Unknown");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable0.containsOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.78544177211529
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      derivedVariable0.notes = "0\u0005 'Dw,D7R$?wqgLI";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = "U$WWM4h{I{<m1>VC=K";
      User user1 = new User();
      User user2 = new User("w{s4uLEDg", "kK<fE99-");
      user1.setPhone("+6}3&");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      assertEquals("U$WWM4h{I{<m1>VC=K", derivedVariable0.getColumnEnd());
      
      Variable.validateFields(derivedVariable1);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.78511629983462
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("NON_EXISTENT_USER");
      rawVariable0.setCategory("(X|rVBHy%-Wc)N_");
      rawVariable0.setQuestionNumber("NON_EXISTENT_USER");
      User user0 = new User("NON_EXISTENT_USER", "jXYB(H");
      user0.setCounty("jXYB(H");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaned(true);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      rawVariable0.setCleaned(false);
      rawVariable0.getQuestionNumber();
      assertEquals("NON_EXISTENT_USER", rawVariable0.getQuestionNumber());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.addSourceVariables(arrayList0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.6644228977843176
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setYear("variable.isCoded4label");
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable1.cloneAttributes(derivedVariable0);
      rawVariable0.isNewRecord();
      rawVariable0.cloneAttributes(rawVariable2);
      assertEquals("variable.isCoded4label", rawVariable2.getYear());
      
      User user0 = new User("variable.isCoded4label", "variable.isCoded4label");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.286445284696217
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      derivedVariable0.setLabel("0\u0005 'Dw,D7R$?wqgLI");
      derivedVariable0.notes = "0\u0005 'Dw,D7R$?wqgLI";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = "U$WWM4h{I{<m1>VC=K";
      derivedVariable0.createVariableSummary();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("0\u0005 'Dw,D7R$?wqgLI", derivedVariable0.getLabel());
      
      int int0 = rawVariable0.getIdentifier();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.3448446247581223
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel0);
      valueLabel1.hasSameDisplayName(valueLabel2);
      derivedVariable0.setName("6}p");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getCategory();
      assertEquals("6}p", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User("&k\"", "?e'luf!oA");
      User user1 = new User();
      user1.setCity("&k\"");
      user1.setEmail("9");
      user0.setAffiliation("ontologyTerm.ontologyName.saveChanges");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0ba~YNOGbzHK+z[%[");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      arrayList4.add(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList6 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList7 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList8 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList9 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument3);
      ArrayList<SupportingDocument> arrayList10 = new ArrayList<SupportingDocument>();
      arrayList6.spliterator();
      ArrayList<SupportingDocument> arrayList11 = new ArrayList<SupportingDocument>(arrayList2);
      derivedVariable1.removeSupportingDocuments(arrayList9);
      System.setCurrentTimeMillis(1387L);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.7652090645551968
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getValueLabels();
      rawVariable0.clone();
      rawVariable0.clone();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.getCodeBookNumber();
      Variable.validateFields(rawVariable0);
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        rawVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.786694220346919
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel2.hasSameDisplayName(valueLabel3);
      derivedVariable0.codeBookNumber = "-";
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("-", derivedVariable0.getCodeBookNumber());
      
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable2, derivedVariable2);
      assertEquals("Unknown", derivedVariable2.getCategory());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.950298795445431
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.differencesExist(user0, rawVariable1, valueLabel4, valueLabel4);
      valueLabel2.hasSameDisplayName(valueLabel3);
      derivedVariable0.removeValueLabel(valueLabel2);
      derivedVariable0.setLabel("-");
      derivedVariable0.setName("+");
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.form = "INVALID_ALIAS_FILE_PATH";
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable3);
      assertEquals("INVALID_ALIAS_FILE_PATH", rawVariable3.getForm());
      
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      rawVariable1.getName();
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable5 = new RawVariable();
      Variable.validateFields(rawVariable5);
      assertEquals("Unknown", rawVariable5.getAvailability());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.5545558491949714
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.notes = ";IP$FiIPo@|T";
      User user0 = new User(";IP$FiIPo@|T", "variable.saveChanges.valueChanged");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      User user1 = new User(";IP$FiIPo@|T", ";IP$FiIPo@|T");
      user1.setUserID("variable.year.label");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      System.setCurrentTimeMillis(0L);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList1);
      assertEquals(";IP$FiIPo@|T", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.834150161805991
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable0);
      derivedVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      derivedVariable0.notes = "0\u0005 'Dw,D7R$?wqgLI";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable0.columnEnd = "U$WWM4h{I{<m1>VC=K";
      User user1 = new User("U$WWM4h{I{<m1>VC=K", "0\u0005 'Dw,D7R$?wqgLI");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      user1.setPhone("0\u0005 'Dw,D7R$?wqgLI");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      assertEquals(ChangeEventType.VARIABLE, macawChangeEvent0.getChangeType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.862681628353659
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel2.hasSameDisplayName(valueLabel3);
      derivedVariable0.removeValueLabel(valueLabel2);
      derivedVariable0.setLabel("-");
      derivedVariable0.setName("+");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("+");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      user0.setAddressLine2("0bp~YNGbzHK+k[%[");
      User user1 = new User();
      User user2 = new User("-", "-");
      User user3 = new User("variable.cleaningDescription.label", "+");
      user3.setPhone("+");
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      derivedVariable0.getName();
      assertEquals("+", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.6959764342412518
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "supportingDocument.description.saveChanges";
      derivedVariable1.setQuestionNumber("supportingDocument.description.saveChanges");
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("supportingDocument.description.saveChanges");
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.clone();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.clone();
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable0.setYear("supportingDocument.description.saveChanges");
      User user0 = new User("", "YK;{^JSmfrQ(v0/");
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      derivedVariable1.getCleaningStatus();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertEquals("supportingDocument.description.saveChanges", derivedVariable0.getYear());
      
      rawVariable0.getColumnEnd();
      rawVariable0.getForm();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      User user0 = new User();
      user0.setCounty("");
      User user1 = new User();
      user0.setAffiliation("");
      User user2 = new User("", "");
      user2.setPostCode("?mU7oXbP>/jBo0mHg");
      user1.setEmail((String) null);
      User user3 = new User();
      user3.setAddressLine2("NB}Wcp{>#h-cv=I(");
      user3.setStatus("0bp~YNGbzjHK+k[%[");
      user0.setAffiliation("n&ZRW");
      user0.setAffiliation("NON_EXISTENT_USER");
      User user4 = new User((String) null, "NON_EXISTENT_USER");
      User user5 = new User();
      user5.setPassword("");
      user5.setAffiliation("}3?sY1");
      user0.setAddressLine1("");
      user5.setPhone("0bp~YNGbzjHK+k[%[");
      User user6 = new User("macaw.system'ChangeEvKntType", "jw|Pn0Eh5!\"f[f");
      User user7 = new User();
      User user8 = new User();
      User user9 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user9, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0ba~YNOGbzHK+z[%[");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0ba~YNOGbzHK+z[%[");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.setCoded(false);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setOntologyName("0ba~YNOGbzHK+z[%[");
      ontologyTerm5.setNameSpace("0ba~YNOGbzHK+z[%[");
      rawVariable0.addOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      System.setCurrentTimeMillis(1461L);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setAvailability("2p*GB*'");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        arrayList0.listIterator(1136);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1136
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.685418278036002
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.notes = ";IP$FiIPo@|T";
      User user0 = new User(";IP$FiIPo@|T", "variable.saveChanges.valueChanged");
      User.detectFieldChanges(user0, user0, user0);
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      User user1 = new User();
      user1.setUserID("general.error.blankField");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.clone();
      assertEquals(";IP$FiIPo@|T", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.clone();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setCodeBookNumber("9");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("9");
      ontologyTerm0.setOntologyName("9");
      ontologyTerm0.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      String string0 = "Unknown";
      User user0 = new User("v", "Unknown");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.setNotes((String) null);
      derivedVariable0.setQuestionNumber("!T3_dzUbz>0oUy=");
      rawVariable0.getCleaningDescription();
      derivedVariable0.setCategory("");
      derivedVariable0.setYear("!T3_dzUbz>0oUy=");
      derivedVariable0.addSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      rawVariable0.setColumnStart("!T3_dzUbz>0oUy=");
      arrayList0.add((OntologyTerm) null);
      derivedVariable0.setOntologyTerms(arrayList0);
      rawVariable0.setIsNewRecord(false);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setCategory("");
      rawVariable0.getColumnStart();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_CREATE_CHANGE_EVENT");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNameSpace("");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0Sp~YNGbjHK+k[%[");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      System.setCurrentTimeMillis(2407L);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm0));
      
      rawVariable0.getCleaningDescription();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "oVbiI";
      String string0 = rawVariable0.getColumnStart();
      assertEquals("", string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      User user0 = new User("n", "variable.label.label");
      user0.setCity("variable.label.label");
      user0.setEmail("n");
      user0.setAffiliation("n");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "Zl7Fe&vs7.P7s7@P8";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("Zl7Fe&vs7.P7s7@P8", derivedVariable0.getColumnEnd());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setOntologyName("w");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("w");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setTerm("w");
      ontologyTerm4.setNameSpace("*hA=<b`bo`oy`v/A V");
      rawVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.5350165608959494
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.form = "2sjR2";
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("", derivedVariable0.getForm());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      User user0 = new User();
      user0.setCounty("");
      User user1 = new User("", "");
      user0.setAffiliation("");
      User user2 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNameSpace("-E1$)^.0\"_N");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm("Qa\"-K");
      ontologyTerm3.setNameSpace("0bp~YNGbzjHK+k[%[");
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      System.setCurrentTimeMillis(1461L);
      rawVariable0.getForm();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList0.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList6 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList7 = new ArrayList<SupportingDocument>();
      arrayList7.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList8 = new ArrayList<SupportingDocument>();
      arrayList5.spliterator();
      ArrayList<SupportingDocument> arrayList9 = new ArrayList<SupportingDocument>(arrayList6);
      derivedVariable0.removeSupportingDocuments(arrayList4);
      System.setCurrentTimeMillis(1387L);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      User user0 = new User();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("UNABLE_TO_CREATE_CHANGE_EVENT");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setNameSpace("");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0Sp~YNGbjHK+k[%[");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      System.setCurrentTimeMillis(2407L);
      rawVariable0.getAlias();
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setIdentifier(308);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("EQ6/nD /qCl\"v=");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable2.removeOntologyTerm(ontologyTerm1);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertEquals("308", rawVariable0.getDisplayItemIdentifier());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.7471740047912334
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber("|/%^?28/&bVZ");
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setOntologyName("|/%^?28/&bVZ");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      assertEquals("|/%^?28/&bVZ", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.7286866149916653
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      User user0 = new User("n", "n");
      user0.setCity("n");
      user0.setAffiliation("n");
      User user1 = new User("n", "n");
      user1.setEmail("{up[d6Q#=A-.BHecg^");
      User user2 = new User("{up[d6Q#=A-.BHecg^", "n");
      user2.setAffiliation("variable.label.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      rawVariable0.form = "n";
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable1);
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("n", derivedVariable1.getForm());
      
      Variable.validateFields(rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.7021946184769146
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.setLabel("macaw.businessLayer.SupportingDocument");
      rawVariable0.getValueLabels();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      ArrayList<Variable> arrayList3 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList3);
      assertEquals("macaw.businessLayer.SupportingDocument", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.6636093674910186
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      valueLabel3.getDisplayName();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      valueLabel3.setMissingValue(false);
      valueLabel0.hasSameDisplayName(valueLabel4);
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel6.hasSameDisplayName(valueLabel4);
      derivedVariable0.removeValueLabel(valueLabel6);
      derivedVariable0.setLabel("+");
      derivedVariable0.setName("-");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getLabel();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("+", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.365349639944498
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("^gsoJq_3Q");
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.setAlias("^gsoJq_3Q");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnEnd = "NON_EXISTENT_USER";
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.getSupportingDocuments();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.setColumnEnd("general.error.blankField");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList3.add(supportingDocument3);
      derivedVariable1.removeSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.795284966051281
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable0.addOntologyTerms(arrayList0);
      LinkedList<OntologyTerm> linkedList0 = new LinkedList<OntologyTerm>();
      arrayList0.addAll((Collection<? extends OntologyTerm>) linkedList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.clone();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      rawVariable0.isNewRecord();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertTrue(boolean0);
      
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList6 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      arrayList3.add(supportingDocument7);
      String string0 = rawVariable0.getCategory();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0ba~YNOGbzHK+z[%[");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0ba~YNOGbzHK+z[%[");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setOntologyName("0ba~YNOGbzHK+z[%[");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setNameSpace((String) null);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      System.setCurrentTimeMillis(1461L);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("~v%x_/");
      boolean boolean0 = rawVariable0.hasSameDisplayName(rawVariable1);
      assertEquals("~v%x_/", rawVariable1.getNotes());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.5773139552883237
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode("variable.availability.label");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.columnEnd = "'go/";
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("'go/", derivedVariable0.getColumnEnd());
      assertEquals("", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      User user0 = new User();
      user0.setAddressLine1("UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("");
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("9");
      ontologyTerm0.setOntologyName("D[oTOwxico:lXgy@<S");
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setTerm("D[oTOwxico:lXgy@<S");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("5~T!tb");
      ontologyTerm0.setTerm("Zl7Fe&vs7.P7s7@P8");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setColumnStart("?\"");
      ArrayList<Variable> arrayList0 = null;
      try {
        arrayList0 = new ArrayList<Variable>((-1116));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -1116
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getYear();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.6980166803348786
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.questionNumber = "FjZS,{|UF";
      supportingDocument0.setDocumentCode("MkPQlm`!>");
      rawVariable0.setCleaned(true);
      supportingDocument0.setDocumentCode("INVALID_ALIAS_FILE_PATH");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=3.6872284030342164
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "?b\"l_7y ,7g0_(4E";
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      rawVariable1.setOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm3);
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.cloneAttributes(rawVariable0);
      assertEquals("", rawVariable0.getColumnStart());
      assertEquals("", rawVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5035870903352846
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("^gsoJq_3Q");
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setYear("variable.alias.label");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = "NON_EXISTENT_USER";
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable1.getFilePath();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.getSupportingDocuments();
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      User user0 = new User("n", "variable.label.label");
      user0.setCity("variable.label.label");
      user0.setEmail("n");
      user0.setAffiliation("n");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "Zl7Fe&vs7.P7s7@P8";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("", derivedVariable0.getColumnEnd());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.0108821559321566
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("^gsoJq_3Q");
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.columnEnd = "NON_EXISTENT_USER";
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable1.getFilePath();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      rawVariable0.setQuestionNumber("NON_EXISTENT_USER");
      User user0 = new User("|GPHBR9JPi>AN^aQ G", "");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("NON_EXISTENT_USER", rawVariable0.getQuestionNumber());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      User user0 = new User("n", "variable.label.label");
      user0.setEmail("n");
      user0.setAffiliation("n");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "variable.label.label";
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("variable.label.label", derivedVariable0.getColumnStart());
      assertEquals(0, arrayList0.size());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.683859228591611
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("rX,=HzTci6S");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("rX,=HzTci6S");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setNameSpace("rX,=HzTci6S");
      rawVariable0.addOntologyTerm(ontologyTerm5);
      rawVariable0.getOntologyTerms();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.setCategory(" ,");
      RawVariable rawVariable1 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setOntologyName("0ba~YNOGbzHK+z[%[");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("0ba~YNOGbzHK+z[%[");
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setOntologyName("0ba~YNOGbzHK+z[%[");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setNewRecord(true);
      ontologyTerm6.setNameSpace((String) null);
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      System.setCurrentTimeMillis(1461L);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList0.contains(ontologyTerm1));
      
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6851309643957646
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel2.getDisplayName();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel3.hasSameDisplayName(valueLabel4);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName("6}p");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      User user1 = new User();
      User user2 = new User();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      derivedVariable1.getName();
      assertEquals("6}p", derivedVariable1.getDisplayName());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      User user0 = new User();
      user0.setCounty("");
      User user1 = new User();
      user0.setAffiliation("");
      User user2 = new User("", "");
      user2.setPostCode("?mU7oXbP>/jBo0mHg");
      user1.setEmail((String) null);
      User user3 = new User();
      user3.setFirstName("|`HgLN");
      user3.setAddressLine2("NB}Wcp{>#h-cv=I(");
      user3.setStatus("0bp~YNGbzjHK+k[%[");
      user0.setAffiliation("n&ZRW");
      user0.setAffiliation("NON_EXISTENT_USER");
      User user4 = new User((String) null, "NON_EXISTENT_USER");
      User user5 = new User();
      user5.setPassword("");
      user5.setAffiliation("}3?sY1");
      user0.setAddressLine1("");
      user5.setPhone("0bp~YNGbzjHK+k[%[");
      User user6 = new User("macaw.system'ChangeEvKntType", "jw|Pn0Eh5!\"f[f");
      User user7 = new User();
      user2.setAddressLine2("0bp~YNGbzjHK+k[%[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user8 = new User();
      User user9 = new User("e^dq)Y&=z6)h-DX<h", "");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.554218296452355
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      User user0 = new User();
      user0.setAffiliation("n&ZRW");
      user0.setAffiliation("%VGj2Un");
      User user1 = new User();
      User user2 = new User();
      user0.setAddressLine1("NON_EXISTENT_USER");
      user0.setAddressLine1("0ba~YNOGbzHK+z[%[");
      User user3 = new User("general.error.promotesSecurityRisk", "jHsRL<-o");
      User user4 = new User();
      User.checkValidUserIDField("general.error.promotesSecurityRisk");
      User user5 = new User("9v2GL}F", "'4DpW(]%f");
      user5.setStatus("0ba~YNOGbzHK+z[%[");
      User.detectFieldChanges(user2, user3, user5);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user6 = new User("NON_EXISTENT_ONTOLOGY_TERM", "Rj3H");
      user2.setFirstName("SnEFLU}W");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isCleaned());
      assertEquals(0, arrayList0.size());
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.994214455194678
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      rawVariable1.setName("");
      derivedVariable0.containsSourceVariable(rawVariable1);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setSourceVariables(arrayList0);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable0.getCategory());
      
      derivedVariable0.getLabel();
      rawVariable0.setCategory("");
      ArrayList<SupportingDocument> arrayList1 = derivedVariable0.getSupportingDocuments();
      rawVariable1.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.removeSourceVariable(rawVariable2);
      derivedVariable0.addSourceVariable(rawVariable2);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertFalse(arrayList2.isEmpty());
  }
}
