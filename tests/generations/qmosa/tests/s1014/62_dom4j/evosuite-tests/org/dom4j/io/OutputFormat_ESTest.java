/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 06:11:20 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.51616920262805
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      OutputFormat outputFormat1 = new OutputFormat("-omitEncoding", true);
      outputFormat1.setPadText(true);
      outputFormat0.setPadText(true);
      outputFormat1.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-omitEncoding";
      stringArray0[1] = "OT1wlW,tmP";
      stringArray0[2] = "m`;G(6SX";
      stringArray0[3] = "m`;G(6SX";
      stringArray0[4] = "m`;G(6SX";
      stringArray0[5] = "-omitEncoding";
      stringArray0[6] = "m`;G(6SX";
      stringArray0[8] = "-omitEncoding";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indentSize", true);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "-expandEmptyg";
      stringArray0[2] = "-indentSize";
      stringArray0[3] = "v,\"Hc^j=";
      stringArray0[4] = "-indentSize";
      stringArray0[5] = "<!ad8ext";
      stringArray0[6] = "-expandEmptyg";
      stringArray0[7] = "<!ad8ext";
      stringArray0[8] = "-padText";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-expandEmptyg\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5965107682127633
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-indent";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[4] = "3^p`->S}!3[1QPEN";
      stringArray0[5] = "OoPI8d";
      stringArray0[6] = ">";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isTrimText());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.026016522068678
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize(1889);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setIndentSize((-381));
      outputFormat0.setIndentSize(1554);
      outputFormat0.setIndent("\n");
      int int0 = 2147483645;
      // Undeclared exception!
      outputFormat0.setIndentSize(2147483645);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5227568179113176
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(true);
      assertFalse(outputFormat0.isPadText());
      
      OutputFormat outputFormat1 = new OutputFormat("-trimText", true, "-newlines");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-newlines";
      stringArray0[1] = "-inden>Size";
      stringArray0[2] = "-expa2dm}ztyg";
      stringArray0[1] = "-expa2dm}ztyg";
      int int0 = outputFormat1.parseOptions(stringArray0, 0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9136655198736401
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("<&r5^xete", false);
      assertFalse(outputFormat0.isSuppressDeclaration());
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[1] = "<&r5^xete";
      stringArray0[2] = "<&r5^xete";
      stringArray0[3] = "<&r5^xete";
      stringArray0[4] = "<&r5^xete";
      stringArray0[5] = "<&r5^xete";
      stringArray0[6] = "<&r5^xete";
      stringArray0[7] = "<&r5^xete";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.759171323370815
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(true);
      OutputFormat outputFormat1 = new OutputFormat("ZH|!=2sSA");
      outputFormat1.setIndent("");
      outputFormat1.setIndentSize(0);
      outputFormat0.setLineSeparator("");
      outputFormat1.setPadText(true);
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat1.setTrimText(false);
      outputFormat0.setIndent(true);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "=pnCc 60]gH";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "=pnCc 60]gH";
      stringArray0[3] = "-xhtml";
      stringArray0[4] = "-trimText";
      stringArray0[5] = "-trimText";
      stringArray0[6] = "^MQ+l?uN<`*";
      stringArray0[7] = "=pnCc 60]gH";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setNewlines(false);
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isExpandEmptyElements());
      
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat2.getIndent());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("?\"tX>VMsM\"[*~beW");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "?\"tX>VMsM\"[*~beW";
      stringArray0[1] = "?\"tX>VMsM\"[*~beW";
      stringArray0[2] = "?\"tX>VMsM\"[*~beW";
      stringArray0[3] = "-padText";
      stringArray0[4] = "?\"tX>VMsM\"[*~beW";
      outputFormat0.parseOptions(stringArray0, 0);
      stringArray0[5] = "6iewb";
      stringArray0[6] = "-expandEmptyg";
      stringArray0[7] = "-expandEmptyg";
      stringArray0[8] = "-padText";
      outputFormat0.parseOptions(stringArray0, 0);
      assertFalse(outputFormat0.isPadText());
      
      int int0 = outputFormat0.parseOptions(stringArray0, 3);
      assertTrue(outputFormat0.isPadText());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.9761326214173685
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lOgineSeparator", false);
      outputFormat0.setEncoding("-lOgineSeparator");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-lOgineSeparator";
      stringArray0[1] = "-lOgineSeparator";
      stringArray0[2] = "-lOgineSeparator";
      stringArray0[3] = "-lOgineSeparator";
      outputFormat0.setIndent("-lOgineSeparator");
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setEncoding("-lOgineSeparator");
      outputFormat1.setEncoding("]PmrgM;");
      outputFormat0.setSuppressDeclaration(true);
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      String[] stringArray1 = new String[1];
      stringArray1[0] = "X";
      outputFormat0.setIndent("");
      outputFormat2.setOmitEncoding(false);
      OutputFormat outputFormat3 = new OutputFormat("X", false);
      outputFormat3.setIndent("-lOgineSeparator");
      outputFormat2.getLineSeparator();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("-lOgineSeparator", outputFormat0.getEncoding());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(false);
      OutputFormat outputFormat1 = new OutputFormat("-expandEmpty-trimTRxd", false);
      outputFormat1.setOmitEncoding(true);
      outputFormat1.setEncoding("-xhtml");
      outputFormat1.setOmitEncoding(true);
      OutputFormat outputFormat2 = new OutputFormat("-xhtml", true, (String) null);
      outputFormat2.getEncoding();
      OutputFormat outputFormat3 = new OutputFormat((String) null, true);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        outputFormat3.parseOptions(stringArray0, (-3293));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3293
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.6345319339779745
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      outputFormat0.setIndent(false);
      stringArray0[0] = "-lineSeparator";
      stringArray0[1] = "-lineSeparator";
      stringArray0[2] = "-newlines";
      outputFormat0.setIndentSize(0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getLineSeparator();
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(boolean0);
      assertFalse(outputFormat0.isNewlines());
      assertTrue(outputFormat0.isTrimText());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-trimText";
      stringArray0[3] = "-exanEmpy-triyex";
      stringArray0[2] = "-exanEmpy-triyex";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "-\\A1xpandEmpt~g";
      int int0 = 4;
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags(4);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-A1xpandEmpt~g";
      outputFormat0.parseOptions(stringArray0, 4);
      int int1 = (-1842634826);
      outputFormat0.getNewLineAfterNTags();
      String[] stringArray1 = new String[9];
      stringArray1[0] = "-A1xpandEmpt~g";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray1, (-1842634826));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842634826
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5965107682127633
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(false);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpt~g";
      outputFormat0.setIndentSize(0);
      stringArray0[1] = "-expandEmpt~g";
      stringArray0[2] = "-expandEmpty-XriyTex";
      stringArray0[3] = "-expandEmpt~g";
      outputFormat0.parseOptions(stringArray0, 425);
      outputFormat0.parseOptions(stringArray0, 861);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 34);
      outputFormat0.setNewLineAfterDeclaration(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('!');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (!)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.145277367387215
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmptyg";
      stringArray0[1] = "-expandEmpty-triyTex";
      stringArray0[2] = "-expandEmpty-triyTex";
      outputFormat0.parseOptions(stringArray0, 0);
      int int1 = (-1842634791);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1842634791));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842634791
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.458686579332456
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize(896);
      outputFormat0.getLineSeparator();
      outputFormat0.isPadText();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewLineAfterNTags(1019);
      outputFormat0.setPadText(false);
      outputFormat0.isNewlines();
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getLineSeparator();
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setIndent("\n");
      outputFormat0.setEncoding("");
      outputFormat0.isPadText();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.getIndent();
      outputFormat1.getEncoding();
      outputFormat0.setTrimText(false);
      OutputFormat.createPrettyPrint();
      outputFormat1.isNewlines();
      outputFormat0.isPadText();
      assertEquals("\n", outputFormat0.getIndent());
      
      outputFormat1.getAttributeQuoteCharacter();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "?\"tX>";
      stringArray0[2] = "";
      stringArray0[3] = "-expandEmpty-inden>Size";
      stringArray0[4] = "\n";
      stringArray0[5] = "\n";
      stringArray0[6] = "{nP(yEqL|]{^Q";
      stringArray0[7] = "\n";
      stringArray0[8] = "\n";
      int int0 = outputFormat1.parseOptions(stringArray0, 1019);
      assertEquals(1019, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-lOgineSeparator", true);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-lOgineSeparator";
      stringArray0[1] = "-lOgineSeparator";
      stringArray0[2] = "";
      stringArray0[3] = "-lOgineSeparator";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "-lOgineSeparator";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1723466232));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1723466232
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.831673301904631
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("*");
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setPadText(false);
      outputFormat0.setIndent(true);
      outputFormat0.setNewLineAfterNTags(784);
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("");
      outputFormat0.getIndent();
      outputFormat0.setIndent("");
      outputFormat0.setNewLineAfterNTags(784);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('I');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (I)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.3876362280213312
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setPadText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setEncoding(">");
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-timTxt";
      outputFormat0.setTrimText(false);
      outputFormat0.setTrimText(true);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1842634793));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842634793
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.6820730621847044
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setTrimText(true);
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setPadText(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndent(false);
      outputFormat0.setPadText(false);
      outputFormat0.setPadText(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setEncoding("");
      outputFormat0.setEncoding("-trimText");
      outputFormat0.setTrimText(true);
      outputFormat0.setTrimText(true);
      String[] stringArray0 = new String[3];
      outputFormat0.setIndentSize((-1879048189));
      stringArray0[0] = "";
      stringArray0[1] = "9UoPI8d";
      stringArray0[2] = "9UoPI8d";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-52));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -52
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.225700753232726
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("2%l{$_4,]6;sLj");
      outputFormat0.setXHTML(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setIndentSize(1);
      outputFormat0.setLineSeparator("2%l{$_4,]6;sLj");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setNewLineAfterNTags(1604);
      outputFormat1.setIndent("2%l{$_4,]6;sLj");
      outputFormat1.setNewLineAfterNTags(1);
      outputFormat0.setNewLineAfterNTags(414);
      outputFormat0.setNewLineAfterNTags(3174);
      outputFormat0.setIndentSize(3174);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.isOmitEncoding();
      outputFormat0.isXHTML();
      outputFormat0.setXHTML(false);
      assertEquals("2%l{$_4,]6;sLj", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(false);
      outputFormat0.setIndentSize(11);
      outputFormat0.setIndent("-xhtml=");
      assertEquals("-xhtml=", outputFormat0.getIndent());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[6];
      OutputFormat outputFormat0 = new OutputFormat(stringArray0[1]);
      outputFormat0.setEncoding(stringArray0[2]);
      outputFormat0.setEncoding("]PmrgM;");
      assertEquals("]PmrgM;", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.1123103344201821
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat("-encoding", true, "-encoding");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-encoding";
      stringArray0[3] = "<!ad8ext";
      stringArray0[5] = "?\"tX>VMsM\"[*\beW";
      stringArray0[6] = "?\"tX>VMsM\"[*\beW";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7618827443146239
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false, "");
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("-expan");
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("-exan<");
      outputFormat0.setIndent("-expandEmptyv9c*<Q _)0-");
      outputFormat0.setIndent("-indent");
      outputFormat0.setIndent("-suppressDeclaration");
      outputFormat0.setIndent("8bS");
      outputFormat0.setIndent("oPh");
      outputFormat0.setIndent("-exan<");
      assertEquals("-exan<", outputFormat0.getIndent());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1643727633700354
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      outputFormat0.setNewlines(true);
      stringArray0[2] = "&WZ~FD[67@Lr!-0";
      stringArray0[3] = ":";
      stringArray0[6] = "-encoding";
      OutputFormat outputFormat1 = new OutputFormat();
      outputFormat1.setLineSeparator("d`1l'Je");
      outputFormat1.setPadText(true);
      stringArray0[5] = "HEbmNcVv3\"";
      stringArray0[6] = "SqXqZ6j[5rKu*:\"";
      stringArray0[7] = "-In#PuhXZW";
      stringArray0[8] = "SqXqZ6j[5rKu*:\"";
      outputFormat0.parseOptions(stringArray0, 2081);
      outputFormat0.setXHTML(true);
      outputFormat0.getNewLineAfterNTags();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      outputFormat2.setLineSeparator((String) null);
      outputFormat0.isTrimText();
      outputFormat2.getIndent();
      OutputFormat outputFormat3 = OutputFormat.createPrettyPrint();
      outputFormat3.setPadText(true);
      outputFormat3.setIndent("&WZ~FD[67@Lr!-0");
      assertEquals("&WZ~FD[67@Lr!-0", outputFormat3.getIndent());
      
      OutputFormat.createCompactFormat();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat4 = OutputFormat.createCompactFormat();
      assertEquals('\"', outputFormat4.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.023502972547332
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("l");
      outputFormat0.setLineSeparator("ZH|!=2sSA");
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setLineSeparator("U+Y_l3i");
      outputFormat0.setXHTML(true);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.getLineSeparator();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setNewlines(false);
      outputFormat1.isNewLineAfterDeclaration();
      outputFormat0.setXHTML(true);
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat1.isOmitEncoding();
      outputFormat0.setTrimText(true);
      outputFormat1.isTrimText();
      outputFormat0.isNewLineAfterDeclaration();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "U+Y_l3i";
      stringArray0[1] = "U+Y_l3i";
      stringArray0[2] = "l";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "U+Y_l3i";
      stringArray0[5] = "";
      stringArray0[6] = "*#P-OHEL>j~sE}D!Q";
      int int0 = outputFormat0.parseOptions(stringArray0, 0);
      assertEquals("  ", outputFormat0.getIndent());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      stringArray0[3] = "";
      OutputFormat outputFormat0 = new OutputFormat("-xhtml");
      String string0 = outputFormat0.getLineSeparator();
      assertEquals("-xhtml", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isTrimText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", string0);
      assertFalse(outputFormat0.isOmitEncoding());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.10451946591644
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("&x2t<0xT");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize((-794));
      outputFormat0.setXHTML(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setLineSeparator("&x2t<0xT");
      outputFormat0.isPadText();
      outputFormat0.setIndent("6OZ");
      outputFormat0.setNewlines(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.getEncoding();
      outputFormat0.setIndentSize(0);
      outputFormat0.isTrimText();
      outputFormat0.setTrimText(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent("6c(&~@'M,nZ");
      boolean boolean0 = outputFormat0.isSuppressDeclaration();
      assertEquals("6c(&~@'M,nZ", outputFormat0.getIndent());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.0257505895352663
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("H");
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(false);
      outputFormat0.setPadText(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize((-2375));
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setPadText(false);
      outputFormat0.getIndent();
      assertTrue(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.7616644310639096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      boolean boolean0 = outputFormat0.isPadText();
      assertTrue(boolean0);
      
      outputFormat0.setNewLineAfterNTags(0);
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewlines());
      assertTrue(outputFormat1.isTrimText());
      assertEquals("  ", outputFormat1.getIndent());
      
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isNewlines());
      assertEquals("\n", outputFormat2.getLineSeparator());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isXHTML());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isPadText());
      assertFalse(outputFormat2.isOmitEncoding());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("^MQ+l?uN<`**k:", true, "^MQ+l?uN<`**k:");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "^MQ+l?uN<`**k:";
      stringArray0[1] = "^MQ+l?uN<`**k:";
      stringArray0[2] = "^MQ+l?uN<`**k:";
      stringArray0[3] = "^MQ+l?uN<`**k:";
      stringArray0[4] = "^MQ+l?uN<`**k:";
      stringArray0[5] = "^MQ+l?uN<`**k:";
      outputFormat0.setEncoding("B2c");
      assertEquals("B2c", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = new OutputFormat("%QI4h", true);
      outputFormat1.isNewLineAfterDeclaration();
      boolean boolean0 = outputFormat1.isSuppressDeclaration();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.8582710085835656
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.getNewLineAfterNTags();
      OutputFormat.createCompactFormat();
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertTrue(outputFormat1.isNewLineAfterDeclaration());
      
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.7257348275872986
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-expnEmpg";
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = "=";
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.parseOptions(stringArray0, 0);
      String[] stringArray2 = null;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.setNewLineAfterNTags((-4656));
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(756);
      OutputFormat outputFormat1 = new OutputFormat("", false, "");
      outputFormat1.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.setSuppressDeclaration(false);
      outputFormat0.setIndent("-xhtml>Z`F9Fk");
      assertEquals("-xhtml>Z`F9Fk", outputFormat0.getIndent());
      
      outputFormat1.isExpandEmptyElements();
      String string0 = outputFormat1.getLineSeparator();
      assertEquals("\n", string0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.3472989158733744
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      outputFormat0.setOmitEncoding(true);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat0.setLineSeparator(" ");
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat1.isOmitEncoding();
      outputFormat1.getNewLineAfterNTags();
      outputFormat1.setOmitEncoding(true);
      outputFormat0.isOmitEncoding();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "|f#?6WrvWtE*d";
      stringArray0[1] = "K?";
      stringArray0[2] = "|f#?6WrvWtE*d";
      stringArray0[3] = "|f#?6WrvWtE*d";
      stringArray0[4] = null;
      stringArray0[5] = "";
      outputFormat0.parseOptions(stringArray0, 4431);
      outputFormat0.setIndent("");
      outputFormat0.isOmitEncoding();
      assertEquals(" ", outputFormat0.getLineSeparator());
      
      outputFormat1.getEncoding();
      outputFormat1.setNewLineAfterDeclaration(true);
      outputFormat1.setNewlines(false);
      assertEquals(0, outputFormat1.getNewLineAfterNTags());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.3503218491711164
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-expan", false, ".(PHtM]<EfkF]COF.Y");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(")");
      outputFormat0.setIndent("-expan");
      outputFormat0.setIndent("-expan");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-expan");
      outputFormat0.setIndent("yFs$u(!Ldl<A(");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-newlines");
      assertEquals("-newlines", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      stringArray0[3] = "";
      OutputFormat outputFormat0 = new OutputFormat("-expandEmptyInvalid attribute quote character (", true, "");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertEquals('\"', char0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertEquals("-expandEmptyInvalid attribute quote character (", outputFormat0.getIndent());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("", outputFormat0.getEncoding());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8053811354081444
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndent("Kj6dkF");
      outputFormat0.setNewlines(false);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setIndent("=pnCc 60]gH");
      outputFormat0.setLineSeparator("0j6dkF");
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setNewLineAfterNTags(0);
      outputFormat0.setOmitEncoding(true);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "=pnCc 60]gH";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setExpandEmptyElements(true);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "Kj6dkF";
      stringArray1[1] = "Kj6dkF";
      outputFormat0.setIndentSize((-4477));
      stringArray1[2] = "=pnCc 60]gH";
      outputFormat0.setNewLineAfterNTags((-4668));
      outputFormat0.parseOptions(stringArray1, 0);
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setIndent("~UTMs");
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getLineSeparator();
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.163270574738324
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent("");
      outputFormat0.setOmitEncoding(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setEncoding("-omitEncoding");
      OutputFormat outputFormat2 = OutputFormat.createPrettyPrint();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndentSize(819);
      assertEqualsoutputFormat0.getIndent());
      
      OutputFormat.createPrettyPrint();
      OutputFormat outputFormat3 = new OutputFormat("ZH|!=2sSA", false, "");
      outputFormat3.getEncoding();
      OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[0];
      int int0 = outputFormat2.parseOptions(stringArray0, 763);
      assertEquals(763, int0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.9377087726541156
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "-xhtml-expnEmpg";
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-xhtml-expnEmpg";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "";
      stringArray0[2] = "{%@wCyYa+xTB,C5";
      stringArray0[3] = "";
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-702));
      int int0 = outputFormat0.getNewLineAfterNTags();
      assertEquals((-702), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-inden>Size";
      stringArray0[1] = "-inden>Size";
      stringArray0[2] = "-inden>Size";
      stringArray0[3] = "-trimText";
      stringArray0[4] = "-expa2dm}z tyg";
      stringArray0[6] = "-expa2dm}z tyg";
      stringArray0[7] = "'n7&sW)3U5EV";
      OutputFormat outputFormat0 = new OutputFormat("", true);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('C');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (C)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = 0;
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-expandEmptyg";
      stringArray0[1] = "-expandEmptyg";
      stringArray0[2] = "-expandEp-triyTex";
      outputFormat0.parseOptions(stringArray0, 0);
      int int1 = (-1842634791);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1842634791));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1842634791
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = ">Z`F9Fk";
      stringArray0[1] = ">Z`F9Fk";
      stringArray0[2] = ">Z`F9Fk";
      stringArray0[3] = "UsnB5T=*aVO_r<";
      stringArray0[4] = ">Z`F9Fk";
      stringArray0[5] = "/%K+FT|LxQYWTW=";
      stringArray0[6] = "UsnB5T=*aVO_r<";
      stringArray0[7] = "UsnB5T=*aVO_r<";
      OutputFormat outputFormat0 = new OutputFormat("UsnB5T=*aVO_r<", false);
      outputFormat0.setLineSeparator("UsnB5T=*aVO_r<");
      String string0 = OutputFormat.STANDARD_INDENT;
      assertEquals("  ", string0);
  }
}
