/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:16:57 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Hg=oxB%kSsG%?__";
      stringArray0[1] = "vbQhp0vbQh.jar5.AR.jar";
      stringArray0[2] = "GX";
      stringArray0[3] = "$wciT<%<<jm/^;w\"y'";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.CHINA;
      vector0.add(locale0);
      archiveScanner0.filesExcluded = vector0;
      vector0.add(locale0);
      String string0 = "dir0";
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("Hg=oxB%kSsG%?__");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      System.setCurrentTimeMillis((-1L));
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector1;
      Locale locale0 = Locale.US;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".WAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.filesExcluded = vector0;
      Vector<String> vector1 = new Vector<String>();
      archiveScanner0.dirsIncluded = vector1;
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Locale locale0 = Locale.US;
      locale0.getUnicodeLocaleKeys();
      String string0 = ".WAR";
      archiveScanner0.processFile(string0);
      archiveScanner0.processArchive(improvedFile0, string0);
      boolean boolean0 = true;
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      System.setCurrentTimeMillis((-1L));
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.dirsIncluded = vector0;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.7653327875937666
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string0 = ".WAR";
      archiveScanner0.processFile(string0);
      archiveScanner0.processArchive(improvedFile0, string0);
      Vector<DataInputStream> vector1 = new Vector<DataInputStream>();
      archiveScanner0.filesIncluded = vector1;
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      String string0 = "0z9%";
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[0] = "0z9%";
      stringArray0[4] = "0z9%";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      archiveScanner0.couldHoldIncluded("k}71383uP?E9=^@|@");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      vector0.removeElement(linkedList0);
      archiveScanner0.addDefaultExcludes();
      Vector<String> vector1 = new Vector<String>(list0);
      File file0 = ImprovedFile.createTempFileName(string0, stringArray0[4], improvedFile0);
      boolean boolean0 = false;
      try { 
        archiveScanner0.processDirectory(file0, stringArray0[4], boolean0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/0z9%281320.0z9%
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      long long0 = (-1L);
      System.setCurrentTimeMillis((-1L));
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector1;
      Locale locale0 = Locale.US;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.push((Locale.LanguageRange) null);
      locale0.stripExtensions();
      locale0.getDisplayLanguage();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      linkedList0.add((Locale.LanguageRange) null);
      Vector<Object> vector2 = new Vector<Object>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Vector<String> vector3 = new Vector<String>();
      vector3.add("_");
      Locale.getISOLanguages();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".ear", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      long long0 = (-1L);
      System.setCurrentTimeMillis((-1L));
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector1;
      Locale locale0 = Locale.US;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.push((Locale.LanguageRange) null);
      locale0.stripExtensions();
      locale0.getDisplayLanguage();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      linkedList0.add((Locale.LanguageRange) null);
      Vector<Object> vector2 = new Vector<Object>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      Vector<String> vector3 = new Vector<String>();
      vector3.add("_");
      Locale.getISOLanguages();
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".ear", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "` xr9";
      stringArray0[1] = "_bTnY~~xF?>wUo-R+-";
      stringArray0[2] = "vbQhp0vbQh.jar5.AR.jar";
      stringArray0[3] = "8f2j'P0%:@0QOaPN";
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis((-1L));
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.dirsIncluded = vector0;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[0] = "0z9%";
      stringArray0[4] = "0z9%";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      archiveScanner0.isExcluded("0z9%");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      linkedList0.push((Locale.LanguageRange) null);
      locale0.getDisplayLanguage();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      linkedList0.add((Locale.LanguageRange) null);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("_");
      archiveScanner0.processDirectory((File) null, "0z9%", true);
      long long0 = 48L;
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<DataInputStream> vector0 = new Vector<DataInputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      vector1.add(object0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      System.setCurrentTimeMillis((-1L));
      Locale locale0 = Locale.US;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[4] = "DUY Auiyd8 ;/.\"rI";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      MockFile mockFile0 = new MockFile((File) null, "DUY Auiyd8 ;/.\"rI");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) vector0, (Collection<String>) set0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      archiveScanner0.addDefaultExcludes();
      Vector<String> vector1 = new Vector<String>(list0);
      archiveScanner0.filesNotIncluded = vector1;
      mockFile0.toURL();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesExcluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[3] = "F(38Rx";
      stringArray0[4] = "0z9%";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      MockFile mockFile0 = new MockFile((File) null, "0z9%");
      mockFile0.getCanonicalPath();
      mockFile0.toURL();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, ".jar");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      linkedList0.push((Locale.LanguageRange) null);
      locale0.getDisplayLanguage();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      linkedList0.add((Locale.LanguageRange) null);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1);
      Vector<String> vector1 = new Vector<String>();
      vector1.add("_");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1, 2637);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[3] = "0z9%";
      stringArray0[4] = "DUY Auiyd8 ;/.\"rI";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      MockFile mockFile0 = new MockFile((File) null, "DUY Auiyd8 ;/.\"rI");
      mockFile0.getCanonicalPath();
      String string0 = "k}71383uP?\\E9=^@|@";
      archiveScanner0.couldHoldIncluded("k}71383uP?E9=^@|@");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      archiveScanner0.addDefaultExcludes();
      Vector<String> vector1 = new Vector<String>(list0);
      String string1 = null;
      vector1.add(string1);
      archiveScanner0.filesNotIncluded = vector1;
      Vector<String> vector2 = new Vector<String>(set0);
      mockFile0.toURL();
      archiveScanner0.processArchive(mockFile0, string0);
      int int0 = ArchiveScanner.ARCHIVE;
      assertEquals(2, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Hg=oxB%kSsG%?__";
      stringArray0[1] = "vbQhp0vbQh.jar5.AR.jar";
      stringArray0[2] = "GX";
      stringArray0[3] = "$wciT<%<<jm/^;w\"y'";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.addDefaultExcludes();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale0 = Locale.CHINA;
      vector0.add(locale0);
      archiveScanner0.filesExcluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "dir0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[0] = "0z9%";
      stringArray0[4] = "0z9%";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      archiveScanner0.couldHoldIncluded("k}71383uP?E9=^@|@");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      vector0.removeElement(linkedList0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(stringArray0[4]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.filesIncluded = vector0;
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      System.setCurrentTimeMillis((-1L));
      String string0 = ")*j%";
      archiveScanner0.setExcludes(archiveScanner0.includes);
      Locale locale0 = Locale.US;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) set0, locale_FilteringMode0);
      Locale.filterTags((List<Locale.LanguageRange>) vector1, (Collection<String>) list0);
      String string1 = "m`|r<570SA&JC6,._U";
      archiveScanner0.setBasedir(string1);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[5];
      DirectoryScanner.matchPath("0z9%", "0z9%");
      stringArray0[0] = "0z9%";
      stringArray0[2] = "0z9%";
      stringArray0[3] = "0z9%";
      stringArray0[4] = "XR&tsQBfJFYMlp";
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      System.setCurrentTimeMillis(0L);
      archiveScanner0.processFile("}2Z(");
      System.setCurrentTimeMillis(archiveScanner0.ARCHIVE);
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)84;
      byteArray0[0] = (byte) (-28);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesExcluded = vector0;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "'gyfx]79/tXP^[";
      archiveScanner0.dirsIncluded = null;
      Integer integer0 = new Integer(1);
      vector0.add((Object) integer0);
      archiveScanner0.haveSlowResults = false;
      archiveScanner0.haveSlowResults = false;
      stringArray0[1] = "'gyfx]79/tXP^[";
      archiveScanner0.haveSlowResults = true;
      archiveScanner0.haveSlowResults = archiveScanner0.haveSlowResults;
      stringArray0[2] = "'gyfx]79/tXP^[";
      archiveScanner0.setBasedir("'gyfx]79/tXP^[");
      stringArray0[3] = "'gyfx]79/tXP^[";
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("'gyfx]79/tXP^[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[9];
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      stringArray0[0] = "0z9%";
      stringArray0[4] = "0z9%";
      String[] stringArray1 = new String[0];
      archiveScanner0.setExcludes(stringArray1);
      archiveScanner0.couldHoldIncluded("k}71383uP?E9=^@|@");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      Locale.LanguageRange locale_LanguageRange0 = null;
      linkedList0.push(locale_LanguageRange0);
      locale0.getDisplayLanguage();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      linkedList0.add(locale_LanguageRange0);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      Set<String> set1 = locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector0;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set1);
      Vector<String> vector1 = new Vector<String>();
      String string0 = "_";
      vector1.add(string0);
      Locale.getISOLanguages();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, stringArray0[0], boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner0.includes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      System.setCurrentTimeMillis((-1L));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "6Wls6ojc~&yUNV13,F";
      stringArray0[1] = ".zip";
      stringArray0[2] = "OOH,~6I.f IzaW";
      stringArray0[3] = "";
      stringArray0[4] = "!";
      stringArray0[5] = "Encountered error while trying to remove temp files at ";
      archiveScanner0.setIncludes(stringArray0);
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector1;
      Locale locale0 = Locale.US;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(".WAR");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("GX");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("GX/GX");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("GX");
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GX");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GX");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ")A|6:uyo<", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fe*c>K3_n`x.pO-");
      ImprovedFile improvedFile1 = new ImprovedFile("fe*c>K3_n`x.pO-");
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0, "S2S'vV<B9RQW:pR*'3");
      improvedFile2.getAbsolutePath();
      ImprovedFile improvedFile3 = improvedFile1.createTempDir();
      ImprovedFile improvedFile4 = new ImprovedFile(".AR");
      improvedFile3.mkdirs();
      improvedFile3.createNewFile();
      improvedFile1.toURI();
      ImprovedFile improvedFile5 = new ImprovedFile("fe*c>K3_n`x.pO-", ".AR");
      ImprovedFile.copyFromToDir(improvedFile5, improvedFile5);
      ImprovedFile improvedFile6 = new ImprovedFile(improvedFile0);
      improvedFile6.toURI();
      improvedFile0.basicMakeDirectories(improvedFile2);
      ImprovedFile.createTempImprovedFile(" 4H:1QefU|C-\b5t", "FOtB&rn_8", improvedFile1);
      ImprovedFile improvedFile7 = ImprovedFile.createTempImprovedFile("x.p-", "=ZQu", improvedFile6);
      ImprovedFile improvedFile8 = new ImprovedFile(improvedFile7, "bB:{");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile7);
      archiveScanner0.scandir(improvedFile2, "IO error scanning directory ", false);
      assertEquals(1392409281320L, improvedFile2.lastModified());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("vbQhp0vbQh.jar3.AR.jar");
      ImprovedFile improvedFile1 = new ImprovedFile("vbQhp0vbQh.jar3.AR.jar");
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile1, ".AR");
      improvedFile2.getAbsolutePath();
      improvedFile0.getAbsolutePath();
      ImprovedFile improvedFile3 = improvedFile1.createTempDir();
      improvedFile3.toPath();
      ImprovedFile improvedFile4 = new ImprovedFile(".AR");
      improvedFile4.mkdir();
      improvedFile3.mkdirs();
      improvedFile1.toURI();
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile4);
      ImprovedFile improvedFile5 = new ImprovedFile(improvedFile0);
      improvedFile5.toURI();
      improvedFile5.getAbsolutePath();
      improvedFile0.basicMakeDirectories(improvedFile2);
      ImprovedFile.createTempImprovedFile("deleteAction.jar", "FOtB&rn_8", improvedFile1);
      improvedFile5.renameTo(improvedFile0);
      ImprovedFile.createTempImprovedFile("wFCJ", "vbQhp0vbQh.jar3.AR.jar", improvedFile5);
      ImprovedFile improvedFile6 = new ImprovedFile("I");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile5);
      improvedFile0.getCanonicalPath();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile5, "vbQhp0vbQh.jar3.AR.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-310110270);
      // Undeclared exception!
      try { 
        archiveScanner0.isArchive((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      System.setCurrentTimeMillis((-1260L));
      System.setCurrentTimeMillis((-1260L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1260L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2107L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2326L);
      ImprovedFile improvedFile0 = new ImprovedFile("fe*c>K3_n`x.p-");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      long long0 = (-1L);
      System.setCurrentTimeMillis(long0);
      long long1 = 2679L;
      System.setCurrentTimeMillis(long1);
      long long2 = 0L;
      System.setCurrentTimeMillis(long2);
      assertFalse(long2 == long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2107L));
      System.setCurrentTimeMillis(2326L);
      System.setCurrentTimeMillis((byte)7);
      System.setCurrentTimeMillis((-2107L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-18L));
      System.setCurrentTimeMillis((-2107L));
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("J.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.isArchive(improvedFile0);
      long long1 = (-2146L);
      System.setCurrentTimeMillis(long1);
      long long2 = 259L;
      System.setCurrentTimeMillis(long2);
      System.setCurrentTimeMillis(long0);
      assertFalse(long0 == long1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis((-18L));
      System.setCurrentTimeMillis((-18L));
      System.setCurrentTimeMillis((byte)7);
      System.setCurrentTimeMillis((byte)82);
      System.setCurrentTimeMillis((-18L));
      System.setCurrentTimeMillis((byte)82);
      System.setCurrentTimeMillis((byte)82);
      System.setCurrentTimeMillis((byte)82);
      long long0 = (-15L);
      System.setCurrentTimeMillis((byte)7);
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("MGMcU@T7(GjXVBeRF.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "l`!hP3ZF%b?I#JQ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, MGMcU@T7(GjXVBeRF.jar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      String string0 = "v#'b*";
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "v#'b*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fe*c>K3_n`x.p-", "fe*c>K3_n`x.p-");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0, "root shoul uave null as~its parent.");
      ImprovedFile improvedFile3 = ImprovedFile.createTempDirectory("root shoul uave null as~its parent.", "fe*c>K3_n`x.p-", (File) improvedFile0);
      ImprovedFile improvedFile4 = new ImprovedFile("0U! l$&9n?WCjrCtH.jar.jar");
      improvedFile4.toPath();
      MockFile.createTempFile("fe*c>K3_n`x.p-", "fe*c>K3_n`x.p-", (File) improvedFile1);
      improvedFile1.createTempDir();
      improvedFile4.basicMakeDirectories(improvedFile3);
      improvedFile1.mkdir();
      improvedFile2.toURI();
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile3);
      ImprovedFile improvedFile5 = new ImprovedFile(improvedFile1);
      improvedFile0.toURI();
      improvedFile0.basicMakeDirectories(improvedFile3);
      ImprovedFile.createTempImprovedFile("vbQhp0vbQh.jar", "La%IWk2UW)5e)*j%", improvedFile2);
      ImprovedFile.createTempImprovedFile("x.p-", "vbQhp0vbQh.jar", improvedFile4);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile4);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile2, "root shoul uave null as~its parent.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fe*c>K3_n`x.p-");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0, "root should have null as its parent.");
      ImprovedFile improvedFile3 = ImprovedFile.createTempDirectory("root should have null as its parent.", "fe*c>K3_n`x.p-", (File) improvedFile0);
      ImprovedFile improvedFile4 = new ImprovedFile(".AR");
      MockFile.createTempFile("fe*c>K3_n`x.p-", "fe*c>K3_n`x.p-", (File) improvedFile1);
      improvedFile1.createTempDir();
      improvedFile4.basicMakeDirectories(improvedFile3);
      improvedFile3.createNewFile();
      improvedFile1.mkdir();
      improvedFile2.toURI();
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile3);
      ImprovedFile improvedFile5 = new ImprovedFile(improvedFile1);
      improvedFile0.toURI();
      improvedFile0.basicMakeDirectories(improvedFile3);
      ImprovedFile improvedFile6 = ImprovedFile.createTempImprovedFile("vbQhp0vbQh.jar", "La%IWk2UW)5e)*j%", improvedFile2);
      ImprovedFile.createTempImprovedFile("x.p-", "vbQhp0vbQh.jar", improvedFile4);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile4);
      int int0 = archiveScanner0.toFileType(improvedFile6);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("fe*c>K3_n`x.p-");
      ImprovedFile improvedFile1 = new ImprovedFile("fe*c>K3_n`x.p-");
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0, "root should have null as its parent.");
      ImprovedFile improvedFile3 = ImprovedFile.createTempDirectory("root should have null as its parent.", "fe*c>K3_n`x.p-", (File) improvedFile0);
      ImprovedFile improvedFile4 = new ImprovedFile(".AR");
      MockFile.createTempFile("fe*c>K3_n`x.p-", "fe*c>K3_n`x.p-", (File) improvedFile1);
      improvedFile1.createTempDir();
      improvedFile4.basicMakeDirectories(improvedFile3);
      improvedFile3.createNewFile();
      improvedFile1.mkdir();
      improvedFile2.toURI();
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile3);
      ImprovedFile improvedFile5 = new ImprovedFile(improvedFile1);
      improvedFile0.toURI();
      improvedFile0.basicMakeDirectories(improvedFile3);
      ImprovedFile.createTempImprovedFile("vbQhp0vbQh.jar", "La%IWk2UW)5e)*j%", improvedFile2);
      ImprovedFile.createTempImprovedFile("x.p-", "vbQhp0vbQh.jar", improvedFile4);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile4);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile2, "root should have null as its parent.", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "fe*c>K3_n`x.p-";
      ImprovedFile improvedFile0 = new ImprovedFile("fe*c>K3_n`x.p-");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      String string1 = "root should have null as its parent.";
      ImprovedFile improvedFile2 = new ImprovedFile(improvedFile0, "root should have null as its parent.");
      ImprovedFile improvedFile3 = ImprovedFile.createTempDirectory("root should have null as its parent.", "fe*c>K3_n`x.p-", (File) improvedFile0);
      ImprovedFile improvedFile4 = new ImprovedFile(".AR");
      MockFile.createTempFile("fe*c>K3_n`x.p-", "fe*c>K3_n`x.p-", (File) improvedFile1);
      improvedFile1.createTempDir();
      improvedFile4.basicMakeDirectories(improvedFile3);
      improvedFile3.createNewFile();
      improvedFile1.mkdir();
      improvedFile2.toURI();
      ImprovedFile.copyFromToDir(improvedFile4, improvedFile3);
      ImprovedFile improvedFile5 = new ImprovedFile(improvedFile1);
      improvedFile0.toURI();
      improvedFile0.basicMakeDirectories(improvedFile3);
      ImprovedFile.createTempImprovedFile("vbQhp0vbQh.jar", "La%IWk2UW)5e)*j%", improvedFile2);
      ImprovedFile.createTempImprovedFile("SFp&", "vbQhp0vbQh.jar", improvedFile4);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile4);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile2, "root should have null as its parent.", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("GX", "GX");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("GX/GX");
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)47;
      byteArray1[1] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GX");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "GX");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GX");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`Yrp!T}!/8yJ1");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<String> vector0 = new Vector<String>();
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.addDefaultExcludes();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      File file0 = ImprovedFile.buildName(")*|xj%", 1L, "FT}lDnxl#v.0gYt", (File) null);
      archiveScanner0.toFileType(file0);
      int int0 = (-271258416);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2107L));
      long long0 = 2326L;
      System.setCurrentTimeMillis(2326L);
      System.setCurrentTimeMillis((byte)7);
      System.setCurrentTimeMillis((-2107L));
      System.setCurrentTimeMillis(0L);
      long long1 = 0L;
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-18L));
      System.setCurrentTimeMillis((-2107L));
      System.setCurrentTimeMillis(0L);
      ImprovedFile improvedFile0 = new ImprovedFile("|5!g>D&b48M+&)");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      System.setCurrentTimeMillis(long1);
      System.setCurrentTimeMillis(long0);
      long long2 = 0L;
      System.setCurrentTimeMillis(long2);
      assertFalse(long2 == long0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      String[] stringArray0 = new String[4];
      stringArray0[0] = ".jar";
      stringArray0[1] = ".jar";
      stringArray0[2] = ".jar";
      stringArray0[3] = ".jar";
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.US;
      linkedList0.push((Locale.LanguageRange) null);
      locale0.getDisplayLanguage();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      linkedList1.add((Locale.LanguageRange) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      locale0.getUnicodeLocaleKeys();
      Vector<Object> vector0 = new Vector<Object>();
      Vector<String> vector1 = new Vector<String>();
      vector1.add("Error trying to remove archive staging directory, ");
      Locale.getISOLanguages();
      ImprovedFile improvedFile0 = new ImprovedFile(".jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/.jar
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte) (-14));
      System.setCurrentTimeMillis((byte)82);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte)82);
      System.setCurrentTimeMillis((byte)82);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-26L));
      System.setCurrentTimeMillis((-4160L));
      System.setCurrentTimeMillis((byte) (-14));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2473L));
      System.setCurrentTimeMillis((-1264L));
      System.setCurrentTimeMillis((-338L));
      System.setCurrentTimeMillis((byte) (-14));
      System.setCurrentTimeMillis((byte)82);
      ImprovedFile improvedFile0 = new ImprovedFile(".jar", ".jar");
      ImprovedFile improvedFile1 = ImprovedFile.createTempDirectory(".jar", "Mp%@N~Sn[f#1", (File) improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("GX", "GX");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("GX/GX");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("GX/GX");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      improvedFile0.createTempDir();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.setPermissions(evoSuiteFile1, true, true, false);
      byteArray0[1] = (byte)72;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "GX");
      FileSystemHandling.createFolder(evoSuiteFile1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MGMcU@T7(GjXVBeRF");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "MGMcU@T7(GjXVBeRF");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GX");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "}K%a");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "MGMcU@T7(GjXVBeRF", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }
}
