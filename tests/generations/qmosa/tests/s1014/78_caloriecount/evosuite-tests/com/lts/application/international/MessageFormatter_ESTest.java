/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 04:44:12 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FilterInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.Collection;
import java.util.Comparator;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      messageFormatter0.addBundle((ResourceBundle) null);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream2);
      pushbackInputStream0.skip(0L);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "showAndAskToContinue", pushbackInputStream0);
      StackTraceElement stackTraceElement0 = new StackTraceElement("DH{9fS*XI]vg ", "showAndAskToContinue", "showAndAskToContinue", 1024);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "showAndAskToContinue";
      objectArray0[1] = (Object) dataInputStream0;
      objectArray0[2] = (Object) dataInputStream0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", (Object) "DH{9fS*XI]vg ", objectArray0[4], (Object) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      String string0 = "DH{9fS*XI]vg ";
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      messageFormatter0.addBundle((ResourceBundle) null);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream3);
      pushbackInputStream0.skip(0L);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "showAndAskToContinue", pushbackInputStream0);
      int int0 = 1024;
      String string1 = "java.properties";
      StackTraceElement stackTraceElement0 = new StackTraceElement("DH{9fS*XI]vg ", "java.properties", "showAndAskToContinue", 1024);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) stackTraceElement0;
      objectArray0[2] = (Object) applicationException0;
      objectArray0[3] = (Object) "java.properties";
      objectArray0[4] = (Object) dataInputStream3;
      objectArray0[5] = (Object) stackTraceElement0;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("showAndAskToContinue", objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable("resources.messages.standard", mockThrowable0);
      messageFormatter0.myLastException = (Throwable) mockThrowable1;
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement("&", "N", "&", (-31));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("@g_M1J7%dPSO;", "+~+N'$_AKI1", "@g_M1J7%dPSO;", (-31));
      stackTraceElementArray0[1] = stackTraceElement1;
      Object object0 = new Object();
      List list0 = new LinkedList<ApplicationException>();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertSame(throwable0, mockThrowable1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      messageFormatter0.addBundle((ResourceBundle) null);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream0);
      ApplicationException applicationException0 = new ApplicationException("resources.messages.standard");
      applicationException0.getSuppressed();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, (Object) applicationException0, (Object) dataInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "resources.messages.standard");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      messageFormatter0.addBundle((ResourceBundle) null);
      String string1 = "~A";
      StackTraceElement stackTraceElement0 = new StackTraceElement("resources.messages.standard", "~A", "resources.messages.standard", 18);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MockThrowable mockThrowable0 = new MockThrowable();
      mockThrowable0.getLocalizedMessage();
      messageFormatter0.addBundle((ResourceBundle) null);
      DataInputStream dataInputStream3 = new DataInputStream(dataInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(dataInputStream3);
      pushbackInputStream0.skip(0L);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "showAndAskToContinue", pushbackInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage(".", messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      MockThrowable mockThrowable0 = new MockThrowable();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      mockThrowable0.getLocalizedMessage();
      messageFormatter0.addBundle((ResourceBundle) null);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "resources.messages.standard", (Object) null);
      HashMap<String, PropertyResourceBundle> hashMap0 = new HashMap<String, PropertyResourceBundle>();
      hashMap0.keySet();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8816064979261793
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.mark(256);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream1);
      messageFormatter0.addBundle(propertyResourceBundle0);
      sequenceInputStream0.available();
      sequenceInputStream0.skip(18L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("H69R^", (Object) sequenceInputStream1, (Object) dataInputStream1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream1);
      messageFormatter0.addBundle(propertyResourceBundle0);
      sequenceInputStream0.skip(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      try { 
        messageFormatter0.formatMessage("resources.messages.standard", (Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream0);
      messageFormatter0.addBundle(propertyResourceBundle0);
      sequenceInputStream0.skip(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      Object[] objectArray0 = null;
      messageFormatter0.formatMessage("R(|1y_P;eL", (Object[]) null, (ResourceBundle) propertyResourceBundle0);
      try { 
        pushbackInputStream0.skip(0L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) ".";
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) ".";
      Object object1 = new Object();
      objectArray0[5] = object1;
      StringReader stringReader0 = new StringReader(".");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage(".", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackTraceElement stackTraceElement0 = new StackTraceElement("; and resource path: ", "N", "QdtwOC8v$Lr^{0", (-808));
      StackTraceElement stackTraceElement1 = new StackTraceElement("+~+N'$_AKI1", "-~*", "qQMuH.4g(~BN", 288);
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Locale locale0 = Locale.ENGLISH;
      ClassLoader.getSystemClassLoader();
      Object object0 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      MockThrowable mockThrowable0 = new MockThrowable();
      StringReader stringReader0 = new StringReader("qQMuH.4g(~BN");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      ApplicationException applicationException0 = new ApplicationException(mockThrowable0, "resources.messages.standard", propertyResourceBundle0, "m <M#ONBn&}");
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "m <M#ONBn&}", "&");
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("-~*", applicationException1);
      linkedList0.add(messageFormatter_LoadBundleError0);
      ApplicationException applicationException2 = messageFormatter0.createLoadException(linkedList0);
      assertEquals("critical.com.lts.application.errors.resourceBundle.load", applicationException2.getKey());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter(879);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter2, false);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter1, false);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1);
      mockPrintWriter2.println((-828.636));
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("com.lts.util.deepcopy.DeepCopyException");
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter(mockPrintWriter2, false);
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter(stringWriter2, false);
      MockPrintWriter mockPrintWriter6 = new MockPrintWriter(stringWriter2);
      MockPrintWriter mockPrintWriter7 = new MockPrintWriter("com.lts.util.deepcopy.DeepCopyException");
      MockPrintWriter mockPrintWriter8 = new MockPrintWriter(", ");
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Locale locale1 = new Locale("@g_M1J7%dPSO;", "@g_M1J7%dPSO;");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.setPackageAssertionStatus("@g_M1J7%dPSO;", false);
      classLoader0.setPackageAssertionStatus("^rA", false);
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader2 = classLoader0.getParent();
      classLoader2.getParent();
      classLoader1.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      LinkedList<PropertyResourceBundle> linkedList5 = new LinkedList<PropertyResourceBundle>();
      StringReader stringReader0 = new StringReader("dN/3,^p%B8O<Ud]fN");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      linkedList5.add(propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList3, (List) linkedList5);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.PropertyResourceBundle cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable("fu[f/o]Ec&KRe*1", mockThrowable0);
      MockThrowable mockThrowable3 = new MockThrowable(mockThrowable2);
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable4 = new MockThrowable("org.evosuite.runtime.mock.java.lang.MockThrowable");
      MockThrowable mockThrowable5 = new MockThrowable();
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable3);
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable7 = new MockThrowable();
      MockThrowable mockThrowable8 = new MockThrowable();
      Throwable[] throwableArray0 = mockThrowable2.getSuppressed();
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable9 = new MockThrowable();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = MessageFormatter.buildList(throwableArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer((-905));
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "w|%2BrN*vCqI\"$oO@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'w,uzU[I5)K9S;ai8tW");
      Object object2 = new Object();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerLast((Object) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?@4b9%P:TAL%X0YX>");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(sequenceInputStream1);
      sequenceInputStream0.skip(0L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      Object object0 = new Object();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.listToString(list0);
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(sequenceInputStream0, byteArrayInputStream0);
      PropertyResourceBundle propertyResourceBundle1 = new PropertyResourceBundle(sequenceInputStream2);
      sequenceInputStream1.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      Enumeration<InputStream> enumeration2 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream3 = new SequenceInputStream(enumeration2);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream3);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0, 2268);
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ApplicationException applicationException0 = new ApplicationException("com.lts.application.errorsinitializingPanel");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1, true);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockPrintWriter0);
      mockPrintWriter1.print(true);
      PrintWriter printWriter0 = mockPrintWriter1.append('D');
      printWriter0.print((Object) mockPrintWriter0);
      mockPrintWriter0.close();
      char[] charArray0 = new char[4];
      stringWriter1.append((CharSequence) "com.lts.application.errorsinitializingPanel");
      printWriter0.write(charArray0, (-3418), 3);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(mockPrintWriter1, true);
      mockPrintWriter1.write(charArray0);
      mockPrintWriter1.write("com.lts.application.errorsinitializingPanel");
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable("com.lts.application.errorsinitializingPanel", applicationException0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      Locale locale1 = new Locale("@g_M1J7%dPSO;", "@g_M1J7%dPSO;");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) linkedList2);
      Locale.lookup(linkedList3, list0);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      Locale locale2 = Locale.TRADITIONAL_CHINESE;
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      Locale locale3 = new Locale("2M");
      linkedList1.add(locale0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale4 = Locale.ENGLISH;
      Locale locale5 = Locale.CANADA;
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement("2M", "2M", "2M", 33);
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("@g_M1J7%dPSO;", "2M", "resources.messages.standard", 33);
      StackTraceElement stackTraceElement2 = new StackTraceElement("resources.messages.standard", "@g_M1J7%dPSO;", "!57Pq-", (-1932735295));
      StackTraceElement stackTraceElement3 = new StackTraceElement("resources.messages.standard", "resources.messages.standard", ".title.", 33);
      StackTraceElement stackTraceElement4 = new StackTraceElement("Sd", "resources.messages.standard", "38?:CR", 33);
      StackTraceElement stackTraceElement5 = new StackTraceElement("Sd", "resources.messages.standard", "?v!", 33);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("74(#l@tIK");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2);
      Locale locale0 = Locale.PRC;
      linkedList2.add(locale0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList2, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list1, locale_FilteringMode4);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.CHINA;
      Locale locale2 = Locale.CANADA;
      Locale.lookup(linkedList5, list2);
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      Locale.lookup(linkedList7, list2);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList12 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, (List<String>) linkedList12, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Object object0 = new Object();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) enumeration0;
      objectArray0[1] = (Object) enumeration0;
      objectArray0[2] = (Object) "com.lts.pest.data.IdTre";
      Object object1 = new Object();
      objectArray0[3] = object1;
      objectArray0[4] = (Object) "com.lts.pest.data.IdTre";
      objectArray0[5] = (Object) enumeration0;
      objectArray0[6] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader3 = classLoader1.getParent();
      classLoader1.setDefaultAssertionStatus(false);
      classLoader3.clearAssertionStatus();
      classLoader2.setDefaultAssertionStatus(false);
      classLoader3.setPackageAssertionStatus("y'4$OV4^jn,3", false);
      classLoader1.setPackageAssertionStatus("|'2n1$1L", false);
      ClassLoader classLoader4 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader5 = ClassLoader.getSystemClassLoader();
      classLoader5.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader6 = classLoader4.getParent();
      classLoader6.getParent();
      classLoader6.getParent();
      ClassLoader classLoader7 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader7.getParent();
      ClassLoader.getSystemClassLoader();
      List list0 = new LinkedList<ApplicationException>();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)67;
      byteArray0[1] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(byteArrayInputStream0);
      String string0 = messageFormatter1.formatMessage("y'4$OV4^jn,3", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "", (-14));
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "", (-14));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("^St#n ", "Z=", "^St#n ", (-14));
      stackTraceElementArray0[3] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("iyj`X<|?TSP\"g", "Z=", "Z=", (-14));
      stackTraceElementArray0[7] = stackTraceElement3;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "com.lt.pest.tree.DirtyCleanTree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('Z');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(stringWriter1, false);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(stringWriter0);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(mockPrintWriter1);
      mockPrintWriter1.print(false);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter("@\"~]J9\"US'+3L^hM");
      MockPrintWriter mockPrintWriter5 = new MockPrintWriter(stringWriter0, false);
      mockPrintWriter5.println();
      mockPrintWriter4.println(".");
      MockPrintWriter mockPrintWriter6 = new MockPrintWriter(mockPrintWriter2, true);
      mockPrintWriter4.append((CharSequence) ".");
      StringWriter stringWriter2 = stringWriter1.append('Z');
      MockPrintWriter mockPrintWriter7 = new MockPrintWriter(stringWriter2);
      MockPrintWriter mockPrintWriter8 = new MockPrintWriter("@%xsG!rR6j~0wpy/");
      MockPrintWriter mockPrintWriter9 = new MockPrintWriter("H`@!X-E;,W**19h1");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<Locale> linkedList0 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList4 = new LinkedList<Locale>();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList4);
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList6 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList2, (Collection<Locale>) linkedList4, locale_FilteringMode1);
      LinkedList<Locale> linkedList7 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList11 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList11, list0);
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.UK;
      LinkedList<Locale> linkedList13 = new LinkedList<Locale>();
      Locale locale1 = Locale.CANADA;
      List<String> list1 = ResourceBundle.Control.FORMAT_PROPERTIES;
      List<String> list2 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale2 = new Locale("<=ZARVsR&|dIg~:3");
      ClassLoader.getSystemClassLoader();
      ResourceBundle.Control resourceBundle_Control0 = ResourceBundle.Control.getNoFallbackControl(list2);
      resourceBundle_Control0.getFormats("<=ZARVsR&|dIg~:3");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.TAIWAN;
      Locale locale2 = new Locale("Swk#*}-N=-*;bQ)4%", "com.lts.util.deepcopy.DeepCopyException");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList3, linkedList1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale3 = Locale.TRADITIONAL_CHINESE;
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      Locale locale4 = Locale.CHINA;
      linkedList1.add(locale2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale5 = Locale.ENGLISH;
      Locale locale6 = Locale.CANADA;
      List<String> list1 = ResourceBundle.Control.FORMAT_CLASS;
      List<String> list2 = ResourceBundle.Control.FORMAT_PROPERTIES;
      LinkedList<String> linkedList7 = new LinkedList<String>();
      Locale locale7 = Locale.CANADA;
      Locale locale8 = Locale.PRC;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("-(4z0w;TG]j1Z", (Object) list0, (Object) locale0, (Object) linkedList4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.KOREA;
      Locale locale1 = Locale.TAIWAN;
      Locale locale2 = new Locale("Swk#*}-N=-*;bQ)4%", "com.lts.util.deepcopy.DeepCopyException");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      Locale.lookup(linkedList3, linkedList1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList5 = new LinkedList<Locale>();
      Locale locale3 = Locale.UK;
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      Locale locale4 = Locale.CHINA;
      linkedList1.add(locale2);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Locale locale5 = Locale.ENGLISH;
      linkedList0.sort((Comparator<? super Locale.LanguageRange>) null);
      Locale locale6 = Locale.CANADA;
      List<String> list1 = ResourceBundle.Control.FORMAT_CLASS;
      List<String> list2 = ResourceBundle.Control.FORMAT_PROPERTIES;
      LinkedList<String> linkedList7 = new LinkedList<String>();
      Locale locale7 = Locale.CANADA;
      Locale locale8 = Locale.GERMANY;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("-(4z0w;TG]j1Z", (Object) list0, (Object) locale0, (Object) linkedList4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(dataInputStream0);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(dataInputStream0);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(dataInputStream0);
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.281128909337228
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2);
      Locale locale0 = Locale.PRC;
      linkedList2.add(locale0);
      linkedList2.add(locale0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList2, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list1, locale_FilteringMode4);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.CHINA;
      Locale locale2 = Locale.CANADA;
      Locale locale3 = Locale.ENGLISH;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list2 = ResourceBundle.Control.FORMAT_DEFAULT;
      messageFormatter0.initializeResourceBundle();
      List<String> list3 = ResourceBundle.Control.FORMAT_DEFAULT;
      try { 
        messageFormatter0.initializeResourceBundle(list3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable("fu[f/o]Ec&KRe*1", mockThrowable0);
      MockThrowable mockThrowable3 = new MockThrowable(mockThrowable2);
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable4 = new MockThrowable("org.evosuite.runtime.mock.java.lang.MockThrowable");
      MockThrowable mockThrowable5 = new MockThrowable();
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable3);
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable7 = new MockThrowable();
      MockThrowable mockThrowable8 = new MockThrowable();
      Throwable[] throwableArray0 = mockThrowable2.getSuppressed();
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable9 = new MockThrowable();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.formatMessage("org.evosuite.runtime.mock.java.lang.MockThrowable", throwableArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer((-905));
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable("fu[f/o]Ec&KRe*1", mockThrowable0);
      MockThrowable mockThrowable3 = new MockThrowable(mockThrowable2);
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable4 = new MockThrowable("org.evosuite.runtime.mock.java.lang.MockThrowable");
      MockThrowable mockThrowable5 = new MockThrowable();
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable3);
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable7 = new MockThrowable();
      MockThrowable mockThrowable8 = new MockThrowable();
      mockThrowable2.getSuppressed();
      mockThrowable1.getLocalizedMessage();
      Integer integer0 = new Integer((-2561));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.myLastException;
      Integer integer1 = new Integer(3314);
      ApplicationException applicationException0 = new ApplicationException((Throwable) null, ")y-]T\" {Q}9l", "s5", integer1, integer0);
      MockThrowable mockThrowable9 = new MockThrowable(applicationException0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      stringWriter0.write("sd~sN)Q8SF92P):r8D");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      StringWriter stringWriter3 = new StringWriter(462);
      StringWriter stringWriter4 = new StringWriter();
      stringWriter2.flush();
      stringWriter0.write(462);
      stringWriter1.close();
      char[] charArray0 = new char[2];
      charArray0[1] = 's';
      stringWriter4.write(charArray0);
      stringWriter0.close();
      StringWriter stringWriter5 = new StringWriter(879);
      StringWriter stringWriter6 = new StringWriter();
      stringWriter5.write((-2558));
      stringWriter4.write(charArray0);
      StringWriter stringWriter7 = stringWriter2.append('s');
      stringWriter7.close();
      stringWriter1.write((-2558));
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter("sd~sN)Q8SF92P):r8D");
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader1.setPackageAssertionStatus("laW4mP", false);
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader2.setPackageAssertionStatus("laW4mP", false);
      classLoader2.getParent();
      classLoader0.getParent();
      classLoader1.getParent();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      classLoader0.clearAssertionStatus();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader3 = classLoader0.getParent();
      classLoader1.setDefaultAssertionStatus(false);
      classLoader3.clearAssertionStatus();
      classLoader2.setDefaultAssertionStatus(false);
      classLoader3.setPackageAssertionStatus("y'4$OV4^jn,3", false);
      classLoader1.setPackageAssertionStatus("|'2n1$1L", false);
      ClassLoader classLoader4 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader5 = ClassLoader.getSystemClassLoader();
      classLoader5.getParent();
      ClassLoader.getSystemClassLoader();
      classLoader1.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      MessageFormatter messageFormatter1 = new MessageFormatter();
      ClassLoader.getSystemClassLoader();
      ClassLoader classLoader6 = classLoader4.getParent();
      classLoader6.getParent();
      classLoader6.getParent();
      ClassLoader classLoader7 = ClassLoader.getSystemClassLoader();
      ClassLoader.getSystemClassLoader();
      classLoader7.getParent();
      ClassLoader classLoader8 = ClassLoader.getSystemClassLoader();
      List list0 = messageFormatter0.listResources(", ", classLoader8);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      mockThrowable0.addSuppressed(mockThrowable1);
      MockThrowable mockThrowable2 = new MockThrowable("fu[f/o]Ec&KRe*1", mockThrowable0);
      MockThrowable mockThrowable3 = new MockThrowable(mockThrowable2);
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable4 = new MockThrowable("org.evosuite.runtime.mock.java.lang.MockThrowable");
      MockThrowable mockThrowable5 = new MockThrowable();
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable3);
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable7 = new MockThrowable();
      MockThrowable mockThrowable8 = new MockThrowable();
      mockThrowable2.getSuppressed();
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable9 = new MockThrowable();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.listResources("org.evosuite.runtime.mock.java.lang.MockThrowable", (ClassLoader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(false);
      classLoader1.clearAssertionStatus();
      classLoader1.setDefaultAssertionStatus(false);
      classLoader2.setPackageAssertionStatus("<ZeK", false);
      classLoader2.setPackageAssertionStatus("^rA", false);
      ClassLoader classLoader3 = classLoader0.getParent();
      classLoader3.getParent();
      classLoader3.getParent();
      ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.properties; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      Object object6 = new Object();
      objectArray0[6] = object6;
      Object object7 = new Object();
      objectArray0[7] = object7;
      List list0 = MessageFormatter.buildList(objectArray0);
      assertEquals(8, list0.size());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      mockThrowable0.addSuppressed(mockThrowable1);
      MockThrowable mockThrowable2 = new MockThrowable("fu[f/o]Ec&KRe*1", mockThrowable0);
      MockThrowable mockThrowable3 = new MockThrowable(mockThrowable2);
      mockThrowable1.getLocalizedMessage();
      MockThrowable mockThrowable4 = new MockThrowable("org.evosuite.runtime.mock.java.lang.MockThrowable");
      MockThrowable mockThrowable5 = new MockThrowable();
      MockThrowable mockThrowable6 = new MockThrowable(mockThrowable3);
      mockThrowable0.getLocalizedMessage();
      MockThrowable mockThrowable7 = new MockThrowable();
      MockThrowable mockThrowable8 = new MockThrowable();
      Throwable[] throwableArray0 = mockThrowable2.getSuppressed();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.getMessage("fu[f/o]Ec&KRe*1", (Object[]) throwableArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("_Z7A/|s");
      ApplicationException applicationException1 = new ApplicationException("");
      ApplicationException applicationException2 = new ApplicationException(applicationException0, "error processing file ", messageFormatter0, applicationException1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2);
      Locale locale0 = Locale.PRC;
      linkedList2.add(locale0);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList4, (Collection<Locale>) list1, locale_FilteringMode2);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) linkedList2, locale_FilteringMode3);
      Locale.FilteringMode locale_FilteringMode4 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList5, (Collection<Locale>) list1, locale_FilteringMode4);
      LinkedList<Locale> linkedList6 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList7 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList8 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList9 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList10 = new LinkedList<Locale.LanguageRange>();
      Locale locale1 = Locale.CHINA;
      Locale locale2 = Locale.CANADA;
      LinkedList<Locale> linkedList11 = new LinkedList<Locale>();
      LinkedList<Locale.LanguageRange> linkedList12 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode5 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList12, (Collection<Locale>) list2, locale_FilteringMode5);
      Locale.lookup(linkedList10, list3);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List<String> list4 = ResourceBundle.Control.FORMAT_CLASS;
      List<String> list5 = Locale.filterTags((List<Locale.LanguageRange>) linkedList3, (Collection<String>) list4, locale_FilteringMode1);
      LinkedList<String> linkedList13 = new LinkedList<String>();
      try { 
        messageFormatter0.initializeResourceBundle(list5, (List<String>) linkedList13, locale2, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: ; and resource path: 
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      StackTraceElement stackTraceElement0 = new StackTraceElement("2M", "2M", "2M", 33);
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[1] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("@g_M1J7%dPSO;", "2M", "resources.messages.standard", 33);
      StackTraceElement stackTraceElement2 = new StackTraceElement("resources.messages.standard", "@g_M1J7%dPSO;", "!57Pq-", (-1932735295));
      StackTraceElement stackTraceElement3 = new StackTraceElement("resources.messages.standard", "resources.messages.standard", ".title.", 33);
      StackTraceElement stackTraceElement4 = new StackTraceElement("Sd", "resources.messages.standard", "38?:CR", 33);
      StackTraceElement stackTraceElement5 = new StackTraceElement("Sd", "resources.messages.standard", "?v!", 33);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      messageFormatter0.listToString(linkedList0);
      String string0 = messageFormatter0.listToString(linkedList0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.properties; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement(".", ".", ".", (-14));
      StackTraceElement stackTraceElement1 = new StackTraceElement(".", ".", ".", (-14));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("^St#n ", "Z=", "^St#n ", (-14));
      stackTraceElementArray0[3] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("iyj`X<|?TSP\"g", "Z=", "Z=", (-14));
      stackTraceElementArray0[7] = stackTraceElement3;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad(".", "com.lt.pest.tree.DirtyCleanTree");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }
}
