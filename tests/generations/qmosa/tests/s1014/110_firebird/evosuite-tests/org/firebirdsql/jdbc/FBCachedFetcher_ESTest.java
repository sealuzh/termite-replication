/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:25:22 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.URL;
import java.security.AccessControlContext;
import java.security.CodeSigner;
import java.security.CodeSource;
import java.security.PermissionCollection;
import java.security.ProtectionDomain;
import java.security.cert.Certificate;
import java.time.Instant;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.TimeUnit;
import java.util.function.Consumer;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import javax.security.auth.Subject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.AbstractJavaGDSImpl;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.XdrOutputStream;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.DummyCallableStatementMetaData;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBDriverNotCapableException;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.FBCachedBlobField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.3908661755171052
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      linkedList0.add((byte[][]) null);
      byteArray0[14] = (byte)82;
      byteArray0[3] = (byte)82;
      byteArray0[5] = (byte) (-95);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)75;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)82;
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte)82;
      byteArray1[5] = (byte) (-118);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("");
      jMXPrincipal0.getName();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.absolute((-1));
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      fBCachedFetcher0.setFetchSize(92);
      fBCachedFetcher0.next();
      fBCachedFetcher0.setFetchSize((-1578));
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.first();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.last();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-44);
      byteArray1[1] = (byte) (-47);
      byteArray1[3] = (byte)100;
      byteArray1[4] = (byte) (-42);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.absolute((-2490));
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.next();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.6599181235770213
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M`L");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+Kp-]+/]O0md/<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IOException in receiveResponse");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[][] byteArray0 = new byte[0][9];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray1 = new byte[0][5];
      linkedList0.add(byteArray1);
      linkedList0.add(byteArray1);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+Kp-]+/]O0md/<");
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.last();
      fBCachedFetcher0.next();
      fBCachedFetcher0.isAfterLast();
      fBResultSet0.isLast();
      byte[][] byteArray2 = linkedList0.pollFirst();
      linkedList0.add(byteArray2);
      try { 
        fBResultSet0.getSQLXML("e");
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.FBResultSet", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.870026859247446
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((byte)82);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)75;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[4] = (byte)82;
      byteArray0[5] = (byte)0;
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertTrue(fBCachedFetcher0.isEmpty());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.361061809768637
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[18];
      byteArray0[14] = (byte)0;
      byteArray0[3] = (byte) (-44);
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte) (-95);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)75;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte) (-118);
      byteArray1[5] = (byte) (-118);
      byteArray1[7] = (byte)0;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-118);
      byte[] byteArray3 = new byte[5];
      byteArray3[1] = (byte) (-48);
      byteArray3[3] = (byte)75;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte)75;
      byteArray4[1] = (byte) (-118);
      byte[] byteArray5 = new byte[7];
      byteArray5[3] = (byte) (-118);
      byteArray5[0] = (byte)0;
      byteArray5[5] = (byte) (-44);
      byte[] byteArray6 = new byte[2];
      byteArray5[4] = (byte)0;
      byteArray6[1] = (byte)75;
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize(2);
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.getFetchSize();
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.3594892253842366
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      linkedList0.add((byte[][]) null);
      byteArray0[14] = (byte)82;
      byteArray0[3] = (byte)82;
      byteArray0[5] = (byte) (-95);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)75;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)82;
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte)82;
      byteArray1[5] = (byte) (-118);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[5][9];
      byteArray1[0] = byteArray0;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)68;
      PriorityBlockingQueue<ByteArrayInputStream> priorityBlockingQueue0 = new PriorityBlockingQueue<ByteArrayInputStream>();
      linkedList1.removeAll(priorityBlockingQueue0);
      byteArray2[1] = (byte)68;
      byteArray2[2] = (byte)68;
      byteArray1[1] = byteArray2;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      linkedList1.add(byteArray1);
      byte[][] byteArray3 = new byte[3][6];
      byteArray3[0] = byteArray0;
      byteArray3[1] = byteArray0;
      byteArray3[2] = byteArray0;
      linkedList0.add(byteArray3);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray3);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.relative(75);
      fBCachedFetcher0.insertRow(byteArray3);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      System.setCurrentTimeMillis((byte)68);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.first();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.738065156666371
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      SynchronousQueue<FBCachedBlobField> synchronousQueue0 = new SynchronousQueue<FBCachedBlobField>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.removeAll(synchronousQueue0);
      delayQueue0.poll();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~}3#ptlEVg$anw%v0|o");
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp0.deepCopy();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      isc_tr_handle_impl0.getDbHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      databaseParameterBufferImp0.deepCopy();
      databaseParameterBufferImp0.addArgument((-4636), "UWp8hM.F*46;Kp:");
      databaseParameterBufferImp0.addArgument(3);
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBuffer0, (IscDbHandle) null, gDSHelper_GDSHelperErrorListener0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isLast();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      linkedList0.add((byte[][]) null);
      byteArray0[14] = (byte)82;
      byteArray0[3] = (byte)82;
      byteArray0[5] = (byte) (-95);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)75;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)82;
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte)82;
      linkedList0.add((byte[][]) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.last();
      assertFalse(fBCachedFetcher1.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.429092211467573
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      linkedList0.add((byte[][]) null);
      byteArray0[14] = (byte)82;
      byteArray0[3] = (byte)82;
      byteArray0[5] = (byte) (-95);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)75;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)82;
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte)82;
      byteArray1[5] = (byte) (-118);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      boolean boolean0 = fBCachedFetcher0.relative((byte) (-95));
      assertFalse(fBCachedFetcher0.isFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6020395425995058
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      SynchronousQueue<FBCachedBlobField> synchronousQueue0 = new SynchronousQueue<FBCachedBlobField>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      delayQueue0.parallelStream();
      delayQueue0.poll();
      delayQueue0.removeAll(synchronousQueue0);
      delayQueue0.poll();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      isc_tr_handle_impl0.getDbHandle();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBResultSet0.next();
      fBCachedFetcher0.previous();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      fBCachedFetcher0.isAfterLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      linkedList0.offer((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isFirst();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        fBResultSet0.updateAsciiStream(4, (InputStream) pipedInputStream0, (long) 5);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate1.or(predicate9);
      Predicate<Object> predicate11 = predicate2.negate();
      predicate8.or(predicate1);
      Predicate<Object> predicate12 = predicate7.and(predicate1);
      Predicate<Object> predicate13 = predicate2.and(predicate5);
      Predicate<Object> predicate14 = predicate2.or(predicate10);
      Predicate<Object> predicate15 = predicate11.negate();
      Predicate<Object> predicate16 = predicate0.and(predicate9);
      predicate15.and(predicate16);
      Predicate.isEqual((Object) predicate0);
      predicate3.and(predicate15);
      predicate12.and(predicate15);
      Predicate<Object> predicate17 = predicate3.and(predicate4);
      predicate7.or(predicate17);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate18 = predicate5.or(predicate7);
      Predicate<Object> predicate19 = predicate14.negate();
      predicate10.test(predicate13);
      predicate19.negate();
      Predicate<Object> predicate20 = predicate6.negate();
      predicate20.negate();
      predicate18.negate();
      predicate15.test(predicate20);
      Predicate.isEqual((Object) predicate3);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate1.or(predicate9);
      Predicate<Object> predicate11 = predicate2.negate();
      predicate8.or(predicate1);
      Predicate<Object> predicate12 = predicate7.and(predicate1);
      Predicate<Object> predicate13 = predicate2.and(predicate5);
      Predicate<Object> predicate14 = predicate2.or(predicate10);
      Predicate<Object> predicate15 = predicate11.negate();
      Predicate<Object> predicate16 = predicate0.and(predicate9);
      predicate15.and(predicate16);
      Predicate<Object> predicate17 = Predicate.isEqual((Object) linkedList0);
      Predicate.isEqual((Object) predicate17);
      predicate3.and(predicate15);
      predicate12.and(predicate15);
      Predicate<Object> predicate18 = predicate3.and(predicate4);
      predicate7.or(predicate18);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate19 = predicate5.or(predicate7);
      Predicate<Object> predicate20 = predicate14.negate();
      predicate10.test(predicate13);
      predicate20.negate();
      Predicate<Object> predicate21 = predicate6.negate();
      predicate21.negate();
      predicate19.negate();
      predicate15.test(predicate21);
      Predicate.isEqual((Object) predicate3);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeArgument(100);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-2892), byteArray0);
      databaseParameterBufferImp1.addArgument((-2892));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-2892), "YiJ\"");
      databaseParameterBufferImp0.addArgument((-2892), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2892));
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp11.getArgumentAsString((-2892));
      databaseParameterBufferImp11.getArgumentAsString((-2892));
      databaseParameterBufferImp0.addArgument(2004, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      databaseParameterBufferImp8.addArgument((-1430), byteArray0);
      databaseParameterBufferImp11.addArgument((-4462));
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate1.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate2.negate();
      predicate9.or(predicate3);
      predicate6.and(predicate8);
      predicate8.or(predicate1);
      predicate8.negate();
      Predicate<Object> predicate11 = predicate7.and(predicate1);
      Predicate<Object> predicate12 = predicate2.and(predicate5);
      Predicate<Object> predicate13 = predicate2.or(predicate4);
      Predicate<Object> predicate14 = predicate10.negate();
      Predicate<Object> predicate15 = predicate0.and(predicate9);
      predicate15.negate();
      predicate14.and(predicate15);
      Predicate.isEqual((Object) predicate0);
      predicate3.and(predicate14);
      predicate11.and(predicate14);
      Predicate<Object> predicate16 = predicate3.and(predicate4);
      predicate7.or(predicate16);
      byte[][] byteArray0 = new byte[0][6];
      predicate5.or(predicate7);
      predicate4.negate();
      predicate13.negate();
      predicate6.test(predicate12);
      linkedList0.add(byteArray0);
      System.setCurrentTimeMillis(5054L);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.655444650609953
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[5][9];
      byteArray1[0] = byteArray0;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)75;
      byteArray2[1] = (byte)75;
      byteArray2[2] = (byte)75;
      byteArray1[1] = byteArray2;
      byteArray1[2] = byteArray0;
      byteArray1[3] = byteArray0;
      byteArray1[4] = byteArray0;
      linkedList1.add(byteArray1);
      byte[][] byteArray3 = new byte[3][6];
      byteArray3[0] = byteArray0;
      byteArray3[1] = byteArray0;
      byteArray3[2] = byteArray0;
      linkedList0.add(byteArray3);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray3);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow(byteArray3);
      fBCachedFetcher0.next();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.absolute((byte)75);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DummyCallableStatementMetaData dummyCallableStatementMetaData0 = new DummyCallableStatementMetaData();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][3];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-88);
      byteArray1[1] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-1);
      linkedList0.add(byteArray0);
      linkedList0.clear();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.forEach(consumer0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test((Object) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate2.or(predicate7);
      predicate6.and(predicate2);
      predicate2.negate();
      Predicate<Object> predicate9 = predicate6.and(predicate1);
      Predicate<Object> predicate10 = predicate2.and(predicate5);
      Predicate<Object> predicate11 = predicate2.or(predicate8);
      Predicate<Object> predicate12 = predicate6.negate();
      linkedList0.removeIf(predicate12);
      Predicate<Object> predicate13 = predicate10.negate();
      Predicate<Object> predicate14 = Predicate.isEqual((Object) predicate9);
      predicate12.or(predicate14);
      predicate3.and(predicate12);
      predicate4.or(predicate13);
      byte[][] byteArray0 = new byte[6][1];
      predicate7.negate();
      predicate11.negate();
      predicate8.test(predicate7);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-27));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-2871), byteArray0);
      databaseParameterBufferImp1.addArgument((-2871));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      byte[][] byteArray1 = new byte[3][5];
      byteArray1[0] = byteArray0;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)25;
      byteArray2[1] = (byte) (-127);
      byteArray2[2] = (byte)4;
      byteArray2[3] = (byte)1;
      byteArray2[4] = (byte) (-55);
      byteArray2[5] = (byte)35;
      byteArray2[6] = (byte)63;
      byteArray1[1] = byteArray2;
      byteArray1[2] = byteArray0;
      linkedList0.add(byteArray1);
      databaseParameterBufferImp0.addArgument((-2871), ";:(");
      databaseParameterBufferImp1.addArgument((-2871), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2871));
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp10.getArgumentAsString((-2871));
      databaseParameterBufferImp0.addArgument(2005, byteArray0);
      databaseParameterBufferImp7.addArgument(1899, byteArray0);
      databaseParameterBufferImp8.addArgument(2005, byteArray0);
      databaseParameterBuffer0.addArgument((-4462));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(1899);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      predicate4.negate();
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.negate();
      Predicate<Object> predicate8 = predicate6.or(predicate7);
      Predicate<Object> predicate9 = predicate6.and(predicate1);
      predicate2.and(predicate5);
      predicate2.or(predicate8);
      Predicate<Object> predicate10 = predicate6.negate();
      linkedList0.removeIf(predicate10);
      Predicate<Object> predicate11 = predicate3.and(predicate10);
      Predicate<Object> predicate12 = predicate7.or(predicate8);
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      predicate12.or(predicate2);
      predicate3.and(predicate10);
      Predicate<Object> predicate13 = predicate0.negate();
      Predicate<Object> predicate14 = predicate8.negate();
      Predicate<Object> predicate15 = predicate6.and(predicate11);
      predicate3.negate();
      Predicate<Object> predicate16 = predicate14.negate();
      predicate9.test(predicate2);
      Predicate<Object> predicate17 = predicate13.negate();
      predicate16.test(predicate4);
      Predicate.isEqual((Object) predicate15);
      predicate5.negate();
      Predicate<Object> predicate18 = predicate17.and(predicate5);
      predicate18.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-3964));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      predicate4.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      Predicate<Object> predicate7 = predicate5.negate();
      Predicate<Object> predicate8 = predicate6.or(predicate7);
      Predicate<Object> predicate9 = predicate6.and(predicate1);
      predicate2.and(predicate5);
      predicate2.or(predicate8);
      Predicate<Object> predicate10 = predicate6.negate();
      linkedList0.removeIf(predicate10);
      Predicate<Object> predicate11 = predicate3.and(predicate10);
      Predicate<Object> predicate12 = predicate7.or(predicate8);
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      predicate12.or(predicate2);
      predicate3.and(predicate10);
      Predicate<Object> predicate13 = predicate0.negate();
      predicate8.negate();
      Predicate<Object> predicate14 = predicate6.and(predicate11);
      predicate11.negate();
      Predicate<Object> predicate15 = predicate0.negate();
      predicate9.test(predicate2);
      Predicate<Object> predicate16 = predicate13.negate();
      predicate15.test(predicate4);
      Predicate.isEqual((Object) predicate14);
      predicate5.negate();
      Predicate<Object> predicate17 = predicate16.and(predicate5);
      predicate17.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute((-3964));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-125);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)2;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate2.or(predicate8);
      Predicate<Object> predicate10 = predicate2.negate();
      Predicate<Object> predicate11 = predicate7.and(predicate1);
      predicate2.and(predicate5);
      Predicate<Object> predicate12 = predicate2.or(predicate9);
      Predicate.isEqual((Object) predicate0);
      linkedList0.removeIf(predicate10);
      Predicate<Object> predicate13 = predicate3.and(predicate1);
      Predicate<Object> predicate14 = predicate3.and(predicate4);
      predicate7.or(predicate14);
      predicate8.or(predicate9);
      byte[][] byteArray0 = new byte[0][6];
      predicate5.or(predicate7);
      Predicate<Object> predicate15 = predicate12.negate();
      predicate15.negate();
      Predicate<Object> predicate16 = predicate6.negate();
      predicate15.test(predicate9);
      predicate16.negate();
      predicate6.negate();
      predicate11.test(predicate16);
      Predicate.isEqual((Object) predicate8);
      linkedList0.removeIf(predicate13);
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate2.or(predicate7);
      Predicate<Object> predicate9 = predicate6.and(predicate2);
      Predicate<Object> predicate10 = predicate6.and(predicate1);
      Predicate<Object> predicate11 = predicate2.and(predicate5);
      Predicate<Object> predicate12 = predicate2.or(predicate8);
      Predicate<Object> predicate13 = predicate6.negate();
      linkedList0.removeIf(predicate13);
      predicate11.negate();
      Predicate<Object> predicate14 = Predicate.isEqual((Object) predicate10);
      predicate13.or(predicate14);
      MockDate mockDate0 = new MockDate(2004, 2004, 335544446, (-2259), (-94));
      Instant instant0 = mockDate0.toInstant();
      Instant instant1 = MockInstant.plusNanos(instant0, 1L);
      Predicate.isEqual((Object) instant1);
      predicate3.and(predicate13);
      predicate0.negate();
      byte[][] byteArray0 = new byte[6][1];
      predicate7.negate();
      Predicate<Object> predicate15 = predicate12.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      predicate9.negate();
      predicate15.and(predicate8);
      predicate15.negate();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow(byteArray0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(1);
      isc_tr_handle_impl0.registerStatementWithTransaction(isc_stmt_handle_impl1);
      isc_tr_handle_impl isc_tr_handle_impl1 = new isc_tr_handle_impl();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl2 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_db_handle_impl0.setRdbId(2);
      isc_stmt_handle_impl1.getInSqlda();
      AbstractJavaGDSImpl.calculateBLR((XSQLDA) null);
      isc_stmt_handle_impl0.setDeleteCount(4);
      isc_stmt_handle_impl1.setInSqlda((XSQLDA) null);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_db_handle_impl isc_db_handle_impl1 = new isc_db_handle_impl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      isc_db_handle_impl0.setProtocol(0);
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      IscDbHandle iscDbHandle0 = javaGDSImpl1.createIscDbHandle();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      isc_tr_handle_impl1.registerStatementWithTransaction(isc_stmt_handle_impl0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl1, databaseParameterBufferImp0, iscDbHandle0, gDSHelper_GDSHelperErrorListener0);
      isc_stmt_handle_impl3.setInsertCount(0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher(gDSHelper0, 6, 4, isc_stmt_handle_impl3, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate2.or(predicate8);
      predicate7.and(predicate2);
      predicate2.negate();
      predicate7.and(predicate1);
      predicate2.and(predicate5);
      Predicate<Object> predicate10 = predicate2.or(predicate9);
      Predicate<Object> predicate11 = predicate7.negate();
      linkedList0.removeIf(predicate11);
      Predicate<Object> predicate12 = predicate3.negate();
      predicate3.and(predicate11);
      byte[][] byteArray0 = new byte[0][6];
      predicate4.or(predicate12);
      byte[][] byteArray1 = new byte[1][1];
      predicate8.negate();
      Predicate<Object> predicate13 = predicate10.negate();
      predicate9.test(predicate8);
      Predicate<Object> predicate14 = predicate13.negate();
      predicate13.or(predicate14);
      predicate13.and(predicate9);
      predicate13.negate();
      predicate6.negate();
      Predicate.isEqual((Object) predicate0);
      linkedList0.offer(byteArray0);
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      byte[][] byteArray0 = new byte[6][7];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[0][7];
      linkedList0.add(byteArray1);
      linkedList0.clear();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate1.or(predicate9);
      Predicate<Object> predicate11 = predicate2.negate();
      predicate8.or(predicate1);
      Predicate<Object> predicate12 = predicate7.and(predicate1);
      Predicate<Object> predicate13 = predicate2.and(predicate5);
      Predicate<Object> predicate14 = predicate2.or(predicate10);
      Predicate<Object> predicate15 = predicate11.negate();
      Predicate<Object> predicate16 = predicate0.and(predicate9);
      predicate15.and(predicate16);
      Predicate.isEqual((Object) predicate0);
      predicate3.and(predicate15);
      predicate12.and(predicate15);
      Predicate<Object> predicate17 = predicate3.and(predicate4);
      predicate9.and(predicate1);
      predicate7.or(predicate17);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate18 = predicate14.negate();
      predicate10.test(predicate13);
      predicate18.negate();
      Predicate<Object> predicate19 = predicate6.negate();
      predicate19.negate();
      predicate17.negate();
      predicate15.test(predicate19);
      Predicate.isEqual((Object) predicate3);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate2.negate();
      Predicate<Object> predicate10 = predicate1.or(predicate9);
      Predicate<Object> predicate11 = predicate2.negate();
      Predicate<Object> predicate12 = predicate7.and(predicate1);
      Predicate<Object> predicate13 = predicate2.and(predicate5);
      Predicate<Object> predicate14 = predicate2.or(predicate10);
      Predicate<Object> predicate15 = predicate11.negate();
      Predicate.isEqual((Object) predicate0);
      predicate3.and(predicate15);
      predicate12.and(predicate15);
      Predicate<Object> predicate16 = predicate3.and(predicate4);
      predicate7.or(predicate16);
      predicate8.or(predicate10);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate17 = predicate5.or(predicate7);
      Predicate<Object> predicate18 = predicate14.negate();
      predicate10.test(predicate13);
      predicate18.negate();
      Predicate<Object> predicate19 = predicate6.negate();
      predicate18.test(predicate10);
      predicate19.negate();
      predicate17.negate();
      predicate15.test(predicate19);
      Predicate.isEqual((Object) predicate3);
      Predicate.isEqual((Object) predicate12);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2871), byteArray0);
      databaseParameterBufferImp0.getLength();
      databaseParameterBufferImp2.addArgument((-2871));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2871));
      databaseParameterBufferImp1.addArgument((-3876));
      databaseParameterBufferImp7.deepCopy();
      databaseParameterBufferImp5.getArgumentAsString(1385);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp10.removeArgument((-2871));
      databaseParameterBufferImp10.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      byte[][] byteArray1 = new byte[0][0];
      linkedList1.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp1.addArgument((-2871), byteArray0);
      databaseParameterBufferImp0.addArgument((-2871));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp1.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2871));
      databaseParameterBufferImp1.addArgument((-3876));
      databaseParameterBufferImp6.deepCopy();
      databaseParameterBufferImp4.getArgumentAsString(1385);
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp9.addArgument(1);
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      byte[][] byteArray1 = new byte[0][0];
      linkedList0.add(byteArray1);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate1.or(predicate9);
      Predicate<Object> predicate11 = predicate2.negate();
      predicate8.or(predicate1);
      Predicate<Object> predicate12 = predicate7.and(predicate1);
      Predicate<Object> predicate13 = predicate2.and(predicate5);
      Predicate<Object> predicate14 = predicate2.or(predicate10);
      Predicate<Object> predicate15 = predicate11.negate();
      Predicate<Object> predicate16 = predicate0.and(predicate9);
      predicate15.and(predicate16);
      Predicate.isEqual((Object) predicate0);
      predicate3.and(predicate15);
      predicate12.and(predicate15);
      Predicate<Object> predicate17 = predicate14.negate();
      predicate7.or(predicate17);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate18 = predicate5.or(predicate7);
      Predicate<Object> predicate19 = predicate14.negate();
      predicate10.test(predicate13);
      predicate19.negate();
      Predicate<Object> predicate20 = predicate6.negate();
      predicate20.negate();
      predicate18.negate();
      predicate15.test(predicate20);
      Predicate.isEqual((Object) predicate3);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      predicate1.test((Object) null);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate2.or(predicate7);
      Predicate<Object> predicate9 = predicate6.and(predicate2);
      predicate2.negate();
      Predicate<Object> predicate10 = predicate6.and(predicate1);
      Predicate<Object> predicate11 = predicate2.and(predicate5);
      Predicate<Object> predicate12 = predicate2.or(predicate8);
      Predicate<Object> predicate13 = predicate9.negate();
      linkedList0.removeIf(predicate13);
      Predicate<Object> predicate14 = predicate11.negate();
      Predicate<Object> predicate15 = Predicate.isEqual((Object) predicate10);
      predicate13.or(predicate15);
      predicate3.and(predicate13);
      predicate4.or(predicate14);
      byte[][] byteArray0 = new byte[6][1];
      predicate7.negate();
      Predicate<Object> predicate16 = predicate12.negate();
      predicate8.test(predicate7);
      predicate9.negate();
      predicate16.and(predicate8);
      predicate16.negate();
      linkedList0.add(byteArray0);
      linkedList0.stream();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate0);
      Predicate<Object> predicate8 = predicate4.negate();
      Predicate<Object> predicate9 = predicate1.or(predicate7);
      Predicate<Object> predicate10 = predicate4.negate();
      Predicate<Object> predicate11 = predicate8.or(predicate1);
      Predicate<Object> predicate12 = predicate7.and(predicate1);
      Predicate<Object> predicate13 = predicate2.and(predicate5);
      Predicate<Object> predicate14 = predicate2.or(predicate9);
      Predicate<Object> predicate15 = predicate10.negate();
      Predicate<Object> predicate16 = predicate0.and(predicate0);
      predicate15.and(predicate16);
      Predicate.isEqual((Object) predicate11);
      Predicate<Object> predicate17 = predicate3.and(predicate15);
      predicate12.and(predicate15);
      Predicate<Object> predicate18 = predicate3.and(predicate4);
      predicate7.or(predicate18);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate19 = predicate5.or(predicate7);
      Predicate<Object> predicate20 = predicate14.negate();
      predicate20.and(predicate17);
      predicate9.test(predicate13);
      predicate20.negate();
      Predicate<Object> predicate21 = predicate6.negate();
      predicate21.negate();
      predicate19.negate();
      predicate15.test(predicate21);
      Predicate.isEqual((Object) predicate3);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      predicate0.test(predicate0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate1.and(predicate0);
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate4.and(predicate0);
      Predicate<Object> predicate7 = predicate3.negate();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      predicate5.test(pipedInputStream0);
      Predicate<Object> predicate8 = predicate0.or(predicate6);
      Predicate<Object> predicate9 = predicate3.negate();
      Predicate<Object> predicate10 = predicate7.negate();
      Predicate<Object> predicate11 = predicate6.and(predicate0);
      Predicate<Object> predicate12 = predicate1.and(predicate4);
      Predicate<Object> predicate13 = predicate1.or(predicate8);
      Predicate<Object> predicate14 = predicate9.negate();
      Predicate<Object> predicate15 = predicate0.and(predicate0);
      Predicate<Object> predicate16 = predicate14.and(predicate15);
      Predicate.isEqual((Object) predicate10);
      Predicate<Object> predicate17 = predicate16.negate();
      predicate11.and(predicate14);
      Predicate<Object> predicate18 = predicate2.and(predicate3);
      predicate6.or(predicate18);
      byte[][] byteArray0 = new byte[1][6];
      Predicate<Object> predicate19 = predicate4.or(predicate6);
      Predicate<Object> predicate20 = predicate13.negate();
      predicate20.and(predicate17);
      predicate8.test(predicate12);
      Predicate<Object> predicate21 = predicate5.negate();
      Predicate<Object> predicate22 = predicate5.negate();
      predicate21.negate();
      predicate19.negate();
      predicate14.test(predicate22);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.9469989525125873
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte)82;
      byteArray0[14] = (byte)82;
      byteArray0[3] = (byte)82;
      byteArray0[5] = (byte) (-95);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)75;
      byteArray1[1] = (byte) (-118);
      byteArray1[2] = (byte)82;
      byteArray1[3] = (byte) (-118);
      byteArray1[4] = (byte)82;
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5555666420118905
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp9.addArgument(1899, byteArray0);
      databaseParameterBufferImp7.addArgument((-4462));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative(0);
      boolean boolean0 = fBCachedFetcher0.relative(899);
      assertTrue(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[][] byteArray0 = new byte[7][3];
      Integer integer0 = new Integer(100);
      Object object0 = new Object();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      Object object1 = new Object();
      Object object2 = new Object();
      DelayQueue<Delayed> delayQueue1 = new DelayQueue<Delayed>();
      Object object3 = new Object();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.544323329473281
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "M`L");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+Kp-]+/]O0m/<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IOException in receiveResponse");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      byte[][] byteArray0 = new byte[0][5];
      linkedList0.add(byteArray0);
      linkedList0.add(byteArray0);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.last();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.isAfterLast();
      byte[][] byteArray1 = linkedList0.pollFirst();
      linkedList0.add(byteArray1);
      try { 
        fBResultSet0.getSQLXML("e");
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.FBResultSet", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[9];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      byte[] byteArray1 = new byte[9];
      byteArray1[1] = (byte) (-63);
      byteArray1[2] = (byte) (-44);
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte) (-44);
      byteArray1[5] = (byte)118;
      byteArray1[6] = (byte)108;
      jMXPrincipalArray0[0] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("qd");
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipalArray0[3] = jMXPrincipal3;
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipalArray0[4] = jMXPrincipal4;
      jMXPrincipal2.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipalArray0[6] = jMXPrincipal5;
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("bR_3  (*?\"3b8yTl");
      jMXPrincipalArray0[7] = jMXPrincipal1;
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipal7.toString();
      jMXPrincipal7.getName();
      jMXPrincipalArray0[8] = jMXPrincipal7;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[3][9];
      byte[] byteArray1 = new byte[0];
      byteArray0[0] = byteArray1;
      byte byte0 = (byte)88;
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>(linkedList0);
      linkedList1.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2871), byteArray0);
      databaseParameterBufferImp2.addArgument((-2871));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-2871), ";:(");
      databaseParameterBufferImp2.addArgument((-2871), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2871));
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getArgumentAsString((-2871));
      databaseParameterBufferImp0.addArgument(2005, byteArray0);
      databaseParameterBufferImp9.addArgument(1899, byteArray0);
      byte[][] byteArray1 = new byte[4][9];
      byteArray1[0] = byteArray0;
      byteArray1[1] = byteArray0;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)73;
      byteArray2[1] = (byte)1;
      byteArray2[2] = (byte) (-52);
      byteArray2[3] = (byte)42;
      byteArray2[4] = (byte)33;
      byteArray2[5] = (byte)32;
      byteArray1[2] = byteArray2;
      byteArray1[3] = byteArray0;
      linkedList0.addFirst(byteArray1);
      databaseParameterBufferImp10.addArgument(2005, byteArray0);
      databaseParameterBufferImp6.addArgument((-4462));
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.602113009000308
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)75;
      byteArray0[1] = (byte) (-118);
      fBCachedFetcher0.setFetchSize((byte)75);
      byteArray0[3] = (byte) (-118);
      byteArray0[4] = (byte)82;
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(fBCachedFetcher0.isEmpty());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      databaseParameterBufferImp2.addArgument((-2892));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2892));
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getArgumentAsString((-2892));
      databaseParameterBufferImp12.getArgumentAsString((-2892));
      databaseParameterBufferImp0.addArgument(2004, byteArray0);
      databaseParameterBufferImp9.addArgument(1899, byteArray0);
      databaseParameterBufferImp12.addArgument((-4462));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      databaseParameterBufferImp2.addArgument((-2892));
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-2892), "YiJ\"");
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2892));
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp9.write((XdrOutputStream) null);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getArgumentAsString((-2892));
      databaseParameterBufferImp12.getArgumentAsString((-2892));
      databaseParameterBufferImp0.addArgument(2004, byteArray0);
      databaseParameterBufferImp9.addArgument((-1430), byteArray0);
      databaseParameterBufferImp12.addArgument((-4462));
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.6036051515160747
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(2498);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, (Runnable) null);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      ScheduledFuture<?> scheduledFuture0 = scheduledThreadPoolExecutor0.scheduleAtFixedRate(mockThread0, 2498, 2498, timeUnit0);
      delayQueue0.add((Delayed) scheduledFuture0);
      delayQueue0.poll();
      linkedList0.removeLastOccurrence((Object) null);
      byte[][] byteArray0 = new byte[3][8];
      byte[] byteArray1 = new byte[10];
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte)11;
      byteArray2[1] = (byte) (-78);
      byteArray2[2] = (byte)0;
      byteArray2[3] = (byte)1;
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte)1;
      byteArray2[6] = (byte)1;
      byteArray2[7] = (byte)11;
      byteArray2[8] = (byte)1;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte) (-78);
      byteArray3[1] = (byte)11;
      byteArray3[2] = (byte)11;
      byteArray3[3] = (byte)1;
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte)0;
      byteArray3[5] = (byte)11;
      byteArray3[7] = (byte)11;
      byteArray0[2] = byteArray2;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher1.last();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher1.getRowNum());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2871), byteArray0);
      DatabaseParameterBuffer databaseParameterBuffer0 = databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.getLength();
      databaseParameterBuffer0.addArgument((-2871));
      databaseParameterBufferImp1.addArgument((-3876));
      databaseParameterBufferImp5.hasArgument((-3876));
      databaseParameterBufferImp7.deepCopy();
      databaseParameterBufferImp5.getArgumentAsString(1385);
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp10.addArgument(0);
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[1][7];
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[9];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-49);
      byteArray1[1] = (byte) (-44);
      byteArray1[2] = (byte) (-44);
      byteArray1[3] = (byte) (-49);
      byteArray1[4] = (byte)84;
      byteArray1[5] = (byte)6;
      byteArray1[6] = (byte)108;
      jMXPrincipalArray0[1] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("qd");
      jMXPrincipalArray0[2] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipalArray0[3] = jMXPrincipal3;
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipalArray0[4] = jMXPrincipal4;
      jMXPrincipal2.toString();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipalArray0[6] = jMXPrincipal5;
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("bR_3  (*?\"3b8yTl");
      jMXPrincipalArray0[7] = jMXPrincipal6;
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
      jMXPrincipal7.toString();
      jMXPrincipal7.getName();
      jMXPrincipalArray0[8] = jMXPrincipal2;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9253539308675658
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate2.or(predicate1);
      Predicate<Object> predicate5 = predicate2.and(predicate0);
      predicate4.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate1.or(predicate6);
      Predicate<Object> predicate9 = predicate4.negate();
      Predicate<Object> predicate10 = predicate7.or(predicate1);
      Predicate<Object> predicate11 = predicate6.and(predicate1);
      Predicate<Object> predicate12 = predicate2.and(predicate5);
      Predicate<Object> predicate13 = predicate2.or(predicate8);
      Predicate<Object> predicate14 = predicate9.negate();
      predicate0.and(predicate0);
      Predicate<Object> predicate15 = predicate9.negate();
      Predicate.isEqual((Object) predicate10);
      Predicate<Object> predicate16 = predicate3.and(predicate14);
      predicate11.and(predicate14);
      Predicate<Object> predicate17 = predicate15.negate();
      predicate6.or(predicate17);
      byte[][] byteArray0 = new byte[0][6];
      Predicate<Object> predicate18 = predicate5.or(predicate6);
      Predicate<Object> predicate19 = predicate13.negate();
      predicate19.and(predicate16);
      predicate8.test(predicate12);
      predicate19.negate();
      Predicate<Object> predicate20 = predicate2.negate();
      predicate20.negate();
      predicate18.negate();
      predicate14.test(predicate20);
      Predicate.isEqual((Object) predicate3);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      databaseParameterBufferImp2.addArgument((-2892));
      databaseParameterBufferImp2.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.addArgument((-2892), "pBmw8A{PaKN~D+bQPT");
      databaseParameterBufferImp2.addArgument((-2892), byteArray0);
      DatabaseParameterBufferImp databaseParameterBufferImp5 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp6 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp7 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp8 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp3.getLength();
      databaseParameterBufferImp6.addArgument(2004);
      DatabaseParameterBufferImp databaseParameterBufferImp9 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp10 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp11 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp12 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp13 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp12.getArgumentAsString(2004);
      databaseParameterBufferImp5.getArgumentAsString((-2892));
      databaseParameterBufferImp9.addArgument((-2892), byteArray0);
      databaseParameterBufferImp11.addArgument(1899, byteArray0);
      databaseParameterBufferImp10.addArgument((-93));
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseParameterBufferImp databaseParameterBufferImp14 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp15 = new DatabaseParameterBufferImp();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Integer integer0 = new Integer((byte)101);
      Integer.valueOf((int) (byte)101);
      Object object0 = new Object();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[8];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[0] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[1] = jMXPrincipal0;
      jMXPrincipalArray0[2] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[3] = jMXPrincipal2;
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[4] = jMXPrincipal3;
      jMXPrincipal1.getName();
      jMXPrincipal0.toString();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[6] = jMXPrincipal4;
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("bR_3  (*?\"3b8yTl");
      jMXPrincipal5.getName();
      jMXPrincipal5.getName();
      jMXPrincipal5.toString();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(":4caGlZR)2 -");
      jMXPrincipal2.equals(jMXPrincipal6);
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      JMXPrincipal jMXPrincipal8 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipal8.toString();
      jMXPrincipal0.getName();
      linkedList0.toArray(jMXPrincipalArray0);
      boolean boolean0 = fBCachedFetcher0.first();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[0] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[1] = jMXPrincipal0;
      jMXPrincipalArray0[2] = jMXPrincipal0;
      Subject subject0 = new Subject();
      jMXPrincipal0.implies(subject0);
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[3] = jMXPrincipal2;
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipal1.equals("");
      jMXPrincipalArray0[4] = jMXPrincipal0;
      jMXPrincipal1.getName();
      jMXPrincipal0.toString();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[6] = jMXPrincipal4;
      jMXPrincipal4.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("bR_3  ()?\"-b8yl");
      jMXPrincipal4.equals(jMXPrincipal0);
      jMXPrincipal5.equals(jMXPrincipal0);
      jMXPrincipal5.getName();
      jMXPrincipal4.getName();
      jMXPrincipal5.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal("<!fohVN^EY-u9bQ|NWJ");
      jMXPrincipal0.toString();
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipal1.toString();
      jMXPrincipal4.getName();
      boolean boolean0 = fBCachedFetcher0.absolute((-27));
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0069724918931833
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
          DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
          databaseParameterBufferImp0.deepCopy();
          Integer integer0 = new Integer((byte)81);
          Integer integer1 = new Integer((-2882));
          Object object0 = new Object();
          FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
          fBCachedFetcher0.afterLast();
          byte[][] byteArray0 = new byte[1][7];
          JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[9];
          JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
          jMXPrincipalArray0[0] = jMXPrincipal0;
          JMXPrincipal jMXPrincipal1 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
          jMXPrincipalArray0[1] = jMXPrincipal0;
          JMXPrincipal jMXPrincipal2 = new JMXPrincipal("qd");
          jMXPrincipalArray0[2] = jMXPrincipal2;
          JMXPrincipal jMXPrincipal3 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
          jMXPrincipalArray0[3] = jMXPrincipal3;
          JMXPrincipal jMXPrincipal4 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
          jMXPrincipalArray0[4] = jMXPrincipal4;
          jMXPrincipal2.toString();
          JMXPrincipal jMXPrincipal5 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
          jMXPrincipalArray0[6] = jMXPrincipal5;
          JMXPrincipal jMXPrincipal6 = new JMXPrincipal("bR_3  (*?\"3b8yTl");
          jMXPrincipalArray0[7] = jMXPrincipal6;
          jMXPrincipal3.getName();
          JMXPrincipal jMXPrincipal7 = new JMXPrincipal("~lK#deLL=~DRhK6R1J");
          ProtectionDomain[] protectionDomainArray0 = new ProtectionDomain[6];
          URL uRL0 = MockURL.getFtpExample();
          CodeSource codeSource0 = new CodeSource(uRL0, (Certificate[]) null);
          ProtectionDomain protectionDomain0 = new ProtectionDomain(codeSource0, (PermissionCollection) null, (ClassLoader) null, jMXPrincipalArray0);
          protectionDomainArray0[0] = protectionDomain0;
          CodeSource codeSource1 = new CodeSource(uRL0, (CodeSigner[]) null);
          ProtectionDomain protectionDomain1 = new ProtectionDomain(codeSource1, (PermissionCollection) null);
          protectionDomainArray0[1] = protectionDomain1;
          ProtectionDomain protectionDomain2 = new ProtectionDomain(codeSource0, (PermissionCollection) null, (ClassLoader) null, jMXPrincipalArray0);
          protectionDomainArray0[2] = protectionDomain2;
          ProtectionDomain protectionDomain3 = new ProtectionDomain(codeSource0, (PermissionCollection) null);
          protectionDomainArray0[3] = protectionDomain3;
          CodeSource codeSource2 = new CodeSource(uRL0, (CodeSigner[]) null);
          ProtectionDomain protectionDomain4 = new ProtectionDomain(codeSource2, (PermissionCollection) null, (ClassLoader) null, jMXPrincipalArray0);
          protectionDomainArray0[4] = protectionDomain3;
          ProtectionDomain protectionDomain5 = new ProtectionDomain(codeSource1, (PermissionCollection) null);
          protectionDomainArray0[3] = protectionDomain5;
          AccessControlContext accessControlContext0 = new AccessControlContext(protectionDomainArray0);
          // Undeclared exception!
          try { 
            Subject.getSubject(accessControlContext0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"javax.security.auth.AuthPermission\" \"getSubject\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // javax.security.auth.Subject.getSubject(Subject.java:287)
             // sun.reflect.GeneratedMethodAccessor168.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      JMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[0] = jMXPrincipal0;
      JMXPrincipal jMXPrincipal1 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[1] = jMXPrincipal0;
      jMXPrincipalArray0[2] = jMXPrincipal0;
      Subject subject0 = new Subject();
      jMXPrincipal0.implies(subject0);
      JMXPrincipal jMXPrincipal2 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[3] = jMXPrincipal2;
      JMXPrincipal jMXPrincipal3 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipal1.equals("");
      jMXPrincipalArray0[4] = jMXPrincipal0;
      jMXPrincipal1.getName();
      jMXPrincipal0.toString();
      JMXPrincipal jMXPrincipal4 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipalArray0[6] = jMXPrincipal4;
      jMXPrincipal4.getName();
      JMXPrincipal jMXPrincipal5 = new JMXPrincipal("bR_3  ()?\"-b8yl");
      jMXPrincipal4.equals(jMXPrincipal0);
      jMXPrincipal5.equals(jMXPrincipal0);
      jMXPrincipal5.getName();
      jMXPrincipal4.getName();
      jMXPrincipal5.getName();
      JMXPrincipal jMXPrincipal6 = new JMXPrincipal(":4caGlZR)2 -");
      jMXPrincipal6.implies(subject0);
      jMXPrincipal6.implies(subject0);
      jMXPrincipal2.equals(jMXPrincipal6);
      JMXPrincipal jMXPrincipal7 = new JMXPrincipal("~HlK#deLL=~DRK6R1J");
      jMXPrincipal0.toString();
      jMXPrincipal4.getName();
      linkedList0.toArray(jMXPrincipalArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
