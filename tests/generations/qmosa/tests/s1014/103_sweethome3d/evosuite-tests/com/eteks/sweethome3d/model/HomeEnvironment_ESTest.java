/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:40:55 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setCeillingLightColor((-1));
      homeEnvironment0.setLightColor(1073741824);
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getLightColor();
      HomeEnvironment.DrawingMode.values();
      Random.setNextRandom(3081);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertEquals(1073741824, homeEnvironment0.getLightColor());
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.19953461806653
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)74;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, (HomeTexture) null, 13427964, (HomeTexture) null, 13427964, (byte)74);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.isObserverCameraElevationAdjusted();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("'g_Mq@$+{W-;4BEQ9Jq");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.'g_Mq@$+{W-;4BEQ9Jq
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", content0, 0, 368.7799F, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture2, (-2449), 0, 3124.7017F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      
      homeEnvironment0.setVideoWidth(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("}veEB3]V1xm", ";", resourceURLContent0, 0.0F, 0.0F, ";");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(18, homeTexture0, 25, homeTexture0, 2142114938, 1938.42F);
      homeEnvironment0.setVideoQuality(1);
      System.setCurrentTimeMillis(2142114938);
      homeEnvironment0.clone();
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment1.getGroundTexture();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("No", resourceURLContent0, 0, 1.5F, true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 12, homeTexture0, 0, 1.5F);
      homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(12, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1.5F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("K+s~", temporaryURLContent0, 0.0F, (-2845), true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2845), homeTexture0, (-2845), 2116, (-2845));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.getCeillingLightColor();
      // Undeclared exception!
      try { 
        temporaryURLContent0.getJAREntryName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      TexturesCategory texturesCategory0 = new TexturesCategory("QrQ");
      CatalogTexture catalogTexture0 = new CatalogTexture("(:~358", resourceURLContent0, 313.3986F, 3387.0F, true);
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      catalogTexture0.setCategory(texturesCategory1);
      URLContent uRLContent0 = new URLContent(uRL0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1019, homeTexture0, 1019, 1019, 1299.031F);
      homeEnvironment0.setVideoWidth((-1967));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality(2616);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1967), homeEnvironment0.getVideoWidth());
      assertEquals((-1475), int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.446F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.446F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture1);
      catalogTexture1.setCategory(texturesCategory0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, homeTexture0, 0, 1505.5F);
      homeEnvironment0.setVideoQuality(1);
      System.setCurrentTimeMillis(0);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment1.getSkyColor();
      homeEnvironment1.getSkyTexture();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      assertEquals(320, homeEnvironment1.getVideoWidth());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2449), 0, 3124.7017F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(0, int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2449), homeEnvironment0.getSkyColor());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(3124.7017F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      URL uRL0 = MockURL.getHttpExample();
      URL uRL1 = MockURL.URL(uRL0, "java.version");
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL1, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_HEIGHT", resourceURLContent0, (-2429.3057F), (-2429.3057F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3183), homeTexture0, (-52), homeTexture0, (-52), 1846.9409F);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-52), homeTexture1, 306, 306, (-1729.0F));
      homeEnvironment1.setVideoQuality((-3183));
      System.setCurrentTimeMillis((-585L));
      catalogTexture0.getCategory();
      catalogTexture0.setCategory(texturesCategory0);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoQuality();
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment2.getVideoQuality();
      assertEquals((-3183), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-2712));
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-2712), int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-2587.5F), (-816L), 0.0F, 0, (-205.741F), (-205.741F), (-816L), camera_Lens0);
      camera0.clone();
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Random.setNextRandom(0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)127;
      byteArray1[1] = (byte)56;
      byteArray1[2] = (byte)4;
      byteArray1[4] = (byte)3;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)100;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "work");
      byteArray1[7] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight((-272));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth((-896));
      Random.setNextRandom((byte)127);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-122), homeTexture0, 11, 0, 2059.2979F);
      homeEnvironment0.setVideoWidth(11);
      homeEnvironment0.setPhotoHeight((-122));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(11053224);
      int int0 = homeEnvironment1.getPhotoHeight();
      assertEquals((-122), int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.446F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.446F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture1);
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      texturesCategory1.add(catalogTexture1);
      catalogTexture0.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture((String) null, "could not load ", uRLContent0, (-2465.3862F), (-1922.446F), ".SC3xb}+");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1788), homeTexture1, 0, (-1782), 0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals((-1782), homeEnvironment0.getLightColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-1788), int0);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(0, homeEnvironment0.getSkyColor());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      TexturesCategory texturesCategory0 = new TexturesCategory("could not load ");
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      texturesCategory1.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory1);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2449), 0, 3124.7017F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment0.getLightColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-2449), homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(3124.7017F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Random.setNextRandom(302);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(302);
      homeEnvironment0.getPhotoQuality();
      List<Camera> list0 = new LinkedList<Camera>();
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 2863;
      homeEnvironment0.setWallsAlpha(2863);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoQuality(2660);
      homeEnvironment1.setWallsAlpha((-926.638F));
      int int1 = 306;
      homeEnvironment0.setVideoFrameRate(306);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      String string0 = "Linux";
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      // Undeclared exception!
      try { 
        homeEnvironment0.removePropertyChangeListener((HomeEnvironment.Property) null, (PropertyChangeListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.446F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.446F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture1);
      catalogTexture1.setCategory(texturesCategory0);
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture1, 0, homeTexture2, 0, 1.0F);
      homeEnvironment0.setVideoQuality(1);
      System.setCurrentTimeMillis(1);
      catalogTexture1.getCategory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.setPhotoHeight((-482));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality((-229));
      assertEquals((-229), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1945366875886965
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture(";", ";", resourceURLContent0, (-682.159F), (-682.159F), "}veE3]V1xm");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setCeillingLightColor((-4001));
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getDrawingMode();
      homeEnvironment1.setLightColor(3090);
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.setVideoQuality((-4001));
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode1 = HomeEnvironment.DrawingMode.OUTLINE;
      assertFalse(homeEnvironment_DrawingMode1.equals((Object)homeEnvironment_DrawingMode0));
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Random.setNextRandom(18);
      CatalogTexture catalogTexture0 = new CatalogTexture("Hq3XN7|6lv=h`RVkT", (Content) null, 1620.13F, (-2216.4712F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(18, homeTexture0, 18, homeTexture0, 18, 2712.7F);
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(18, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(18, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(18, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2712.7F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 3, 1162.0F);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3, homeTexture0, (-2662), homeTexture0, (-916), 1162.0F);
      homeEnvironment0.getSkyTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(3, homeEnvironment0.getGroundColor());
      assertEquals((-2662), homeEnvironment0.getSkyColor());
      assertEquals((-916), homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1162.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, "");
      HomeTexture homeTexture2 = new HomeTexture(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2882), homeTexture2, (-2449), 0, (-2882));
      homeEnvironment0.setVideoWidth((-2882));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      assertEquals((-2882), homeEnvironment0.getVideoWidth());
      
      HomeEnvironment homeEnvironment1 = new HomeEnvironment((-2882), (HomeTexture) null, (-1569), homeTexture1, 2276, 2.14673382E9F);
      homeEnvironment1.setVideoQuality(0);
      int int0 = homeEnvironment1.getVideoHeight();
      assertEquals(240, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-2146917123));
      homeEnvironment0.setVideoQuality((-2146917123));
      homeEnvironment0.clone();
      assertEquals((-1610187776), homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Camera> predicate0 = Predicate.isEqual(object1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2304));
      homeEnvironment0.clone();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Object object2 = new Object();
      Predicate<Object> predicate4 = Predicate.isEqual(object2);
      predicate1.and(predicate3);
      Predicate<Object> predicate5 = predicate2.or(predicate3);
      Object object3 = new Object();
      Predicate<Camera> predicate6 = Predicate.isEqual((Object) predicate3);
      Predicate<Camera> predicate7 = predicate6.and(predicate2);
      Predicate<Camera> predicate8 = predicate0.and(predicate7);
      Predicate<Camera> predicate9 = predicate7.negate();
      Predicate<Camera> predicate10 = predicate6.and(predicate0);
      Predicate<Camera> predicate11 = predicate10.negate();
      predicate11.and(predicate10);
      Predicate.isEqual((Object) predicate1);
      Predicate<Camera> predicate12 = predicate10.or(predicate9);
      Predicate<Camera> predicate13 = predicate10.negate();
      predicate10.and(predicate5);
      Predicate<Camera> predicate14 = Predicate.isEqual((Object) predicate8);
      Predicate<Camera> predicate15 = predicate12.and(predicate4);
      predicate15.or(predicate14);
      Predicate<Camera> predicate16 = predicate15.or(predicate6);
      predicate16.or(predicate13);
      Predicate<Camera> predicate17 = predicate12.and(predicate1);
      Predicate<Camera> predicate18 = predicate17.negate();
      Predicate<Object> predicate19 = predicate1.and(predicate4);
      predicate18.or(predicate19);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      Predicate<Camera> predicate20 = predicate8.or(predicate7);
      linkedList0.removeIf(predicate20);
      HomeEnvironment.DrawingMode.values();
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      predicate3.and(predicate2);
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(2863.0F, 459, 2863.0F, (-926.638F), 2863.0F, (-2889.0F), 459, camera_Lens0);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) camera0);
      predicate4.or(predicate5);
      Predicate<Camera> predicate6 = predicate4.negate();
      predicate4.or(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setLightColor((-1729));
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "1*k>EM!f!ei;'5", temporaryURLContent0, 1.0F, 1.0F, "1*k>EM!f!ei;'5");
      CatalogTexture catalogTexture1 = new CatalogTexture("1*k>EM!f!ei;'5", temporaryURLContent0, 2500.1787F, 1.0F, false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getSkyColor();
      boolean boolean0 = homeEnvironment0.isAllLevelsVisible();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.171659610384074
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(2863);
      homeEnvironment0.setWallsAlpha(2863);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoQuality(2660);
      homeEnvironment1.setWallsAlpha((-926.638F));
      homeEnvironment0.setVideoFrameRate(306);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListener1);
      homeEnvironment1.setPhotoHeight(2863);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Linux", "", homeEnvironment1, "Linux");
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Linux", object0, homeEnvironment1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      homeEnvironment1.setVideoWidth(306);
      homeEnvironment1.setPhotoHeight(2863);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment1.setVideoQuality(3);
      assertEquals(2863.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate<Camera> predicate0 = Predicate.isEqual(object1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      Predicate<Object> predicate1 = Predicate.isEqual(object0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Object object2 = new Object();
      Predicate<Object> predicate4 = Predicate.isEqual(object2);
      Predicate<Object> predicate5 = predicate1.and(predicate3);
      predicate2.or(predicate3);
      Object object3 = new Object();
      Predicate<Camera> predicate6 = Predicate.isEqual((Object) predicate1);
      Predicate<Camera> predicate7 = predicate6.and(predicate1);
      Predicate<Camera> predicate8 = predicate7.and(predicate3);
      Predicate<Camera> predicate9 = predicate7.negate();
      Predicate<Camera> predicate10 = predicate7.and(predicate5);
      Predicate<Camera> predicate11 = predicate6.negate();
      Predicate<Camera> predicate12 = predicate11.and(predicate1);
      Predicate<Camera> predicate13 = predicate9.or(predicate0);
      predicate8.negate();
      Predicate<Camera> predicate14 = predicate13.and(predicate5);
      Predicate<Camera> predicate15 = Predicate.isEqual((Object) predicate10);
      Predicate<Camera> predicate16 = predicate14.and(predicate12);
      Predicate<Camera> predicate17 = predicate8.or(predicate15);
      predicate9.or(predicate14);
      predicate14.or(predicate17);
      predicate9.and(predicate10);
      Predicate<Camera> predicate18 = predicate13.negate();
      predicate1.and(predicate2);
      predicate18.or(predicate7);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      predicate16.or(predicate4);
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      boolean boolean0 = linkedList2.removeIf(predicate14);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(2671.5117F);
      homeEnvironment0.clone();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(2671.5117F, float0, 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = Predicate.isEqual((Object) predicate0);
      predicate0.or(predicate2);
      Predicate<Camera> predicate3 = predicate0.and(predicate1);
      Predicate<Camera> predicate4 = predicate3.negate();
      Predicate<Camera> predicate5 = predicate4.negate();
      Predicate<Camera> predicate6 = predicate5.negate();
      predicate5.or(predicate6);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate6);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(19, (HomeTexture) null, (-1700), (HomeTexture) null, 459, 0.0F);
      homeEnvironment0.setLightColor((-1729));
      homeEnvironment0.setVideoCameraPath(linkedList0);
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", "1*k>EM!f!ei;'5", temporaryURLContent0, 1.0F, 1.0F, "1*k>EM!f!ei;'5");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setCeillingLightColor(459);
      homeEnvironment0.setLightColor((-1729));
      List<Camera> list0 = homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setVideoCameraPath(list0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoWidth();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals((-1729), homeEnvironment0.getLightColor());
      assertEquals((-1700), int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9649066497880012
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "m?");
      homeEnvironment0.setGroundColor(2863);
      homeEnvironment0.setWallsAlpha(2863);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoFrameRate(25);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListener1);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Linux", object0, homeEnvironment1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]tw~?13YCf");
      homeEnvironment1.setVideoWidth(25);
      homeEnvironment1.setPhotoHeight(2863);
      int int0 = homeEnvironment0.getVideoWidth();
      assertEquals(2863.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(320, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("T");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-2575));
      homeEnvironment0.clone();
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoFrameRate();
      System.setCurrentTimeMillis((-2575));
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AspectRatio aspectRatio0 = AspectRatio.VIEW_3D_RATIO;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1844975063306
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Predicate<Camera> predicate4 = predicate3.or(predicate0);
      Predicate<Camera> predicate5 = predicate4.negate();
      predicate3.negate();
      predicate4.and(predicate5);
      Predicate<Object> predicate6 = Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate7 = predicate6.or(predicate6);
      Predicate<Object> predicate8 = predicate7.and(predicate7);
      Predicate.isEqual((Object) null);
      predicate0.and(predicate8);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Predicate<Camera> predicate9 = predicate0.or(predicate3);
      linkedList0.removeIf(predicate9);
      linkedList0.removeIf(predicate5);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(459);
      homeEnvironment0.setSkyColor((-983));
      homeEnvironment0.setGroundColor((-983));
      homeEnvironment0.setPhotoWidth(459);
      homeEnvironment0.setVideoFrameRate(18);
      homeEnvironment0.getVideoHeight();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setCeillingLightColor((-3150));
      homeEnvironment0.setLightColor(18);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.setAllLevelsVisible(true);
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(18, homeEnvironment0.getVideoFrameRate());
      assertEquals(18, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.377551245075652
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2863);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setPhotoQuality(2660);
      homeEnvironment1.setWallsAlpha((-926.638F));
      homeEnvironment0.setVideoWidth(471);
      homeEnvironment0.setVideoFrameRate(2863);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment_Property0, "Linux", object0, object0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListener1);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Linux", object1, homeEnvironment1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.isAllLevelsVisible();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      homeEnvironment1.setPhotoHeight(2863);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(353, homeEnvironment0.getVideoHeight());
      assertEquals(25, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      TexturesCategory texturesCategory3 = new TexturesCategory("n");
      TexturesCategory texturesCategory4 = new TexturesCategory("n");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(323);
      homeEnvironment0.setCeillingLightColor((-1774));
      homeEnvironment0.clone();
      assertEquals((-1774), homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.446F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      ResourceURLContent resourceURLContent1 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", resourceURLContent1, 1.7777778F, (-1782.9988F));
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", resourceURLContent0, 1566.0F, 0.0F, false);
      catalogTexture2.compareTo(catalogTexture1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(959, homeTexture0, (-257), 13427945, 8192);
      homeEnvironment0.setAllLevelsVisible(true);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
      
      HomeEnvironment.Property.values();
      homeEnvironment0.setAllLevelsVisible(false);
      assertEquals(959, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("", temporaryURLContent0, 173.0F, (-2488.3782F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment1.setGroundTexture(homeTexture0);
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Predicate.isEqual(object1);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundTexture((HomeTexture) null);
      System.setCurrentTimeMillis(1339L);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("com.eteks.sweethome3d.tools.OperatingSystem$2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.com.eteks.sweethome3d.tools.OperatingSystem$2
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2437), homeTexture0, (-2437), 930, 0);
      homeEnvironment0.setVideoQuality((-1175));
      assertEquals((-1175), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment.DrawingMode.values();
      CatalogTexture catalogTexture0 = new CatalogTexture("}veEB3]V1xm", "}veEB3]V1xm", (Content) null, (-2367.76F), (-595.75F), "}veEB3]V1xm");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-3183), homeTexture0, (-3183), homeTexture0, (-2935), (-1303.74F));
      homeEnvironment0.setGroundColor((-3183));
      homeEnvironment0.getSkyTexture();
      System.setCurrentTimeMillis((-3183));
      HomeEnvironment.Property.values();
      int int0 = homeEnvironment0.getCeillingLightColor();
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-3183), homeEnvironment0.getSkyColor());
      assertEquals((-2935), homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, int0);
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-1303.74F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-3183), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.675485446901437
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setGroundColor((-1290));
      homeEnvironment0.setGroundColor((-1230));
      homeEnvironment0.getGroundTexture();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getLightColor();
      homeEnvironment0.getSkyColor();
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_4_3, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(4);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoQuality(0);
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Predicate.isEqual((Object) "h[bh9S9");
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList1.retainAll(linkedList2);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      assertTrue(linkedList3.equals((Object)linkedList1));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0426423449562177
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Camera.convertTimeToTimeZone((-1711L), "$V>>*G6*");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("A-'~/", propertyChangeListener0);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(0.0F, 0.0F, 0.0F, (-1050.1821F), (-1050.1821F), 1240.61F, (-1711L), camera_Lens0);
      linkedList0.parallelStream();
      homeEnvironment0.setVideoCameraPath(linkedList0);
      homeEnvironment0.setPhotoHeight((-1066));
      homeEnvironment0.isObserverCameraElevationAdjusted();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.setCeillingLightColor((-1066));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf("A-'~/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.A-'~/
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(1431655765);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = homeEnvironment1.getCeillingLightColor();
      assertEquals(1431655765, int0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2863);
      homeEnvironment0.setPhotoQuality(2660);
      homeEnvironment0.setWallsAlpha((-926.638F));
      homeEnvironment0.setVideoFrameRate(306);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LinEux", propertyChangeListener0);
      Object object0 = new Object();
      Object object1 = new Object();
      Integer integer0 = new Integer((-4023));
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object1, "LinEux", integer0, object2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera0 = new Camera(306, 459.0F, (-1253.9489F), (-3432.37F), 2660, 2660);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "LinEux", camera0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("LinEux", propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent("LinEux", "", homeEnvironment0, "LinEux");
      propertyChangeEvent2.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent2);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent2);
      Object object3 = new Object();
      PropertyChangeEvent propertyChangeEvent3 = new PropertyChangeEvent(propertyChangeListenerProxy1, "LinEux", object3, homeEnvironment0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent3);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoWidth(306);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality(3);
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-926.638F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-2587.5F), (-816L), 0.0F, 0, (-205.741F), (-205.741F), (-816L), camera_Lens0);
      Camera camera1 = new Camera(2.0F, (-205.741F), (-816L), (-2587.5F), (-574.7F), (-574.7F), (-816L), camera_Lens0);
      camera0.setCamera(camera1);
      camera0.clone();
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Predicate.isEqual((Object) "h[bh9S9");
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList1.retainAll(linkedList2);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      assertFalse(linkedList3.contains(camera0));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2863);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha((-926.638F));
      homeEnvironment0.setVideoFrameRate(306);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("Linux", "", homeEnvironment1, "Linux");
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Linux", object0, homeEnvironment1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.isAllLevelsVisible();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]tw~?13YCf");
      homeEnvironment1.setVideoWidth(306);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setAllLevelsVisible(true);
      assertEquals(2863.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Integer[] integerArray0 = new Integer[9];
      Integer integer0 = new Integer((-2342));
      integerArray0[0] = integer0;
      int int0 = (-122);
      Integer integer1 = new Integer((-122));
      integerArray0[0] = integer1;
      Integer integer2 = new Integer((-242));
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((-122));
      integerArray0[3] = integer3;
      Integer integer4 = new Integer(1339);
      integerArray0[4] = integer4;
      Integer integer5 = new Integer((-2342));
      integerArray0[5] = (Integer) int0;
      Integer integer6 = new Integer(4);
      integerArray0[6] = integer6;
      Integer integer7 = new Integer((int) integerArray0[4]);
      integerArray0[7] = integer7;
      Integer integer8 = new Integer((-3193));
      integerArray0[8] = integer8;
      linkedList0.toArray(integerArray0);
      homeEnvironment0.setSkyColor(2582);
      homeEnvironment0.setVideoFrameRate(320);
      homeEnvironment0.getSubpartSizeUnderLight();
      homeEnvironment0.setVideoQuality(320);
      homeEnvironment0.getVideoAspectRatio();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.setVideoWidth((-998));
      System.setCurrentTimeMillis((-207L));
      HomeEnvironment.Property.values();
      homeEnvironment0.setPhotoWidth((-998));
      homeEnvironment0.getVideoHeight();
      homeEnvironment0.getGroundTexture();
      System.setCurrentTimeMillis((-748));
      homeEnvironment0.clone();
      assertEquals((-998), homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(33);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoQuality(33);
      homeEnvironment1.setPhotoWidth(4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setCeillingLightColor((-2687));
      homeEnvironment1.setPhotoQuality((-2793));
      homeEnvironment1.setSkyColor(33);
      HomeEnvironment.Property.values();
      homeEnvironment0.setCeillingLightColor(4);
      homeEnvironment0.setLightColor((-2687));
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)107;
      byteArray0[5] = (byte) (-69);
      byteArray0[6] = (byte) (-128);
      byteArray0[7] = (byte)29;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      assertEquals(4, homeEnvironment1.getPhotoWidth());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera((-2587.5F), (-816L), 0.0F, 0, (-205.741F), (-205.741F), (-816L), camera_Lens0);
      camera0.clone();
      homeEnvironment0.setVideoFrameRate((-1751));
      Object object0 = new Object();
      Predicate<Camera> predicate0 = Predicate.isEqual(object0);
      predicate0.negate();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<String> linkedList2 = new LinkedList<String>();
      linkedList1.retainAll(linkedList2);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      int int0 = homeEnvironment1.getVideoFrameRate();
      assertEquals(25, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("ISH(1mKDA*q=", "", resourceURLContent0, (-1021.3853F), (-1021.3853F), (String) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2793), homeTexture0, (-2793), homeTexture0, (-2793), (-3249.0F));
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-2793), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2793), homeEnvironment0.getSkyColor());
      assertEquals((-2793), int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-3249.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Random.setNextRandom(44);
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("~", "GROUND_TEXTURE", uRLContent0, 5626, 5626, "GROUND_TEXTURE", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5626, homeTexture0, 88, homeTexture0, (-4575), 428.218F);
      homeEnvironment0.getGroundTexture();
      assertEquals(5626, homeEnvironment0.getGroundColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(428.218F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-4575), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(88, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("<*^rGSS9ZT~R1w7", "<*^rGSS9ZT~R1w7", (Content) null, (-959), (-959), "<*^rGSS9ZT~R1w7", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-959), homeTexture0, (-959), homeTexture0, (-1661), (-1661));
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1661.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-1661), homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-959), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-959), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(320, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.WALLS_ALPHA;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("PSG4-e;zBCH,`", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoQuality(1365);
      homeEnvironment0.setGroundColor(12);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.setSkyColor(1756);
      assertEquals(1365, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)102;
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)21;
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera((byte)21, (byte)60, (-261.81656F), (-261.81656F), 1.7777778F, (byte)21, (byte)4, camera_Lens0);
      camera0.clone();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) camera_Lens0);
      predicate0.and(predicate1);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      Predicate<Object> predicate3 = predicate1.or(predicate2);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate0.and(predicate2);
      Predicate<Object> predicate6 = predicate4.or(predicate3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2145711924, (HomeTexture) null, (byte)60, (HomeTexture) null, (byte)60, 893.1F);
      Predicate<Camera> predicate7 = Predicate.isEqual((Object) homeEnvironment0);
      Predicate<Camera> predicate8 = predicate7.or(predicate5);
      Predicate<Camera> predicate9 = predicate8.negate();
      Predicate<Camera> predicate10 = predicate9.and(predicate4);
      Predicate<Camera> predicate11 = predicate10.or(predicate9);
      Predicate<Object> predicate12 = predicate3.or(predicate2);
      Predicate<Object> predicate13 = predicate6.and(predicate12);
      predicate11.or(predicate13);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      LinkedList<Integer> linkedList2 = new LinkedList<Integer>();
      linkedList0.retainAll(linkedList2);
      LinkedList<Camera> linkedList3 = new LinkedList<Camera>();
      linkedList3.removeIf(predicate11);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(60, homeEnvironment1.getLightColor());
      assertEquals(60, homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(2145711924, homeEnvironment1.getGroundColor());
      assertEquals(893.1F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "No");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((-3957.2957F));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.SKY_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("8nE0a{>':VPS{=*SC", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.clone();
      assertEquals((-3957.2957F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("^6hk>|fhYG", resourceURLContent0, (-2182.2297F), (-925.49475F));
      Object object0 = new Object();
      CatalogTexture catalogTexture1 = new CatalogTexture("(:~358", resourceURLContent0, 313.3986F, 5268.0F, true);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.compareTo(catalogTexture1);
      TexturesCategory texturesCategory0 = new TexturesCategory("2");
      texturesCategory0.add(catalogTexture0);
      URLContent uRLContent0 = new URLContent(uRL0);
      catalogTexture0.setCategory(texturesCategory0);
      CatalogTexture catalogTexture2 = new CatalogTexture("2", "iHx_gKP5huRR}7-~", resourceURLContent0, (-1922.0F), (-1922.0F), "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(11053224, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("^6hk>|fhYG", resourceURLContent0, (-2195.1233F), (-925.49475F));
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture2 = new CatalogTexture("^p~2", content0, 1713.41F, (-2587.5F));
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture1);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture1);
      catalogTexture2.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      URL uRL1 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent1 = new ResourceURLContent(uRL1, false);
      CatalogTexture catalogTexture3 = new CatalogTexture((String) null, (String) null, resourceURLContent1, 1713.41F, (-1922.0F), (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1266, homeTexture0, 1, (-232), (-2039.31F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-232), homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals((-2039.31F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(1266, homeEnvironment1.getGroundColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(1, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("7dPz5.i&F0yVr20e/v", resourceURLContent0, (-1922.0F), 355.36365F);
      CatalogTexture catalogTexture1 = new CatalogTexture("7dPz5.i&F0yVr20e/v", resourceURLContent0, 313.3986F, (-1922.0F), false);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture1);
      TexturesCategory texturesCategory0 = new TexturesCategory("^#|");
      texturesCategory0.add(catalogTexture0);
      catalogTexture0.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      ResourceURLContent resourceURLContent1 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture2 = new CatalogTexture("", "", resourceURLContent1, 331.018F, 0.0F, "OBSERVER_CAMERA_ELEVATION_ADJUSTED");
      CatalogTexture catalogTexture3 = new CatalogTexture("$+}B_Np}E", uRLContent0, 355.36365F, (-2608.0F), true);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture3);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2449), homeTexture0, 0, (-3517), (-2608.0F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals((-2449), homeEnvironment1.getGroundColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals((-3517), homeEnvironment1.getLightColor());
      assertEquals((-2608.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)120;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)102;
      byteArray1[1] = (byte)56;
      byteArray1[2] = (byte)4;
      byteArray1[4] = (byte)3;
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte)100;
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      byteArray1[7] = (byte)17;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((byte)0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality((byte)3);
      Random.setNextRandom((byte)102);
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoWidth(0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment0.setPhotoQuality(8192);
      Object object0 = new Object();
      homeEnvironment1.setCeillingLightColor(0);
      Predicate<Camera> predicate0 = Predicate.isEqual(object0);
      Predicate<Camera> predicate1 = predicate0.negate();
      Camera camera0 = new Camera(0, 1.7777778F, 1.0F, 7242.9536F, 0, 0);
      predicate1.test(camera0);
      Camera camera1 = camera0.clone();
      linkedList0.add(camera1);
      linkedList0.stream();
      Predicate<Camera> predicate2 = predicate0.negate();
      linkedList0.removeIf(predicate2);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setCeillingLightColor(0);
      homeEnvironment2.setLightColor(722);
      homeEnvironment2.setVideoCameraPath(linkedList0);
      assertEquals(8192, homeEnvironment0.getPhotoQuality());
      assertEquals(240, homeEnvironment0.getVideoHeight());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7988457068767891
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      TexturesCategory texturesCategory3 = new TexturesCategory("n");
      TexturesCategory texturesCategory4 = new TexturesCategory("n");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.446F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("", resourceURLContent0, (-2587.5F), (-1922.446F));
      catalogTexture0.compareTo(catalogTexture1);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture0, 93, 320, 320);
      homeEnvironment0.setVideoWidth(2415);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("}veEB3]V1xm", ";", resourceURLContent0, (-682.159F), (-682.159F), ";");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("}veEB3]V1xm", ";", resourceURLContent0, (-682.159F), (-682.159F), ";");
      CatalogTexture catalogTexture2 = new CatalogTexture(";", resourceURLContent0, (-682.159F), (-682.159F), false);
      catalogTexture2.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture2);
      homeTexture1.getImage();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(9, homeTexture1, 9, 93, (-568.0F));
      homeEnvironment0.setVideoWidth(320);
      assertEquals(93, homeEnvironment0.getLightColor());
      assertEquals(9, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(9, homeEnvironment0.getGroundColor());
      assertEquals((-568.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Object object0 = new Object();
      Predicate<Camera> predicate0 = Predicate.isEqual(object0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Integer integer0 = new Integer((-4052));
      Predicate<Object> predicate1 = Predicate.isEqual((Object) integer0);
      Predicate<Camera> predicate2 = predicate0.and(predicate1);
      Predicate<Camera> predicate3 = predicate2.negate();
      Predicate<Camera> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Camera> predicate6 = predicate2.and(predicate5);
      Predicate<Camera> predicate7 = predicate0.or(predicate6);
      Predicate<Camera> predicate8 = predicate7.and(predicate4);
      Predicate<Camera> predicate9 = predicate0.negate();
      Predicate<Camera> predicate10 = predicate9.and(predicate6);
      Predicate<Camera> predicate11 = Predicate.isEqual((Object) predicate1);
      Predicate<Camera> predicate12 = predicate11.negate();
      Predicate<Camera> predicate13 = predicate12.or(predicate7);
      predicate12.negate();
      Predicate<Camera> predicate14 = predicate12.or(predicate1);
      Camera camera0 = new Camera((-1521.0809F), 0.66833526F, 0.66833526F, 1.0F, (-1521.0809F), (-1521.0809F));
      Predicate.isEqual((Object) camera0);
      predicate6.negate();
      predicate6.or(predicate9);
      predicate10.or(predicate2);
      predicate9.or(predicate14);
      predicate4.and(predicate12);
      predicate8.negate();
      predicate3.or(predicate13);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      predicate13.or(predicate2);
      HomeEnvironment.Property.values();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      Object object0 = new Object();
      Predicate<Camera> predicate0 = Predicate.isEqual(object0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      Predicate<Object> predicate1 = Predicate.isEqual((Object) linkedList0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Camera> predicate3 = predicate0.and(predicate2);
      Predicate<Camera> predicate4 = predicate3.negate();
      Predicate<Camera> predicate5 = predicate4.and(predicate1);
      Predicate<Camera> predicate6 = predicate4.negate();
      Predicate<Camera> predicate7 = predicate6.and(predicate4);
      Predicate<Camera> predicate8 = predicate4.or(predicate7);
      predicate6.negate();
      Predicate<Camera> predicate9 = predicate8.and(predicate4);
      Predicate<Camera> predicate10 = Predicate.isEqual((Object) null);
      predicate4.and(predicate8);
      predicate10.or(predicate9);
      Predicate<Camera> predicate11 = predicate0.or(predicate7);
      Predicate<Camera> predicate12 = predicate9.or(predicate1);
      predicate6.and(predicate9);
      predicate8.negate();
      predicate2.and(predicate1);
      predicate11.or(predicate12);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList2 = new LinkedList<Camera>();
      Predicate<Object> predicate13 = Predicate.isEqual((Object) predicate9);
      predicate5.or(predicate13);
      linkedList1.removeIf(predicate12);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.969755134636486
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ResourceURLContent resourceURLContent0 = new ResourceURLContent((URL) null, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("}veE3]V1xm", ";", resourceURLContent0, (-682.159F), (-682.159F), ";");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate((-4462));
      homeEnvironment0.getVideoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoHeight();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment1.setVideoQuality(17);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals((-4462), homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.192898685950695
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2863);
      homeEnvironment0.setPhotoQuality(2660);
      homeEnvironment0.setWallsAlpha((-926.638F));
      homeEnvironment0.setVideoWidth(471);
      homeEnvironment0.setVideoFrameRate(2863);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListener1);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Linux", object1, homeEnvironment0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      homeEnvironment0.isAllLevelsVisible();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      homeEnvironment0.setPhotoHeight(2863);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.getVideoFrameRate();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals((-926.638F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)18;
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-70);
      homeEnvironment0.setCeillingLightColor(16);
      byteArray0[3] = (byte) (-48);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2863);
      homeEnvironment0.setWallsAlpha(2660);
      homeEnvironment0.setVideoFrameRate(306);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("LinEux", propertyChangeListener0);
      Object object0 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(2388.0F, 173.0F, (-1.0F), 2863.0F, (-2819.9F), (-721.5F), 0L, camera_Lens0);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(propertyChangeListenerProxy0, "z4?<;T`4}8KDf[*uN9", camera1, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      Camera camera2 = new Camera(306, 459.0F, (-1254.2F), (-3432.37F), 1378.511F, 2660);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent(object0, "LinEux", camera2, camera2);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("LinEux", propertyChangeListener1);
      propertyChangeEvent0.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy1, "LinEux", object0, homeEnvironment0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoWidth(306);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality(3);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(2660.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(230, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoFrameRate(2142114938);
      homeEnvironment0.setVideoQuality(1);
      System.setCurrentTimeMillis(2142114938);
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) "SKY_TEXTURE");
      Predicate<Camera> predicate1 = predicate0.negate();
      Predicate<Camera> predicate2 = predicate1.or(predicate0);
      Predicate<Camera> predicate3 = predicate2.and(predicate0);
      Predicate<Camera> predicate4 = predicate3.or(predicate2);
      predicate1.or(predicate2);
      Integer integer0 = new Integer((-692));
      Predicate<Object> predicate5 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate6.and(predicate5);
      Predicate<Camera> predicate8 = predicate2.and(predicate7);
      Predicate<Camera> predicate9 = predicate1.negate();
      Predicate<Object> predicate10 = predicate5.and(predicate6);
      predicate9.or(predicate0);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>();
      predicate8.or(predicate10);
      linkedList0.removeIf(predicate4);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-692), (HomeTexture) null, (-692), (-692), (-692));
      int int0 = homeEnvironment0.getPhotoWidth();
      assertEquals((-692.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, int0);
      assertEquals((-692), homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-692), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals((-692), homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("could not load ");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "(:~358");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "(:~358");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight((byte)100);
      Random.setNextRandom((byte)17);
      HomeEnvironment.Property.values();
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-2587.5F), (-1922.0F));
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture1.compareTo(catalogTexture0);
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      texturesCategory0.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory0);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, (String) null);
      catalogTexture1.compareTo(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2449), 0, (-2449));
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals((-2449), int0);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals((-2449.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.2388461041110035
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundColor(1513);
      homeEnvironment0.setWallsAlpha(0.0F);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment1.setPhotoWidth(1513);
      homeEnvironment1.setSkyColor(0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment1.getDrawingMode();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getPhotoHeight();
      Predicate<Camera> predicate0 = Predicate.isEqual((Object) homeEnvironment_DrawingMode0);
      Predicate<Camera> predicate1 = predicate0.negate();
      predicate0.or(predicate1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.removeIf(predicate0);
      homeEnvironment1.setVideoCameraPath(linkedList0);
      homeEnvironment1.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setCeillingLightColor(0);
      homeEnvironment1.setLightColor(722);
      homeEnvironment0.setVideoCameraPath(linkedList0);
      assertEquals(0, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.setVideoWidth((-2130939089));
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals((-1598204288), int0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.8493821196946767
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha(2863);
      homeEnvironment0.setPhotoQuality(2660);
      homeEnvironment0.setWallsAlpha(2863);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("Linux", propertyChangeListener0);
      Object object0 = new Object();
      Camera camera0 = new Camera(286, 459.0F, (-1254.1698F), (-3432.37F), 1378.511F, 2660);
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "Linux", camera0, camera0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("Linux", propertyChangeListener1);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("Linux", "", homeEnvironment0, "Linux");
      propertyChangeEvent1.setPropagationId(propertyChangeListenerProxy0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent1);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent2 = new PropertyChangeEvent(propertyChangeListenerProxy1, "Linux", object1, homeEnvironment0);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent2);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setVideoWidth(286);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality((-32));
      assertEquals((-32), homeEnvironment0.getVideoQuality());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getPhotoWidth();
      System.setCurrentTimeMillis((-3012L));
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(0, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-2587.5F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("^6hk>|fhYG", resourceURLContent0, (-2177.197F), (-925.49475F));
      TexturesCategory texturesCategory0 = new TexturesCategory("could not load ");
      TexturesCategory texturesCategory1 = new TexturesCategory("QrQ");
      Object object0 = new Object();
      texturesCategory0.equals(object0);
      texturesCategory0.compareTo(texturesCategory1);
      CatalogTexture catalogTexture2 = new CatalogTexture("(:~358", resourceURLContent0, 313.3986F, 3387.0F, true);
      catalogTexture2.setCategory(texturesCategory0);
      catalogTexture1.compareTo(catalogTexture2);
      HomeTexture homeTexture1 = new HomeTexture(catalogTexture0);
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      texturesCategory2.add(catalogTexture1);
      catalogTexture2.setCategory(texturesCategory2);
      URLContent uRLContent0 = new URLContent(uRL0);
      catalogTexture1.setCategory(texturesCategory2);
      CatalogTexture catalogTexture3 = new CatalogTexture("", "iHxPgKP5huRR}7-~", resourceURLContent0, (-2587.5F), (-1922.0F), "");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(400, homeTexture0, 6, (-1), (-2587.5F));
      int int0 = homeEnvironment0.getPhotoHeight();
      assertEquals(300, int0);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals((-2587.5F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(6, homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getGroundColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1), homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      URL uRL0 = MockURL.getFtpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, true);
      CatalogTexture catalogTexture0 = new CatalogTexture("could not load ", "could not load ", resourceURLContent0, (-1922.0F), (-1922.0F), "could not load ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      Content content0 = homeTexture0.getImage();
      CatalogTexture catalogTexture1 = new CatalogTexture("could not load ", content0, (-1922.0F), (-1922.0F));
      TexturesCategory texturesCategory0 = new TexturesCategory("could not load ");
      catalogTexture0.setCategory(texturesCategory0);
      catalogTexture1.compareTo(catalogTexture0);
      HomeTexture homeTexture1 = new HomeTexture(homeTexture0);
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      texturesCategory1.add(catalogTexture0);
      catalogTexture1.setCategory(texturesCategory1);
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture2 = new CatalogTexture("could not load ", "could not load ", uRLContent0, 0, 368.7799F, (String) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-2449), 0, 3124.7017F);
      homeEnvironment0.setGroundTexture(homeTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      assertEquals((-2449), homeEnvironment0.getSkyColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(3124.7017F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(0, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0, homeEnvironment0.getGroundColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      TexturesCategory texturesCategory0 = new TexturesCategory("");
      TexturesCategory texturesCategory1 = new TexturesCategory("");
      TexturesCategory texturesCategory2 = new TexturesCategory("");
      TexturesCategory texturesCategory3 = new TexturesCategory("n");
      TexturesCategory texturesCategory4 = new TexturesCategory("n");
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth(8);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Random.setNextRandom(300);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality((-2146916953));
      int int0 = homeEnvironment0.getPhotoQuality();
      assertEquals((-2146916953), int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(10);
      homeEnvironment0.setPhotoQuality((-2146722380));
      Camera.convertTimeToTimeZone(0L, "jLy?K/n7'*uj>E}Dy");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      Camera camera0 = new Camera(0L, 0L, (-439.0F), 0L, 10, (-439.0F));
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera1 = new Camera(959.0F, (-2146722380), 10, 959.0F, (-926.638F), 1.0F, 10, camera_Lens0);
      camera1.setY((-2137.964F));
      camera1.setCamera(camera0);
      homeEnvironment0.setVideoWidth(10);
      homeEnvironment0.setPhotoHeight(8192);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoWidth(2557);
      assertEquals(8192, homeEnvironment0.getPhotoHeight());
  }
}
