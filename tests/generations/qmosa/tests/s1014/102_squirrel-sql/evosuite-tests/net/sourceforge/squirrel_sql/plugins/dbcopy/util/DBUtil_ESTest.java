/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 04:19:59 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionListener;
import java.awt.event.ComponentListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowStateListener;
import java.io.SequenceInputStream;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.format.TextStyle;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import javax.swing.Box;
import javax.swing.DebugGraphics;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.IndexInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectType0.getIcon();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte) (-128);
      byteArray0[6] = (byte) (-6);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.getImageObserver();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      defaultTreeCellRenderer0.setLeafIcon(icon0);
      defaultTreeCellRenderer0.transferFocus();
      defaultTreeCellRenderer0.removeNotify();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (byte) (-2), 1812, 2399, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":b");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 92, (byte) (-1), 92, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = "NU2AT1FY-P;v)V";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NU2AT1FY-P;v)V");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      String string1 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-1311);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, (-1311), (byte) (-3), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[~il#", "%/\"DyompM(ayI", "[~il#", "[~il#", (-5), "yevc", 1087, 2399, 1087, (-5), "dvQ67jY~LW", "[~il#", 1087, 2399, "[~il#");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getHierarchyBoundsListeners();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics.setFlashTime(2399);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo(" '>Hu$", "rownum");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("[~il#", "Don't display splash screen");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), (-5), 2399, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, 2000, 2003, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("C0Abf?GK%xu4(I)A");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(":zoH_~Zj");
      fileWrapperImpl0.mkdir();
      fileWrapperFactoryImpl0.createTempFile(":zoH_~Zj", "2>*W<SjwH_Cb]W");
      fileWrapperFactoryImpl0.create("C0Abf?GK%xu4(I)A", "hF");
      FileWrapperImpl.listRoots();
      fileWrapperFactoryImpl0.createTempFile("zY;[zrm?-Wb5$nJ#:B", "2>*W<SjwH_Cb]W");
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2000, 2000, 2000, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster3);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, (-1492), (-1492), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-6), 91, (-1016), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int int0 = (-4);
      int int1 = (-1722);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-4), (-4), (-1722), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, 126, 3, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NU2AT1FY-P;v)V");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)16;
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) sQLDriver0);
      Predicate<Object> predicate1 = predicate0.negate();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      predicate2.test(predicate0);
      predicate2.or(predicate0);
      predicate2.and(predicate1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (byte) (-3), (byte)16, 2003, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, (-1016));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 32765);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "disabledimage");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 12, 1314, (byte) (-46), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GVL 1c%`c,Bij&Kk");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, 2, 2004, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 70, 1608, 3152, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":b");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (byte) (-1), 32000, (byte) (-1), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.transferFocus();
      defaultTreeCellRenderer0.removeNotify();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2002, 1812, 59, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 5, (-3228), 11, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriver sQLDriver1 = new SQLDriver();
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("el{O)uP^k~2)[", "");
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null);
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("Ke}Zp", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, 16, 1057, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 6, 6, 1620, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("qsw5Ia?f", "qsw5Ia?f", "R3nL", "qsw5Ia?f", 1111, "qsw5Ia?f", 1111, 1111, 1111, 1111, "P zhgq7", "P zhgq7", 1111, 1111, "qsw5Ia?f");
      DatabaseObjectType.createNewDatabaseObjectType("f8ohL}");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      Box box0 = Box.createVerticalBox();
      box0.getWidth();
      box0.getGraphics();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType.createNewDatabaseObjectType("crSZeS");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":b");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-65);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte)36;
      byteArray0[3] = (byte) (-17);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, (byte) (-46), 1314, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, 7, (-2559), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 7, 7, (-1722), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 346, (-2367), 2006, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeNotify();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "G", " pI-$z]_zXBSZ.J%O");
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster6);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      System.setCurrentTimeMillis((-9223372036854775808L));
      int int0 = (-859);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "org.hibernate.dialect.function.ConditionalParenthesisFunction");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-859));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBUtil.typesAreEquivalent((byte)16, (-8));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("Dan Dragut", dBCopyPlugin0.getContributors());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getGraphicsConfiguration();
      defaultTreeCellRenderer0.getClosedIcon();
      defaultTreeCellRenderer0.removeNotify();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT;
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDisplayedMnemonic();
      ImageIcon imageIcon0 = new ImageIcon("sN#");
      ImageIcon imageIcon1 = new ImageIcon("utc_time");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "sN#", "Z-");
      System.setCurrentTimeMillis(0);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Ua.K", "*MKEmD/7^|dZ", "Ua.K", "_$^peG|[E", (-5), "yevc", 1087, 2377, 1087, (-8), "dvQ67jY~LW", "Ua.K", 1087, 1364, "Ua.K");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo(" ) values ( ", "dvQ67jY~LW", "Ua.K", " ) values ( ", (-2790), "connection is closed", (-1932735280), (-2790), (-324), 12, "$", "%pdG#", 1364, (-5), (String) null);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ALTER TABLE $tableName$ ALTER $columnName$ DROP DEFAULT", "d:@9", ":~@~B,3=Z5*T[", "EXJPVe~", (-4071), "!", 2713, 124, 8, 1181, ":~@~B,3=Z5*T[", "lvarchar($l)", (-2519), 6, "Wa*HP{Q`p+|&uYoS8#B");
      DatabaseObjectType.createNewDatabaseObjectType(" NOT NULL");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      dBCopyPlugin0.setSourceDatabaseObjects(list1);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("d:@9");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster.remove(mouseWheelListener2, (MouseWheelListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dvQ67jY~LW", ",fnlXv", "yevc", ",fnlXv", (-4), "!:c/mjA`lJD %:80N", 1037, (-1493), (-8), 6, "Method must not be null", ":jD]Q+Pe[!u2T\"%=6_", 6, 120, "!:c/mjA`lJD %:80N");
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DatabaseObjectType.createNewDatabaseObjectType("xe`C7");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getUpdateDirectory();
      fileWrapperImpl0.toURL();
      fileWrapperFactoryImpl0.createTempFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (FileWrapper) fileWrapperImpl0);
      fileWrapperFactoryImpl0.create(fileWrapperImpl0);
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)fileWrapperFactoryImpl0.createTempFile("tSckH8<n_k=", "BkH3VF$Yno2YaNjzr");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.create(fileWrapperImpl1);
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, ",L7T_N", "] not found.", ",fOnlXv", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeNotify();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDisplayedMnemonic();
      ImageIcon imageIcon0 = new ImageIcon("");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "4r^9am/_#L>", "");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "sN#");
      System.setCurrentTimeMillis((-1203L));
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)18;
      DatabaseObjectType.createNewDatabaseObjectType("rtrim( ?1 )");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("DIF{;tf``.jTRa");
      databaseObjectType0.getIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      int int0 = 642;
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 642);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster6);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "4I", " xmlns=\"");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      UnaryOperator.identity();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)16;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      sQLDriver0.clone();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[7];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("rownum", "Ke}Zp");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("Z(5,P< _", "rownum");
      driverPropertyInfo1.required = false;
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("rownum", "select sequence_name from system_sequences");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("\"T?#kCXTc/tdiDF", "to_asi\"");
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      driverPropertyInfoArray0[5] = driverPropertyInfo4;
      driverPropertyInfoArray0[6] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.ScriptWriter", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      UnaryOperator.identity();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)16;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriver sQLDriver1 = new SQLDriver();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[7];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("rownum", "Ke}Zp");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("K(5,r< _", "rownum");
      driverPropertyInfo1.required = false;
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("rownum", "select sequence_name from system_sequences");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("\"T?#kCXTc/tdiDF", "to_asi\"");
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      driverPropertyInfoArray0[5] = driverPropertyInfo4;
      driverPropertyInfoArray0[6] = driverPropertyInfo0;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent((byte)3, (byte)3);
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      IApplication iApplication0 = dBCopyPlugin0.getApplication();
      assertNull(iApplication0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DBUtil.typesAreEquivalent(3, (-678));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(false);
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.setPasteMenuEnabled(false);
      IApplication iApplication0 = dBCopyPlugin0.getApplication();
      assertNull(iApplication0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("*b&nIyM!Rp[hn:G7", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "*b&nIyM!Rp[hn:G7");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
      assertEquals("*b&nIyM!Rp[hn:G7", iDatabaseObjectInfo0.getQualifiedName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("*b&nIyM!Rp[hn:G7", "Vp4oLy@\"YoD`Z)", (String) null, "CD9\".Q", 2004, "Jzeezr[gWvf.", 1623, 170, 1231, 1748, "org.jboss.net.protocol.file.Handler", "k>(5p(_x3 eM1", (-4178), 1623, "org.jboss.net.protocol.file.Handler");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType.createNewDatabaseObjectType("WOP:q(E~GRI|*&yaf");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("ut");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getFwJarFile();
      applicationFileWrappersImpl3.getWelcomeFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl7 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl8 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl6.getChangeLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl9 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl10 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl8.getLicenceFile();
      applicationFileWrappersImpl10.getEditWhereColsFile();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1007);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte) (-50);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("NO", "NO", "NO", ",R0$WTeB", 1007, (String) null, 1007, 2682, 1405, 243, "chmDi`ndex(", "W9Yk6s6&KYw>~\"p", 1007, 243, "[[?ctXZUaz)&[x =ph");
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("DBCopy Plugin", dBCopyPlugin0.getDescriptiveName());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeNotify();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setLeafIcon((Icon) null);
      defaultTreeCellRenderer1.getBackground();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.setSize((-3668), (-3668));
      defaultTreeCellRenderer3.getY();
      defaultTreeCellRenderer3.getDisplayedMnemonic();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("x", "x", "org.hibernate.dialect.function.ConditionalParenthesisFunction", "}HA.F66WzOH4lL<6", (-1935), "n0^$cov^a0{np=_SE", (-3340), (-3340), (-4460), 2004, "n0^$cov^a0{np=_SE", "org.hibernate.dialect.function.ConditionalParenthesisFunction", 1003, (-3340), "}HA.F66WzOH4lL<6");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "n0^$cov^a0{np=_SE", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 872);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" and catalog ", "Wa*HP{Q`p+|&uYoS8#B", "CASCADE CONSTRAINTS", "m9J8D_=G/ey=M", (-2), ")V7o*To+{Z", (-2), (-2), (-75), (-75), "net.sourceforge.squirrel_sql.fw.dialects.SQLServerDialectExt", " and catalog ", (-75), (-2), "#TRd+-KM(a\"AkO");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ActionListener) null, (ActionListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.fixCase((ISession) null, "");
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "t-a|Tli7@z_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = "-";
      DBUtil.fixCase((ISession) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.createTempFile("Version.appname", "zoH~Z|", (FileWrapper) null);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("zoH~Z|", "Version.appname");
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "", "HQ6!%\"j~&3DpJX", "ZwRu^euRH;", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getChangeLogFile();
      applicationFileWrappersImpl0.getUserSQLHistoryFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("VARBINARY($l)", (String) null, "l`*_J![Bvn`$", "A{|&mqEl", 128, "net.sourceforge.squirrel_sql.fw.gui.GUIUtils", 47, 1062, (-3783), 614, "@*p>T-v:On!", "VARBINARY($l)", (-623), 47, "net.sourceforge.squirrel_sql.fw.gui.GUIUtils");
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      UnaryOperator.identity();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)16;
      byteArray0[2] = (byte)16;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver1);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "R3+,P");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster8, (MouseWheelListener) aWTEventMulticaster3);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "zc[z.j<EJ<}{", "zc[z.j<EJ<}{");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "y7/k,*IkL'h^e{LG)e", "KGqh;A9+*-+@5[Pl2b");
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("java.lang.String", "java.lang.String", "java.lang.String", "java.lang.String", (-675), "java.lang.String", (-1356), (-1356), 2004, 1053, "to_ascii", "Parsing layout options for \"", (-675), (-1511), "Tp@Q");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(2004, tableColumnInfo0, (ISession) null);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)18;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate1);
      Predicate<Object> predicate4 = predicate1.and(predicate3);
      Predicate.isEqual((Object) predicate2);
      predicate4.test(predicate3);
      predicate1.and(predicate3);
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      Predicate.isEqual((Object) predicate0);
      Predicate.isEqual((Object) null);
      Predicate.isEqual((Object) ",fOnlXv");
      predicate2.or(predicate0);
      Predicate<Object> predicate5 = predicate1.or(predicate3);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate5.and(predicate6);
      predicate7.negate();
      TextStyle textStyle0 = TextStyle.SHORT_STANDALONE;
      predicate1.test(textStyle0);
      Predicate.isEqual((Object) ",fOnlXv");
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "Qd'{Kz\"'`K~HbvwqrB~", "NQI4%UNep|s", ",fOnlXv");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("log4j.properties");
      DatabaseObjectType.createNewDatabaseObjectType("k>(5p(_x3 eM1");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer1.getLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("DBUtil.info.bindclobfile", icon0);
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.paintComponents((Graphics) null);
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("o,SE)>S ZA&", icon0);
      DatabaseObjectType.createNewDatabaseObjectType("DBUtil.info.bindclobfile");
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      System.setCurrentTimeMillis(2561L);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("#(|[KoAQ<I0mILLw<O", "hmPSkZBVyAI0@k4&x", "Application.error.savedatatypeprops", "org.jfree.date.SpreadsheetDate", 3367, "org.jfree.date.SpreadsheetDate", 3367, 3367, 3367, 3367, "/v#(L!SM#!0K", "", 16, 3367, "");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[8];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("*MKEmD/7^|dZ", "CHAR(10) )", "i+h8WGgPA(n90>!P", "\"", 16, "Application.error.savedatatypeprops", 464, 3367, (-1), 464, "M$E46vO<D,v[D", "3SpNUSvrc", 2542, (-1), "");
      tableColumnInfoArray0[5] = tableColumnInfo1;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("org.jfree.date.SpreadsheetDate, org.jfree.date.SpreadsheetDate, org.jfree.date.SpreadsheetDate, org.jfree.date.SpreadsheetDate, org.jfree.date.SpreadsheetDate, \", org.jfree.date.SpreadsheetDate, org.jfree.date.SpreadsheetDate", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getLibraryDirectory();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "-cSzKz+~/8(3\"_P^&", "-cSzKz+~/8(3\"_P^&", (-2667), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2, 2, 2, (-1620), "-cSzKz+~/8(3\"_P^&", (String) null, 672, 2, "*b&nIyM!Rp[hn:G7");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("K1[D3..}8D|I", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("EEhg");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROC_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.typesAreEquivalent((byte) (-7), (byte) (-7));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias0 = new SQLAlias(uidIdentifier0);
      sQLAlias0.getDriverPropertiesClone();
      Connection connection0 = null;
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)18;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate1.and(predicate3);
      predicate2.or(predicate3);
      Predicate.isEqual((Object) predicate2);
      predicate4.test(predicate3);
      Predicate<Object> predicate5 = predicate1.and(predicate3);
      predicate0.test(predicate2);
      Predicate.isEqual((Object) predicate0);
      TextStyle textStyle0 = TextStyle.NARROW;
      Predicate.isEqual((Object) predicate5);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("~,b19X6D8s|", "'iH", "~,b19X6D8s|", "'iH", (byte)18, "6[~7Q^7\"N", 12, (byte)64, (-4), (-1633), "MWl^-%", (String) null, 1505, (byte)18, "!xU5v_KL");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(18, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("/*foo*/ select * from foos foo order by foo.bar, foo.baz", "!LyQ", "org.jfree.data.time.TimeTableXYDataset", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 3360, "]", 528, 4, 620, 2001, "org.jfree.data.time.TimeTableXYDataset", "]", 2001, 1088, "oZqm5G]ZMXb<}XHP5");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(3360, int0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster6);
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setCopyMenuEnabled(true);
      System.setCurrentTimeMillis((-9223372036854775808L));
      int int0 = (-859);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, (String) null, "org.hibernate.dialect.function.ConditionalParenthesisFunction");
      int int1 = new Integer((-859));
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "t ^6", (ITableInfo) null, 1151);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeNotify();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getDefaultLeafIcon();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("text/plain", "tl!A9TIrE5Sm@smsU", "to_ascii", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-75), (-75));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, ".", "CWe,D94.hD<|_ue4", "M@C'rO[<JfA#gT]8", 759);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.poll();
      linkedList0.add((IDatabaseObjectInfo) null);
      linkedList0.clear();
      DBUtil.convertObjectToTableList(linkedList0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[1];
      DBUtil.convertObjectToTableList(linkedList0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "4PfX#i_|zli,8};", "PreferencesPanel.fetchSizeLabel", "?811rv", 0, " COLUMN ", 1635, 1635, (-2570), 1635, "DatabaseObjectType.index", "^5NHggs", (-2570), 1417, ":+0d Y<O&9>!c!3e,$");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.getLastStatementValues();
      DBUtil.convertObjectArrayToTableList(tableColumnInfoArray0);
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("j|", " COLUMN ", "PreferencesPanel.fetchSizeLabel", "T8|4;v_7jEe|f{L", 1375, "^5NHggs", (-2570), 52, 13, (-197), "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", "}Y", (-2159), (-2338), "DatabaseObjectType.index");
      int int0 = new Integer(13);
      IndexInfo.IndexType indexInfo_IndexType0 = IndexInfo.IndexType.CLUSTERED;
      IndexInfo.SortOrder indexInfo_SortOrder0 = IndexInfo.SortOrder.NONE;
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      IndexInfo indexInfo0 = null;
      try {
        indexInfo0 = new IndexInfo("4PfX#i_|zli,8};", "O}rSsE~", "Encountered unexpected exception while attempting to determine if catalogs are used in table definitions", "O}rSsE~", "dbL{&<Nru4K0L", true, "j|", indexInfo_IndexType0, (short) (-1250), indexInfo_SortOrder0, 7, (-1814), (String) null, (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)18;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      Predicate<Object> predicate4 = predicate3.or(predicate1);
      Predicate<Object> predicate5 = predicate1.negate();
      predicate5.negate();
      predicate1.negate();
      Predicate<Object> predicate6 = predicate1.and(predicate5);
      predicate6.or(predicate2);
      Predicate<Object> predicate7 = predicate3.or(predicate5);
      Predicate.isEqual((Object) predicate3);
      predicate6.test(predicate5);
      Predicate<Object> predicate8 = predicate4.negate();
      predicate0.test(predicate3);
      predicate8.and(predicate1);
      Predicate.isEqual((Object) predicate0);
      TextStyle textStyle0 = TextStyle.NARROW;
      Predicate<Object> predicate9 = predicate7.negate();
      Predicate<Object> predicate10 = predicate9.negate();
      predicate5.and(predicate10);
      predicate7.or(predicate8);
      predicate3.and(predicate5);
      predicate9.negate();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "6IT1pMq%u$(y_", ":BCpC\"yyp", "l*[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      List<IDatabaseObjectInfo> list0 = null;
      DBUtil.setLastStatementValues(":<H5>?%:");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      String string0 = "DBUtil.info.bindclobfile";
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("DBUtil.info.bindclobfile", 1914, 1914);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "3T?u");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      TextStyle textStyle0 = TextStyle.SHORT;
      textStyle0.asNormal();
      predicate3.test("~ZgFE*ur%g,PK^:Zk");
      Predicate<Object> predicate4 = Predicate.isEqual((Object) textStyle0);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      Predicate<Object> predicate7 = predicate6.and(predicate5);
      Predicate<Object> predicate8 = predicate5.negate();
      predicate8.or(predicate3);
      Predicate.isEqual((Object) predicate5);
      Predicate.isEqual((Object) predicate8);
      Predicate<Object> predicate9 = predicate6.negate();
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate<Object> predicate11 = predicate6.and(predicate10);
      TextStyle textStyle1 = TextStyle.NARROW;
      Predicate<Object> predicate12 = predicate11.negate();
      predicate2.and(predicate12);
      textStyle1.asNormal();
      Predicate.isEqual((Object) null);
      predicate2.and(predicate9);
      arrayList0.removeIf(predicate7);
      arrayList0.removeIf(predicate5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "3T?u");
      Predicate<Object> predicate1 = predicate0.negate();
      predicate1.test(predicate0);
      Predicate<Object> predicate2 = predicate1.or(predicate0);
      Predicate<Object> predicate3 = predicate2.negate();
      TextStyle textStyle0 = TextStyle.SHORT;
      textStyle0.asNormal();
      predicate3.test("~ZgFE*ur%g,PK^:Zk");
      Predicate<Object> predicate4 = Predicate.isEqual((Object) textStyle0);
      Predicate<Object> predicate5 = predicate2.and(predicate4);
      Predicate<Object> predicate6 = predicate5.negate();
      predicate6.and(predicate5);
      predicate5.negate();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getFont();
      defaultTreeCellRenderer0.setFont((Font) null);
      DatabaseObjectType.createNewDatabaseObjectType("s");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) null;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("~ZgFE*ur%g,PK^:Zk", "s", "?;9\"bDE`");
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) databaseObjectInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) null;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) null;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("-", "-", "-", "-", 15, " CHAR(10) )", 15, 15, 2420, 2420, "", "-", 2420, 15, "7onRf)'v`Rc4!i");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("QL? ?H}RiC50E3nO");
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("EL8>IdnPN3R/M0n", (Icon) imageIcon0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "\"k2ghI$c(#qbu{", "org.apache.log4j.Hierarchy", "A^~[Mn");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      String string0 = "org.apache.log4j.Hierarchy";
      DBUtil dBUtil0 = new DBUtil();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUpdateDirectory();
      CallableStatement callableStatement0 = null;
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("k>(5p(_x3 eM1", "YKo2|zlN", "YKo2ezl-", "YKo2ezl-", 1628, "k>(5p(_x3 eM1", 1041, 2274, 1041, 2274, "ut", "k>(5p(_x3 eM1", 1628, (-459), "k>(5p(_x3 eM1");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("log4j.properties");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("k>(5p(_x3 eM1");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX_TYPE_DBO;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("dayofweek_iso", icon0);
      Icon icon1 = databaseObjectType2.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("^R", icon1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.INDEX;
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("YKo2|zlN", string0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl3.getChangeLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUserSQLHistoryFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("exp", (String) null, " schema=", "*b&nIyM!Rp[hn:G7", (-5), ":", (-5), 1374, 36, (-5), "<u+bi9", "'minY' cannot be INF or NaN.", 36, (-623), "<u+bi9");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.getFwJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUserSQLHistoryFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("exp", (String) null, " schema=", "*b&nIyM!Rp[hn:G7", (-5), ":", (-5), 1374, 36, (-5), "<u+bi9", "'minY' cannot be INF or NaN.", 36, (-623), "<u+bi9");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DBUtil.getLastStatement();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setAppendRecordsToExisting(true);
      dBCopyPreferenceBean0.setDelayBetweenObjects(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      assertFalse(dBCopyPreferenceBean0.isPromptForDialect());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      predicate0.and(predicate5);
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate6);
      Predicate.isEqual((Object) predicate5);
      predicate2.test(predicate4);
      predicate4.and(predicate7);
      predicate0.test(predicate1);
      Predicate.isEqual((Object) null);
      TextStyle textStyle0 = TextStyle.NARROW;
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<Object> predicate8 = predicate3.negate();
      Predicate<Object> predicate9 = predicate3.and(predicate5);
      Predicate<Object> predicate10 = predicate9.negate();
      Predicate<Object> predicate11 = predicate8.and(predicate10);
      Predicate<Object> predicate12 = predicate8.or(predicate5);
      predicate11.or(predicate12);
      predicate3.and(predicate4);
      predicate11.negate();
      arrayList0.removeIf(predicate10);
      arrayList0.removeIf(predicate8);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DBUtil.setLastStatement((String) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall((String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("!", "Version.appname", "Wa*HP{Q`p+|&uYoS8#B", "Version.appname", 2713, "key", 488, 488, 138, 844, (String) null, "d:@9", 2713, (-426), "key");
      Font.decode("Wa*HP{Q`p+|&uYoS8#B");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDisplayedMnemonic();
      ImageIcon imageIcon0 = new ImageIcon("UOe+#");
      ImageIcon imageIcon1 = new ImageIcon("x:^E}H>bpZ8kgP");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics1, defaultTreeCellRenderer0);
      defaultListCellRenderer_UIResource0.setFocusCycleRoot(false);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      System.setCurrentTimeMillis((-75));
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "to_ascii");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z8L,K?:ir:?_rtBB0", "Strings must not be null", "Strings must not be null", "z8L,K?:ir:?_rtBB0", 217, "owz2>Wj\"zdWvDd3", 217, 2006, 217, 217, (String) null, "owz2>Wj\"zdWvDd3", 217, (-707), ",ns@W~E5Xyh>T%");
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, "z8L,K?:ir:?_rtBB0", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeNotify();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getDefaultLeafIcon();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics0, defaultTreeCellRenderer3);
      defaultListCellRenderer_UIResource0.setFocusCycleRoot(false);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource2 = new DefaultListCellRenderer.UIResource();
      defaultListCellRenderer_UIResource0.getHierarchyListeners();
      defaultListCellRenderer_UIResource0.paintComponents(debugGraphics2);
      DefaultListCellRenderer defaultListCellRenderer1 = new DefaultListCellRenderer();
      defaultListCellRenderer1.getIcon();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeNotify();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getDefaultLeafIcon();
      boolean boolean0 = DBUtil.typesAreEquivalent((-3), 1556);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((byte)25, (-8));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultLeafIcon();
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics1, defaultListCellRenderer_UIResource0);
      defaultListCellRenderer_UIResource0.setFocusCycleRoot(false);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource1 = new DefaultListCellRenderer.UIResource();
      DebugGraphics debugGraphics3 = new DebugGraphics();
      DebugGraphics debugGraphics4 = new DebugGraphics(debugGraphics1);
      DebugGraphics debugGraphics5 = new DebugGraphics(debugGraphics2, defaultTreeCellRenderer0);
      Box box0 = Box.createVerticalBox();
      box0.getGraphics();
      defaultListCellRenderer_UIResource1.paintComponents(debugGraphics4);
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("W/pduTO}nf", "ce(il", "ce(il", "ce(il", 2760, "%B", 2760, 2760, 32767, 2760, "W/pduTO}nf", "W/pduTO}nf", (-1380), (-1972), (String) null);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Ua.K", "*MKEmD/7^|dZ", "Ua.K", "_$^peG|[E", (-5), "yevc", 1087, 2377, 1087, (-8), "dvQ67jY~LW", "Ua.K", 1087, 1364, "Ua.K");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0);
      DebugGraphics debugGraphics2 = new DebugGraphics(debugGraphics1, defaultListCellRenderer_UIResource0);
      defaultListCellRenderer_UIResource0.setFocusCycleRoot(false);
      defaultListCellRenderer_UIResource0.paintComponents(debugGraphics2);
      defaultListCellRenderer_UIResource0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("=pEzt7}CJ#B", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Ua.K");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "#+[FW");
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("ny0+@D", " ( ", "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("Ua.K", (String) null, "NO");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(databaseObjectInfo0, schemaInfo1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("3<wyV/6", "org.hibernate.dialect.function.ConditionalParenthesisFunction", "3<wyV/6", (ISession) null, true, 2363);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)18;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      predicate3.or(predicate1);
      Predicate<Object> predicate4 = predicate1.negate();
      predicate4.negate();
      predicate1.negate();
      Predicate<Object> predicate5 = predicate1.and(predicate4);
      predicate5.or(predicate2);
      Predicate<Object> predicate6 = predicate3.or(predicate4);
      Predicate.isEqual((Object) predicate3);
      predicate5.test(predicate4);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^TCSR");
      Predicate<Object> predicate7 = predicate1.and(predicate4);
      predicate0.test(predicate3);
      predicate7.and(predicate1);
      Predicate.isEqual((Object) predicate0);
      TextStyle textStyle0 = TextStyle.NARROW;
      Predicate<Object> predicate8 = predicate6.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      predicate4.and(predicate9);
      predicate6.or(predicate7);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("H|7(Rp7 &", "^TCSR", (String) null, (String) null, (-996), "is`;Ox5aaU", (byte)18, (-996), 273, (-2081), "H|7(Rp7 &", "", (byte)18, (byte)18, "ActionCollection.createActionInfo");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-996), int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "w<JhD>WV/?UZDpjg", "TS{qMjG7>Ueg1)NOs", "", 2526);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      int int0 = (-75);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "to_ascii");
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate2.or(predicate0);
      Predicate<Object> predicate4 = predicate1.and(predicate0);
      predicate1.test(predicate4);
      Predicate<Object> predicate5 = predicate2.and(predicate1);
      Predicate<Integer> predicate6 = Predicate.isEqual((Object) predicate2);
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate7 = predicate2.negate();
      Predicate<Object> predicate8 = predicate5.and(predicate0);
      predicate8.or(predicate0);
      Predicate<Object> predicate9 = predicate3.negate();
      Predicate<Object> predicate10 = predicate4.or(predicate0);
      predicate1.and(predicate10);
      Enumeration<SequenceInputStream> enumeration0 = (Enumeration<SequenceInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      TextStyle textStyle0 = TextStyle.FULL;
      predicate5.test(textStyle0);
      TextStyle textStyle1 = TextStyle.SHORT_STANDALONE;
      TextStyle.values();
      predicate5.test(",fOnlXv");
      Predicate.isEqual((Object) predicate6);
      Object object0 = new Object();
      Predicate.isEqual(object0);
      predicate7.and(predicate0);
      predicate9.and(predicate4);
      predicate2.or(predicate7);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "esLbZ4g98H)", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) aWTEventMulticaster1, (HierarchyBoundsListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) null);
      DBUtil.replaceDistinctDataType(3, (TableColumnInfo) null, (ISession) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "_qd7x=9X", "_qd7x=9X", "", 0, "", 2003, 0, 2003, 0, "", "yn]1- dCpB4V0\u0002C ", 0, 0, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      applicationFiles1.getFAQFile();
      applicationFileWrappersImpl2.setApplicationFiles(applicationFiles1);
      applicationFileWrappersImpl2.setApplicationFiles(applicationFiles0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      Integer integer0 = new Integer((-1253));
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "}7Oa6.Q<U>", "}7Oa6.Q<U>", "jxUQBZBkv6", (-2785), "jxUQBZBkv6", (-589), (-1253), (-589), (-85), "YKo2|zlN", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-85), (-1588), "jxUQBZBkv6");
      int int0 = DBUtil.replaceDistinctDataType((-2785), tableColumnInfo0, (ISession) null);
      assertEquals((-2785), int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "9)++56#^WLA$$=Fb4U", "`Wl;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("G/pmP$%T%$/Y", "G/pmP$%T%$/Y", "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATABASE_TYPE_DBO;
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      stack0.add((IDatabaseObjectInfo) databaseObjectInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(stack0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)45;
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte) (-61);
      byteArray0[5] = (byte)12;
      byteArray0[6] = (byte) (-5);
      byteArray0[7] = (byte)2;
      byteArray0[8] = (byte) (-47);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      arrayList0.add((ITableInfo) null);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(arrayList0);
      List<ITableInfo> list1 = DBUtil.convertObjectToTableList(list0);
      assertEquals(1, list1.size());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) arrayList0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate3.or(predicate4);
      predicate0.and(predicate5);
      Predicate<Object> predicate6 = predicate3.negate();
      Predicate<Object> predicate7 = predicate4.or(predicate6);
      Predicate.isEqual((Object) predicate5);
      predicate2.test(predicate4);
      predicate4.and(predicate7);
      predicate0.test(predicate1);
      Predicate.isEqual((Object) null);
      TextStyle textStyle0 = TextStyle.NARROW;
      Object object0 = new Object();
      Predicate.isEqual(object0);
      Predicate<Object> predicate8 = predicate3.negate();
      Predicate<Object> predicate9 = predicate3.and(predicate5);
      Predicate<Object> predicate10 = predicate9.negate();
      Predicate<Object> predicate11 = predicate8.and(predicate10);
      Predicate<Object> predicate12 = predicate8.or(predicate5);
      predicate11.or(predicate12);
      predicate3.and(predicate4);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
