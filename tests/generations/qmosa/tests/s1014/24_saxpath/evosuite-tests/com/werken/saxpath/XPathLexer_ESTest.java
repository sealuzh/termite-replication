/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 18 05:06:35 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1413427623913273
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.isIdentifierChar('~');
      xPathLexer1.whitespace();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.rightBracket();
      assertEquals("m", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer2.comma();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('~');
      assertFalse(boolean0);
      
      xPathLexer2.leftParen();
      xPathLexer0.setXPath("daBh.pM0X:6");
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer0.rightParen();
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer2.setXPath("");
      XPathLexer xPathLexer3 = new XPathLexer("s)v5GZ6ff\"uC@");
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.dots();
      assertEquals("B", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("werken.saxpath.Token", token6.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("8C_,Y");
      Token token7 = xPathLexer4.rightParen();
      assertEquals("8", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer4.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1189468088572303
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.isIdentifierChar('~');
      xPathLexer1.whitespace();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.rightBracket();
      xPathLexer0.minus();
      XPathLexer xPathLexer2 = new XPathLexer("&tUu6JrbA/}GL^2&");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("Va$;#xzZ[!^}')`");
      xPathLexer3.at();
      xPathLexer2.minus();
      xPathLexer1.not();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer("mLjM{wBMd|6L%39`^*c");
      xPathLexer4.and();
      xPathLexer1.star();
      xPathLexer1.or();
      xPathLexer2.not();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer2.dots();
      xPathLexer1.relationalOperator();
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer("daBh.pM0X:6");
      xPathLexer5.minus();
      xPathLexer5.pipe();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1234802941145277
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("mX");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer1.setXPath("]bV5W0D}y1|&%(aJ");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("mX");
      xPathLexer2.slashes();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("}", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer2.div();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("/B2_TR");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("/", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer2.nextToken();
      xPathLexer2.operatorName();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("y1|&%(aJ", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightParen();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer3.notEquals();
      assertEquals("B2", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer3.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("_", token11.getTokenText());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.211354920838078
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("daBh.pM0X:6");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("a", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("B", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(".", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("daBh.pM0X:6");
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token7.getTokenText());
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals(":", token9.getTokenText());
      
      xPathLexer1.comma();
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.comma();
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
      
      xPathLexer2.leftParen();
      xPathLexer1.operatorName();
      xPathLexer1.leftParen();
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer3.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.391029146723078
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer1.and();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      xPathLexer1.operatorName();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      xPathLexer1.leftParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.equals();
      Token token0 = xPathLexer1.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.8379441608630027
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.Token", token3.getTokenText());
      
      xPathLexer0.setXPath("*@gO@6`oK");
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.slashes();
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("@", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token8 = xPathLexer3.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer3.not();
      assertEquals(" ", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("*@gO@6`oK");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.plus();
      xPathLexer4.relationalOperator();
      Token token11 = xPathLexer3.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals("g", token12.getTokenText());
      
      Token token13 = xPathLexer5.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.plus();
      assertEquals(5, token14.getTokenType());
      assertEquals("O", token14.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5535119706209164
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("N", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.colon();
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("{vNvY7 !QnF![=)<");
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("{vNvY7 !QnF![=)<", token7.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      Token token8 = xPathLexer1.rightParen();
      assertEquals("v", token8.getTokenText());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("Nv", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.leftParen();
      assertEquals("Y", token11.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2415504074371704
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("%", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(26, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      xPathLexer1.or();
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.number();
      xPathLexer0.div();
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.not();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("'", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      xPathLexer2.identifier();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("gc", token7.getTokenText());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.at();
      Token token9 = xPathLexer1.comma();
      assertEquals(";", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      Token token10 = xPathLexer4.colon();
      assertEquals("%", token10.getTokenText());
      
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("$g", token11.getTokenText());
      
      Token token12 = xPathLexer4.dots();
      assertEquals("c", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("Q%W#BmD:nM@<_h");
      Token token13 = xPathLexer2.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer5.at();
      assertEquals("Q", token14.getTokenText());
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.215315011708265
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.whitespace();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer1.nextToken();
      xPathLexer1.or();
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.minus();
      xPathLexer1.operatorName();
      xPathLexer0.div();
      token1.toString();
      token0.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.minus();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("C+V!G6{S{x:7GJ!");
      XPathLexer xPathLexer7 = new XPathLexer("&W3Up`ChV^");
      xPathLexer7.dollar();
      Token token2 = xPathLexer7.operatorName();
      assertNull(token2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0824682841271207
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nE>8($w5ng\"]}");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("nE", token0.getTokenText());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(">", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(26, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.2770424320924434
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.nextToken();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("!A|ci1I");
      xPathLexer2.whitespace();
      xPathLexer2.nextToken();
      xPathLexer1.mod();
      xPathLexer1.minus();
      xPathLexer0.div();
      xPathLexer2.rightBracket();
      xPathLexer1.not();
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer("%*,");
      XPathLexer xPathLexer4 = new XPathLexer("hx\"YX$)8vU");
      xPathLexer1.identifier();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.nextToken();
      xPathLexer2.nextToken();
      xPathLexer5.number();
      xPathLexer5.operatorName();
      xPathLexer5.dollar();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.dots();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.1570583132495305
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("]");
      Token token1 = xPathLexer2.nextToken();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer1.or();
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      xPathLexer1.rightParen();
      xPathLexer1.or();
      xPathLexer2.and();
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer1.or();
      Token token5 = xPathLexer1.rightParen();
      assertEquals("o", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("m", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.plus();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer2.identifierOrOperatorName();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1597412254099613
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.isIdentifierChar('~');
      xPathLexer1.whitespace();
      xPathLexer0.slashes();
      xPathLexer1.setXPath("FfdQC%mUm");
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("FfdQC%mUm");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("FfdQC%mUm");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("f", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer4.rightParen();
      xPathLexer0.div();
      xPathLexer1.and();
      Token token6 = xPathLexer2.dots();
      assertEquals("%", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.identifier();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.number();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer2.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer0.leftParen();
      Token token13 = xPathLexer2.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer5.number();
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer0.equals();
      assertEquals(21, token15.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.932818556715227
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.consume((-2699));
      xPathLexer0.at();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1133645067908273
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("]R8_>6Z*`oZ");
      Token token2 = xPathLexer0.at();
      assertEquals("]", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("m.werken.saxpath.Token", token3.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.slashes();
      assertEquals("_", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("28S");
      Token token5 = xPathLexer3.colon();
      assertEquals("2", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.identifier();
      xPathLexer3.identifierOrOperatorName();
      Token token6 = xPathLexer3.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer1.setXPath("");
      Token token7 = xPathLexer0.not();
      assertEquals(">", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token8 = xPathLexer5.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.0864152458996625
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("mX");
      xPathLexer1.setXPath("kE%gL];f");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("kE", token1.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("g", token4.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.plus();
      assertEquals("L", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("mX");
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("m", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer3.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      boolean boolean0 = xPathLexer2.isIdentifierChar('-');
      assertTrue(boolean0);
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.058946507524434
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (.)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (11) (s)", string1);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (s)");
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("j", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("!", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer2.div();
      XPathLexer xPathLexer4 = new XPathLexer("/':]F9>W,wUK2v");
      xPathLexer4.and();
      Token token6 = xPathLexer1.dots();
      assertEquals("[", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.identifier();
      assertEquals("j", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.number();
      Token token9 = xPathLexer1.plus();
      assertEquals(" ", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer6.leftParen();
      assertEquals(1, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer6.number();
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer4.equals();
      assertEquals(21, token15.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4638488009049013
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("``lCQA?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("``lCQA?", token0.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("lsy0;f");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      Token token3 = xPathLexer1.dots();
      assertEquals("f", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals(18, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("lsy0;f");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer3.comma();
      assertEquals("l", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("`", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      xPathLexer1.leftParen();
      xPathLexer4.operatorName();
      Token token7 = xPathLexer0.leftParen();
      assertEquals("`", token7.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.248894906349719
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.isIdentifierChar('~');
      xPathLexer1.whitespace();
      xPathLexer1.rightParen();
      xPathLexer1.setXPath(")M?");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.minus();
      xPathLexer2.number();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer2.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.operatorName();
      xPathLexer1.not();
      xPathLexer1.dots();
      xPathLexer0.colon();
      xPathLexer1.comma();
      xPathLexer0.pipe();
      Token token0 = xPathLexer1.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8507101222285098
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("mX");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      String string0 = "]bV5W0D}y1|&%(aJ";
      xPathLexer1.setXPath("]bV5W0D}y1|&%(aJ");
      xPathLexer1.slashes();
      xPathLexer0.consume((-214));
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("mX");
      xPathLexer2.slashes();
      xPathLexer1.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer2.minus();
      xPathLexer2.not();
      xPathLexer0.rightParen();
      xPathLexer2.div();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.310310855731886
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("!A|ci1I");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer1.whitespace();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("|", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("c", token2.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.not();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("W:`uh\"Q@0i(O:{v}_");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("i1I", token5.getTokenText());
      
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer3.operatorName();
      Token token7 = xPathLexer2.nextToken();
      assertEquals(":", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals("T", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer4.colon();
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5096944623054747
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("?^lH:U6E-}O 9Cm");
      XPathLexer xPathLexer2 = new XPathLexer("?^lH:U6E-}O 9Cm");
      xPathLexer2.nextToken();
      xPathLexer1.or();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer0.div();
      Token token1 = xPathLexer2.minus();
      assertEquals(6, token1.getTokenType());
      assertEquals("?", token1.getTokenText());
      
      xPathLexer0.operatorName();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("^l", token2.getTokenText());
      
      xPathLexer0.div();
      xPathLexer2.not();
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("?^lH:U6E-}O 9Cm");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer3.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals("?", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("U6E-", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer1.nextToken();
      xPathLexer0.notEquals();
      Token token9 = xPathLexer1.notEquals();
      assertEquals("^l", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1519267932728
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.slashes();
      assertEquals("m", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      Token token6 = xPathLexer0.not();
      assertEquals("e", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.or();
      char char0 = xPathLexer0.LA((-5));
      assertEquals('T', char0);
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9289446124533982
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("s.Ij<2l!j");
      xPathLexer1.setXPath("MW8k%-q|1");
      xPathLexer1.rightBracket();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer(";Br8ZY{qy");
      xPathLexer3.not();
      xPathLexer1.nextToken();
      xPathLexer2.consume(1857);
      xPathLexer3.pipe();
      xPathLexer0.isIdentifierChar('m');
      xPathLexer1.leftBracket();
      xPathLexer0.setXPath("s.Ij<2l!j");
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer3.nextToken();
      xPathLexer2.rightParen();
      xPathLexer1.nextToken();
      xPathLexer3.consume(1857);
      xPathLexer0.colon();
      xPathLexer3.pipe();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0124036879110965
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("E7", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      String string0 = token1.toString();
      assertEquals("[ (21) ([)", string0);
      
      xPathLexer0.setXPath("[ (21) ([)");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("2", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.minus();
      assertEquals(" ", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.not();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.identifier();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.not();
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer0.not();
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.3454858147934687
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("*B?%]\u0006MvquA k");
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".-");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(".", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals("-", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("B", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer1.notEquals();
      Token token7 = xPathLexer0.notEquals();
      assertEquals("?%", token7.getTokenText());
      assertEquals(22, token7.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-LA{k8Z!(#m<S^b ");
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-343));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7605689774886015
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("*B?%]\u0006MvquA k");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer1.equals();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.118738283096631
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.equals();
      token0.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (21) ([)", string0);
      
      xPathLexer0.slashes();
      xPathLexer0.setXPath("Wn");
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("W", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[OUW5gFQBjCAh_&");
      xPathLexer1.slashes();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals("O", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer1.or();
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.plus();
      assertEquals("U", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals("5", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.and();
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("g", token10.getTokenText());
      
      xPathLexer2.operatorName();
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("[ (21) ([)");
      xPathLexer4.mod();
      Token token12 = xPathLexer4.identifierOrOperatorName();
      assertEquals("", token12.getTokenText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830765985945598
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("`tA9");
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.colon();
      assertEquals("`", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals("tA9", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.div();
      xPathLexer1.rightBracket();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.div();
      Token token6 = xPathLexer1.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1544767347760754
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (21) ([)", string0);
      
      Token token3 = xPathLexer0.colon();
      String string1 = token3.toString();
      assertEquals("[ (18) (H)", string1);
      
      xPathLexer0.setPreviousToken(token3);
      token0.toString();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.mod();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("d", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.isIdentifierChar('0');
      xPathLexer0.setXPath("omu");
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals("m", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer0.consume((-1462));
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.literal();
      assertNull(token11);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('M');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.1272848178000263
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.consume(0);
      XPathLexer xPathLexer1 = new XPathLexer("g&bl=8*>g..Kh>.CxN");
      xPathLexer1.nextToken();
      xPathLexer1.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer1.pipe();
      xPathLexer1.isIdentifierChar('m');
      xPathLexer0.leftBracket();
      xPathLexer0.setXPath("");
      xPathLexer1.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer1.rightParen();
      xPathLexer1.nextToken();
      xPathLexer0.consume((-2));
      xPathLexer0.colon();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9120595319274682
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "6+Q59zh(X)Z>[";
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      int int0 = 19;
      xPathLexer0.consume(19);
      xPathLexer0.setXPath("L^BfkKU%0idZ[v^f;{");
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.6843512480946206
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.slashes();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("s.Ij<2l!j");
      xPathLexer1.nextToken();
      xPathLexer1.consume(13);
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("E$j-qax-4-9dVy0$");
      xPathLexer3.notEquals();
      xPathLexer1.dots();
      xPathLexer0.setXPath("j&Xf2<-;%fOECDvo");
      xPathLexer0.rightParen();
      xPathLexer4.nextToken();
      xPathLexer0.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.consume((-1));
      xPathLexer4.dots();
      xPathLexer4.dots();
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer5.identifierOrOperatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0052436680684083
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("mX");
      xPathLexer1.setXPath("mX");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer1.setXPath("]bV5W0D}y1|&%(aJ");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer1.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer2.dollar();
      xPathLexer0.doubleColon();
      xPathLexer2.minus();
      xPathLexer2.not();
      xPathLexer0.rightParen();
      xPathLexer2.div();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer3.plus();
      xPathLexer2.comma();
      xPathLexer0.pipe();
      xPathLexer1.plus();
      xPathLexer2.mod();
      xPathLexer1.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-670));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.9265494977176751
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("``lCQA?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("``lCQA?", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.not();
      assertEquals("`", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.colon();
      Token token3 = xPathLexer2.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.3020152338393225
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.setXPath("-h;+dD");
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.rightParen();
      assertEquals("h", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals(";", token10.getTokenText());
      
      Token token11 = xPathLexer0.dots();
      assertEquals("+", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals("d", token12.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.relationalOperator();
      Token token13 = xPathLexer1.leftParen();
      assertEquals(1, token13.getTokenType());
      
      Token token14 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8092290416446195
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("?)%5&Y?6L;%");
      xPathLexer1.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.comma();
      xPathLexer0.nextToken();
      xPathLexer2.notEquals();
      xPathLexer1.slashes();
      xPathLexer2.whitespace();
      xPathLexer2.identifier();
      xPathLexer3.plus();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9515645070907508
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("]");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("]", token1.getTokenText());
      
      xPathLexer1.or();
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("co", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer1.div();
      Token token5 = xPathLexer1.rightParen();
      assertEquals("m", token5.getTokenText());
      
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("^HU0T9-?^c(HO`");
      Token token6 = xPathLexer0.nextToken();
      assertEquals("", token6.getTokenText());
      
      xPathLexer2.dots();
      xPathLexer2.nextToken();
      xPathLexer2.operatorName();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(".", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      xPathLexer2.rightParen();
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals("we", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9233759588813082
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("N5", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.3638433768222873
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.consume((-3292));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.344621881747362
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("ObI%8Ae]E");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.3913010585446557
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(")", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals(" (", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token3 = xPathLexer1.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8249352556416927
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9qr*NZm");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("*", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.minus();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("Z", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("m", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.2386316589664288
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.consume((-1815));
      xPathLexer1.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.1039839527998936
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      XPathLexer xPathLexer1 = new XPathLexer("!A|ci1I");
      xPathLexer1.nextToken();
      xPathLexer0.or();
      Token token0 = xPathLexer1.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(17, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("c", token2.getTokenText());
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.div();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("N", token3.getTokenText());
      
      xPathLexer1.not();
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer2.number();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.rightParen();
      assertEquals("I", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer1.leftParen();
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer2.operatorName();
      Token token11 = xPathLexer0.at();
      assertEquals("5", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8126393605104574
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer1.colon();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("%", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer1.not();
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      Token token3 = xPathLexer2.nextToken();
      assertEquals("%$gc;'y4=zl[^\"5+", token3.getTokenText());
      
      xPathLexer1.colon();
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.number();
      Token token4 = xPathLexer3.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("%", token6.getTokenText());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals("$", token7.getTokenText());
      
      xPathLexer1.leftParen();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer1.number();
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("g", token9.getTokenText());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.056474781190351
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n^b??");
      xPathLexer0.at();
      xPathLexer0.consume((-805));
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.8428094694336568
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Ij", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("2", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.022256750898047
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      String string0 = "rKJ#:O73SbIGh";
      xPathLexer0.setXPath("rKJ#:O73SbIGh");
      Token token0 = xPathLexer0.rightParen();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      int int0 = (-1137);
      xPathLexer0.consume((-1137));
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("rKJ#:O73SbIGh");
      xPathLexer1.pipe();
      xPathLexer1.number();
      xPathLexer1.dots();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.9285812487759073
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer2.or();
      xPathLexer2.notEquals();
      xPathLexer2.nextToken();
      xPathLexer1.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      xPathLexer2.rightParen();
      xPathLexer0.or();
      xPathLexer1.and();
      xPathLexer1.doubleColon();
      xPathLexer1.or();
      xPathLexer2.rightParen();
      xPathLexer2.at();
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer3.plus();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2800833495053956
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("mX");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer1.setXPath("]bV5W0D}y1|&%(aJ");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("mX");
      xPathLexer2.slashes();
      xPathLexer1.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer2.minus();
      xPathLexer2.not();
      xPathLexer0.rightParen();
      xPathLexer2.div();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer1.rightParen();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer2.number();
      xPathLexer3.plus();
      xPathLexer2.comma();
      xPathLexer0.pipe();
      xPathLexer3.rightParen();
      xPathLexer3.leftParen();
      xPathLexer0.colon();
      xPathLexer1.number();
      xPathLexer3.equals();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.2644374486524708
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("mX");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer1.setXPath("]bV5W0D}y1|&%(aJ");
      xPathLexer1.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("mX");
      xPathLexer2.slashes();
      xPathLexer1.rightBracket();
      xPathLexer2.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer2.minus();
      xPathLexer2.not();
      xPathLexer0.rightParen();
      xPathLexer2.div();
      xPathLexer0.and();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer2.number();
      xPathLexer3.plus();
      xPathLexer2.comma();
      xPathLexer0.pipe();
      xPathLexer3.rightParen();
      xPathLexer3.leftParen();
      xPathLexer0.colon();
      xPathLexer1.number();
      xPathLexer3.equals();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2287439686773984
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      xPathLexer0.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.minus();
      xPathLexer1.operatorName();
      xPathLexer0.div();
      xPathLexer1.rightBracket();
      xPathLexer0.not();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      xPathLexer2.identifier();
      xPathLexer0.nextToken();
      xPathLexer1.number();
      xPathLexer1.operatorName();
      xPathLexer2.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer2.notEquals();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.colon();
      Token token1 = xPathLexer3.at();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.929645068461708
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (.)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.slashes();
      token0.toString();
      token2.toString();
      token0.toString();
      String string1 = token2.toString();
      assertEquals("[ (11) (I)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("rpo");
      xPathLexer0.nextToken();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("rpo", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(7, token5.getTokenType());
      assertEquals("<", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5709880939809884
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (s)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume(77);
      xPathLexer2.setXPath("',3 KWu;WH`J\u0007");
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("I", token3.getTokenText());
      
      xPathLexer2.operatorName();
      Token token4 = xPathLexer2.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("'", token4.getTokenText());
      
      xPathLexer1.slashes();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer0.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer0.dots();
      assertEquals("<", token6.getTokenText());
      
      xPathLexer0.setXPath("");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals(32, token8.getTokenType());
      assertEquals(",", token8.getTokenText());
      
      xPathLexer4.consume(77);
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer2.colon();
      assertEquals("3", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.148618329448358
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("daBh.pM0X:6");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("a", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("B", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("h", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.setXPath(" #;#C&,*");
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("#;#C&,*", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("daBh.pM0X:6");
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("aBh.pM0X", token8.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("C", token11.getTokenText());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(":", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
      
      xPathLexer3.leftParen();
      xPathLexer2.operatorName();
      Token token13 = xPathLexer1.leftParen();
      assertEquals("6", token13.getTokenText());
      
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.1170392617972347
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("E7[PH*d`G'");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer3.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer3.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer1.rightParen();
      Token token5 = xPathLexer3.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setXPath("7a1");
      Token token6 = xPathLexer2.nextToken();
      assertEquals("E7", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer3.and();
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      xPathLexer3.operatorName();
      Token token9 = xPathLexer2.rightParen();
      assertEquals("P", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      xPathLexer2.nextToken();
      Token token10 = xPathLexer2.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token12 = xPathLexer5.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer2.at();
      assertEquals("d", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer0.rightBracket();
      assertEquals(4, token14.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.7081183605006633
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(".U/G8c");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("E7[PH*d`G'");
      xPathLexer1.at();
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer(".U/G8c");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dots();
      xPathLexer3.nextToken();
      xPathLexer0.rightBracket();
      xPathLexer3.dots();
      XPathLexer xPathLexer5 = new XPathLexer(".U/G8c");
      xPathLexer4.colon();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer7.or();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer5.at();
      xPathLexer7.comma();
      xPathLexer7.minus();
      xPathLexer7.leftParen();
      XPathLexer xPathLexer10 = new XPathLexer("[ (");
      Token token0 = xPathLexer10.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.0394283733169307
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(")", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token3);
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token4 = xPathLexer1.notEquals();
      assertEquals(") ", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer4.not();
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer(") (");
      Token token7 = xPathLexer3.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("(", token9.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6782338600142743
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d..ky%");
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("d..ky%");
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.consume((-2180));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.2280673201139933
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals("[", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.div();
      String string0 = token0.toString();
      assertEquals("[ (15) (E7)", string0);
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("PH", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("*", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("d", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals("`", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.minus();
      Token token7 = xPathLexer0.not();
      assertEquals("'", token7.getTokenText());
      
      xPathLexer0.and();
      xPathLexer1.identifier();
      xPathLexer0.or();
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.operatorName();
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      xPathLexer1.operatorName();
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7908781196812489
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      Token token0 = xPathLexer0.slashes();
      assertEquals("c", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("P");
      XPathLexer xPathLexer2 = new XPathLexer("]");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer("]");
      Token token2 = xPathLexer4.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("]", token2.getTokenText());
      
      xPathLexer1.nextToken();
      xPathLexer2.notEquals();
      xPathLexer3.operatorName();
      xPathLexer0.div();
      xPathLexer4.rightParen();
      xPathLexer3.and();
      XPathLexer xPathLexer5 = new XPathLexer("A5bh_#Cme)Dqno<y-j&");
      Token token3 = xPathLexer2.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer5.operatorName();
      Token token4 = xPathLexer1.nextToken();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer4.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer3.comma();
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0664767040138545
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.equals();
      token0.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.leftBracket();
      token1.toString();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      token0.toString();
      token1.toString();
      Token token2 = xPathLexer0.colon();
      token2.toString();
      xPathLexer0.not();
      token2.toString();
      token2.toString();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.minus();
      xPathLexer0.setXPath("W$>(");
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.relationalOperator();
      assertNull(token3);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.8300366046775602
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pKG>gx@XrK8yux");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      assertEquals("K", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (p)", string0);
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(9, token2.getTokenType());
      assertEquals(">", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.slashes();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("g", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.not();
      Token token6 = xPathLexer2.rightParen();
      assertEquals(2, token6.getTokenType());
      
      xPathLexer2.and();
      Token token7 = xPathLexer0.identifier();
      assertEquals("x", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.or();
      Token token8 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer2.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals("@", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer1.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer1.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.6766102776020417
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("A*q=%J?D");
      xPathLexer1.plus();
      xPathLexer0.comma();
      xPathLexer1.dots();
      xPathLexer0.dots();
      xPathLexer0.endPosition();
      xPathLexer0.getPreviousToken();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer0.colon();
      xPathLexer1.hasMoreChars();
      XPathLexer xPathLexer3 = new XPathLexer("(v6Pfz0Z}Zf??ek*E ");
      xPathLexer1.nextToken();
      xPathLexer0.or();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.isIdentifierChar('m');
      xPathLexer4.setXPath("");
      xPathLexer3.rightParen();
      xPathLexer2.nextToken();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.5412584394925044
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.slashes();
      xPathLexer0.isIdentifierStartChar('H');
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.consume((-3695));
      xPathLexer0.star();
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer3.nextToken();
      // Undeclared exception!
      try { 
        xPathLexer1.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.451897617309707
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.leftBracket();
      token0.toString();
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token1);
      int int0 = (-3695);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      xPathLexer1.consume((-3695));
      xPathLexer1.star();
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer1.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6413320147927926
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.consume((-1));
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Q5", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("z", token2.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.number();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(1, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("6", token5.getTokenText());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals("Z", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals("+", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals(">", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("oUHz@}\"L]R[");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals("[", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.029032847370903
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("=rOY^6cx^4iC9.");
      xPathLexer1.nextToken();
      xPathLexer0.consume(93);
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer1.number();
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("SJT+jfkd");
      xPathLexer2.consume();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.dots();
      xPathLexer0.setXPath("");
      xPathLexer1.rightParen();
      xPathLexer3.nextToken();
      xPathLexer4.consume(60);
      xPathLexer0.pipe();
      XPathLexer xPathLexer5 = new XPathLexer(",E");
      XPathLexer xPathLexer6 = new XPathLexer("SJT+jfkd");
      xPathLexer6.rightBracket();
      xPathLexer5.minus();
      xPathLexer2.operatorName();
      xPathLexer1.or();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0125774730055483
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("rKJ#:O73SbIGh");
      Token token1 = xPathLexer0.minus();
      assertEquals("r", token1.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("3j*!psa[(XM*");
      xPathLexer1.or();
      Token token2 = xPathLexer0.colon();
      assertEquals("#", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.rightBracket();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals(":", token5.getTokenText());
      
      xPathLexer1.div();
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("!", token7.getTokenText());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("p", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.getPreviousToken();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.030411311194492
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.rightBracket();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.consume(0);
      xPathLexer0.setXPath("d");
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer0.setXPath("d");
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      xPathLexer0.consume(0);
      xPathLexer1.dots();
      xPathLexer1.colon();
      xPathLexer1.not();
      xPathLexer1.slashes();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.920987407309605
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.div();
      xPathLexer0.consume((-2520));
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.001381183236492
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("g");
      xPathLexer2.nextToken();
      xPathLexer1.or();
      Token token1 = xPathLexer2.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer1.notEquals();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("m", token2.getTokenText());
      
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.Token", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer2.dots();
      xPathLexer2.nextToken();
      xPathLexer2.operatorName();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(13, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      xPathLexer2.rightParen();
      xPathLexer1.nextToken();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("we", token5.getTokenText());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7396876135016228
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      token1.toString();
      token1.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (.)", string0);
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.or();
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("2", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(".@W");
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals("l", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.2254642616184364
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(13, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.038925154781956
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("mX");
      xPathLexer1.setXPath("kE%gL];f");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer1.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer1.not();
      xPathLexer0.doubleColon();
      xPathLexer1.slashes();
      xPathLexer1.or();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("mX");
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      xPathLexer0.at();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.4388548041692373
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("``lCQA?");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("``lCQA?", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("`", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("nE>8($w5ng\"]}");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("nE", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(">", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("`", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("lC", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftParen();
      assertEquals("8", token6.getTokenText());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8011059289007443
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("mX");
      Token token1 = xPathLexer1.rightBracket();
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("X", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer1.nextToken();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer1.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer2.or();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.not();
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer3.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.975453390802958
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      token1.toString();
      token1.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (.)", string0);
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("j", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      assertEquals("l", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.slashes();
      xPathLexer0.or();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8101041143241257
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.slashes();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("s.Ij<2l!j");
      xPathLexer1.nextToken();
      xPathLexer1.star();
      xPathLexer0.pipe();
      xPathLexer1.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer("s.Ij<2l!j");
      xPathLexer2.dots();
      xPathLexer2.pipe();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.690873444973259
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer1.slashes();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.9322433482021415
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.mod();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.consume((-57));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.863193716636117
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("~R!");
      xPathLexer0.or();
      Token token1 = xPathLexer0.colon();
      assertEquals("~", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("R", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifier();
      xPathLexer1.or();
      xPathLexer1.identifierOrOperatorName();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("K\"^q|");
      Token token5 = xPathLexer3.not();
      assertEquals("K", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.024522411036178
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token0 = xPathLexer1.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.div();
      xPathLexer1.rightBracket();
      xPathLexer1.not();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("E7[PH*d`G'");
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      Token token3 = xPathLexer2.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer2.nextToken();
      assertEquals("E7", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.0159961188265734
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.rightParen();
      token2.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (+)", string0);
      
      xPathLexer0.slashes();
      token2.toString();
      token0.toString();
      String string1 = token2.toString();
      assertEquals("[ (2) (Q)", string1);
      
      String string2 = token0.toString();
      assertEquals("[ (4) (6)", string2);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      Token token4 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.operatorName();
      Token token5 = xPathLexer0.not();
      assertEquals("X", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (5) (+)");
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("[", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals(" ", token8.getTokenText());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.1758738287325476
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("%$gc;'y4=zl[^\"5+", token0.getTokenText());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("%$gc;'y4=zl[^\"5+");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer1.or();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("c", token3.getTokenText());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("", token4.getTokenText());
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals(1, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.notEquals();
      Token token8 = xPathLexer1.dots();
      assertEquals("%", token8.getTokenText());
      
      xPathLexer2.and();
      Token token9 = xPathLexer3.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("$", token10.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      Token token11 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token13 = xPathLexer5.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer2.slashes();
      Token token14 = xPathLexer0.dots();
      assertEquals(13, token14.getTokenType());
      
      Token token15 = xPathLexer1.slashes();
      assertEquals("g", token15.getTokenText());
      assertEquals(11, token15.getTokenType());
      
      xPathLexer5.operatorName();
      Token token16 = xPathLexer5.rightBracket();
      assertEquals(4, token16.getTokenType());
      
      Token token17 = xPathLexer4.doubleColon();
      assertEquals(19, token17.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.6851500069536696
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.rightParen();
      token2.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.slashes();
      token2.toString();
      token0.toString();
      token2.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer(")XgF");
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("[ (5) (+)");
      xPathLexer3.comma();
      xPathLexer0.pipe();
      xPathLexer1.rightParen();
      xPathLexer0.dollar();
      xPathLexer3.leftParen();
      xPathLexer3.colon();
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer("[ (4) (6)");
      xPathLexer4.number();
      xPathLexer4.equals();
      xPathLexer1.dots();
      Token token3 = xPathLexer4.or();
      assertNull(token3);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.036180327023349
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("rKJ#:O73SbIGh");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("K", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("#:", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.notEquals();
      xPathLexer0.or();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(6, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("rKJ#:O73SbIGh");
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.identifier();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.not();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.107620010216049
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.consume(19);
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.at();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer0.notEquals();
      xPathLexer1.dots();
      xPathLexer1.setXPath("j&Xf2<-;%fOECDvo");
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.consume(19);
      xPathLexer1.dots();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer1.notEquals();
      xPathLexer0.dots();
      xPathLexer0.colon();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.8672077980557606
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.consume(105);
      xPathLexer0.setXPath("cN5T!");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer2.mod();
      xPathLexer1.identifier();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      xPathLexer3.setXPath("cN5T!");
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer3.consume((-1331));
      xPathLexer3.not();
      // Undeclared exception!
      try { 
        xPathLexer3.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.141435266627897
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("6", token0.getTokenText());
      
      Token token1 = xPathLexer0.plus();
      assertEquals("+", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("Q59zh", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.not();
      assertEquals("Z", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.identifier();
      assertEquals("", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.not();
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.78823746228591
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.div();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.literal();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.dots();
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.730608421142596
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.plus();
      assertEquals("N", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("cN5T!");
      XPathLexer xPathLexer2 = new XPathLexer("~oSobxMr;");
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer2.notEquals();
      assertEquals("~o", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("]");
      Token token3 = xPathLexer3.nextToken();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.rightBracket();
      assertEquals("c", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer2.div();
      xPathLexer2.rightParen();
      xPathLexer1.or();
      xPathLexer1.and();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer1.or();
      Token token6 = xPathLexer0.rightParen();
      assertEquals("!", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("~oSobxMr;");
      Token token9 = xPathLexer5.colon();
      assertEquals("~", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer3.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer7.leftParen();
      xPathLexer5.operatorName();
      xPathLexer3.nextToken();
      Token token11 = xPathLexer3.leftParen();
      assertEquals(1, token11.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.033629566405096
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.consume(1735);
      xPathLexer0.setXPath("6+Q59zh(X)Z>[");
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.minus();
      xPathLexer0.literal();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer0.whitespace();
      xPathLexer0.minus();
      xPathLexer1.consume(114);
      XPathLexer xPathLexer2 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer2.consume((-1082));
      // Undeclared exception!
      try { 
        xPathLexer2.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.26631287512662
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-3695));
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.7070671663282133
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      xPathLexer0.leftBracket();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      String string0 = token0.toString();
      assertEquals("[ (15) (E7)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (21) ([)", string1);
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.at();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("d", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("E7[PH*d`G'");
      Token token4 = xPathLexer1.at();
      assertEquals("E", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.identifier();
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals("P", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.077999000924834
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer0.setXPath("E7[PH*d`G'");
      xPathLexer1.operatorName();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer1.slashes();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.rightBracket();
      xPathLexer1.at();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.1460631766005043
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.177174685871753
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer1.colon();
      assertEquals("c", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals("m", token6.getTokenText());
      
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("5U=9h~mzFLF");
      XPathLexer xPathLexer4 = new XPathLexer("5U=9h~mzFLF");
      xPathLexer4.nextToken();
      Token token7 = xPathLexer4.nextToken();
      assertEquals("U=9h~mzFLF", token7.getTokenText());
      
      Token token8 = xPathLexer4.number();
      assertEquals("", token8.getTokenText());
      
      xPathLexer2.operatorName();
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer4.rightParen();
      assertEquals(2, token10.getTokenType());
      assertEquals("U", token10.getTokenText());
      
      Token token11 = xPathLexer3.nextToken();
      assertEquals("5", token11.getTokenText());
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      xPathLexer2.dots();
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer2.at();
      assertEquals(16, token14.getTokenType());
      
      xPathLexer0.not();
      Token token15 = xPathLexer1.nextToken();
      assertEquals(13, token15.getTokenType());
      assertEquals(".", token15.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8724053839899608
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("rKJ#:O73SbIGh");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.plus();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("rKJ#:O73SbIGh");
      xPathLexer0.slashes();
      xPathLexer1.or();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.5876381547572396
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("E7[PH*d`G'");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.equals();
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token3);
      token0.toString();
      token0.toString();
      Token token4 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("H*", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      String string0 = token1.toString();
      assertEquals("[ (21) ([)", string0);
      
      String string1 = token5.toString();
      assertEquals("[ (11) (`)", string1);
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      String string2 = token6.toString();
      assertEquals("[ (15) (G)", string2);
      
      String string3 = token4.toString();
      assertEquals("[ (18) (d)", string3);
      
      xPathLexer0.setPreviousToken(token1);
      Token token7 = xPathLexer0.not();
      assertEquals("'", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (G)");
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.getPreviousToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.identifierOrOperatorName();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0323890985773607
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("daBh.pM0X:6");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(":", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("0=");
      Token token2 = xPathLexer1.nextToken();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.comma();
      assertEquals("6", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.8487777759295798
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.Token", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer5.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer8.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.958166784105872
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("k:%p");
      xPathLexer1.nextToken();
      xPathLexer1.or();
      Token token1 = xPathLexer1.colon();
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.div();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.not();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("E7[PH*d`G'");
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer1.operatorName();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer1.dots();
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.9943180084421734
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.equals();
      assertEquals("c", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token1 = xPathLexer1.at();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer2.rightBracket();
      assertEquals("c", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("o", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("cwMM[_P6zsZL,");
      Token token5 = xPathLexer4.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer5.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer4.minus();
      assertEquals("w", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      xPathLexer5.leftParen();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer8.operatorName();
      Token token9 = xPathLexer1.leftParen();
      assertEquals("m", token9.getTokenText());
      
      xPathLexer6.identifier();
      Token token10 = xPathLexer4.literal();
      assertEquals(27, token10.getTokenType());
      assertNotNull(token10);
      
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7635996394671123
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      assertEquals("s", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("s.Ij<2l!j");
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals(".I", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.div();
      xPathLexer1.rightBracket();
      xPathLexer1.comma();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
      
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s.Ij<2l!j");
      Token token7 = xPathLexer2.dots();
      assertEquals("s.", token7.getTokenText());
      assertEquals(14, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token8 = xPathLexer3.colon();
      assertEquals("[", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("I", token9.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.2987945119960833
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      Token token1 = xPathLexer0.rightBracket();
      token1.toString();
      String string0 = token0.toString();
      assertEquals("[ (21) ())", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (4) ( )", string1);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.not();
      assertEquals("(", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9760084617501241
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = "com.werken.saxpath.Token";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("]");
      xPathLexer2.nextToken();
      xPathLexer1.or();
      Token token0 = xPathLexer2.colon();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      xPathLexer2.setPreviousToken(token0);
      xPathLexer0.not();
      xPathLexer1.rightParen();
      xPathLexer0.and();
      xPathLexer1.plus();
      xPathLexer0.getPreviousToken();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.678706058817701
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.consume((-3998));
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.033827799518451
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.8786585142512955
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (.I)", string0);
      
      token0.toString();
      Token token2 = xPathLexer0.slashes();
      token0.toString();
      token2.toString();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("<2", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      token0.toString();
      String string1 = token2.toString();
      assertEquals("[ (11) (j)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("rpo");
      Token token4 = xPathLexer0.nextToken();
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("rpo", token5.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token6 = xPathLexer1.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("!", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.notEquals();
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.2555284731309833
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer2 = new XPathLexer("]");
      xPathLexer2.nextToken();
      xPathLexer1.or();
      xPathLexer2.colon();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer1.div();
      xPathLexer1.rightParen();
      xPathLexer2.and();
      xPathLexer0.identifier();
      xPathLexer1.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.at();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer4.equals();
      xPathLexer4.or();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-824));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.161264829910312
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.plus();
      assertEquals("+", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Q59zh", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("(X", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(")", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("Z", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(">", token5.getTokenText());
      
      Token token6 = xPathLexer0.number();
      assertEquals("", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals("[", token7.getTokenText());
      
      xPathLexer0.and();
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.or();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.8938674496976202
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.rightParen();
      token2.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      xPathLexer0.slashes();
      token2.toString();
      xPathLexer0.rightBracket();
      xPathLexer0.not();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer1.identifier();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer0.number();
      xPathLexer2.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer2.nextToken();
      xPathLexer1.notEquals();
      xPathLexer2.dots();
      xPathLexer2.at();
      Token token3 = xPathLexer1.and();
      assertNull(token3);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.070257778143627
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.not();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.1801981982330068
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-3695));
      xPathLexer0.star();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.217152821545337
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      Token token1 = xPathLexer0.rightParen();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.176802984043909
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OP{mQ(5 6?G=QWlyw%U");
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("{", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.at();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.getXPath();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.and();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.operatorName();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.6675627278827707
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(1, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("?)%5&Y?6L;%");
      Token token3 = xPathLexer1.nextToken();
      assertEquals("?)%5&Y?6L;%", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("?", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer1.comma();
      assertEquals(")", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer1.leftParen();
      xPathLexer1.operatorName();
      xPathLexer2.leftParen();
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      char char0 = xPathLexer0.LA((-1));
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.099422656315283
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.isIdentifierStartChar('Z');
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-3695));
      xPathLexer0.star();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.slashes();
      xPathLexer2.nextToken();
      xPathLexer4.mod();
      xPathLexer4.number();
      XPathLexer xPathLexer5 = new XPathLexer("cN5T!");
      xPathLexer1.minus();
      xPathLexer1.at();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.and();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.identifier();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer1.notEquals();
      xPathLexer1.consume();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.not();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=2.215881976191932
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.isIdentifierChar('~');
      xPathLexer1.whitespace();
      xPathLexer0.and();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer1.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer1.minus();
      xPathLexer1.not();
      xPathLexer1.rightParen();
      xPathLexer1.and();
      xPathLexer0.identifier();
      xPathLexer1.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer0.relationalOperator();
      xPathLexer1.leftParen();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.857673701938276
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("com.werken.saxpath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals("c", token5.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.comma();
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("om", token7.getTokenText());
      
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer3.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.5875219913335206
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("daBh.pM0X:6");
      xPathLexer0.operatorName();
      String string0 = null;
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer("daBh.pM0X:6");
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=3.2781043167856927
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token0);
      
      Token token1 = xPathLexer0.equals();
      xPathLexer0.leftBracket();
      token1.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) (cN5T)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (21) (!)", string1);
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals("cN5T", token0.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("cN5T!");
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("c", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.getXPath();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      xPathLexer2.and();
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer2.operatorName();
      Token token8 = xPathLexer1.not();
      assertEquals("N", token8.getTokenText());
      
      xPathLexer2.notEquals();
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.0325736172538162
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.or();
      xPathLexer0.currentPosition();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.getPreviousToken();
      xPathLexer0.currentPosition();
      xPathLexer0.leftParen();
      xPathLexer0.plus();
      xPathLexer0.consume((-1358));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.105296044280345
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.Token", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.consume(1);
      xPathLexer0.pipe();
      xPathLexer0.isIdentifierChar('m');
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.and();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.identifier();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer1.identifier();
      Token token11 = xPathLexer0.leftParen();
      assertEquals(1, token11.getTokenType());
      
      xPathLexer1.colon();
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer1.equals();
      Token token13 = xPathLexer0.rightParen();
      assertEquals(2, token13.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.507224662615608
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (.)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.slashes();
      token0.toString();
      token2.toString();
      token0.toString();
      String string1 = token2.toString();
      assertEquals("[ (11) (I)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("rpo");
      xPathLexer1.or();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals("rpo", token3.getTokenText());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("j<", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("2", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.leftParen();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=3.0026890089926632
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KT!pY>B3[8");
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("K", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("!", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("pY", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(">", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("3[", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals("8", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.6711069928010303
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.colon();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.comma();
      xPathLexer0.not();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("&Sr!.It'");
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("&", token10.getTokenText());
      
      Token token11 = xPathLexer1.at();
      assertEquals("S", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      xPathLexer0.comma();
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.6978288485636197
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(")", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("?)%5&Y?6L;%");
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.dots();
      Token token5 = xPathLexer1.colon();
      assertEquals("?", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals(")", token6.getTokenText());
      
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer2.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer3.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.1521318450361764
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("I", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("<", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.number();
      assertEquals("2", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("l", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.slashes();
      assertEquals("!", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.plus();
      assertEquals("j", token6.getTokenText());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer2.minus();
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.identifier();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNull(token11);
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      xPathLexer2.consume();
      xPathLexer1.operatorName();
      Token token13 = xPathLexer0.not();
      assertEquals(23, token13.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token14 = xPathLexer2.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.3119417557610724
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.slashes();
      token1.toString();
      token0.toString();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("I", token2.getTokenText());
      
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (11) (.)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      assertEquals("j", token3.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(9, int0);
      
      Token token4 = xPathLexer0.plus();
      assertEquals("<", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals("2", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("!j", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=2.745516617709168
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.slashes();
      Token token3 = xPathLexer0.identifier();
      assertEquals("j", token3.getTokenText());
      
      token2.toString();
      token2.toString();
      token0.toString();
      String string0 = token2.toString();
      assertEquals("[ (11) (I)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("2", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.or();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.not();
      assertEquals("!", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('#');
      assertFalse(boolean0);
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.6289829825611335
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.literal();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.equals();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(14, int0);
      
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.endPosition();
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.4609123309028917
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("N5", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("cN5T!");
      XPathLexer xPathLexer2 = new XPathLexer("?)%5&Y?6L;%");
      xPathLexer2.nextToken();
      Token token2 = xPathLexer2.rightBracket();
      assertEquals("?", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer2.comma();
      assertEquals("%", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.dots();
      assertEquals("N", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals("5", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.equals();
      assertEquals(21, token8.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.1921356500156366
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("?,)$!d12");
      xPathLexer1.dots();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 138
  /*Coverage entropy=3.1818802840193814
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (.)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.slashes();
      token0.toString();
      token2.toString();
      String string1 = token2.toString();
      assertEquals("[ (11) (I)", string1);
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("j", token3.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.comma();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("!", token5.getTokenText());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=2.07013043466998
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.minus();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.and();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.not();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.8760526223844884
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer1.comma();
      Token token1 = xPathLexer1.dots();
      assertEquals(14, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      int int0 = xPathLexer1.endPosition();
      assertEquals(29, int0);
      
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer3 = new XPathLexer("cN5T!");
      Token token6 = xPathLexer3.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.minus();
      assertEquals("!", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer1.and();
      xPathLexer2.identifier();
      xPathLexer3.or();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=2.4666837799090042
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (.)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.slashes();
      String string1 = token0.toString();
      assertEquals("[ (11) (s)", string1);
      
      token2.toString();
      token0.toString();
      token2.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.not();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("2", token4.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("l", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals("!", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.7248021370022484
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("``lCQA?");
      xPathLexer1.nextToken();
      xPathLexer1.nextToken();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.operatorName();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("``lCQA?");
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals("``", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer2.colon();
      assertEquals("`", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("E>^Ml]4^Q");
      Token token8 = xPathLexer3.at();
      assertEquals("E", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      int int0 = xPathLexer2.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 143
  /*Coverage entropy=2.1195203233661064
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(X)Z>[");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("6", token0.getTokenText());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Q59zh", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.consume(1735);
      xPathLexer0.setXPath("6+Q59zh(X)Z>[");
      Token token5 = xPathLexer0.at();
      assertEquals("6", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("+", token6.getTokenText());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("5", token8.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.operatorName();
      Token token9 = xPathLexer0.equals();
      assertEquals("9", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.consume();
      Token token10 = xPathLexer0.minus();
      assertEquals("h", token10.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.at();
      xPathLexer1.rightBracket();
      xPathLexer1.at();
      xPathLexer0.getXPath();
      Token token11 = xPathLexer1.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
      
      xPathLexer1.and();
      Token token14 = xPathLexer0.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      xPathLexer0.or();
      Token token15 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token15.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.hasMoreChars();
      Token token16 = xPathLexer1.leftParen();
      assertEquals(1, token16.getTokenType());
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.7250519926054362
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.and();
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.not();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.colon();
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.getPreviousToken();
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.733691273141795
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cN5T!");
      xPathLexer0.and();
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 146
  /*Coverage entropy=2.040829833746393
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";^[Q<OXWUv&");
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.slashes();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer1.at();
      xPathLexer1.minus();
      xPathLexer1.not();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.and();
      xPathLexer2.star();
      xPathLexer0.or();
      xPathLexer2.not();
      xPathLexer1.not();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer4.colon();
      xPathLexer3.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=2.1771851357248675
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer1.colon();
      xPathLexer0.nextToken();
      xPathLexer1.minus();
      xPathLexer1.operatorName();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.rightBracket();
      xPathLexer1.not();
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("5U=9h~mzFLF");
      XPathLexer xPathLexer4 = new XPathLexer("5U=9h~mzFLF");
      xPathLexer4.nextToken();
      xPathLexer4.nextToken();
      xPathLexer4.number();
      xPathLexer3.operatorName();
      xPathLexer2.operatorName();
      xPathLexer2.nextToken();
      xPathLexer4.rightParen();
      xPathLexer3.nextToken();
      xPathLexer0.notEquals();
      xPathLexer2.dots();
      xPathLexer0.colon();
      xPathLexer2.at();
      xPathLexer0.not();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 148
  /*Coverage entropy=2.7603325074582976
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("03:4_9_^i}vw");
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 149
  /*Coverage entropy=2.8599481574305257
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
  }

  /**
  //Test case number: 150
  /*Coverage entropy=3.4311323112494865
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.and();
      xPathLexer0.or();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer1.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer1.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.div();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer1.leftBracket();
      assertEquals(".", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer2.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.comma();
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 151
  /*Coverage entropy=3.541744725470334
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("6+Q59zh(3)Z>[");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.plus();
      token0.toString();
      Token token2 = xPathLexer0.rightParen();
      token2.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (5) (+)", string0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
      
      token2.toString();
      token0.toString();
      String string1 = token2.toString();
      assertEquals("[ (2) (Q)", string1);
      
      String string2 = token0.toString();
      assertEquals("[ (4) (6)", string2);
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("9", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("zh", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("(3", token6.getTokenText());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(")", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("Z", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 152
  /*Coverage entropy=1.304951367852345
  */
  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (.)", string0);
      
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      String string1 = token0.toString();
      assertEquals("[ (11) (s)", string1);
      
      xPathLexer0.slashes();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("2l", token4.getTokenText());
  }

  /**
  //Test case number: 153
  /*Coverage entropy=3.247079460968214
  */
  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertNotNull(token4);
      
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
  }

  /**
  //Test case number: 154
  /*Coverage entropy=2.3091284249846264
  */
  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.or();
      xPathLexer0.number();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.dots();
      xPathLexer1.and();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer1.operatorName();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer3.star();
      xPathLexer3.slashes();
      xPathLexer3.leftBracket();
      xPathLexer1.slashes();
      xPathLexer3.notEquals();
      xPathLexer2.number();
      xPathLexer2.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token0 = xPathLexer4.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 155
  /*Coverage entropy=2.388765480802861
  */
  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<");
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(7, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      assertNotNull(token0);
  }

  /**
  //Test case number: 156
  /*Coverage entropy=2.8577542127179325
  */
  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]+G");
      xPathLexer0.doubleColon();
      xPathLexer0.not();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 157
  /*Coverage entropy=3.0850270633913377
  */
  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s.Ij<2l!j");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token1.toString();
      assertEquals("[ (22) (.I)", string0);
      
      String string1 = token0.toString();
      assertEquals("[ (11) (s)", string1);
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (22) (.I)");
      Token token4 = xPathLexer0.rightParen();
      assertEquals("l", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 158
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }
}
