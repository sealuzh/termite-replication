/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 00:56:30 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.event.AdjustmentListener;
import java.awt.event.ContainerListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyListener;
import java.awt.event.InputMethodListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.WindowFocusListener;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLWarning;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.NavigableSet;
import java.util.Stack;
import java.util.TreeSet;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLayeredPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaDetailProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.sql.TableInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.fw.util.log.ILoggerFactory;
import net.sourceforge.squirrel_sql.fw.util.log.LoggerController;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("dbcopytest", "dbcopytest");
      MockFile mockFile1 = new MockFile("1", "Class Name == null");
      MockFile mockFile2 = new MockFile("])gejc");
      mockFile1.createNewFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      MockFile mockFile3 = new MockFile("PUK/!]0~");
      MockFile mockFile4 = new MockFile("dbcopytest");
      MockFile mockFile5 = new MockFile((String) null, "=<Xwk';n_x_@WqX.M9l");
      MockFile mockFile6 = new MockFile(mockFile1, "PUK/!]0~");
      mockFile6.toURI();
      mockFile6.setReadable(true);
      mockFile6.delete();
      fileWrapperFactoryImpl0.create((File) mockFile5);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("=<Xwk';n_x_@WqX.M9l", ".rou/B-8*v,@VM.eD7");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("Class Name == null");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ITableInfo iTableInfo0 = null;
      String string0 = "ok";
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-22));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.setGlobalState(3);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias0.setSchemaProperties((SQLAliasSchemaProperties) null);
      sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("64b1784d:16e8123a690:-6381", uidIdentifier0.toString());
      
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATABASE_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[1];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      sQLAliasSchemaProperties0.setGlobalState((-613));
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      sQLDriverPropertyCollection0.clear();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriverProperty[] sQLDriverPropertyArray0 = sQLDriverPropertyCollection0.getDriverProperties();
      uidIdentifier0.setString("8){gx");
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      sQLDriverPropertyCollection0.clear();
      sQLDriverPropertyCollection0.getDriverProperties();
      SQLWarning sQLWarning0 = new SQLWarning();
      sQLDriverPropertyCollection0.removeDriverProperty("8){gx");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "8){gx";
      stringArray0[1] = "lewgoth";
      stringArray0[2] = "lewgoth";
      sQLDriverPropertyCollection0.setDriverProperties(sQLDriverPropertyArray0);
      sQLDriverPropertyCollection0.removeDriverProperty("lewgoth");
      stringArray0[3] = "8){gx";
      stringArray0[4] = "8){gx";
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = sQLAlias0.getDriverPropertiesClone();
      sQLAlias0.setDriverProperties(sQLDriverPropertyCollection1);
      stringArray0[3] = "8){gx";
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier0);
      SQLDriver sQLDriver2 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedHashSet<TableInfo> linkedHashSet0 = new LinkedHashSet<TableInfo>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      LinkedHashSet<TableInfo> linkedHashSet1 = new LinkedHashSet<TableInfo>();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      treeSet0.lower(integer0);
      Integer integer1 = JLayeredPane.FRAME_CONTENT_LAYER;
      treeSet0.add(integer1);
      linkedHashSet0.retainAll(linkedHashSet1);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-4267));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.DATATYPE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.DATABASE_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-1883));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "wq6^,A3ZY", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("1", "])gejc");
      MockFile mockFile1 = new MockFile("])gejc");
      mockFile0.createNewFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      MockFile mockFile2 = new MockFile("PUK/!]0~");
      MockFile mockFile3 = new MockFile("dbcopytest");
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getUserPreferencesFile();
      fileWrapperFactoryImpl0.create(file0);
      MockFile mockFile4 = new MockFile((String) null, "=<Xwk';n_x_@WqX.M9l");
      MockFile mockFile5 = new MockFile(mockFile0, "PUK/!]0~");
      mockFile5.toURI();
      mockFile5.setReadable(true);
      mockFile5.delete();
      fileWrapperFactoryImpl0.create((File) mockFile4);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("=<Xwk';n_x_@WqX.M9l", ".rou/B-8*v,@VM.eD7");
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("])gejc");
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 16);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.revalidate();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setLabelFor((Component) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster1, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) aWTEventMulticaster2);
      DefaultCaret defaultCaret1 = (DefaultCaret)AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) aWTEventMulticaster3);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((FocusListener) aWTEventMulticaster0, (FocusListener) basicComboBoxEditor_UIResource0);
      DefaultCaret defaultCaret3 = (DefaultCaret)AWTEventMulticaster.remove((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret2);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((MouseMotionListener) aWTEventMulticaster1, (MouseMotionListener) defaultCaret3);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getLeafIcon();
      DatabaseObjectType.createNewDatabaseObjectType("GHya");
      DatabaseObjectType.createNewDatabaseObjectType("GHya");
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 8026;
      int int1 = new Integer(8026);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "i*Tu@PsEF~=5";
      stringArray0[1] = "XDGUja";
      stringArray0[2] = "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy";
      stringArray0[3] = "=$T(;2ksURh{#-\"1";
      stringArray0[4] = "zM[gnl}}mMl'z6U)5?";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2002);
      assertFalse(boolean0);
      
      boolean boolean1 = DBUtil.typesAreEquivalent(2002, 2);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("{D!5DcKI?");
      uidIdentifier0.setString("Error loading keywords");
      String string0 = "9D:cN dqk`4D:";
      uidIdentifier0.setString("9D:cN dqk`4D:");
      uidIdentifier0.setString("9D:cN dqk`4D:");
      uidIdentifier0.setString("9D:cN dqk`4D:");
      uidIdentifier0.setString("9D:cN dqk`4D:");
      uidIdentifier0.setString("9D:cN dqk`4D:");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString(")N");
      uidIdentifier1.setString("org.jfree.data.statistics.DefaultMultiValueCategoryDataset");
      uidIdentifier0.setString("[&zW");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Y[G0Jb0c2{r}", " NOT NULL");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, ")N");
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        dBCopyPlugin0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "NON-UNIQUE";
      DBUtil.setLastStatementValues("NON-UNIQUE");
      DBUtil.getLastStatementValues();
      ISession iSession0 = null;
      String string1 = "Vy'/ZCV'ZT&ZG|%6w";
      String string2 = " schema=";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableInfo tableInfo0 = null;
      try {
        tableInfo0 = new TableInfo("mV}A|L6SZ-", "DatabaseObjectType.table", "lewgoth", "mV}A|L6SZ-", "DatabaseObjectType.table", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedHashSet<TableInfo> linkedHashSet0 = new LinkedHashSet<TableInfo>();
      linkedHashSet0.clear();
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Integer.min(3560, 3560);
      treeSet0.add(integer1);
      NavigableSet<Integer> navigableSet0 = treeSet0.descendingSet();
      linkedHashSet0.parallelStream();
      Integer integer2 = JLayeredPane.MODAL_LAYER;
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer.getInteger("Could not get table types", integer3);
      Integer integer4 = JLayeredPane.FRAME_CONTENT_LAYER;
      treeSet0.add(integer0);
      linkedHashSet0.retainAll(navigableSet0);
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("%Y]?n");
      uidIdentifier0.setString("length");
      uidIdentifier0.setString("charindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("charindex(");
      uidIdentifier1.setString("<1 ].*B`|,D`ZM%H");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("charindex(");
      uidIdentifier2.setString("%Y]?n");
      uidIdentifier0.setString("Successfully closed session: ");
      uidIdentifier2.setString("=8#]:5`'#A(");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier3.setString("%Y]?n");
      uidIdentifier3.setString((String) null);
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString(">I|]VRrZJ,");
      uidIdentifier0.setString("%Y]?n");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString(">I|]VRrZJ,");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      uidIdentifier2.setString("ndLfFv]wa_H");
      UidIdentifier uidIdentifier8 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = 8000;
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "jAxBf", (-4), ",\n", 361, 8, 300, 300, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1373), 1636, "bmXE;mJgB0^W2=|");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.VIEW;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PROC_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      DBUtil.isBinaryType(tableColumnInfo0);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType((-4), tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 8000;
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 8000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CallableStatement callableStatement0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      uidIdentifier0.setString("&<W6%y");
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString("cXWHYLX");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("cXWHYLX", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1618, "org.hibernate.PropertyNotFoundException", 1618, (-245), 586, (-62), "org.hibernate.PropertyNotFoundException", "&BWM%y", 586, (-245), (String) null);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SESSION;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SCHEMA;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDT_TYPE_DBO;
      DBUtil.typesAreEquivalent((-7), 19);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 19);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      stack0.setSize(81);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack0);
      List<ITableInfo> list1 = DBUtil.convertObjectToTableList(list0);
      assertEquals(81, list1.size());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      linkedList0.add((IDatabaseObjectInfo) foreignKeyInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$873190091 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setLabelFor(defaultTreeCellRenderer1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertFalse(dBCopyPlugin0.allowsSessionStartedInBackground());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener2 = AWTEventMulticaster.remove(inputMethodListener0, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      InputMethodListener inputMethodListener3 = AWTEventMulticaster.add(inputMethodListener2, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add(inputMethodListener3, (InputMethodListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setLabelFor(defaultTreeCellRenderer0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("Dan Dragut", dBCopyPlugin0.getContributors());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.unload();
      dBCopyPlugin1.getWebSite();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "XMhyI2`zpf1hl$w\":", (String) null, ",\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DomainOrder.ASCENDING", "2-vs~`{", "", "<P.WA>?VCiv8<~Tx{", 1110, "9 T=6AY/w/Ls;](A7}", 11, 1003, 11, (-1866), "$listlength", "<P.WA>?VCiv8<~Tx{", 16, 73, "");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      Integer integer0 = new Integer(5);
      System.setCurrentTimeMillis(16);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Gt:9+vxzp,@~x+]F,", "", "5e@Wzu'4Z8", "", 2004, "Gt:9+vxzp,@~x+]F,", 2004, 18, 51, 18, "5e@Wzu'4Z8", "Gt:9+vxzp,@~x+]F,", 1669, 65532, "5e@Wzu'4Z8");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.888599504919186
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.createFolder(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName((String) null);
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ZG$", "60&S6R6}tDl?. 4(O2;", "ZG$", 547, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-7), 36, 2000, (-7), "ZG$", "(/HH\"|'@*'>w", (-273), 5, "Opening next  nested jar: ");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FUNCTION;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType("~4!,(.U3w@xzGi)y");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("");
      dBCopyPlugin0.setPasteMenuEnabled(true);
      DatabaseObjectType.createNewDatabaseObjectType("(/HH\"|'@*'>w");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
      iDatabaseObjectInfoArray0[0] = iDatabaseObjectInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) tableColumnInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = sQLAlias0.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      sQLDriverPropertyCollection0.clear();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      sQLDriverPropertyCollection0.getDriverProperties();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("\rCz26FqKzP}}7qpJ$");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier2.setString("iEe{j0#u#O>\b22u8^");
      uidIdentifier4.setString("JComponent == null");
      sQLDriverPropertyCollection0.removeDriverProperty("JComponent == null");
      System.setCurrentTimeMillis(0L);
      SQLDriver sQLDriver1 = new SQLDriver(uidIdentifier4);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Integer integer0 = new Integer((-1345));
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("U", "U", "q'Px'* f\"LIlha", ".7*OpeijD", 95, "faq.html", 262, 95, 95, (-21), "0", "U", 95, 1178, "q'Px'* f\"LIlha");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseObjectType) null).when(foreignKeyInfo0).getDatabaseObjectType();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      List<ITableInfo> list0 = new LinkedList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject(foreignKeyInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "4.x}{IZfd", "4.x}{IZfd", "4.x}{IZfd", 334, "Gs^iE|K;Fm/b7l3", (-3003), (-2617), (-3003), 0, (String) null, "Gs^iE|K;Fm/b7l3", (-2617), (-1956), "4.x}{IZfd");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("4.x}{IZfd", string0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("}?Q/<D3L");
      uidIdentifier0.setString("lnUgth");
      uidIdentifier0.setString("charindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("charindex(");
      uidIdentifier1.setString("<1 ].*B`|,D`ZM%H");
      uidIdentifier1.setString("QA)");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("charindex(");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("}?Q/<D3L");
      uidIdentifier1.setString("<1 ].*B`|,D`ZM%H");
      uidIdentifier2.setString("F{|(&4_GQCzv4+2!'f");
      uidIdentifier2.setString("}?Q/<D3L");
      uidIdentifier0.setString("<:C%9%2+");
      uidIdentifier2.setString("<1 ].*B`|,D`ZM%H");
      uidIdentifier3.setString("}?Q/<D3L");
      uidIdentifier3.setString("<1 ].*B`|,D`ZM%H");
      uidIdentifier0.setString("e7Um");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier3.setString("}?Q/<D3L");
      uidIdentifier1.setString("r2a44WiX");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "dg>.CtY.", (ITableInfo) null, 58);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.unload();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Nm8I^bZL", ". Skipping FK constraint", "Nm8I^bZL", "Fs#*&<A9fh,O-0", 2004, ". Skipping FK constraint", 2004, 2004, 2004, 128, ". Skipping FK constraint", ". Skipping FK constraint", (-1622), (-2078), "Fs#*&<A9fh,O-0");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.VIEW;
      DatabaseObjectType.createNewDatabaseObjectType("TABLE");
      DatabaseObjectType.createNewDatabaseObjectType("Nm8I^bZL");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("D.pp{7<(a|r<;BlJw");
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint");
      databaseObjectType2.getIcon();
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("^;o");
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("4(YDG");
      DatabaseObjectType.createNewDatabaseObjectType("Nm8I^bZL");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ALTjR TABLE $tableName$ DROP COLUMN $columnName$ $cascade$", "nIx[,MnM|8{6iXg8l", "p", "Av%n&n", (byte) (-3), "M5/`/KT", (-437), (-1502), 10005, 1679, ". Skipping FK constraint", "nIx[,MnM|8{6iXg8l", (byte)104, (byte)75, "M5/`/KT");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("Av%n&n");
      DatabaseObjectType.createNewDatabaseObjectType("nIx[,MnM|8{6iXg8l");
      DatabaseObjectType.createNewDatabaseObjectType("p");
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint");
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint");
      DatabaseObjectType.createNewDatabaseObjectType("M5/`/KT", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("M5/`/KT");
      ImageIcon imageIcon0 = (ImageIcon)databaseObjectType0.getIcon();
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("ALTjR TABLE $tableName$ DROP COLUMN $columnName$ $cascade$");
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("yp]0PIKr", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType("])gejc");
      DatabaseObjectType.createNewDatabaseObjectType(".D");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.VIEW;
      byte[] byteArray0 = new byte[0];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DatabaseObjectType.createNewDatabaseObjectType("SdD,pU");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      DebugGraphics debugGraphics0 = new DebugGraphics();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType(tableColumnInfoArray0[7], (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-56);
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte) (-65);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "r.:a2^5pv[zs6_kRYko", "]#H'L`|$6d'_tFx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ALTjR TABLE $tableName$ DROP COLUMN $columnName$ $cascade$", "l}_C+T6/&;", (String) null, (String) null, 2021, "Z1cdTsq/HT^", (byte) (-3), (byte)104, (-1782), 6, "nIx[,Mnv|8{6>Xg8l", "!t7Z ~zrz$k2B", (byte) (-55), 221, (String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.VIEW;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("QgR3o");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("QgR3o");
      databaseObjectType3.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("ALTjR TABLE $tableName$ DROP COLUMN $columnName$ $cascade$", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("zEv3C9wRDP~]=4");
      DatabaseObjectType.createNewDatabaseObjectType("Z1cdTsq/HT^");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.add(mouseMotionListener0, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener2 = AWTEventMulticaster.remove(mouseMotionListener1, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener3 = AWTEventMulticaster.add(mouseMotionListener0, mouseMotionListener2);
      MouseMotionListener mouseMotionListener4 = AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, mouseMotionListener3);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener5 = AWTEventMulticaster.remove(mouseMotionListener4, (MouseMotionListener) defaultCaret1);
      MouseMotionListener mouseMotionListener6 = AWTEventMulticaster.add(mouseMotionListener1, mouseMotionListener5);
      defaultTreeCellRenderer0.removeMouseMotionListener(mouseMotionListener6);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.setLabelFor(defaultTreeCellRenderer2);
      defaultTreeCellRenderer2.getLeafIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.dropTable("ALTER TABLE ", "ALTER TABLE ", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ISession) null, true, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("%Y]?n");
      uidIdentifier0.setString("length");
      uidIdentifier0.setString("charindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("charindex(");
      uidIdentifier0.setString("<1 ].*B`|,D`ZM%H");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("charindex(");
      uidIdentifier2.setString("%Y]?n");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString("}NLfzC0%\"lK~@Bt'");
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString(">I|]VRrZJ,");
      uidIdentifier3.setString("%Y]?n");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString(">I|]VRrZJ,");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      defaultTreeCellRenderer0.removeMouseMotionListener((MouseMotionListener) null);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      defaultTreeCellRenderer0.removeInputMethodListener((InputMethodListener) null);
      defaultTreeCellRenderer0.setDebugGraphicsOptions(73);
      defaultTreeCellRenderer0.setLocation(1000000, 23502);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      defaultTreeCellRenderer0.getVerifyInputWhenFocusTarget();
      byte[] byteArray0 = new byte[15];
      byteArray0[1] = (byte) (-26);
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.add(mouseMotionListener0, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener2 = AWTEventMulticaster.remove(mouseMotionListener1, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener3 = AWTEventMulticaster.add(mouseMotionListener0, mouseMotionListener2);
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, mouseMotionListener3);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      Stack<ITableInfo> stack1 = new Stack<ITableInfo>();
      Integer[] integerArray0 = new Integer[2];
      Integer integer0 = new Integer(2938);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      stack1.toArray(integerArray0);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(stack1);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.USER;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("D4'", "CuC3zzs2K*F[G,8", "09o,ypCGP2:{b7&", "DBUtil.error.maptype", 1276, (String) null, 1896, 1896, 3594, 1276, "(\"H`~", "SS:# j,o-^", 1824, (-1454), ",//(");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      dBCopyPlugin0.getDestSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1276, int0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[4];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString() , anyInt() , anyInt() , anyInt());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      ConnectionWrapper connectionWrapper1 = new ConnectionWrapper(connectionWrapper0);
      int int0 = (-1123);
      // Undeclared exception!
      try { 
        connectionWrapper1.prepareCall("Couldn't find an exact match for destination table ", (-1123), 3314, (-1835));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "pDH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)7;
      byteArray1[1] = (byte) (-65);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, ",\n", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DBUtil.setLastStatement((String) null);
      String string0 = "Opening next  nested jar: ";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ZG$", "Opening next  nested jar: ", ") is not recognised.", (String) null, 491, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 95, 95, 2, 491, (String) null, (String) null, 2, 491, "ZG$");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType.createNewDatabaseObjectType("");
      DatabaseObjectType.createNewDatabaseObjectType(") is not recognised.");
      ImageIcon imageIcon0 = null;
      try {
        imageIcon0 = new ImageIcon((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name can't be null
         //
         verifyException("java.io.FilePermission", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(defaultTreeCellRenderer0, 23502, (-2812L), 853, 853, 23502, 23502, false, menuElementArray0, (MenuSelectionManager) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "Skipping FK (", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, "", 16, 16, 0, 0, "ayS>N[ VyH.y6b9", (String) null, (-766), 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBUtil.isBinaryType(tableColumnInfo0);
      IDatabaseObjectInfo iDatabaseObjectInfo0 = dBCopyPlugin0.getDestDatabaseObject();
      assertNull(iDatabaseObjectInfo0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("%Y]?n");
      uidIdentifier0.setString("chbCarindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("chbCarindex(");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P]");
      uidIdentifier0.setString("<1 ].*B`|,D`ZM%H");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier2.setString("%Y]?n");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier0.setString("}NLfzC0%\"lK~@Bt'");
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString(">I|]VRrZJ,");
      uidIdentifier3.setString("%Y]?n");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)20;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      ISession iSession0 = null;
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "Skipping FK (", "b2#jY[(V659;*c", "b2#jY[(V659;*c");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CallableStatement callableStatement0 = null;
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey((String) null, (String) null, "yyS%d", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte)20;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)20;
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("#)DS\"Y`r~5B.G<D(jv", "#)DS\"Y`r~5B.G<D(jv", (String) null, (String) null, 3984, "| A", 677, 1111, 1110, (byte)20, (String) null, (String) null, (byte)20, (-983), "| A");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "#)DS\"Y`r~5B.G<D(jv", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      MenuElement[] menuElementArray0 = new MenuElement[0];
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(defaultTreeCellRenderer0, 23502, (-2812L), 842, 842, 23502, 23502, false, menuElementArray0, (MenuSelectionManager) null);
      defaultTreeCellRenderer0.getToolTipLocation(menuDragMouseEvent0);
      defaultTreeCellRenderer0.resetKeyboardActions();
      defaultTreeCellRenderer0.getFocusListeners();
      defaultTreeCellRenderer0.setLocation(23502, (-13));
      DebugGraphics debugGraphics0 = new DebugGraphics();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil dBUtil0 = new DBUtil();
      ILoggerFactory iLoggerFactory0 = mock(ILoggerFactory.class, new ViolatedAssumptionAnswer());
      LoggerController.registerLoggerFactory(iLoggerFactory0);
      String string0 = "j11PF*RUB c\"";
      String string1 = "q,n_F";
      // Undeclared exception!
      try { 
        dBCopyPlugin0.initialize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("GrT7c^SUF||KGK", "Invalid paste table as state", "Invalid paste table as state", "qyo*X", (-3644), "VeIL<K~y2", 3924, 7, (-1), (-3644), "]mkbVFy|.", "Z49`w|NtP8", (-2), 3924, "kEbD$iL 2ti");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)109;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte) (-65);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DatabaseObjectType.createNewDatabaseObjectType(" tableNamPe = ");
      DatabaseObjectType.createNewDatabaseObjectType("h7*ao_2F^ydGOyDp@$");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("w+b", "Null 'tasks' argument.", "Null 'tasks' argument.", "P]", (byte)109, "P]", (byte)16, (byte) (-65), 12, (-1315), "~TCs", "h7*ao_2F^ydGOyDp@$", (-613), (-613), "P]");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("ALTjR TABLE $tableName$ DROP COLUMN $columnName$ $cascade$", "nIx[,MnM|8{6iXg8l", "p", "Av%n&n", (byte) (-3), "M5/`/KT", (-437), (-1502), 9999, 1679, ". Skipping FK constraint", "nIx[,MnM|8{6iXg8l", (byte)104, (byte)75, "Nm8I^bZL");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.VIEW;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("Av%n&n");
      DatabaseObjectType.createNewDatabaseObjectType("nIx[,MnM|8{6iXg8l");
      DatabaseObjectType.createNewDatabaseObjectType("p");
      DatabaseObjectType.createNewDatabaseObjectType(". Skipping FK constraint");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType.createNewDatabaseObjectType("M5/`/KT");
      ImageIcon imageIcon0 = (ImageIcon)databaseObjectType0.getIcon();
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("p");
      imageIcon0.getAccessibleContext();
      DatabaseObjectType.createNewDatabaseObjectType("Loaded protocol: ", (Icon) imageIcon0);
      DatabaseObjectType.createNewDatabaseObjectType(" tableNamPe = ");
      DatabaseObjectType.createNewDatabaseObjectType("Loaded protocol: ");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      CallableStatement callableStatement0 = null;
      DBUtil.getLastStatement();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_',S3$");
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.revalidate();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.remove((InputMethodListener) null, (InputMethodListener) null);
      AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setLabelFor((Component) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "z8WP!m|2", (String) null, 2002, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 121, 2048, 2002, 361, "7J**o,<Jd", "ZFa/oa", 2048, 2048, "z8WP!m|2");
      int int0 = DBUtil.replaceDistinctDataType(3, tableColumnInfo0, (ISession) null);
      assertEquals(3, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("%Y]?n");
      uidIdentifier0.setString("Lg[=s}eil&A.o2Bh");
      uidIdentifier0.setString("chbCarindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier0.setString("<1 ].*B`|,D`ZM%H");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier2.setString("%Y]?n");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier0.setString("}NLfzC0%\"lK~@Bt'");
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString(">I|]VRrZJ,");
      uidIdentifier3.setString("%Y]?n");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString(">I|]VRrZJ,");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("64b1784d:16e8123a690:-6404", uidIdentifier7.toString());
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "insert into ", "r.:a2^5pv[zs6_kRYko", "Lg[=s}eil&A.o2Bh", 2002, "UwnzLa8<o@:cUgT", 2002, 6, 6, 2002, "z8WP!m|2", ">I|]VRrZJ,", 2002, 2002, "ZFa/oa");
      int int0 = DBUtil.replaceDistinctDataType(2002, tableColumnInfo0, (ISession) null);
      //  // Unstable assertion: assertEquals(2002, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("%Y]?Fn");
      uidIdentifier0.setString("Lg[=s}eil&A.o2Bh");
      uidIdentifier0.setString("chbCarindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier0.setString("<1 ].*B`|,D`ZM%H");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier2.setString("%Y]?Fn");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier0.setString("}NLfzC0%\"lK~@Bt'");
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString(">I|]VRrZJ,");
      uidIdentifier3.setString("%Y]?Fn");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      uidIdentifier2.setString(">.I|]VRrZJ,");
      UidIdentifier uidIdentifier7 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("64b1784d:16e8123a690:-6464", uidIdentifier7.toString());
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "nsert int ", "r.:a2^5pv[zs6_kRYko", "Lg[=s}eil&A.o2Bh", 2002, "UwnzLa8<o@:cUgT", 2002, 6, 6, 2002, "z8WP!m|2", ">I|]VRrZJ,", 2002, 2002, "ZFa/oa");
      int int0 = DBUtil.replaceDistinctDataType(2002, tableColumnInfo0, (ISession) null);
      //  // Unstable assertion: assertEquals(2002, int0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getGraphics();
      defaultTreeCellRenderer0.getVerifyInputWhenFocusTarget();
      defaultTreeCellRenderer0.getDefaultOpenIcon();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.getClosedIcon();
      boolean boolean0 = DBUtil.typesAreEquivalent((-3994), (-691));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.resetKeyboardActions();
      defaultTreeCellRenderer0.createImage(23502, 23502);
      defaultTreeCellRenderer0.getFocusListeners();
      defaultTreeCellRenderer0.setLocation(23502, (-13));
      DebugGraphics debugGraphics0 = new DebugGraphics();
      boolean boolean0 = DBUtil.typesAreEquivalent((-1267), 23502);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DBUtil.typesAreEquivalent(2, 2);
      DebugGraphics debugGraphics0 = new DebugGraphics();
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      boolean boolean0 = DBUtil.typesAreEquivalent(3071, 3071);
      boolean boolean1 = DBUtil.typesAreEquivalent(2000, 3071);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getDTPropertiesFile();
      MockFile mockFile0 = new MockFile("lengoth");
      MockFile mockFile1 = new MockFile("lengoth");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create((File) mockFile0);
      fileWrapperFactoryImpl0.create("lengoth", "lengoth");
      MockFile mockFile2 = new MockFile("lengoth");
      mockFile2.delete();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper1 = applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      fileWrapperFactoryImpl0.create(fileWrapper1, "lengoth");
      File file1 = MockFile.createTempFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "lengoth", (File) mockFile2);
      file0.setReadable(false, true);
      FileWrapper fileWrapper2 = fileWrapperFactoryImpl0.create(file1);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("hAu\"n%6VsKFD", "r.:a2^5pv[zs6_kRYko");
      file0.toPath();
      FileWrapperImpl fileWrapperImpl1 = fileWrapperFactoryImpl0.createTempFile("lengoth", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", fileWrapper0);
      FileWrapperImpl.listRoots();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.createTempFile("hAu\"n%6VsKFD", " schema = ");
      fileWrapperImpl1.mkdirs();
      FileWrapperImpl.createTempFile("qeR`Lz'{A}|", "C+cdfK0D1?=Obx&");
      fileWrapperFactoryImpl1.create(fileWrapper2, "lengoth");
      fileWrapperFactoryImpl1.create("lengoth");
      fileWrapperFactoryImpl1.create(fileWrapperImpl1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, "hAu\"n%6VsKFD", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      int int0 = (-13);
      String string0 = "Zi0k>-Wf";
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "le_vgot", "le_vgot", "Zi0k>-Wf", (-13));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      int int0 = 1;
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "lengoth", "lengoth", "Zi0k>-Wf", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("%Y]?Fn");
      uidIdentifier0.setString("Lg[=s}eil&A.o2Bh");
      uidIdentifier0.setString("chbCarindex(");
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString((String) null);
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier0.setString("<1 ].*B`|,D`ZM%H");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("(-hYCbo]2&zXj=I");
      uidIdentifier1.setString("chbCarindex(");
      uidIdentifier2.setString("%Y]?Fn");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      uidIdentifier0.setString("}NLfzC0%\"lK~@Bt'");
      uidIdentifier3.setString("2[#ek-ym`ZM`.G1~1Yl");
      uidIdentifier0.setString(">I|]VRrZJ,");
      uidIdentifier3.setString("%Y]?Fn");
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "WB`h~AON(&", "_9}6cJp^rk/_", "%Y]?Fn", 70);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[11];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties0;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "_9}6cJp^rk/_", "_9}6cJp^rk/_", "6$@#eTK3PuM$)J.ZL", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getDTPropertiesFile();
      MockFile mockFile0 = new MockFile("lengoth");
      MockFile mockFile1 = new MockFile("lengoth");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create((File) mockFile0);
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("lengoth", "lengoth");
      MockFile mockFile2 = new MockFile("lengoth", "lengoth");
      mockFile2.delete();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getPluginsUserSettingsDirectory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "s+h!", "lengoth");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) null, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster1, (AdjustmentListener) null);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster3, (InputMethodListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((InputMethodListener) aWTEventMulticaster0, (InputMethodListener) aWTEventMulticaster1);
      ApplicationFiles applicationFiles1 = new ApplicationFiles();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      MockFile mockFile0 = new MockFile("lengoth", "lengoth");
      MockFile mockFile1 = new MockFile("lengoth", "lengoth");
      MockFile mockFile2 = new MockFile("lengoth", "lengoth");
      MockFile mockFile3 = new MockFile("lengoth");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("lengoth", "lengoth");
      MockFile mockFile4 = new MockFile("org.jfree.data.DefaultKeyedValue");
      mockFile4.delete();
      FileWrapper fileWrapper0 = fileWrapperFactoryImpl0.create((File) mockFile2);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("hAu\"n%6VsKFD", "r.:a2^5pv[zs6_kRYko");
      fileWrapperImpl1.toURI();
      fileWrapperImpl1.listFiles();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.create(fileWrapper0, "oldSQuirreLInstallDir");
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("oldSQuirreLInstallDir");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "oldSQuirreLInstallDir", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("log4j.reset", "title", "*v+8(yE", "log4j.reset", 0, "supportsCatalogsInTableDefinitions", 0, 0, 0, 0, "*v+8(yE", "kEW", (-993), 1073741823, "");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, mouseMotionListener0);
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, mouseMotionListener1);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.removeMouseMotionListener(mouseMotionListener1);
      InputMethodListener inputMethodListener0 = mock(InputMethodListener.class, new ViolatedAssumptionAnswer());
      InputMethodListener inputMethodListener1 = AWTEventMulticaster.add(inputMethodListener0, inputMethodListener0);
      AWTEventMulticaster.remove(inputMethodListener1, inputMethodListener1);
      AWTEventMulticaster.remove((InputMethodListener) null, inputMethodListener1);
      AWTEventMulticaster.add((InputMethodListener) null, inputMethodListener1);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.setLabelFor(defaultTreeCellRenderer0);
      defaultTreeCellRenderer0.getClosedIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (-1502), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0, 1063, 0, 0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "tp.6Qm/ic j?CI8|", 0, 1063, (String) null);
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1502), int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "&!<4RbZsQ^PKP", "tY", "E:*vldKD");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
