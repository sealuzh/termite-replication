/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 01:47:50 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Insets;
import java.awt.Window;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.dnd.DropTarget;
import java.awt.event.ComponentListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.io.BufferedReader;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JApplet;
import javax.swing.JComponent;
import javax.swing.JInternalFrame;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JRootPane;
import javax.swing.JSlider;
import javax.swing.JToolTip;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.border.AbstractBorder;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.TextAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSMethod;
import umd.cs.shop.JSOperator;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlan;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSTaskAtom;
import umd.cs.shop.JSTasks;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      DataFlavor dataFlavor1 = DataFlavor.stringFlavor;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)40;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "' f";
      JSOperator jSOperator0 = new JSOperator();
      jSOperator0.head();
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("' f", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5461447460085638
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "j[`u> @ux");
      JSPlan jSPlan0 = new JSPlan();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "mar-pq-&{)vjk6-f");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "mar-pq-&{)vjk6-f");
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      jSJshop0.testParser();
      Window.Type window_Type0 = Window.Type.UTILITY;
      Window.Type[] window_TypeArray0 = new Window.Type[8];
      window_TypeArray0[0] = window_Type0;
      window_TypeArray0[1] = window_Type0;
      Window.Type window_Type1 = Window.Type.UTILITY;
      window_TypeArray0[2] = window_Type1;
      window_TypeArray0[3] = window_Type0;
      window_TypeArray0[4] = window_Type0;
      window_TypeArray0[5] = window_Type0;
      Window.Type window_Type2 = Window.Type.NORMAL;
      window_TypeArray0[6] = window_Type2;
      window_TypeArray0[7] = window_Type0;
      JList<Window.Type> jList0 = new JList<Window.Type>(window_TypeArray0);
      MultiListUI multiListUI0 = new MultiListUI();
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, (byte)64);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      JSPlan jSPlan0 = new JSPlan();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      jSlider0.addMouseWheelListener((MouseWheelListener) null);
      JApplet jApplet0 = JSJshop.applet;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      jSlider0.getMouseWheelListeners();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "p|'f");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "********* tree FINAL SOLUTION*******");
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      jSJshop0.testParser();
      Window.Type window_Type0 = Window.Type.UTILITY;
      Window.Type[] window_TypeArray0 = new Window.Type[5];
      window_TypeArray0[0] = window_Type0;
      window_TypeArray0[1] = window_Type0;
      window_TypeArray0[2] = window_Type0;
      Window.Type window_Type1 = Window.Type.POPUP;
      window_TypeArray0[3] = window_Type1;
      window_TypeArray0[4] = window_Type0;
      JList<Window.Type> jList0 = new JList<Window.Type>(window_TypeArray0);
      MultiListUI multiListUI0 = new MultiListUI();
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, (byte)64);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5461447460085638
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "-2_");
      JSPlan jSPlan0 = new JSPlan();
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "mar-pq-&{)vjk6-f");
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendLineToFile(evoSuiteFile1, ".9L@_P#Qi=7W,uWDLF,");
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)64;
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "mar-pq-&{)vjk6-f");
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      jSJshop0.testParser();
      Window.Type window_Type0 = Window.Type.UTILITY;
      Window.Type[] window_TypeArray0 = new Window.Type[20];
      window_TypeArray0[0] = window_Type0;
      window_TypeArray0[1] = window_Type0;
      Window.Type window_Type1 = Window.Type.UTILITY;
      window_TypeArray0[2] = window_Type1;
      window_TypeArray0[3] = window_Type0;
      window_TypeArray0[4] = window_Type0;
      window_TypeArray0[5] = window_Type0;
      Window.Type window_Type2 = Window.Type.NORMAL;
      window_TypeArray0[4] = window_Type2;
      window_TypeArray0[7] = window_Type0;
      JList<Window.Type> jList0 = new JList<Window.Type>(window_TypeArray0);
      // Undeclared exception!
      try { 
        jList0.getFontMetrics((Font) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.8894896568037137
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-113);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)107;
      byteArray0[5] = (byte) (-3);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.apostrophe = 40;
      JSJshop.applet = null;
      JSJshopVars.rightBrac = (int) (byte) (-3);
      JSJshopVars.colon = 4;
      JSJshopVars.whiteSpace = 7;
      jSJshop0.testParser();
      JSJshop.corbaToHicap = false;
      jSJshop0.getAddList();
      jSJshop0.getDeleteList();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9026526824158976
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/ ");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)64;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte)4;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSJshop0.getAddList();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getDeleteList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8906882058599346
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-113);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "");
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)91;
      byteArray0[4] = (byte)107;
      byteArray0[5] = (byte) (-3);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshop.applet = null;
      JSJshopVars.colon = 4;
      JSJshopVars.whiteSpace = 7;
      jSJshop0.testParser();
      JSJshop.corbaToHicap = false;
      jSJshop0.getAddList();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getDeleteList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "+ntn<cq(^c!i";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "+ntn<cq(^c!i");
      byte byte0 = (byte)4;
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.548862196705434
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      JSlider jSlider1 = new JSlider();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      System.setCurrentTimeMillis(0L);
      JSJshop jSJshop0 = new JSJshop("' f", "' f");
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      defaultTableColumnModel1.getColumnModelListeners();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) jSlider0;
      objectArray0[1] = (Object) (byte)1;
      objectArray0[2] = (Object) jSlider0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, (byte)3);
      DefaultTableColumnModel defaultTableColumnModel2 = new DefaultTableColumnModel();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "' f";
      stringArray0[1] = "' f";
      JSJshop.main(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9055496168836528
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      JSlider jSlider0 = new JSlider();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)3;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      JSPlan jSPlan0 = new JSPlan();
      jSlider0.setAlignmentY(0.0F);
      String[] stringArray0 = new String[4];
      System.setCurrentTimeMillis((byte)3);
      JSJshop jSJshop0 = new JSJshop("' f", "' f");
      JSJshop.corbaToHicap = true;
      jSJshop0.tree();
      JSJshopVars.leftBrac = (int) (byte)3;
      JSJshop.main(stringArray0);
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = object0;
      objectArray0[2] = (Object) (byte)3;
      objectArray0[3] = (Object) (byte)3;
      objectArray0[4] = (Object) (byte)3;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 2349);
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      jSJshop0.parserFile("' f");
      // Undeclared exception!
      try { 
        defaultTableColumnModel0.getColumnIndex((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Identifier is null
         //
         verifyException("javax.swing.table.DefaultTableColumnModel", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "xhdj2S,");
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)3;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("' f", "<zcHGiAKkl6])>U");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.imageFlavor;
      DataFlavor dataFlavor1 = DataFlavor.stringFlavor;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)1;
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)35;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      JSPlan jSPlan0 = new JSPlan();
      String[] stringArray0 = new String[4];
      stringArray0[1] = "Solving Problem :";
      stringArray0[1] = "' f";
      stringArray0[3] = "Solving Problem :";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("' f", "Solving Problem :");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3798389570661653
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "zQ=F\\xgD$[ Cm'q";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("zQ=FxgD$[ Cm'q", "zQ=FxgD$[ Cm'q");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      BevelBorder bevelBorder0 = new BevelBorder(1678);
      Insets insets0 = bevelBorder0.getBorderInsets((Component) jSlider0);
      bevelBorder0.getHighlightInnerColor();
      AbstractBorder.getInteriorRectangle((Component) jSlider0, (Border) bevelBorder0, 2, 2909, 1015, (-860));
      insets0.left = (-128724048);
      jSlider0.getInsets(insets0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      jSlider0.setRequestFocusEnabled(false);
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("' f", "jzo4{43]5v");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.javaFileListFlavor;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)3;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("' f", "<zcHGiAKkl6])>U");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "one";
      stringArray0[1] = "L@|.:c^Ei[wk'dGwg";
      stringArray0[2] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader(".nyNkZ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      streamTokenizer0.parseNumbers();
      stringReader0.skip((-4));
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      JSlider jSlider0 = new JSlider();
      DataFlavor dataFlavor1 = DataFlavor.stringFlavor;
      StringSelection stringSelection0 = new StringSelection((String) null);
      JSPlan jSPlan0 = new JSPlan();
      StringSelection stringSelection1 = new StringSelection((String) null);
      JSTasks jSTasks0 = new JSTasks();
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = (-3038);
      JSJshopVars.rightPar = (-2);
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      DataFlavor.getTextPlainUnicodeFlavor();
      StringSelection stringSelection0 = new StringSelection("d");
      Reader reader0 = dataFlavor0.getReaderForText(stringSelection0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.prob();
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      StringSelection stringSelection0 = new StringSelection("zu%?cOr#NOisH/x'");
      JSlider jSlider0 = new JSlider();
      int int0 = 800;
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "kn< .%=[tu{brh3ac<";
      stringArray0[1] = "- ";
      stringArray0[2] = "N`hzx'TM({Ic@QMQzM";
      stringArray0[3] = "PgX";
      stringArray0[4] = ") ";
      stringArray0[5] = "in listtasks()";
      stringArray0[6] = ": ";
      JSJshop.main(stringArray0);
      assertEquals(7, stringArray0.length);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      JSlider jSlider0 = new JSlider();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DataFlavor dataFlavor1 = DataFlavor.stringFlavor;
      StringSelection stringSelection0 = new StringSelection("'9f");
      JSTasks jSTasks0 = new JSTasks();
      JSTasks jSTasks1 = new JSTasks();
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.minus = (-464);
      JSJshopVars.apostrophe = 45;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("; / parsing list of tasks: unexpected atom");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "'9f");
      jSJshop0.getBufferedReader("; ", " parsing list of tasks: unexpected atom", (JApplet) null);
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("; ", (String) null, (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      String string0 = "`>2UoPf&T0Fbf@";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      JSPlan jSPlan0 = new JSPlan();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      jSlider0.addMouseWheelListener((MouseWheelListener) null);
      jSlider0.addMouseWheelListener((MouseWheelListener) null);
      JApplet jApplet0 = JSJshop.applet;
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.parserFile("all");
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction1 = new DefaultEditorKit.BeepAction();
      Action[] actionArray0 = new Action[4];
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      actionArray0[0] = (Action) styledEditorKit_ItalicAction0;
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction1 = new StyledEditorKit.ItalicAction();
      actionArray0[1] = (Action) styledEditorKit_ItalicAction1;
      actionArray0[2] = (Action) defaultEditorKit_BeepAction1;
      actionArray0[3] = (Action) defaultEditorKit_BeepAction1;
      TextAction.augmentList(actionArray0, actionArray0);
      defaultEditorKit_BeepAction0.setEnabled(false);
      // Undeclared exception!
      try { 
        defaultTableColumnModel0.getColumnIndex((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Identifier is null
         //
         verifyException("javax.swing.table.DefaultTableColumnModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("; / parsing list of tasks: unexpected atom");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      DataFlavor dataFlavor0 = DataFlavor.stringFlavor;
      JSlider jSlider0 = new JSlider();
      StringSelection stringSelection0 = new StringSelection("'9f");
      JSTasks jSTasks0 = new JSTasks();
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("; / parsing list of tasks: unexpected atom");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "'9f");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Y @gNmFlcl[S[\"DLo");
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("%2*P3", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JApplet jApplet0 = JSJshop.applet;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      defaultCaret1.y = 0;
      DefaultCaret defaultCaret2 = new DefaultCaret();
      defaultCaret2.setLocation(0, 0);
      defaultCaret0.isVisible();
      MenuElement[] menuElementArray0 = new MenuElement[8];
      JInternalFrame jInternalFrame0 = new JInternalFrame(" Expecting Planning Problem name", false, true, false);
      JRootPane jRootPane0 = jInternalFrame0.getRootPane();
      jRootPane0.getJMenuBar();
      menuElementArray0[0] = (MenuElement) null;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[7] = (byte)45;
      byteArray0[8] = (byte) (-49);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, " Expecting Planning Problem name");
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem0;
      JMenu jMenu0 = new JMenu(" Expecting Planning Problem name");
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[2] = (MenuElement) jPopupMenu0;
      JMenu jMenu1 = new JMenu();
      menuElementArray0[3] = (MenuElement) jMenu1;
      JMenuItem jMenuItem0 = jPopupMenu0.add(" Expecting Planning Problem name");
      menuElementArray0[4] = (MenuElement) jMenuItem0;
      JMenu jMenu2 = new JMenu((String) null, false);
      menuElementArray0[5] = (MenuElement) jMenu2;
      JRadioButtonMenuItem jRadioButtonMenuItem1 = new JRadioButtonMenuItem(">8|griX'/#^3I]", false);
      menuElementArray0[6] = (MenuElement) jRadioButtonMenuItem1;
      JMenuItem jMenuItem1 = new JMenuItem((String) null);
      menuElementArray0[7] = (MenuElement) jRadioButtonMenuItem1;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL(">8|griX'/#^3I]", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.sol();
      StringSelection stringSelection0 = new StringSelection("I:V++(");
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      DropTarget dropTarget0 = null;
      try {
        dropTarget0 = new DropTarget();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.dnd.DropTarget", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = ")-qjcc'svy;^c'|l";
      StringSelection stringSelection0 = new StringSelection(")-qjcc'svy;^c'|l");
      JSJshopVars.verticalL = 1485;
      jSJshop0.getTree();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JComponent.getDefaultLocale();
      DefaultTableCellRenderer.UIResource defaultTableCellRenderer_UIResource0 = new DefaultTableCellRenderer.UIResource();
      JToolTip jToolTip0 = new JToolTip();
      jSJshop0.getBufferedReader(":cydIM)p=^|", "' f", (JApplet) null);
      MultiListUI multiListUI0 = new MultiListUI();
      MultiListUI multiListUI1 = new MultiListUI();
      MultiListUI multiListUI2 = new MultiListUI();
      MultiListUI multiListUI3 = new MultiListUI();
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation((JList) null, 47);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSPlan jSPlan0 = new JSPlan();
      JComponent.getDefaultLocale();
      DefaultTableCellRenderer.UIResource defaultTableCellRenderer_UIResource0 = new DefaultTableCellRenderer.UIResource();
      JToolTip jToolTip0 = new JToolTip();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader(":cydIM)p=^|", "' f", (JApplet) null);
      MultiListUI multiListUI0 = new MultiListUI();
      MultiListUI multiListUI1 = new MultiListUI();
      MultiListUI multiListUI2 = new MultiListUI();
      // Undeclared exception!
      try { 
        multiListUI2.indexToLocation((JList) null, 47);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.exclamation = (-1995338122);
      JSJshopVars.minus = 0;
      JSJshopVars.leftBrac = 0;
      jSJshop0.getSolution();
      int int0 = 2785;
      JSMethod jSMethod0 = null;
      try {
        jSMethod0 = new JSMethod((StreamTokenizer) null);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      StringReader stringReader0 = new StringReader("+&yNkZ");
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(stringReader0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(stringReader0);
      stringReader0.skip((-4));
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("' f");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      StringSelection stringSelection0 = new StringSelection("' f");
      System.setCurrentTimeMillis((byte)0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshop.corbaToHicap = true;
      Object object0 = new Object();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      DefaultTableColumnModel defaultTableColumnModel1 = new DefaultTableColumnModel();
      jSJshop0.parserFile("' f");
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction1 = new DefaultEditorKit.BeepAction();
      Action[] actionArray0 = new Action[9];
      actionArray0[0] = (Action) defaultEditorKit_BeepAction1;
      actionArray0[2] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[8] = (Action) defaultEditorKit_BeepAction1;
      defaultTableColumnModel0.getColumnModelListeners();
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction2 = new DefaultEditorKit.BeepAction();
      defaultEditorKit_BeepAction1.putValue((String) null, defaultEditorKit_BeepAction2);
      actionArray0[4] = (Action) defaultEditorKit_BeepAction0;
      defaultEditorKit_BeepAction1.setEnabled(true);
      actionArray0[5] = (Action) defaultEditorKit_BeepAction1;
      actionArray0[6] = (Action) defaultEditorKit_BeepAction0;
      actionArray0[7] = (Action) defaultEditorKit_BeepAction1;
      MultiListUI multiListUI0 = new MultiListUI();
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "kn< .%=[tu{brh3ac<";
      stringArray0[1] = "(6)/!SZ1Pops^Nxp1,";
      stringArray0[2] = "i%";
      stringArray0[3] = "Returning failure from find-plan: Can not find an applicable method";
      JSJshop.main(stringArray0);
      assertEquals(4, stringArray0.length);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      BevelBorder bevelBorder0 = new BevelBorder(1678);
      Insets insets0 = bevelBorder0.getBorderInsets((Component) jSlider0);
      insets0.left = (-128724048);
      jSlider0.getInsets(insets0);
      jSlider0.setRequestFocusEnabled(false);
      byte[] byteArray0 = new byte[2];
      StringSelection stringSelection0 = new StringSelection("' f");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("' f", "jzo4{43]5v");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.8386877468598375
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSlider jSlider0 = new JSlider();
      JSPlan jSPlan0 = new JSPlan();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      jSlider0.addMouseWheelListener((MouseWheelListener) null);
      JApplet jApplet0 = JSJshop.applet;
      String[] stringArray0 = new String[4];
      stringArray0[1] = "' f";
      stringArray0[1] = "' f";
      stringArray0[2] = "all";
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jSlider0, (-1696), (-1696), (-1696), (-1696), (-1696), 3, 49, (-1696), false, (-46692845), (-46692845), 49, (-2850.033717533624));
      jSlider0.getPopupLocation(mouseWheelEvent0);
      stringArray0[3] = "all";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<JSPairPlanTSListNodes> unaryOperator1 = UnaryOperator.identity();
      Function<JSPairPlanTSListNodes, String> function0 = (Function<JSPairPlanTSListNodes, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<JSPairPlanTSListNodes, String> function1 = unaryOperator1.andThen((Function<? super JSPairPlanTSListNodes, ? extends String>) function0);
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Integer> function2 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, Integer> function3 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function2);
      function1.andThen((Function<? super String, ? extends Integer>) function3);
      Function.identity();
      unaryOperator0.compose((Function<? super JSPairPlanTSListNodes, ? extends String>) function1);
      jSTaskAtom0.replaceAll(unaryOperator0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("/SP5~Ce!]t`hx", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JSTaskAtom jSTaskAtom0 = new JSTaskAtom();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<JSPairPlanTSListNodes> unaryOperator1 = UnaryOperator.identity();
      Function<JSPairPlanTSListNodes, String> function0 = (Function<JSPairPlanTSListNodes, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<JSPairPlanTSListNodes, String> function1 = unaryOperator1.andThen((Function<? super JSPairPlanTSListNodes, ? extends String>) function0);
      UnaryOperator<Integer> unaryOperator2 = UnaryOperator.identity();
      Function<Object, Integer> function2 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function.identity();
      Function.identity();
      Function<Object, Integer> function3 = unaryOperator2.compose((Function<? super Object, ? extends Integer>) function2);
      function3.compose((Function<? super String, ?>) unaryOperator0);
      function1.andThen((Function<? super String, ? extends Integer>) function3);
      unaryOperator0.compose((Function<? super JSPairPlanTSListNodes, ? extends String>) function1);
      jSTaskAtom0.replaceAll(unaryOperator0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("oH<_Gc>;g", jSTaskAtom0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSJshop.main(stringArray0);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JApplet jApplet0 = JSJshop.applet;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      defaultCaret0.setLocation(0, 0);
      defaultCaret0.isVisible();
      MenuElement[] menuElementArray0 = new MenuElement[8];
      JInternalFrame jInternalFrame0 = new JInternalFrame(" Expectin4 PlanningmProblem name", false, true, false);
      JRootPane jRootPane0 = jInternalFrame0.getRootPane();
      jRootPane0.getJMenuBar();
      menuElementArray0[0] = (MenuElement) null;
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[7] = (byte)45;
      byteArray0[8] = (byte) (-49);
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, " Expectin4 PlanningmProblem name");
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem();
      JMenu jMenu0 = new JMenu(" Expectin4 PlanningmProblem name");
      JPopupMenu jPopupMenu0 = jMenu0.getPopupMenu();
      menuElementArray0[2] = (MenuElement) jPopupMenu0;
      JMenu jMenu1 = new JMenu();
      menuElementArray0[3] = (MenuElement) jMenu1;
      JMenuItem jMenuItem0 = jPopupMenu0.add(" Expectin4 PlanningmProblem name");
      menuElementArray0[4] = (MenuElement) jMenuItem0;
      JMenu jMenu2 = new JMenu((String) null, false);
      menuElementArray0[5] = (MenuElement) jMenu2;
      JMenuItem jMenuItem1 = new JMenuItem((String) null);
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      JSJshop jSJshop0 = new JSJshop();
      System.setCurrentTimeMillis(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "}Yd)]bQ:2fv)=9>DZw";
      stringArray0[1] = " Expectin4 PlanningmProblem name";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }
}
