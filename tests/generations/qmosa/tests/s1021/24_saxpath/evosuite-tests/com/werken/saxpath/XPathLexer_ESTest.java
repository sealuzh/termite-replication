/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 02:08:43 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.6854825381320515
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer1.colon();
      xPathLexer0.pipe();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer1.nextToken();
      xPathLexer2.rightParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      xPathLexer3.minus();
      xPathLexer2.or();
      xPathLexer3.consume((-1581));
      // Undeclared exception!
      try { 
        xPathLexer3.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.0173565871298447
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("YeDW7eRK>3:fMXx_Ag!");
      xPathLexer0.at();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.consume((-1827));
      xPathLexer0.equals();
      xPathLexer0.consume();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.177881048864746
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.star();
      token0.toString();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("#Qe;");
      xPathLexer1.div();
      xPathLexer1.leftParen();
      xPathLexer1.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("[ (3) (y)");
      xPathLexer2.equals();
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.slashes();
      xPathLexer3.doubleColon();
      Token token1 = xPathLexer1.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7189135213159925
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer1.and();
      xPathLexer1.operatorName();
      xPathLexer1.plus();
      Token token2 = xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.plus();
      Token token4 = xPathLexer0.plus();
      assertEquals("G", token4.getTokenText());
      
      xPathLexer2.pipe();
      Token token5 = xPathLexer3.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("u6", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer3.rightBracket();
      xPathLexer0.operatorName();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      xPathLexer1.setPreviousToken(token3);
      assertEquals(5, token3.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals("^", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      xPathLexer2.consume();
      xPathLexer3.or();
      XPathLexer xPathLexer5 = new XPathLexer("<eBYT");
      Token token10 = xPathLexer4.notEquals();
      String string0 = token10.toString();
      assertEquals("[ (22) (y^)", string0);
      
      Token token11 = xPathLexer4.dollar();
      assertEquals("|", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (17) (|)", string1);
      
      xPathLexer4.relationalOperator();
      Token token12 = xPathLexer5.nextToken();
      assertEquals(7, token12.getTokenType());
      
      Token token13 = xPathLexer2.rightParen();
      assertEquals(2, token13.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token14 = xPathLexer7.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.828876435203677
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      Token token3 = xPathLexer2.plus();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.dollar();
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer2.nextToken();
      assertEquals("(", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token6 = xPathLexer2.nextToken();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer5.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("[ (4) (y)");
      Token token9 = xPathLexer7.leftParen();
      assertEquals(1, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer7.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals(" ", token10.getTokenText());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer7.minus();
      assertEquals(6, token12.getTokenType());
      assertEquals("(", token12.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token13 = xPathLexer9.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer8.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1722754057675693
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("'", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token6 = xPathLexer0.plus();
      assertEquals("r", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("@", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Dt/0");
      XPathLexer xPathLexer2 = new XPathLexer("a:'I^7i]%&%C@^G6V@");
      Token token9 = xPathLexer1.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("D", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("k;&{o7");
      xPathLexer2.operatorName();
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("k;", token10.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.slashes();
      assertEquals(11, token12.getTokenType());
      assertEquals("a", token12.getTokenText());
      
      Token token13 = xPathLexer3.at();
      assertEquals("&", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer1.dollar();
      assertEquals(26, token14.getTokenType());
      assertEquals("t", token14.getTokenText());
      
      Token token15 = xPathLexer3.not();
      assertEquals("{", token15.getTokenText());
      assertEquals(23, token15.getTokenType());
      
      Token token16 = xPathLexer1.comma();
      assertEquals("/", token16.getTokenText());
      assertEquals(32, token16.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8233761885304518
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("'", token1.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (13) (|)", string0);
      
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.plus();
      Token token4 = xPathLexer0.pipe();
      assertEquals("K", token4.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer("TLW:E$s6=b^|,kVQ");
      xPathLexer3.nextToken();
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("|", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("b%<c& te12q],");
      Token token9 = xPathLexer1.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer4.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("b", token10.getTokenText());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer4.comma();
      assertEquals(32, token12.getTokenType());
      assertEquals("%", token12.getTokenText());
      
      Token token13 = xPathLexer4.not();
      assertEquals(23, token13.getTokenType());
      assertEquals("<", token13.getTokenText());
      
      Token token14 = xPathLexer4.identifierOrOperatorName();
      assertEquals("c", token14.getTokenText());
      
      Token token15 = xPathLexer0.plus();
      assertEquals("r", token15.getTokenText());
      assertEquals(5, token15.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8446526527599594
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("G", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("u", token3.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      XPathLexer xPathLexer3 = new XPathLexer("OMw[O]F <.5nDT3%");
      Token token4 = xPathLexer3.plus();
      assertEquals("O", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (y)");
      Token token5 = xPathLexer2.pipe();
      assertEquals("[", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("6", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer4.colon();
      assertEquals(18, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("[ (4) (y)");
      xPathLexer4.rightBracket();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token9 = xPathLexer3.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("Mw", token9.getTokenText());
      
      Token token10 = xPathLexer4.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer2.mod();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token12 = xPathLexer5.doubleColon();
      assertEquals("[ ", token12.getTokenText());
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.27658083158352
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(">o`t#- ");
      xPathLexer1.relationalOperator();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      Token token0 = xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer1.dots();
      XPathLexer xPathLexer3 = new XPathLexer(">o`t#- ");
      xPathLexer0.comma();
      xPathLexer1.dots();
      xPathLexer3.nextToken();
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightBracket();
      xPathLexer3.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.at();
      xPathLexer0.at();
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.leftParen();
      xPathLexer5.leftBracket();
      xPathLexer7.dollar();
      xPathLexer5.minus();
      Token token1 = xPathLexer5.not();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.124115094095745
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("+s", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("X", token2.getTokenText());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("K", token3.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("yl}H,)>+?4O6");
      Token token4 = xPathLexer0.plus();
      assertEquals("`", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("yl}H,)>+?4O6");
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("y", token5.getTokenText());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("Dt/0");
      xPathLexer0.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer("Dt/0");
      Token token8 = xPathLexer6.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer4.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer5.leftParen();
      assertEquals("D", token10.getTokenText());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("|", token11.getTokenText());
      
      xPathLexer6.at();
      Token token12 = xPathLexer5.comma();
      assertEquals(32, token12.getTokenType());
      assertEquals("t", token12.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("Dt/0");
      Token token13 = xPathLexer3.not();
      assertEquals("l", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      xPathLexer4.rightBracket();
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("}", token14.getTokenText());
      
      Token token15 = xPathLexer6.doubleColon();
      assertEquals(19, token15.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6863597942182866
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token3 = xPathLexer0.star();
      assertEquals("@", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("i1", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals("y", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.leftParen();
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0204400437743137
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (17) (S)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.identifier();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.colon();
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("8 ", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("'", token5.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("1Seunz<#`8 '");
      XPathLexer xPathLexer2 = new XPathLexer("QG$%JCoWR*3$8A #");
      xPathLexer2.plus();
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      xPathLexer1.pipe();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("S", token7.getTokenText());
      
      Token token8 = xPathLexer1.leftParen();
      assertEquals(1, token8.getTokenType());
      
      xPathLexer2.nextToken();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer2.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals("%", token10.getTokenText());
      
      xPathLexer0.operatorName();
      Token token11 = xPathLexer1.nextToken();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("<", token13.getTokenText());
      
      Token token14 = xPathLexer2.dollar();
      assertEquals("J", token14.getTokenText());
      assertEquals(26, token14.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1315300944147313
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("o", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("A9gV/Ql?-");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.plus();
      assertEquals("m", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer2.and();
      Token token4 = xPathLexer0.pipe();
      assertEquals("w", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer1.comma();
      assertEquals("A", token5.getTokenText());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("6JLWZay]`NHtv557X'");
      Token token6 = xPathLexer1.nextToken();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      Token token7 = xPathLexer0.colon();
      assertEquals("e", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer2.operatorName();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.XPathLexer", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer1.leftParen();
      Token token10 = xPathLexer1.slashes();
      assertEquals("V/", token10.getTokenText());
      assertEquals(12, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer5.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer5.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer3.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.9984264981672797
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.setPreviousToken(token1);
      assertEquals("G", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("u6", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("y", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("|G", token5.getTokenText());
      
      xPathLexer0.and();
      Token token6 = xPathLexer1.plus();
      assertEquals("u", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer2.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.at();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token8 = xPathLexer3.leftParen();
      assertEquals("y", token8.getTokenText());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals("i", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("#", token12.getTokenText());
      
      Token token13 = xPathLexer5.doubleColon();
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.118054366723941
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("s", token1.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      xPathLexer1.plus();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("z", token2.getTokenText());
      
      Token token3 = xPathLexer2.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      xPathLexer2.comma();
      xPathLexer2.nextToken();
      Token token4 = xPathLexer2.colon();
      assertEquals("^", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer2.rightParen();
      Token token5 = xPathLexer1.rightBracket();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals("-", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token5);
      assertEquals("l", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      Token token8 = xPathLexer1.identifier();
      assertEquals("", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("KuW`|r@k<7?c", token9.getTokenText());
      
      Token token10 = xPathLexer1.doubleColon();
      assertEquals(")K", token10.getTokenText());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.6119462949528445
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer1.and();
      xPathLexer1.operatorName();
      xPathLexer1.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("|", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.and();
      Token token2 = xPathLexer0.plus();
      assertEquals("G", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer2.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer3.comma();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("u6", token4.getTokenText());
      
      xPathLexer3.colon();
      xPathLexer3.rightBracket();
      xPathLexer0.operatorName();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      Token token6 = xPathLexer1.nextToken();
      assertEquals("^|Gu6@i1F#`Ph@>Bkg", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.at();
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("^", token7.getTokenText());
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("|", token8.getTokenText());
      
      xPathLexer5.operatorName();
      xPathLexer2.nextToken();
      Token token9 = xPathLexer0.leftParen();
      assertEquals("@", token9.getTokenText());
      
      Token token10 = xPathLexer3.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer4.at();
      assertEquals("y", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer4.comma();
      assertEquals(32, token12.getTokenType());
      assertEquals("^", token12.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("y^|Gu6@i1F#`Ph@>Bkg");
      Token token13 = xPathLexer5.not();
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9638803166302443
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.colon();
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("v-hvT Xx>w");
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("v", token2.getTokenText());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals("", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals("-", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("h", token7.getTokenText());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.at();
      assertEquals("i", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      xPathLexer2.and();
      Token token11 = xPathLexer1.notEquals();
      assertEquals("vT", token11.getTokenText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8098930874210617
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("WU*#1W");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("W", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("WU*#1W");
      Token token3 = xPathLexer1.star();
      assertEquals("W", token3.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("WU*#1W");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token5 = xPathLexer2.rightParen();
      assertEquals("W", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token6 = xPathLexer8.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer7.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("1", token8.getTokenText());
      
      Token token9 = xPathLexer4.notEquals();
      assertEquals("[ ", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      xPathLexer8.getPreviousToken();
      Token token10 = xPathLexer7.rightBracket();
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.109896014466003
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token2 = xPathLexer0.at();
      assertEquals("#", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.minus();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("P", token4.getTokenText());
      
      token3.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("h", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("@", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      String string1 = token3.toString();
      assertEquals("[ (6) (`)", string1);
      
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.star();
      assertEquals(">", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.setXPath("_-$gB5[;R;_kqQw");
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("_-", token8.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals("$g", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals("B", token10.getTokenText());
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals("[", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7404911698683918
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals("m", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer1.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(";YNpe_6Ov {2>");
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("m", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("m</q}KgoaE_z");
      Token token3 = xPathLexer1.relationalOperator();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(")");
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("}", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer3.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.102941065239044
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.minus();
      assertEquals("K", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("goaE_z", token3.getTokenText());
      
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("|(-C~Xxxw");
      XPathLexer xPathLexer2 = new XPathLexer(":e5enf:ww1su");
      xPathLexer0.nextToken();
      Token token6 = xPathLexer2.rightParen();
      assertEquals(":", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftParen();
      assertEquals("|", token7.getTokenText());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("(", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("|(-C~Xxxw");
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("|", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.004722021593294
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.consume((-653));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1872852246623102
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(">o`t#- ");
      xPathLexer1.relationalOperator();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer1.plus();
      xPathLexer1.literal();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("y3NXmZR+3s ");
      xPathLexer2.dots();
      xPathLexer2.comma();
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer1.operatorName();
      xPathLexer2.nextToken();
      xPathLexer0.rightParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer1.and();
      xPathLexer1.notEquals();
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7753989623201143
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("A9gV/Ql?-");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.plus();
      assertEquals("/", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals("Q", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token5 = xPathLexer4.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals("?", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("6o[xXMo|");
      Token token9 = xPathLexer5.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("6", token9.getTokenText());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.173524811785143
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals("|", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("eF,Zq");
      XPathLexer xPathLexer2 = new XPathLexer("eF,Zq");
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      xPathLexer2.notEquals();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("u6", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("a:;r'1tv+;");
      Token token4 = xPathLexer1.pipe();
      assertEquals("e", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals(32, token5.getTokenType());
      assertEquals(",", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("F", token6.getTokenText());
      
      xPathLexer3.or();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer1.rightParen();
      assertEquals(",", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertEquals("Zq", token8.getTokenText());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("i", token9.getTokenText());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("1F", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.whitespace();
      assertEquals((-2), token11.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.2364164862240385
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(>V+%lJZig'8");
      Token token0 = xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("ph(>V+%lJZig'8");
      Token token3 = xPathLexer1.at();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer1.minus();
      assertEquals("h", token4.getTokenText());
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("J", token5.getTokenText());
      
      String string1 = token3.toString();
      assertEquals("[ (16) (p)", string1);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer1.and();
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("(", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals("Z", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      String string2 = token2.toString();
      assertEquals("[ (22) (+%)", string2);
      
      xPathLexer0.currentPosition();
      Token token8 = xPathLexer1.star();
      assertEquals(">", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.setXPath("[ (22) (>V)");
      Token token9 = xPathLexer0.nextToken();
      assertEquals("ig'8", token9.getTokenText());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.at();
      xPathLexer1.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("i", token11.getTokenText());
      
      xPathLexer3.number();
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("g", token12.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5467019791368244
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">o`t#- ");
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("Ewal6)e-fCca9");
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer("j \"kG");
      xPathLexer2.nextToken();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.8907384227536044
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.dots();
      assertEquals("1", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("S", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("n", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("z<", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("#`", token6.getTokenText());
      
      xPathLexer1.and();
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.whitespace();
      assertEquals("", token9.getTokenText());
      assertEquals((-2), token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      Token token10 = xPathLexer3.rightParen();
      assertEquals("[", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("j");
      xPathLexer1.operatorName();
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals(" (", token11.getTokenText());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("S&!:");
      xPathLexer2.operatorName();
      Token token12 = xPathLexer5.at();
      assertEquals(16, token12.getTokenType());
      assertEquals("S", token12.getTokenText());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals("'", token13.getTokenText());
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.454241132660841
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (4) (|)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (23) (')", string1);
      
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.star();
      assertEquals("+", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("sX", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.plus();
      XPathLexer xPathLexer3 = new XPathLexer("Vd?.[\"7(b=n&");
      Token token4 = xPathLexer1.at();
      assertEquals("'", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.pipe();
      assertEquals("K", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer3.comma();
      assertEquals("V", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("+", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer2.plus();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("s", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token9 = xPathLexer5.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.6283434446063234
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dollar();
      assertEquals("+", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("s", token2.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("\f4@Ed");
      Token token3 = xPathLexer0.plus();
      assertEquals("z", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(";<o@rM:Tq&l4NngL");
      Token token6 = xPathLexer2.nextToken();
      assertEquals(";<o@rM:Tq&l4NngL", token6.getTokenText());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("u", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("W", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("v-hvT Xx>w");
      xPathLexer1.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token9 = xPathLexer5.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer2.rightParen();
      assertEquals(";", token10.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer0.at();
      assertEquals("`", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.1456023033112843
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.plus();
      xPathLexer0.pipe();
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer1.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer(">X>')jl)H");
      xPathLexer0.pipe();
      xPathLexer2.nextToken();
      xPathLexer2.dollar();
      xPathLexer1.star();
      xPathLexer1.or();
      xPathLexer0.at();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer3.dots();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.713534292255378
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("s", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      Token token3 = xPathLexer1.plus();
      assertEquals(" ", token3.getTokenText());
      
      xPathLexer2.notEquals();
      xPathLexer1.notEquals();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("zK", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer2.at();
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer1.minus();
      assertEquals("x", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      String string0 = token6.toString();
      assertEquals("[ (16) (l)", string0);
      
      Token token8 = xPathLexer0.dollar();
      String string1 = token8.toString();
      assertEquals("[ (26) ()", string1);
      
      xPathLexer3.relationalOperator();
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("Y0", token9.getTokenText());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.1002725088268184
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("<", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("goaE_z", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(">X>')jl)H");
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(9, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexei");
      xPathLexer1.mod();
      Token token8 = xPathLexer1.leftParen();
      assertEquals("X", token8.getTokenText());
      
      xPathLexer0.slashes();
      xPathLexer0.at();
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals("o", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals(">", token12.getTokenText());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.7235989923590624
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.colon();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("8D=U8e\"SX8");
      xPathLexer0.operatorName();
      xPathLexer1.notEquals();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer("8D=U8e\"SX8");
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.9235367250365836
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("#`", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.plus();
      assertEquals("P", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals("h", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.minus();
      token7.toString();
      Token token8 = xPathLexer0.dollar();
      assertEquals(">", token8.getTokenText());
      
      String string1 = token7.toString();
      assertEquals("[ (6) (@)", string1);
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("Bkg", token9.getTokenText());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.1861800687700077
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("/", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token2 = xPathLexer1.leftParen();
      assertEquals("m", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(12, token3.getTokenType());
      assertEquals("</", token3.getTokenText());
      
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("q", token6.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.1986870524302033
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.mod();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.comma();
      assertEquals("z", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.colon();
      assertEquals("`", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("q;_h.P]Kf{<");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.pipe();
      assertEquals(";", token6.getTokenText());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("@", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("k", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token10 = xPathLexer4.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer1.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      assertEquals("<", token11.getTokenText());
      
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
      assertEquals("7", token13.getTokenText());
      
      Token token14 = xPathLexer2.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer4.doubleColon();
      assertEquals(19, token15.getTokenType());
      
      Token token16 = xPathLexer5.pipe();
      assertEquals(17, token16.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.5144940888816294
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals("|", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("G", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer0.plus();
      Token token3 = xPathLexer3.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer3.comma();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(2, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token5 = xPathLexer4.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (4) (y)");
      xPathLexer5.rightBracket();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      xPathLexer3.operatorName();
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer6.rightParen();
      XPathLexer xPathLexer7 = new XPathLexer("");
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer8.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer6.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer3.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer4.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals(" ", token10.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.3510379605860434
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("x{*wAuD");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("x{*wAuD");
      xPathLexer1.getPreviousToken();
      xPathLexer1.star();
      xPathLexer0.or();
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.at();
      Token token0 = xPathLexer1.and();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.013910362306671
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("A9gV/Ql?-");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("Q", token3.getTokenText());
      
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer2.colon();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("werken.saxpath.XPathLexer", token7.getTokenText());
      
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0298099324709487
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@bk<7?c");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("|'+sXzKuW`|r@bk<7?c");
      xPathLexer2.pipe();
      xPathLexer1.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("['7I");
      xPathLexer2.setPreviousToken(token0);
      xPathLexer0.plus();
      xPathLexer0.consume();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.leftParen();
      xPathLexer4.dollar();
      xPathLexer1.leftParen();
      xPathLexer0.not();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.equals();
      xPathLexer0.comma();
      xPathLexer1.consume();
      xPathLexer2.or();
      xPathLexer3.at();
      Token token1 = xPathLexer3.and();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.836697907550982
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.relationalOperator();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer0.slashes();
      assertEquals("e", token2.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer3.and();
      Token token3 = xPathLexer2.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer1.comma();
      assertEquals("1", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("Seunz", token5.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.at();
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals("<", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      xPathLexer6.operatorName();
      Token token8 = xPathLexer7.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer8.leftParen();
      Token token9 = xPathLexer7.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer7.comma();
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("A9gV/Ql?-");
      Token token12 = xPathLexer9.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("A", token12.getTokenText());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.109972742696385
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.consume(0);
      XPathLexer xPathLexer1 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      xPathLexer0.literal();
      xPathLexer1.doubleColon();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("hsRc5lUjC");
      xPathLexer0.relationalOperator();
      xPathLexer2.rightBracket();
      xPathLexer2.LA(0);
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      xPathLexer3.not();
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer1.consume();
      xPathLexer3.or();
      xPathLexer1.at();
      Token token0 = xPathLexer3.and();
      assertNull(token0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.398892942995738
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      Token token0 = xPathLexer0.dollar();
      assertEquals("m", token0.getTokenText());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(11, token1.getTokenType());
      assertEquals("/", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.plus();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("}", token2.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("g", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("o", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("m</q}KgoaE_z");
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer1.leftParen();
      xPathLexer1.slashes();
      Token token8 = xPathLexer4.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("m", token8.getTokenText());
      
      Token token9 = xPathLexer3.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("a", token10.getTokenText());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.0066540164163493
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("2Rt{j1i");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer0.slashes();
      xPathLexer2.relationalOperator();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      xPathLexer1.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("Ewal6)e-fCca9");
      xPathLexer4.operatorName();
      xPathLexer4.nextToken();
      xPathLexer3.rightParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.pipe();
      XPathLexer xPathLexer7 = new XPathLexer("2Rt{j1i");
      xPathLexer2.relationalOperator();
      Token token0 = xPathLexer4.and();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4990316763470544
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8200807721226029
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("Ewal6)e-fCca9");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.and();
      Token token1 = xPathLexer2.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer1.and();
      Token token2 = xPathLexer1.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals("w", token6.getTokenText());
      
      xPathLexer5.rightBracket();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("al6", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("Ewal6)e-fCca9");
      Token token8 = xPathLexer6.rightParen();
      assertEquals("E", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer7.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer0.whitespace();
      assertEquals((-2), token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      Token token12 = xPathLexer5.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.026254608110446
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("UiR^sqrYVFimsWYJ");
      Token token0 = xPathLexer1.star();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.plus();
      xPathLexer0.consume();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("V -3^q6dx:\"W.");
      xPathLexer1.nextToken();
      xPathLexer2.getPreviousToken();
      xPathLexer0.operatorName();
      xPathLexer2.identifier();
      Token token1 = xPathLexer2.getPreviousToken();
      assertNull(token1);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.02191194634403
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.plus();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(";6");
      xPathLexer1.setPreviousToken(token2);
      assertEquals(".", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("RwX{sZL?(Q!^6owE");
      xPathLexer2.colon();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(";6");
      xPathLexer3.identifier();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer2.notEquals();
      assertEquals("wX", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("RwX{sZL?(Q!^6owE");
      Token token5 = xPathLexer4.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals(";", token6.getTokenText());
      
      Token token7 = xPathLexer3.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.rightParen();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer4.at();
      assertEquals("{", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer4.rightParen();
      assertEquals("s", token9.getTokenText());
      
      Token token10 = xPathLexer6.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer5.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6741588147028912
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.not();
      assertEquals("e", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("u", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("#", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("`", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("8", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(">53f=4>YsiIcj|QV");
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("'", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(">53f=4>YsiIcj|QV");
      Token token9 = xPathLexer2.relationalOperator();
      assertEquals(9, token9.getTokenType());
      assertEquals(">", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("5", token10.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.996429252538055
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('z');
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.isIdentifierChar('z');
      xPathLexer0.mod();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.consume((-1141));
      XPathLexer xPathLexer1 = new XPathLexer("[ (2) ( )");
      xPathLexer0.plus();
      xPathLexer1.plus();
      xPathLexer1.pipe();
      xPathLexer1.comma();
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      xPathLexer1.rightBracket();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6910299052140063
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      xPathLexer1.plus();
      xPathLexer2.notEquals();
      xPathLexer1.notEquals();
      xPathLexer0.plus();
      xPathLexer2.pipe();
      xPathLexer2.comma();
      xPathLexer1.nextToken();
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer1.relationalOperator();
      xPathLexer2.minus();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.789538843278766
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("'", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("Ewal6)e-fCca9");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      Token token2 = xPathLexer3.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("|", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer1.comma();
      assertEquals("'", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("K=M;}?vzo1vd%;0#");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer6.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer2.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals(")", token8.getTokenText());
      
      Token token9 = xPathLexer6.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer7.rightParen();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token10 = xPathLexer7.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer5.rightParen();
      assertEquals("K", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.415603106602588
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.dollar();
      assertEquals("|", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(">o`t#- ");
      Token token1 = xPathLexer1.relationalOperator();
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals("`", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("y3NXmZR+3s ");
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals("i", token10.getTokenText());
      
      Token token11 = xPathLexer2.nextToken();
      assertEquals(30, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.at();
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token13 = xPathLexer4.leftParen();
      assertEquals(1, token13.getTokenType());
      
      Token token14 = xPathLexer4.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer4.dollar();
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer4.minus();
      assertEquals(6, token16.getTokenType());
      
      Token token17 = xPathLexer0.not();
      assertEquals("1", token17.getTokenText());
      assertEquals(23, token17.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2640762259803617
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer1.rightBracket();
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.star();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.colon();
      assertEquals("+", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.star();
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("s", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertNotSame(token7, token0);
      
      Token token8 = xPathLexer2.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("`|r@k<7?c", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(":e5enf:ww1su");
      XPathLexer xPathLexer4 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer1.nextToken();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.relationalOperator();
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer7.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer0.rightParen();
      assertEquals(2, token13.getTokenType());
      assertEquals("`", token13.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token14 = xPathLexer0.dots();
      assertEquals(13, token14.getTokenType());
      assertEquals("|", token14.getTokenText());
      
      xPathLexer0.operatorName();
      Token token15 = xPathLexer6.number();
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8234603335114108
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.star();
      assertEquals("G", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("u6", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token4 = xPathLexer0.pipe();
      assertEquals("@", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Vd?.[\"7(b=n&");
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("i", token5.getTokenText());
      
      xPathLexer1.rightBracket();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.at();
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("?", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (4) (y)");
      Token token8 = xPathLexer2.leftParen();
      assertEquals(".", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("D!~eXTGBc+\"5@W(");
      Token token9 = xPathLexer5.dollar();
      assertEquals("D", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer1.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.9404592479866147
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('z');
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.isIdentifierChar('z');
      xPathLexer0.mod();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1142));
      XPathLexer xPathLexer1 = new XPathLexer("[ (2) ( )");
      xPathLexer1.mod();
      xPathLexer1.leftParen();
      xPathLexer1.colon();
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.034153950879804
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      xPathLexer0.consume((-840));
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9755971211063013
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (y)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("6", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("v-hvT Xx>w");
      Token token3 = xPathLexer1.plus();
      assertEquals("v", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals("", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("@", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("-", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      xPathLexer1.colon();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("i", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.operatorName();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("vT", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightParen();
      assertEquals("1", token9.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer1.at();
      assertEquals(" ", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.9924633045812845
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (3) (y)", string0);
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("6@", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.plus();
      assertEquals("i", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("1", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.minus();
      assertEquals("F", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      String string1 = token1.toString();
      assertEquals("[ (15) ()", string1);
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      token0.toString();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("`Ph@>Bkg", token8.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.dots();
      assertEquals("`", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8085003488830869
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("G", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("D@I5[iuT4H(4P");
      Token token3 = xPathLexer2.plus();
      assertEquals("D", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.notEquals();
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("@I", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(" l-xY0)K)m%J<");
      Token token6 = xPathLexer4.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("-", token7.getTokenText());
      
      xPathLexer1.or();
      Token token8 = xPathLexer4.at();
      assertEquals(")", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.rightParen();
      assertEquals("x", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.3774157739088713
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer1 = new XPathLexer("e&lId^r$");
      xPathLexer0.plus();
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("e", token0.getTokenText());
      
      Token token1 = xPathLexer1.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("lId", token2.getTokenText());
      
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("gMy*JTV");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer1.leftParen();
      assertEquals("r", token5.getTokenText());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("l", token7.getTokenText());
      
      xPathLexer2.mod();
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("g", token8.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.932215221010231
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.colon();
      String string0 = token0.toString();
      assertEquals("[ (18) (y)", string0);
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("Gu", token1.getTokenText());
      assertEquals(19, token1.getTokenType());
      
      xPathLexer1.colon();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("@", token2.getTokenText());
      
      xPathLexer1.notEquals();
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("i1", token3.getTokenText());
      
      xPathLexer1.and();
      Token token4 = xPathLexer0.plus();
      assertEquals("F", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("#`P@>Bkg", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("1;");
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.operatorName();
      Token token8 = xPathLexer4.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer5.operatorName();
      Token token9 = xPathLexer0.slashes();
      assertEquals("#", token9.getTokenText());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      assertEquals("`", token10.getTokenText());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals("P", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer2.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.18168661633937
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(>V+%lJZig'8");
      Token token0 = xPathLexer0.number();
      String string0 = token0.toString();
      assertEquals("[ (30) ()", string0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (30) ()");
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer(":*A[@8K8U*");
      xPathLexer2.plus();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("l", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer1.colon();
      assertEquals("[", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer3.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer2.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("JZig", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(" ", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals("*", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.comma();
      assertEquals("(", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.plus();
      assertEquals("3", token11.getTokenText());
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer3.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.896924037988612
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g.1");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("g.1", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.star();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.plus();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":e5enf:ww1su");
      XPathLexer xPathLexer3 = new XPathLexer(":e5enf:ww1su");
      Token token8 = xPathLexer3.rightParen();
      assertEquals(2, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("J#%z(U;e8$h2H8!");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token9 = xPathLexer5.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer5.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      assertEquals(":", token11.getTokenText());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer1.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer3.dots();
      assertEquals("e", token14.getTokenText());
      
      Token token15 = xPathLexer5.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.722761155755033
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("e&lId^r$");
      xPathLexer0.plus();
      xPathLexer1.notEquals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer2.star();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("e&lId^r$");
      xPathLexer3.comma();
      xPathLexer3.dots();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.932085645370451
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("o*-2T6Nt}#*y");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.colon();
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("h;,(");
      xPathLexer1.operatorName();
      xPathLexer3.equals();
      xPathLexer0.notEquals();
      xPathLexer2.dots();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("-RlHcKZ9@~U& ");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.rightParen();
      XPathLexer xPathLexer6 = new XPathLexer("iw{.Z}{}]");
      xPathLexer6.relationalOperator();
      xPathLexer1.minus();
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.leftParen();
      xPathLexer4.slashes();
      xPathLexer5.at();
      xPathLexer1.comma();
      xPathLexer2.not();
      XPathLexer xPathLexer8 = new XPathLexer("-RlHcKZ9@~U& ");
      xPathLexer8.dollar();
      Token token0 = xPathLexer6.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8209184946452202
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (3) (y)", string0);
      
      Token token1 = xPathLexer0.colon();
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("6", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("F", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("#`Ph@>Bkg", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("<_DoKf@DfR%");
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer2.rightParen();
      assertEquals(2, token10.getTokenType());
      assertEquals("<", token10.getTokenText());
      
      xPathLexer1.leftParen();
      Token token11 = xPathLexer0.slashes();
      assertEquals("#", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("<_DoKf@DfR%");
      Token token12 = xPathLexer2.at();
      assertEquals(16, token12.getTokenType());
      assertEquals("_", token12.getTokenText());
      
      Token token13 = xPathLexer0.comma();
      assertEquals("`", token13.getTokenText());
      
      Token token14 = xPathLexer3.not();
      assertEquals(23, token14.getTokenType());
      assertEquals("<", token14.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token15 = xPathLexer2.dollar();
      assertEquals("D", token15.getTokenText());
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer4.colon();
      assertEquals(18, token16.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8061196118693534
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      xPathLexer1.plus();
      xPathLexer2.notEquals();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      xPathLexer3.star();
      xPathLexer3.or();
      xPathLexer1.at();
      xPathLexer3.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer("e&lId^r$");
      xPathLexer4.comma();
      xPathLexer4.dots();
      Token token0 = xPathLexer1.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.325562834846326
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.plus();
      assertEquals("m", token1.getTokenText());
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer(";6");
      Token token2 = xPathLexer1.dots();
      assertEquals(";", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("w", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("e", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.9719851624170415
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      Token token2 = xPathLexer2.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("[", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer1.dollar();
      assertEquals("y", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.at();
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("G", token5.getTokenText());
      
      xPathLexer2.rightBracket();
      xPathLexer1.operatorName();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("u6", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer4.leftParen();
      assertEquals("c", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals("6", token9.getTokenText());
      
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals(")", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer5.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2867888831676173
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(">o`t#- ");
      Token token0 = xPathLexer1.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer1.literal();
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("y3NXmZR+3s ");
      Token token5 = xPathLexer2.comma();
      assertEquals("y", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("@", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("i1F#`P@>Bkg", token7.getTokenText());
      
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer3.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token10 = xPathLexer3.minus();
      assertEquals(6, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(">o`t#- ");
      xPathLexer3.leftParen();
      Token token11 = xPathLexer4.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals(">", token11.getTokenText());
      
      xPathLexer1.at();
      Token token12 = xPathLexer2.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer0.not();
      assertEquals("1", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer4.dollar();
      assertEquals(26, token14.getTokenType());
      assertEquals("o", token14.getTokenText());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.901145476200362
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer2 = new XPathLexer("SPsu");
      XPathLexer xPathLexer3 = new XPathLexer("1;");
      xPathLexer3.operatorName();
      xPathLexer1.notEquals();
      xPathLexer2.at();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("LEMkBp^M6*>`=(");
      xPathLexer0.slashes();
      xPathLexer3.comma();
      xPathLexer2.at();
      xPathLexer3.and();
      xPathLexer1.not();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.704707539234866
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("'", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("s", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.notEquals();
      Token token3 = xPathLexer1.dots();
      assertEquals("|", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("KuW", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer1.rightParen();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer1.at();
      assertEquals("+", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("9UC!^34U'x6>}T}][");
      Token token7 = xPathLexer7.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer3.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals("|", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.668082483114408
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token2 = xPathLexer1.notEquals();
      assertEquals("|'", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("+", token4.getTokenText());
      
      Token token5 = xPathLexer1.at();
      assertEquals("s", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.minus();
      Token token6 = xPathLexer0.dollar();
      assertEquals("z", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals("zKuW", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer1.div();
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer1.consume((-1085));
      XPathLexer xPathLexer3 = new XPathLexer("|k");
      int int0 = xPathLexer1.currentPosition();
      assertEquals((-1075), int0);
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      assertNotNull(token11);
      
      xPathLexer1.consume();
      Token token12 = xPathLexer1.leftParen();
      assertEquals(1, token12.getTokenType());
      
      Token token13 = xPathLexer3.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.82673086971096
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token2 = xPathLexer0.plus();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("<", token4.getTokenText());
      assertEquals(7, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("uZ");
      xPathLexer0.plus();
      Token token5 = xPathLexer1.at();
      assertEquals("u", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.minus();
      assertEquals("Z", token6.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (23) (S)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer("uZ");
      Token token7 = xPathLexer2.dollar();
      assertEquals("u", token7.getTokenText());
      
      String string1 = token2.toString();
      assertEquals("[ (5) (u)", string1);
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer2.nextToken();
      assertEquals("Z", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dollar();
      Token token10 = xPathLexer2.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer3.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.0082560627622454
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("'", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("+", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("r", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("k", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("|'", token9.getTokenText());
      
      xPathLexer0.at();
      xPathLexer2.relationalOperator();
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1;");
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      assertEquals("7", token11.getTokenText());
      
      Token token12 = xPathLexer2.comma();
      assertEquals(32, token12.getTokenType());
      
      xPathLexer0.at();
      xPathLexer2.and();
      Token token13 = xPathLexer1.not();
      assertEquals("+", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("c", token14.getTokenText());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.1426341271326006
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken(token1);
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("K", token2.getTokenText());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("u", token4.getTokenText());
      
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer("q;_h.P]Kf{<");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.pipe();
      assertEquals(";", token6.getTokenText());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer0.dollar();
      assertEquals("`", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals("|", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token10 = xPathLexer4.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer1.leftParen();
      assertEquals(1, token11.getTokenType());
      assertEquals("_", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("r", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer0.minus();
      assertEquals(6, token14.getTokenType());
      assertEquals("@", token14.getTokenText());
      
      Token token15 = xPathLexer2.not();
      assertEquals(23, token15.getTokenType());
      
      Token token16 = xPathLexer4.doubleColon();
      assertEquals(19, token16.getTokenType());
      
      Token token17 = xPathLexer5.pipe();
      assertEquals(17, token17.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.9965316781273497
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dollar();
      assertEquals("+", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals("z", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("K", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("u", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("yl}H,)>+?4O6");
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer2.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer3.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer4.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token8 = xPathLexer3.rightBracket();
      assertEquals("}", token8.getTokenText());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer4.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals("W", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      xPathLexer6.relationalOperator();
      Token token11 = xPathLexer1.leftParen();
      assertEquals(" ", token11.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer6.slashes();
      assertEquals("c", token12.getTokenText());
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer3.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("H", token13.getTokenText());
      
      Token token14 = xPathLexer6.comma();
      assertEquals(32, token14.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer7.not();
      Token token15 = xPathLexer1.rightBracket();
      assertEquals(4, token15.getTokenType());
      
      Token token16 = xPathLexer1.plus();
      assertEquals(5, token16.getTokenType());
      
      Token token17 = xPathLexer2.leftBracket();
      assertEquals(3, token17.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.4614480237337473
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer1.and();
      xPathLexer1.and();
      xPathLexer0.operatorName();
      xPathLexer0.whitespace();
      xPathLexer1.plus();
      xPathLexer0.minus();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer3.currentPosition();
      xPathLexer2.or();
      xPathLexer2.div();
      xPathLexer2.literal();
      xPathLexer1.slashes();
      xPathLexer1.whitespace();
      Token token0 = xPathLexer3.and();
      assertNull(token0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.8563208340193937
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("S", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("e", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("un", token3.getTokenText());
      
      xPathLexer0.plus();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("<#", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("`8 '", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Dt/0");
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("`", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals("D", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("t", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      assertEquals("8", token11.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token12 = xPathLexer4.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer2.dollar();
      assertEquals(26, token13.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token14 = xPathLexer5.minus();
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.7537912625520986
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals("1", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      Token token1 = xPathLexer0.not();
      assertEquals("S", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer2.relationalOperator();
      xPathLexer0.and();
      xPathLexer1.and();
      xPathLexer2.plus();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.plus();
      assertEquals("u", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("n", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer2.comma();
      assertEquals("S", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("eunz", token6.getTokenText());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer3.relationalOperator();
      Token token8 = xPathLexer2.rightParen();
      assertEquals(2, token8.getTokenType());
      assertEquals("<", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("ZcS7R");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.6854319746235475
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      XPathLexer xPathLexer2 = new XPathLexer(".Psu");
      XPathLexer xPathLexer3 = new XPathLexer("1;");
      xPathLexer3.operatorName();
      xPathLexer1.notEquals();
      xPathLexer3.relationalOperator();
      xPathLexer3.leftParen();
      xPathLexer2.nextToken();
      xPathLexer1.getPreviousToken();
      xPathLexer3.equals();
      xPathLexer3.not();
      xPathLexer2.slashes();
      xPathLexer2.doubleColon();
      Token token0 = xPathLexer3.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5446370285640894
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      xPathLexer2.plus();
      Token token4 = xPathLexer1.rightParen();
      Token token5 = xPathLexer1.pipe();
      assertEquals("|", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("6", token6.getTokenText());
      
      Token token7 = xPathLexer2.plus();
      assertEquals(" ", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("@", token8.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer2.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("(", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      String string1 = token4.toString();
      assertEquals("[ (2) (y)", string1);
      
      xPathLexer2.relationalOperator();
      Token token11 = xPathLexer1.nextToken();
      assertEquals("Gu6", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      xPathLexer3.rightParen();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("[ (2) (y)");
      Token token12 = xPathLexer5.dots();
      assertEquals("[", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      assertEquals("i", token13.getTokenText());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.398802259401263
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(">o`t#- ");
      Token token0 = xPathLexer1.relationalOperator();
      assertEquals(">", token0.getTokenText());
      assertEquals(9, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.nextToken();
      Token token2 = xPathLexer1.plus();
      assertEquals("`", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer1.literal();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("y3NXmZR+3s ");
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("@", token5.getTokenText());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals(30, token8.getTokenType());
      assertEquals("3", token8.getTokenText());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals("i1F#`P@>Bkg", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer2.at();
      assertEquals("N", token10.getTokenText());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token12 = xPathLexer4.leftParen();
      assertEquals(1, token12.getTokenType());
      
      Token token13 = xPathLexer4.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer4.dollar();
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer4.minus();
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer0.not();
      assertEquals("1", token16.getTokenText());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.892876247531195
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.isIdentifierChar('z');
      Token token0 = xPathLexer0.rightParen();
      token0.toString();
      xPathLexer0.mod();
      xPathLexer0.number();
      token0.toString();
      xPathLexer0.not();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.consume((-1141));
      XPathLexer xPathLexer1 = new XPathLexer("[ (2) ( )");
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.976483671362865
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.div();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("XzKuW`|r@k<7?c", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      Token token2 = xPathLexer0.plus();
      assertEquals("z", token2.getTokenText());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("K", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token5 = xPathLexer3.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      
      xPathLexer6.leftParen();
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("[ ", token7.getTokenText());
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("(", token8.getTokenText());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer6.plus();
      assertEquals(5, token10.getTokenType());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.1436823453423672
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.dots();
      xPathLexer0.literal();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      xPathLexer1.mod();
      xPathLexer0.leftParen();
      xPathLexer1.slashes();
      xPathLexer1.at();
      xPathLexer0.comma();
      xPathLexer0.not();
      xPathLexer1.dollar();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.597645534112315
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("''`51wt");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(27, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token6 = xPathLexer2.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals("`", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7037667856147412
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("X", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      Token token2 = xPathLexer1.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(" ", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("|", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token6 = xPathLexer1.dollar();
      assertEquals("l", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token7 = xPathLexer0.leftParen();
      assertEquals("r", token7.getTokenText());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals("|", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("'", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token11 = xPathLexer5.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.95777866276207
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.at();
      Token token1 = xPathLexer0.not();
      assertEquals("s", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("X", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.slashes();
      assertEquals("z", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("u", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("W", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("`|r@k<7?c", token7.getTokenText());
      
      Token token8 = xPathLexer0.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("`", token8.getTokenText());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      assertEquals("|", token9.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      assertEquals("r", token10.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer0.at();
      assertEquals("@", token11.getTokenText());
      assertEquals(16, token11.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.9269941935735466
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("gB1");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("B1", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("gB1");
      Token token4 = xPathLexer2.rightBracket();
      assertEquals("g", token4.getTokenText());
      
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[dp N6X+");
      XPathLexer xPathLexer4 = new XPathLexer("mg32=ZcBHw)!}@wG4,");
      Token token9 = xPathLexer3.nextToken();
      assertEquals("[", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer2.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer3.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer("mg32=ZcBHw)!}@wG4,");
      Token token11 = xPathLexer5.slashes();
      assertEquals("m", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer4.at();
      assertEquals("m", token12.getTokenText());
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer4.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer4.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer1.dollar();
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer1.colon();
      assertEquals(18, token16.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.6723516581445013
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g.1");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("g", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".1", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("g.1");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.plus();
      assertEquals("g", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Vd?.[\"7(b=n&");
      xPathLexer4.and();
      Token token8 = xPathLexer4.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("V", token8.getTokenText());
      
      Token token9 = xPathLexer4.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("d", token9.getTokenText());
      
      Token token10 = xPathLexer4.nextToken();
      assertEquals("?.[\"7(b=n&", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.div();
      Token token11 = xPathLexer2.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer3.minus();
      assertEquals(6, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token13 = xPathLexer5.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=3.5687547813406804
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      int int0 = (-1224);
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1224));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.9322879054065059
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      token2.toString();
      Token token3 = xPathLexer0.not();
      assertEquals("s", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      token2.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (|)", string0);
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      assertEquals("XzKuW", token4.getTokenText());
      
      xPathLexer0.colon();
      Token token5 = xPathLexer0.star();
      assertEquals("|", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token7 = xPathLexer0.plus();
      Token token8 = xPathLexer0.at();
      assertEquals("?", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals("c", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.minus();
      String string1 = token6.toString();
      assertEquals("[ (22) (k<)", string1);
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      String string2 = token7.toString();
      assertEquals("[ (5) (7)", string2);
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token13 = xPathLexer1.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.572123845190856
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token0.toString();
      assertEquals("[ (18) (y)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.star();
      assertEquals("6", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("Fp3<_H-");
      Token token5 = xPathLexer1.notEquals();
      assertEquals("Fp", token5.getTokenText());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.and();
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("_", token7.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.mod();
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertTrue(boolean0);
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.0668449695543143
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("<", token0.getTokenText());
      assertEquals(7, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.plus();
      assertEquals("/", token1.getTokenText());
      
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("q", token3.getTokenText());
      
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer1.colon();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("}", token6.getTokenText());
      
      xPathLexer1.minus();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("KgoaE_z", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(">X>')jl)H");
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals(">", token9.getTokenText());
      assertEquals(9, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals("X", token10.getTokenText());
      
      Token token11 = xPathLexer1.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("m</q}KgoaE_z");
      Token token13 = xPathLexer2.leftParen();
      assertEquals(1, token13.getTokenType());
      assertEquals(">", token13.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token14 = xPathLexer4.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer0.dollar();
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer1.minus();
      assertEquals(6, token16.getTokenType());
      
      Token token17 = xPathLexer3.not();
      assertEquals(23, token17.getTokenType());
      assertEquals("m", token17.getTokenText());
      
      Token token18 = xPathLexer2.doubleColon();
      assertEquals(19, token18.getTokenType());
      assertEquals("')", token18.getTokenText());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.6492534907516674
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(>V+%lJZig'8");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" /!t4y$#");
      Token token1 = xPathLexer1.star();
      assertEquals(" ", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer1.or();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("(>", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("V", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer3.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("+", token7.getTokenText());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.9369224274767418
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals("|", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.plus();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("6", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.comma();
      assertEquals("c", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals("o", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token9.getTokenText());
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer1.nextToken();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer("y3NXmZR+3s ");
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.leftParen();
      assertEquals(1, token11.getTokenType());
      
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer3.minus();
      assertEquals(6, token13.getTokenType());
      assertEquals("y", token13.getTokenText());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.053466260804888
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("y", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dollar();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("u", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("@", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("i", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("1", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("F#`Ph@>Bkg", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("F", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.dollar();
      Token token10 = xPathLexer2.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer3.at();
      assertEquals(16, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token12 = xPathLexer1.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals(")", token12.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer5.minus();
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer1.not();
      assertEquals(23, token16.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.7433301657850528
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      xPathLexer1.and();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer2.operatorName();
      xPathLexer1.rightParen();
      xPathLexer2.literal();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.rightBracket();
      xPathLexer2.relationalOperator();
      xPathLexer1.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-69));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.1944138975419554
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("y", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      xPathLexer2.or();
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("y|Gu6@i1F#`P@>Bkg");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token3 = xPathLexer5.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token4 = xPathLexer2.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      Token token5 = xPathLexer2.dots();
      assertEquals("|", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.98029731797073
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.minus();
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      xPathLexer1.slashes();
      xPathLexer1.literal();
      xPathLexer1.literal();
      xPathLexer1.dollar();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer1.doubleColon();
      xPathLexer0.or();
      xPathLexer1.dollar();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      xPathLexer3.minus();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer1.operatorName();
      xPathLexer4.endPosition();
      Token token1 = xPathLexer4.or();
      assertNull(token1);
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7757285059022532
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("s", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer2.notEquals();
      Token token4 = xPathLexer1.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("(aWk(IvmfR-p}");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("XzKuW", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token6 = xPathLexer5.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer3.star();
      assertEquals("(", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer4.rightParen();
      Token token9 = xPathLexer6.comma();
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token10 = xPathLexer4.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer4.not();
      assertEquals(23, token11.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.104797841038468
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      token0.toString();
      xPathLexer0.relationalOperator();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) ())", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.colon();
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.116763533291344
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("m</q}KgoaE_z");
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("/", token2.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.minus();
      assertEquals("K", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("goaE_z", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(">X>')jl)H");
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(">", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexei");
      xPathLexer2.dollar();
      Token token7 = xPathLexer1.star();
      assertEquals("X", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer3.leftParen();
      assertEquals("c", token9.getTokenText());
      assertEquals(1, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer3.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("o", token11.getTokenText());
      
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals("o", token13.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(12, int0);
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.7620342467926724
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g.1");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.star();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.plus();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":e5enf:ww1su");
      XPathLexer xPathLexer3 = new XPathLexer(":e5enf:ww1su");
      Token token9 = xPathLexer3.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals(":", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("J#%z(U;e8$h2H8!");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      xPathLexer5.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.slashes();
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      assertEquals(":", token10.getTokenText());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer1.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer3.dots();
      assertEquals("e", token13.getTokenText());
      
      Token token14 = xPathLexer5.dots();
      assertEquals(13, token14.getTokenType());
      
      char char0 = xPathLexer2.LA(0);
      assertEquals(':', char0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.7163227532352496
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g. 12");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("12", token2.getTokenText());
      
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer1.or();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.rightParen();
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer4.notEquals();
      assertEquals("[ ", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("(", token6.getTokenText());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer2.dots();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.9266741112102201
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      xPathLexer2.plus();
      Token token2 = xPathLexer1.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("y", token2.getTokenText());
      
      Token token3 = xPathLexer2.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(" ", token3.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      Token token4 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer0.comma();
      assertEquals("i", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer1.colon();
      assertEquals("G", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      token4.toString();
      Token token7 = xPathLexer2.rightBracket();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.minus();
      assertEquals(6, token8.getTokenType());
      assertEquals("u", token8.getTokenText());
      
      token4.toString();
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      
      String string0 = token7.toString();
      assertEquals("[ (4) (()", string0);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer1.nextToken();
      assertEquals(30, token10.getTokenType());
      assertEquals("6", token10.getTokenText());
      
      Token token11 = xPathLexer4.rightParen();
      assertEquals(2, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer4.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.6570223215552087
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      String string0 = "A9gV/Ql?-";
      XPathLexer xPathLexer1 = new XPathLexer("A9gV/Ql?-");
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      xPathLexer0.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightParen();
      xPathLexer1.nextToken();
      xPathLexer1.plus();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.7859530374477592
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g.1");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".1", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token9 = xPathLexer1.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(":e5enf:ww1su");
      XPathLexer xPathLexer3 = new XPathLexer(":e5enf:ww1su");
      Token token10 = xPathLexer2.nextToken();
      assertEquals(":", token10.getTokenText());
      
      Token token11 = xPathLexer3.rightParen();
      assertEquals(":", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer3.leftParen();
      assertEquals(1, token12.getTokenType());
      assertEquals("e", token12.getTokenText());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
      assertEquals("5", token14.getTokenText());
      
      Token token15 = xPathLexer3.comma();
      assertEquals(32, token15.getTokenType());
      assertEquals("e", token15.getTokenText());
      
      Token token16 = xPathLexer0.not();
      assertEquals(23, token16.getTokenType());
      
      Token token17 = xPathLexer2.dollar();
      assertEquals(26, token17.getTokenType());
      
      Token token18 = xPathLexer2.colon();
      assertEquals(18, token18.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=3.524695114614892
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g.1");
      Token token0 = xPathLexer0.dots();
      assertEquals("g.", token0.getTokenText());
      assertEquals(14, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer1.star();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("1", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("F4<R^");
      xPathLexer1.operatorName();
      xPathLexer1.notEquals();
      xPathLexer2.and();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("F4<R^");
      XPathLexer xPathLexer4 = new XPathLexer("g.1");
      Token token7 = xPathLexer4.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("F", token9.getTokenText());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.setXPath("[ (");
      Token token11 = xPathLexer2.minus();
      assertEquals("4", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer3.notEquals();
      assertEquals("F4", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.0587765179553648
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.werken.saxpath.XPathLexer", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.0799236290327974
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.isIdentifierChar('E');
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.mod();
      Token token11 = xPathLexer0.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token13 = xPathLexer0.dots();
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer0.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.7602295441021094
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.relationalOperator();
      xPathLexer1.and();
      xPathLexer0.and();
      xPathLexer1.operatorName();
      Token token0 = xPathLexer0.plus();
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(" ", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      Token token2 = xPathLexer3.pipe();
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      Token token3 = xPathLexer1.slashes();
      assertEquals("[", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer4.nextToken();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.getXPath();
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer2.or();
      xPathLexer5.LA(216);
      xPathLexer2.comma();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer1.not();
      boolean boolean0 = xPathLexer6.isIdentifierChar('\uFFFF');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer4.not();
      assertEquals(" ", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.star();
      assertEquals(20, token10.getTokenType());
      
      char char0 = xPathLexer2.LA(216);
      assertEquals('\uFFFF', char0);
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.rightParen();
      assertEquals(2, token11.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token12 = xPathLexer5.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.7052883811335393
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("g.1");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("g", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(".1", token1.getTokenText());
      assertEquals(31, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.star();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.minus();
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexei");
      xPathLexer3.mod();
      xPathLexer0.leftParen();
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("cX,e!0 >s@0<&H^B");
      Token token9 = xPathLexer4.at();
      assertEquals("c", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer4.not();
      assertEquals("X", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer4.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals(",", token13.getTokenText());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.2524051365761295
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("Ewal6)e-fCca9");
      Token token1 = xPathLexer0.leftParen();
      assertEquals("+", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("s", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("X", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer5.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer1.comma();
      assertEquals("|", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer5.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.minus();
      assertEquals("'", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.1045068388072563
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (3) (y)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.notEquals();
      assertEquals("6@", token2.getTokenText());
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.minus();
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      token4.toString();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals("`", token6.getTokenText());
      
      xPathLexer0.plus();
      String string1 = token4.toString();
      assertEquals("[ (6) (F)", string1);
      
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      assertEquals("h", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals("@", token8.getTokenText());
      assertEquals(5, token8.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('\\');
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      assertEquals(">", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals("kg", token11.getTokenText());
      
      Token token12 = xPathLexer0.identifier();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals((-1), token13.getTokenType());
      
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.1520925902309216
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.plus();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.minus();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      token3.toString();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("P", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("h", token6.getTokenText());
      
      String string1 = token3.toString();
      assertEquals("[ (6) (#)", string1);
      
      xPathLexer0.currentPosition();
      Token token7 = xPathLexer0.star();
      assertEquals("@", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('j');
      assertTrue(boolean0);
      
      Token token8 = xPathLexer0.dots();
      assertEquals(">", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals("Bk", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      xPathLexer1.div();
      xPathLexer0.setPreviousToken((Token) null);
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals("g", token11.getTokenText());
      
      Token token12 = xPathLexer1.identifier();
      assertEquals(15, token12.getTokenType());
      
      Token token13 = xPathLexer1.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals((-1), token14.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.681632155157257
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.isIdentifierStartChar('y');
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.getXPath();
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      xPathLexer0.comma();
      xPathLexer0.plus();
      xPathLexer0.leftBracket();
      xPathLexer0.literal();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=3.1949690384634177
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MoaGWceXj");
      xPathLexer0.notEquals();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftBracket();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.literal();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("MoaGWceXj");
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.9181109797784015
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.number();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.pipe();
      xPathLexer1.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.star();
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token0 = xPathLexer4.leftParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.dollar();
      xPathLexer3.minus();
      xPathLexer3.not();
      Token token1 = xPathLexer0.doubleColon();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.628705426992126
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.div();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.consume();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.0796985442462206
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Gu6", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("@", token3.getTokenText());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("i", token4.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("#`", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("P", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("h", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer0.minus();
      token8.toString();
      Token token9 = xPathLexer0.dollar();
      assertEquals(">", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      String string1 = token8.toString();
      assertEquals("[ (6) (@)", string1);
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.nextToken();
      assertEquals("Bkg", token10.getTokenText());
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals("B", token11.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token12 = xPathLexer0.dots();
      assertEquals("k", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.5755557724932963
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.or();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.doubleColon();
      xPathLexer0.dots();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 125
  /*Coverage entropy=2.0799757773256338
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      xPathLexer0.not();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) (y)", string0);
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("G", token1.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("q.vGXq5m (");
      XPathLexer xPathLexer2 = new XPathLexer("f+Los");
      xPathLexer2.plus();
      Token token2 = xPathLexer0.plus();
      assertEquals("6", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("@", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer1.comma();
      assertEquals("q", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("i1F", token5.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer1.colon();
      Token token6 = xPathLexer2.rightBracket();
      assertEquals("+", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      xPathLexer1.nextToken();
      Token token7 = xPathLexer1.colon();
      assertEquals(" ", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer3.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals("(", token9.getTokenText());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals("Los", token10.getTokenText());
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals("`", token11.getTokenText());
      
      Token token12 = xPathLexer2.identifierOrOperatorName();
      assertNull(token12);
      
      Token token13 = xPathLexer0.at();
      assertEquals("P", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      xPathLexer2.and();
      xPathLexer2.notEquals();
      Token token14 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token14.getTokenType());
      
      Token token15 = xPathLexer3.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      Token token16 = xPathLexer0.notEquals();
      assertEquals("h@", token16.getTokenText());
      assertEquals(22, token16.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=3.368381651279718
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ph(>V+%lJZig'8");
      Token token0 = xPathLexer0.not();
      assertEquals("p", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" /!t4y$#");
      xPathLexer1.or();
      xPathLexer0.or();
      xPathLexer1.or();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("h(", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(">", token4.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer4.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("V", token8.getTokenText());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.9601198462960003
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Gu6", token2.getTokenText());
      
      xPathLexer0.colon();
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      assertEquals("i", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("1", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("v-hvT Xx>w");
      Token token5 = xPathLexer1.comma();
      assertEquals("v", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      xPathLexer1.nextToken();
      Token token6 = xPathLexer1.colon();
      assertEquals("", token6.getTokenText());
      
      xPathLexer1.rightBracket();
      xPathLexer1.operatorName();
      Token token7 = xPathLexer1.nextToken();
      assertEquals("hvT Xx>w", token7.getTokenText());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals("F", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals("h", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.116821191544115
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("'", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("+", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("`", token5.getTokenText());
      
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("J1xFVoM{A(.$}I");
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("J", token6.getTokenText());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      xPathLexer3.rightBracket();
      Token token8 = xPathLexer0.notEquals();
      assertEquals("|r", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer3.pipe();
      xPathLexer4.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("J1xFVoM{A(.$}I");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token10 = xPathLexer4.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.rightParen();
      assertEquals(2, token11.getTokenType());
      assertEquals("1", token11.getTokenText());
      
      Token token12 = xPathLexer0.leftParen();
      assertEquals("@", token12.getTokenText());
      
      Token token13 = xPathLexer5.slashes();
      assertEquals("J", token13.getTokenText());
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer2.comma();
      assertEquals("x", token15.getTokenText());
      assertEquals(32, token15.getTokenType());
      
      Token token16 = xPathLexer5.not();
      assertEquals("1", token16.getTokenText());
      assertEquals(23, token16.getTokenType());
      
      Token token17 = xPathLexer0.dollar();
      assertEquals(26, token17.getTokenType());
      assertEquals("k", token17.getTokenText());
      
      Token token18 = xPathLexer3.colon();
      assertEquals(18, token18.getTokenType());
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.2319357976822145
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      xPathLexer0.dots();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("'io#|sr)QJbF.i)fB");
      Token token0 = xPathLexer1.plus();
      xPathLexer1.plus();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer1.comma();
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      xPathLexer1.rightBracket();
      xPathLexer1.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      xPathLexer3.nextToken();
      xPathLexer2.consume(132);
      xPathLexer2.not();
      xPathLexer2.rightParen();
      Token token1 = xPathLexer3.rightBracket();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 130
  /*Coverage entropy=2.0640751697348763
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      xPathLexer2.plus();
      Token token2 = xPathLexer1.plus();
      assertEquals("y", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer2.pipe();
      assertEquals(" ", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("6", token4.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer1.colon();
      Token token5 = xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("1", token7.getTokenText());
      
      xPathLexer1.colon();
      token5.toString();
      Token token8 = xPathLexer2.rightBracket();
      xPathLexer0.relationalOperator();
      xPathLexer1.minus();
      token5.toString();
      xPathLexer3.dollar();
      String string0 = token8.toString();
      assertEquals("[ (4) (()", string0);
      
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("F", token9.getTokenText());
      
      Token token10 = xPathLexer2.at();
      assertEquals("4", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("6", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (4) (@)");
      Token token12 = xPathLexer4.not();
      assertEquals("[", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer5.dollar();
      assertEquals(26, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer6.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.6254624829819557
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.leftParen();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      Token token4 = xPathLexer2.plus();
      assertEquals(5, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer1.dollar();
      assertEquals("y", token6.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token7 = xPathLexer2.nextToken();
      Token token8 = xPathLexer4.at();
      assertEquals("c", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      String string1 = token7.toString();
      assertEquals("[ (1) (()", string1);
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      token2.toString();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer3.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer4.rightParen();
      assertEquals("o", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token12 = xPathLexer1.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("G", token12.getTokenText());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.2022629558994289
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("nX%U+djMO1+");
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("5Ho9.Hq{N%$RCZ$te");
      XPathLexer xPathLexer3 = new XPathLexer("-<kpL,");
      xPathLexer3.at();
      Token token0 = xPathLexer0.minus();
      token0.toString();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.352755011355045
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.and();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
      
      xPathLexer0.or();
      xPathLexer0.div();
      xPathLexer0.literal();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.474011141763968
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      Token token2 = xPathLexer2.notEquals();
      assertEquals("e&", token2.getTokenText());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer3.leftBracket();
      assertEquals("c", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("e&lId^r$");
      Token token5 = xPathLexer4.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("z", token6.getTokenText());
      
      xPathLexer4.relationalOperator();
      Token token7 = xPathLexer1.minus();
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token8 = xPathLexer2.leftParen();
      assertEquals("l", token8.getTokenText());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("I", token9.getTokenText());
      
      Token token10 = xPathLexer5.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals("d", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer2.not();
      assertEquals("^", token12.getTokenText());
      
      Token token13 = xPathLexer4.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("&", token13.getTokenText());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=3.3692341661987295
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("S", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("1Seunz<#`8 '");
      Token token3 = xPathLexer1.plus();
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer1.notEquals();
      assertEquals("Se", token4.getTokenText());
      
      xPathLexer1.and();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer1.at();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.notEquals();
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      Token token8 = xPathLexer5.rightParen();
      assertEquals(")", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer3.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer5.comma();
      assertEquals(" ", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=2.97613471996344
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=3.418559367319172
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|'+sXzKuW`|r@k<7?c");
      Token token0 = xPathLexer0.dots();
      assertEquals("|", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.dollar();
      assertEquals("+", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.leftParen();
      Token token2 = xPathLexer0.colon();
      assertEquals("X", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(" l-xY0)K)m%J<");
      XPathLexer xPathLexer2 = new XPathLexer("e&lId^r$");
      Token token3 = xPathLexer0.plus();
      assertEquals("z", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals("K", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token5 = xPathLexer1.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(" l-xY0)K)m%J<");
      xPathLexer4.relationalOperator();
      xPathLexer3.at();
      xPathLexer4.slashes();
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.mod();
      XPathLexer xPathLexer6 = new XPathLexer("4N5YQmN)*XcXsx^ y");
      xPathLexer6.leftParen();
      Token token6 = xPathLexer0.slashes();
      assertEquals("", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer6.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("N", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("u", token9.getTokenText());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.80465649942401
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      token0.toString();
      token0.toString();
      Token token2 = xPathLexer0.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("u", token3.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (4) (y)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("y|Gu6@i1F#`Ph@>Bkg");
      XPathLexer xPathLexer2 = new XPathLexer("[ (4) (y)");
      Token token4 = xPathLexer2.plus();
      assertEquals("[", token4.getTokenText());
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer1.dollar();
      assertEquals("y", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      xPathLexer2.notEquals();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("6@", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("[9>?S$q>j5*iTVU");
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer4.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("com.werken.saxpath.Token", token8.getTokenText());
      
      Token token9 = xPathLexer0.star();
      assertEquals("i", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      xPathLexer5.or();
      Token token10 = xPathLexer4.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer5.identifier();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token11 = xPathLexer6.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=3.0306023415568295
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.comma();
      assertEquals(32, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=2.7966828768841636
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.6060409254397794
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1Seunz<#`8 '");
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      Token token1 = xPathLexer0.not();
      token0.toString();
      token1.toString();
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      xPathLexer1.pipe();
      xPathLexer3.leftParen();
      xPathLexer2.nextToken();
      xPathLexer0.colon();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer2.nextToken();
      Token token2 = xPathLexer4.colon();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
