/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 02:44:58 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2614L));
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 514);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis(0L);
      Services.testPOP3((String) null, (-1899));
      Services.testSMTP("@6*sROi:Z,~:)=YSiXU", 514);
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1694L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://QUIT\r\n:4226");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "4R8AH");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("QUIT\r\n", 4226);
      assertEquals(6, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.1", 2293);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://TNx{eA?7VUuc\",R:0");
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40001);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, (byte[]) null);
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte) (-25);
      byteArray0[5] = (byte) (-1);
      NetworkHandling.sendDataOnTcp(evoSuiteLocalAddress0, byteArray0);
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "m$JIH?@RzG05m)");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ".\n***");
      EvoSuiteLocalAddress evoSuiteLocalAddress1 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress1, "N2");
      Services.testSMTP("lu],BAg.o", (-1));
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("4D9+}F,", 2293);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("**** Resultat : \n** Fonctionnement : ", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://TNx{eA?7VUuc\",R:0");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "@");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("TNx{eA?7VUuc\",R", 0);
      assertTrue(services_HTTP_Result0.works);
      assertEquals(2, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-10));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("4_XYI0|Lad=e", (-303));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      System.setCurrentTimeMillis((-3179L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2614L));
      System.setCurrentTimeMillis((-2614L));
      System.setCurrentTimeMillis((-1485L));
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      Services.testSMTP((String) null, (-1));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-3179L));
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(514);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(514);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("cn1sUb", 3000);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("x", 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(2L);
      System.setCurrentTimeMillis(2L);
      System.setCurrentTimeMillis((-2629L));
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis((-1899));
      System.setCurrentTimeMillis((-3410L));
      Services.testHTTP((String) null, 3000);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-1132L));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-2629L));
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis((-3410L));
      System.setCurrentTimeMillis((-1899));
      System.setCurrentTimeMillis((-3410L));
      Services.testHTTP((String) null, 3000);
      System.setCurrentTimeMillis(1L);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("*!:y5Tv?:", 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS(" Ip Lc_<[L@", (-29));
      assertEquals(0, services_HTTP_Result0.code);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.6897618907690553
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.time = 2105L;
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.code = (-2325);
      Services.testPOP3("qsZIBcXj_", (-1));
      services_HTTP_Result0.code = (-1);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("qsZIBcXj_", 0);
      services_SIMPLE_Result0.time = (long) (-1);
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.reset();
      services_SIMPLE_Result0.toString();
      services_HTTP_Result0.toString();
      assertEquals(0, services_HTTP_Result0.code);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = Services.testPOP3("Op^/?;|&w", (-1));
      Services services0 = new Services();
      Services.testSMTP("http", (-1));
      services_SIMPLE_Result1.reset();
      Services.testPOP3("qsZIBcXj_", (-1));
      Services.SIMPLE_Result services_SIMPLE_Result2 = Services.testPOP3("?J", (-2325));
      assertFalse(services_SIMPLE_Result2.works);
  }
}
