/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 01:38:19 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.StringWriter;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.write("*ge");
      stringWriter0.flush();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("");
      arrayList0.add("*ge");
      StringWriter stringWriter1 = new StringWriter(18);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = '?';
      charArray0[2] = '2';
      charArray0[3] = '\u0088';
      charArray0[4] = 'F';
      charArray0[5] = '6';
      arrayList0.add(")");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(")", stringWriter0);
      assertEquals("*ge<VariableDeclaratorId>\n  <identifier></identifier>\n  <identifier>*ge</identifier>\n</VariableDeclaratorId>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)90;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.identifiers.add("<=");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<=");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write("<=");
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)90);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (byte)90, (byte)90);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, (byte)90, (-1));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream1);
      javaParserTokenManager0.MoreLexicalActions();
      arrayList0.add("V|w");
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.dump("CastExpression", stringWriter1);
      assertEquals("<CompilationUnit>\n  <identifier>*le</identifier>\n  <identifier>V|w</identifier>\n</CompilationUnit>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)69;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SimpleNode simpleNode0 = new SimpleNode(18);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(18);
      arrayList0.add("9UKOytm$#}ldmw#a");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      arrayList0.add(">=");
      stringWriter0.write((String) null);
      simpleNode0.dump(">=", stringWriter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "9UKOytm$#}ldmw#a");
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) null, 18, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.identifiers = null;
      String string0 = "dye`;p_d";
      String string1 = "";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("dye`;p_d");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 37;
      SimpleNode simpleNode0 = new SimpleNode(37);
      String string0 = "v#LW_Pv(P]6>,^_)#";
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("BooleanLiteral");
      arrayList0.add(";");
      arrayList0.add("uT/pt=");
      StringWriter stringWriter0 = new StringWriter(37);
      simpleNode0.dump("uT/pt=", stringWriter0);
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "uT/pt=", 2147483645, 2147483645);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.475583054636513
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("#j");
      arrayList0.add("#j");
      SimpleNode simpleNode1 = new SimpleNode(14);
      simpleNode0.jjtAddChild(simpleNode1, 14);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter(14);
      stringWriter0.flush();
      arrayList0.add(">>");
      simpleNode1.setIdentifier("#j");
      arrayList0.add("<<");
      simpleNode0.jjtClose();
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.flush();
      arrayList0.clone();
      stringWriter1.write("<<");
      stringWriter0.write("#j");
      simpleNode0.dump("<<", stringWriter0);
      StringWriter stringWriter2 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode(1225);
      SystemInUtil.addInputLine("#j");
      SimpleNode simpleNode3 = (SimpleNode)simpleNode0.jjtGetParent();
      stringWriter0.append((CharSequence) "<<");
      simpleNode3.toString();
      simpleNode1.jjtAddChild(simpleNode3, 98);
      assertFalse(simpleNode1.equals((Object)simpleNode0));
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dye`;p_d");
      arrayList0.add("#Qj");
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.removeAll(linkedList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#Qj");
      arrayList0.add("<<");
      StringWriter stringWriter0 = new StringWriter(1);
      stringWriter0.write("Bs!`7bU^j?U?0-Z");
      stringWriter0.flush();
      stringWriter0.write("i");
      stringWriter0.write("dye`;p_d");
      simpleNode0.dump("dye`;p_d", stringWriter0);
      stringWriter0.flush();
      stringWriter0.flush();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*lshft");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter(1);
      stringWriter0.write("*lshft");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        stringWriter2.append((CharSequence) "#Qj", 1, 18);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5915950580657945
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.write("i");
      simpleNode0.dump("[_#R5!Ga", stringWriter0);
      stringWriter0.flush();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      String string0 = ">";
      arrayList0.add(">");
      arrayList0.add("i");
      StringWriter stringWriter1 = new StringWriter(18);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      arrayList0.add("[_#R5!Ga");
      StringWriter stringWriter2 = new StringWriter(18);
      simpleNode0.dump(">", stringWriter0);
      stringWriter1.flush();
      stringWriter2.flush();
      StringWriter stringWriter3 = new StringWriter();
      StringWriter stringWriter4 = new StringWriter(401);
      StringWriter stringWriter5 = new StringWriter(18);
      StringWriter stringWriter6 = new StringWriter();
      stringWriter6.flush();
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) ">", 10, 1152);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4242753321202222
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("#j");
      arrayList0.add("i");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode0.jjtClose();
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.flush();
      stringWriter0.append('F');
      simpleNode0.identifiers.add("#j");
      stringWriter0.write("0");
      arrayList0.add("}");
      simpleNode0.dump("#j", stringWriter0);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write((-3918));
      stringWriter1.close();
      simpleNode1.jjtGetParent();
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.9500346040592706
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtOpen();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("i");
      SimpleNode simpleNode1 = new SimpleNode(0);
      SystemInUtil.addInputLine("v4");
      simpleNode1.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtSetParent(simpleNode1);
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetParent();
      int int1 = 31;
      simpleNode1.jjtAddChild(simpleNode2, 31);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetParent();
      simpleNode1.jjtGetParent();
      // Undeclared exception!
      simpleNode2.dump("grshfk", stringWriter0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6061920506332319
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&");
      arrayList0.add("&");
      stringWriter0.write((String) null);
      simpleNode0.dump((String) null, stringWriter0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "}-6iU'VP7");
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) null, 11, 4329);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9432029103573272
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(21);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)90;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      arrayList0.add("1-");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtAddChild((Node) null, (byte)90);
      stringWriter0.write("1-");
      stringWriter0.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1-");
      simpleNode0.dump(" ^y27PKfp/Uzi", stringWriter0);
      stringWriter0.flush();
      stringWriter0.flush();
      stringWriter0.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1-");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter0.write("]F");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      StringWriter stringWriter2 = new StringWriter('d');
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(91, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5965155763056016
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(20);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      StringWriter stringWriter0 = new StringWriter(20);
      simpleNode0.dump("v#LW_Pv(P]6>,^_)#", stringWriter0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.add("GlJjc5\"ai!F%g1s6C");
      String string0 = "uT/pt=";
      arrayList0.add("");
      StringWriter stringWriter1 = new StringWriter(934);
      simpleNode0.dump("\t", stringWriter0);
      int int0 = 2147483645;
      int int1 = 2269;
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) "GlJjc5\"ai!F%g1s6C", 2269, 2851);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.6145591551764051
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 37;
      SimpleNode simpleNode0 = new SimpleNode(37);
      String string0 = "v#LW_Pv(P]6>,^_)#";
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("BooleanLiteral");
      arrayList0.add((String) null);
      arrayList0.add(";");
      String string1 = "uT/pt=";
      arrayList0.add("uT/pt=");
      StringWriter stringWriter0 = new StringWriter(37);
      // Undeclared exception!
      try { 
        simpleNode0.dump("uT/pt=", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      SimpleNode simpleNode0 = new SimpleNode(3279);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      String string0 = "'";
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super String, ? extends String>) unaryOperator0);
      Function.identity();
      arrayList0.replaceAll(unaryOperator1);
      arrayList0.add("'");
      arrayList0.add((String) null);
      StringWriter stringWriter0 = new StringWriter(3279);
      // Undeclared exception!
      try { 
        simpleNode0.dump("'", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.15022055411895
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtOpen();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte) (-110);
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte) (-57);
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte) (-53);
      byteArray0[6] = (byte) (-110);
      byteArray0[7] = (byte)32;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtOpen();
      simpleNode0.id = 0;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtClose();
      simpleNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-598));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -598
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.6769857273870938
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(20);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.id = 11;
      arrayList0.add("i");
      SimpleNode simpleNode1 = new SimpleNode(20);
      simpleNode1.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild(simpleNode1, 20);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("i");
      arrayList0.add("z");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode2 = (SimpleNode)simpleNode0.jjtGetParent();
      arrayList0.spliterator();
      SimpleNode simpleNode3 = (SimpleNode)simpleNode0.jjtGetChild(20);
      simpleNode3.identifiers = arrayList0;
      SimpleNode simpleNode4 = (SimpleNode)simpleNode0.jjtGetParent();
      SimpleNode simpleNode5 = new SimpleNode(20);
      SimpleNode simpleNode6 = (SimpleNode)simpleNode0.jjtGetParent();
      simpleNode6.setIdentifier("i");
      simpleNode0.jjtSetParent(simpleNode2);
      simpleNode5.jjtGetNumChildren();
      simpleNode2.setIdentifier("<");
      simpleNode2.dump("grshcRk", stringWriter0);
      simpleNode2.jjtAddChild(simpleNode5, 10);
      simpleNode5.jjtGetParent();
      simpleNode2.jjtAddChild(simpleNode1, 11);
      simpleNode1.jjtGetChild(11);
      simpleNode0.jjtGetParent();
      simpleNode2.jjtGetParent();
      simpleNode4.jjtGetChild(11);
      assertEquals(12, simpleNode4.jjtGetNumChildren());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.338448149134649
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("#j");
      arrayList0.add("i");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      arrayList0.removeAll(simpleNode0.identifiers);
      stringWriter0.write("i");
      stringWriter0.write("i");
      char[] charArray0 = new char[7];
      charArray0[0] = 'J';
      charArray0[4] = '\u0000';
      JavaParser javaParser0 = new JavaParser("h]`d1-[&|N53WU$4;T");
      simpleNode0.parser = javaParser0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.dump("#j", stringWriter0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-1792739018));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.5869819987032194
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      stringWriter0.write("F");
      simpleNode0.dump("[_#R5!Ga", stringWriter0);
      stringWriter0.flush();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.clone();
      arrayList0.add("");
      String string0 = "uT/pt=";
      arrayList0.add("F");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter1 = new StringWriter(18);
      String string1 = "''ep(lTVu&!f";
      simpleNode0.dump("''ep(lTVu&!f", stringWriter1);
      stringWriter1.flush();
      stringWriter0.flush();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter(18);
      int int0 = 10;
      StringWriter stringWriter4 = new StringWriter(10);
      StringWriter stringWriter5 = new StringWriter();
      stringWriter1.flush();
      int int1 = 299;
      int int2 = (-1452);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "'", 299, (-1452));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.320382183241176
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.id = 1061;
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtSetParent((Node) null);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtSetParent(simpleNode1);
      simpleNode1.setIdentifier("i");
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode0.jjtGetChild(0);
      Node node1 = simpleNode0.jjtGetParent();
      SimpleNode simpleNode2 = new SimpleNode(0);
      Node node2 = simpleNode0.jjtGetParent();
      node2.setIdentifier("i");
      simpleNode0.jjtSetParent(node0);
      simpleNode2.jjtGetNumChildren();
      node0.setIdentifier("<");
      node0.jjtAddChild(simpleNode2, 10);
      simpleNode2.jjtGetParent();
      node0.jjtAddChild(simpleNode1, 1061);
      simpleNode1.jjtGetChild(1061);
      simpleNode0.jjtGetParent();
      node0.jjtGetParent();
      node1.jjtGetParent();
      simpleNode1.jjtGetParent();
      assertEquals(1062, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.148943414910776
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("#j");
      arrayList0.add("i");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.id = 0;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtSetParent(simpleNode1);
      arrayList0.removeAll(simpleNode0.identifiers);
      char[] charArray0 = new char[7];
      charArray0[0] = 'E';
      charArray0[0] = 'J';
      charArray0[4] = '\u0000';
      charArray0[6] = 'E';
      simpleNode0.jjtSetParent(simpleNode1);
      Node node0 = simpleNode0.jjtGetParent();
      node0.jjtAddChild(simpleNode0, 31);
      Node node1 = simpleNode0.jjtGetChild(0);
      node1.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      node0.jjtAddChild(simpleNode0, 10);
      Node node2 = node0.jjtGetParent();
      assertNull(node2);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(1);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      arrayList0.stream();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add("9UKOytm$#}ldmw#a");
      arrayList0.add("]z, >GrW");
      arrayList0.clear();
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]z, >GrW");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.write(">");
      stringWriter1.flush();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QnkuK~2I>Lb{V<#");
      simpleNode0.dump((String) null, stringWriter1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = 'M';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      assertEquals(2, charBuffer0.capacity());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      arrayList0.add("#j");
      arrayList0.add("i");
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode0.jjtSetParent(simpleNode1);
      arrayList0.removeAll(simpleNode0.identifiers);
      Node node0 = simpleNode0.jjtGetParent();
      node0.jjtAddChild(simpleNode0, 31);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1591));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1591
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5063874375065844
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(25);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      FileSystemHandling.shouldAllThrowIOExceptions();
      arrayList0.remove((Object) simpleNode0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "n6]0lZF]1%0");
      arrayList0.add("*gt");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{");
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.toString("}-6iU'VP7");
      simpleNode0.toString("*gt");
      simpleNode0.toString();
      String string0 = simpleNode0.toString();
      assertEquals("ConstructorDeclaration : *gt", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.curChar = 'd';
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 0);
      String string0 = simpleNode0.toString();
      assertEquals("CompilationUnit", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.curChar = 'd';
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.input_stream = null;
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1437950732));
      // Undeclared exception!
      try { 
        simpleNode0.toString("8\"");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1437950732
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString("WhileStatement");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-10));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-76);
      byteArray0[2] = (byte) (-1);
      byteArray0[4] = (byte) (-101);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-8339742), (byte)81);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-8339742));
      simpleNode0.jjtAddChild(simpleNode0, (byte)81);
      assertEquals(82, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser((JavaParserTokenManager) null);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaParser javaParser0 = new JavaParser(sequenceInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1790875338));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.038009341005529
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null, 0);
      javaParserTokenManager0.input_stream = null;
      String string0 = "8\"";
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      // Undeclared exception!
      try { 
        javaParser0.TypeBound();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-8);
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)86;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)15, (byte)86);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-8), (byte)15, (byte)86);
      javaCharStream0.line = 2059;
      byteArrayInputStream0.mark((byte) (-8));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      javaParserTokenManager0.ReInit(javaCharStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte) (-8));
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(0, int0);
  }
}
