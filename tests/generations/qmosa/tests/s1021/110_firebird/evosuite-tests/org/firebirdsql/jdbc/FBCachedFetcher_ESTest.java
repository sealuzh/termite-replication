/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 01:52:57 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.SynchronousQueue;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.IscDbHandle;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.jni.isc_blob_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_db_handle_impl;
import org.firebirdsql.gds.impl.jni.isc_tr_handle_impl;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_svc_handle_impl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBDriverNotCapableException;
import org.firebirdsql.jdbc.FBFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.71436557229859
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)2;
      linkedList1.add((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.deleteRow();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.setFetchSize((-1144));
      fBCachedFetcher0.getFetchSize();
      System.setCurrentTimeMillis((-1144));
      int int1 = fBCachedFetcher0.getRowNum();
      assertEquals((-1144), fBCachedFetcher0.getFetchSize());
      assertEquals(1, int1);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl3.getTr();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl3.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl1.setTr((isc_tr_handle_impl) null);
      isc_tr_handle_impl0.registerStatementWithTransaction((AbstractIscStmtHandle) null);
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl2.setRblId(1);
      isc_blob_handle_impl isc_blob_handle_impl5 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl6 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl7 = new isc_blob_handle_impl();
      isc_blob_handle_impl7.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl7.getDb();
      isc_blob_handle_impl7.setRblId(4);
      isc_blob_handle_impl6.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl6.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl3.setRblId(1);
      isc_tr_handle_impl0.unregisterStatementFromTransaction((AbstractIscStmtHandle) null);
      isc_blob_handle_impl6.getDb();
      isc_blob_handle_impl isc_blob_handle_impl8 = new isc_blob_handle_impl();
      isc_blob_handle_impl3.getDb();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(5);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7754337976947767
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][5];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)48;
      byteArray1[1] = (byte) (-104);
      byteArray1[2] = (byte) (-86);
      byteArray1[3] = (byte) (-77);
      byteArray1[4] = (byte) (-77);
      byteArray1[5] = (byte)65;
      byteArray1[6] = (byte) (-18);
      byteArray1[7] = (byte)65;
      byteArray1[8] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)65;
      byteArray2[1] = (byte) (-77);
      byteArray2[2] = (byte)48;
      byteArray2[3] = (byte) (-23);
      byteArray2[4] = (byte) (-104);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-77);
      byteArray3[1] = (byte) (-77);
      byteArray3[2] = (byte)62;
      byteArray3[3] = (byte) (-104);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte) (-99);
      byteArray4[1] = (byte) (-86);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte) (-23);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4551990497077627
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)98;
      linkedList0.pollFirst();
      fBCachedFetcher0.deleteRow();
      byteArray0[1] = (byte)2;
      fBCachedFetcher0.relative((byte)2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.absolute((byte)2);
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.954483383068116
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      SynchronousQueue<byte[][]> synchronousQueue0 = new SynchronousQueue<byte[][]>();
      synchronousQueue0.addAll(linkedList0);
      linkedList0.addAll((Collection<? extends byte[][]>) synchronousQueue0);
      byte[][] byteArray0 = new byte[7][5];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)3;
      byteArray1[1] = (byte)1;
      byteArray1[2] = (byte)10;
      byteArray1[3] = (byte) (-2);
      byteArray1[4] = (byte)18;
      byteArray1[5] = (byte) (-30);
      byteArray1[6] = (byte) (-17);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)3;
      byteArray2[1] = (byte)1;
      byteArray2[2] = (byte)10;
      byteArray2[3] = (byte) (-30);
      byteArray2[4] = (byte)3;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)3;
      byteArray3[1] = (byte) (-30);
      byteArray3[2] = (byte) (-30);
      byteArray3[3] = (byte)10;
      byteArray3[4] = (byte) (-41);
      byteArray3[5] = (byte) (-17);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte)7;
      byteArray4[1] = (byte) (-41);
      byteArray4[2] = (byte) (-41);
      byteArray4[3] = (byte) (-51);
      byteArray4[4] = (byte) (-17);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[1];
      byteArray5[0] = (byte) (-41);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte)3;
      byteArray6[1] = (byte)112;
      byteArray6[2] = (byte)7;
      byteArray6[3] = (byte) (-41);
      byteArray6[4] = (byte)3;
      byteArray6[5] = (byte)95;
      byteArray6[6] = (byte)10;
      byteArray6[7] = (byte) (-41);
      byteArray6[8] = (byte) (-112);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[7];
      byteArray7[0] = (byte)122;
      byteArray7[1] = (byte)1;
      byteArray7[2] = (byte)95;
      byteArray7[3] = (byte)3;
      byteArray7[4] = (byte)1;
      byteArray7[5] = (byte) (-51);
      byteArray7[6] = (byte) (-2);
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j?A*RX.?ef(dHpMT");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.3291952528947535
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-6);
      byteArray0[0] = (byte) (-6);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[] byteArray1 = new byte[2];
      fBCachedFetcher0.insertRow((byte[][]) null);
      byteArray1[0] = (byte)98;
      byte byte1 = (byte)2;
      byteArray1[1] = (byte)2;
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.next();
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.deleteRow();
      int int0 = FBFetcher.MAX_FETCH_ROWS;
      byte[][] byteArray2 = new byte[8][2];
      try { 
        fBResultSet0.getRowId((int) (byte)2);
        fail("Expecting exception: FBDriverNotCapableException");
      
      } catch(FBDriverNotCapableException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.firebirdsql.jdbc.FBResultSet", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.21798344858705
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(3, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3278768613324594
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      GDSType.getType("");
      FBManagedConnectionFactory fBManagedConnectionFactory0 = null;
      try {
        fBManagedConnectionFactory0 = new FBManagedConnectionFactory((GDSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jca.FBManagedConnectionFactory", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.7052519635596313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-584));
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.isLast();
      System.setCurrentTimeMillis((-808L));
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher0.previous();
      System.setCurrentTimeMillis(0L);
      fBCachedFetcher0.relative((-1));
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.getRowNum();
      byte[][] byteArray0 = new byte[4][3];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-66);
      byteArray1[1] = (byte)119;
      byteArray1[2] = (byte)19;
      byteArray1[3] = (byte) (-112);
      byteArray1[4] = (byte) (-65);
      byteArray1[5] = (byte) (-116);
      byteArray1[6] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte) (-116);
      byteArray2[1] = (byte)119;
      byteArray2[2] = (byte)90;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte) (-66);
      byteArray3[2] = (byte)119;
      byteArray3[3] = (byte)19;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte) (-112);
      byteArray4[1] = (byte)0;
      byteArray4[2] = (byte) (-65);
      byteArray4[3] = (byte)0;
      byteArray4[4] = (byte) (-66);
      byteArray4[5] = (byte) (-63);
      byteArray4[6] = (byte) (-65);
      byteArray0[3] = byteArray4;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate1.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate0.or(predicate3);
      predicate4.test(predicate1);
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate7 = predicate4.negate();
      Predicate<Object> predicate8 = predicate6.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate0.or(predicate0);
      predicate0.and(predicate10);
      Predicate<Object> predicate11 = predicate8.and(predicate0);
      Predicate<String> predicate12 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate13 = predicate0.negate();
      predicate3.or(predicate11);
      Predicate<Object> predicate14 = predicate13.negate();
      predicate14.negate();
      Predicate<Object> predicate15 = predicate2.and(predicate3);
      Predicate<Object> predicate16 = predicate15.negate();
      Predicate<Object> predicate17 = predicate14.negate();
      predicate2.test(predicate12);
      Predicate.isEqual((Object) predicate1);
      Predicate<Integer> predicate18 = Predicate.isEqual((Object) predicate7);
      predicate17.or(predicate16);
      Predicate.isEqual((Object) predicate18);
      predicate3.negate();
      Predicate<Object> predicate19 = predicate3.or(predicate9);
      predicate19.negate();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1491277173668824
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)54;
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)100;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(3629);
      fBCachedFetcher0.relative((byte)54);
      boolean boolean0 = fBCachedFetcher0.relative((-1));
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.8080074371227246
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_stmt_handle_impl0.setSingletonResult(true);
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl0.statement = "0{}C5a86d1{Z";
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      isc_stmt_handle_impl0.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)54;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)54;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.absolute(3629);
      fBCachedFetcher0.relative((byte)54);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.relative((byte)54);
      fBCachedFetcher0.updateRow(byteArray0);
      System.setCurrentTimeMillis((byte)54);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.relative(100);
      assertEquals(3, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)54;
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)100;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.914664339738789
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)98;
      byteArray0[1] = (byte)98;
      fBCachedFetcher0.next();
      linkedList0.spliterator();
      fBCachedFetcher0.first();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.isAfterLast();
      fBResultSet0.closeFields();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.deleteRow();
      System.setCurrentTimeMillis((byte)98);
      boolean boolean0 = fBCachedFetcher0.relative((byte)98);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5094656225315988
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.isBeforeFirst();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.wire.isc_db_handle_impl isc_db_handle_impl0 = new org.firebirdsql.gds.impl.wire.isc_db_handle_impl();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      GDSHelper gDSHelper0 = new GDSHelper(javaGDSImpl0, databaseParameterBufferImp0, isc_db_handle_impl0, gDSHelper_GDSHelperErrorListener0);
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate0.or(predicate3);
      predicate4.test(predicate1);
      Predicate<Object> predicate6 = predicate4.or(predicate2);
      Predicate<JMXPrincipal> predicate7 = Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate8 = predicate3.negate();
      Predicate<Object> predicate9 = predicate5.negate();
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate<Object> predicate11 = predicate0.or(predicate0);
      Predicate<Object> predicate12 = predicate0.and(predicate11);
      predicate4.test(predicate7);
      Predicate<Object> predicate13 = predicate12.negate();
      Predicate<Object> predicate14 = predicate9.and(predicate0);
      Predicate<Object> predicate15 = predicate6.and(predicate14);
      Predicate<String> predicate16 = Predicate.isEqual((Object) predicate0);
      Predicate<Object> predicate17 = predicate0.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate18 = predicate17.negate();
      predicate17.and(predicate15);
      predicate0.negate();
      Predicate<Object> predicate19 = predicate18.and(predicate3);
      Predicate<Object> predicate20 = predicate19.negate();
      Predicate<Object> predicate21 = predicate3.negate();
      predicate2.test(predicate16);
      Predicate.isEqual((Object) predicate1);
      Predicate<Integer> predicate22 = Predicate.isEqual((Object) predicate8);
      predicate21.or(predicate20);
      Predicate.isEqual((Object) predicate22);
      predicate3.negate();
      Predicate<Object> predicate23 = predicate13.or(predicate10);
      predicate23.negate();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate3.negate();
      Predicate<Object> predicate5 = predicate0.and(predicate4);
      Predicate<Object> predicate6 = predicate1.or(predicate3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate7 = predicate4.or(predicate2);
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate8 = predicate6.negate();
      Predicate<Object> predicate9 = predicate0.negate();
      Predicate<Object> predicate10 = predicate2.and(predicate9);
      Predicate<Object> predicate11 = predicate1.negate();
      Predicate<Object> predicate12 = predicate10.negate();
      Predicate.isEqual((Object) predicate8);
      Predicate<Object> predicate13 = predicate0.and(predicate8);
      Object object0 = new Object();
      Predicate<Object> predicate14 = predicate7.negate();
      Predicate<Object> predicate15 = predicate13.or(predicate14);
      predicate4.or(predicate13);
      Predicate<Object> predicate16 = predicate12.and(predicate2);
      Predicate<Object> predicate17 = predicate0.and(predicate12);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Predicate<Object> predicate18 = predicate15.negate();
      Predicate<Object> predicate19 = predicate16.and(predicate1);
      Predicate<Object> predicate20 = predicate0.and(predicate11);
      Predicate<Object> predicate21 = predicate20.negate();
      Predicate.isEqual((Object) predicate18);
      Predicate<Object> predicate22 = predicate17.or(predicate5);
      Predicate.isEqual((Object) predicate21);
      Predicate<Object> predicate23 = predicate21.negate();
      predicate22.test(predicate19);
      predicate23.and(predicate6);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3399002341122683
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)56;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)56;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)56;
      byteArray2[3] = (byte)56;
      byteArray2[4] = (byte)56;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)0;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)56;
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fBCachedFetcher0.afterLast();
      boolean boolean0 = fBCachedFetcher0.isLast();
      boolean boolean1 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9983916035564593
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)54;
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)100;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher1.last();
      assertEquals(0, fBResultSet0.getRow());
      assertFalse(fBCachedFetcher1.isBeforeFirst());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8809457317913751
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[10];
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp1);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate2.negate();
      predicate3.test(predicate2);
      predicate3.negate();
      Predicate<Object> predicate5 = predicate4.or(predicate2);
      predicate5.negate();
      Predicate<Object> predicate6 = predicate0.or(predicate0);
      Predicate<Object> predicate7 = predicate0.and(predicate6);
      predicate7.negate();
      Predicate<Object> predicate8 = predicate7.negate();
      linkedList0.removeIf(predicate8);
      linkedList0.add(byteArray0);
      byteArray1[0] = (byte)54;
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)54;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative((-656));
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.1914101418770064
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      databaseParameterBufferImp0.removeExtensionParams();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      databaseParameterBufferImp0.deepCopy();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_stmt_handle_impl1.statement = null;
      isc_blob_handle_impl1.getDb();
      GDSHelper gDSHelper0 = new GDSHelper((GDS) null, databaseParameterBufferImp0, (IscDbHandle) null, (GDSHelper.GDSHelperErrorListener) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.absolute((-1655));
      fBCachedFetcher0.first();
      fBCachedFetcher1.last();
      boolean boolean1 = fBCachedFetcher1.relative(684);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.87581752666317
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      Predicate<Object> predicate5 = predicate0.or(predicate2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate6 = predicate3.or(predicate1);
      Predicate<JMXPrincipal> predicate7 = Predicate.isEqual((Object) predicate4);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate1.and(predicate5);
      Predicate<Object> predicate10 = predicate0.negate();
      Predicate<Object> predicate11 = predicate9.negate();
      Predicate<Object> predicate12 = predicate0.or(predicate8);
      Predicate.isEqual((Object) predicate8);
      Predicate<Object> predicate13 = predicate0.and(predicate8);
      predicate7.and(predicate10);
      Predicate<Object> predicate14 = predicate6.negate();
      Predicate<Object> predicate15 = predicate13.or(predicate14);
      Predicate<Object> predicate16 = predicate3.or(predicate13);
      predicate16.and(predicate12);
      Predicate<Object> predicate17 = predicate11.and(predicate1);
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate18 = predicate0.and(predicate11);
      Predicate<Object> predicate19 = predicate15.negate();
      Predicate<Object> predicate20 = predicate17.and(predicate0);
      Predicate<Object> predicate21 = predicate0.and(predicate10);
      Predicate<Object> predicate22 = predicate21.negate();
      Predicate.isEqual((Object) predicate19);
      Predicate.isEqual((Object) predicate22);
      Predicate<Object> predicate23 = predicate22.negate();
      predicate18.test(predicate20);
      predicate23.and(predicate5);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-1668));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3585555441044765
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBResultSet0.isFirst();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.3228823459307204
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.isFirst();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.68736955966868
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      databaseParameterBufferImp1.removeExtensionParams();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[5];
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp1);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      Predicate<Object> predicate2 = predicate0.and(predicate1);
      Predicate<Object> predicate3 = predicate2.negate();
      linkedList0.removeIf(predicate3);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7824268046877836
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      LinkedList<byte[][]> linkedList3 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList3);
      linkedList3.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList3, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.previous();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.3729499867192074
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.isBeforeFirst();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.6756430850863566
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList1, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)2;
      linkedList1.add((byte[][]) null);
      fBCachedFetcher0.isBeforeFirst();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      System.setCurrentTimeMillis(209L);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.504960694858144
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)98;
      linkedList0.pollFirst();
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      byteArray0[1] = (byte)2;
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher1.absolute((-3007));
      fBCachedFetcher1.relative((byte)2);
      System.setCurrentTimeMillis((byte)98);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, fBResultSet0.getRow());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl0.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl5 = new isc_blob_handle_impl();
      isc_blob_handle_impl1.getDb();
      isc_blob_handle_impl3.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl1.getDb();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_blob_handle_impl3.getDb();
      isc_stmt_handle_impl isc_stmt_handle_impl2 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl2.ensureCapacity(425);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl3 = new isc_stmt_handle_impl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl isc_svc_handle_impl1 = new isc_svc_handle_impl();
      javaGDSImpl0.receiveResponse(isc_svc_handle_impl1, 2788);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      byte[][] byteArray0 = new byte[6][8];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-2);
      byteArray1[1] = (byte)76;
      byteArray1[2] = (byte) (-44);
      byteArray1[3] = (byte) (-66);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte) (-44);
      byteArray2[1] = (byte)25;
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte) (-2);
      byteArray2[4] = (byte) (-2);
      byteArray2[5] = (byte) (-66);
      byteArray2[6] = (byte) (-44);
      byteArray2[7] = (byte)76;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[1];
      byteArray3[0] = (byte)25;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)76;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[0];
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[3];
      byteArray6[0] = (byte) (-44);
      byteArray6[1] = (byte)25;
      byteArray6[2] = (byte)76;
      byteArray0[5] = byteArray6;
      linkedList0.add(byteArray0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      assertTrue(fBCachedFetcher0.isLast());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet1 = new FBResultSet(fBResultSet0.xsqlvars, linkedList0);
      fBResultSet1.isLast();
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.3804082708178105
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.parallelStream();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.next();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[7][7];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-121);
      byteArray1[1] = (byte)89;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)2;
      byteArray1[4] = (byte) (-56);
      byteArray1[5] = (byte)0;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte) (-121);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte) (-121);
      byteArray3[1] = (byte)0;
      byteArray3[2] = (byte)0;
      byteArray3[3] = (byte)0;
      byteArray3[4] = (byte) (-2);
      byteArray3[5] = (byte) (-56);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)0;
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte)89;
      byteArray5[3] = (byte) (-56);
      byteArray5[4] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte)0;
      byteArray6[1] = (byte)2;
      byteArray6[2] = (byte) (-2);
      byteArray6[3] = (byte) (-89);
      byteArray6[4] = (byte) (-7);
      byteArray6[5] = (byte)0;
      byteArray6[6] = (byte) (-56);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte)34;
      byteArray0[6] = byteArray7;
      linkedList0.add(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl1.getTr();
      isc_tr_handle_impl isc_tr_handle_impl0 = new isc_tr_handle_impl();
      isc_blob_handle_impl2.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl1.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl5 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl6 = new isc_blob_handle_impl();
      isc_blob_handle_impl6.setTr(isc_tr_handle_impl0);
      isc_blob_handle_impl6.getDb();
      isc_blob_handle_impl5.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl6.setBlobId(4);
      isc_blob_handle_impl6.setRblId(4);
      byte[][] byteArray0 = new byte[8][2];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)61;
      byteArray1[1] = (byte) (-125);
      byteArray1[2] = (byte)9;
      byteArray1[3] = (byte) (-17);
      byteArray1[4] = (byte)35;
      byteArray1[5] = (byte)114;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)9;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)35;
      byteArray3[1] = (byte)35;
      byteArray3[2] = (byte) (-24);
      byteArray3[3] = (byte)61;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte)61;
      byteArray5[1] = (byte) (-24);
      byteArray5[2] = (byte)114;
      byteArray5[3] = (byte) (-36);
      byteArray5[4] = (byte)114;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte) (-17);
      byteArray6[1] = (byte)35;
      byteArray6[2] = (byte)61;
      byteArray6[3] = (byte)114;
      byteArray6[4] = (byte) (-125);
      byteArray6[5] = (byte) (-125);
      byteArray6[6] = (byte)114;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte)61;
      byteArray7[1] = (byte) (-125);
      byteArray7[2] = (byte)114;
      byteArray7[3] = (byte) (-17);
      byteArray7[4] = (byte) (-36);
      byteArray7[5] = (byte)35;
      byteArray7[6] = (byte) (-24);
      byteArray7[7] = (byte)0;
      byteArray7[8] = (byte) (-125);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[3];
      byteArray8[0] = (byte) (-36);
      byteArray8[1] = (byte)114;
      byteArray8[2] = (byte)0;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      isc_blob_handle_impl5.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl5.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl0.setRblId(1);
      isc_blob_handle_impl5.getDb();
      isc_blob_handle_impl isc_blob_handle_impl7 = new isc_blob_handle_impl();
      isc_blob_handle_impl2.getDb();
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.removeRows();
      isc_db_handle_impl isc_db_handle_impl0 = new isc_db_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(5);
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      isc_stmt_handle_impl isc_stmt_handle_impl1 = new isc_stmt_handle_impl();
      isc_svc_handle_impl isc_svc_handle_impl0 = new isc_svc_handle_impl();
      isc_svc_handle_impl isc_svc_handle_impl1 = new isc_svc_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isEmpty();
      assertFalse(fBCachedFetcher0.isFirst());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.1437065979373684
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[6][6];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)17;
      byteArray1[2] = (byte)111;
      byteArray1[3] = (byte)127;
      byteArray1[4] = (byte) (-103);
      byteArray1[5] = (byte)0;
      byteArray1[6] = (byte) (-44);
      byteArray1[7] = (byte) (-124);
      byteArray1[8] = (byte)16;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)16;
      byteArray2[1] = (byte) (-60);
      byteArray2[2] = (byte) (-44);
      byteArray2[3] = (byte)102;
      byteArray2[4] = (byte) (-44);
      byteArray2[5] = (byte)16;
      byteArray2[6] = (byte) (-44);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-60);
      byteArray3[1] = (byte) (-124);
      byteArray3[2] = (byte) (-44);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte)102;
      byteArray4[1] = (byte)127;
      byteArray4[2] = (byte)72;
      byteArray4[3] = (byte) (-60);
      byteArray4[4] = (byte)16;
      byteArray4[5] = (byte)102;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte) (-44);
      byteArray5[1] = (byte)72;
      byteArray5[2] = (byte) (-103);
      byteArray5[3] = (byte)0;
      byteArray5[4] = (byte) (-44);
      byteArray5[5] = (byte) (-103);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[6];
      byteArray6[0] = (byte) (-124);
      byteArray6[1] = (byte)127;
      byteArray6[2] = (byte)17;
      byteArray6[3] = (byte)102;
      byteArray6[4] = (byte)16;
      byteArray6[5] = (byte)17;
      byteArray0[5] = byteArray6;
      linkedList0.offer(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.9913740596968101
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.negate();
      Predicate<Object> predicate4 = predicate3.or(predicate2);
      Predicate<Object> predicate5 = predicate2.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate2);
      predicate1.or(predicate4);
      FileSystemHandling.shouldAllThrowIOExceptions();
      predicate5.or(predicate3);
      Predicate.isEqual((Object) predicate6);
      Predicate<Object> predicate7 = predicate3.and(predicate4);
      Predicate<Object> predicate8 = predicate0.negate();
      Predicate<Object> predicate9 = predicate2.and(predicate8);
      Predicate<Object> predicate10 = predicate3.negate();
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate11 = predicate0.and(predicate7);
      Object object0 = new Object();
      Predicate<Object> predicate12 = Predicate.isEqual(object0);
      predicate11.or(predicate12);
      predicate5.or(predicate11);
      Predicate<Object> predicate13 = predicate3.and(predicate2);
      Predicate<Object> predicate14 = predicate0.and(predicate4);
      Predicate<Object> predicate15 = predicate4.negate();
      predicate13.and(predicate1);
      Predicate<Object> predicate16 = predicate0.and(predicate10);
      Predicate<Object> predicate17 = predicate16.negate();
      Predicate.isEqual((Object) predicate15);
      Predicate<Object> predicate18 = predicate14.or(predicate6);
      Predicate.isEqual((Object) predicate17);
      predicate18.negate();
      Object object1 = new Object();
      predicate9.negate();
      byte[][] byteArray0 = new byte[1][6];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-22);
      byteArray1[1] = (byte)17;
      byteArray1[2] = (byte)127;
      byteArray0[0] = byteArray1;
      linkedList0.addLast(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[3][3];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-64);
      byteArray1[1] = (byte)6;
      byteArray1[2] = (byte) (-1);
      byteArray1[3] = (byte) (-119);
      byteArray1[4] = (byte) (-44);
      byteArray1[5] = (byte)12;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-64);
      byteArray2[1] = (byte)12;
      byteArray2[2] = (byte)12;
      byteArray2[3] = (byte) (-44);
      byteArray2[4] = (byte) (-1);
      byteArray2[5] = (byte) (-1);
      byteArray2[6] = (byte)12;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[7];
      byteArray3[0] = (byte)12;
      byteArray3[1] = (byte)12;
      byteArray3[2] = (byte)12;
      byteArray3[3] = (byte) (-1);
      byteArray3[4] = (byte) (-64);
      byteArray3[5] = (byte) (-119);
      byteArray3[6] = (byte) (-1);
      byteArray0[2] = byteArray3;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0211196177983384
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp1 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      DatabaseParameterBufferImp databaseParameterBufferImp2 = new DatabaseParameterBufferImp();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getDb();
      DatabaseParameterBufferImp databaseParameterBufferImp3 = new DatabaseParameterBufferImp();
      DatabaseParameterBufferImp databaseParameterBufferImp4 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_blob_handle_impl0.getDb();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][7];
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte)54;
      byteArray1[1] = (byte)54;
      byteArray1[2] = (byte)100;
      byteArray1[3] = (byte)54;
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) databaseParameterBufferImp0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.or(predicate2);
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate0.and(predicate4);
      Predicate<Object> predicate6 = predicate1.or(predicate3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate.isEqual((Object) predicate5);
      Predicate<Object> predicate7 = predicate6.negate();
      Predicate<Object> predicate8 = predicate0.negate();
      Predicate<Object> predicate9 = predicate2.and(predicate8);
      Predicate<Object> predicate10 = predicate2.negate();
      Predicate<Object> predicate11 = predicate5.negate();
      predicate10.or(predicate9);
      Predicate.isEqual((Object) null);
      Predicate<Object> predicate12 = predicate0.and(predicate7);
      Predicate<Object> predicate13 = predicate9.negate();
      Predicate<Object> predicate14 = predicate12.or(predicate13);
      Predicate<Object> predicate15 = predicate14.negate();
      Predicate<Object> predicate16 = predicate11.and(predicate2);
      Predicate<Object> predicate17 = predicate0.and(predicate11);
      Predicate<Object> predicate18 = predicate12.negate();
      Predicate<Object> predicate19 = predicate16.and(predicate1);
      Predicate<Object> predicate20 = predicate0.and(predicate10);
      Predicate<Object> predicate21 = predicate20.negate();
      Predicate.isEqual((Object) predicate18);
      Predicate<Object> predicate22 = predicate17.or(predicate5);
      Predicate.isEqual((Object) predicate21);
      Predicate<Object> predicate23 = predicate15.negate();
      predicate22.test(predicate19);
      predicate23.and(predicate6);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 12, 12, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5935041414150646
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl0 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl0.getRsr_rdb();
      isc_blob_handle_impl isc_blob_handle_impl0 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl1 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl2 = new isc_blob_handle_impl();
      isc_blob_handle_impl0.getTr();
      isc_blob_handle_impl0.setTr((isc_tr_handle_impl) null);
      isc_blob_handle_impl isc_blob_handle_impl3 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl4 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl5 = new isc_blob_handle_impl();
      isc_stmt_handle_impl0.ensureCapacity(6);
      isc_blob_handle_impl3.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl1.getDb();
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      byte[] byteArray0 = new byte[6];
      isc_blob_handle_impl0.setTr((isc_tr_handle_impl) null);
      byteArray0[2] = (byte) (-27);
      byteArray0[3] = (byte) (-44);
      isc_blob_handle_impl isc_blob_handle_impl6 = new isc_blob_handle_impl();
      isc_blob_handle_impl isc_blob_handle_impl7 = new isc_blob_handle_impl();
      org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl isc_stmt_handle_impl1 = new org.firebirdsql.gds.impl.jni.isc_stmt_handle_impl();
      isc_stmt_handle_impl1.ensureCapacity(3);
      isc_blob_handle_impl1.getDb();
      isc_blob_handle_impl2.setDb((isc_db_handle_impl) null);
      isc_blob_handle_impl4.getDb();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.relative((byte)0);
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }
}
