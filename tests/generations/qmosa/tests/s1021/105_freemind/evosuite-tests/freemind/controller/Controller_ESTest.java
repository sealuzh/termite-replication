/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 02:35:08 GMT 2019
 */

package freemind.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import freemind.controller.Controller;
import freemind.main.FreeMindMain;
import freemind.modes.mindmapmode.MindMapMode;
import freemind.preferences.FreemindPropertyListener;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.MouseWheelEvent;
import java.util.Collection;
import javax.swing.DefaultCellEditor;
import javax.swing.JColorChooser;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleContext;
import org.apache.batik.apps.svgbrowser.Main;
import org.apache.xml.serializer.EmptySerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controller_ESTest extends Controller_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MindMapMode mindMapMode0 = new MindMapMode();
      mindMapMode0.getController();
      boolean boolean0 = true;
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Controller.CloseAction controller_CloseAction0 = null;
      try {
        controller_CloseAction0 = new Controller.CloseAction((Controller) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$CloseAction", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Controller.addPropertyChangeListener((FreemindPropertyListener) null);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Controller.Closer controller_Closer0 = new Controller.Closer();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = " xfu";
      stringArray0[2] = "";
      stringArray0[3] = "";
      Main main0 = null;
      try {
        main0 = new Main(stringArray0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Controller.DisposeOnClose controller_DisposeOnClose0 = new Controller.DisposeOnClose();
      JTextField jTextField0 = new JTextField("");
      jTextField0.getDisabledTextColor();
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jTextField0);
      JTextField jTextField1 = (JTextField)defaultCellEditor0.getComponent();
      defaultCellEditor0.getCellEditorListeners();
      jTextField0.getInputVerifier();
      jTextField1.getFocusAccelerator();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jTextField0, 928, 269L, 8249, 928, 8249, (-2612), false, (-2705), '\u0000', (-1471));
      mouseWheelEvent0.getModifiersEx();
      mouseWheelEvent0.setSource((Object) null);
      mouseWheelEvent0.getPreciseWheelRotation();
      // Undeclared exception!
      try { 
        controller_DisposeOnClose0.componentHidden(mouseWheelEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller$DisposeOnClose", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      JColorChooser jColorChooser0 = new JColorChooser();
      Color color0 = new Color(267);
      try { 
        Controller.showCommonJColorChooserDialog(jColorChooser0, "mode_status", color0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Collection collection0 = Controller.getPropertyChangeListeners();
      assertNotNull(collection0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EmptySerializer emptySerializer0 = new EmptySerializer();
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.getUIClassID();
      JSpinner.NumberEditor jSpinner_NumberEditor0 = new JSpinner.NumberEditor(jSpinner0, "SpinnerUI");
      JSpinner.NumberEditor jSpinner_NumberEditor1 = new JSpinner.NumberEditor(jSpinner0);
      // Undeclared exception!
      try { 
        Controller.addPropertyChangeListenerAndPropagate((FreemindPropertyListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      defaultStyledDocument0.addStyle("", styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("", styleContext_NamedStyle1);
      Controller controller0 = null;
      try {
        controller0 = new Controller((FreeMindMain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.controller.Controller", e);
      }
  }
}
