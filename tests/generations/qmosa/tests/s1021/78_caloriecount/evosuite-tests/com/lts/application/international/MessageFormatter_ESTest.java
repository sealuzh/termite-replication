/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 01:38:03 GMT 2019
 */

package com.lts.application.international;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.application.ApplicationException;
import com.lts.application.international.MessageFormatter;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.util.Collection;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.PropertyResourceBundle;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.function.Consumer;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MessageFormatter_ESTest extends MessageFormatter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle((ResourceBundle) null);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) messageFormatter0;
      objectArray0[1] = (Object) messageFormatter0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) null;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "resources.messages.standard";
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      StringReader stringReader1 = new StringReader("t%E`[");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      ResourceBundle.clearCache();
      String string1 = null;
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.8911601612408222
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      ResourceBundle.clearCache();
      messageFormatter0.getMessage("resources.messages.standard");
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      MockThrowable mockThrowable0 = new MockThrowable();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) mockThrowable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8911601612408218
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("p");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("p");
      StringReader stringReader3 = new StringReader("p");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      StringReader stringReader4 = new StringReader("");
      stringReader0.reset();
      ResourceBundle.clearCache();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) propertyResourceBundle0;
      objectArray0[1] = (Object) stringReader3;
      Object object0 = new Object();
      ApplicationException applicationException0 = new ApplicationException("L}R", object0);
      StringReader stringReader5 = new StringReader("");
      PropertyResourceBundle propertyResourceBundle1 = new PropertyResourceBundle(stringReader1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("p", "-=/gs7hyT;(S[", "p", 3605);
      messageFormatter0.getMessage("p", objectArray0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("L}R", (Object) "L}R", (Object) "L}R");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<MessageFormatter.LoadBundleError> linkedList0 = new LinkedList<MessageFormatter.LoadBundleError>();
      ApplicationException applicationException0 = new ApplicationException("LrzD*aLWUy{C|m");
      MockThrowable mockThrowable0 = new MockThrowable("LrzD*aLWUy{C|m", applicationException0);
      ApplicationException applicationException1 = new ApplicationException((Throwable) mockThrowable0, "j`A@", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("resources.messages.standard", applicationException1);
      messageFormatter_LoadBundleError0.bundleName = "QLkR#oJyOK#Zc/";
      linkedList0.add(messageFormatter_LoadBundleError0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      messageFormatter0.createLoadException(linkedList0);
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("; and resource path: ", 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=; and resource path: 
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<ResourceBundle> linkedList0 = new LinkedList<ResourceBundle>();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      linkedList0.add((ResourceBundle) propertyResourceBundle0);
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) linkedList0, (List) list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.PropertyResourceBundle cannot be cast to java.lang.String
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.listToString(list0);
      Locale.setDefault(locale_Category0, locale1);
      Locale.Category locale_Category1 = Locale.Category.FORMAT;
      Locale locale2 = Locale.CHINA;
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      Locale.setDefault(locale_Category1, locale0);
      assertEquals("fr", locale0.getLanguage());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      predicate0.test(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      predicate1.test(predicate0);
      predicate0.or(predicate2);
      predicate2.and(predicate0);
      predicate0.or(predicate2);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      predicate2.negate();
      Predicate<Object> predicate4 = predicate0.and(predicate1);
      predicate0.and(predicate1);
      Predicate<Object> predicate5 = predicate2.negate();
      predicate2.or(predicate1);
      predicate3.test(predicate2);
      Predicate<Object> predicate6 = predicate0.negate();
      predicate6.or(predicate1);
      predicate6.or(predicate0);
      predicate5.test(predicate0);
      predicate5.test(predicate0);
      predicate2.test(predicate4);
      predicate5.or(predicate0);
      predicate5.negate();
      predicate6.and(predicate0);
      predicate1.or(predicate2);
      predicate0.test(predicate6);
      predicate3.negate();
      predicate2.and(predicate1);
      predicate3.negate();
      predicate0.negate();
      predicate2.test(predicate0);
      predicate3.or(predicate1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad((String) null, "E)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate0.or(predicate1);
      predicate0.test(list0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      predicate0.test(predicate0);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      predicate2.test(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      predicate3.negate();
      Predicate<Object> predicate5 = predicate0.and(predicate0);
      Predicate<Object> predicate6 = predicate4.negate();
      predicate3.or(predicate6);
      Predicate<Object> predicate7 = predicate0.and(predicate2);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate8.or(predicate0);
      predicate7.test(predicate0);
      predicate8.and(predicate2);
      predicate0.test(predicate8);
      predicate8.negate();
      predicate3.and(predicate2);
      predicate7.or(predicate2);
      predicate0.and(predicate5);
      predicate3.or(predicate9);
      predicate0.negate();
      predicate3.test(predicate0);
      predicate4.or(predicate2);
      predicate2.negate();
      predicate2.and(predicate8);
      predicate1.negate();
      predicate5.negate();
      predicate5.test(predicate0);
      predicate2.and(predicate9);
      predicate0.negate();
      predicate8.test(predicate7);
      predicate7.negate();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.lts.application.international.MessageFormatter$LoadBundleError
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = messageFormatter0.listToString((List<String>) null);
      assertEquals("null", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale.setDefault(locale_Category0, locale1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("com.lts.event.ListenerHelper", (Object[]) null, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6941960781238792
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("RI2\"");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("RI2\"");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader3 = new StringReader("com.lts.application.errors.optdonSwitchNotAtEnd");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      ResourceBundle.clearCache();
      messageFormatter0.formatMessage("com.lts.application.errors.optdonSwitchNotAtEnd", messageFormatter0.DEFAULT_BUNDLE_PATH);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("s<ttZP0D536\":A");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = MessageFormatter.DEFAULT_BUNDLE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      messageFormatter0.listToString(linkedList0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      int int0 = 256;
      PipedInputStream pipedInputStream2 = new PipedInputStream(pipedOutputStream1, 256);
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("resources.messages.standard");
      StringReader stringReader1 = new StringReader("t%E`[");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader1);
      propertyResourceBundle0.containsKey("resources.messages.standard");
      stringReader1.ready();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      ResourceBundle.clearCache();
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage((String) null, messageFormatter0.DEFAULT_BUNDLE_PATH);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("p");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("p");
      StringReader stringReader3 = new StringReader("com.lts.application.errors.optionSwitchNotAtEnd");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      StringReader stringReader4 = new StringReader("");
      stringReader0.reset();
      ResourceBundle.clearCache();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) propertyResourceBundle0;
      objectArray0[1] = (Object) stringReader3;
      objectArray0[2] = (Object) stringReader0;
      objectArray0[3] = (Object) stringReader0;
      objectArray0[4] = (Object) stringReader3;
      objectArray0[5] = (Object) "[8w0%CO_zhkJlth>";
      objectArray0[6] = (Object) stringReader1;
      objectArray0[7] = (Object) "java.properties";
      try { 
        messageFormatter0.formatMessage("", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.FRENCH;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale locale1 = Locale.CHINA;
      Locale locale2 = Locale.TAIWAN;
      locale2.getDisplayVariant(locale1);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale0);
      Locale.getISOLanguages();
      locale0.clone();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        messageFormatter0.initializeResourceBundle((List<String>) null, list1, locale0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      LinkedList<ApplicationException> linkedList1 = new LinkedList<ApplicationException>();
      linkedList1.add((ApplicationException) null);
      LinkedList<ApplicationException> linkedList2 = new LinkedList<ApplicationException>();
      LinkedList<ApplicationException> linkedList3 = new LinkedList<ApplicationException>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("o*2?U,[F[%|J_jcA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.FRENCH;
      locale0.getDisplayVariant();
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getUnicodeLocaleAttributes();
      Locale.setDefault(locale_Category0, locale0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("", list0);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage((Throwable) applicationException0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      String string0 = null;
      ClassLoader classLoader1 = classLoader0.getParent();
      String string1 = "Yk+EUznW^s>blE";
      // Undeclared exception!
      try { 
        messageFormatter0.listResources((String) null, classLoader1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate0.or(predicate1);
      predicate0.test(list0);
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      predicate2.test(predicate0);
      Predicate<Object> predicate4 = predicate0.or(predicate3);
      predicate3.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      predicate5.negate();
      Predicate<Object> predicate7 = predicate0.and(predicate2);
      Predicate<Object> predicate8 = predicate6.negate();
      Predicate<Object> predicate9 = predicate8.or(predicate0);
      predicate7.test(predicate0);
      predicate8.and(predicate2);
      predicate0.test(predicate8);
      predicate8.negate();
      predicate3.and(predicate2);
      predicate7.or(predicate2);
      predicate0.and(predicate6);
      predicate3.or(predicate9);
      predicate0.negate();
      predicate3.test(predicate0);
      predicate5.or(predicate2);
      predicate2.negate();
      predicate2.and(predicate8);
      predicate1.negate();
      Predicate<Object> predicate10 = predicate6.negate();
      predicate6.test(predicate0);
      predicate2.and(predicate9);
      predicate0.negate();
      predicate8.test(predicate7);
      predicate7.negate();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("/", (Object) predicate4, (Object) predicate4, (Object) predicate10);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassLoader classLoader1 = ClassLoader.getSystemClassLoader();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassLoader classLoader2 = ClassLoader.getSystemClassLoader();
      classLoader0.setDefaultAssertionStatus(true);
      classLoader0.setPackageAssertionStatus("Yk+EUznXiW^s> lE", true);
      ClassLoader classLoader3 = classLoader1.getParent();
      classLoader1.setPackageAssertionStatus((String) null, false);
      classLoader1.getParent();
      classLoader2.setPackageAssertionStatus(", is inconsistent with parent, ", true);
      ClassLoader classLoader4 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      classLoader0.getParent();
      classLoader0.getParent();
      classLoader3.setClassAssertionStatus("YfLch6M%p:bgsLQUa%'", true);
      classLoader0.setClassAssertionStatus("gwx9|I'", true);
      ClassLoader.getSystemClassLoader();
      classLoader4.getParent();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Integer integer0 = new Integer(3040);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("resources.messages.standard", (Object) null, (Object) integer0, (Object) classLoader2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[12];
      List list0 = MessageFormatter.buildList((Object[]) null);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8911601612408218
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p");
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("p");
      StringReader stringReader3 = new StringReader("com.lts.application.errors.optionSwitchNotAtEnd");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader3);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.addBundle(propertyResourceBundle0);
      StringReader stringReader4 = new StringReader("");
      stringReader0.reset();
      propertyResourceBundle0.containsKey("%AP}");
      ResourceBundle.clearCache();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) propertyResourceBundle0;
      objectArray0[1] = (Object) stringReader3;
      objectArray0[3] = (Object) stringReader0;
      objectArray0[4] = (Object) stringReader3;
      objectArray0[5] = (Object) "[8w0%CO_zhkJlth>";
      objectArray0[6] = (Object) stringReader1;
      objectArray0[7] = (Object) "java.properties";
      messageFormatter0.getMessage("com.lts.application.errors.optionSwitchNotAtEnd", objectArray0[2], (Object) stringReader4, (Object) stringReader1);
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("The application encountered a critical error and must now terminate.");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "U&?piWX.Z~";
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) "U&?piWX.Z~";
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) "U&?piWX.Z~";
      objectArray0[5] = (Object) messageFormatter0;
      Object object0 = new Object();
      objectArray0[6] = object0;
      objectArray0[7] = (Object) messageFormatter0;
      objectArray0[8] = (Object) messageFormatter0;
      StringReader stringReader0 = new StringReader("U&?piWX.Z~");
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("U&?piWX.Z~", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[5];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) messageFormatter0;
      objectArray0[2] = (Object) messageFormatter0;
      objectArray0[3] = (Object) "~+v~**#";
      objectArray0[4] = (Object) messageFormatter0;
      StringReader stringReader0 = new StringReader("Error during repository cleanup.\nContinue startup?");
      char[] charArray0 = new char[6];
      charArray0[0] = ';';
      charArray0[1] = 'R';
      charArray0[2] = 'A';
      charArray0[3] = 'e';
      charArray0[4] = '8';
      charArray0[5] = 'k';
      stringReader0.read(charArray0);
      PropertyResourceBundle propertyResourceBundle0 = new PropertyResourceBundle(stringReader0);
      String string0 = messageFormatter0.formatMessage("~+v~**#", objectArray0, (ResourceBundle) propertyResourceBundle0);
      assertNull(string0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringReader stringReader0 = new StringReader("/");
      StringReader stringReader1 = new StringReader("FH/h2;~=|xfX%>7hx");
      ResourceBundle.clearCache();
      MockThrowable mockThrowable0 = new MockThrowable("/");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[3];
      StackTraceElement stackTraceElement0 = new StackTraceElement("FH/h2;~=|xfX%>7hx", "FH/h2;~=|xfX%>7hx", "/Y=!", 2);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("/", "resources.message.standard", "FH/h2;~=|xfX%>7hx", (-5103));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("/", "null", "51WS?<I,>F", 3);
      stackTraceElementArray0[2] = stackTraceElement2;
      mockThrowable0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable1 = new MockThrowable("resources.message.standard", mockThrowable0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      List list0 = messageFormatter0.loadCriticalBundles();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      predicate0.test(list0);
      predicate0.test(predicate0);
      predicate0.test(predicate0);
      predicate0.or(predicate0);
      predicate0.and(predicate0);
      predicate0.or(predicate0);
      predicate0.negate();
      Predicate<Object> predicate1 = predicate0.negate();
      ApplicationException applicationException0 = new ApplicationException("java.class", (Object) null);
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError((String) null, applicationException0);
      predicate1.or(predicate1);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      predicate0.and(predicate0);
      Predicate<Object> predicate3 = predicate0.negate();
      predicate0.or(predicate0);
      Predicate<Object> predicate4 = predicate0.negate();
      predicate4.or(predicate0);
      predicate4.or(predicate0);
      predicate3.test(predicate0);
      predicate3.test(predicate0);
      predicate4.negate();
      predicate0.test(predicate2);
      predicate0.negate();
      predicate3.or(predicate0);
      predicate3.negate();
      predicate4.and(predicate0);
      predicate0.or(predicate0);
      predicate1.negate();
      predicate0.and(predicate0);
      predicate1.negate();
      predicate0.negate();
      predicate0.test(predicate0);
      predicate1.or(predicate0);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      predicate0.or(predicate0);
      predicate0.test(list0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate0.test(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      predicate1.and(predicate0);
      predicate1.test(predicate0);
      predicate0.or(predicate2);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.and(predicate0);
      predicate3.negate();
      predicate0.and(predicate1);
      Predicate<Object> predicate5 = predicate0.and(predicate1);
      Predicate<Object> predicate6 = predicate4.negate();
      MessageFormatter.LoadBundleError messageFormatter_LoadBundleError0 = new MessageFormatter.LoadBundleError("", (Throwable) null);
      Predicate.isEqual((Object) messageFormatter_LoadBundleError0);
      predicate6.or(predicate0);
      predicate5.test(predicate0);
      predicate6.and(predicate1);
      predicate0.test(predicate6);
      predicate6.negate();
      predicate2.and(predicate1);
      predicate3.negate();
      predicate5.or(predicate1);
      predicate0.negate();
      predicate2.test(predicate0);
      Predicate<Object> predicate7 = predicate3.or(predicate1);
      predicate7.negate();
      predicate1.and(predicate6);
      predicate0.negate();
      predicate4.negate();
      predicate4.test(predicate0);
      predicate0.negate();
      predicate1.or(predicate0);
      predicate6.test(predicate5);
      predicate3.negate();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.temp();
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8742830984023096
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_PROPERTIES;
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      List<String> list2 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      Locale locale0 = Locale.FRENCH;
      MessageFormatter messageFormatter0 = new MessageFormatter();
      classLoader0.setPackageAssertionStatus((String) null, false);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.CHINA;
      Comparator<Locale.LanguageRange> comparator0 = (Comparator<Locale.LanguageRange>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      Locale.setDefault(locale_Category0, locale0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.getISOLanguages();
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list1, locale_FilteringMode2);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode1);
      Locale.FilteringMode locale_FilteringMode3 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list2, locale_FilteringMode3);
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0, locale0, classLoader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.properties; and resource path: java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      Object object0 = new Object();
      objectArray0[0] = object0;
      Object object1 = new Object();
      objectArray0[1] = object1;
      Object object2 = new Object();
      objectArray0[2] = object2;
      Object object3 = new Object();
      objectArray0[3] = object3;
      Object object4 = new Object();
      objectArray0[4] = object4;
      Object object5 = new Object();
      objectArray0[5] = object5;
      List list0 = MessageFormatter.buildList(objectArray0);
      assertEquals(6, list0.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      ApplicationException applicationException0 = messageFormatter0.createLoadException(linkedList0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "resources.messages.standard", applicationException0, messageFormatter0, messageFormatter0);
      messageFormatter0.myLastException = (Throwable) applicationException1;
      messageFormatter0.getLastException();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      // Undeclared exception!
      try { 
        linkedList1.removeFirst();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      predicate0.test(list0);
      predicate0.test(predicate0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      predicate0.test(predicate0);
      predicate0.or(predicate1);
      predicate1.and(predicate0);
      predicate0.or(predicate1);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      predicate1.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      predicate1.or(predicate0);
      predicate3.test(predicate1);
      Predicate<Object> predicate6 = predicate0.negate();
      predicate6.or(predicate0);
      Predicate.isEqual((Object) predicate3);
      predicate6.or(predicate0);
      predicate5.test(predicate0);
      predicate5.test(predicate0);
      predicate1.test(predicate4);
      predicate1.negate();
      predicate5.or(predicate0);
      predicate5.negate();
      Predicate<Object> predicate7 = predicate6.and(predicate0);
      Predicate<Object> predicate8 = predicate0.or(predicate1);
      Predicate<Object> predicate9 = predicate3.negate();
      predicate1.and(predicate0);
      predicate4.negate();
      predicate3.and(predicate9);
      predicate7.test(predicate8);
      Locale.getISOLanguages();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.addResourceBundles();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      Predicate<Object> predicate1 = predicate0.or(predicate0);
      predicate0.test(list0);
      Predicate<Object> predicate2 = predicate0.and(predicate0);
      predicate0.test(predicate0);
      Predicate<Object> predicate3 = predicate0.or(predicate0);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      predicate2.test(predicate0);
      predicate0.or(predicate3);
      predicate3.and(predicate2);
      predicate2.or(predicate3);
      predicate3.negate();
      Predicate<Object> predicate5 = predicate3.negate();
      Predicate<Object> predicate6 = predicate5.and(predicate0);
      predicate3.negate();
      Predicate<Object> predicate7 = predicate0.and(predicate2);
      predicate2.and(predicate1);
      Predicate<Object> predicate8 = predicate3.negate();
      predicate5.test(predicate3);
      Predicate<Object> predicate9 = predicate6.negate();
      predicate9.or(predicate2);
      predicate9.or(predicate0);
      predicate8.test(predicate0);
      predicate8.test(predicate0);
      predicate3.test(predicate7);
      predicate8.or(predicate6);
      predicate8.negate();
      predicate9.and(predicate2);
      predicate2.or(predicate4);
      predicate0.test(predicate9);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) messageFormatter0;
      Object object0 = new Object();
      objectArray0[1] = object0;
      try { 
        messageFormatter0.getMessage("(", objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      ApplicationException applicationException0 = new ApplicationException("Wne", (Object[]) messageFormatter0.DEFAULT_BUNDLE_PATH);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement("s@7D~B^", "K}1w>d%wLeF=ZU9%=15", "critcal.error.unknown", (-610));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("77 qjw@lC", "s@7D~B^", "77 qjw@lC", (-610));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("i", "K}1w>d%wLeF=ZU9%=15", "resources.messages.standard", (-967));
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("s@7D~B^", "\t2HuZiHCN.Uo1)^A", "resources.messages.standard", (-610));
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("resources.messages.standard", "\t2HuZiHCN.Uo1)^A", "resources.messages.standard", 1024);
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("K<jd", "fvv.39p]`$@", "^QkLmT%", (-2483));
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("Wne", "", "Tw Gk7bu", (-390));
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("zh-CN", "b7\"#s<w", "Wne", 0);
      stackTraceElementArray0[7] = stackTraceElement7;
      applicationException0.setStackTrace(stackTraceElementArray0);
      ApplicationException applicationException1 = new ApplicationException(applicationException0, "<undefined>");
      Locale.LanguageRange locale_LanguageRange0 = new Locale.LanguageRange("Wne");
      // Undeclared exception!
      try { 
        messageFormatter0.getMessage("=1?", (Object) applicationException1, (Object) locale_LanguageRange0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.lts.application.ApplicationMessages.error.keyNotFound
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("/", "E)9");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.tryLoad("", "com.lts.pest.tree.IdTreeNode");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ResourceBundle", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Throwable throwable0 = messageFormatter0.getLastException();
      assertNull(throwable0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.0358196128697856
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      predicate0.or(predicate0);
      predicate0.negate();
      predicate0.test(list0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate0.test(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      predicate1.test(predicate0);
      predicate0.or(predicate2);
      predicate2.and(predicate1);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.and(predicate0);
      predicate3.negate();
      predicate0.and(predicate1);
      Predicate<Object> predicate5 = predicate4.negate();
      predicate4.negate();
      predicate1.or(predicate4);
      predicate5.or(predicate0);
      predicate2.test(predicate3);
      predicate0.test(predicate0);
      predicate3.and(predicate2);
      predicate5.and(predicate1);
      predicate0.test(predicate5);
      predicate3.negate();
      predicate4.negate();
      predicate2.negate();
      predicate3.or(predicate1);
      predicate0.negate();
      predicate0.or(predicate1);
      predicate2.test(predicate0);
      predicate3.or(predicate1);
      StackTraceElement stackTraceElement0 = new StackTraceElement("Could not create repository temp dir, ", " }h'82.O", "Could not create repository temp dir, ", (-577));
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0, list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: java.class; and resource path: java.class
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.1537308399247914
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;
      Locale locale0 = Locale.FRENCH;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale.setDefault(locale_Category0, locale1);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      try { 
        messageFormatter0.initializeResourceBundle(list0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Could not find any resource bundle give names: messages; and resource path: java.class, java.properties
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      List<String> list0 = ResourceBundle.Control.FORMAT_CLASS;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) list0);
      predicate0.or(predicate0);
      predicate0.test(list0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      predicate0.test(predicate0);
      Predicate<Object> predicate2 = predicate0.or(predicate0);
      Predicate<Object> predicate3 = predicate1.and(predicate0);
      predicate1.test(predicate0);
      predicate0.or(predicate2);
      predicate2.and(predicate1);
      predicate2.negate();
      Predicate<Object> predicate4 = predicate2.negate();
      Predicate<Object> predicate5 = predicate4.and(predicate0);
      predicate4.negate();
      Predicate<Object> predicate6 = predicate0.and(predicate1);
      Predicate<Object> predicate7 = predicate0.and(predicate1);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate8.or(predicate0);
      predicate7.test(predicate0);
      predicate4.and(predicate2);
      predicate8.and(predicate1);
      predicate0.test(predicate8);
      predicate8.negate();
      Predicate<Object> predicate10 = predicate4.negate();
      predicate7.or(predicate1);
      predicate0.negate();
      predicate2.test(predicate0);
      Predicate<Object> predicate11 = predicate4.or(predicate1);
      predicate1.negate();
      Predicate<Object> predicate12 = predicate1.and(predicate8);
      predicate0.negate();
      predicate5.negate();
      predicate5.test(predicate0);
      Predicate<Object> predicate13 = predicate12.or(predicate3);
      predicate13.or(predicate9);
      MessageFormatter messageFormatter0 = new MessageFormatter();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) predicate10;
      objectArray0[1] = (Object) predicate6;
      objectArray0[2] = (Object) predicate10;
      objectArray0[3] = (Object) messageFormatter0;
      objectArray0[4] = (Object) "/";
      objectArray0[5] = (Object) predicate3;
      objectArray0[6] = (Object) predicate11;
      // Undeclared exception!
      try { 
        messageFormatter0.formatMessage("#`usF)", objectArray0, (ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MessageFormatter messageFormatter0 = new MessageFormatter();
      messageFormatter0.initializeResourceBundle();
      ClassLoader.getSystemClassLoader();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      int int0 = 2969;
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<ApplicationException> linkedList0 = new LinkedList<ApplicationException>();
      LinkedList<ApplicationException> linkedList1 = new LinkedList<ApplicationException>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList1.add((ApplicationException) null);
      LinkedList<ApplicationException> linkedList2 = new LinkedList<ApplicationException>();
      linkedList2.forEach(consumer0);
      LinkedList<ApplicationException> linkedList3 = new LinkedList<ApplicationException>();
      MessageFormatter messageFormatter0 = new MessageFormatter();
      // Undeclared exception!
      try { 
        messageFormatter0.createLoadException(linkedList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.application.international.MessageFormatter", e);
      }
  }
}
