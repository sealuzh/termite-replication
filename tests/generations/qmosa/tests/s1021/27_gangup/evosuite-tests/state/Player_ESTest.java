/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 02:02:11 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.292568389172343
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      byteArray0[1] = (byte) (-1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)55;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6+<-n!#sbi?!$XKGN");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6+<-n!#sbi?!$XKGN");
      byteArray0[5] = (byte) (-7);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(1241, "6+<-n!#sbi?!$XKGN", "6+<-n!#sbi?!$XKGN", 3850, 2562);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      player0.setJoinOK(player0, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player0.add(player0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NZxw.WlMC");
      boolean boolean0 = player0.isJoinOK(player0, false);
      System.setCurrentTimeMillis((-472L));
      System.setCurrentTimeMillis((-472L));
      System.setCurrentTimeMillis(1392409296326L);
      boolean boolean1 = player0.isJoinOK(player0, false);
      assertFalse(boolean1 == boolean0);
      
      player0.isBoss();
      Player player1 = new Player();
      boolean boolean2 = player0.isJoinOK(player1, true);
      assertEquals(0, player1.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(3850, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("Player-1", player1.getName());
      assertEquals(2562, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(1, player1.getStrength());
      assertFalse(boolean2);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2729);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setDead();
      player0.setY((-11.76F));
      player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      System.setCurrentTimeMillis(2729);
      float float0 = player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals((-11.76F), float0, 0.01F);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis((-472L));
      Player player0 = new Player(690);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.unpack(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.setMoney((-472L));
      player0.setX(0.0F);
      player0.getMoney();
      player0.getMoney();
      System.setCurrentTimeMillis((-472L));
      player0.type();
      System.setCurrentTimeMillis((-472L));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Player player0 = new Player(1200, "wsRoG+_\"^L$hPAjw|Y", "wsRoG+_\"^L$hPAjw|Y", 1200, 1200);
      Player player1 = new Player((short)4919, (String) null, (String) null, (-2775));
      player0.setJoinOK(player1, true);
      player0.setMoney(1200);
      float float0 = player0.getMoney();
      assertEquals(1200.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7874335778425303
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-1504), "", 3);
      player0.setY(0.0F);
      player0.setZ(3);
      player0.getZ();
      player0.pack();
      player0.pack();
      System.setCurrentTimeMillis(2279L);
      player0.pack();
      Player player1 = new Player(3, "", 3);
      player1.boss = (Party) player0;
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player0.getStrength();
      System.setCurrentTimeMillis((-1504));
      float float0 = player0.getMoney();
      assertEquals(3.0F, player0.getZ(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(5);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      player0.pack(dataOutputStream0);
      player0.setZ((-2092.7F));
      Party party0 = player0.head;
      player0.boss = null;
      Player player1 = new Player(5, "oUC7;-tj2!gG4-T>", "oUC7;-tj2!gG4-T>", 1303, 318);
      player1.getSubparty();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.isJoinOK(player1, true);
      System.setCurrentTimeMillis((-2172L));
      player0.getY();
      player0.getZ();
      assertEquals((-2092.7F), player0.getZ(), 0.01F);
      
      player1.getY();
      int int0 = player1.getStrength();
      assertEquals(318, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.2278680974667573
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      Player player0 = new Player((-2266));
      player0.pack();
      player0.getY();
      player0.setY(1930.7124F);
      player0.getY();
      player0.gangStrength();
      player0.gangStrength();
      player0.pack();
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals(1930.7124F, player0.getY(), 0.01F);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead();
      player0.remove((Party) null);
      player0.reset(false);
      Party party0 = new Party((short)4919);
      party0.next = null;
      player0.add(party0);
      player0.pack();
      System.setCurrentTimeMillis((-393L));
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.450507848988659
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)55;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)55;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[5] = (byte) (-7);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(1241, "6+<-n!#sbi?!$XKGN", "module.ModuleBrowserDialog$ModuleFilter", 3850, 2562);
      Player player1 = new Player(2, "module.ModuleBrowserDialog$ModuleFilter", "6+<-n!#sbi?!$XKGN", (byte) (-94));
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      player0.setJoinOK(player1, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NZzxqw.-lMC");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player1.add(player0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NZzxqw.-lMC");
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis((-472L));
      int int0 = player0.gangStrength();
      assertEquals(3850, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(2563, int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.027215791000468
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(14081, "$q%", "$q%", (-16963), 0);
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.remove((Party) null);
      Player player1 = new Player((-29439), "", "$q%", 4919);
      player0.getSubparty();
      player0.setJoinOK(player1, true);
      player1.pack();
      player1.isConnected();
      player0.setX(0.1F);
      Player player2 = new Player(896, "$q%", 255);
      player0.gangStrength();
      Player player3 = new Player(0);
      player3.isJoinOK(player0, true);
      assertEquals(0.1F, player0.getX(), 0.01F);
      
      int int0 = player3.type();
      assertEquals(5, int0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "/");
      Player player0 = new Player((-29439), "/", 3300);
      player0.getZ();
      player0.setX((short)4919);
      player0.setX((-29439));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      float float0 = Player.TOLERANCE;
      System.setCurrentTimeMillis((-29439));
      int int0 = Packable.PLAYER;
      float float1 = player0.getX();
      assertEquals((-29439.0F), float1, 0.01F);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-31), "", "", (-1042));
      byte[] byteArray0 = player0.pack();
      Locale locale0 = Locale.GERMANY;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object[] objectArray0 = new Object[7];
      Object object5 = new Object();
      objectArray0[0] = object5;
      objectArray0[1] = object3;
      objectArray0[2] = object4;
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) "";
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.5782737395252497
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-94);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)80;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray0[5] = (byte) (-7);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(1241, "6+<-n!#sbi?!$XKGN", "module.ModuleBrowserDialog$ModuleFilter", 3850, 2562);
      player0.remove(player0);
      Player player1 = new Player(2, "module.ModuleBrowserDialog$ModuleFilter", "6+<-n!#sbi?!$XKGN", (byte) (-94));
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      player0.remove(player1);
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      player0.setJoinOK(player1, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NZzxqw.-lMC");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player1.add(player0);
      player1.setX((short)4919);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "6+<-n!#sbi?!$XKGN");
      player0.isJoinOK(player1, false);
      System.setCurrentTimeMillis((byte)55);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(4, byteArrayInputStream0.available());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.430758633903798
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-503), "#Xf", "", (-503));
      player0.pack();
      Player player1 = new Player(3850);
      player0.getName();
      assertEquals((-503), player0.getPictureId());
      
      int int0 = Packable.GAME_STATE;
      player1.pack();
      player1.pack();
      player1.pack();
      player1.pack();
      int int1 = player1.type();
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player3850", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(5, int1);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte) (-109);
      byteArray0[4] = (byte)22;
      byteArray0[5] = (byte) (-59);
      byteArray0[6] = (byte) (-67);
      byteArray0[7] = (byte)62;
      byteArray0[8] = (byte) (-61);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-1), 1933);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.242232654667365
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1));
      player0.getMoney();
      player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player");
      Player player1 = new Player((-1));
      player1.reset(false);
      player1.setDead((long) (-1));
      player0.isJoinOK(player1, false);
      player1.getY();
      player1.getName();
      FileSystemHandling.shouldAllThrowIOExceptions();
      player0.getSubparty();
      player1.head = (Party) player0;
      player1.setDead();
      player1.getTimeOfDeath();
      player0.gangStrength();
      player1.next = (Party) player0;
      player0.gangStrength();
      player1.getMoney();
      player0.getZ();
      player1.type();
      player0.getName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.getName();
      player1.getTimeOfDeath();
      player0.getX();
      player1.getTimeOfDeath();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.175307026797448
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1, (String) null, (String) null, 1);
      player0.setConnected(false);
      player0.getIP();
      player0.getName();
      System.setCurrentTimeMillis((-2880L));
      player0.isConnected();
      player0.gangStrength();
      player0.getIP();
      player0.getX();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.unpack(byteArray0);
      player0.setZ((byte)0);
      player0.setMoney(1192.1F);
      player0.setMoney((byte)95);
      player0.toString();
      Player player1 = new Player();
      player1.unpack(byteArray0);
      player1.toString();
      player1.gangStrength();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player1.unpack(dataInputStream0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player((-1084), "+p~`t:L-IHys", "+p~`t:L-IHys", 31671, (-1084));
      int int0 = player0.gangStrength();
      assertEquals((-1084), int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(31671, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "";
      Player player0 = new Player((-1038), "", (String) null, (-1038));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Player player0 = new Player(2176, "iG", (String) null, (-87));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-113);
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)105;
      byteArray0[4] = (byte)80;
      byteArray0[5] = (byte) (-95);
      byteArray0[6] = (byte) (-123);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1303, 4919);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataInputStream0.skipBytes(333);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals((-87), player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.175307026797448
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-1));
      player0.getMoney();
      player0.pack();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Player");
      Player player1 = new Player((-1411));
      player1.reset(false);
      player1.setDead((long) (-1411));
      player0.isJoinOK(player1, false);
      player1.getY();
      player1.getName();
      player0.getSubparty();
      player1.getTimeOfDeath();
      player0.gangStrength();
      player1.next = (Party) player0;
      player0.gangStrength();
      player1.getMoney();
      player0.getZ();
      player1.type();
      player0.getName();
      player1.isJoinOK(player0, false);
      player1.getName();
      player1.getTimeOfDeath();
      player0.getX();
      long long0 = player1.getTimeOfDeath();
      assertTrue(player1.isDead());
      assertEquals((-1411L), long0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7825850929940454
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getIP();
      Party party0 = player0.head;
      player0.boss = null;
      player0.setY(0);
      player0.setConnected(true);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.getIP();
      player0.isDead();
      player0.setX(0);
      player0.getX();
      float float0 = player0.getZ();
      assertFalse(player0.isConnected());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.241028319059176
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(495, "08)mVE;q5%;", (String) null, 1, 4807);
      player0.setConnected(false);
      player0.getIP();
      player0.getName();
      System.setCurrentTimeMillis((-2880L));
      player0.isConnected();
      player0.gangStrength();
      player0.getIP();
      player0.getX();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.unpack(byteArray0);
      player0.setZ((byte)0);
      player0.setMoney(1192.1F);
      player0.setMoney((byte)95);
      player0.toString();
      assertFalse(player0.isConnected());
      
      Player player1 = new Player();
      player1.unpack(byteArray0);
      player1.toString();
      int int0 = player1.gangStrength();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = "a\\P2XF[b~t{[I!Q";
      Player player0 = new Player(3356, "aP2XF[b~t{[I!Q", "aP2XF[b~t{[I!Q", (-1038));
      byte[] byteArray0 = player0.pack();
      Locale locale0 = Locale.ITALY;
      locale0.getDisplayScript();
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      player0.unpack(byteArray0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange("aP2XF[b~t{[I!Q");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // range=ap2xf[b~t{[i!q
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.994831313606199
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-29439), "", "", 473, 4919);
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.remove((Party) null);
      player0.setY((-29439));
      Player player1 = new Player((-503), "", "", (-503));
      player0.setJoinOK(player1, true);
      player1.head = (Party) player0;
      byte[] byteArray0 = player1.pack();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      player0.add((Party) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.isJoinOK(player1, true);
      player1.remove(player0);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-2264L));
      player1.setX((short)4919);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1392409296320L);
      player0.unpack(byteArray0);
      player0.isJoinOK(player1, false);
      player0.isJoinOK(player1, false);
      assertEquals(4919.0F, player1.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.1724318111562746
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 3, 3);
      player0.getSubparty();
      player0.getZ();
      player0.setX(1.0F);
      player0.getStrength();
      player0.gangStrength();
      player0.setX((-4349.3F));
      player0.setDead(0L);
      player0.setDead();
      player0.getIP();
      player0.isDead();
      player0.type();
      float float0 = player0.getY();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(96, (String) null, (String) null, 0);
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0289251927098695
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player((-29439), "", "", 454, 4919);
      Party party0 = player0.head;
      player0.remove((Party) null);
      player0.remove((Party) null);
      player0.getSubparty();
      player0.setJoinOK(player0, true);
      player0.pack();
      player0.setX((-1316));
      Player player1 = new Player((-29439), "", (short)4919);
      Player player2 = new Player((-199), "", "clF~$rwn? cf_UV#", (short)4919, (-199));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.gangStrength();
      player0.pack();
      int int0 = player2.getStrength();
      assertEquals((-199), int0);
      
      float float1 = player0.getY();
      assertEquals(0.0F, float1, 0.01F);
      
      int int1 = player0.gangStrength();
      assertEquals(454, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(4919, int1);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-187), "XubY_(JS+rJ1_'B*", "XubY_(JS+rJ1_'B*", (-187));
      boolean boolean0 = player0.isDead();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals((-187), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(4919, "", "", 3, 3);
      player0.getSubparty();
      player0.setMoney((-1.0F));
      player0.isJoinOK(player0, true);
      player0.getZ();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      player0.unpack(byteArray0);
      player0.setZ(0.2F);
      player0.setMoney((-4349.3F));
      player0.setMoney((-1327.7092F));
      player0.toString();
      player0.toString();
      assertEquals((-1327.7092F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "f";
      String string1 = " 2LR#ne:5iO";
      Player player0 = new Player(719, " 2LR#ne:5iO", " 2LR#ne:5iO", 3850);
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player(0, "", "AHC!ued", 4, 93);
      player0.getPictureId();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-1084), "Bp Kf551N;u7", "+p~`t:L-IHys", (-1084));
      Player player1 = new Player(5, "+p~`t:L-IHys", "+p~`t:L-IHys", (-397), 5);
      player0.setMoney((-397));
      player0.setJoinOK(player1, true);
      player0.getPictureId();
      player0.setMoney((-1084));
      assertEquals((-1084.0F), player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Player player0 = new Player(1241, "6+<-n!#sbi?!$XKGN", "module.ModuleBrowserDialog$ModuleFilter", 3850, 2562);
      player0.reset(true);
      player0.remove(player0);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      System.setCurrentTimeMillis(711L);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-163));
      Party party0 = player0.gangBoss();
      player0.add(party0);
      player0.prev = null;
      player0.head = null;
      player0.toString();
      String string0 = player0.toString();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("Player-163", string0);
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player((-1618));
      player0.setY((-1618));
      player0.setZ((-1366.97F));
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2176, "iG", "!/", (-87));
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getName();
      assertEquals((-87), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals("iG", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.9676652704776565
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-878), "=E[", "=E[", (-1351), (-878));
      player0.setZ((-253.08157F));
      player0.setMoney(0.1F);
      Party party0 = new Party();
      player0.add(party0);
      player0.setY(1.0F);
      player0.setZ((-253.08157F));
      player0.getIP();
      player0.getTimeOfDeath();
      player0.getX();
      player0.setConnected(true);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("=E[");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      dataOutputStream0.writeChars("yd{d>9!7+3s\u0003N");
      player0.pack(dataOutputStream0);
      player0.setConnected(true);
      assertEquals(0.1F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0, "", 0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player((-4553), "", "", 4919);
      int int0 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, int0);
      assertEquals(4919, player0.getPictureId());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player((-1845), "", "i+", 421, 0);
      int int0 = player0.getStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("", player0.getIP());
      assertEquals(421, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0, int0);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-80);
      byteArray0[3] = (byte)55;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte)55;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "module.ModuleBrowserDialog$ModuleFilter");
      byteArray0[5] = (byte) (-7);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player(2, "module.ModuleBrowserDialog$ModuleFilter", "6+<-n!#sbi?!$XKGN", (byte) (-80));
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NZxw.WlMC");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NZxw.WlMC");
      System.setCurrentTimeMillis((-472L));
      System.setCurrentTimeMillis((-472L));
      Player player1 = new Player(333, "NZxw.WlMC", "module.ModuleBrowserDialog$ModuleFilter", 1, (-1));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-80), player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals((-1), player1.getStrength());
      assertFalse(boolean0);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player();
      float float0 = player0.getMoney();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getPictureId());
      assertEquals(1, player0.getStrength());
      assertEquals("Player-1", player0.getName());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte) (-100);
      byteArray0[3] = (byte) (-42);
      Player player0 = new Player((byte)0, "mWDG4?nP.", "7n,+zx:D%X_", (-889), 862);
      player0.id = (int) (byte) (-42);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream1 = new DataInputStream((InputStream) null);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player((-503), "", "", (-503));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("4o,K@R_+");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      player0.pack(dataOutputStream0);
      byte[] byteArray0 = player0.pack();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.pack();
      System.setCurrentTimeMillis((-1758L));
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(744, "", 3862);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6+<-n!#sbi?!$XKGN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NZxw.WlMC");
      Player player0 = new Player();
      player0.setX((-575.004F));
      System.setCurrentTimeMillis(2138L);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("6+<-n!#sbi?!$XKGN");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(107);
      player0.getPictureId();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead();
      player0.getIP();
      Party party0 = player0.head;
      player0.boss = null;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      player0.getIP();
      player0.isDead();
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-31), "", "", (-1042));
      player0.reset(false);
      Locale locale0 = Locale.GERMANY;
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object[] objectArray0 = new Object[7];
      Object object4 = new Object();
      objectArray0[0] = object4;
      objectArray0[1] = object2;
      objectArray0[2] = object3;
      objectArray0[3] = (Object) locale0;
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) null;
      objectArray0[6] = (Object) "";
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player(0, "0.0.0.0", "", 0, 0);
      float float0 = player0.getX();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(0, player0.getPictureId());
      assertEquals(0, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6+<-n!#sbi?!$XKGN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(1241, "6+<-n!#sbi?!$XKGN", "6+<-n!#sbi?!$XKGN", 1241, 2562);
      LinkedList<Party> linkedList0 = new LinkedList<Party>();
      LinkedList<Party> linkedList1 = new LinkedList<Party>();
      player0.setJoinOK(player0, false);
      assertTrue(player0.isConnected());
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NZxw.WlMC");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      player0.setConnected(false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((-472L));
      System.setCurrentTimeMillis((-472L));
      System.setCurrentTimeMillis(1392409296320L);
      player0.isJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertFalse(player0.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-29439), "", "", 473, 4919);
      Party party0 = player0.head;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)23;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-30);
      player0.unpack(byteArray0);
      player0.remove((Party) null);
      player0.remove((Party) null);
      player0.getSubparty();
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-42);
      byteArray1[1] = (byte) (-42);
      byteArray1[2] = (byte) (-42);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Player player0 = new Player((-201), "jI:>|@^uP#5D5_0", "", (-201));
      player0.setZ(0.0F);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Player player0 = new Player();
      Party party0 = player0.gangBoss();
      player0.add(party0);
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Player player0 = new Player(454, "", "", 454);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      player0.unpack(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-113);
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte) (-21);
      byteArray0[6] = (byte) (-95);
      player0.unpack(byteArray0);
      Party party0 = new Party(1196);
      player0.add(party0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Player player0 = new Player();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream1);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertFalse(player0.isDead());
      assertFalse(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-1", player0.toString());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Player player0 = new Player((-29439), "", "", 473, 4919);
      player0.setDead((long) 473);
      assertEquals(473L, player0.getTimeOfDeath());
      
      Player player1 = new Player(3533, "", 3533);
      player0.setDead(0L, false);
      assertEquals(4919, player0.getStrength());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setDead();
      player0.getIP();
      Party party0 = player0.head;
      player0.boss = null;
      player0.setY(0);
      player0.getSubparty();
      player0.setConnected(false);
      player0.setDead((long) 0);
      player0.setZ(0);
      player0.getIP();
      player0.isDead();
      player0.head = null;
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
  }
}
