/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 02:46:30 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Component;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.DefaultFocusTraversalPolicy;
import java.awt.Font;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.ComponentListener;
import java.awt.font.FontRenderContext;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.renderable.ParameterBlock;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.text.AttributedCharacterIterator;
import java.text.Format;
import java.time.temporal.ChronoField;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiFunction;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.MenuSelectionManager;
import javax.swing.event.AncestorListener;
import javax.swing.event.TableColumnModelEvent;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StringContent;
import javax.swing.text.StyleContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.8742830984023093
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      Boolean.valueOf(true);
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      int int0 = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndex(7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1224858948253797
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = Boolean.TRUE;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate1.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate3 = predicate0.negate();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Boolean boolean1 = new Boolean((boolean) boolean0);
      predicate2.negate();
      predicate0.and(predicate3);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualListModel0.setData(visualPageListItemArray0);
      arrayList0.add(visualPageListItemArray0[1]);
      visualListModel0.getElements();
      arrayList0.add(visualPageListItemArray0[5]);
      int[] intArray0 = new int[5];
      intArray0[0] = (-449);
      intArray0[1] = 4;
      intArray0[2] = 0;
      intArray0[3] = 765;
      intArray0[4] = Integer.MAX_VALUE;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(6, visualListModel0.getSize());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(0, (-1), false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.2046501152537163
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int int0 = 3;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      int[] intArray0 = new int[1];
      intArray0[0] = 2830;
      visualListModel0.reverseElements(intArray0);
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(3);
      visualListModel0.addAllElements(1000, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[3]);
      int int1 = 1807;
      // Undeclared exception!
      try { 
        stack0.insertElementAt(visualPageListItemArray0[2], 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3 > 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.7275737911350801
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "5]gEg``Q[59PW<";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      Font font0 = Font.decode("5]gEg``Q[59PW<");
      Font font1 = Font.getFont("5]gEg``Q[59PW<", font0);
      Locale locale0 = Locale.KOREAN;
      font1.getFontName(locale0);
      Font font2 = Font.getFont("cu?ZdwFCs|>G J", font0);
      font1.getPSName();
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      charArray0[1] = '2';
      charArray0[2] = 'G';
      charArray0[3] = 'c';
      charArray0[4] = ')';
      charArray0[5] = 'w';
      charArray0[6] = 'F';
      charArray0[7] = '#';
      font2.canDisplayUpTo(charArray0, 0, (-2543));
      Font font3 = Font.getFont("5]gEg``Q[59PW<", font2);
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      jComboBox1.getFontMetrics(font3);
      int[] intArray0 = new int[1];
      intArray0[0] = 39;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 39
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      visualListModel0.data = null;
      Integer.divideUnsigned(2260, (-2618));
      Integer integer2 = new Integer((-2225));
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.remainderUnsigned((-2225), 2260);
      Integer.compareUnsigned((-1987), 92);
      linkedHashSet0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.0116585526031003
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "+og4j.defaultInitOverride";
      stringArray0[1] = "+og4j.defaultInitOverride";
      stringArray0[3] = "+og4j.defaultInitOverride";
      stringArray0[4] = "+og4j.defaultInitOverride";
      stringArray0[5] = "+og4j.defaultInitOverride";
      stringArray0[6] = "+og4j.defaultInitOverride";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      Font font0 = Font.decode("+og4j.defaultInitOverride");
      Hashtable<Format.Field, RenderingHints.Key> hashtable0 = new Hashtable<Format.Field, RenderingHints.Key>();
      Font font1 = font0.deriveFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      hashtable0.elements();
      hashtable0.clear();
      Font.getFont("+og4j.defaultInitOverride", font1);
      Font font2 = Font.getFont("+og4j.defaultInitOverride", font1);
      jComboBox0.getFontMetrics(font2);
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[6];
      intArray1[0] = (-812);
      intArray1[1] = 720;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.813782155210461
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Boolean boolean0 = new Boolean(true);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Boolean boolean1 = new Boolean((boolean) boolean0);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate6 = predicate0.and(predicate4);
      Predicate<Object> predicate7 = predicate5.and(predicate6);
      Predicate<ChronoField> predicate8 = Predicate.isEqual((Object) predicate2);
      predicate8.and(predicate3);
      Predicate.isEqual((Object) predicate8);
      predicate7.or(predicate1);
      predicate4.or(predicate2);
      predicate6.test((Object) null);
      predicate4.or(predicate6);
      Object object0 = new Object();
      Predicate.isEqual(object0);
      predicate6.and(predicate3);
      predicate5.and(predicate4);
      Predicate<Object> predicate9 = predicate5.negate();
      predicate9.test(predicate1);
      predicate9.and(predicate7);
      linkedHashSet0.removeIf(predicate9);
      linkedHashSet0.add((VisualPageListItem) null);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      linkedHashSet0.stream();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElements();
      visualListModel0.removeElementAt(0, true);
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      StringContent stringContent0 = new StringContent();
      StyleContext styleContext0 = new StyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(stringContent0, styleContext0);
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle("", styleContext_NamedStyle1);
      Font font0 = defaultStyledDocument0.getFont(styleContext_NamedStyle2);
      jComboBox0.getFontMetrics(font0);
      int[] intArray0 = new int[9];
      intArray0[0] = 39;
      intArray0[1] = 39;
      intArray0[2] = 39;
      intArray0[3] = 39;
      intArray0[4] = 39;
      intArray0[5] = 39;
      intArray0[5] = 39;
      intArray0[7] = 39;
      intArray0[8] = 39;
      visualListModel0.rotateClockwiseElements(intArray0);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key0, styleContext_NamedStyle0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.data = null;
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.undeleteElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndex(1048);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7754337976947765
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int int0 = 1;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[7];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualPageListItemArray0[4] = null;
      visualPageListItemArray0[5] = null;
      visualPageListItemArray0[6] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int int1 = 1807;
      // Undeclared exception!
      try { 
        stack0.insertElementAt(visualPageListItemArray0[2], 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1 > 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.6875493607294607
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = visualPageListItemArray0[0];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(7);
      visualListModel0.getElements();
      int[] intArray0 = new int[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveDownIndex((-865));
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JTable jTable0 = new JTable();
      DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel();
      TableColumnModelEvent tableColumnModelEvent0 = new TableColumnModelEvent(defaultTableColumnModel0, (-2465), (-865));
      jTable0.columnMoved(tableColumnModelEvent0);
      jTable0.getCursor();
      visualListModel0.removeListDataListener(jComboBox0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[0]);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Integer integer0 = new Integer(7);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.724298670278112
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int int0 = (-2);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8212565066006587
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      linkedHashSet0.add((VisualPageListItem) null);
      integerArray0[0] = integer1;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      visualListModel0.clearData();
      Integer integer3 = new Integer(2266);
      integerArray0[2] = integer3;
      Integer integer4 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("#*hn-u)+H`-*", 2266);
      Integer.sum((-2383), (-891));
      Integer.divideUnsigned(269, (int) integerArray0[0]);
      Integer.toUnsignedLong(114);
      integerArray0[3] = integer4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Boolean boolean0 = new Boolean(false);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      intArray0[0] = (-812);
      Integer integer5 = new Integer((-2));
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -812
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      int[] intArray0 = new int[2];
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.71747278103407
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Font font0 = Font.decode("5]gEg``Q[59PW<");
      Font font1 = Font.getFont("5]gEg``Q[59PW<", font0);
      Font.getFont("Category ", font1);
      AffineTransform affineTransform0 = new AffineTransform(856.5F, 1.0F, 856.5F, 856.5F, (-1462.31F), (-1462.31F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      int[] intArray0 = new int[4];
      intArray0[0] = 9;
      intArray0[1] = 3081;
      intArray0[2] = (-2154);
      intArray0[3] = (-143);
      font1.createGlyphVector(fontRenderContext0, intArray0);
      Font font2 = Font.getFont("cu?ZdwFCs|>G J", font0);
      font1.getPSName();
      Font.getFont("5]gEg``Q[59PW<", font2);
      int[] intArray1 = new int[1];
      intArray1[0] = 39;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.prependAllElements(linkedHashSet0);
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 39
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.4914302833355375
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Font font0 = Font.decode("5]gEg``Q[59PW<");
      Font font1 = Font.getFont("5]gEg``Q[59PW<", font0);
      Font.getFont("Category ", font1);
      AffineTransform affineTransform0 = new AffineTransform(0.0F, 1.0F, 0.0F, 0.0F, (-1462.31F), (-1462.31F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      int[] intArray0 = new int[4];
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 5;
      doubleArray0[1] = (double) 0.0F;
      doubleArray0[2] = (double) 1.0F;
      doubleArray0[3] = (double) 0.0F;
      affineTransform0.transform(doubleArray0, 5, doubleArray0, 1592, (-1));
      intArray0[0] = 5;
      intArray0[1] = 3081;
      intArray0[2] = (-2154);
      intArray0[3] = 5;
      font1.createGlyphVector(fontRenderContext0, intArray0);
      Font font2 = Font.getFont("cu?ZdwFXCs|F >G J", font0);
      font1.getPSName();
      Font.getFont("5]gEg``Q[59PW<", font2);
      int[] intArray1 = new int[1];
      doubleArray0[2] = (double) 39;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray1);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel1.reverseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4914302833355375
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Font font0 = Font.decode("5]gEg``Q[59PW<");
      Font font1 = Font.getFont("5]gEg``Q[59PW<", font0);
      Font.getFont("Category ", font1);
      AffineTransform affineTransform0 = new AffineTransform(856.5F, 1.0F, 856.5F, 856.5F, (-1462.31F), (-1462.31F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      int[] intArray0 = new int[4];
      intArray0[0] = 9;
      intArray0[1] = 3081;
      intArray0[2] = (-2154);
      intArray0[3] = (-143);
      font1.createGlyphVector(fontRenderContext0, intArray0);
      Font font2 = Font.getFont("cu?ZdwFCs|>G J", font0);
      font1.getPSName();
      Font.getFont("5]gEg``Q[59PW<", font2);
      int[] intArray1 = new int[1];
      intArray1[0] = 39;
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray1);
      visualListModel1.moveUpIndexes(intArray1);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel1.reverseElements(intArray1);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 39
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.0018442867649786
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer1;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      visualListModel0.clearData();
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer3;
      Integer.compareUnsigned(5000, (int) integerArray0[0]);
      Integer integer4 = new Integer((int) integerArray0[2]);
      Integer integer5 = Integer.getInteger("#*hn-u)+H`-*", (int) integerArray0[0]);
      Integer.remainderUnsigned((int) integer5, (int) integer5);
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.sum(5000, (-891));
      Integer.max(119, 2373);
      Integer.divideUnsigned((-891), (int) integer5);
      Integer.toUnsignedLong(114);
      integerArray0[3] = integer4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Boolean boolean0 = new Boolean(false);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Integer integer7 = new Integer((int) integer5);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.724298670278112
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>(linkedHashSet0);
      linkedHashSet1.add((VisualPageListItem) null);
      LinkedHashSet<Object> linkedHashSet2 = new LinkedHashSet<Object>();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      linkedHashSet2.add(attributedCharacterIterator_Attribute0);
      LinkedHashSet<VisualPageListItem> linkedHashSet3 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet3.clone();
      linkedHashSet3.add((VisualPageListItem) null);
      linkedHashSet0.removeAll(linkedHashSet1);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet3);
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      intArray0[0] = (-2);
      visualListModel0.getListDataListeners();
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -2
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.3695150246304464
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.getElements();
      int int0 = 119;
      int int1 = 2373;
      Integer.max(2373, 119);
      Integer.divideUnsigned(119, 2373);
      Integer.toUnsignedLong(917);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<VisualPageListItem> arrayList1 = new ArrayList<VisualPageListItem>();
      Boolean boolean1 = new Boolean(true);
      visualListModel0.addElement((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Integer integer0 = new Integer(114);
      int[] intArray0 = new int[4];
      intArray0[0] = 119;
      intArray0[1] = 114;
      intArray0[2] = 2373;
      intArray0[3] = 0;
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(119) > toIndex(1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.001192908978559
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer1;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      visualListModel0.clearData();
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer3;
      Integer.compareUnsigned(5000, (int) integerArray0[0]);
      Integer integer4 = new Integer((int) integerArray0[2]);
      Integer integer5 = Integer.getInteger("#*hn-u)+H`-*", (int) integerArray0[0]);
      Integer.remainderUnsigned((int) integer5, (int) integer5);
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.sum(5000, (-891));
      Integer.max(119, 2373);
      Integer.divideUnsigned((-891), (int) integer5);
      linkedHashSet0.add((VisualPageListItem) null);
      Integer.toUnsignedLong(114);
      integerArray0[3] = integer4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Boolean boolean0 = new Boolean(false);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Integer integer7 = new Integer((int) integer5);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.873029116491111
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = visualPageListItemArray0[0];
      visualListModel0.setData(visualPageListItemArray0);
      Boolean.valueOf(false);
      visualListModel0.getElements();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add(visualPageListItemArray0[0]);
      int[] intArray0 = new int[2];
      intArray0[0] = 127;
      intArray0[1] = 217;
      try { 
        visualListModel0.moveUpIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 126
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.522929008885028
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Font font0 = Font.decode("5]gEg``Q[59PW<");
      Font font1 = Font.getFont("5]gEg``Q[59PW<", font0);
      Font.getFont("Category ", font1);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.reverseElements(intArray0);
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      assertArrayEquals(new int[] {(-2)}, intArray0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3470414431055215
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.setData(visualPageListItemArray0);
      Boolean boolean0 = new Boolean(true);
      visualListModel0.getElements();
      int[] intArray0 = new int[2];
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.427051439120803
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex((-2));
      visualListModel0.getElements();
      int[] intArray0 = new int[2];
      intArray0[0] = (-2);
      intArray0[1] = (-2);
      visualListModel0.moveUpIndexes(intArray0);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[0]);
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(232, (String) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6561856615603068
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.getElements();
      int[] intArray0 = new int[2];
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.elementChanged((VisualPageListItem) null);
      visualListModel0.addElementAt(visualPageListItemArray0[1], (-63));
      visualListModel0.updateElementAt(0, visualPageListItemArray0[1]);
      visualListModel0.updateElementAt(0, visualPageListItemArray0[0]);
      visualListModel0.getSize();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add(visualPageListItemArray0[0]);
      visualListModel0.addAllElements((-812), (Collection<VisualPageListItem>) stack0);
      visualListModel0.getElements();
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1145, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8907965840134402
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      linkedHashSet0.add((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.clearData();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      int int1 = (-3266);
      VisualPageListItem visualPageListItem2 = null;
      try {
        visualPageListItem2 = new VisualPageListItem((-3266));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.724298670278112
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      String[] stringArray0 = new String[0];
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int int0 = (-2);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.8856683788852349
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      VisualPageListItem visualPageListItem0 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      VisualPageListItem visualPageListItem1 = null;
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int int0 = 1;
      visualListModel0.moveUpIndex(1);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.contains((Object) null);
      VisualListModel visualListModel1 = new VisualListModel();
      linkedHashSet0.add((VisualPageListItem) null);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) stack0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.clearData();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      vector0.add((VisualPageListItem) null);
      int int1 = (-3266);
      VisualPageListItem visualPageListItem2 = null;
      try {
        visualPageListItem2 = new VisualPageListItem((-3266));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      String[] stringArray0 = new String[4];
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox3 = new JComboBox<String>(stringArray0);
      String[] stringArray1 = new String[19];
      stringArray0[2] = stringArray0[0];
      stringArray1[2] = "=P/ KR):s_ e";
      stringArray0[3] = stringArray0[1];
      stringArray1[4] = "?";
      stringArray1[5] = "";
      jComboBox0.firePopupMenuWillBecomeInvisible();
      jComboBox0.getGraphicsConfiguration();
      jComboBox0.firePropertyChange((String) null, (byte)1, (byte)0);
      JComboBox<String> jComboBox4 = new JComboBox<String>();
      jComboBox4.add((Component) jComboBox0, (Object) stringArray0[0]);
      jComboBox4.setEditable(false);
      jComboBox4.removeNotify();
      jComboBox4.revalidate();
      jComboBox3.getPropertyChangeListeners("=P/ KR):s_ e");
      JComboBox<String> jComboBox5 = new JComboBox<String>();
      JComboBox<String> jComboBox6 = new JComboBox<String>(stringArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      linkedHashSet0.add((VisualPageListItem) null);
      integerArray0[0] = integer0;
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(2266);
      integerArray0[2] = integer2;
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      integerArray0[3] = integer3;
      linkedHashSet0.toArray(integerArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      boolean boolean0 = new Boolean(false);
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      intArray0[0] = (-812);
      Integer integer4 = new Integer((-2));
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      VisualPageListItem visualPageListItem0 = null;
      try {
        visualPageListItem0 = new VisualPageListItem(1325, "/", "org.apache.log4j.Category");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute> hashMap1 = new HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute>();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute1 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      int int0 = 5871;
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 5871);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      int int0 = 1;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      PriorityQueue<AttributedCharacterIterator.Attribute> priorityQueue0 = new PriorityQueue<AttributedCharacterIterator.Attribute>();
      PriorityQueue<AttributedCharacterIterator.Attribute> priorityQueue1 = new PriorityQueue<AttributedCharacterIterator.Attribute>(priorityQueue0);
      stack0.containsAll(priorityQueue1);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      Stack<VisualPageListItem> stack1 = new Stack<VisualPageListItem>();
      VisualPageListItem visualPageListItem1 = null;
      try {
        visualPageListItem1 = new VisualPageListItem();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input == null!
         //
         verifyException("javax.imageio.ImageIO", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.304960205575741
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      integerArray0[0] = integer1;
      Integer integer2 = JLayeredPane.DRAG_LAYER;
      visualListModel0.clearData();
      Integer integer3 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer3;
      Integer.compareUnsigned(5000, (int) integerArray0[0]);
      Integer integer4 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer5 = Integer.getInteger("#*hn-u)+H`-*", (int) integerArray0[0]);
      Integer.remainderUnsigned((int) integer5, (int) integer5);
      Integer integer6 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Integer.sum(5000, (-891));
      Integer.max(119, 2373);
      Integer.divideUnsigned((-891), (int) integer5);
      Integer.toUnsignedLong(114);
      integerArray0[3] = integer4;
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      Boolean boolean0 = new Boolean(false);
      visualListModel0.addElement((VisualPageListItem) null);
      int[] intArray0 = new int[1];
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      visualListModel0.elementChanged((VisualPageListItem) null);
      Integer integer7 = new Integer((int) integer5);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertTrue(stack0.empty());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.724298670278112
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      String[] stringArray0 = new String[0];
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      int int0 = (-2);
      int[] intArray0 = new int[1];
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.419051208182807
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      Font font0 = Font.decode("+og4j.efaultIniOverride");
      Hashtable<Format.Field, RenderingHints.Key> hashtable0 = new Hashtable<Format.Field, RenderingHints.Key>();
      Font font1 = font0.deriveFont((Map<? extends AttributedCharacterIterator.Attribute, ?>) hashtable0);
      hashtable0.elements();
      font0.getPSName();
      hashtable0.clear();
      Font font2 = Font.getFont("+og4j.efaultIniOverride", font1);
      char[] charArray0 = new char[7];
      charArray0[0] = '0';
      charArray0[1] = 'T';
      charArray0[2] = '.';
      charArray0[3] = '*';
      charArray0[4] = ']';
      charArray0[5] = '!';
      charArray0[6] = 'V';
      AffineTransform affineTransform0 = new AffineTransform((float) (-2154), 2.0F, (float) (-222), 2.0F, (float) (-222), (-1201.0F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      font1.getLineMetrics(charArray0, (-222), (-2154), fontRenderContext0);
      AffineTransform affineTransform1 = AffineTransform.getTranslateInstance((-849), (-1.8785248935316485));
      FontRenderContext fontRenderContext1 = new FontRenderContext(affineTransform1, false, true);
      font1.createGlyphVector(fontRenderContext1, ").'AJ>o/b");
      font2.getFamily();
      font0.deriveFont(affineTransform1);
      Font.getFont("+og4j.efaultIniOverride", font1);
      int[] intArray0 = new int[2];
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[6];
      intArray1[0] = (-849);
      intArray1[1] = (-441);
      intArray1[3] = (-849);
      intArray1[4] = (-849);
      intArray1[5] = (-849);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.173383596772373
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      Font font0 = Font.decode("5]gEg``Q[59PW<");
      Font font1 = Font.getFont("5]gEg``Q[59PW<", font0);
      Font.getFont("Category ", font1);
      AffineTransform affineTransform0 = new AffineTransform(856.5F, 1.0F, 856.5F, 856.5F, (-1462.31F), (-1462.31F));
      FontRenderContext fontRenderContext0 = new FontRenderContext(affineTransform0, true, false);
      int[] intArray0 = new int[4];
      intArray0[0] = 9;
      font1.createGlyphVector(fontRenderContext0, intArray0);
      Font.getFont("cu?ZdwFCs|>G J", font1);
      font1.getBaselineFor('o');
      font0.getPSName();
      Font.getFont("cu?ZdwFCs|>G J", font0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 39;
      try { 
        visualListModel0.reverseElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 39
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String string0 = "d~RH]\\uw>+";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "mB1]?J5B");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      vector0.setSize(4627);
      visualListModel0.prependAllElements(vector0);
      assertEquals(4627, visualListModel0.getSize());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      int int0 = 50000;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.pdfsam.guiclient.commons.models.VisualListModel";
      stringArray0[1] = "Z !dyu^@";
      stringArray0[2] = "k";
      stringArray0[3] = "";
      stringArray0[4] = "org.pdfsam.guiclient.commons.models.VisualListModel";
      stringArray0[5] = " set to ";
      stringArray0[6] = "";
      stringArray0[7] = "-pI^0";
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      visualListModel0.removeListDataListener(jComboBox0);
      String string0 = "";
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6066699893655365
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = Boolean.TRUE;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<Object> predicate4 = predicate0.negate();
      Predicate<Object> predicate5 = predicate1.negate();
      Predicate<Object> predicate6 = predicate3.or(predicate5);
      predicate3.or(predicate6);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Boolean boolean1 = new Boolean((boolean) boolean0);
      predicate2.negate();
      Predicate<Object> predicate7 = predicate0.and(predicate4);
      Predicate<Object> predicate8 = predicate1.negate();
      Predicate<ChronoField> predicate9 = Predicate.isEqual((Object) predicate2);
      ChronoField chronoField0 = ChronoField.ERA;
      Predicate<Object> predicate10 = predicate8.or(predicate2);
      predicate9.test(chronoField0);
      Integer.toUnsignedString(14);
      Predicate.isEqual((Object) predicate9);
      Predicate<Object> predicate11 = predicate8.or(predicate1);
      Predicate<Object> predicate12 = predicate4.or(predicate2);
      predicate10.negate();
      Predicate<Object> predicate13 = predicate7.negate();
      predicate13.and(predicate3);
      Predicate<Object> predicate14 = predicate10.negate();
      predicate4.negate();
      predicate4.test(predicate11);
      predicate14.negate();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.removeIf(predicate12);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.getElements();
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Boolean boolean0 = Boolean.valueOf(true);
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate1.negate();
      Predicate<Object> predicate4 = predicate0.negate();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Boolean boolean1 = new Boolean((boolean) boolean0);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate6 = predicate0.and(predicate4);
      Predicate<Object> predicate7 = predicate5.and(predicate6);
      Predicate<ChronoField> predicate8 = Predicate.isEqual((Object) predicate2);
      Predicate.isEqual((Object) predicate8);
      predicate7.or(predicate1);
      predicate4.or(predicate2);
      predicate6.test((Object) null);
      predicate4.or(predicate6);
      Object object0 = new Object();
      Predicate.isEqual(object0);
      predicate6.and(predicate3);
      predicate5.and(predicate4);
      Predicate<Object> predicate9 = predicate5.negate();
      predicate9.test(predicate1);
      Hashtable<Format.Field, RenderingHints.Key> hashtable0 = new Hashtable<Format.Field, RenderingHints.Key>();
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      hashtable0.put(format_Field0, sunHints_Key0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[2];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualListModel1.setData(visualPageListItemArray0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.clone();
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      visualListModel1.setData(vector1);
      assertNotSame(vector1, vector0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Boolean boolean0 = Boolean.TRUE;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.and(predicate0);
      Predicate<Object> predicate2 = predicate1.negate();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Predicate<ChronoField> predicate3 = Predicate.isEqual((Object) predicate1);
      Predicate<Object> predicate4 = predicate0.negate();
      Boolean boolean1 = new Boolean((boolean) boolean0);
      Predicate<Object> predicate5 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate6 = predicate0.and(predicate4);
      Predicate<ChronoField> predicate7 = predicate3.negate();
      ChronoField chronoField0 = ChronoField.MILLI_OF_SECOND;
      predicate6.test(predicate0);
      Predicate.isEqual((Object) predicate7);
      predicate6.or(predicate2);
      predicate7.test(chronoField0);
      Integer.toUnsignedString(125);
      Predicate.isEqual((Object) predicate7);
      Predicate<Object> predicate8 = predicate5.negate();
      Predicate<Object> predicate9 = predicate8.negate();
      Predicate<Object> predicate10 = predicate5.and(predicate0);
      Boolean boolean2 = new Boolean((String) null);
      boolean boolean3 = new Boolean((String) null);
      predicate9.or(predicate0);
      Integer integer1 = JLayeredPane.DRAG_LAYER;
      Predicate.isEqual((Object) integer1);
      Predicate<Object> predicate11 = predicate1.and(predicate2);
      Predicate<Object> predicate12 = predicate11.and(predicate4);
      predicate10.and(predicate12);
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      Object object0 = hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      hashMap0.replaceAll(biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Byte byte0 = new Byte((byte) (-104));
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      hashtable0.put((RenderingHints.Key) object0, pdfGraphics2D_HyperLinkKey2);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashtable0.put(pdfGraphics2D_HyperLinkKey3, byte0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      assertEquals(400, (int)integer0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      Object object0 = hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey2, pdfGraphics2D_HyperLinkKey1);
      Byte byte0 = new Byte((byte) (-104));
      hashtable0.put((RenderingHints.Key) object0, pdfGraphics2D_HyperLinkKey2);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      hashtable1.put(pdfGraphics2D_HyperLinkKey1, pdfGraphics2D_HyperLinkKey0);
      hashtable1.put(pdfGraphics2D_HyperLinkKey2, sunHints_Key1);
      hashtable1.put(pdfGraphics2D_HyperLinkKey3, byte0);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((byte) (-104));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, false);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      int int0 = (-126);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-126));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.subList((-5), (-5), true);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      Object object0 = hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey2, pdfGraphics2D_HyperLinkKey1);
      Byte byte0 = new Byte((byte) (-104));
      hashtable0.put((RenderingHints.Key) object0, pdfGraphics2D_HyperLinkKey2);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      hashtable1.put(pdfGraphics2D_HyperLinkKey1, pdfGraphics2D_HyperLinkKey0);
      hashtable1.put(pdfGraphics2D_HyperLinkKey2, sunHints_Key1);
      Object object1 = hashtable1.put(pdfGraphics2D_HyperLinkKey3, byte0);
      assertFalse(object1.equals((Object)sunHints_Key0));
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RenderingHints renderingHints1 = new RenderingHints(hashMap0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Hashtable<RenderingHints.Key, VisualPageListItem> hashtable1 = new Hashtable<RenderingHints.Key, VisualPageListItem>();
      RenderingHints renderingHints2 = new RenderingHints(hashtable0);
      assertEquals(0, renderingHints2.size());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-36);
      visualListModel0.moveDownIndex((-36));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int1 = (-810);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-810));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[8];
      doubleArray0[1] = 1.812676387886652;
      doubleArray0[7] = 1.812676387886652;
      doubleArray0[2] = 0.0;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.clone();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 0.0F, 1.812676387886652, 0.0);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createUnion(rectangle2D_Float0);
      rectangle2D_Double1.contains((Rectangle2D) rectangle2D_Double0);
      rectangle2D_Double1.add((Rectangle2D) rectangle2D_Float0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      rectangle2D_Double1.height = (double) 0.0F;
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)rectangle2D_Float0.createIntersection(rectangle2D_Double1);
      rectangle2D_Float0.intersects((Rectangle2D) rectangle2D_Double2);
      rectangle2D_Float0.add((-770.0), 0.0);
      AffineTransform affineTransform0 = new AffineTransform(0.0, 1.812676387886652, 0.0F, 1.812676387886652, 0.0F, (-3524.34767408));
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(1240);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.moveDownIndex(0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Byte byte0 = new Byte((byte) (-51));
      int int1 = (-810);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-810));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-1);
      visualListModel0.removeElements((-1), (-1), false);
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      int[] intArray0 = new int[5];
      intArray0[4] = (-245);
      intArray0[1] = 49991;
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      PipedInputStream pipedInputStream0 = new PipedInputStream(49991);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.appendAllElements(vector0);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      assertEquals(0, vector1.size());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.subList(1615, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1615) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = "d~Rm4H]\\uw>+";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$q");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'3L @?DZ2");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'3L @?DZ2");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Kc_0$wEFi;%Mrsv0@ep");
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        visualListModel0.subList(2, (-1), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0, false);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Object object0 = new Object();
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashtable0.put(pdfGraphics2D_HyperLinkKey1, pdfGraphics2D_HyperLinkKey1);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey2, pdfGraphics2D_HyperLinkKey1);
      // Undeclared exception!
      try { 
        hashtable0.put((RenderingHints.Key) null, pdfGraphics2D_HyperLinkKey2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        visualListModel0.getListeners((Class) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[8];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      doubleArray0[1] = (-1800.499278432178);
      doubleArray0[7] = (-1800.499278432178);
      doubleArray0[2] = 0.0;
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      rectangle2D_Float0.clone();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 0.0F, (-1800.499278432178), 0.0);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Double0.createUnion(rectangle2D_Float0);
      rectangle2D_Double1.contains((Rectangle2D) rectangle2D_Double0);
      rectangle2D_Double1.add((Rectangle2D) rectangle2D_Float0);
      rectangle2D_Double1.height = (double) 0.0F;
      Rectangle2D.Double rectangle2D_Double2 = (Rectangle2D.Double)rectangle2D_Float0.createIntersection(rectangle2D_Double1);
      JInternalFrame jInternalFrame0 = new JInternalFrame("", false, true, false, false);
      Rectangle rectangle0 = jInternalFrame0.getNormalBounds();
      rectangle0.x = 116;
      Rectangle2D.intersect(rectangle2D_Double1, rectangle0, rectangle2D_Double2);
      rectangle2D_Float0.intersects((Rectangle2D) rectangle2D_Double2);
      rectangle2D_Float0.add((-770.0), 0.0);
      AffineTransform affineTransform0 = new AffineTransform(0.0, (-1800.499278432178), 0.0F, (-1800.499278432178), 0.0F, (-3524.34767408));
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.removeElements(intArray0, false);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = "d~RH]\\uw>+";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-930), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -930
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "guzp:Q|Aa%'");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "guzp:Q|Aa%'");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "guzp:Q|Aa%'");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "guzp:Q|Aa%'");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.jhoodies.looks.plastic.PlasticFileChooserUI$SystemIconFileView");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte) (-49);
      byteArray0[3] = (byte) (-89);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_g^#*mS<4{2]a{a5syl");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_g^#*mS<4{2]a{a5syl");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_g^#*mS<4{2]a{a5syl");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((byte) (-89), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      jComboBox1.getMinimumSize();
      defaultFocusTraversalPolicy0.setImplicitDownCycleTraversal(false);
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy1 = new DefaultFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy2 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy2.getLastComponent(jComboBox1);
      defaultFocusTraversalPolicy0.getDefaultComponent(jComboBox0);
      defaultFocusTraversalPolicy0.setImplicitDownCycleTraversal(false);
      containerOrderFocusTraversalPolicy0.getDefaultComponent(jComboBox0);
      defaultFocusTraversalPolicy2.getDefaultComponent(jComboBox1);
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy3 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy3.setImplicitDownCycleTraversal(false);
      jComboBox1.setFocusTraversalPolicy(defaultFocusTraversalPolicy1);
      Stack<String> stack0 = new Stack<String>();
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.subList(9, 9, true);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      Object object0 = hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      Object object1 = hashMap0.put(pdfGraphics2D_HyperLinkKey0, biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Object object2 = new Object();
      Byte byte0 = new Byte((byte) (-104));
      hashtable0.put((RenderingHints.Key) object0, object1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      Object object3 = hashtable1.put(pdfGraphics2D_HyperLinkKey2, byte0);
      assertNull(object3);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(5, 0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(5) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.subList(0, 0, true);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      Object object0 = hashMap0.put(pdfGraphics2D_HyperLinkKey0, pdfGraphics2D_HyperLinkKey0);
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, biFunction0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey1 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey2 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Byte byte0 = new Byte((byte) (-104));
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      hashtable0.put((RenderingHints.Key) object0, pdfGraphics2D_HyperLinkKey2);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey3 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Hashtable<RenderingHints.Key, Object> hashtable1 = new Hashtable<RenderingHints.Key, Object>();
      Object object1 = hashtable1.put(pdfGraphics2D_HyperLinkKey3, byte0);
      assertNull(object1);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = "d~RH]\\uw>+";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0C}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=XM5;$%geSs}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(255, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":(7TR$f:&l.BTZ%d");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u/So*x'`0*kWIWLt <");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      PipedInputStream pipedInputStream0 = new PipedInputStream(6);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 6);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(586, 8, true);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute1 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute2 = AttributedCharacterIterator.Attribute.READING;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute3 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute4 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute5 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute6 = AttributedCharacterIterator.Attribute.LANGUAGE;
      assertFalse(attributedCharacterIterator_Attribute6.equals((Object)attributedCharacterIterator_Attribute3));
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      String[] stringArray0 = new String[16];
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy0.getDefaultComponent(jComboBox1);
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy1 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy1.getDefaultComponent(jComboBox1);
      defaultFocusTraversalPolicy0.getDefaultComponent(jComboBox0);
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy2 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy1.setImplicitDownCycleTraversal(false);
      jComboBox0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      jComboBox0.removeAncestorListener(ancestorListener0);
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray0);
      jComboBox2.firePropertyChange((String) null, (-1), 360);
      JComboBox<String> jComboBox3 = new JComboBox<String>(stringArray0);
      Stack<String> stack0 = new Stack<String>();
      JComboBox<String> jComboBox4 = new JComboBox<String>();
      jComboBox4.isPaintingTile();
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-1), false);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute1 = AttributedCharacterIterator.Attribute.LANGUAGE;
      HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute2 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute3 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute4 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute5 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      Hashtable<RenderingHints.Key, Object> hashtable0 = new Hashtable<RenderingHints.Key, Object>();
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute6 = AttributedCharacterIterator.Attribute.LANGUAGE;
      assertSame(attributedCharacterIterator_Attribute6, attributedCharacterIterator_Attribute4);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[8];
      doubleArray0[7] = 1071.3622803525739;
      AffineTransform affineTransform0 = new AffineTransform(doubleArray0);
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(0.0F, 0.0F, 1.812676387886652, 0.0);
      Rectangle2D rectangle2D0 = rectangle2D_Double0.createUnion(rectangle2D_Float0);
      Rectangle2D.intersect(rectangle2D_Double0, rectangle2D0, rectangle2D_Double0);
      rectangle2D_Float0.setFrame((Rectangle2D) rectangle2D_Double0);
      rectangle2D_Double0.setRect((double) 1.8126764F, (-543.5990867187131), 1.812676387886652, (-9.555956919520565));
      rectangle2D_Float0.intersects((Rectangle2D) rectangle2D_Double0);
      rectangle2D0.contains((Rectangle2D) rectangle2D_Double0);
      affineTransform0.rotate(1.812676387886652);
      Rectangle2D.Double rectangle2D_Double1 = (Rectangle2D.Double)rectangle2D_Float0.createIntersection(rectangle2D0);
      rectangle2D_Double0.setRect((Rectangle2D) rectangle2D_Float0);
      rectangle2D0.setRect((Rectangle2D) rectangle2D_Float0);
      rectangle2D_Double1.add(1325.637427, 0.0);
      rectangle2D_Double1.height = (double) 0.0F;
      rectangle2D_Float0.intersects((Rectangle2D) rectangle2D_Double1);
      affineTransform0.getMatrix(doubleArray0);
      rectangle2D_Float0.add((-770.0), 0.0);
      AffineTransform affineTransform1 = new AffineTransform(0.0, 1.812676387886652, 0.0F, 1.812676387886652, 0.0F, 1325.637427);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateClockwiseElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "5]gEg``Q[59PW<";
      stringArray0[1] = "+og4j.defaultInitOverride";
      stringArray0[2] = "cu?ZdwFCs|>G J";
      stringArray0[3] = "+og4j.defaultInitOverride";
      stringArray0[4] = "5]gEg``Q[59PW<";
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(stringArray0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      defaultComboBoxModel0.getElementAt((-3129));
      jComboBox0.repaint((-3129), (-3129), (-3129), 267);
      jComboBox0.getPropertyChangeListeners("5]gEg``Q[59PW<");
      JComboBox<String> jComboBox1 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox2 = new JComboBox<String>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      visualListModel0.getElementAt(267);
      System.setCurrentTimeMillis(1);
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndexes(intArray0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute1 = AttributedCharacterIterator.Attribute.LANGUAGE;
      HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute> hashMap0 = new HashMap<RenderingHints.Key, AttributedCharacterIterator.Attribute>();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[1];
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute2 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute3 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute4 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute5 = AttributedCharacterIterator.Attribute.LANGUAGE;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute6 = AttributedCharacterIterator.Attribute.INPUT_METHOD_SEGMENT;
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute7 = AttributedCharacterIterator.Attribute.LANGUAGE;
      assertFalse(attributedCharacterIterator_Attribute7.equals((Object)attributedCharacterIterator_Attribute6));
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.reverseElements(intArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Byte byte0 = new Byte((byte)46);
      PipedInputStream pipedInputStream1 = new PipedInputStream((byte)46);
      PipedInputStream pipedInputStream2 = new PipedInputStream((byte)46);
      try { 
        pipedInputStream2.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      String string0 = "d~RH]\\uw>+";
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'3L @?DZ2");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, string0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.addAllElements(32, (Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = "d~RH]\\uw>+";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "**Fk<xx}w");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, string0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.jgoodies.looks.plastic.PlasticFileChooserUI$SystemIconFileView");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0}");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":(7TR$f:&l.BTZ%d");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u/So*x'`0*kWIWLt <");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "**Fk<xx}w");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.prependAllElements(vector0);
      assertTrue(vector0.isEmpty());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      JComboBox<String> jComboBox0 = new JComboBox<String>();
      JComboBox<String> jComboBox1 = new JComboBox<String>();
      jComboBox0.getFocusTraversalKeys(1);
      String[] stringArray0 = new String[4];
      JComboBox<String> jComboBox2 = new JComboBox<String>(stringArray0);
      JComboBox<String> jComboBox3 = new JComboBox<String>(stringArray0);
      String[] stringArray1 = new String[19];
      stringArray0[3] = stringArray0[1];
      stringArray1[4] = "=P/ KR):s_ e";
      stringArray1[5] = "";
      jComboBox0.firePopupMenuWillBecomeInvisible();
      jComboBox0.getGraphicsConfiguration();
      jComboBox0.firePropertyChange((String) null, (byte)1, (byte)0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      jComboBox3.configureEditor(metalComboBoxEditor0, (Object) null);
      JComboBox<String> jComboBox4 = new JComboBox<String>();
      jComboBox4.setToolTipText("DE6O\"5\"}C>E-/=");
      jComboBox3.enableInputMethods(true);
      jComboBox4.add((Component) jComboBox0, (Object) stringArray0[0]);
      jComboBox4.setEditable(false);
      jComboBox4.removeNotify();
      jComboBox4.revalidate();
      jComboBox3.getPropertyChangeListeners("=P/ KR):s_ e");
      JComboBox<String> jComboBox5 = new JComboBox<String>();
      JComboBox<String> jComboBox6 = new JComboBox<String>(stringArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = visualListModel0.getSize();
      assertEquals(0, int0);
  }
}
