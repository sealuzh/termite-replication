/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 18:36:32 GMT 2020
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9146224676606434
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2620), "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "org.apache.commons.io.filefilter.NotFileFilter";
      stringArray0[1] = "ConstantValue";
      stringArray0[2] = "org.apache.commons.io.filefilter.NotFileFilter";
      stringArray0[3] = "Signature";
      stringArray0[4] = "org.apache.commons.io.filefilter.NotFileFilter";
      stringArray0[5] = "Signature";
      stringArray0[6] = "Signature";
      stringArray0[7] = "Signature";
      classWriter0.visit(49, 658, "ConstantValue", "U7K3jTRe", "Signature", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(191, byteArray0.length);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2620), "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2620), "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65029);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "61tLh+9Z\"%v", "61tLh+9Z\"%v", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 4096;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation("S!nsitive", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "61tLh+9Z\"%v", "61tLh+9Z\"%v", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-2620);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.7902679680745903
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2620), "oFL]gd|Nr  rlg", "oFL]gd|Nr  rlg", "oFL]gd|Nr  rlg", "oFL]gd|Nr  rlg");
      Attribute attribute0 = new Attribute("oFL]gd|Nr  rlg");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 251, "", "Class not found", (String) null, sequenceInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2671);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(dataInputStream0, mockFileInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2620), "", "", "", sequenceInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.SequenceInputStream@7e2be4cd
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24117248);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 32735;
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "", "-", "", "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5940241655824705
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1993), "61tLh+9Z\"%v", "61tLh+9Z\"%v", "mVUPVk&HDL_~?", "mVUPVk&HDL_~?");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-193));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1445), "V7-sF", "Deprecated", "V7-sF", "V7-sF");
      fieldWriter0.visitAnnotation("Deprecated", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.6128694524619496
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((byte)2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1993), "61tLh+9Z\"%v", "61tLh+9Z\"%v", "mVUPVk&HDL_~?", "mVUPVk&HDL_~?");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("61tLh+9Z\"%v", true);
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.4659992569610426
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65029);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "61tLh+9Z\"%v", "61tLh+9Z\"%v", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-193));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1445), "V7-sF", "Deprecated", "V7-sF", "V7-sF");
      fieldWriter0.visitAnnotation(",Z@AH&s&j)-70,", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9146224676606434
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2620), "|6'u{OCX^o.", "|6'u{OCX^o.", "|6'u{OCX^o.", "|6'u{OCX^o.");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Q3$/7";
      stringArray0[1] = "";
      stringArray0[2] = "Si.cte";
      stringArray0[3] = "|6'u{OCX^o.";
      stringArray0[4] = ")V";
      classWriter0.visit((-1879), 37, "", "<fr", "", stringArray0);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(177, byteArray0.length);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.6108643020548935
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2683));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "61tLh+9Z\"%v", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.8239592165010823
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-193));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1445), "V7-sF", "Deprecated", "V7-sF", "V7-sF");
      fieldWriter0.visitAnnotation("Deprecated", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2620));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2620), "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter", "org.apache.commons.io.filefilter.NotFileFilter");
      FieldVisitor fieldVisitor0 = classWriter0.visitField(49, "ConstantValue", "ConstantValue", "org.apache.commons.io.filefilter.NotFileFilter", "ConstantValue");
      assertNotSame(fieldVisitor0, fieldWriter0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "rsmiuh:A_", "LO", (String) null, "rsmiuh:A_");
      fieldWriter0.visitEnd();
  }
}
