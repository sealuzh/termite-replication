/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 09:38:02 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-927), "[^Mye/]m&mWJ*XG", "", 461, 1028);
      player0.gangStrength();
      Player player1 = new Player((-3180));
      player0.setX((-3180));
      Party party0 = player1.gangBoss();
      player1.remove(player0);
      player0.add(party0);
      player0.getX();
      assertEquals((-3180.0F), player0.getX(), 0.01F);
      
      Player player2 = new Player();
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(1, "Z]Z%u<3F_b8]l{2{|", "", (-1));
      player0.getX();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Xs!}jG");
      Player player1 = new Player(2180, "", 1);
      player0.setZ((-1.0F));
      player0.isJoinOK(player1, true);
      player0.getZ();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals((-1.0F), player0.getZ(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-2695), "Y#nvY", 5);
      player0.setY((-676.1247F));
      player0.pack();
      float float0 = player0.getY();
      assertEquals((-676.1247F), float0, 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = Packable.ACTION;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/:cs]Zv1$w;C)mA/!0[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Player player0 = new Player();
      player0.getY();
      MockFile mockFile0 = new MockFile(".*[.]class$");
      player0.setDead();
      player0.setConnected(false);
      player0.gangStrength();
      player0.reset(false);
      player0.pack();
      assertEquals(0L, player0.getTimeOfDeath());
      
      player0.setDead((long) 1, false);
      System.setCurrentTimeMillis((-240L));
      player0.getStrength();
      boolean boolean0 = player0.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.3109255099880244
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(1.0F);
      player0.setDead(0L, true);
      player0.setZ((-1.0F));
      player0.getStrength();
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, true);
      player0.getMoney();
      player1.reset(true);
      Player player2 = new Player(1, (String) null, (short)4919);
      player0.isJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.skip(0L);
      player2.setDead();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      byte[] byteArray0 = new byte[5];
      player0.unpack(byteArray0);
      player0.reset(false);
      // Undeclared exception!
      try { 
        player2.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player();
      player0.setY((short)4919);
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, true);
      player0.getMoney();
      player0.getY();
      assertEquals(4919.0F, player0.getY(), 0.01F);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player2 = new Player((short)4919, "Y#nvY", (short)4919);
      player2.pack();
      boolean boolean0 = player2.isJoinOK(player1, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3256513002840737
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(0L, true);
      player0.getStrength();
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, true);
      player0.getMoney();
      player0.getY();
      player1.reset(true);
      Player player2 = new Player(1, (String) null, (short)4919);
      player0.isJoinOK(player1, true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      player2.setDead();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      player2.setConnected(true);
      player1.gangStrength();
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(pushbackInputStream0, 776);
      Player player3 = new Player(257, (String) null, (String) null, (short)4919, (short)4919);
      player3.add(player0.boss);
      player3.remove(player1);
      Player player4 = new Player(1, ">[]2Ee]NAPQPZ(2%j", 539);
      player3.isJoinOK(player4, true);
      player3.toString();
      player2.type();
      assertEquals(1392409281320L, player2.getTimeOfDeath());
      
      boolean boolean0 = player0.isJoinOK(player3, true);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(":cs]Zv1$w;C)mA/!/[V9q&Vg[Hu^3eg4?T1[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Player player0 = new Player((-12), "\u0004m", "\u0004m", (-188));
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Player player0 = new Player();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      float float0 = Player.MOVE_DISTANCE;
      player1.getY();
      player0.reset(false);
      File file0 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "dSdle");
      MockFile mockFile0 = new MockFile(":cs]Zv1$w;C)mA/!");
      MockFile mockFile1 = new MockFile("f(!zswr61_&(S8x", "");
      MockFile mockFile2 = new MockFile(file0, "dSdle");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      mockFile1.setWritable(true);
      mockFile0.toURL();
      mockFile1.deleteOnExit();
      mockFileOutputStream0.getChannel();
      mockFile0.setWritable(false, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Player player0 = new Player();
      byte[] byteArray0 = new byte[1];
      player0.setDead((-2223L), true);
      byteArray0[0] = (byte) (-109);
      player0.unpack(byteArray0);
      player0.pack();
      player0.getTimeOfDeath();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        pipedOutputStream0.write((int) (byte) (-109));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(5, "", "", 5);
      player0.toString();
      long long0 = 1865L;
      player0.getSubparty();
      System.setCurrentTimeMillis(1865L);
      Party party0 = new Party();
      player0.boss = party0;
      party0.id = 863;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(14153, "", "", 14153);
      player0.boss = null;
      player0.toString();
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(14153, player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-2695), "Y#nvY", 5);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      
      Player player1 = new Player((short)4919, (String) null, "eV", 5, (-2695));
      String string0 = player1.getIP();
      assertNull(string0);
      assertTrue(player1.isConnected());
      assertEquals(5, player1.getPictureId());
      assertEquals((-2695), player1.getStrength());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = Packable.TEXT_MESSAGE;
      Player player0 = new Player();
      player0.pack();
      Party party0 = player0.next;
      Party party1 = new Party(11709);
      player0.getSubparty();
      player0.getZ();
      player0.getIP();
      player0.setDead();
      Player player1 = new Player();
      player1.getX();
      long long0 = player0.getTimeOfDeath();
      assertEquals(1392409281320L, long0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(2252, "", "1Gd!VdkUh}TP>6i", 2576, 0);
      player0.setY(1744.0052F);
      player0.gangStrength();
      player0.gangStrength();
      player0.getX();
      player0.getIP();
      System.setCurrentTimeMillis((-3347L));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player((-3167), "^U}W0@Bg8", "sf=@$ca6/$rMd1Vij^", (-3167), (-3167));
      byte[] byteArray0 = player0.pack();
      player0.setDead((long) (-3167), false);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player0.unpack(dataInputStream0);
      // Undeclared exception!
      try { 
        pushbackInputStream0.read(byteArray0, 31488, (int) (short)4919);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player(1, "Player.pack(): u** ERROR *** [IO] pack failed! current state is inconsistent: ", 5);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(1, "module.ModuleBrowserDialog$ModuleFilter", "\"bK", 1, (-2221));
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(1, player0.getPictureId());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-2221), player0.getStrength());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(5);
      String string0 = player0.getName();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals("Player5", string0);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player((-28230), "", "Player.pack(): *** ERROR *** [IO] pack failed! current state is inconsistent: ", (-28230), (-28230));
      int int0 = player0.getStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-28230), int0);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-28230), player0.getPictureId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = null;
      int int0 = (-2175);
      Player player0 = new Player(1535, (String) null, (-2175));
      player0.setMoney((-2185.164F));
      player0.getStrength();
      player0.setJoinOK(player0, false);
      player0.getMoney();
      player0.getY();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)80;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)80;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-256), (byte)80);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, (byte)80);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.32347774368661
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(0L, true);
      player0.getStrength();
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, true);
      player0.getMoney();
      player0.getY();
      player1.reset(true);
      Player player2 = new Player(1, (String) null, (short)4919);
      player0.isJoinOK(player1, true);
      player2.setDead();
      player1.setDead();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      Player player3 = new Player((-2085), (String) null, (short)4919);
      player3.unpack(byteArray0);
      player1.pack();
      player2.isDead();
      Player player4 = new Player();
      player2.reset(true);
      player4.pack();
      player0.setDead((long) (short)4919, false);
      assertTrue(player0.isDead());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2242578247365654
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player();
      int int0 = Packable.GAME_STATE;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("[V9q&Vg[Hu^3eg4?T/[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "0.0.0.0");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("[V9q&Vg[Hu^3eg4?T/[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/tmp/:cs]Zv1$w;C)mA/!0[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      player0.setJoinOK(player0, true);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      File file0 = MockFile.createTempFile(":cs]Zv1$w;C)mA/!", "[V9q&Vg[Hu^3eg4?T");
      MockFile mockFile0 = new MockFile(":cs]Zv1$w;C)mA/!");
      file0.getCanonicalPath();
      File file1 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T", (File) mockFile0);
      FileSystemHandling.setPermissions(evoSuiteFile2, true, true, true);
      file0.deleteOnExit();
      byte[] byteArray0 = new byte[13];
      mockFile0.setReadOnly();
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      mockFile0.getAbsoluteFile();
      FileSystemHandling.createFolder(evoSuiteFile2);
      FileSystemHandling.appendLineToFile(evoSuiteFile2, "0.0.0.0");
      file0.setWritable(true, true);
      file0.toPath();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      mockFile0.toURL();
      file1.deleteOnExit();
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertFalse(boolean0);
      
      float float1 = player0.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      boolean boolean1 = player1.isJoinOK(player0, true);
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals("Player-1", player1.toString());
      assertEquals(0, player1.getPictureId());
      assertFalse(player1.isDead());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-2173), "Y-#:nvY", "f[Io", (-2173), (-2173));
      MockFile mockFile0 = new MockFile("f[Io");
      File file0 = MockFile.createTempFile("Y-#:nvY", "f[Io", (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      mockFile0.setWritable(false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte)55;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte) (-28);
      dataOutputStream0.write(byteArray0);
      dataOutputStream0.writeChar((-2173));
      player0.pack(dataOutputStream0);
      assertEquals((-2173), player0.getStrength());
      assertEquals((-2173), player0.getPictureId());
      assertEquals("Y-#:nvY", player0.getIP());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.852140740384332
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player(5, "vk*{P", "Player.unpack(): *** WARNING *** [IO] failed to unpack data: ", 5);
      player0.gangStrength();
      player0.setY(1.0F);
      player0.gangStrength();
      player0.setZ(5);
      player0.setY(0.1F);
      Player player1 = (Player)player0.gangBoss();
      player0.remove(player1);
      player0.isDead();
      player0.setMoney(0.1F);
      player0.setMoney((-38.3555F));
      player0.type();
      player1.getStrength();
      int int0 = player0.getPictureId();
      assertEquals((-38.3555F), player0.getMoney(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = Packable.GAME_EVENT;
      File file0 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T");
      file0.delete();
      file0.getCanonicalPath();
      File file1 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T", file0);
      file1.getCanonicalPath();
      file1.toPath();
      MockFile mockFile0 = new MockFile("[V9q&Vg[Hu^3eg4?T");
      file1.toURI();
      File file2 = file1.getCanonicalFile();
      file2.getCanonicalFile();
      file2.mkdir();
      File file3 = file0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T", "/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T");
      File file4 = file3.getAbsoluteFile();
      file3.toURI();
      file4.setLastModified(1392409281320L);
      file4.toPath();
      file4.deleteOnExit();
      file3.deleteOnExit();
      file4.toPath();
      MockFile mockFile2 = new MockFile("", "");
      mockFile2.getAbsolutePath();
      File file5 = MockFile.createTempFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T", "", (File) mockFile2);
      file5.setLastModified(0L);
      MockFile mockFile3 = new MockFile(file5, "");
      mockFile3.deleteOnExit();
      Player player0 = new Player((-2885));
      float float0 = player0.getX();
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals("Player-2885", player0.getName());
      assertEquals(1, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-2695), "Y#nvY", (-2695));
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player((-268), "/'8pfwi", (-17050));
      Party party0 = player0.head;
      player0.remove((Party) null);
      boolean boolean0 = player0.isConnected();
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-17050), player0.getPictureId());
      assertTrue(boolean0);
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = Packable.GAME_EVENT;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("[V9q&Vg[Hu^3eg4?T/[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, (String) null);
      int int1 = (-2695);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      Player player0 = new Player((-2695), (String) null, (-284));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-1769), "3b-a", "MW1eT`;TiW`R&8r{y_", 485, (-702));
      Player player1 = new Player((-3160), "vrP,k", "", 31488, (-1663));
      player0.setY(0.0F);
      player1.gangStrength();
      OutputStream outputStream0 = null;
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, false, "vrP,k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player(1872, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 0);
      Party party0 = new Party();
      player0.prev = party0;
      player0.getStrength();
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-2695), "Y#nvY", 5);
      String string0 = player0.getIP();
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals("0.0.0.0", string0);
      assertEquals(5, player0.getPictureId());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1851905070236004
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Player player0 = new Player();
      player0.setDead(0L, true);
      player0.getStrength();
      Player player1 = new Player();
      player0.boss = (Party) player1;
      player0.setJoinOK(player1, true);
      player0.getMoney();
      player0.getY();
      player1.reset(true);
      Player player2 = new Player(1, (String) null, (short)4919);
      player2.add(player1);
      player0.isJoinOK(player1, true);
      assertEquals(0.0F, player0.getY(), 0.01F);
      
      player0.setY(0.2F);
      int int0 = Packable.GAME_EVENT;
      player0.gangStrength();
      player0.getX();
      player1.getIP();
      int int1 = player0.getPictureId();
      assertEquals(0, int1);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-2623), "%iyf/#?4y^pGzDv", "", (-1), 2560);
      Party party0 = new Party(24758);
      player0.boss = party0;
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      int int0 = player0.getPictureId();
      assertEquals((-1), int0);
      
      float float1 = player0.getX();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, float1, 0.01F);
      assertEquals("%iyf/#?4y^pGzDv", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(2560, player0.getStrength());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = Packable.ACTION;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/:cs]Zv1$w;C)mA/!0[V9q&Vg[Hu^3eg4?T");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      Player player0 = new Player();
      player0.getY();
      MockFile mockFile0 = new MockFile(".*[.]class$");
      MockFile mockFile1 = new MockFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T");
      File file0 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T", (File) mockFile1);
      mockFile1.setWritable(false);
      mockFile0.deleteOnExit();
      File file1 = mockFile1.getAbsoluteFile();
      mockFile1.setWritable(true, false);
      file1.getAbsolutePath();
      mockFile1.setExecutable(true, true);
      player0.setMoney(469.53937F);
      mockFile1.setWritable(true, true);
      file0.setWritable(false);
      mockFile1.toURL();
      mockFile0.deleteOnExit();
      mockFile1.setWritable(false, false);
      player0.getX();
      System.setCurrentTimeMillis((-1201L));
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("/home/ubuntu/termite/projects/27_gangup/[V9q&Vg[Hu^3eg4?T/[V9q&Vg[Hu^3eg4?T");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-1599), "w0m6?SBi;0NVWS", "hgeJ]!fntJ!N", (-1599), (-123));
      player0.toString();
      assertEquals((-123), player0.getStrength());
      assertEquals((-1599), player0.getPictureId());
      assertEquals("w0m6?SBi;0NVWS", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player(220, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 212, 1728);
      Player player1 = new Player(387, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 1728);
      player0.setConnected(false);
      player1.remove(player0);
      player1.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertFalse(player0.isConnected());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(9473);
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(2304, (String) null, "@YG0", 2304);
      player0.setZ(2304);
      float float0 = player0.getZ();
      assertEquals(2304.0F, float0, 0.01F);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = Packable.GAME_EVENT;
      File file0 = MockFile.createTempFile(":cs]Zv1$w;C)mA/!", "[V9q&Vg[Hu^3eg4?T");
      file0.delete();
      file0.getCanonicalPath();
      File file1 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T", file0);
      file1.toPath();
      file1.getAbsoluteFile();
      file1.toURI();
      file1.getCanonicalFile();
      file0.mkdir();
      File file2 = file0.getAbsoluteFile();
      file0.getAbsoluteFile();
      File file3 = file2.getAbsoluteFile();
      file3.toPath();
      file3.toPath();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      file2.deleteOnExit();
      Player player0 = new Player((-1311), "[V9q&Vg[Hu^3eg4?T", 3);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player((-126));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte)1;
      player0.unpack(byteArray0);
      Party party0 = new Party((short)4919);
      player0.next = party0;
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(0, "s WLp-)>~C0OcUm {", (String) null, 0, 5);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)47;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte)47);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals(5, player0.getStrength());
      assertEquals(0, player0.getPictureId());
      assertFalse(boolean0);
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = Packable.GAME_EVENT;
      File file0 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T");
      file0.delete();
      file0.getCanonicalPath();
      File file1 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T", file0);
      file1.getCanonicalPath();
      file1.toPath();
      MockFile mockFile0 = new MockFile("[V9q&Vg[Hu^3eg4?T");
      URI uRI0 = file1.toURI();
      MockFile mockFile1 = new MockFile(uRI0);
      mockFile1.mkdir();
      File file2 = file0.getAbsoluteFile();
      MockFile mockFile2 = new MockFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T", "/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T");
      File file3 = file2.getAbsoluteFile();
      MockURI.parseServerAuthority(uRI0);
      file3.toPath();
      file3.deleteOnExit();
      file2.deleteOnExit();
      file3.toPath();
      MockFile mockFile3 = new MockFile("", "");
      mockFile3.deleteOnExit();
      mockFile3.getAbsolutePath();
      MockFile mockFile4 = new MockFile("/home/ubuntu/termite/projects/27_gangup/", "/home/ubuntu/termite/projects/27_gangup/");
      MockFile mockFile5 = new MockFile(mockFile4, "");
      mockFile5.toPath();
      MockFile mockFile6 = new MockFile(mockFile5, "");
      file2.deleteOnExit();
      Player player0 = new Player((-24504), "", "Player", (-457), 12445);
      player0.setDead((-2369L), true);
      assertEquals((-2369L), player0.getTimeOfDeath());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "00.00");
      MockFile mockFile0 = new MockFile("Y#nvY", "Y#nvY");
      MockFile mockFile1 = new MockFile(mockFile0, "00.00");
      mockFile1.toPath();
      mockFile0.setWritable(false);
      mockFile0.toURL();
      mockFile1.deleteOnExit();
      mockFile0.setWritable(false, false);
      Player player0 = new Player((-2695), "", (-2695));
      player0.getName();
      Player player1 = new Player((short)4919, "", "Y#nvY", (short)4919);
      float float0 = player1.getX();
      assertEquals("", player1.getIP());
      assertEquals(10.0F, float0, 0.01F);
      
      System.setCurrentTimeMillis((-2695));
      float float1 = player0.getZ();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals((-2695), player0.getPictureId());
      assertEquals(0.0F, float1, 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      Player player0 = new Player(732, "SLdE>Y#N&-0P~", "", 732);
      player0.id = 732;
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(2, (String) null, (String) null, 30861, (-895));
      player0.getName();
      assertEquals((-895), player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(30861, player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-250), "+TxcuUCTc{~jFu", 5);
      player0.setDead(0L);
      player0.setDead((long) (-2698), false);
      System.setCurrentTimeMillis((-1L));
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Party party0 = new Party();
      Player player0 = new Player((-1343), "", "module.ModuleBrowserDialog$ModuleFilter", (-1343));
      player0.boss = party0;
      player0.pack();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals((-1343), player0.getPictureId());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.876156142363588
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player((-2173), "Y-#:nvY", "f[Io", (-2173), (-2173));
      Party party0 = new Party((short)4919);
      player0.getSubparty();
      player0.getSubparty();
      player0.getTimeOfDeath();
      player0.getZ();
      player0.getIP();
      player0.setDead();
      float float0 = player0.getX();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-120), "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", (-120));
      player0.setDead();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Party party0 = new Party();
      System.setCurrentTimeMillis((-1L));
      Player player0 = new Player((-3347));
      player0.pack();
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals("Player-3347", player0.getName());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0.0.0.0");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player((-2695), "Y#nvY", 5);
      player0.setY((-2695));
      player0.setX((-2695));
      player0.pack();
      assertEquals((-2695.0F), player0.getX(), 0.01F);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Player player0 = new Player(3634, "MW1eT`;TiW`R&8r{y_", "k!", 0, 11709);
      boolean boolean0 = player0.isDead();
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals(11709, player0.getStrength());
      assertEquals("MW1eT`;TiW`R&8r{y_", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0, player0.getPictureId());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Player player0 = new Player((-1002), "|7)H", "wP", (-1002), 237);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream0);
      assertEquals((-1002), player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertEquals("|7)H", player0.getIP());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(boolean0);
      assertEquals(237, player0.getStrength());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      File file0 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T");
      file0.delete();
      file0.getCanonicalPath();
      File file1 = MockFile.createTempFile("[V9q&Vg[Hu^3eg4?T", "[V9q&Vg[Hu^3eg4?T", file0);
      file1.getCanonicalPath();
      file1.toPath();
      MockFile mockFile0 = new MockFile("[V9q&Vg[Hu^3eg4?T");
      URI uRI0 = file1.toURI();
      File file2 = file1.getCanonicalFile();
      file2.getCanonicalFile();
      file2.mkdir();
      File file3 = file0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T", "/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T");
      File file4 = file3.getAbsoluteFile();
      file4.getAbsolutePath();
      MockURI.parseServerAuthority(uRI0);
      file4.toPath();
      file4.deleteOnExit();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T/tmp");
      FileSystemHandling.createFolder(evoSuiteFile0);
      file3.deleteOnExit();
      file4.toPath();
      MockFile mockFile2 = new MockFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T", "");
      mockFile2.getCanonicalPath();
      mockFile2.deleteOnExit();
      mockFile2.getAbsolutePath();
      File file5 = MockFile.createTempFile("/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T", "", (File) mockFile2);
      MockFile mockFile3 = new MockFile(file5, "/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T");
      mockFile3.toURI();
      MockFile mockFile4 = new MockFile(mockFile3, "/tmp/[V9q&Vg[Hu^3eg4?T0[V9q&Vg[Hu^3eg4?T/[V9q&Vg[Hu^3eg4?T1[V9q&Vg[Hu^3eg4?T");
      file4.mkdir();
      file3.deleteOnExit();
      Player player0 = new Player((-1), "0.0.0.0", (-24504));
      player0.pack();
      assertEquals((-24504), player0.getPictureId());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("0.0.0.0", player0.getIP());
  }
}
