/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 08:58:03 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3781645029588425
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2413));
      classWriter0.index = (-2413);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = (-294);
      byteVector0.putUTF8("c5(6BvV a|");
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item(2);
      item0.next = null;
      classWriter0.version = 47;
      Item[] itemArray0 = new Item[12];
      itemArray0[0] = null;
      item0.next = item0;
      item0.next.set(197);
      item0.strVal2 = "";
      item0.set((-7.5F));
      itemArray0[2] = item0.next;
      itemArray0[8] = item0;
      item0.next.set(0L);
      Item item1 = new Item(2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Deprecated");
      item0.next.set(2, "", "", "'W");
      classWriter0.index = (-2425);
      item0.next.set(47);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "org.apache.comons.io.filefilter.Wildcard\"ilter", "", "", itemArray0[0]);
      item0.set(4096);
      item0.next.set(0L);
      item0.next.intVal = 1;
      item0.next.set(17);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.8945706855324711
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2379));
      classWriter0.index = (-2379);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("c5(6BvV a|");
      fieldWriter0.put(byteVector0);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item();
      item0.next = item0;
      item0.next.set(0L);
      classWriter0.version = 50;
      Item[] itemArray0 = new Item[9];
      itemArray0[7] = item0.next;
      item0.next = item0;
      item0.next.index = 903;
      item0.next.set(903);
      item0.next.hashCode = 903;
      item0.strVal2 = "XJR1eUQQaf)i";
      itemArray0[2] = item0.next;
      itemArray0[8] = item0.next;
      itemArray0[2] = item0.next;
      item0.next.set(0L);
      item0.next.set(2128099209, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "jTI=ZD)e=r");
      item0.next.set(50);
      item0.next.strVal1 = "XJR1eUQQaf)i";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4104, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "XJR1eUQQaf)i", itemArray0[0]);
      item0.next.intVal = 54;
      item0.next.strVal1 = "XJR1eUQQaf)i";
      item0.set(4104);
      item0.next.intVal = 903;
      item0.next.set(4113);
      item0.next.set(4110);
      item0.next.set(778.0);
      item0.set(4110);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4308281068778042
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item(2);
      item0.next = null;
      classWriter0.version = 47;
      Item[] itemArray0 = new Item[12];
      itemArray0[0] = null;
      item0.next = item0;
      item0.next.set(197);
      item0.strVal2 = "";
      item0.set((-7.5F));
      itemArray0[2] = item0.next;
      itemArray0[8] = item0;
      itemArray0[2] = item0;
      item0.next.set(0L);
      Item item1 = new Item(2);
      item0.next.set(2, "", "", "'\"W");
      item0.next.set(47);
      item0.next.strVal1 = ")V";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", "", itemArray0[0]);
      item0.next.strVal1 = "";
      item0.set(4096);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      item0.next.set(0L);
      item0.next.set(17);
      fieldWriter0.getSize();
      Attribute attribute0 = new Attribute(")V");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2373));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-86);
      byteVector0.putUTF8("c5(6BvV a|");
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-82);
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item();
      item0.next = item0;
      classWriter0.version = 50;
      item0.next.set(50);
      Item[] itemArray0 = new Item[9];
      itemArray0[7] = item0.next;
      item0.next = item0;
      item0.next.index = 903;
      item0.next.set(903);
      item0.next.hashCode = 903;
      item0.strVal2 = "XJR1eUQQaf)i";
      itemArray0[2] = item0;
      itemArray0[8] = item0.next;
      itemArray0[2] = item0.next;
      item0.strVal1 = "XJR1eUQQaf)i";
      item0.next.set(0L);
      item0.next.set(2128099209, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "jTI=ZD)e=r");
      item0.next.set(50);
      item0.next.strVal1 = "RuntieI=visibleParameterAnnotations";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4104, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "XJR1eUQQaf)i", itemArray0[0]);
      item0.next.intVal = 54;
      item0.next.strVal1 = "XJR1eUQQaf)i";
      item0.set(4104);
      item0.next.intVal = 903;
      item0.next.set(4113);
      item0.next.set(4110);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putLong(50);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(4572);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1691, "R(+", "R(+", (String) null, (Object) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R(+");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iAs");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(879);
      String string0 = "R(+";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "R(+", "R(+", (String) null, (Object) null);
      String string1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      Attribute attribute0 = new Attribute("R(+");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0145240468749794
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item();
      item0.next = item0;
      classWriter0.version = 50;
      Item[] itemArray0 = new Item[9];
      itemArray0[7] = item0.next;
      item0.next = item0;
      item0.next.index = 903;
      item0.next.set(903);
      item0.next.hashCode = 903;
      item0.strVal2 = "XJR1eUQQaf)i";
      itemArray0[2] = item0.next;
      itemArray0[8] = item0.next;
      itemArray0[2] = item0.next;
      item0.next.set(0L);
      item0.next.set(2128099209, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "jTI=ZD)e=r");
      item0.next.set(50);
      item0.next.strVal1 = "XJR1eUQQaf)i";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4104, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "XJR1eUQQaf)i", itemArray0[0]);
      item0.next.intVal = 54;
      item0.next.strVal1 = "XJR1eUQQaf)i";
      item0.set(4104);
      item0.next.intVal = 903;
      item0.next.set(4113);
      item0.next.set(4110);
      item0.next.set(778.0);
      item0.set(4110);
      fieldWriter0.getSize();
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9859526183035509
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(498);
      String string0 = "RuntimeInvisibleAnnotations";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-34), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter1 = classWriter0.lastField;
      fieldWriter1.getSize();
      ByteVector byteVector1 = new ByteVector(10);
      byteVector1.putByte((-530));
      String string1 = "g:!C@w?}g0r4P_z";
      PipedInputStream pipedInputStream0 = new PipedInputStream(54);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, (-34));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(936);
      Item item0 = new Item();
      item0.next = null;
      classWriter0.version = 50;
      Item[] itemArray0 = new Item[10];
      itemArray0[7] = item0;
      item0.next = item0;
      item0.set(3671L);
      item0.next.index = 936;
      item0.next.set(936);
      item0.next.hashCode = 936;
      item0.strVal2 = "XJR1eUQQaf)i";
      item0.set(936);
      itemArray0[2] = item0.next;
      itemArray0[8] = item0.next;
      itemArray0[2] = item0.next;
      item0.intVal = 48;
      item0.next.set(0L);
      item0.next.set(936);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1147797504, "XJR1eUQQaf)i", "RuntieI=visibleParameterAnnotations", "XJR1eUQQaf)i", "RuntieI=visibleParameterAnnotations");
      item0.next.set(1147797504);
      item0.next.set(6);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.put12(9, 37);
      fieldWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.8361623253853443
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item(2);
      item0.next = null;
      Item[] itemArray0 = new Item[6];
      item0.next = null;
      itemArray0[0] = null;
      itemArray0[1] = item0;
      item0.next = item0;
      item0.strVal2 = "";
      itemArray0[2] = item0;
      itemArray0[3] = item0;
      itemArray0[4] = item0;
      itemArray0[4] = item0;
      item0.next.set(0L);
      Item item1 = new Item(903, item0.next);
      item0.next.set(2, "", "", "osND|0<Q");
      Item item2 = new Item();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65501, "", "", "", "");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("");
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(879);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Deprecated");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "R(+", "R(+", (String) null, (Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R(+");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Deprecated");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5087598483524394
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "iAs");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(879);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "R(+", "R(+", (String) null, (Object) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.visitAnnotation(";7Kt~", false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      fieldWriter0.getSize();
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TJ`161q_ ,Rw*2@f:u");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "TJ`161q_ ,Rw*2@f:u");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0991140089729452
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(879);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~o+");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Deprecated");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "~o+", "~o+", (String) null, (Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      fieldWriter0.visitAnnotation("~o+", true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ConstantValue");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~o+");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Deprecated");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putByte(31);
      byteVector1.put11(1, 897);
      fieldWriter0.put(byteVector1);
      fieldWriter0.put(byteVector0);
      assertSame(byteVector0, byteVector1);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4863125658959901
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ClassWriter classWriter1 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", "");
      String string0 = "RuntimeVisibleAnnotations";
      classWriter0.addUninitializedType("J0UIifMC*?", 54);
      boolean boolean0 = false;
      Attribute attribute0 = new Attribute("RuntimeVisibleAnnotations");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAnnotation("RuntimeVisibleAnnotations", false);
      fieldWriter0.visitAnnotation("", false);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(903);
      Item item0 = new Item();
      item0.next = item0;
      classWriter0.version = 50;
      Item[] itemArray0 = new Item[9];
      itemArray0[7] = item0.next;
      item0.next = item0;
      item0.next.index = 903;
      item0.next.set(903);
      item0.next.hashCode = 903;
      item0.strVal2 = "XJR1eUQQaf)i";
      itemArray0[2] = item0.next;
      itemArray0[8] = item0.next;
      itemArray0[2] = item0.next;
      item0.next.set(0L);
      item0.next.set(2128099209, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "jTI=ZD)e=r");
      item0.next.set(50);
      item0.next.strVal1 = "XJR1eUQQaf)i";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4104, "XJR1eUQQaf)i", "XJR1eUQQaf)i", "XJR1eUQQaf)i", itemArray0[0]);
      item0.next.intVal = 54;
      item0.next.strVal1 = "XJR1eUQQaf)i";
      item0.set(4104);
      item0.next.intVal = 903;
      item0.next.set(4113);
      item0.next.set(4110);
      item0.next.set(778.0);
      item0.set(4110);
      item0.longVal = (long) 50;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 4113, "XJR1eUQQaf)i", (String) null, "jTI=ZD)e=r", "XJR1eUQQaf)i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      classWriter0.visitOuterClass("\nk&^vN", "", (String) null);
      classWriter0.newConst("RuntimeInvisibleAnnotations");
      String string0 = "qH% RJ^\\uw>bY";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 101, "", "|t&", string0, (Object) null);
      fieldWriter0.visitEnd();
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2684036609455267
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-82));
      int int0 = (-1);
      String string0 = "W.piRzgrI;[nz:b`";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "W.piRzgrI;[nz:b`", "W.piRzgrI;[nz:b`", "W.piRzgrI;[nz:b`", "W.piRzgrI;[nz:b`");
      fieldWriter0.visitAnnotation("W.piRzgrI;[nz:b`", true);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("6)txq u(r9:.%u/pkAI", true);
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5876302662159738
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(903);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "R(+", "R(+", (String) null, (Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";7Kt~");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putLong(903);
      fieldWriter0.put(byteVector0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";7Kt~");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "R(+");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wq");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      fieldWriter0.getSize();
      AnnotationVisitor annotationVisitor1 = fieldWriter0.visitAnnotation("wq", true);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2684036609455267
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-82));
      int int0 = (-1);
      String string0 = "W.piRzgrI;[nz:b`";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1), "W.piRzgrI;[nz:b`", "W.piRzgrI;[nz:b`", "W.piRzgrI;[nz:b`", "W.piRzgrI;[nz:b`");
      fieldWriter0.visitAnnotation("W.piRzgrI;[nz:b`", true);
      fieldWriter0.getSize();
      fieldWriter0.visitAnnotation("6)txq u(r9:.%u/pIAI", true);
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(480);
      Item[] itemArray0 = new Item[24];
      Item item0 = new Item(251);
      itemArray0[0] = item0;
      itemArray0[1] = item0;
      Item item1 = new Item();
      itemArray0[2] = item1;
      Item item2 = new Item(1572, item1);
      itemArray0[4] = item0;
      Item item3 = classWriter0.key;
      itemArray0[5] = item3;
      itemArray0[6] = item1;
      classWriter0.typeTable = itemArray0;
      Item[] itemArray1 = new Item[2];
      Item item4 = classWriter0.newInteger(480);
      itemArray1[0] = item4;
      item4.strVal3 = "RuntimeVisibleAnn/tations";
      Item item5 = new Item();
      item5.set(6);
      itemArray1[1] = item5;
      item5.strVal3 = "y";
      item5.set((-2145.777864849535));
      item4.strVal3 = "";
      classWriter0.typeTable = itemArray1;
      item5.strVal2 = "y";
      item4.set(1572);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "untimeInvisibleAnnotations", "RuntimeVisibleAnn/tations", "untimeInvisibleAnnotations", "untimeInvisibleAnnotations");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8659992569610426
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4572);
      String string0 = "R(+";
      int int0 = 1691;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1691, "R(+", "R(+", "R(+", "R(+");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
      Frame frame0 = new Frame();
      Label label0 = new Label();
      Label label1 = label0.successor;
      Label label2 = label0.successor;
      Label label3 = new Label();
      Edge edge0 = new Edge();
      SequenceInputStream sequenceInputStream0 = null;
      try {
        sequenceInputStream0 = new SequenceInputStream((Enumeration<? extends InputStream>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.SequenceInputStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0108643020548935
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-52);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassWriter classWriter0 = new ClassWriter(879);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ep0ecBcate");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "~o+", "~o+", (String) null, (Object) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ContanValue");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DepreatEed");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ContanValue");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~o+");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~o+");
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4951));
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-6), "%0.l", "Uc@t", "%", sequenceInputStream1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.SequenceInputStream@3f3f62a2
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
