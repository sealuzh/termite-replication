/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 09:27:41 GMT 2019
 */

package accessories.plugins.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import accessories.plugins.time.JDayChooser;
import accessories.plugins.time.JMonthChooser;
import accessories.plugins.time.JYearChooser;
import freemind.main.FreeMind;
import freemind.main.FreeMindApplet;
import freemind.modes.MindIcon;
import freemind.modes.filemode.FileController;
import freemind.modes.filemode.FileMode;
import freemind.modes.mindmapmode.MindMapMode;
import java.awt.AWTEventMulticaster;
import java.awt.AWTKeyStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ContainerListener;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.awt.image.MemoryImageSource;
import java.beans.VetoableChangeListener;
import java.beans.VetoableChangeListenerProxy;
import java.io.File;
import java.io.PrintStream;
import java.text.ParsePosition;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Properties;
import java.util.SimpleTimeZone;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.SynchronousQueue;
import java.util.function.BiFunction;
import javax.help.ForwardAction;
import javax.help.event.HelpHistoryModelEvent;
import javax.swing.DebugGraphics;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTree;
import javax.swing.SwingConstants;
import javax.swing.plaf.metal.MetalToolBarUI;
import javax.swing.text.DefaultCaret;
import javax.swing.text.StringContent;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.apache.batik.css.parser.Parser;
import org.apache.batik.gvt.renderer.StrokingTextPainter;
import org.apache.batik.gvt.text.GVTAttributedCharacterIterator;
import org.apache.batik.svggen.DefaultExtensionHandler;
import org.apache.batik.svggen.ImageHandlerBase64Encoder;
import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.xml.serializer.EmptySerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.hsqldb.rowio.RowOutputBinary;
import org.jibx.runtime.impl.UnmarshallingContext;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import plugins.collaboration.database.DatabaseConnectionHook;
import plugins.map.MapDialog;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDayChooser_ESTest extends JDayChooser_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.275682866208837
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      AWTEventMulticaster.add(containerListener2, containerListener2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener3 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener3, containerListener3);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setDay(35);
      jDayChooser1.getDaysInMonth();
      jDayChooser0.getDay();
      jDayChooser0.setMonth(24);
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.setDay(2245);
      jDayChooser1.setMonth(13);
      jDayChooser1.setFocus();
      assertEquals(28, jDayChooser1.getDay());
      
      jDayChooser0.setSelectableDateRange((Date) null, (Date) null);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.238451421650854
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isDayBordersVisible();
      ForwardAction forwardAction0 = new ForwardAction(locale1);
      MouseEvent.getMouseModifiersText((-3546));
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setDay(2);
      jDayChooser0.getDaysInMonth();
      jDayChooser1.getDay();
      jDayChooser1.setMonth(2);
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser0.setDay(90);
      assertEquals(2, jDayChooser0.getMaxDayCharacters());
      
      jDayChooser1.setMonth((-1));
      assertEquals(2, jDayChooser1.getDay());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.3110956031693677
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      locale0.stripExtensions();
      Locale.setDefault(locale0);
      locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      jDayChooser0.setMaxDayCharacters(2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1273), (-337), 1697, 1697, 'j');
      jDayChooser0.keyPressed(keyEvent0);
      FileMode fileMode0 = new FileMode();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.hasFocus();
      int int0 = SwingConstants.NORTH_WEST;
      jDayChooser0.setDay(8);
      int int1 = SwingConstants.TOP;
      jDayChooser0.updateUI();
      int int2 = jDayChooser0.getMaxDayCharacters();
      assertEquals(2, int2);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.336983944231658
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.isDecorationBordersVisible();
      jDayChooser0.getFocusListeners();
      jDayChooser0.getPropertyChangeListeners("17");
      jDayChooser0.setMaxDayCharacters((-1197));
      jDayChooser0.getInheritsPopupMenu();
      jDayChooser0.setMonth((-1847));
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("day");
      ParsePosition parsePosition0 = new ParsePosition(510);
      mockSimpleDateFormat0.parse("17", parsePosition0);
      jDayChooser0.defaultMaxSelectableDate = null;
      jDayChooser0.drawWeeks();
      Date date0 = jDayChooser0.getMaxSelectableDate();
      jDayChooser0.drawWeeks();
      jDayChooser0.getDecorationBackgroundColor();
      System.setCurrentTimeMillis((-1368L));
      jDayChooser0.drawWeeks();
      jDayChooser0.setMinSelectableDate(date0);
      Parser parser0 = new Parser();
      parser0.getLocale();
      // Undeclared exception!
      try { 
        jDayChooser0.setLocale((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.14246308463095
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.JAPAN;
      Locale.getISOLanguages();
      Locale.setDefault(locale0);
      Locale locale1 = Locale.JAPAN;
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      jDayChooser0.setMaxDayCharacters(2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      AWTKeyStroke.getAWTKeyStroke(2, 24);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      ContainerListener containerListener0 = AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      assertNull(containerListener0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2967911217154358
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.JAPAN;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "15");
      Locale.getISOLanguages();
      Locale.setDefault(locale0);
      Locale locale1 = Locale.ENGLISH;
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.setMaxDayCharacters(14);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.getName();
      jDayChooser1.setDay(14);
      jDayChooser1.setFont((Font) null);
      jDayChooser0.setMaxDayCharacters(14);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-6342), (-3853), (-478), 40, 'W');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.getDay();
      jDayChooser0.setMonth(40);
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser1.setDay(17);
      assertEquals(17, jDayChooser1.getDay());
      
      jDayChooser2.setMonth(13);
      assertEquals(14, jDayChooser2.getDay());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.2782533190125323
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.CHINA;
      Locale.setDefault(locale0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.setMaxDayCharacters(2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove(containerListener0, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-1273), 2, 1697, 1697, 'j');
      keyEvent0.setKeyCode(35);
      jDayChooser0.keyPressed(keyEvent0);
      assertEquals(28, jDayChooser0.getDay());
      
      FileMode fileMode0 = new FileMode();
      jDayChooser0.setDay((-809));
      int int0 = jDayChooser0.day;
      jDayChooser0.setMonth(9);
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.097465961594406
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      AWTEventMulticaster.add(containerListener2, containerListener2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener3 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener3, containerListener3);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setDay(28);
      ContainerListener containerListener4 = AWTEventMulticaster.add(containerListener2, containerListener2);
      ContainerListener containerListener5 = AWTEventMulticaster.remove(containerListener4, (ContainerListener) null);
      ContainerListener containerListener6 = AWTEventMulticaster.add(containerListener2, containerListener5);
      ContainerListener containerListener7 = AWTEventMulticaster.add((ContainerListener) null, containerListener6);
      AWTEventMulticaster.remove(containerListener7, containerListener6);
      AWTEventMulticaster.remove((ContainerListener) null, containerListener2);
      ContainerListener containerListener8 = AWTEventMulticaster.remove(containerListener5, containerListener4);
      assertNull(containerListener8);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.2453214460241258
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isDayBordersVisible();
      ForwardAction forwardAction0 = new ForwardAction(locale1);
      MouseEvent.getMouseModifiersText((-3542));
      AWTKeyStroke.getAWTKeyStroke(2447, 90);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.ANCHOR_TYPE;
      ForwardAction forwardAction1 = new ForwardAction(gVTAttributedCharacterIterator_TextAttribute0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      HelpHistoryModelEvent helpHistoryModelEvent0 = new HelpHistoryModelEvent(jDayChooser_DecoratorButton0, false, false);
      forwardAction0.historyChanged(helpHistoryModelEvent0);
      JDayChooser jDayChooser1 = new JDayChooser();
      // Undeclared exception!
      try { 
        jDayChooser1.keyPressed((KeyEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.211206004793295
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isDayBordersVisible();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      JButton jButton0 = new JButton((Icon) null);
      ForwardAction forwardAction0 = new ForwardAction(jButton0);
      MouseEvent.getMouseModifiersText(2);
      AWTKeyStroke.getAWTKeyStroke(90, 2);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.ANCHOR_TYPE;
      DatabaseConnectionHook databaseConnectionHook0 = new DatabaseConnectionHook();
      databaseConnectionHook0.getUpdateThread();
      ForwardAction forwardAction1 = new ForwardAction((Object) null);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_ANGLE;
      Integer.remainderUnsigned(2, 10122);
      ActionEvent actionEvent0 = new ActionEvent(forwardAction0, 10122, "plugins/collaboration/database/database_slave_starter_plugin");
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.help.ForwardAction cannot be cast to javax.swing.JButton
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1867762766523793
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-30), "C");
      Locale locale0 = Locale.PRC;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale0);
      BiFunction<Calendar, Object, MockGregorianCalendar> biFunction0 = (BiFunction<Calendar, Object, MockGregorianCalendar>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(jDayChooser_DecoratorButton0, mockGregorianCalendar0, biFunction0);
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(9999, 2161, (-30), 9999, 0);
      java.sql.Date date0 = new java.sql.Date((-30));
      mockGregorianCalendar1.setGregorianChange(date0);
      hashMap0.put(jDayChooser_DecoratorButton0, mockGregorianCalendar1);
      hashtable0.putAll(hashMap0);
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(0, 0, intArray0, 0, 9999, hashtable0);
      jDayChooser0.createImage((ImageProducer) memoryImageSource0);
      jDayChooser_DecoratorButton0.getVerifyInputWhenFocusTarget();
      jDayChooser0.getMaxDayCharacters();
      MouseEvent mouseEvent0 = new MouseEvent(jDayChooser0, 5, 0, (-2405), (-2405), 0, (-1917), false);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      ParsePosition parsePosition0 = new ParsePosition(76);
      mockSimpleDateFormat0.parse("Windows", parsePosition0);
      jDayChooser0.setMaxSelectableDate((Date) null);
      jDayChooser0.setMaxDayCharacters((-396));
      assertEquals(0, jDayChooser0.getMaxDayCharacters());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.2403394729930035
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDayBordersVisible(false);
      JPanel jPanel0 = jDayChooser0.getDayPanel();
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.isDayBordersVisible();
      MouseEvent.getMouseModifiersText(41);
      AWTKeyStroke.getAWTKeyStroke((-859), 23);
      ForwardAction forwardAction0 = new ForwardAction(jPanel0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setMaxDayCharacters((-859));
      int int0 = SwingConstants.NORTH_WEST;
      jDayChooser0.setDay((-1877));
      int int1 = SwingConstants.TOP;
      assertEquals(1, int1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.1699419390281314
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.getY();
      jDayChooser0.setFocus();
      System.setCurrentTimeMillis(224L);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 0, 608L, 0, 0, '?', 0);
      keyEvent0.paramString();
      keyEvent0.setKeyCode((-4421));
      jDayChooser0.keyReleased(keyEvent0);
      jDayChooser0.getSelectedDay();
      assertTrue(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.096578338635442
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.KOREA;
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      JDayChooser jDayChooser0 = new JDayChooser();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      ContainerListener containerListener3 = AWTEventMulticaster.add(containerListener2, containerListener2);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      jDayChooser0.removeMouseMotionListener((MouseMotionListener) null);
      ContainerListener containerListener4 = AWTEventMulticaster.add(containerListener3, containerListener3);
      ContainerListener containerListener5 = AWTEventMulticaster.add(containerListener3, containerListener4);
      ContainerListener containerListener6 = AWTEventMulticaster.add(containerListener5, containerListener3);
      ContainerListener containerListener7 = AWTEventMulticaster.remove(containerListener6, containerListener2);
      AWTEventMulticaster.remove(containerListener7, containerListener5);
      ContainerListener containerListener8 = AWTEventMulticaster.remove(containerListener4, containerListener6);
      ContainerListener containerListener9 = AWTEventMulticaster.add(containerListener2, containerListener6);
      AWTEventMulticaster.remove(containerListener9, containerListener8);
      MetalToolBarUI metalToolBarUI0 = new MetalToolBarUI();
      metalToolBarUI0.getDockingColor();
      jDayChooser0.setForeground((Color) null);
      assertEquals(14, jDayChooser0.getDay());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.19886046423322
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      AWTEventMulticaster.add(containerListener2, containerListener2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener3 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener3, containerListener3);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.getDaysInMonth();
      jDayChooser0.setMonth(35);
      JDayChooser jDayChooser2 = new JDayChooser();
      assertEquals(14, jDayChooser2.getDay());
      
      jDayChooser2.setDay(2245);
      jDayChooser0.setMonth(21);
      Vector<Calendar> vector0 = new Vector<Calendar>();
      JTable jTable0 = new JTable(vector0, vector0);
      Color color0 = jTable0.getSelectionForeground();
      jDayChooser0.setDecorationBackgroundColor(color0);
      jDayChooser2.drawDays();
      assertTrue(jDayChooser2.isDayBordersVisible());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.151003002680045
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.addFocusListener(jDayChooser0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(0);
      jDayChooser0.setWeekOfYearVisible(false);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser_DecoratorButton0, 1699);
      FocusEvent focusEvent1 = new FocusEvent(jDayChooser_DecoratorButton0, 20);
      focusEvent1.paramString();
      JButton jButton0 = new JButton();
      focusEvent0.getOppositeComponent();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "0");
      MouseEvent.getMouseModifiersText(90);
      AWTKeyStroke.getAWTKeyStroke((-1243), 39);
      ForwardAction forwardAction0 = new ForwardAction("0");
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      jDayChooser_DecoratorButton0.addContainerListener((ContainerListener) null);
      jDayChooser_DecoratorButton0.addMouseListener(forwardAction0);
      jDayChooser0.isDecorationBackgroundVisible();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=3.2657261937620263
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.isFocusOwner();
      jDayChooser0.setIgnoreRepaint(true);
      jDayChooser0.setWeekOfYearVisible(false);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2742));
      focusEvent0.paramString();
      JButton[] jButtonArray0 = new JButton[2];
      JButton jButton0 = new JButton();
      jButtonArray0[0] = jButton0;
      jDayChooser0.weeks = jButtonArray0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      MouseEvent.getMouseModifiersText(2997);
      ForwardAction forwardAction0 = new ForwardAction(focusEvent0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      jDayChooser_DecoratorButton0.addContainerListener((ContainerListener) null);
      jDayChooser_DecoratorButton0.addMouseListener(forwardAction0);
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.setEnabled(false);
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.15605401524258
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      locale0.stripExtensions();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(8715);
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0, true);
      rowOutputBinary0.writeLong(8715);
      Locale locale1 = Locale.ITALIAN;
      JComponent.getDefaultLocale();
      StringContent stringContent0 = new StringContent((-704));
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2144);
      int int0 = SwingConstants.NORTH_WEST;
      jDayChooser0.setDay(661);
      int int1 = ImageObserver.ERROR;
      assertEquals(64, int1);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.309316456341356
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isDayBordersVisible();
      ForwardAction forwardAction0 = new ForwardAction(locale1);
      MouseEvent.getMouseModifiersText((-3542));
      AWTKeyStroke.getAWTKeyStroke(2447, 90);
      Color color0 = Color.green;
      jDayChooser0.setWeekdayForeground(color0);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.ANCHOR_TYPE;
      ForwardAction forwardAction1 = new ForwardAction(gVTAttributedCharacterIterator_TextAttribute0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      jDayChooser_DecoratorButton1.addContainerListener((ContainerListener) null);
      jDayChooser_DecoratorButton1.addMouseListener(forwardAction0);
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.setMonth(2447);
      jDayChooser0.getDayPanel();
      jDayChooser0.updateUI();
      UnmarshallingContext unmarshallingContext0 = new UnmarshallingContext();
      Date date0 = jDayChooser0.defaultMaxSelectableDate;
      // Undeclared exception!
      try { 
        unmarshallingContext0.parseElementDate("31", "31", date0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jibx.runtime.impl.UnmarshallingContext", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1492123437869526
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.CANADA;
      locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      StringContent stringContent0 = new StringContent(3);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      jDayChooser0.getDaysInMonth();
      jDayChooser1.setDay(3);
      int int0 = SwingConstants.SOUTH_EAST;
      assertEquals(4, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.219006890882825
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-30), "C");
      Locale locale0 = Locale.PRC;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale0);
      BiFunction<Calendar, Object, MockGregorianCalendar> biFunction0 = (BiFunction<Calendar, Object, MockGregorianCalendar>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(jDayChooser_DecoratorButton0, mockGregorianCalendar0, biFunction0);
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(9999, 2161, (-30), 9999, 0);
      mockGregorianCalendar1.toZonedDateTime();
      java.sql.Date date0 = new java.sql.Date((-30));
      mockGregorianCalendar1.setGregorianChange(date0);
      MockGregorianCalendar mockGregorianCalendar2 = new MockGregorianCalendar(locale0);
      hashtable0.putAll(hashMap0);
      jDayChooser_DecoratorButton0.getVerifyInputWhenFocusTarget();
      jDayChooser0.getMaxDayCharacters();
      MouseEvent mouseEvent0 = new MouseEvent(jDayChooser0, 5, 0, (-2405), (-2405), 0, (-1917), false);
      jDayChooser0.getDaysInMonth();
      jDayChooser0.setDay(8334);
      jDayChooser0.drawDays();
      jDayChooser0.setSelectableDateRange(date0, date0);
      jDayChooser0.setDay((-1005));
      jDayChooser0.setMonth(0);
      jDayChooser0.getLocale();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1700057348814004
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.isFocusOwner();
      jDayChooser0.setIgnoreRepaint(true);
      jDayChooser0.setWeekOfYearVisible(false);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2742));
      focusEvent0.paramString();
      JButton[] jButtonArray0 = new JButton[2];
      JButton jButton0 = new JButton();
      jButtonArray0[0] = jButton0;
      jDayChooser0.weeks = jButtonArray0;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      MouseEvent.getMouseModifiersText(2997);
      ForwardAction forwardAction0 = new ForwardAction(focusEvent0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      jDayChooser_DecoratorButton0.addContainerListener((ContainerListener) null);
      jDayChooser_DecoratorButton0.addMouseListener(forwardAction0);
      boolean boolean0 = jDayChooser0.isDecorationBackgroundVisible();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.240211948163542
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      jDayChooser0.setDayBordersVisible(false);
      jDayChooser0.getDayPanel();
      jDayChooser0.getAlignmentY();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "14");
      jDayChooser0.setSundayForeground((Color) null);
      jDayChooser0.getMaxSelectableDate();
      jDayChooser0.isDecorationBackgroundVisible();
      // Undeclared exception!
      try { 
        JDayChooser.main((String[]) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.1509776724370013
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale.getISOLanguages();
      Locale locale0 = Locale.JAPAN;
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters((-3));
      AWTKeyStroke.getAWTKeyStroke(1872, (-3));
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      ContainerListener containerListener0 = AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      assertNull(containerListener0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.22172802334861
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      jDayChooser0.isFocusOwner();
      jDayChooser0.setIgnoreRepaint(true);
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      
      jDayChooser0.setWeekOfYearVisible(true);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2742));
      focusEvent0.paramString();
      JButton[] jButtonArray0 = new JButton[2];
      JButton jButton0 = new JButton();
      jButtonArray0[0] = jButton0;
      MindIcon mindIcon0 = MindIcon.factory("");
      ImageIcon imageIcon0 = mindIcon0.getIcon();
      JButton jButton1 = new JButton((String) null, imageIcon0);
      jButtonArray0[1] = jButton1;
      jDayChooser0.weeks = jButtonArray0;
      mindIcon0.getIcon();
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(jButton1, 5871, (-2147483648L), (-1518), (-2742), 0, (-2742), (-1518), (-1), false, 3211, (-2742), (-1518));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      MouseEvent.getMouseModifiersText(2997);
      ForwardAction forwardAction0 = new ForwardAction(focusEvent0);
      forwardAction0.mouseClicked(mouseWheelEvent0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.addMouseListener(forwardAction0);
      jDayChooser0.isDecorationBackgroundVisible();
      jDayChooser0.focusGained(focusEvent0);
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=3.241066008975147
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      jDayChooser_DecoratorButton0.firePropertyChange("_=,lyS!CL':\"", '(', '2');
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      jDayChooser0.isDayBordersVisible();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.getDayPanel();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 5, 1501, 5, (-1738));
      jDayChooser0.setCalendar(mockGregorianCalendar0);
      assertEquals("org.evosuite.runtime.mock.java.util.MockGregorianCalendar[time=?,areFieldsSet=false,areAllFieldsSet=false,lenient=true,zone=sun.util.calendar.ZoneInfo[id=\"GMT\",offset=0,dstSavings=0,useDaylight=false,transitions=0,lastRule=null],firstDayOfWeek=1,minimalDaysInFirstWeek=1,ERA=?,YEAR=0,MONTH=5,WEEK_OF_YEAR=?,WEEK_OF_MONTH=?,DAY_OF_MONTH=1501,DAY_OF_YEAR=?,DAY_OF_WEEK=?,DAY_OF_WEEK_IN_MONTH=?,AM_PM=0,HOUR=5,HOUR_OF_DAY=5,MINUTE=-1738,SECOND=0,MILLISECOND=?,ZONE_OFFSET=?,DST_OFFSET=?]", mockGregorianCalendar0.toString());
      
      boolean boolean0 = jDayChooser0.isDecorationBordersVisible();
      assertFalse(boolean0);
      
      jDayChooser1.init();
      assertEquals(14, jDayChooser1.getDay());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.169993336394016
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.isFocusOwner();
      jDayChooser0.setIgnoreRepaint(true);
      jDayChooser0.setWeekOfYearVisible(false);
      int int0 = (-2742);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2742));
      focusEvent0.paramString();
      JButton[] jButtonArray0 = new JButton[5];
      JButton jButton0 = new JButton();
      jButtonArray0[0] = jButton0;
      MindIcon mindIcon0 = MindIcon.factory("");
      ImageIcon imageIcon0 = mindIcon0.getIcon();
      JButton jButton1 = new JButton((String) null, imageIcon0);
      jButtonArray0[1] = jButton1;
      jDayChooser0.weeks = jButtonArray0;
      focusEvent0.getOppositeComponent();
      jDayChooser0.focusLost(focusEvent0);
      // Undeclared exception!
      try { 
        jDayChooser0.drawDays();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0927074356766173
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte) (-110);
      byteArray0[4] = (byte)123;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      jDayChooser_DecoratorButton0.firePropertyChange("_=,lyS!CL':\"", '(', '2');
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1");
      StringContent stringContent0 = new StringContent(2);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser0.setDay((-85));
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.0965652109688846
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      java.sql.Date date0 = new java.sql.Date(0L);
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMaxSelectableDate(date0);
      Properties properties0 = FreeMindApplet.userProps;
      EmptySerializer emptySerializer0 = new EmptySerializer();
      emptySerializer0.getOutputFormat();
      FreeMindApplet freeMindApplet0 = null;
      try {
        freeMindApplet0 = new FreeMindApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.1699680061509725
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      long long0 = 1000L;
      java.sql.Date date0 = new java.sql.Date(1000L);
      jDayChooser0.setMaxSelectableDate(date0);
      JYearChooser jYearChooser0 = jDayChooser0.yearChooser;
      jDayChooser0.setYearChooser((JYearChooser) null);
      int int0 = (-2584);
      Properties properties0 = FreeMindApplet.userProps;
      MockFile mockFile0 = new MockFile((File) null, "28");
      FreeMind freeMind0 = null;
      try {
        freeMind0 = new FreeMind((Properties) null, (Properties) null, mockFile0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.2011650511455625
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      ContainerListener containerListener3 = AWTEventMulticaster.add(containerListener2, containerListener2);
      jDayChooser0.addContainerListener(containerListener3);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      AWTEventMulticaster.remove(containerListener2, containerListener2);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser1 = new JDayChooser();
      assertEquals(14, jDayChooser1.getDay());
      
      jDayChooser1.setDay(35);
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_ANGLE;
      jDayChooser1.getDaysInMonth();
      jDayChooser0.getDay();
      jDayChooser0.setMonth(24);
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.getDayPanel();
      assertEquals(14, jDayChooser2.getDay());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.1471855429828217
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener2 = AWTEventMulticaster.remove(containerListener0, containerListener1);
      AWTEventMulticaster.add(containerListener2, containerListener2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener3 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener3, containerListener3);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setDay(35);
      jDayChooser1.getDaysInMonth();
      jDayChooser0.setMonth(24);
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.setDay(2245);
      jDayChooser1.setMonth(13);
      assertEquals(28, jDayChooser1.getDay());
      
      jDayChooser0.initDecorations();
      assertFalse(jDayChooser0.isWeekOfYearVisible());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.211206004793295
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.isDayBordersVisible();
      ForwardAction forwardAction0 = new ForwardAction(locale1);
      MouseEvent.getMouseModifiersText((-3542));
      AWTKeyStroke.getAWTKeyStroke(2, 90);
      GVTAttributedCharacterIterator.TextAttribute gVTAttributedCharacterIterator_TextAttribute0 = (GVTAttributedCharacterIterator.TextAttribute)StrokingTextPainter.ANCHOR_TYPE;
      ForwardAction forwardAction1 = new ForwardAction(gVTAttributedCharacterIterator_TextAttribute0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      Integer integer0 = GVTAttributedCharacterIterator.TextAttribute.ORIENTATION_ANGLE;
      Integer.remainderUnsigned((int) gVTAttributedCharacterIterator_TextAttribute0.ARABIC_ISOLATED, (int) gVTAttributedCharacterIterator_TextAttribute0.WRITING_MODE_RTL);
      ActionEvent actionEvent0 = new ActionEvent(jDayChooser_DecoratorButton1, (int) gVTAttributedCharacterIterator_TextAttribute0.ORIENTATION_ANGLE, "");
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed(actionEvent0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1336533618782805
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      StringContent stringContent0 = new StringContent(20);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.repaint(20, 20, 20, 20);
      JButton jButton0 = jDayChooser0.getSelectedDay();
      assertNull(jButton0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.205567847238633
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "day");
      JTree jTree0 = new JTree();
      jDayChooser0.day = 342;
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField("day");
      DefaultCellEditor defaultCellEditor0 = new DefaultCellEditor(jFormattedTextField0);
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, (DefaultTreeCellRenderer) null, defaultCellEditor0);
      jDayChooser0.setDecorationBordersVisible(false);
      defaultCellEditor0.cancelCellEditing();
      defaultTreeCellEditor0.getFont();
      jDayChooser0.setFont((Font) null);
      jDayChooser0.getWeekdayForeground();
      jDayChooser0.drawDays();
      jDayChooser0.getWeekdayForeground();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      System.setCurrentTimeMillis(1747L);
      jDayChooser0.getDecorationBackgroundColor();
      jDayChooser0.setDayBordersVisible(false);
      Locale locale0 = Locale.GERMAN;
      jDayChooser0.setLocale(locale0);
      assertFalse(jDayChooser0.isFocusCycleRoot());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.302606849554565
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.createVolatileImage(8, 8);
      jDayChooser0.setEnabled(true);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      int int0 = 987;
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 987, (-2680), 987, 8, 'v');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.isWeekOfYearVisible();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.310939149453592
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      jDayChooser0.setMaxDayCharacters(2);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(containerListener0, containerListener0);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 987, (-1399L), 2, 2874, 'v');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.isWeekOfYearVisible();
      // Undeclared exception!
      try { 
        jDayChooser0.actionPerformed((ActionEvent) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.1656325219737314
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      locale0.stripExtensions();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.getDay();
      jDayChooser0.setMonth(47);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.setDay(0);
      jDayChooser1.setMonth(12);
      assertEquals(1, jDayChooser1.getDay());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3629079111400766
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.getAutoscrolls();
      jDayChooser0.getToolTipText();
      jDayChooser0.getName();
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser0.getPreferredSize();
      jDayChooser0.setAlwaysFireDayProperty(false);
      jDayChooser0.getSundayForeground();
      jDayChooser0.getSundayForeground();
      jDayChooser0.isWeekOfYearVisible();
      jDayChooser0.setFocus();
      jDayChooser0.setMonth(0);
      jDayChooser0.getDecorationBackgroundColor();
      MapDialog mapDialog0 = new MapDialog();
      Locale locale0 = Locale.ITALIAN;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      SynchronousQueue<String> synchronousQueue0 = new SynchronousQueue<String>();
      Locale.lookupTag(linkedList0, synchronousQueue0);
      locale0.stripExtensions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "17");
      StringContent stringContent0 = new StringContent(23);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.getToolTipText();
      jDayChooser1.setMaxDayCharacters(463);
      jDayChooser0.getDaysInMonth();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(1);
      jDayChooser1.getDaysInMonth();
      assertEquals(0, jDayChooser1.getMaxDayCharacters());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.0966040333564617
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.addFocusListener(jDayChooser0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary((-10));
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7~l*mt(_dTF3;EtG(");
      MouseEvent.getMouseModifiersText(210);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
      ForwardAction forwardAction0 = new ForwardAction(calendar0);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton1 = jDayChooser0.new DecoratorButton();
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      ContainerListener containerListener1 = AWTEventMulticaster.add(containerListener0, containerListener0);
      AWTEventMulticaster.remove(containerListener1, containerListener1);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      jDayChooser_DecoratorButton1.addContainerListener(containerListener1);
      jDayChooser_DecoratorButton0.addMouseListener(forwardAction0);
      boolean boolean0 = jDayChooser0.isDecorationBackgroundVisible();
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(boolean0);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.261471373183075
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-30), "C");
      Locale locale0 = Locale.PRC;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale0);
      BiFunction<Calendar, Object, MockGregorianCalendar> biFunction0 = (BiFunction<Calendar, Object, MockGregorianCalendar>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(jDayChooser_DecoratorButton0, mockGregorianCalendar0, biFunction0);
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(9999, 2161, (-30), 9999, 0);
      java.sql.Date date0 = new java.sql.Date((-30));
      mockGregorianCalendar1.setGregorianChange(date0);
      hashMap0.put(jDayChooser_DecoratorButton0, mockGregorianCalendar1);
      hashtable0.putAll(hashMap0);
      jDayChooser_DecoratorButton0.getVerifyInputWhenFocusTarget();
      jDayChooser0.getMaxDayCharacters();
      MouseEvent mouseEvent0 = new MouseEvent(jDayChooser0, 5, 0, (-2405), (-2405), 0, (-1917), false);
      jDayChooser0.getDaysInMonth();
      assertEquals(14, jDayChooser0.getDay());
      
      jDayChooser0.setDay(8334);
      jDayChooser0.drawDays();
      jDayChooser0.setSelectableDateRange(date0, date0);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser_DecoratorButton0, 1842, 2161, 9999, 44, 'I');
      jDayChooser0.keyPressed(keyEvent0);
      jDayChooser0.drawWeeks();
      assertEquals(28, jDayChooser0.getDay());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      int int0 = jDayChooser0.getDay();
      assertEquals(14, int0);
      assertTrue(jDayChooser0.isDecorationBackgroundVisible());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Center");
      jDayChooser0.repaint(90, 0, (-3333), (-2825));
      FileSystemHandling.shouldAllThrowIOExceptions();
      jDayChooser0.keyTyped((KeyEvent) null);
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.2456093053952273
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.addFocusListener(jDayChooser0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0, true);
      rowOutputBinary0.writeLong(0);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) rowOutputBinary0;
      PrintStream printStream0 = mockPrintStream0.printf("day", objectArray0);
      DebugGraphics.setLogStream(printStream0);
      jDayChooser_DecoratorButton0.paint(debugGraphics0);
      jDayChooser0.createToolTip();
      jDayChooser0.getMaxDayCharacters();
      jDayChooser0.setMonthChooser((JMonthChooser) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "#R]4vpE2mE+");
      StringContent stringContent0 = new StringContent(0);
      JDayChooser jDayChooser1 = new JDayChooser();
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("<<\n/Type /FileSpec\n", (VetoableChangeListener) null);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("<<\n/Type /FileSpec\n", vetoableChangeListenerProxy0);
      jDayChooser1.addVetoableChangeListener(vetoableChangeListenerProxy1);
      jDayChooser0.setMaxDayCharacters(1);
      jDayChooser0.getDaysInMonth();
      JDayChooser jDayChooser2 = new JDayChooser(false);
      jDayChooser2.getBorder();
      jDayChooser1.setDay(17);
      int int0 = jDayChooser1.getDaysInMonth();
      assertEquals(17, jDayChooser1.getDay());
      assertEquals(28, int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=3.169993336394016
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDecorationBackgroundVisible(true);
      jDayChooser0.isFocusOwner();
      jDayChooser0.setIgnoreRepaint(true);
      jDayChooser0.setWeekOfYearVisible(false);
      int int0 = (-2742);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, (-2742));
      focusEvent0.paramString();
      JButton[] jButtonArray0 = new JButton[2];
      JButton jButton0 = new JButton();
      jButtonArray0[0] = jButton0;
      MindIcon mindIcon0 = MindIcon.factory("");
      ImageIcon imageIcon0 = mindIcon0.getIcon();
      JButton jButton1 = new JButton((String) null, imageIcon0);
      jButtonArray0[1] = jButton1;
      jDayChooser0.weeks = jButtonArray0;
      focusEvent0.getOppositeComponent();
      jDayChooser0.focusLost(focusEvent0);
      // Undeclared exception!
      try { 
        jDayChooser0.drawDays();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.114412593542713
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.addFocusListener(jDayChooser0);
      DebugGraphics debugGraphics0 = new DebugGraphics();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(0);
      jDayChooser0.setWeekOfYearVisible(true);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 20);
      focusEvent0.paramString();
      JButton jButton0 = new JButton();
      focusEvent0.getOppositeComponent();
      File file0 = null;
      String string0 = "Windows";
      String string1 = "Looking for updates...";
      MindMapMode mindMapMode0 = new MindMapMode();
      FileController fileController0 = null;
      try {
        fileController0 = new FileController(mindMapMode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("freemind.modes.ControllerAdapter", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.096538374336882
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      FocusEvent focusEvent0 = new FocusEvent(jDayChooser0, 0, true);
      jDayChooser0.focusLost(focusEvent0);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.0965652109688846
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      locale0.stripExtensions();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      StringContent stringContent0 = new StringContent(20);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setDay(20);
      assertEquals(20, jDayChooser0.getDay());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.0586049119161527
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-30), "C");
      Locale locale0 = Locale.PRC;
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(simpleTimeZone0, locale0);
      BiFunction<Calendar, Object, MockGregorianCalendar> biFunction0 = (BiFunction<Calendar, Object, MockGregorianCalendar>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashtable0.merge(jDayChooser_DecoratorButton0, mockGregorianCalendar0, biFunction0);
      MockGregorianCalendar mockGregorianCalendar1 = new MockGregorianCalendar(9999, 2161, (-30), 9999, 0);
      mockGregorianCalendar1.toZonedDateTime();
      java.sql.Date date0 = new java.sql.Date((-30));
      mockGregorianCalendar1.setGregorianChange(date0);
      MockGregorianCalendar mockGregorianCalendar2 = new MockGregorianCalendar(locale0);
      jDayChooser0.setFont((Font) null);
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isWeekOfYearVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.1196327026184982
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      ContainerListener containerListener0 = mock(ContainerListener.class, new ViolatedAssumptionAnswer());
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JDayChooser jDayChooser1 = new JDayChooser();
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.setDay(6);
      JDayChooser jDayChooser3 = new JDayChooser(true);
      jDayChooser3.getDaysInMonth();
      jDayChooser2.setMonth((-1615));
      assertEquals(6, jDayChooser2.getDay());
      
      JDayChooser jDayChooser4 = new JDayChooser();
      jDayChooser4.setDay((-1615));
      jDayChooser4.setMonth(13);
      assertEquals(1, jDayChooser4.getDay());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.2353819293441486
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[1] = 0;
      jDayChooser_DecoratorButton0.firePropertyChange("day", '(', '2');
      assertEquals(14, jDayChooser0.getDay());
      
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      StringContent stringContent0 = new StringContent(0);
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser0.setDay(30);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      ParsePosition parsePosition0 = new ParsePosition(0);
      mockSimpleDateFormat0.parse("day", parsePosition0);
      Date date0 = jDayChooser1.setMaxSelectableDate((Date) null);
      jDayChooser0.setMaxDayCharacters(0);
      jDayChooser1.getMaxSelectableDate();
      jDayChooser1.setMinSelectableDate(date0);
      assertEquals(14, jDayChooser1.getDay());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.0965652109688846
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(false);
      jDayChooser0.setMinSelectableDate((Date) null);
      assertEquals(14, jDayChooser0.getDay());
      assertTrue(jDayChooser0.isDayBordersVisible());
      assertFalse(jDayChooser0.isDecorationBordersVisible());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.177193323614304
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(2);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      jDayChooser_DecoratorButton0.isFocusable();
      ForwardAction forwardAction0 = new ForwardAction(locale1);
      MouseEvent.getMouseModifiersText((-3542));
      AWTKeyStroke.getAWTKeyStroke(44, (-3542));
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      ContainerListener containerListener0 = AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      assertNull(containerListener0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.173141612976202
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      RowOutputBinary rowOutputBinary0 = new RowOutputBinary(0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(rowOutputBinary0, true);
      rowOutputBinary0.writeLong(0);
      rowOutputBinary0.writeShortData((short) (-256));
      rowOutputBinary0.writeType(367);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) rowOutputBinary0;
      Locale locale0 = Locale.ITALIAN;
      JComponent.getDefaultLocale();
      StringContent stringContent0 = new StringContent(650);
      JDayChooser jDayChooser0 = new JDayChooser();
      jDayChooser0.setMaxDayCharacters(1);
      jDayChooser0.hasFocus();
      int int0 = SwingConstants.NORTH_WEST;
      jDayChooser0.setDay(0);
      int int1 = SwingConstants.TOP;
      jDayChooser0.updateUI();
      jDayChooser0.isDecorationBordersVisible();
      assertEquals(1, jDayChooser0.getDay());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=3.3026655081498086
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      locale0.stripExtensions();
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy0);
      jDayChooser0.setEnabled(true);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      AWTEventMulticaster.remove((ContainerListener) null, (ContainerListener) null);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, 2, 98L, (-337), 987, 'v');
      jDayChooser0.keyPressed(keyEvent0);
      ImageHandlerBase64Encoder imageHandlerBase64Encoder0 = new ImageHandlerBase64Encoder();
      jDayChooser0.setMonth((-4367));
      DefaultExtensionHandler defaultExtensionHandler0 = new DefaultExtensionHandler();
      SVGGraphics2D sVGGraphics2D0 = null;
      try {
        sVGGraphics2D0 = new SVGGraphics2D((Document) null, imageHandlerBase64Encoder0, defaultExtensionHandler0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // domFactory should not be null
         //
         verifyException("org.apache.batik.svggen.SVGGeneratorContext", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.1699550666946883
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jDayChooser0.setFocus();
      jDayChooser0.getDecorationBackgroundColor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = (-1143);
      // Undeclared exception!
      try { 
        jDayChooser0.addListeners((-1143));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.2712101459187686
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DebugGraphics debugGraphics0 = new DebugGraphics();
      Locale locale0 = Locale.GERMANY;
      Locale.setDefault(locale0);
      Locale locale1 = locale0.stripExtensions();
      Locale.setDefault(locale1);
      Locale locale2 = Locale.JAPAN;
      JDayChooser jDayChooser0 = new JDayChooser();
      VetoableChangeListener vetoableChangeListener0 = mock(VetoableChangeListener.class, new ViolatedAssumptionAnswer());
      VetoableChangeListenerProxy vetoableChangeListenerProxy0 = new VetoableChangeListenerProxy("day", vetoableChangeListener0);
      VetoableChangeListenerProxy vetoableChangeListenerProxy1 = new VetoableChangeListenerProxy("9:izk~]~R[y8(hhz", vetoableChangeListenerProxy0);
      jDayChooser0.removeVetoableChangeListener(vetoableChangeListenerProxy1);
      jDayChooser0.setMaxDayCharacters((-659));
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser0.getName();
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser2.setDay(2);
      jDayChooser0.setMaxDayCharacters(15);
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser1, 13, (-4139L), 324, 2, 'W');
      jDayChooser2.keyPressed(keyEvent0);
      assertEquals(2, jDayChooser2.getDay());
      
      jDayChooser0.setFocus();
      assertEquals(14, jDayChooser0.getDay());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.2742351305314137
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      JDayChooser jDayChooser0 = new JDayChooser(true);
      JDayChooser.DecoratorButton jDayChooser_DecoratorButton0 = jDayChooser0.new DecoratorButton();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      intArray0[1] = 0;
      jDayChooser_DecoratorButton0.firePropertyChange("_=,lyS!CL':\"", '(', '2');
      Hashtable<JButton, Calendar> hashtable0 = new Hashtable<JButton, Calendar>();
      HashMap<JButton, MockGregorianCalendar> hashMap0 = new HashMap<JButton, MockGregorianCalendar>();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(9999, 2161, (-30), 9999, 234);
      hashMap0.put(jDayChooser_DecoratorButton0, mockGregorianCalendar0);
      hashtable0.putAll(hashMap0);
      MemoryImageSource memoryImageSource0 = new MemoryImageSource(0, 0, intArray0, 0, 9999, hashtable0);
      memoryImageSource0.newPixels();
      Image image0 = jDayChooser0.createImage((ImageProducer) memoryImageSource0);
      jDayChooser_DecoratorButton0.getVerifyInputWhenFocusTarget();
      jDayChooser0.prepareImage(image0, (ImageObserver) jDayChooser_DecoratorButton0);
      jDayChooser_DecoratorButton0.isFocusable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Date date0 = jDayChooser0.minSelectableDate;
      jDayChooser0.setMinSelectableDate(date0);
      jDayChooser0.setYear(0);
      jDayChooser0.addListeners(0);
      jDayChooser0.getMinSelectableDate();
      int int0 = new Integer(234);
      jDayChooser0.getMaxDayCharacters();
      // Undeclared exception!
      try { 
        jDayChooser0.getTemporaryCalendar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("accessories.plugins.time.JDayChooser", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2379832129656685
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      Locale locale1 = Locale.KOREA;
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      JDayChooser jDayChooser0 = new JDayChooser();
      KeyEvent keyEvent0 = new KeyEvent(jDayChooser0, (-478), 0L, (-478), (-2650), 'W');
      JDayChooser jDayChooser1 = new JDayChooser();
      jDayChooser1.keyPressed(keyEvent0);
      assertEquals(14, jDayChooser1.getDay());
      
      JDayChooser jDayChooser2 = new JDayChooser();
      jDayChooser1.setDay(740);
      jDayChooser0.setMonth(39);
      assertEquals(14, jDayChooser0.getDay());
  }
}
