/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 10:08:41 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.HeadlessException;
import java.io.File;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasConnectionProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.CaseInsensitiveString;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IIdentifier;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      arrayList1.ensureCapacity((-7));
      arrayList1.add((ITableInfo) null);
      arrayList1.add((ITableInfo) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      arrayList1.sort(comparator0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "s.\"GF[Mp`(TzM$";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "daucl", "s.\"GF[Mp`(TzM$");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = 1135;
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, 1135);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, ":Kv.I5;YjkL{", ":Kv.I5;YjkL{");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, "~^NR(H)kc");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getDestSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAlias sQLAlias1 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias1.getSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties1 = new SQLAliasSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties2 = new SQLAliasSchemaProperties();
      sQLAliasSchemaProperties0.getSchemaNameLoadInfo(sQLAliasSchemaProperties2);
      SQLAlias sQLAlias2 = new SQLAlias();
      sQLAlias1.setSchemaProperties(sQLAliasSchemaProperties2);
      try { 
        sQLAlias1.setName((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Alias name field cannot be empty
         //
         verifyException("net.sourceforge.squirrel_sql.client.gui.db.SQLAlias", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "Skipping FK (";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "kNq<~Asm2.", "t_pLk_yfTE~@");
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "kNq<~Asm2.";
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "kNq<~Asm2.", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "IC\"T\u0005hsh,-", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "5A):sYNH*j^xpf>qp", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      String string0 = "EGfJRxe5gx.V}";
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "5A):sYNH*j^xpf>qp", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "'bZQ}6Gm-#b2(e>6R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("2994093:16e73aa80fe:-7be3", uidIdentifier0.toString());
      
      DBUtil.typesAreEquivalent(3, 3);
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-2084));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("xK)kr", "xK)kr", "xK)kr", "xK)kr", 6, "xK)kr", 6, 6, 6, 6, "%O5/CGg#p", "xK)kr", 6, 1, "xK)kr");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("efault");
      DatabaseObjectType.createNewDatabaseObjectType(" ", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("yn_KN1kh[^A");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("efault", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Z|*YaHeER0R;^Z KE@");
      DatabaseObjectType.createNewDatabaseObjectType("oQVAU");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.createNewDatabaseObjectType("extract");
      DatabaseObjectType.createNewDatabaseObjectType(";y?,8^mnAxRlq");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDT_TYPE_DBO;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.OTHER;
      DatabaseObjectType.createNewDatabaseObjectType("*M");
      DatabaseObjectType.createNewDatabaseObjectType("%O5/CGg#p");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, "rUeyAO", "_sh:`{%", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", ")", "<4#N@SEGa", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", 7, "XLkt;ua6", (-894), 8, 7, 0, "Unexpected exception while attempting to determine if a table (", "2J19^Vra%F;", 283, 8, "925[X9\"AT~FJ6");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("<4#N@SEGa", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ISQLConnection iSQLConnection0 = null;
      ITableInfo iTableInfo0 = null;
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Skipping FK (";
      stringArray0[1] = "Nelect ";
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (byte) (-20));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DBUtil.typesAreEquivalent(16, 16);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "fKH/)X-Y");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 16);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PreferencesPanel.delayToolTip");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getPluginsUserSettingsDirectory();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create(file0);
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("PreferencesPanel.delayToolTip");
      applicationFiles0.getFAQFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "S");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "<B?", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFiles0.getDatabaseAliasesFile();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl1.getUserPreferencesFile();
      applicationFileWrappersImpl1.setApplicationFiles(applicationFiles0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUserPreferencesFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl6.getEditWhereColsFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("Rob Manning", dBCopyPlugin0.getAuthor());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, " )", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      assertEquals("2994093:16e73aa80fe:-7c20", uidIdentifier0.toString());
      
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), 4282);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("C[%9", (String) null, (String) null, "C[%9", (-385), "C[%9", 2062, (-199), (-5), 1846, "DefaultIntervalCategoryDataset: the number of categories in the start value dataset does not match the number of categories in the end value dataset.", (String) null, (-6), 2002, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.setPasteToTableName("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("lib/squirrel-sql.jar");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PreferencesPanel.delayToolTip");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getJDBCDebugLogFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      MockFile mockFile0 = (MockFile)applicationFiles0.getPluginsUserSettingsDirectory();
      applicationFiles0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)fileWrapperFactoryImpl0.create((File) mockFile0);
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      MockFile mockFile1 = new MockFile("PreferencesPanel.delayToolTip", "PreferencesPanel.delayToolTip");
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      MockFile mockFile2 = new MockFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "PreferencesPanel.delayToolTip");
      applicationFileWrappersImpl0.getExecutionLogFile();
      FileWrapperImpl fileWrapperImpl3 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl("PreferencesPanel.delayToolTip", "PreferencesPanel.delayToolTip");
      FileWrapperImpl fileWrapperImpl6 = new FileWrapperImpl(fileWrapperImpl1);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "S");
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " cascade constraints", "Ij@}9B\".?-C*UML ");
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, " cascade constraints", "|2^lSnR]kkN");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, 23502);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "XLkt;ua6", 2, "XLkt;ua6", 2415, 2, (-3172), 2082, "'bA", "Jjt$6ckY!aI9B^5s", 3212, (-6263), "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      ImageIcon imageIcon0 = new ImageIcon("g\"A3|m>kaK");
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent((byte)2, 1713);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      boolean boolean0 = DBUtil.typesAreEquivalent((-2), (-122));
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("@/l!#Am*=W`w9crEwQ", "", "DQ1,", "getCatSep: Unexpected Exception - ", (-2), "U", 29, 683, (-2), (-2679), "iKv.Yn;YjkL{", "KB", (-3), 29, "DQ1,");
      boolean boolean1 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-91);
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte) (-91);
      byteArray0[4] = (byte) (-91);
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte) (-117);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)2;
      byteArray1[2] = (byte) (-75);
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte) (-91);
      byteArray1[6] = (byte) (-91);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      boolean boolean0 = DBUtil.typesAreEquivalent((byte)2, (byte)2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver1 = new SQLDriver((IIdentifier) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("2994093:16e73aa80fe:-7c5d", uidIdentifier0.toString());
      
      SQLDriver sQLDriver2 = new SQLDriver((IIdentifier) null);
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = new SQLDriverPropertyCollection();
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-4160));
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = (-4);
      int int1 = 254;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("' AND UPPER(VIEWNAME) = '", "T[rh2\u0006", "' AND UPPER(VIEWNAME) = '", "field not found: ", (-4), "field not found: ", 773, (-4), 185, 254, "", "", 773, 185, "DomainOrder.ASCENDING");
      JInternalFrame jInternalFrame0 = new JInternalFrame("' AND UPPER(VIEWNAME) = '", true, true, true);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.isBinaryType(tableColumnInfo0);
      String string0 = "";
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String string0 = null;
      JInternalFrame jInternalFrame0 = new JInternalFrame((String) null, true, true);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.CATALOG;
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginUserSettingsFolder();
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" schema=", "0;E$:g}4uHSW", (String) null, "[zrQb", 2147000000, "z^2~z'4!Z", (-117), 2147000000, 2004, 8, " limit:?", " and table_schema = ? ", (-1669), 2147000000, "k]Ku[K");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.setCopyMenuEnabled(false);
      dBCopyPlugin3.setPasteToTableName((String) null);
      DBCopyPlugin dBCopyPlugin4 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      dBCopyPlugin2.setPasteMenuEnabled(false);
      int int0 = DBUtil.replaceDistinctDataType(2147000000, tableColumnInfo0, (ISession) null);
      assertEquals(2147000000, int0);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "#J/]9umsR^v^y+<", "#J/]9umsR^v^y+<", "XLkt;ua6", 2, "XLkt;ua6", 2415, 2, (-3172), 2082, "'bA", "Jjt$6ckY!aI9B^5s", 3212, (-6263), " limit ? ?");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      TableColumnInfo tableColumnInfo1 = (TableColumnInfo)DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
      assertEquals(2082, tableColumnInfo1.isNullAllowed());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "?dGzOqBu=", "I\"Jsm%B2yzF413P");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "ActioCollecion.actioENotFound", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "", 605, "ActioCollecion.actioENotFound", (-3263), 213, 605, (-31), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2193), 8, "ActioCollecion.actioENotFound");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("xeVk3", "xeVk3", "d!@zv]\"q", "xeVk3", (-5), "xeVk3", (-5), (-5), (-5), (-5), "%O5/CGg#p", "xeVk3", (-5), 1, "xeVk3");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("\t");
      DatabaseObjectType.createNewDatabaseObjectType("d!@zv]\"q");
      DatabaseObjectType.createNewDatabaseObjectType("%O5/CGg#p", (Icon) null);
      JInternalFrame jInternalFrame0 = new JInternalFrame("d!@zv]\"q", false, false, false, false);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("\t", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("d!@zv]\"q", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("%O5/CGg#p", (Icon) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDT;
      DatabaseObjectType.createNewDatabaseObjectType("%O5/CGg#p");
      DatabaseObjectType.createNewDatabaseObjectType("%O5/CGg#p");
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      JInternalFrame jInternalFrame1 = new JInternalFrame("d!@zv]\"q", false, false, false);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.CATALOG;
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("xeVk3");
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.FOREIGN_KEY;
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("xeVk3");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("RM{[U&\"Y97iAt0", " limit? ?", "RM{[U&\"Y97iAt0", " limit? ?", 2005, "RM{[U&\"Y97iAt0", 2005, 2005, 2005, 2005, "@abel.6\"nt", "aTokenizer arg ca!not e null", 2005, 2005, "N;4Id3<Izuc89K");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.OTHER;
      DatabaseObjectType.createNewDatabaseObjectType(".");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)74;
      ImageIcon imageIcon0 = new ImageIcon(byteArray0, ".");
      DatabaseObjectType.createNewDatabaseObjectType(" limit? ?", (Icon) imageIcon0);
      JInternalFrame jInternalFrame0 = new JInternalFrame("aTokenizer arg ca!not e null", true, true, true, true);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      JInternalFrame jInternalFrame1 = new JInternalFrame((String) null, true, true, true);
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.CATALOG;
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.SYNONYM;
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("(O1W");
      DatabaseObjectType databaseObjectType11 = DatabaseObjectType.FOREIGN_KEY;
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("AQ{72 v0)6uBx3n:q?M");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.setDestSession((ISession) null);
      dBCopyPlugin0.getPluginAppSettingsFolder();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasConnectionProperties sQLAliasConnectionProperties0 = sQLAlias0.getConnectionProperties();
      sQLAlias0.setConnectionProperties(sQLAliasConnectionProperties0);
      sQLAlias0.getDriverPropertiesClone();
      SQLDriver sQLDriver1 = new SQLDriver();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("default");
      DatabaseObjectType.createNewDatabaseObjectType("xK)kr");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      DatabaseObjectType.createNewDatabaseObjectType("default", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("default");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("Z|*YaHeER0R;^Z KE@", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("Could not instantiate dialect class");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.CATALOG;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.OTHER;
      DatabaseObjectType.createNewDatabaseObjectType("*M");
      DatabaseObjectType.createNewDatabaseObjectType("%O5/CGg#p");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteMenuEnabled(true);
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, (TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", ")", "<4#N@SEGa", "Encountered unexpected exception when attempting to call SQLDatabaseMetaData.getTables with catalog = ", 7, "XLkt;ua6", (-894), 8, 7, 0, "Unexpected exception while attempting to determine if a table (", "2J19^Vra%F;", 283, 8, "925[X9\"AT~FJ6");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.SCHEMA;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("<4#N@SEGa", string0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFileWrappersImpl1.getLibraryDirectory();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl1.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl1.getUserPreferencesFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("_S8qA-Z4", "/OPE$bie.hMw!SvE}*9", (String) null, (String) null, (-1357), "1`pjO;(lZez8E ", 1534, 2003, 2005, 12, ".", ".", 1080, (-1357), "Z|*YaHeER0R;^Z KE@");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, tableColumnInfo0, ")'3z~C:RM", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("lib/squirrel-sql.jar");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PreferencesPanel.delayToolTip");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      MockFile mockFile0 = new MockFile("PreferencesPanel.delayToolTip", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      applicationFiles0.getEditWhereColsFile();
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)fileWrapperFactoryImpl0.create((File) mockFile0);
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFiles0.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      applicationFiles0.getSQuirrelJarFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      applicationFiles0.getFAQFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileWrapperFactoryImpl0.create(fileWrapperImpl2);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl("PreferencesPanel.delayToolTip", "PreferencesPanel.delayToolTip");
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl(fileWrapperImpl1);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "S");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      FileSystemHandling.shouldAllThrowIOExceptions();
      dBCopyPlugin1.setPasteMenuEnabled(true);
      dBCopyPlugin1.getDestSession();
      int int0 = DBUtil.replaceDistinctDataType(1111, (TableColumnInfo) null, (ISession) null);
      assertEquals(1111, int0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFiles0.getDatabaseAliasesFile();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl1.getUserPreferencesFile();
      applicationFileWrappersImpl1.setApplicationFiles(applicationFiles0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUserPreferencesFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl6.getEditWhereColsFile();
      applicationFileWrappersImpl2.getUserSettingsDirectory();
      applicationFileWrappersImpl6.getLicenceFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "ZP/e~=?o|(]", "ZP/e~=?o|(]", "_tSk8iJ_@X3B5", (-33), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-33), 2001, 2001, 2001, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "DBUtil.info.bindblobfile", 1697, 1697, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      int int0 = DBUtil.replaceDistinctDataType((-33), tableColumnInfo0, (ISession) null);
      assertEquals((-33), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "#J/]9umsR^v^y+<", "#J/]9umsR^v^y+<", "XLkt;ua6", 2, "XLkt;ua6", 2415, 2, (-3172), 2082, "'bA", "Jjt$6ckY!aI9B^5s", 3212, (-6263), " limit ? ?");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ArrayList<ITableInfo> arrayList1 = new ArrayList<ITableInfo>();
      arrayList1.add((ITableInfo) null);
      arrayList1.add((ITableInfo) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getDestDatabaseObject();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-1664), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 466, 466, (-1664), 4426, (String) null, "bb-MZAa%(- /[X", (-1664), 4426, (String) null);
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin2.getDestSession();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-1664), int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "PreferencesPanel.delayToolTip");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getPluginsUserSettingsDirectory();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create(file0);
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("PreferencesPanel.delayToolTip");
      applicationFiles0.getFAQFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "S");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin1, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("DefaultIntervalCategoryDataset: the number of categories in the start value dataset does not match the number of categories in the end value dataset.", "QhSH+p36XT{)", ":f", "QhSH+p36XT{)", 2155, "F@!i[h+nxBRGS?c", 2155, 2155, 2155, 2155, "2<K\u0006 l_\"f;?+[/%1y", "F@!i[h+nxBRGS?c", (-5), 1424, ":f");
      SchemaInfo schemaInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, (SchemaInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte) (-75);
      byteArray0[2] = (byte)48;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[3] = (byte) (-78);
      byteArray0[4] = (byte)2;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z^2~z'4!Z", (String) null, "925[X9\"AT~FJ6", (String) null, (byte)2, " schema = ", (-107), (-1759), (byte)2, (byte)48, (String) null, "$x~b3+:% Aj.", (byte) (-91), (-1186), "925[X9\"AT~FJ6");
      DefaultListCellRenderer.UIResource defaultListCellRenderer_UIResource0 = new DefaultListCellRenderer.UIResource();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("z^2~z'4!Z");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType(".");
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertNull(string0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "b\u0000J@\"=WcylYD CC7jT");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      MockFile mockFile0 = new MockFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)fileWrapperFactoryImpl0.create((File) mockFile0);
      applicationFileWrappersImpl0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFiles0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getUserSQLHistoryFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("b\u0000J@\"=WcylYD CC7jT");
      applicationFiles0.getFAQFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl0);
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      FileSystemHandling.createFolder(evoSuiteFile0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getUserSettingsDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLicenceFile();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "SRtQLu@4", (ITableInfo) null, (-23));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" _qhkgz6Ddy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "k", "k", 1115, " _qhkgz6Ddy", 1556, 1556, 25, 1382, "P5.^`Caa/_nGL42G6(X", "=", 1115, 1836, "SerialDate.monthCodeToQuarter: invalid month code.");
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1115);
      // Undeclared exception!
      try { 
        integerIdentifier0.setString("P5.^`Caa/_nGL42G6(X");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"P5.^`Caa/_nGL42G6(X\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("0", (String) null, "jof]E%F^4%e", "jof]E%F^4%e", (-7), (String) null, 37, 2083, 2083, 254, "'bA", "#J/]9umsR^v^y+<", (-7), 254, "'bA");
      tableColumnInfoArray0[0] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("Gi^,00z^lvZ)op#F", "jof]E%F^4%e", (String) null, "Gi^,00z^lvZ)op#F", 200, "'bA", (-2005), (-692), 2021, (-7), "#J/]9umsR^v^y+<", "O#Fa\"$u-Bzpy5tua}vq", 2021, (-1189), "jof]E%F^4%e");
      tableColumnInfoArray0[1] = tableColumnInfo1;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("jof]E%F^4%e, Gi^,00z^lvZ)op#F", string0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[1];
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo(")A2FzN=7[*", "EQ", "substr(");
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) databaseObjectInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFiles0.getDatabaseAliasesFile();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl1.getUserPreferencesFile();
      applicationFileWrappersImpl1.setApplicationFiles(applicationFiles0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUserPreferencesFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl6.getEditWhereColsFile();
      applicationFileWrappersImpl2.getUserSettingsDirectory();
      applicationFileWrappersImpl6.getLicenceFile();
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      String string0 = DBUtil.fixCase((ISession) null, (String) null);
      assertNull(string0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection1 = new SQLDriverPropertyCollection();
      SQLDriverPropertyCollection sQLDriverPropertyCollection2 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.getLastStatement();
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[5];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      List<ITableInfo> list2 = DBUtil.convertObjectToTableList(list1);
      assertEquals(5, list2.size());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = "";
      String string1 = "`**Z&10J8!";
      String string2 = "";
      int int0 = 2;
      int int1 = 6;
      String string3 = "";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "`**Z&10J8!", "", "", 2001, "`**Z&10J8!", 2, 2, (-1920), 6, "", "", (-5), 2001, "null");
      DBUtil.isBinaryType(tableColumnInfo0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("`**Z&10J8!");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.FOREIGN_KEY;
      ImageIcon imageIcon0 = new ImageIcon();
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DBUtil.setLastStatement("H$sA[QT/gra)R/.+A/");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      String string0 = "ALTER TABLE $tableName$ ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ($columnName;  separator=\",\"$)";
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "H$sA[QT/gra)R/.+A/", "H$sA[QT/gra)R/.+A/", "ALTER TABLE $tableName$ ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ($columnName;  separator=\",\"$)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", "executeQuery: TimesTen allows a maximum fetch size of 128.  Altering preferred fetch size from ", (-117));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey((String) null, "?!7C0fj>Fe!@6Xd\"oin", "i", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAlias sQLAlias1 = new SQLAlias();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      sQLAlias0.setDriverIdentifier(uidIdentifier0);
      sQLAlias1.setUseDriverProperties(false);
      sQLAlias1.getDriverPropertiesClone();
      sQLAlias0.getDriverPropertiesClone();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(vector0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)14;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte) (-77);
      byteArray0[5] = (byte)49;
      byteArray0[6] = (byte) (-69);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)14;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte) (-77);
      byteArray0[5] = (byte)49;
      byteArray0[6] = (byte) (-69);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "i2;");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(linkedList0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "max");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2003, 4);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, ")) from ", (String) null, "qAU[KjT8#p{]adt/J1R");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      CaseInsensitiveString caseInsensitiveString0 = new CaseInsensitiveString("LZVkB_tV");
      DBUtil.setLastStatementValues(" )");
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getExecutionLogFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFiles0.getUserPreferencesFile();
      applicationFileWrappersImpl1.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getLibraryDirectory();
      applicationFiles0.getDatabaseAliasesFile();
      applicationFileWrappersImpl1.getUpdateDirectory();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl1.getUserPreferencesFile();
      applicationFileWrappersImpl1.setApplicationFiles(applicationFiles0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getDatabaseAliasesTreeStructureFile();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl4 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl4.getUserPreferencesFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl5 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl6 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl6.getEditWhereColsFile();
      applicationFileWrappersImpl2.getUserSettingsDirectory();
      applicationFileWrappersImpl6.getLicenceFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DBUtil.typesAreEquivalent((-69), (-69));
      String string0 = " limit ? ?";
      String string1 = "#57)v1Y87zB";
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.setCopyForeignKeys(true);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      String string2 = "org.hibernate.lob.BlobImpl";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("#57)v1Y87zB", (String) null, "4o\"6d^z%i'$m", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 2001, "Wy\"fL-h>uo8BN_>$K6", 605, 62, (-1298), (-60), "#57)v1Y87zB", "Wy\"fL-h>uo8BN_>$K6", 605, 2001, "org.hibernate.lob.BlobImpl");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceDistinctDataType(229, tableColumnInfo0, (ISession) null);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("xK)kr", "xK)kr", "d!@zv]\"q", "xK)kr", (-5), "xK)kr", (-5), (-5), (-5), (-5), "xK)kr", "xK)kr", (-5), 1, "xK)kr");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.TABLE;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("defnault");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("yn_KN1kh[^A");
      DatabaseObjectType.createNewDatabaseObjectType("defnault", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("d!@zv]\"q", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("f!nLO$>o2>,*q,~5`,");
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      JInternalFrame jInternalFrame0 = new JInternalFrame("d!@zv]\"q");
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.CATALOG;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.OTHER;
      DatabaseObjectType databaseObjectType8 = DatabaseObjectType.createNewDatabaseObjectType("*M");
      DatabaseObjectType.createNewDatabaseObjectType("xK)kr");
      DatabaseObjectType databaseObjectType9 = DatabaseObjectType.UDF_TYPE_DBO;
      DatabaseObjectType databaseObjectType10 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("getCatSep: Unexpected Exception - ");
      DatabaseObjectType.createNewDatabaseObjectType("6@Sx>M$-V>Y+_", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType("6");
      DatabaseObjectType databaseObjectType11 = DatabaseObjectType.TRIGGER_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType8);
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql((SessionInfoProvider) null, tableColumnInfo0, "UW],", "UW],");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      String string0 = "(Tfy-Ya>SQ[\\tl*J";
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "(Tfy-Ya>SQ[\tl*J", "(Tfy-Ya>SQ[\tl*J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int int0 = 0;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dayofmonth", "", "", "", 0, "", 0, 0, 0, 0, "", "", (-631), 0, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      dBCopyPlugin0.getDestSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getSourceSession();
      byte[] byteArray0 = new byte[6];
      dBCopyPlugin1.getWebSite();
      byteArray0[0] = (byte)77;
      byteArray0[0] = (byte)0;
      byteArray0[3] = (byte) (-23);
      byteArray0[0] = (byte) (-112);
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin1.getDestDatabaseObject();
      dBCopyPlugin0.setSourceSession((ISession) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 1002, " imi^ ?", 1002, (byte) (-112), 582, (-1028), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 582, (-73), "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      DBCopyPlugin dBCopyPlugin4 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin5 = new DBCopyPlugin();
      dBCopyPlugin2.getSourceSession();
      dBCopyPlugin2.getSourceSession();
      dBCopyPlugin3.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.setPasteMenuEnabled(true);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2005);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "=BMnj2IC^x=4fgdGg", "com.jidesogt.plaf.metal.MetalMenuUI$MenuKeyHandlr", ")) from ", 1081);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = sQLAlias0.getSchemaProperties();
      sQLAlias0.setSchemaProperties(sQLAliasSchemaProperties0);
      String[] stringArray0 = new String[0];
      sQLAliasSchemaProperties0.getAllSchemaTableTypeCombinationsNotToBeCached(stringArray0, stringArray0);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias1.setName("org.apacheOlog4j.hlers.AboluteTimeteFormat");
      SQLAlias sQLAlias2 = new SQLAlias();
      SQLAlias sQLAlias3 = new SQLAlias();
      sQLAlias3.setUseDriverProperties(true);
      sQLAlias3.getDriverPropertiesClone();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("2994093:16e73aa80fe:-7cd4", uidIdentifier0.toString());
      
      SQLAlias sQLAlias4 = new SQLAlias();
      sQLAlias4.getDriverPropertiesClone();
      System.setCurrentTimeMillis(2);
      boolean boolean0 = DBUtil.typesAreEquivalent((-944), 50);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(783, 783);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      assertNull(dBUtil0.getLastStatementValues());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "org.apacheOlog4j.hlers.AbsoluteTimeateFormat", " ikXmit ?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "DefaultIntervalCateBoryDataset: the number of categories in the start value dataset does not match the number of categories in the end value dataset.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable("Contours only support one series", "~^R(H)kc", "SRye.qf.^", (ISession) null, false, 783);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
