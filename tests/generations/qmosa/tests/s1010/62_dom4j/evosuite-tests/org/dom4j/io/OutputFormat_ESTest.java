/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 07:42:05 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.dom4j.io.OutputFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutputFormat_ESTest extends OutputFormat_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.7366162102910074
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(6279);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      outputFormat1.setIndentSize((-1725503546));
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(false);
      String string0 = "=";
      outputFormat1.setIndent("=");
      outputFormat1.setLineSeparator("=");
      outputFormat0.getNewLineAfterNTags();
      // Undeclared exception!
      outputFormat0.setIndentSize(6279);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.6912719034000063
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[10];
      outputFormat0.setIndent(true);
      outputFormat0.setIndent((String) null);
      outputFormat0.setLineSeparator((String) null);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(1690);
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent((String) null);
      OutputFormat outputFormat1 = new OutputFormat("1");
      outputFormat0.setIndent("-expandEmptyS!p7#OJ7W");
      outputFormat0.setIndent("-expandEmptyS!p7#OJ7W");
      outputFormat0.parseOptions(stringArray0, 1690);
      outputFormat1.setIndent("Un,wba4jpEU--");
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.getLineSeparator();
      outputFormat1.setIndent("-xhtml1");
      assertEquals("-xhtml1", outputFormat1.getIndent());
      
      OutputFormat outputFormat2 = new OutputFormat("Un,wba4jpEU--", true, "-xhtlgty_");
      outputFormat2.setIndent("Un,wba4jpEU--");
      outputFormat0.parseOptions(stringArray0, 702);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.1098537331681326
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "P}`/UhyvF!zTc ";
      stringArray0[1] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray0[2] = "-xhtml-trimTex";
      stringArray0[3] = "-padText";
      stringArray0[4] = "-padText";
      stringArray0[5] = "W'7CZb<aG!x@";
      int int0 = 39;
      outputFormat0.parseOptions(stringArray0, 5648);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 5648);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1223091915));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1223091915
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1265386804514934
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[1] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray0[2] = "-htl-trmTex";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray1[1] = "-htl-trmTex";
      stringArray1[3] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray1[4] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray0[3] = "-xhtml>$bl6Pv[aO5RX4L";
      OutputFormat outputFormat0 = new OutputFormat("pYm00aq&>?zZa^r|Z", false, "i59=s#1nQ=`\"_Vw#^WE");
      OutputFormat outputFormat1 = new OutputFormat("-xhtml>$bl6Pv[aO5RX4L", false, "itMrcdy0J}:Pf,mE");
      String[] stringArray2 = new String[8];
      stringArray2[0] = "-encoding";
      stringArray2[1] = "-htl-trmTex";
      stringArray2[2] = "-newlines";
      stringArray2[3] = "pYm00aq&>?zZa^r|Z";
      stringArray2[4] = "i59=s#1nQ=`\"_Vw#^WE";
      stringArray2[5] = "i59=s#1nQ=`\"_Vw#^WE";
      stringArray2[6] = "pYm00aq&>?zZa^r|Z";
      stringArray2[7] = "pYm00aq&>?zZa^r|Z";
      outputFormat1.parseOptions(stringArray2, 2);
      String[] stringArray3 = new String[5];
      stringArray3[0] = "-encoding";
      stringArray3[1] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray3[2] = "-encoding";
      stringArray3[3] = "-htl-trmTex";
      stringArray3[4] = "-htl-trmTex";
      int int0 = outputFormat0.parseOptions(stringArray3, 0);
      assertEquals("-htl-trmTex", outputFormat0.getEncoding());
      assertEquals(4, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1003299236443231
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "";
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true, "");
      String string1 = "-xhtmlyW\\Woggqtja#&F";
      String[] stringArray0 = new String[7];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-trimText";
      stringArray0[3] = "";
      stringArray0[4] = "-expandEmpty";
      stringArray0[5] = "";
      stringArray0[6] = "pJ.M.n3R)at";
      outputFormat0.parseOptions(stringArray0, 860);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 1);
      int int0 = 1;
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1898));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1898
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.624819545994514
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(411);
      outputFormat0.setIndentSize(411);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setLineSeparator("=");
      outputFormat0.setNewLineAfterNTags(411);
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(411);
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setIndent("=");
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setIndent("-xhtlgty_");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtlgty_";
      stringArray0[2] = "=";
      stringArray0[3] = "I~.%9>M}$c`#M";
      stringArray0[8] = "I~.%9>M}$c`#M";
      stringArray0[3] = "=";
      stringArray0[4] = "-xhtlgty_";
      stringArray0[7] = "=";
      stringArray0[8] = "-xhtlgty_";
      outputFormat0.parseOptions(stringArray0, 411);
      outputFormat0.setIndent("=");
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("-xhtlgty_");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.6824700836287203
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-indent");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "!n\"<H@{OX}8,se'Vpan";
      stringArray0[1] = "-indent";
      stringArray0[2] = "-indent";
      stringArray0[3] = "-indent";
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
      assertTrue(outputFormat1.isTrimText());
      assertTrue(outputFormat1.isPadText());
      assertTrue(outputFormat1.isNewlines());
      
      outputFormat0.parseOptions(stringArray0, 2);
      int int0 = outputFormat0.parseOptions(stringArray0, 2);
      assertEquals(4, int0);
      
      outputFormat0.parseOptions(stringArray0, 1006);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("-indent", outputFormat0.getIndent());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("UTF-8", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isNewlines());
      
      OutputFormat outputFormat2 = OutputFormat.createCompactFormat();
      assertFalse(outputFormat2.isXHTML());
      assertFalse(outputFormat2.isOmitEncoding());
      assertFalse(outputFormat2.isPadText());
      assertEquals("UTF-8", outputFormat2.getEncoding());
      assertFalse(outputFormat2.isSuppressDeclaration());
      assertTrue(outputFormat2.isTrimText());
      assertFalse(outputFormat2.isExpandEmptyElements());
      assertTrue(outputFormat2.isNewLineAfterDeclaration());
      assertEquals('\"', outputFormat2.getAttributeQuoteCharacter());
      assertFalse(outputFormat2.isNewlines());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3530331955650468
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimText", true, "-trimText");
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      outputFormat1.setIndentSize(3155);
      outputFormat1.setTrimText(true);
      outputFormat1.setIndent("-trimText");
      outputFormat0.setTrimText(true);
      outputFormat1.setIndent(false);
      outputFormat1.setIndent("-trimText");
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat2.setIndentSize(3155);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "fdJ2K\">Ucj^uXETi?A";
      stringArray0[1] = "-trimText";
      stringArray0[2] = "-suppressDeclaration";
      stringArray0[3] = "fdJ2K\">Ucj^uXETi?A";
      stringArray0[4] = "t~p&B0Hx#|~dk<";
      stringArray0[5] = "-suppressDeclaration";
      stringArray0[6] = "fdJ2K\">Ucj^uXETi?A";
      outputFormat1.parseOptions(stringArray0, 1);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.setIndent("X,~g<");
      // Undeclared exception!
      try { 
        outputFormat1.setAttributeQuoteCharacter(' ');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character ( )
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-indentSize";
      stringArray0[1] = "";
      stringArray0[2] = "k*{Ph}CcmA%dnnC/";
      stringArray0[3] = "k*{Ph}CcmA%dnnC/";
      OutputFormat outputFormat0 = new OutputFormat("-suppressDeclaration");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9396395458476661
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "-trimText";
      stringArray0[1] = ">Cl9[D']5N[";
      stringArray0[2] = "";
      stringArray0[3] = ">Cl9[D']5N[";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = 1743;
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1410));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1410
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setAttributeQuoteCharacter('\'');
      outputFormat0.setNewlines(true);
      String[] stringArray0 = new String[0];
      outputFormat0.getNewLineAfterNTags();
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertEquals('\'', char0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[14];
      stringArray0[0] = "-suppressDeclaration";
      stringArray0[4] = "-suppressDeclaration";
      stringArray0[3] = "-suppressDeclaration";
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.155940352319277
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setNewLineAfterNTags((-119514875));
      outputFormat0.setIndentSize((-1));
      outputFormat0.setIndentSize(2681);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setIndent(true);
      outputFormat0.setLineSeparator("=");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize((-119514875));
      outputFormat0.setIndent("-expandEmptyS!p7#OJ7W");
      assertEquals((-119514875), outputFormat0.getNewLineAfterNTags());
      
      OutputFormat outputFormat1 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtlgty_";
      stringArray0[1] = "]#@XOe7&>a3&";
      stringArray0[0] = "-expandEmptyS!p7#OJ7W";
      stringArray0[3] = "=";
      stringArray0[4] = "]#@XOe7&>a3&";
      stringArray0[5] = "-expandEmptyS!p7#OJ7W";
      stringArray0[6] = "]#@XOe7&>a3&";
      stringArray0[7] = "-expandEmptyS!p7#OJ7W";
      stringArray0[8] = "=";
      outputFormat1.parseOptions(stringArray0, 0);
      outputFormat1.setIndent("-xhtml-trimTWL@eet");
      assertTrue(outputFormat1.isExpandEmptyElements());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0265417307721494
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(411);
      outputFormat0.setIndentSize(411);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setLineSeparator("");
      outputFormat0.getNewLineAfterNTags();
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setIndent("");
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setIndent("-xhtlgty_");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtlgty_";
      stringArray0[2] = "";
      stringArray0[3] = "I~.%9>x}$1`_WAM";
      stringArray0[8] = "I~.%9>x}$1`_WAM";
      stringArray0[3] = "";
      stringArray0[4] = "-xhtlgty_";
      stringArray0[7] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndent("");
      outputFormat0.getLineSeparator();
      outputFormat0.setIndent("-xhtlgty_");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("hJg-HL,\u0007yDl-");
      outputFormat0.setIndent((String) null);
      outputFormat0.setIndent("vyIaD4z~tL@`5b-K`");
      outputFormat0.setIndent("aZASKZ  7Yy5gd");
      assertEquals("aZASKZ  7Yy5gd", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2137026173659393
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setNewLineAfterDeclaration(false);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "^";
      stringArray0[1] = "wf";
      stringArray0[2] = "3'DPjR]hm<:N|{'9";
      stringArray0[3] = "^";
      stringArray0[4] = "&>f7?0'>Jupz";
      stringArray0[5] = "wf";
      stringArray0[6] = "3'DPjR]hm<:N|{'9";
      stringArray0[7] = "wf";
      outputFormat0.parseOptions(stringArray0, 340);
      outputFormat0.parseOptions(stringArray0, 1572);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setSuppressDeclaration(true);
      String[] stringArray1 = new String[0];
      outputFormat0.parseOptions(stringArray1, 1572);
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(outputFormat0.isSuppressDeclaration());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.513925511018741
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("");
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      assertTrue(outputFormat1.isTrimText());
      
      outputFormat1.setTrimText(false);
      outputFormat1.setXHTML(false);
      outputFormat0.setExpandEmptyElements(false);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      outputFormat0.setOmitEncoding(false);
      stringArray0[3] = "";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setEncoding("");
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setTrimText(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.getEncoding();
      outputFormat1.isTrimText();
      outputFormat0.setIndentSize(0);
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.660253729511293
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.isNewlines();
      outputFormat0.getLineSeparator();
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator("2");
      outputFormat0.setLineSeparator("\n");
      outputFormat0.isOmitEncoding();
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\n";
      stringArray0[3] = "";
      stringArray0[4] = "\n";
      stringArray0[5] = "\n";
      stringArray0[6] = "\n";
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("D|bWynf^Nu.m");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.isTrimText();
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setExpandEmptyElements(true);
      int int0 = outputFormat0.parseOptions(stringArray0, 58);
      assertEquals("", outputFormat0.getIndent());
      assertEquals(58, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = true;
      OutputFormat outputFormat0 = new OutputFormat("", true, "");
      outputFormat0.isPadText();
      outputFormat0.setPadText(true);
      outputFormat0.setIndentSize((-1));
      outputFormat0.getIndent();
      boolean boolean1 = true;
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setEncoding("pg,MJOK");
      outputFormat0.setIndentSize((-1));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      outputFormat0.setIndent("AMRK\"");
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.119031859650177
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-encoding";
      stringArray0[1] = "-omitEncodin=";
      outputFormat0.parseOptions(stringArray0, 390);
      outputFormat0.parseOptions(stringArray0, 398);
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.parseOptions(stringArray0, 2);
      outputFormat0.parseOptions(stringArray0, 390);
      outputFormat0.parseOptions(stringArray0, 1894);
      outputFormat0.parseOptions(stringArray0, 423);
      outputFormat0.parseOptions(stringArray0, 401);
      outputFormat0.parseOptions(stringArray0, 390);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions((String[]) null, (-1969641517));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1610289807159075
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", false);
      outputFormat0.setIndent(false);
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.setNewlines(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(923);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat outputFormat1 = OutputFormat.createCompactFormat();
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      assertTrue(outputFormat0.isSuppressDeclaration());
      
      OutputFormat outputFormat2 = new OutputFormat();
      outputFormat1.setIndent("");
      outputFormat1.setEncoding("");
      outputFormat2.isNewLineAfterDeclaration();
      outputFormat1.isSuppressDeclaration();
      OutputFormat outputFormat3 = OutputFormat.createCompactFormat();
      assertEquals(0, outputFormat3.getNewLineAfterNTags());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.0757526498616046
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setPadText(false);
      outputFormat0.setExpandEmptyElements(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("!n\"<H@{OX}8,se'Vpan");
      outputFormat0.setTrimText(true);
      outputFormat0.setIndentSize((-1272));
      outputFormat0.setEncoding("!n\"<H@{OX}8,se'Vpan");
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setIndent("l&imKHF4M/+1YJh");
      assertEquals("l&imKHF4M/+1YJh", outputFormat0.getIndent());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[1] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray0[2] = "-xhtl-trimTx";
      String[] stringArray1 = new String[6];
      stringArray1[0] = "RpadText";
      stringArray1[1] = "RpadText";
      stringArray1[2] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray1[3] = "RpadText";
      stringArray1[4] = "-xhtml>$bl6Pv[aO5RX4L";
      stringArray1[5] = "-xhtml>$bl6Pv[aO5RX4L";
      OutputFormat outputFormat0 = new OutputFormat("pYm00aq&>?zZa^r|Z", false, "i59=s#1nQ=`\"_Vw#^WE");
      outputFormat0.setIndent("b5'G#~i|Jglc~EhP=");
      assertEquals("b5'G#~i|Jglc~EhP=", outputFormat0.getIndent());
      
      String string0 = OutputFormat.STANDARD_INDENT;
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      assertFalse(outputFormat0.isXHTML());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String string0 = null;
      OutputFormat outputFormat0 = new OutputFormat((String) null, false, (String) null);
      outputFormat0.getEncoding();
      outputFormat0.setNewLineAfterNTags(1);
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('Z');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (Z)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.7156338174862886
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[14];
      stringArray0[0] = "-trimcext";
      stringArray0[4] = "-trimcext";
      stringArray0[4] = "-trimcext";
      outputFormat0.parseOptions(stringArray0, 0);
      int int0 = 1743;
      outputFormat0.parseOptions(stringArray0, 0);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-1410));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1410
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.310452696749253
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat((String) null);
      outputFormat0.getIndent();
      outputFormat0.setEncoding((String) null);
      outputFormat0.setLineSeparator(")lpa");
      outputFormat0.getLineSeparator();
      outputFormat0.setPadText(true);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterNTags(1328);
      String[] stringArray0 = new String[1];
      outputFormat0.setIndent(true);
      outputFormat0.setIndent("");
      stringArray0[0] = null;
      outputFormat0.parseOptions(stringArray0, 1328);
      outputFormat0.isTrimText();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent(")lpa");
      outputFormat0.getEncoding();
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isSuppressDeclaration();
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setTrimText(false);
      outputFormat0.isNewLineAfterDeclaration();
      outputFormat0.setNewlines(true);
      outputFormat0.setNewlines(false);
      assertEquals(")lpa", outputFormat0.getIndent());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3823452227303257
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.setIndent("");
      assertEquals("\n", outputFormat0.getLineSeparator());
      
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":_b|>_!YbV[,1c", true, "");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(1417);
      outputFormat0.setIndent("-expandEmpty-xhtmlyWWoggqtja#&F");
      outputFormat0.getIndent();
      assertEquals("-expandEmpty-xhtmlyWWoggqtja#&F", outputFormat0.getIndent());
      
      outputFormat0.setIndent((String) null);
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.2874021458321825
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      outputFormat0.setOmitEncoding(false);
      outputFormat0.setNewlines(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setEncoding("H{VSiz");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isOmitEncoding();
      outputFormat0.setNewLineAfterNTags((-2410));
      outputFormat0.setSuppressDeclaration(false);
      outputFormat0.getIndent();
      outputFormat0.setNewLineAfterNTags(2);
      outputFormat0.setXHTML(false);
      outputFormat0.setIndent(true);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.isPadText();
      outputFormat0.setIndent("  ");
      String[] stringArray0 = new String[0];
      int int0 = outputFormat0.parseOptions(stringArray0, 1);
      assertEquals("H{VSiz", outputFormat0.getEncoding());
      assertEquals(1, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("p+bXF7^]R6j0uc>:95", false, "{OiEL.Z6=");
      outputFormat0.setEncoding((String) null);
      assertFalse(outputFormat0.isNewlines());
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertEquals("{OiEL.Z6=", outputFormat0.getEncoding());
      assertFalse(outputFormat0.isXHTML());
      assertEquals('\"', outputFormat0.getAttributeQuoteCharacter());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isPadText());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("p+bXF7^]R6j0uc>:95", outputFormat0.getIndent());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isTrimText());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9557135998277697
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat(":_b|>_!YbV[,1c", true, "");
      assertFalse(outputFormat0.isOmitEncoding());
      
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setIndentSize(1416);
      outputFormat0.setIndent("");
      outputFormat0.getIndent();
      outputFormat0.setIndent((String) null);
      assertTrue(outputFormat0.isOmitEncoding());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("i34", false, "");
      outputFormat0.setXHTML(false);
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setXHTML(true);
      outputFormat0.setPadText(false);
      boolean boolean0 = outputFormat0.isTrimText();
      assertTrue(outputFormat0.isXHTML());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1816633428102712
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-expandEmpty";
      stringArray0[1] = "-omitEncoding";
      stringArray0[2] = "-trimText";
      stringArray0[4] = "-expandEmpty";
      stringArray0[5] = "";
      stringArray0[6] = "pJ.M.n3R)at";
      outputFormat0.parseOptions(stringArray0, 860);
      outputFormat0.parseOptions(stringArray0, 39);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4169372058999015
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("T<iyAR-s0dQ^Uy", true, "T<iyAR-s0dQ^Uy");
      outputFormat0.setIndent("/fzumQK,y${B4!Xg2");
      outputFormat0.setIndent("");
      outputFormat0.setIndent(true);
      outputFormat0.setIndent(".;|BQiM~aA=Bz");
      outputFormat0.setIndent("/fzumQK,y${B4!Xg2");
      outputFormat0.setIndent("-xhtlg");
      assertEquals("-xhtlg", outputFormat0.getIndent());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.1584919828300726
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createCompactFormat();
      outputFormat0.setIndentSize((-1359));
      outputFormat0.setExpandEmptyElements(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setEncoding("D:WKyI]{6+)uoONO&MM");
      outputFormat0.isOmitEncoding();
      outputFormat0.isExpandEmptyElements();
      outputFormat0.getAttributeQuoteCharacter();
      outputFormat0.isOmitEncoding();
      outputFormat0.setIndent(false);
      outputFormat0.setIndent("");
      assertEquals("D:WKyI]{6+)uoONO&MM", outputFormat0.getEncoding());
      
      OutputFormat outputFormat1 = OutputFormat.createPrettyPrint();
      assertEquals("  ", outputFormat1.getIndent());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-xhtlgty_";
      stringArray0[2] = "=";
      stringArray0[3] = "I~.%9>x}$1`_WAM";
      stringArray0[8] = "I~.%9>x}$1`_WAM";
      stringArray0[3] = "=";
      stringArray0[4] = "-xhtlgty_";
      stringArray0[7] = "=";
      stringArray0[8] = "-xhtlgty_";
      OutputFormat outputFormat0 = new OutputFormat("8OX:-<(A8", true, "-xhtlgty_");
      char char0 = outputFormat0.getAttributeQuoteCharacter();
      assertFalse(outputFormat0.isExpandEmptyElements());
      assertTrue(outputFormat0.isNewLineAfterDeclaration());
      assertFalse(outputFormat0.isTrimText());
      assertTrue(outputFormat0.isNewlines());
      assertFalse(outputFormat0.isXHTML());
      assertFalse(outputFormat0.isPadText());
      assertEquals(0, outputFormat0.getNewLineAfterNTags());
      assertFalse(outputFormat0.isOmitEncoding());
      assertEquals("8OX:-<(A8", outputFormat0.getIndent());
      assertFalse(outputFormat0.isSuppressDeclaration());
      assertEquals('\"', char0);
      assertEquals("\n", outputFormat0.getLineSeparator());
      assertEquals("-xhtlgty_", outputFormat0.getEncoding());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=3.2261349694724135
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("", true);
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setXHTML(false);
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setIndentSize(923);
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.setIndent("");
      outputFormat0.setIndentSize(0);
      outputFormat0.setNewLineAfterDeclaration(false);
      OutputFormat.createPrettyPrint();
      String[] stringArray0 = new String[0];
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setIndentSize(157);
      outputFormat0.setEncoding("");
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.isExpandEmptyElements();
      outputFormat0.setLineSeparator("?B?aIZ9.K|~;K}AG");
      assertEquals("?B?aIZ9.K|~;K}AG", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.512607119456447
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndent(true);
      outputFormat0.setPadText(true);
      outputFormat0.isNewlines();
      outputFormat0.getLineSeparator();
      outputFormat0.isOmitEncoding();
      outputFormat0.setLineSeparator("");
      outputFormat0.setLineSeparator("\n");
      outputFormat0.isOmitEncoding();
      outputFormat0.getLineSeparator();
      String[] stringArray0 = new String[7];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\n";
      stringArray0[3] = "";
      stringArray0[4] = "\n";
      stringArray0[5] = "\n";
      stringArray0[6] = "\n";
      outputFormat0.parseOptions(stringArray0, 0);
      outputFormat0.setLineSeparator("D|bWynf^Nu.m");
      outputFormat0.setOmitEncoding(true);
      outputFormat0.setTrimText(true);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndentSize(0);
      outputFormat0.isTrimText();
      outputFormat0.setExpandEmptyElements(true);
      assertEquals("D|bWynf^Nu.m", outputFormat0.getLineSeparator());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-xhtm=J=xMb}RUDfiE.x", true, "-trimTWFext");
      assertFalse(outputFormat0.isExpandEmptyElements());
      
      outputFormat0.setExpandEmptyElements(true);
      assertTrue(outputFormat0.isExpandEmptyElements());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.68478541691352
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      OutputFormat outputFormat0 = OutputFormat.createPrettyPrint();
      boolean boolean0 = true;
      outputFormat0.setSuppressDeclaration(true);
      outputFormat0.setAttributeQuoteCharacter('\"');
      outputFormat0.setPadText(false);
      outputFormat0.setExpandEmptyElements(false);
      String string0 = "!n\"<H@{OX}8,se'Vpan";
      outputFormat0.setOmitEncoding(false);
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('p');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (p)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      // Undeclared exception!
      try { 
        outputFormat0.setAttributeQuoteCharacter('@');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid attribute quote character (@)
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.1073474675039723
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("-trimTex", true, "-trimTex");
      int int0 = 1526;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "-xhtmlyWWoggqtja#&F";
      stringArray0[1] = "-xhtmlyWWoggqtja#&F";
      stringArray0[2] = "-expandEmpty";
      stringArray0[3] = "-xhtmlyWWoggqtja#&F";
      stringArray0[4] = "-trimTex";
      outputFormat0.parseOptions(stringArray0, 1526);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 39);
      outputFormat0.parseOptions(stringArray0, 1);
      // Undeclared exception!
      try { 
        outputFormat0.parseOptions(stringArray0, (-3871));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3871
         //
         verifyException("org.dom4j.io.OutputFormat", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setIndentSize(3155);
      outputFormat0.setNewlines(false);
      outputFormat0.setIndent("[-V;rZ");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-expa\"dEmpty";
      stringArray0[1] = "uiKhSJG50LwX)";
      stringArray0[2] = "-expa\"dEmpty";
      outputFormat0.setIndent("-indentSize");
      assertEquals("-indentSize", outputFormat0.getIndent());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(false);
      outputFormat0.setXHTML(true);
      outputFormat0.setNewLineAfterDeclaration(true);
      outputFormat0.setLineSeparator("");
      outputFormat0.setNewLineAfterDeclaration(false);
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isXHTML();
      assertFalse(outputFormat0.isNewLineAfterDeclaration());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      outputFormat0.setXHTML(true);
      outputFormat0.setTrimText(true);
      outputFormat0.isPadText();
      outputFormat0.isXHTML();
      boolean boolean0 = outputFormat0.isXHTML();
      assertTrue(outputFormat0.isTrimText());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.104316458229271
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat("}nP?=~q,k<&2o[U:hO", true, "-trimTW@ext");
      assertFalse(outputFormat0.isXHTML());
      
      String[] stringArray0 = new String[4];
      stringArray0[3] = "-xhtmlyWWoggqtja#&F";
      String[] stringArray1 = new String[7];
      stringArray1[0] = "}nP?=~q,k<&2o[U:hO";
      stringArray1[1] = "-lineSeparator";
      stringArray1[2] = "-trimTW@ext";
      stringArray1[3] = "-xhtmlyWWoggqtja#&F";
      stringArray1[4] = "-trimTW@ext";
      stringArray1[5] = "-xhtmlyWWog";
      stringArray1[6] = "}nP?=~q,k<&2o[U:hO";
      int int0 = outputFormat0.parseOptions(stringArray1, 1);
      assertTrue(outputFormat0.isXHTML());
      assertEquals(4, int0);
  }
}
