/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 10:12:04 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Dialog;
import java.awt.HeadlessException;
import java.awt.Window;
import java.awt.event.HierarchyBoundsListener;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.io.StringReader;
import java.util.Locale;
import java.util.Stack;
import javax.swing.JApplet;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLayeredPane;
import javax.swing.JMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JSpinner;
import javax.swing.JTextPane;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.DocumentEvent;
import javax.swing.plaf.metal.MetalRootPaneUI;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.GapContent;
import javax.swing.text.PlainDocument;
import javax.swing.text.Segment;
import javax.swing.text.StringContent;
import javax.swing.text.Style;
import javax.swing.text.StyleContext;
import javax.swing.undo.UndoManager;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopNode;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSListLogicalAtoms;
import umd.cs.shop.JSPairPlanTSListNodes;
import umd.cs.shop.JSPlanningDomain;
import umd.cs.shop.JSTaskAtom;
import umd.cs.shop.JSTasks;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.548862196705434
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = 2263L;
      System.setCurrentTimeMillis(2263L);
      System.setCurrentTimeMillis((-266L));
      String string0 = "5g)eVL3{t";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("5g)eVL3{t");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop("5g)eVL3{t", "5g)eVL3{t");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "5g)eVL3{t";
      stringArray0[1] = "5g)eVL3{t";
      JSJshop.main(stringArray0);
      StreamTokenizer streamTokenizer0 = null;
      try {
        streamTokenizer0 = new StreamTokenizer((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Goal matches axio:";
      JSJshop jSJshop0 = new JSJshop();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Expecting constant symbol as term/G2MD,(Ew%r,A0");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[2] = (byte)0;
      byteArray0[0] = (byte) (-1);
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte) (-4);
      byteArray0[1] = (byte)45;
      byteArray0[7] = (byte)2;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("Expecting constant symbol as term", "G2MD,(Ew%r,A0", (JApplet) null);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext styleContext2 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle(styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext1.new NamedStyle("Expecting constant symbol as term", styleContext_NamedStyle1);
      AttributeSet attributeSet0 = styleContext2.removeAttribute(styleContext_NamedStyle2, styleContext_NamedStyle1);
      styleContext2.getFont(attributeSet0);
      DefaultStyledDocument defaultStyledDocument1 = new DefaultStyledDocument(styleContext2);
      defaultStyledDocument0.getBidiRootElement();
      PlainDocument plainDocument0 = null;
      try {
        plainDocument0 = new PlainDocument((AbstractDocument.Content) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.nval = (double) (-4);
      streamTokenizer0.nval = streamTokenizer0.nval;
      pipedReader0.close();
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.ordinaryChars(0, 0);
      streamTokenizer0.slashSlashComments(true);
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer0.ordinaryChar(0);
      streamTokenizer0.pushBack();
      JSJshopVars.leftPar = (-4);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "09io.ur'");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "vo{ACe71");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "umd.cs.shop.JSListSubstitution");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-125);
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)92;
      byteArray0[8] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Object object0 = new Object();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.549994923610415
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "&[|=pe!");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "&[|=pe!");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "|@Ho~DArv");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "&[|=pe!");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Object object0 = new Object();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(2263L);
      System.setCurrentTimeMillis((-266L));
      String string0 = "5g)eVL3{t";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("5g)eVL3{t");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)45;
      byteArray0[2] = (byte)82;
      byteArray0[3] = (byte) (-2);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)88;
      byteArray0[8] = (byte)19;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("5g)eVL3{t", (String) null);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5461447460085638
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      String string0 = "|MX]:w+TZ";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "|MX]:w+TZ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)34;
      byteArray0[3] = (byte) (-48);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      JSJshop jSJshop0 = new JSJshop();
      JSJshop.applet = null;
      JSJshopVars.interrogation = (int) (byte)92;
      Object object0 = new Object();
      jSJshop0.testParser();
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("|MX]:w+TZ");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-266L));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "4Vvq(n`WC(.oT ~vU{");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "4Vvq(n`WC(.oT ~vU{");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.whiteSpace = (-3218);
      JSJshopVars.rightPar = 0;
      JSJshopVars.flagLevel = (-3218);
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5425058673927379
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "|MX]:w+TZ");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, ", ");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)62;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5461447460085638
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(2263L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "jzj`zn");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "FophuRn=4;g]R=");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "fp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "********* list-tree FINAL SOLUTION*******");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      Object object0 = new Object();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5269305453414023
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, " java jsjshop <domaindef-file-name> <problemdef-file-name> [number-of-flans]");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "/6?}{SK|6:*y[r\"IAC");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)92;
      byteArray0[3] = (byte)92;
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)92;
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      Object object0 = new Object();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ordinaryChar(59);
      streamTokenizer0.ttype = 59;
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5390607984547411
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "`?Z 5l/a3Fxrz");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "`EIm|3x5&9+");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-48);
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte)41;
      byteArray0[4] = (byte) (-48);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Object object0 = new Object();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "To:";
      stringArray0[1] = "To:";
      stringArray0[2] = "To:";
      stringArray0[3] = "To:";
      JSJshop.main(stringArray0);
      StringReader stringReader0 = new StringReader("ZINjG7)tM");
      UndoManager undoManager0 = new UndoManager();
      MenuSelectionManager.defaultManager();
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      MetalRootPaneUI metalRootPaneUI1 = new MetalRootPaneUI();
      assertFalse(metalRootPaneUI1.equals((Object)metalRootPaneUI0));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String[] stringArray0 = new String[3];
      stringArray0[1] = " goal does not matchSany atom.";
      jSJshop0.getBufferedReader("h0qQDrB$WGs9&B![fO", stringArray0[0], (JApplet) null);
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument(styleContext0);
      // Undeclared exception!
      try { 
        defaultStyledDocument0.removeStyle("',Lv[]rg(c2");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.text.StyleContext$NamedStyle cannot be cast to javax.swing.JSpinner
         //
         verifyException("javax.swing.JSpinner$DefaultEditor", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "/6?}{SK|6:*y[w\"IAC";
      String string1 = "5g)evl3{t";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("!Ps)d|oL8");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5g)evl3{t");
      JInternalFrame jInternalFrame0 = new JInternalFrame("/6?}{SK|6:*y[w\"IAC");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("!Ps)d|oL8", "mrmc35p4Pv");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      System.setCurrentTimeMillis((-266L));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Ap";
      stringArray0[1] = "Ap";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JApplet jApplet0 = JSJshop.applet;
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.prob();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      Locale locale0 = null;
      try {
        locale0 = new Locale((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Goal matches axiom:";
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = JSJshop.applet;
      jSJshop0.getBufferedReader("Expecting constant symbol as term", "G2MD,(Ew%r,A0", (JApplet) null);
      int int0 = 46;
      int int1 = 3;
      SpinnerNumberModel spinnerNumberModel0 = new SpinnerNumberModel(46, 46, 46, 3);
      // Undeclared exception!
      try { 
        spinnerNumberModel0.setStepSize((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null stepSize
         //
         verifyException("javax.swing.SpinnerNumberModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      System.setCurrentTimeMillis(2263L);
      System.setCurrentTimeMillis((-266L));
      JSJshop jSJshop0 = new JSJshop();
      JSJshopNode jSJshopNode0 = jSJshop0.tree();
      assertNull(jSJshopNode0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.slashSlashComments(false);
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.interrogation = 1482;
      JSJshopVars.flagLevel = 1482;
      boolean boolean0 = jSJshop0.parserFile("(bxW9GqLH#");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[2] = "Ap";
      StyleContext styleContext0 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      JSpinner jSpinner0 = new JSpinner();
      jSpinner0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      JSpinner jSpinner1 = new JSpinner();
      JSpinner jSpinner2 = new JSpinner();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getTree();
      JSpinner jSpinner3 = new JSpinner();
      JSpinner.DateEditor jSpinner_DateEditor0 = null;
      try {
        jSpinner_DateEditor0 = new JSpinner.DateEditor(jSpinner0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // model not a SpinnerDateModel
         //
         verifyException("javax.swing.JSpinner$DateEditor", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[1];
      JSJshop.main(stringArray0);
      Segment segment0 = new Segment();
      String string0 = "9LammU A/MrjV RCD";
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("9LammU A/MrjV RCD");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.nval = (double) (-4);
      pipedReader0.close();
      streamTokenizer0.slashSlashComments(true);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(pipedReader0);
      streamTokenizer1.ordinaryChars((-2), (-2));
      streamTokenizer1.slashSlashComments(true);
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer1.ordinaryChar(44);
      streamTokenizer0.pushBack();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = "Ap";
      stringArray0[2] = "Ap";
      JSJshop.main(stringArray0);
      GapContent gapContent0 = new GapContent((-2));
      JTextPane jTextPane0 = new JTextPane();
      Style style0 = jTextPane0.getLogicalStyle();
      StyleContext styleContext0 = StyleContext.getDefaultStyleContext();
      // Undeclared exception!
      try { 
        styleContext0.addStyle("Ap", style0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.swing.text.StyleContext$NamedStyle cannot be cast to javax.swing.JSpinner
         //
         verifyException("javax.swing.JSpinner$DefaultEditor", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringContent stringContent0 = new StringContent();
      PlainDocument plainDocument0 = new PlainDocument(stringContent0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.INSERT;
      GapContent gapContent0 = new GapContent();
      PlainDocument plainDocument1 = new PlainDocument(gapContent0);
      DocumentEvent.EventType documentEvent_EventType1 = DocumentEvent.EventType.REMOVE;
      PlainDocument plainDocument2 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType2 = DocumentEvent.EventType.INSERT;
      DefaultStyledDocument defaultStyledDocument0 = new DefaultStyledDocument();
      documentEvent_EventType2.toString();
      plainDocument0.createPosition(885);
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument0.new DefaultDocumentEvent(885, 2, documentEvent_EventType2);
      Stack<String> stack0 = new Stack<String>();
      JSTasks jSTasks0 = new JSTasks();
      JSPlanningDomain jSPlanningDomain0 = jSJshop0.dom();
      assertNull(jSPlanningDomain0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[2] = "-: ";
      JSJshop.main(stringArray0);
      StringReader stringReader0 = new StringReader("a](v");
      UndoManager undoManager0 = new UndoManager();
      MenuSelectionManager.defaultManager();
      JButton jButton0 = new JButton("-: ");
      MetalRootPaneUI metalRootPaneUI0 = new MetalRootPaneUI();
      MetalRootPaneUI metalRootPaneUI1 = new MetalRootPaneUI();
      Stack<String> stack0 = new Stack<String>();
      assertEquals(10, stack0.capacity());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("5g)eVL3{t");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop("5g)eVL3{t", "5g)eVL3{t");
      StyleContext styleContext0 = new StyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle0 = styleContext0.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle1 = styleContext0.new NamedStyle("[", styleContext_NamedStyle0);
      StyleContext.NamedStyle styleContext_NamedStyle2 = styleContext0.new NamedStyle(styleContext_NamedStyle1);
      StyleContext styleContext1 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle3 = styleContext1.new NamedStyle();
      StyleContext.NamedStyle styleContext_NamedStyle4 = styleContext0.new NamedStyle();
      StyleContext styleContext2 = StyleContext.getDefaultStyleContext();
      StyleContext.NamedStyle styleContext_NamedStyle5 = styleContext2.new NamedStyle();
      JTextPane jTextPane0 = new JTextPane();
      JTextPane jTextPane1 = new JTextPane();
      StyleContext.NamedStyle styleContext_NamedStyle6 = styleContext2.new NamedStyle(styleContext_NamedStyle1);
      StyleContext styleContext3 = new StyleContext();
      // Undeclared exception!
      try { 
        jSJshop0.setFile("[", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = " goal doer not match ant atom.";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop(" goal doer not match ant atom.", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Segment segment0 = new Segment();
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.sol();
      String string0 = "9LammU A/MrjV RCD";
      JFrame jFrame0 = null;
      try {
        jFrame0 = new JFrame("9LammU A/MrjV RCD");
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getAddList();
      int int0 = (-3);
      long long0 = 1L;
      int int1 = (-22);
      int int2 = 42;
      int int3 = 5825;
      int int4 = 782;
      boolean boolean0 = false;
      MenuElement[] menuElementArray0 = new MenuElement[22];
      JMenu jMenu0 = new JMenu();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("\u0002V#VF4[F ]&", false);
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem0;
      jMenu0.getInsets();
      Dialog.ModalityType dialog_ModalityType0 = Dialog.ModalityType.APPLICATION_MODAL;
      JDialog jDialog0 = null;
      try {
        jDialog0 = new JDialog((Window) null, "\u0002V#VF4[F ]&", dialog_ModalityType0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.lowerCaseMode(true);
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.nval = (double) (-4);
      streamTokenizer0.slashSlashComments(false);
      streamTokenizer0.slashSlashComments(true);
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "/6?}{SK|6:*y[w\"IAC";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("/6?}{SK|6:*y[w\"IAC", "/6?}{SK|6:*y[w\"IAC");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.ordinaryChar((-4));
      streamTokenizer0.nval = (double) (-4);
      streamTokenizer0.nval = streamTokenizer0.nval;
      streamTokenizer0.slashSlashComments(true);
      streamTokenizer0.ordinaryChars(92, 0);
      streamTokenizer0.slashSlashComments(true);
      JSJshop jSJshop0 = new JSJshop();
      streamTokenizer0.pushBack();
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("k", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringContent stringContent0 = new StringContent();
      PlainDocument plainDocument0 = new PlainDocument(stringContent0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      GapContent gapContent0 = new GapContent();
      PlainDocument plainDocument1 = new PlainDocument(gapContent0);
      DocumentEvent.EventType documentEvent_EventType1 = DocumentEvent.EventType.REMOVE;
      PlainDocument plainDocument2 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType2 = DocumentEvent.EventType.INSERT;
      plainDocument1.setAsynchronousLoadPriority(885);
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument1.new DefaultDocumentEvent(885, 3, documentEvent_EventType2);
      JSJshop jSJshop1 = new JSJshop();
      JSJshop jSJshop2 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop2.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String[] stringArray0 = new String[8];
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringContent stringContent0 = new StringContent();
      PlainDocument plainDocument0 = new PlainDocument(stringContent0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      GapContent gapContent0 = new GapContent();
      PlainDocument plainDocument1 = new PlainDocument(gapContent0);
      DocumentEvent.EventType documentEvent_EventType1 = DocumentEvent.EventType.REMOVE;
      PlainDocument plainDocument2 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType2 = DocumentEvent.EventType.INSERT;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument1.new DefaultDocumentEvent(885, 3, documentEvent_EventType2);
      Stack<String> stack0 = new Stack<String>();
      JSListLogicalAtoms jSListLogicalAtoms0 = jSJshop0.getDeleteList();
      assertNull(jSListLogicalAtoms0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringContent stringContent0 = new StringContent();
      PlainDocument plainDocument0 = new PlainDocument(stringContent0);
      DocumentEvent.EventType documentEvent_EventType0 = DocumentEvent.EventType.REMOVE;
      GapContent gapContent0 = new GapContent();
      PlainDocument plainDocument1 = new PlainDocument(stringContent0);
      DocumentEvent.EventType documentEvent_EventType1 = DocumentEvent.EventType.REMOVE;
      PlainDocument plainDocument2 = new PlainDocument();
      DocumentEvent.EventType documentEvent_EventType2 = DocumentEvent.EventType.INSERT;
      AbstractDocument.DefaultDocumentEvent abstractDocument_DefaultDocumentEvent0 = plainDocument0.new DefaultDocumentEvent((-1075826758), 0, documentEvent_EventType2);
      Stack<String> stack0 = new Stack<String>();
      JSPairPlanTSListNodes jSPairPlanTSListNodes0 = jSJshop0.getSolution();
      assertNull(jSPairPlanTSListNodes0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
