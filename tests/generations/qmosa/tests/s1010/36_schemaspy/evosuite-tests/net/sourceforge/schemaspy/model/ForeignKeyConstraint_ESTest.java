/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 09:21:42 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.LinkedList;
import java.util.List;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.Database;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import net.sourceforge.schemaspy.view.DefaultSqlFormatter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-686L));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 0, 1);
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(0, int0);
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", foreignKeyConstraint0.getDeleteRuleDescription());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1745, 20);
      config0.setEvaluateAllEnabled(true);
      Config config2 = new Config();
      Config config3 = new Config();
      config3.setConnectionProperties("Uv^y4w$[NQxZ5w)");
      config3.getSchemas();
      config3.getSchemaSpec();
      config3.setFontSize((-1592));
      Config config4 = new Config();
      config4.isRailsEnabled();
      config3.getServer();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      Config config5 = new Config(stringArray0);
      Config config6 = new Config();
      config6.getDescription();
      config6.setHasOrphans(false);
      config5.setFont("");
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      config4.setMaxDetailedTabled(569);
      config1.isLowQuality();
      Config config7 = new Config();
      boolean boolean1 = foreignKeyConstraint0.isReal();
      assertFalse(boolean1 == boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals(1745, int0);
      
      foreignKeyConstraint0.getName();
      assertEquals(20, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SystemInUtil.addInputLine("yUwb{pT8(d3u");
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      linkedList0.add(tableColumn1);
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      tableColumn1.setShortType("yUwb{pT8(d3u");
      tableColumn1.setComments("dbthreads");
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, ";j^8Sm`^*uS0", 2, 2);
      foreignKeyConstraint0.getParentColumns();
      System.setCurrentTimeMillis(855L);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-2679), (-2679));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A2Y3ogW<IRx}W9W&/p");
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      ForeignKeyConstraint.toString(list0);
      foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-D/!");
      foreignKeyConstraint0.getName();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "vS{tV[:)dX1h:8@W", 3223, 3);
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      String string0 = ",Ew";
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSet) null).when(databaseMetaData0).getTables(anyString() , anyString() , anyString() , any(java.lang.String[].class));
      Database database0 = null;
      try {
        database0 = new Database(config0, connection0, databaseMetaData0, ",Ew", ",Ew", ",Ew", (SchemaMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.Database", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5280883009539776
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 4107, 3);
      Config.getInstance();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(4107, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.8298249359591239
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]d3u", 1098, 0);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      System.setCurrentTimeMillis((-738L));
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean1 == boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Cascade on delete", string0);
      assertEquals(1098, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 4359;
      int int1 = 0;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "bUwb{pT8U]d3u", 4359, 0);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getDeleteRule();
      ForeignKeyConstraint.toString(list0);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint.toString(list0);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]d3u", 4107, 2);
      Config.getInstance();
      foreignKeyConstraint0.getDeleteRuleDescription();
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(4107);
      System.setCurrentTimeMillis(4107);
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      Config config2 = new Config();
      Integer integer0 = new Integer(11);
      config1.setPort(integer0);
      Config config3 = new Config();
      config3.setConnectionProperties("UTF-8");
      config3.getSchemas();
      config2.getFontSize();
      String[] stringArray0 = new String[4];
      config1.setDbType("UTF-8");
      stringArray0[3] = "UTF-8";
      stringArray0[1] = "UTF-8";
      config2.setServer("UTF-8");
      config0.getDbProperties();
      config3.setCss("UTF-8");
      config0.setCss("UTF-8");
      stringArray0[3] = "UTF-8";
      config0.getSchemaSpec();
      config3.getFontSize();
      config1.setFont("UTF-8");
      config0.getMaxDetailedTables();
      config2.setUser("UTF-8");
      config2.getSchemaSpec();
      stringArray0[2] = "UTF-8";
      Config config4 = new Config();
      config1.setSchemaSpec("UTF-8");
      config2.setMaxDetailedTabled(11);
      Config config5 = new Config();
      config1.setConnectionProperties("UTF-8");
      Config config6 = new Config();
      config5.setSqlFormatter("UTF-8");
      config4.setOutputDir("UTF-8");
      config1.isMeterEnabled();
      Config.setInstance(config0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 300, 300);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "{YPkD", 11, (-13));
      int int0 = foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      assertEquals((-13), foreignKeyConstraint1.getDeleteRule());
      assertEquals(11, foreignKeyConstraint1.getUpdateRule());
      assertEquals((-6), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-13), (-13));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "uF: =mInP}2|'", (-1810), (-13));
      foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yUwb{pT8]d3u");
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "C");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "uF: =mInP}2|'");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "EEE MMM dd HH:mm z yyyy", (-786), (-786));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "+eh|");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      foreignKeyConstraint0.isCascadeOnDelete();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tale_name");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z6Yv1.CCo]8;");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=yB@\"1Y8U5~Qh}:E5");
      System.setCurrentTimeMillis((-786));
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.0343946195677223
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]d3u", 4107, 2);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentColumns();
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean0);
      
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(2);
      boolean boolean1 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean1);
      
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals(4107, foreignKeyConstraint0.getUpdateRule());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]d3u", 4359, 1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Config config0 = Config.getInstance();
      config0.isMeterEnabled();
      SystemInUtil.addInputLine("");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".meta.xml");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "yUwb{pT8]d3u");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-66);
      byteArray0[3] = (byte)2;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      assertEquals(4359, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2508570947192674
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "ywb{pT8]b3u", 1098, 0);
      Config.getInstance();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleDescription();
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(1098, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Cascade on delete:\n Deletion of parent deletes child", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Config config0 = new Config();
      config0.isLowQuality();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 0, 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(0, foreignKeyConstraint0.getUpdateRule());
      assertEquals("C", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "EEE MMM dd HH:mm z yyyy", (-786), (-786));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      foreignKeyConstraint0.isCascadeOnDelete();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tale_name");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z6Yv1.CCo]8;");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "=yB@\"1Y8U5~Qh}:E5");
      System.setCurrentTimeMillis((-786));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      Config config2 = new Config();
      Config config3 = Config.getInstance();
      config3.setConnectionProperties("UTF-8");
      config3.getSchemas();
      String[] stringArray0 = new String[4];
      config3.getLogLevel();
      stringArray0[3] = "UTF-8";
      stringArray0[1] = "UTF-8";
      config2.setServer("UTF-8");
      config3.getDbProperties();
      config3.setCss("UTF-8");
      config0.setCss("UTF-8");
      stringArray0[2] = "UTF-8";
      config3.getRenderer();
      config0.getSchemaSpec();
      config3.getFontSize();
      config0.getMaxDetailedTables();
      config0.setDb("UTF-8");
      config2.setUser("UTF-8");
      config2.getSchemaSpec();
      stringArray0[2] = "UTF-8";
      Config config4 = new Config();
      config1.setSchemaSpec("UTF-8");
      config1.setMaxDetailedTabled(300);
      Config config5 = new Config();
      config1.setConnectionProperties("UTF-8");
      Config config6 = new Config();
      Config.setInstance((Config) null);
      config5.setSqlFormatter("UTF-8");
      config1.getMaxDetailedTables();
      config4.setOutputDir("UTF-8");
      config1.isMeterEnabled();
      Config.setInstance(config0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 45, 45);
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertEquals(45, foreignKeyConstraint0.getDeleteRule());
      assertFalse(boolean0);
      assertEquals(45, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8641220054657963
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]d3u", 4359, 1);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "T#1\"C6G", 1, (-2908));
      assertFalse(foreignKeyConstraint1.isRestrictDelete());
      
      Config.getInstance();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".meta.xml");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string0);
      
      System.setCurrentTimeMillis(582L);
      String string1 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(4359, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Restrict delete", string1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      config0.getSqlFormatter();
      Config config2 = new Config();
      Config config3 = new Config();
      config3.setConnectionProperties("UTF-8");
      config3.getSchemas();
      String[] stringArray0 = new String[9];
      config3.getLogLevel();
      stringArray0[3] = "UTF-8";
      stringArray0[1] = "UTF-8";
      config2.setServer("UTF-8");
      config3.getDbProperties();
      config3.setCss("UTF-8");
      config3.setUser("~qg4Xv-3Jy");
      config0.setCss("UTF-8");
      stringArray0[2] = "UTF-8";
      config3.getRenderer();
      config0.getSchemaSpec();
      config3.getFontSize();
      config0.getMaxDetailedTables();
      config0.setDb("UTF-8");
      config2.getSchemaSpec();
      stringArray0[3] = "UTF-8";
      Config config4 = new Config();
      config1.setSchemaSpec("UTF-8");
      config1.setMaxDetailedTabled(300);
      Config config5 = new Config();
      Config config6 = new Config();
      Config.setInstance((Config) null);
      config5.setSqlFormatter("UTF-8");
      config4.setOutputDir("UTF-8");
      config1.isMeterEnabled();
      config6.getLogLevel();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 300, 18);
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(18, foreignKeyConstraint0.getDeleteRule());
      assertEquals(300, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 909, 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(909, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "y#", 2, (-2982));
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData1 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals((-2982), foreignKeyConstraint0.getDeleteRule());
      assertEquals(2, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      Connection connection2 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, (-3408), 2);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("N", string0);
      assertEquals((-3408), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]dou", 4107, 3);
      Config.getInstance();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(4107, foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      DefaultSqlFormatter defaultSqlFormatter0 = new DefaultSqlFormatter();
      Config config2 = new Config();
      Config config3 = new Config();
      config3.setConnectionProperties("UTF-8");
      config1.getSchemas();
      String[] stringArray0 = new String[8];
      config3.getLogLevel();
      stringArray0[3] = "UTF-8";
      stringArray0[5] = "UTF-8";
      config2.setServer("UTF-8");
      config2.getDbProperties();
      config3.setUser("UTF-8");
      config0.setCss("UTF-8");
      stringArray0[2] = "UTF-8";
      String string0 = config0.getSchemaSpec();
      config3.setViewsEnabled(true);
      config0.setDb("UTF-8");
      config2.getSchemaSpec();
      stringArray0[3] = "UTF-8";
      config3.getMaxDetailedTables();
      stringArray0[4] = "UTF-8";
      Config config4 = new Config();
      config4.getDriverPath();
      config3.getSchema();
      config1.setSchemaSpec("UTF-8");
      config1.setMaxDetailedTabled(1954);
      Config config5 = new Config();
      config5.setSqlFormatter("UTF-8");
      config5.setOutputDir("UTF-8");
      config1.isMeterEnabled();
      config2.setPassword("UTF-8");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, string0, 1954, 1954);
      Config config6 = new Config();
      config6.getPassword();
      boolean boolean0 = foreignKeyConstraint0.isImplied();
      assertEquals(1954, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean0);
      assertEquals(1954, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData1 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-2982), (-2982));
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-2982), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-2982), int0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      Config config2 = new Config();
      Config config3 = new Config();
      config3.setConnectionProperties("UTF-8");
      config0.getSchemas();
      config2.getFontSize();
      String[] stringArray0 = new String[4];
      config1.setDbType("UTF-8");
      config1.getLogLevel();
      stringArray0[1] = "UTF-8";
      stringArray0[1] = "UTF-8";
      config3.setServer("UTF-8");
      config0.getDbProperties();
      config3.setCss("UTF-8");
      config0.setServer("UTF-8");
      config0.setCss("UTF-8");
      stringArray0[3] = "UTF-8";
      config2.getFontSize();
      config1.setFont("UTF-8");
      config0.getMaxDetailedTables();
      config0.setDb("UTF-8");
      config2.setUser("UTF-8");
      config2.getSchemaSpec();
      stringArray0[2] = "UTF-8";
      Config config4 = new Config();
      config1.setSchemaSpec("UTF-8");
      config1.setMaxDetailedTabled(300);
      Config config5 = new Config();
      config1.setConnectionProperties("UTF-8");
      Config config6 = new Config();
      config5.setSqlFormatter("UTF-8");
      config4.getMaxDetailedTables();
      config4.setOutputDir("UTF-8");
      config1.isMeterEnabled();
      Config.setInstance(config3);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 2742, 2742);
      foreignKeyConstraint0.getChildTable();
      assertEquals(2742, foreignKeyConstraint0.getDeleteRule());
      assertEquals(2742, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "uF: =mInP}2|'", 2578, (-13));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "uF: =mInP}2|'", (-13), 106);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-73);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "uF: =mInP}2|'", 2578, (-13));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "VN^Z<");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zpG(h`C/K;V'H*");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "VN^Z<");
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Null on delete");
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 1745, 20);
      config1.setEvaluateAllEnabled(true);
      Config config2 = new Config();
      Config config3 = new Config();
      config3.setConnectionProperties("UTF-8");
      config3.getSchemas();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      config3.getDbSpecificOptions();
      stringArray0[3] = "UTF-8";
      stringArray0[4] = "UTF-8";
      stringArray0[5] = "UTF-8";
      stringArray0[6] = "UTF-8";
      config1.setFontSize(45);
      stringArray0[7] = "UTF-8";
      config2.isRailsEnabled();
      Config config4 = new Config(stringArray0);
      config3.setHasOrphans(true);
      config3.setFont("UTF-8");
      String[] stringArray1 = new String[10];
      stringArray1[0] = "UTF-8";
      config2.isRailsEnabled();
      stringArray1[1] = "UTF-8";
      stringArray1[2] = "UTF-8";
      config0.isLowQuality();
      stringArray1[4] = "UTF-8";
      System.setCurrentTimeMillis(1745);
      foreignKeyConstraint0.getName();
      assertEquals(20, foreignKeyConstraint0.getDeleteRule());
      assertEquals(1745, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Config config0 = new Config();
      Config config1 = new Config();
      Config config2 = new Config();
      Integer integer0 = new Integer(11);
      config1.setPort(integer0);
      Config config3 = Config.getInstance();
      config3.setConnectionProperties("UTF-8");
      config3.getSchemas();
      config2.getFontSize();
      String[] stringArray0 = new String[4];
      config1.setDbType("UTF-8");
      config3.getLogLevel();
      stringArray0[3] = "UTF-8";
      stringArray0[1] = "UTF-8";
      config2.setServer("UTF-8");
      config0.getDbProperties();
      config3.setCss("UTF-8");
      config0.setCss("UTF-8");
      stringArray0[3] = "UTF-8";
      config0.getSchemaSpec();
      config3.getFontSize();
      config1.setFont("UTF-8");
      config0.getMaxDetailedTables();
      config0.setDb("UTF-8");
      config2.setUser("UTF-8");
      config2.getSchemaSpec();
      stringArray0[2] = "UTF-8";
      Config config4 = new Config();
      config1.setSchemaSpec("UTF-8");
      config2.setMaxDetailedTabled(11);
      Config config5 = new Config();
      config1.setConnectionProperties("UTF-8");
      Config config6 = new Config();
      config5.setSqlFormatter("UTF-8");
      config1.getMaxDetailedTables();
      config4.setOutputDir("UTF-8");
      config1.isMeterEnabled();
      Config.setInstance(config0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 300, 300);
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      assertEquals(300, foreignKeyConstraint0.getUpdateRule());
      assertEquals(300, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.6488041417305412
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "JX{WO=eYOQymw3.Z}", (-616), 4359);
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      System.setCurrentTimeMillis(0L);
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.isRestrictDelete();
      foreignKeyConstraint0.getParentTable();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn0.removeParent(tableColumn1);
      tableColumn0.setShortType(",Ew");
      tableColumn0.removeAChildFKConstraint();
      tableColumn0.removeParent((TableColumn) null);
      tableColumn0.removeChild((TableColumn) null);
      tableColumn1.unlinkParents();
      tableColumn1.setShortType("eh%)a B%$prhM");
      tableColumn0.setIsAutoUpdated(false);
      tableColumn0.setType("=$F?taL=3e][");
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn1.setType("");
      tableColumn2.setShortType("DEALLOCATE");
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "EEE MMM dd HH:mm z yyyy", (-759), (-759));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "]+eh|");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertFalse(boolean0);
      assertEquals((-759), foreignKeyConstraint0.getDeleteRule());
      assertEquals((-759), foreignKeyConstraint0.getUpdateRule());
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EEE MMM dd HH:mm z yyyy");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "table_name");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z6Yv1.CCo]8;");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "EEE MMM dd HH:mm z yyyy");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.615726363637287
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "yUwb{pT8]d3u", (-2679), (-1612));
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertFalse(boolean0);
      
      Config.getInstance();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "   -t databaseType       type of database - defaults to ora");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ri2:pt&?X.1 n6,+.+!");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "   -t databaseType       type of database - defaults to ora");
      int int0 = foreignKeyConstraint0.getDeleteRule();
      assertEquals((-1612), int0);
      
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-2679), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkChildren();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn1.unlinkChildren();
      tableColumn1.unlinkChildren();
      tableColumn1.removeParent(tableColumn0);
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn2.setShortType("N>_J(K^zAB0-JMY6");
      TableColumnMeta tableColumnMeta3 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta3).getComments();
      doReturn((String) null).when(tableColumnMeta3).getDefaultValue();
      doReturn(0).when(tableColumnMeta3).getDigits();
      doReturn((String) null).when(tableColumnMeta3).getId();
      doReturn((String) null).when(tableColumnMeta3).getName();
      doReturn(0).when(tableColumnMeta3).getSize();
      doReturn((String) null).when(tableColumnMeta3).getType();
      doReturn(false).when(tableColumnMeta3).isAutoUpdated();
      doReturn(false).when(tableColumnMeta3).isNullable();
      TableColumn tableColumn3 = new TableColumn((Table) null, tableColumnMeta3);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn1, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.setComments("uug-Rq$s(0Oue_p4/");
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setType((String) null);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn2, tableColumn1, 4107, 4107);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      linkedList0.iterator();
      linkedList0.add((TableColumn) null);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }
}
