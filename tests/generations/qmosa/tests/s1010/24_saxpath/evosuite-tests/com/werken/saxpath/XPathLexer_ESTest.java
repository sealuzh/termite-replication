/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 10:33:20 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.3870160531981783
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      xPathLexer0.consume((-602));
      xPathLexer0.colon();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1912208405825715
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("+", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("&2Wf{$GaZY\"t4cy/Q");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      Token token7 = xPathLexer0.minus();
      assertEquals("{", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      token6.toString();
      token6.toString();
      xPathLexer0.and();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("$", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      String string0 = token6.toString();
      assertEquals("[ (15) (Wf)", string0);
      
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token6);
      XPathLexer xPathLexer2 = new XPathLexer("\"8Eut60~l}#6;");
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("aZ", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("i");
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer1.leftBracket();
      assertEquals("c", token11.getTokenText());
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals("", token12.getTokenText());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      assertEquals("Y", token13.getTokenText());
      
      Token token14 = xPathLexer1.not();
      assertEquals("o", token14.getTokenText());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.5549388410674756
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[8#>'(jrgswRL");
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("[", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      token1.toString();
      token1.toString();
      Token token2 = xPathLexer0.plus();
      assertEquals("#", token2.getTokenText());
      
      token1.toString();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals(">", token3.getTokenText());
      
      token1.toString();
      xPathLexer0.number();
      Token token4 = xPathLexer0.notEquals();
      assertEquals("'(", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      token1.toString();
      xPathLexer0.colon();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (4) (8)", string0);
      
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token6 = xPathLexer0.slashes();
      assertEquals("w", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("R", token8.getTokenText());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("L", token9.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.355939298382267
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~m}");
      Token token0 = xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer3.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer1.setPreviousToken(token0);
      assertEquals("2", token0.getTokenText());
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals("o", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer3.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer3.whitespace();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.rightBracket();
      Token token5 = xPathLexer2.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer4.leftParen();
      assertEquals(1, token6.getTokenType());
      
      xPathLexer1.operatorName();
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      xPathLexer1.or();
      xPathLexer0.rightBracket();
      xPathLexer2.rightBracket();
      Token token8 = xPathLexer1.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("o", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.mod();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.identifierOrOperatorName();
      xPathLexer4.leftBracket();
      xPathLexer4.mod();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer7.slashes();
      assertEquals(11, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer8.rightBracket();
      assertEquals(4, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer4.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0194405286422965
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.at();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("Yl");
      xPathLexer1.colon();
      xPathLexer1.and();
      xPathLexer0.operatorName();
      xPathLexer1.nextToken();
      xPathLexer1.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer3.slashes();
      xPathLexer3.comma();
      xPathLexer2.literal();
      xPathLexer1.at();
      xPathLexer3.and();
      xPathLexer3.dots();
      xPathLexer2.literal();
      xPathLexer2.dollar();
      xPathLexer2.not();
      xPathLexer0.relationalOperator();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0967312766760284
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1xU#5]p]");
      xPathLexer2.notEquals();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.setXPath("5m$|HmIRIB");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer5 = new XPathLexer(":s?*(YZ~");
      xPathLexer5.star();
      xPathLexer2.notEquals();
      xPathLexer4.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.not();
      xPathLexer3.relationalOperator();
      xPathLexer2.dollar();
      xPathLexer2.not();
      xPathLexer5.relationalOperator();
      xPathLexer4.operatorName();
      xPathLexer5.notEquals();
      xPathLexer7.nextToken();
      xPathLexer5.doubleColon();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer2.and();
      assertNull(token0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.4320310111468433
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~m}");
      Token token1 = xPathLexer2.at();
      assertEquals("2", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.consume();
      xPathLexer3.dollar();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals("o", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer2.nextToken();
      xPathLexer1.or();
      Token token5 = xPathLexer2.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("}", token5.getTokenText());
      
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      xPathLexer0.and();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      Token token6 = xPathLexer0.slashes();
      assertEquals("c", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      xPathLexer1.leftParen();
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer4.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      Token token10 = xPathLexer1.literal();
      assertEquals(27, token10.getTokenType());
      assertNotNull(token10);
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.not();
      assertEquals("n", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer3.operatorName();
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      assertEquals("@~", token13.getTokenText());
      
      xPathLexer2.nextToken();
      xPathLexer3.doubleColon();
      Token token14 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token14.getTokenText());
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n)4oPl{>8gR:");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("n", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.consume((-1281));
      int int0 = xPathLexer0.currentPosition();
      assertEquals((-1280), int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6065084669143044
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer1.rightParen();
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("<", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("A?}hA EkIpG{_H@h");
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("O", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_KO8]");
      Token token6 = xPathLexer0.notEquals();
      assertEquals("8]", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("?", token8.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.0608502101768145
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = "$:(Z`[&C~@x ";
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@x ");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.colon();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.and();
      xPathLexer1.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.comma();
      xPathLexer1.dollar();
      String string1 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8744739872008447
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.star();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("P", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer1.dollar();
      Token token2 = xPathLexer1.rightParen();
      assertEquals(")", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.dots();
      assertEquals("P", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.or();
      xPathLexer2.operatorName();
      xPathLexer1.div();
      xPathLexer0.or();
      xPathLexer1.rightBracket();
      xPathLexer1.identifier();
      Token token4 = xPathLexer2.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer3 = new XPathLexer("VtN%cNBbUM6['p");
      xPathLexer1.mod();
      Token token5 = xPathLexer3.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals("f", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer2.leftParen();
      assertEquals("o", token8.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer(")");
      Token token9 = xPathLexer3.dollar();
      assertEquals("%", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("m", token10.getTokenText());
      
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals(".w", token11.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0913655327141925
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@x ");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.getXPath();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer1.mod();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("Z", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("$:(Z`[&C~@x ");
      xPathLexer2.mod();
      xPathLexer1.nextToken();
      Token token4 = xPathLexer0.comma();
      assertEquals("[", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer2.at();
      assertEquals("$", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.notEquals();
      assertEquals(":(", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("$:(Z`[&C~@x ");
      Token token7 = xPathLexer2.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("Z", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("$:(Z`[&C~@x ");
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token10 = xPathLexer4.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("$", token10.getTokenText());
      
      Token token11 = xPathLexer2.not();
      assertEquals("`", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer6.rightBracket();
      assertEquals("$", token13.getTokenText());
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.3864921286836687
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dots();
      assertEquals("7", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.setXPath("&2Wf{$GaZY\"t4cy/Q");
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      xPathLexer0.minus();
      token7.toString();
      String string0 = token7.toString();
      assertEquals("[ (15) (Wf)", string0);
      
      xPathLexer0.and();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token8 = xPathLexer0.not();
      assertEquals("G", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.setPreviousToken(token7);
      XPathLexer xPathLexer2 = new XPathLexer("~zv9s@q{xST1");
      Token token9 = xPathLexer2.notEquals();
      assertEquals("~z", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.mod();
      xPathLexer3.equals();
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer3.comma();
      assertEquals(32, token12.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
      assertEquals("v", token13.getTokenText());
      
      Token token14 = xPathLexer1.star();
      assertEquals(20, token14.getTokenType());
      
      Token token15 = xPathLexer0.dollar();
      assertEquals(26, token15.getTokenType());
      assertEquals("a", token15.getTokenText());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.133655435907683
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("-R", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.number();
      assertEquals("7", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("H", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("}%", token6.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer0.and();
      Token token7 = xPathLexer1.star();
      assertEquals("J", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      xPathLexer1.comma();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("J", token10.getTokenText());
      
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
      
      xPathLexer2.not();
      xPathLexer2.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer1.operatorName();
      xPathLexer1.nextToken();
      Token token13 = xPathLexer1.doubleColon();
      assertEquals(19, token13.getTokenType());
      assertEquals("^4", token13.getTokenText());
      
      Token token14 = xPathLexer2.nextToken();
      assertEquals(23, token14.getTokenType());
      
      xPathLexer0.and();
      Token token15 = xPathLexer1.slashes();
      assertEquals("m", token15.getTokenText());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2962862005470774
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("a", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("}=", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals("5", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.pipe();
      assertEquals("3", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals("HK8ns", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("9]");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.minus();
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer2.operatorName();
      Token token12 = xPathLexer2.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer2.colon();
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("B]Qk/plrz,{)m%94ykj");
      Token token14 = xPathLexer1.comma();
      assertEquals(32, token14.getTokenType());
      assertEquals("]", token14.getTokenText());
      
      Token token15 = xPathLexer3.minus();
      assertEquals(6, token15.getTokenType());
      assertEquals("B", token15.getTokenText());
      
      Token token16 = xPathLexer2.slashes();
      assertEquals(11, token16.getTokenType());
      
      Token token17 = xPathLexer3.at();
      assertEquals(16, token17.getTokenType());
      assertEquals("]", token17.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token18 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token18.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.179187634712882
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("al=+f|aHE");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer1.dots();
      assertEquals("a", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("xU", token2.getTokenText());
      
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      xPathLexer1.rightBracket();
      Token token4 = xPathLexer1.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.div();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("#", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("f", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("|", token7.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer0.relationalOperator();
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertNull(token8);
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("5", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("]", token10.getTokenText());
      
      xPathLexer1.mod();
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5903405933780852
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer2.nextToken();
      xPathLexer2.plus();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer2.relationalOperator();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer1.mod();
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("je6bu-C&");
      xPathLexer6.nextToken();
      xPathLexer3.comma();
      xPathLexer0.relationalOperator();
      String string0 = "";
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.072783266455806
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      xPathLexer2.colon();
      xPathLexer1.consume();
      xPathLexer2.nextToken();
      xPathLexer1.or();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer3.and();
      xPathLexer1.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.comma();
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("1>xU#5]p]");
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer5 = new XPathLexer("^qM5n`h@`Bi!Qqz");
      xPathLexer2.notEquals();
      xPathLexer3.equals();
      XPathLexer xPathLexer6 = new XPathLexer("UL,@Hd:&@t?i|?yc");
      Token token0 = xPathLexer4.pipe();
      XPathLexer xPathLexer7 = new XPathLexer("1>xU#5]p]");
      xPathLexer7.not();
      xPathLexer7.minus();
      xPathLexer2.star();
      xPathLexer4.number();
      Token token1 = xPathLexer1.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.9986964837480372
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.pipe();
      assertEquals("e", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.setXPath("[ (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("D^9iBLf");
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.minus();
      assertEquals("D", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.equals();
      assertEquals("^", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("9", token9.getTokenText());
      
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      xPathLexer0.div();
      Token token11 = xPathLexer0.nextToken();
      assertEquals("BLf", token11.getTokenText());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals("B", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("L", token13.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8152133713541556
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("}", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("=", token2.getTokenText());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("f", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token4 = xPathLexer1.colon();
      assertEquals("s", token4.getTokenText());
      
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("hL", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer2.star();
      XPathLexer xPathLexer3 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.star();
      Token token7 = xPathLexer4.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.star();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer3.identifierOrOperatorName();
      assertEquals("s", token8.getTokenText());
      
      xPathLexer6.comma();
      XPathLexer xPathLexer8 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer2.at();
      XPathLexer xPathLexer9 = new XPathLexer("20/q,B6S*+tW|$#");
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token10 = xPathLexer8.comma();
      assertEquals("s", token10.getTokenText());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(" ", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer9.at();
      assertEquals("2", token12.getTokenText());
      assertEquals(16, token12.getTokenType());
      
      xPathLexer8.identifierOrOperatorName();
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer4.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.778978137143845
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xgg$A^;hU@~*");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("xgg$A^;hU@~*");
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("gg", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer3.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.star();
      xPathLexer1.mod();
      xPathLexer0.star();
      Token token6 = xPathLexer4.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer3.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      String string0 = token5.toString();
      assertEquals("[ (21) ($)", string0);
      
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertEquals("gg", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer0.mod();
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token9 = xPathLexer8.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer8.setPreviousToken(token5);
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer8.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer3.equals();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer10.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.137524542078602
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Pi|UD[");
      Token token0 = xPathLexer0.comma();
      assertEquals("P", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("|U", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("D[", token2.getTokenText());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("Pi|UD[");
      Token token8 = xPathLexer1.nextToken();
      assertEquals("Pi", token8.getTokenText());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer1.mod();
      Token token10 = xPathLexer1.equals();
      assertEquals("|", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer1.whitespace();
      assertEquals((-2), token12.getTokenType());
      assertEquals("", token12.getTokenText());
      
      Token token13 = xPathLexer1.rightBracket();
      assertEquals(4, token13.getTokenType());
      assertEquals("D", token13.getTokenText());
      
      xPathLexer0.getPreviousToken();
      Token token14 = xPathLexer0.dollar();
      assertEquals(26, token14.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token15 = xPathLexer2.plus();
      assertEquals(5, token15.getTokenType());
      
      Token token16 = xPathLexer0.minus();
      assertEquals(6, token16.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.940121880779516
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.number();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("a", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals("}", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.operatorName();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("x6|D8z}'QN6kdzFd$L");
      xPathLexer1.and();
      xPathLexer1.star();
      Token token3 = xPathLexer0.comma();
      assertEquals("L", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("x6|D8z}'QN6kdzFd$L");
      Token token4 = xPathLexer2.rightBracket();
      assertEquals("x", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("U^vt@E^pk");
      Token token5 = xPathLexer1.notEquals();
      assertEquals("6|", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(" ", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("D", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("x6|D8z}'QN6kdzFd$L");
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("6", token8.getTokenText());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("|", token9.getTokenText());
      
      Token token10 = xPathLexer3.star();
      assertEquals("U", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer6.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer6.leftParen();
      assertEquals(1, token12.getTokenType());
      
      Token token13 = xPathLexer1.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer6.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.5026635765967002
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      XPathLexer xPathLexer1 = new XPathLexer("5.3*");
      xPathLexer1.identifier();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals("5.3", token0.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("5.3*");
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("*", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("5.3*");
      Token token2 = xPathLexer2.dots();
      assertEquals(14, token2.getTokenType());
      assertEquals("5.", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer3.relationalOperator();
      xPathLexer1.whitespace();
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("3", token3.getTokenText());
      
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer1.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.leftParen();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer3.rightParen();
      assertEquals("5", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer5.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer2.equals();
      assertEquals("*", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("-cnxpvm?");
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9846897377110246
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("\"k'ZJx(qyrFd=Zsd");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer("\"k'ZJx(qyrFd=Zsd");
      xPathLexer3.dollar();
      xPathLexer2.getPreviousToken();
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer4.not();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.getPreviousToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.leftBracket();
      xPathLexer2.comma();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.814909860974696
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      Token token0 = xPathLexer2.doubleColon();
      assertEquals("_.", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      Token token1 = xPathLexer2.rightParen();
      assertEquals(" ", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer4.dots();
      assertEquals("c", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.or();
      xPathLexer1.operatorName();
      xPathLexer4.div();
      xPathLexer1.or();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer1.identifier();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer3.rightBracket();
      assertEquals("x", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer3.mod();
      XPathLexer xPathLexer5 = new XPathLexer("`E[C1&|");
      xPathLexer5.mod();
      Token token5 = xPathLexer5.nextToken();
      assertEquals("`E[C1&|", token5.getTokenText());
      
      Token token6 = xPathLexer2.comma();
      assertEquals("*", token6.getTokenText());
      
      Token token7 = xPathLexer4.at();
      assertEquals("o", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("1xU#5]p]");
      Token token8 = xPathLexer5.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("`E", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("`E[C1&|");
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("#", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer5.leftBracket();
      assertEquals("[", token10.getTokenText());
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer5.colon();
      assertEquals("C", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer3.star();
      assertEquals("U", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9419544505428232
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("80(;8u2<%\"(&+");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(";8", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("80(;8u2<%\"(&+");
      xPathLexer1.getPreviousToken();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer1.dots();
      assertEquals("8", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("80(;8u2<%\"(&+");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.star();
      assertEquals("0", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("%] T VY%$");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("%] T VY%$");
      Token token10 = xPathLexer5.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("%", token10.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("EX,l#");
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer6.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer6.and();
      Token token13 = xPathLexer4.dots();
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer5.leftParen();
      assertEquals("]", token14.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.9138484866154486
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("U", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("1>xU#5]p]");
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer1.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals(">", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("x", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      Token token6 = xPathLexer1.colon();
      assertEquals("U", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer2.equals();
      assertEquals("1", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer1.notEquals();
      assertEquals("#5", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer2.star();
      XPathLexer xPathLexer4 = new XPathLexer("1>xU#5]p]");
      xPathLexer3.star();
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer1.star();
      assertEquals("]", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.identifierOrOperatorName();
      xPathLexer1.comma();
      XPathLexer xPathLexer8 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.at();
      XPathLexer xPathLexer9 = new XPathLexer("?n'd");
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer10.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer10.slashes();
      assertEquals(11, token13.getTokenType());
      
      xPathLexer0.at();
      Token token14 = xPathLexer8.identifierOrOperatorName();
      assertEquals(15, token14.getTokenType());
      
      Token token15 = xPathLexer1.star();
      assertEquals(20, token15.getTokenType());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.262927292311203
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      xPathLexer0.colon();
      xPathLexer1.and();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      assertEquals("m", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer2.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("co", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer2.minus();
      assertEquals(6, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer("mdEi-Nad#\u0003");
      Token token5 = xPathLexer5.comma();
      assertEquals("m", token5.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("mdEi-Nad#\u0003");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token6 = xPathLexer7.comma();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.literal();
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.colon();
      assertEquals("m", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer6.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("m", token10.getTokenText());
      
      xPathLexer7.not();
      xPathLexer5.operatorName();
      Token token11 = xPathLexer1.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer4.plus();
      assertEquals(5, token13.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.5642299493230487
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      token0.toString();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer4.setPreviousToken(token0);
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.not();
      xPathLexer2.setPreviousToken(token1);
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.rightParen();
      xPathLexer2.or();
      xPathLexer4.at();
      Token token2 = xPathLexer6.and();
      assertNull(token2);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.271091409743864
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      xPathLexer2.colon();
      xPathLexer1.consume();
      XPathLexer xPathLexer3 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      Token token1 = xPathLexer3.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("D", token1.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      Token token2 = xPathLexer4.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals(">x", token3.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.setXPath("DH`qm6Z'-C8<!#%FR.#");
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer("9]");
      Token token4 = xPathLexer6.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer6.minus();
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer5.nextToken();
      assertEquals("DH", token6.getTokenText());
      
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer5.star();
      assertEquals("`", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      xPathLexer6.operatorName();
      xPathLexer3.notEquals();
      Token token10 = xPathLexer4.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("$$.`ow0I4\"RO}z");
      Token token11 = xPathLexer7.comma();
      assertEquals("$", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer4.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
      assertEquals(">", token13.getTokenText());
      
      xPathLexer5.identifierOrOperatorName();
      Token token14 = xPathLexer2.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer3.identifier();
      assertEquals(15, token15.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6067090776625825
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("_", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer1.rightParen();
      assertEquals("2", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("A?}hA EkIpG{_H@h");
      Token token3 = xPathLexer1.slashes();
      assertEquals("S", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("O8", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("]", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_KO8]");
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals("A", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.3109314223464423
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("");
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-935));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.3136620824202616
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("$di-Na#13");
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.rightParen();
      assertEquals("d", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifier();
      Token token6 = xPathLexer3.slashes();
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.leftParen();
      Token token7 = xPathLexer4.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("J", token8.getTokenText());
      
      Token token9 = xPathLexer0.colon();
      assertEquals("i", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer5.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("J", token12.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer4.operatorName();
      Token token13 = xPathLexer3.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer0.notEquals();
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer1.nextToken();
      assertEquals(15, token15.getTokenType());
      
      Token token16 = xPathLexer3.doubleColon();
      assertEquals(19, token16.getTokenType());
      
      Token token17 = xPathLexer0.nextToken();
      assertEquals((-1), token17.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.6665846301432345
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("a", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("'kNHquW3(P$nuS");
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("LUDD]P2MU@$^Fh&'");
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("LU", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("S0\"f`]Q_8^h46BVb9m");
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("}", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("LUDD]P2MU@$^Fh&'");
      Token token7 = xPathLexer2.pipe();
      assertEquals("D", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("D", token9.getTokenText());
      
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.2148098888742584
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.wernen.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.wernen.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("&S]b}6@~m}");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.wernen.saxpath.XPathLexer");
      xPathLexer3.dollar();
      xPathLexer0.number();
      xPathLexer3.and();
      Token token1 = xPathLexer3.at();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer2.nextToken();
      xPathLexer0.operatorName();
      xPathLexer2.nextToken();
      xPathLexer1.or();
      Token token2 = xPathLexer2.rightBracket();
      assertEquals("b", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer("com.wernen.saxpath.XPathLexer");
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token3 = xPathLexer3.identifier();
      assertEquals("m.wernen.saxpath.XPathLexer", token3.getTokenText());
      
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer5.literal();
      Token token5 = xPathLexer2.comma();
      assertEquals("}", token5.getTokenText());
      
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer5.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.literal();
      assertNotNull(token8);
      assertEquals(27, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      Token token10 = xPathLexer1.not();
      assertEquals("s", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      xPathLexer4.relationalOperator();
      xPathLexer3.operatorName();
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("Jb", token11.getTokenText());
      
      Token token12 = xPathLexer2.nextToken();
      assertEquals("6", token12.getTokenText());
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer3.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.397874062601595
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("R", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.setXPath("&2Wf{$GaZY\"t4cy/Q");
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("Wf", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.comma();
      assertEquals("$", token9.getTokenText());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      assertEquals("G", token10.getTokenText());
      
      Token token11 = xPathLexer0.star();
      assertEquals("a", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      assertEquals("Z", token12.getTokenText());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("Y", token13.getTokenText());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
      assertEquals("\"", token14.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.plus();
      Token token15 = xPathLexer0.colon();
      assertEquals(18, token15.getTokenType());
      assertEquals("4", token15.getTokenText());
      
      Token token16 = xPathLexer0.comma();
      assertEquals(32, token16.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.plus();
      Token token17 = xPathLexer0.plus();
      assertEquals("y", token17.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.2126604781492274
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer2.at();
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~m}");
      xPathLexer0.dollar();
      xPathLexer1.number();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("o", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.at();
      Token token3 = xPathLexer3.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer3.nextToken();
      xPathLexer2.or();
      Token token4 = xPathLexer3.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.and();
      XPathLexer xPathLexer5 = new XPathLexer("2<Shb}6@~m}");
      xPathLexer4.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(".werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer6.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer3.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer6.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer1.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer3.dollar();
      assertEquals("6", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer5.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer2.operatorName();
      Token token13 = xPathLexer4.notEquals();
      assertEquals("co", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer5.nextToken();
      assertEquals(7, token14.getTokenType());
      assertEquals("<", token14.getTokenText());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.119997653682035
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer1.whitespace();
      xPathLexer0.rightBracket();
      token0.toString();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.6884217688103367
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.leftBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.dollar();
      xPathLexer2.dots();
      xPathLexer2.doubleColon();
      xPathLexer2.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("\"|T@/");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.5677221744550973
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      xPathLexer2.relationalOperator();
      xPathLexer1.mod();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("ipv5A>k[N");
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer3.nextToken();
      assertEquals("ipv5A", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.940247517616744
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2446));
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.8798401935176403
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      Token token1 = xPathLexer2.at();
      assertEquals("2", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      xPathLexer3.rightParen();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("c", token2.getTokenText());
      
      xPathLexer3.not();
      xPathLexer1.slashes();
      Token token3 = xPathLexer3.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      xPathLexer1.dollar();
      xPathLexer1.slashes();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("om", token4.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer4 = new XPathLexer("2<Shb}6@~mq");
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals(".w", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer3.identifierOrOperatorName();
      assertEquals("werken.saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer4.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("2", token7.getTokenText());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
      
      Token token9 = xPathLexer5.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("D");
      Token token11 = xPathLexer6.dollar();
      assertEquals("D", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("e", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals("<", token13.getTokenText());
      assertEquals(7, token13.getTokenType());
      
      Token token14 = xPathLexer7.not();
      assertEquals(23, token14.getTokenType());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.2996256080951754
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      xPathLexer0.minus();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(".3", token0.getTokenText());
      assertEquals(31, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("5.3*");
      Token token1 = xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("5.3*");
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("5.", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer1.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("o:w2GA9>7r=.");
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("*", token8.getTokenText());
      
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (16) (*)", string0);
      
      Token token9 = xPathLexer4.star();
      Token token10 = xPathLexer2.identifierOrOperatorName();
      assertEquals("5.3", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (16) (*)");
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer0.setPreviousToken(token9);
      assertEquals("o", token9.getTokenText());
      
      Token token12 = xPathLexer4.notEquals();
      assertEquals(":w", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.equals();
      Token token13 = xPathLexer5.equals();
      assertEquals(21, token13.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("X&mfR;F/'\"x{%<ZmK");
      Token token14 = xPathLexer7.comma();
      assertEquals("X", token14.getTokenText());
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token15.getTokenType());
      
      Token token16 = xPathLexer4.minus();
      assertEquals("2", token16.getTokenText());
      assertEquals(6, token16.getTokenType());
      
      Token token17 = xPathLexer7.star();
      assertEquals(20, token17.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.874140007685592
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      xPathLexer0.colon();
      xPathLexer1.and();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.nextToken();
      xPathLexer2.rightBracket();
      xPathLexer1.doubleColon();
      xPathLexer2.minus();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer1.mod();
      XPathLexer xPathLexer5 = new XPathLexer("$dEi-Nad#13");
      xPathLexer5.nextToken();
      xPathLexer2.comma();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer1.dollar();
      xPathLexer3.getPreviousToken();
      XPathLexer xPathLexer8 = new XPathLexer("e$s#te}m");
      XPathLexer xPathLexer9 = null;
      try {
        xPathLexer9 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.2460007046426274
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(5t");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("5", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("t", token2.getTokenText());
      
      xPathLexer0.identifier();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("ckzyA/GM{F>");
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("z", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals("y", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(85);
      Token token9 = xPathLexer0.number();
      assertEquals("", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.197627879872075
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.star();
      assertEquals("c", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer1.whitespace();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer1.dots();
      assertEquals(14, token2.getTokenType());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("we", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer1.rightParen();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("ken.saxpath.XPathLexer", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("}");
      Token token7 = xPathLexer2.plus();
      assertEquals("}", token7.getTokenText());
      
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer2.not();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("0ic8VY>R]br");
      Token token9 = xPathLexer4.rightParen();
      assertEquals("0", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      Token token10 = xPathLexer4.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer4.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer2.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer4.operatorName();
      Token token14 = xPathLexer1.notEquals();
      assertEquals("n.", token14.getTokenText());
      assertEquals(22, token14.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token15 = xPathLexer5.colon();
      assertEquals(18, token15.getTokenType());
      
      xPathLexer0.comma();
      Token token16 = xPathLexer2.at();
      assertEquals(16, token16.getTokenType());
      
      Token token17 = xPathLexer0.slashes();
      assertEquals(11, token17.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.1712453611917777
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("P", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("}=", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("5", token3.getTokenText());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("H", token5.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("8", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("ns", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals("\"", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals("w", token10.getTokenText());
      
      xPathLexer0.mod();
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.362935994619941
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1377));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.297373697783724
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.comma();
      assertEquals("c", token1.getTokenText());
      
      xPathLexer2.rightParen();
      Token token2 = xPathLexer2.dots();
      assertEquals("o", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.dollar();
      assertEquals(".", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token6 = xPathLexer3.nextToken();
      assertEquals(2, token6.getTokenType());
      assertEquals(")", token6.getTokenText());
      
      xPathLexer1.and();
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      Token token7 = xPathLexer4.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.comma();
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.literal();
      Token token9 = xPathLexer0.at();
      assertEquals("w", token9.getTokenText());
      assertEquals(16, token9.getTokenType());
      
      xPathLexer6.colon();
      Token token10 = xPathLexer1.leftParen();
      assertEquals(1, token10.getTokenType());
      
      xPathLexer1.literal();
      Token token11 = xPathLexer4.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer5.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer2.operatorName();
      Token token13 = xPathLexer1.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8735648570460546
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("o", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer1.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("w", token4.getTokenText());
      
      token2.toString();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      xPathLexer2.relationalOperator();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("e", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer2.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("c", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("}");
      Token token9 = xPathLexer3.plus();
      assertEquals("}", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (19) (m.)", string0);
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (19) (m.)");
      xPathLexer0.dollar();
      XPathLexer xPathLexer5 = new XPathLexer("[ (19) (m.)");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer("E_<Zw#/");
      Token token10 = xPathLexer4.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("[", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer1.leftBracket();
      Token token11 = xPathLexer5.nextToken();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer3.not();
      assertEquals(23, token12.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6475285949447795
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      Token token0 = xPathLexer0.dots();
      assertEquals("_", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("<", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("A?}hA EkIpG{_H@h");
      Token token3 = xPathLexer1.slashes();
      assertEquals("S", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("O8", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("]", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("_KO8]");
      Token token6 = xPathLexer2.notEquals();
      assertEquals("A?", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("#z<Hh]9");
      Token token7 = xPathLexer1.dollar();
      assertEquals("h", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer1.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("b", token8.getTokenText());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals("_KO8", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.9217953505799708
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      Token token0 = xPathLexer2.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer2.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer2.star();
      assertEquals("G", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer1.mod();
      xPathLexer4.mod();
      Token token3 = xPathLexer3.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer2.comma();
      assertEquals("X", token4.getTokenText());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("1xU#5]p]");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer4.dollar();
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("1", token5.getTokenText());
      
      Token token6 = xPathLexer5.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("1", token6.getTokenText());
      
      xPathLexer5.literal();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("#", token7.getTokenText());
      
      Token token8 = xPathLexer2.not();
      assertEquals("I", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      Token token9 = xPathLexer3.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.2137122241980087
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.at();
      assertEquals("x", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("#5]p]", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("1xU#5]p]");
      xPathLexer2.div();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1xU#5]p]");
      xPathLexer3.mod();
      xPathLexer1.mod();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("1", token6.getTokenText());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("x", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("1xU#5]p]");
      Token token8 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertEquals("1xU", token8.getTokenText());
      
      Token token9 = xPathLexer3.dollar();
      assertEquals("1", token9.getTokenText());
      
      Token token10 = xPathLexer0.getPreviousToken();
      assertNotSame(token10, token1);
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.06313981501499
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.dots();
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("fh", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("L", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(" 5", token5.getTokenText());
      
      xPathLexer1.star();
      xPathLexer1.at();
      xPathLexer1.equals();
      xPathLexer1.plus();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (16) (s)", string0);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.rightParen();
      assertEquals("K", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("cb30`fNvIl#R");
      xPathLexer3.literal();
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.pipe();
      assertEquals("s", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("cb30`fNvIl#R");
      Token token11 = xPathLexer5.not();
      assertEquals(23, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.operatorName();
      Token token12 = xPathLexer6.notEquals();
      assertEquals(22, token12.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("[ (16) (s)");
      Token token13 = xPathLexer8.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals("[", token13.getTokenText());
      
      Token token14 = xPathLexer8.identifier();
      assertEquals(15, token14.getTokenType());
      
      xPathLexer7.and();
      Token token15 = xPathLexer6.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.9587683202165551
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.dollar();
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.or();
      xPathLexer2.operatorName();
      xPathLexer0.div();
      xPathLexer1.or();
      xPathLexer3.rightBracket();
      Token token3 = xPathLexer1.identifier();
      assertEquals(".werken.saxpath.XPathLexer", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer1.mod();
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("_KO8]");
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("_KO8]");
      Token token9 = xPathLexer4.dollar();
      assertEquals("A", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("m", token10.getTokenText());
      
      Token token11 = xPathLexer3.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("<", token11.getTokenText());
      
      char char0 = xPathLexer0.LA(9);
      assertEquals('s', char0);
      
      Token token12 = xPathLexer3.star();
      assertEquals("S", token12.getTokenText());
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.020442112403397
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("2g");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("#", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("2g");
      Token token1 = xPathLexer2.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("2", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.getPreviousToken();
      Token token4 = xPathLexer2.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer2.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("5", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertNull(token8);
      
      XPathLexer xPathLexer4 = new XPathLexer("zr^^a`=||[&7'Fr~g`");
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.identifierOrOperatorName();
      assertEquals("g", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer4.equals();
      assertEquals("z", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("zr^^a`=||[&7'Fr~g`");
      Token token12 = xPathLexer6.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.7979731087029378
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      xPathLexer2.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer1.rightBracket();
      xPathLexer2.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("}");
      xPathLexer3.star();
      xPathLexer3.leftParen();
      xPathLexer3.plus();
      token0.toString();
      XPathLexer xPathLexer4 = new XPathLexer("[ (19) (we)");
      xPathLexer0.dollar();
      xPathLexer4.plus();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("sP{%m^bLIw%(E0g");
      xPathLexer6.equals();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.289591446932824
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.nextToken();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.colon();
      assertEquals("-", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("R7", token1.getTokenText());
      
      xPathLexer0.number();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("%}%", token4.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer0.and();
      xPathLexer1.and();
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("J", token5.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("b", token6.getTokenText());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("%", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      Token token8 = xPathLexer2.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("J", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer0.notEquals();
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("J", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      Token token10 = xPathLexer3.pipe();
      assertEquals("b", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer5.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer4.minus();
      assertEquals(6, token12.getTokenType());
      assertEquals("J", token12.getTokenText());
      
      Token token13 = xPathLexer1.at();
      assertEquals("!", token13.getTokenText());
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer5.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer5.identifierOrOperatorName();
      assertEquals(15, token15.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8287536923913013
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer1.comma();
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer1.not();
      assertEquals("R", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals("-", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals("+", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token4 = xPathLexer2.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      xPathLexer1.star();
      XPathLexer xPathLexer4 = new XPathLexer("G+R-R7H&%}%");
      Token token6 = xPathLexer4.star();
      assertEquals("G", token6.getTokenText());
      
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.star();
      Token token8 = xPathLexer0.identifier();
      assertEquals("-R7H", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.identifierOrOperatorName();
      xPathLexer3.comma();
      XPathLexer xPathLexer8 = new XPathLexer("G+R-R7H&%}%");
      Token token9 = xPathLexer8.at();
      assertEquals("G", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("?n'd");
      Token token10 = xPathLexer8.notEquals();
      assertEquals("+R", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token11 = xPathLexer10.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer4.slashes();
      assertEquals("+", token12.getTokenText());
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token14);
      assertEquals(15, token14.getTokenType());
      
      Token token15 = xPathLexer0.star();
      assertEquals("%", token15.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.868842984096827
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      Token token0 = xPathLexer0.pipe();
      assertEquals("1", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer3.dollar();
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer3.relationalOperator();
      assertEquals("<", token3.getTokenText());
      assertEquals(7, token3.getTokenType());
      
      xPathLexer2.rightBracket();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Q5gaH0^(V");
      Token token5 = xPathLexer2.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer4.nextToken();
      Token token6 = xPathLexer1.at();
      assertEquals("}", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("2<Shb}6@~mq");
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("x", token7.getTokenText());
      
      Token token8 = xPathLexer3.equals();
      assertEquals("S", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("Q5gaH0^(V");
      Token token9 = xPathLexer5.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("ks Kf!OStp");
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token10 = xPathLexer9.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer2.minus();
      assertEquals(6, token11.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer10.notEquals();
      assertEquals(22, token12.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer();
      Token token13 = xPathLexer11.colon();
      assertEquals(18, token13.getTokenType());
      
      XPathLexer xPathLexer12 = new XPathLexer();
      Token token14 = xPathLexer12.comma();
      assertEquals(32, token14.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token15 = xPathLexer5.at();
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.1576316388161816
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@x ");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token0.toString();
      assertEquals("[ (15) ()", string0);
      
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.colon();
      assertEquals("$", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.leftParen();
      assertEquals("(", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("Z", token3.getTokenText());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer1.and();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer1.literal();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.colon();
      assertEquals("[", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      xPathLexer2.literal();
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("&", token10.getTokenText());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      assertEquals("C", token11.getTokenText());
      
      xPathLexer2.relationalOperator();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("$:(Z`[&C~@x ");
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("$:", token12.getTokenText());
      
      xPathLexer3.identifierOrOperatorName();
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.2919343736029885
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@x ");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.colon();
      assertEquals("$", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("18EG,mD/$;Nd<Dny");
      xPathLexer0.and();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("&", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer1.comma();
      assertEquals("1", token3.getTokenText());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("[ (15) ()");
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.comma();
      assertEquals("@", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals("(", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer0.nextToken();
      Token token12 = xPathLexer3.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals(30, token13.getTokenType());
      assertEquals("15", token13.getTokenText());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7979908601072006
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer0.rightBracket();
      token0.toString();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      xPathLexer2.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer1.rightBracket();
      xPathLexer2.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("}");
      xPathLexer3.leftParen();
      xPathLexer3.plus();
      token0.toString();
      XPathLexer xPathLexer4 = new XPathLexer("[ (19) (m.)");
      xPathLexer0.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("sP{%m^bLIw%(E0g");
      xPathLexer6.equals();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.6099383415572115
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.dollar();
      xPathLexer1.dots();
      xPathLexer1.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("\"|T@/");
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.669977694003018
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.colon();
      assertEquals("-", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer0.star();
      assertEquals("&", token4.getTokenText());
      
      xPathLexer1.mod();
      xPathLexer1.star();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer1.mod();
      xPathLexer2.setPreviousToken(token2);
      assertEquals("+R", token2.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("%}", token7.getTokenText());
      
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token8);
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.807223191734901
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("T'_xYHg'");
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer3.doubleColon();
      assertEquals("2<", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer3.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer3.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      xPathLexer1.rightParen();
      xPathLexer2.nextToken();
      xPathLexer3.dots();
      Token token6 = xPathLexer2.getPreviousToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer2.rightParen();
      Token token7 = xPathLexer2.dots();
      assertEquals("_", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals("}", token9.getTokenText());
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("#-LfM8Z)IOGl59");
      xPathLexer3.setXPath("");
      Token token10 = xPathLexer1.identifier();
      assertEquals("-R7H", token10.getTokenText());
      
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.0548020161643197
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(5t");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("(", token0.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("t", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!YoqBQxRHKu5d->Nak ");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer0.mod();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertNull(token8);
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.dollar();
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token9 = xPathLexer1.dollar();
      assertEquals("!", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.7980125648979302
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.star();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer0.rightBracket();
      token0.toString();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      xPathLexer2.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer1.rightBracket();
      xPathLexer2.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("}");
      xPathLexer3.leftParen();
      xPathLexer3.plus();
      token0.toString();
      XPathLexer xPathLexer4 = new XPathLexer("[ (19) (m.)");
      xPathLexer0.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("sP{%m^bLIw%(E0g");
      xPathLexer6.equals();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.8222129331319512
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer1.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer1.mod();
      xPathLexer0.mod();
      xPathLexer1.nextToken();
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.relationalOperator();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.getPreviousToken();
      xPathLexer1.dollar();
      xPathLexer2.mod();
      xPathLexer0.plus();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.852774936335447
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("1xU#5]p]");
      xPathLexer3.colon();
      XPathLexer xPathLexer4 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      xPathLexer0.dots();
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer("1xU#5]p]");
      xPathLexer3.div();
      xPathLexer4.or();
      xPathLexer5.at();
      xPathLexer3.identifier();
      xPathLexer4.rightBracket();
      xPathLexer4.mod();
      XPathLexer xPathLexer6 = new XPathLexer("gjtJ *|EPfSIpW~");
      xPathLexer1.mod();
      xPathLexer1.comma();
      xPathLexer6.at();
      XPathLexer xPathLexer7 = new XPathLexer("Jzzs");
      xPathLexer7.nextToken();
      xPathLexer6.notEquals();
      XPathLexer xPathLexer8 = new XPathLexer("Jzzs");
      xPathLexer8.dollar();
      XPathLexer xPathLexer9 = new XPathLexer();
      XPathLexer xPathLexer10 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      xPathLexer2.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer5.slashes();
      xPathLexer5.not();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.9439528757566185
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("o", token1.getTokenText());
      
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer2.rightBracket();
      assertEquals("o", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer4.slashes();
      assertEquals("c", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer4.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("c", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("om", token7.getTokenText());
      
      Token token8 = xPathLexer5.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5810499724845488
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer2.rightBracket();
      xPathLexer1.doubleColon();
      xPathLexer2.minus();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.6517386563107674
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.dollar();
      xPathLexer2.dots();
      xPathLexer2.doubleColon();
      xPathLexer2.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("\"|T@/");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.0471009973325027
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("co", token2.getTokenText());
      
      Token token3 = xPathLexer1.minus();
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer("mdEi-Nad#\u0003");
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("mdEi-Nad#\u0003");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer6.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer2.literal();
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("m", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer5.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      xPathLexer6.not();
      xPathLexer4.operatorName();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.8782543350277872
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("fh", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("L", token4.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("3H", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer1.at();
      xPathLexer1.equals();
      token0.toString();
      xPathLexer1.plus();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("K8ns", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (16) (s)", string0);
      
      XPathLexer xPathLexer3 = new XPathLexer("}");
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("cb30`fNvIl#R");
      xPathLexer3.literal();
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer2.pipe();
      assertEquals("s", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("cb30`fNvIl#R");
      Token token12 = xPathLexer5.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("c", token12.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer3.equals();
      assertEquals(21, token13.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("cb30`fNvIl#R");
      xPathLexer6.relationalOperator();
      Token token14 = xPathLexer3.pipe();
      assertEquals(17, token14.getTokenType());
      
      xPathLexer3.minus();
      Token token15 = xPathLexer3.minus();
      assertEquals(6, token15.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.0659932578725515
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.nextToken();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.9909834010980938
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("#", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("]", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("p", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("]", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.dollar();
      Token token11 = xPathLexer2.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1>xU#5]p]");
      XPathLexer xPathLexer4 = new XPathLexer("67y_ArX]#Z:;G-");
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer2.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer3.nextToken();
      assertEquals(30, token14.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.340561215293168
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.relationalOperator();
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.equals();
      assertEquals("o", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer2.rightBracket();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals("co", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer2.minus();
      assertEquals(6, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer2.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("mdEi-Nad#\u0003");
      Token token5 = xPathLexer4.comma();
      assertEquals("m", token5.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("mdEi-Nad#\u0003");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer5.dots();
      assertEquals("m", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer1.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer0.literal();
      Token token10 = xPathLexer5.dollar();
      assertEquals("d", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer6.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer4.operatorName();
      xPathLexer1.notEquals();
      Token token12 = xPathLexer3.comma();
      assertEquals(32, token12.getTokenType());
      
      Token token13 = xPathLexer3.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer2.rightBracket();
      assertEquals(4, token14.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.186592310681313
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("P", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("}=", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      assertEquals("5", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("8", token7.getTokenText());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals("s", token10.getTokenText());
      
      xPathLexer0.mod();
      Token token11 = xPathLexer0.slashes();
      assertEquals("\"", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals("w", token12.getTokenText());
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.3978115300325484
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.dots();
      assertEquals("7", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals("H", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.setXPath("&2Wf{$GaZY\"t4cy/Q");
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("2", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("Wf", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.minus();
      assertEquals("{", token8.getTokenText());
      
      xPathLexer0.and();
      Token token9 = xPathLexer0.equals();
      assertEquals("$", token9.getTokenText());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("G", token10.getTokenText());
      
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals("Z", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer0.operatorName();
      Token token14 = xPathLexer0.notEquals();
      assertEquals(22, token14.getTokenType());
      assertEquals("\"t", token14.getTokenText());
      
      Token token15 = xPathLexer0.colon();
      assertEquals("4", token15.getTokenText());
      assertEquals(18, token15.getTokenType());
      
      Token token16 = xPathLexer0.comma();
      assertEquals(32, token16.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer1.plus();
      Token token17 = xPathLexer0.plus();
      assertEquals(5, token17.getTokenType());
      assertEquals("y", token17.getTokenText());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.3801097970968734
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~m}");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer3.and();
      xPathLexer3.at();
      Token token2 = xPathLexer2.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer2.nextToken();
      xPathLexer1.or();
      Token token3 = xPathLexer2.rightBracket();
      assertEquals("}", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.identifier();
      Token token4 = xPathLexer3.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer5.literal();
      Token token5 = xPathLexer2.comma();
      assertEquals("6", token5.getTokenText());
      
      xPathLexer3.at();
      xPathLexer5.colon();
      Token token6 = xPathLexer1.literal();
      assertNotNull(token6);
      assertEquals(27, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("c", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.not();
      assertEquals("s", token8.getTokenText());
      
      xPathLexer4.relationalOperator();
      xPathLexer3.operatorName();
      Token token9 = xPathLexer4.notEquals();
      assertEquals("Jb", token9.getTokenText());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals(16, token10.getTokenType());
      assertEquals("@", token10.getTokenText());
      
      Token token11 = xPathLexer3.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token12.getTokenText());
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.6211105178025838
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("GR-Rf%}");
      Token token0 = xPathLexer0.comma();
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.at();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.not();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("GR-Rf%}");
      Token token3 = xPathLexer1.colon();
      assertEquals("G", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.notEquals();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer("GR-Rf%}");
      Token token4 = xPathLexer3.star();
      assertEquals("G", token4.getTokenText());
      
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer6.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer2.comma();
      XPathLexer xPathLexer7 = new XPathLexer("GR-Rf%}");
      Token token8 = xPathLexer7.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("G", token8.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("?n'd");
      Token token9 = xPathLexer7.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("R-", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token10 = xPathLexer9.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token11 = xPathLexer3.pipe();
      assertEquals("R", token11.getTokenText());
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer8.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("?", token12.getTokenText());
      
      Token token13 = xPathLexer8.minus();
      assertEquals("n", token13.getTokenText());
      
      Token token14 = xPathLexer1.equals();
      assertEquals("R", token14.getTokenText());
      assertEquals(21, token14.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.1378933111974474
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("+R", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.number();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("H", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer0.and();
      Token token4 = xPathLexer1.star();
      assertEquals(20, token4.getTokenType());
      assertEquals("J", token4.getTokenText());
      
      xPathLexer1.comma();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer0.leftParen();
      Token token6 = xPathLexer1.comma();
      assertEquals("!", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.colon();
      assertEquals("J", token8.getTokenText());
      assertEquals(18, token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer2.not();
      xPathLexer2.relationalOperator();
      xPathLexer0.operatorName();
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals("/^", token10.getTokenText());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer2.nextToken();
      assertEquals("!", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.1255647196760497
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("9.1A~^y Sx#oVBGCeC!");
      Token token1 = xPathLexer2.rightParen();
      assertEquals("9", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.dollar();
      assertEquals(26, token2.getTokenType());
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.colon();
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("1", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.consume();
      xPathLexer1.getXPath();
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("A~", token5.getTokenText());
      
      xPathLexer2.number();
      xPathLexer1.getXPath();
      xPathLexer3.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer4.minus();
      assertEquals(6, token6.getTokenType());
      
      Token token7 = xPathLexer2.leftParen();
      assertEquals("^", token7.getTokenText());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer3.getXPath();
      Token token9 = xPathLexer1.nextToken();
      assertEquals("xU", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer3.not();
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals("#", token11.getTokenText());
      assertEquals(18, token11.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.9723560561539801
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      
      xPathLexer0.at();
      Token token2 = xPathLexer0.dots();
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("fh", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("L", token4.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("3H", token5.getTokenText());
      
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer1.at();
      xPathLexer1.equals();
      token0.toString();
      xPathLexer1.plus();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (16) (s)", string0);
      
      XPathLexer xPathLexer3 = new XPathLexer("}");
      Token token8 = xPathLexer0.rightParen();
      assertEquals("w", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("cb30`fNvIl#R");
      xPathLexer3.literal();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.literal();
      xPathLexer1.at();
      xPathLexer5.relationalOperator();
      Token token9 = xPathLexer2.literal();
      assertNotNull(token9);
      assertEquals(")Pa}=fhL 53HK8n", token9.getTokenText());
      assertEquals(27, token9.getTokenType());
      
      xPathLexer0.dollar();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer2.operatorName();
      Token token11 = xPathLexer5.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer2.plus();
      assertEquals("\"", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n)4oPl{>8gR:");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.1656153853023126
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = "_KO8]";
      XPathLexer xPathLexer0 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer0.dots();
      xPathLexer0.equals();
      xPathLexer1.rightParen();
      xPathLexer1.rightBracket();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      String string1 = null;
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-2936);
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-2936));
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.8770574948102654
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer1.comma();
      assertEquals("G", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer1.at();
      assertEquals("+", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("R-R7H", token3.getTokenText());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals("&%", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      xPathLexer1.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      Token token6 = xPathLexer1.star();
      assertEquals("%", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer2.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.equals();
      Token token8 = xPathLexer0.plus();
      assertEquals("H", token8.getTokenText());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.plus();
      assertEquals(5, token9.getTokenType());
      
      String string0 = token5.toString();
      assertEquals("[ (22) (-R)", string0);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer2.rightParen();
      assertEquals(2, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("}");
      xPathLexer5.literal();
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.pipe();
      XPathLexer xPathLexer7 = new XPathLexer("}");
      xPathLexer3.not();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("cb30`fNvIl#R");
      Token token12 = xPathLexer9.equals();
      assertEquals("c", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("[ (22) (-R)");
      xPathLexer4.relationalOperator();
      Token token13 = xPathLexer9.pipe();
      assertEquals("b", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer2.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer3.minus();
      assertEquals(6, token15.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.7826388246523714
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("$dEi-Nad#13");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer1.star();
      xPathLexer1.rightParen();
      xPathLexer1.div();
      xPathLexer1.consume((-1799));
      assertNull(xPathLexer1.getXPath());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.7842611824763015
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer2 = new XPathLexer("K00t7v1.c");
      Token token0 = xPathLexer2.star();
      assertEquals("K", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer2.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer2.doubleColon();
      assertEquals("0t", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("K]CyFb&J10\nY6BqF4");
      Token token3 = xPathLexer3.rightBracket();
      String string0 = token3.toString();
      assertEquals("[ (4) (K)", string0);
      
      XPathLexer xPathLexer4 = new XPathLexer("Ii%y(Ow>Zw");
      xPathLexer3.or();
      xPathLexer3.relationalOperator();
      xPathLexer1.leftParen();
      Token token4 = xPathLexer1.rightBracket();
      Token token5 = xPathLexer4.rightParen();
      assertEquals("I", token5.getTokenText());
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("K00t7v1.c");
      Token token7 = xPathLexer5.leftParen();
      assertEquals(1, token7.getTokenType());
      assertEquals("K", token7.getTokenText());
      
      Token token8 = xPathLexer4.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("i", token8.getTokenText());
      
      token4.toString();
      XPathLexer xPathLexer6 = new XPathLexer("K00t7v1.c");
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer7.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer("[ (4) (K)");
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token10 = xPathLexer10.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer11 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer9.not();
      assertEquals(23, token11.getTokenType());
      assertEquals("[", token11.getTokenText());
      
      XPathLexer xPathLexer12 = new XPathLexer();
      Token token12 = xPathLexer12.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.953521860222367
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer(";xgJw_`d-|SS8%RZUc");
      xPathLexer1.dollar();
      xPathLexer1.rightBracket();
      xPathLexer1.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("VuL");
      xPathLexer2.leftBracket();
      xPathLexer2.nextToken();
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("/(![x\"K~6OU> [_Lkp");
      xPathLexer0.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer3.equals();
      XPathLexer xPathLexer6 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer6.pipe();
      XPathLexer xPathLexer7 = new XPathLexer();
      assertFalse(xPathLexer7.equals((Object)xPathLexer6));
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.6100529609174297
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      Token token0 = xPathLexer0.dots();
      assertEquals("_", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer1.rightParen();
      assertEquals("2", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("A?}hA EkIpG{_H@h");
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("O", token3.getTokenText());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("S", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("8", token5.getTokenText());
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer("_KO8]");
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("A", token8.getTokenText());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.2004203947163203
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.isIdentifierChar('+');
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.1879631680548286
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.consume((-2529));
      xPathLexer0.consume((-2529));
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.endPosition();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=3.1936920275207963
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("a=6.>\"qfhMf'C");
      xPathLexer1.comma();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.minus();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.3746622683336214
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~m}");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      xPathLexer0.number();
      xPathLexer1.rightParen();
      xPathLexer3.at();
      xPathLexer2.nextToken();
      xPathLexer0.operatorName();
      xPathLexer2.nextToken();
      xPathLexer1.or();
      xPathLexer2.rightBracket();
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer5.and();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.identifier();
      xPathLexer3.slashes();
      xPathLexer2.comma();
      xPathLexer3.at();
      xPathLexer5.colon();
      xPathLexer1.literal();
      xPathLexer0.dollar();
      xPathLexer1.not();
      xPathLexer4.relationalOperator();
      xPathLexer3.operatorName();
      xPathLexer4.notEquals();
      xPathLexer3.doubleColon();
      xPathLexer0.nextToken();
      int int0 = xPathLexer2.endPosition();
      assertEquals(11, int0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.1389375051315302
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.slashes();
      assertEquals("G", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("+R", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer1.getPreviousToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("&", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals("G", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("R", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("%] T VY%$");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.notEquals();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer7.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("%] T VY%$");
      Token token8 = xPathLexer5.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("%", token8.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("EX,l#");
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer6.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer5.notEquals();
      Token token11 = xPathLexer9.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("E", token11.getTokenText());
      
      xPathLexer6.comma();
      int int0 = xPathLexer4.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=3.549226346632122
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('R');
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer1.pipe();
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.slashes();
      xPathLexer1.dots();
      xPathLexer2.at();
      xPathLexer0.comma();
      xPathLexer1.literal();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer1.relationalOperator();
      xPathLexer0.pipe();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.201735567013752
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.identifier();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.isIdentifierStartChar('6');
      xPathLexer0.slashes();
      Token token11 = xPathLexer0.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.and();
      Token token14 = xPathLexer0.identifierOrOperatorName();
      assertNull(token14);
      
      Token token15 = xPathLexer0.slashes();
      assertEquals(11, token15.getTokenType());
      
      xPathLexer0.comma();
      Token token16 = xPathLexer0.whitespace();
      assertEquals((-2), token16.getTokenType());
      
      Token token17 = xPathLexer0.at();
      assertEquals(16, token17.getTokenType());
      
      Token token18 = xPathLexer0.comma();
      assertEquals(32, token18.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.0062969649046845
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("x", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.not();
      assertEquals("#", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("5", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals("p", token5.getTokenText());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("]", token6.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('C');
      assertTrue(boolean0);
      
      xPathLexer0.and();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.colon();
      xPathLexer1.star();
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer1.div();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token11 = xPathLexer2.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer2.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.940288338344593
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals("1", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("x", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#5]p]", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("#", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("]", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("p", token6.getTokenText());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("]", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNull(token11);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.mod();
      Token token12 = xPathLexer1.rightParen();
      assertEquals(2, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer2.leftBracket();
      assertEquals(3, token14.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.061865373989963
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.1770012104163534
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("P", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("}=", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("f", token4.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.not();
      assertEquals("5", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("H0 [58m{4puT=h!{`V");
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("H", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer2.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token9 = xPathLexer2.nextToken();
      assertEquals(30, token9.getTokenType());
      assertEquals("0", token9.getTokenText());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals("K", token11.getTokenText());
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.dots();
      assertEquals("8", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer2.identifierOrOperatorName();
      assertNull(token13);
      
      XPathLexer xPathLexer5 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token14 = xPathLexer5.rightParen();
      assertEquals("s", token14.getTokenText());
      assertEquals(2, token14.getTokenType());
      
      Token token15 = xPathLexer3.identifier();
      assertEquals(15, token15.getTokenType());
      
      Token token16 = xPathLexer0.notEquals();
      assertEquals("ns", token16.getTokenText());
      assertEquals(22, token16.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.1187695379802065
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer1.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer3.identifier();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer5 = new XPathLexer("%] T VY%$");
      xPathLexer5.identifierOrOperatorName();
      xPathLexer2.at();
      XPathLexer xPathLexer6 = new XPathLexer("tpQf5tXy\"#M");
      xPathLexer6.notEquals();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer5.equals();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer3.comma();
      xPathLexer2.or();
      // Undeclared exception!
      try { 
        xPathLexer7.LA((-660));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.8357955146842149
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.not();
      Token token1 = xPathLexer0.dollar();
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals("}", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("=f", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("L", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("}X");
      Token token6 = xPathLexer1.leftBracket();
      assertEquals("}", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(" ", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer3.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token11 = xPathLexer4.pipe();
      assertEquals(17, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("}X");
      Token token12 = xPathLexer0.not();
      assertEquals("5", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer3.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer0.notEquals();
      assertEquals("3H", token14.getTokenText());
      assertEquals(22, token14.getTokenType());
      
      Token token15 = xPathLexer0.colon();
      assertEquals(18, token15.getTokenType());
      assertEquals("K", token15.getTokenText());
      
      Token token16 = xPathLexer0.comma();
      assertEquals(32, token16.getTokenType());
      assertEquals("8", token16.getTokenText());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.800785146819633
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.4888559659298473
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.consume(0);
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.hasMoreChars();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-1011));
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.9175261181611272
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1xU#5]p]");
      xPathLexer0.notEquals();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.setXPath("5m$|HmIRIB");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer5 = new XPathLexer(":s?*(YZ~");
      xPathLexer5.star();
      xPathLexer2.notEquals();
      xPathLexer4.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.not();
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.notEquals();
      xPathLexer0.colon();
      xPathLexer8.identifier();
      xPathLexer5.dollar();
      xPathLexer3.literal();
      Token token0 = xPathLexer8.at();
      xPathLexer1.plus();
      xPathLexer2.colon();
      Token token1 = xPathLexer8.leftParen();
      assertFalse(token1.equals((Object)token0));
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8224486932039763
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.at();
      assertEquals("1", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("9.1A~^y Sx#oVBGCeC!");
      xPathLexer2.rightParen();
      Token token5 = xPathLexer1.dollar();
      assertEquals("1", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer2.equals();
      assertEquals(".", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals("x", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer1.leftParen();
      assertEquals("U", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("9.1A~^y Sx#oVBGCeC!");
      xPathLexer0.setXPath("1xU#5]p]");
      Token token9 = xPathLexer0.identifier();
      assertEquals("1xU", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer2.hasMoreChars();
      Token token10 = xPathLexer1.notEquals();
      assertEquals("#5", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.853580879285871
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.at();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.at();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("fh", token2.getTokenText());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(" 5", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer1.star();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer1.equals();
      Token token5 = xPathLexer1.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals("K", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals("8ns", token8.getTokenText());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("X&mfR;F/'\"x{%<ZmK");
      Token token9 = xPathLexer0.not();
      xPathLexer1.setPreviousToken(token9);
      assertEquals(23, token9.getTokenType());
      assertEquals("\"", token9.getTokenText());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertNull(token11);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.equals();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer1.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token14.getTokenType());
      
      Token token15 = xPathLexer0.minus();
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer2.star();
      assertEquals(20, token16.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.8727635726161713
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer1.comma();
      assertEquals("G", token0.getTokenText());
      
      xPathLexer1.at();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("G", token1.getTokenText());
      
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.not();
      assertEquals("&", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer1.getPreviousToken();
      assertEquals("R-R7H", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("+", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token5 = xPathLexer2.colon();
      assertEquals("G", token5.getTokenText());
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("R", token6.getTokenText());
      
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      xPathLexer1.star();
      XPathLexer xPathLexer4 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer4.star();
      Token token7 = xPathLexer3.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.star();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.identifierOrOperatorName();
      xPathLexer3.comma();
      XPathLexer xPathLexer8 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer8.at();
      XPathLexer xPathLexer9 = new XPathLexer("?n'd");
      Token token8 = xPathLexer8.notEquals();
      assertEquals("+R", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token9 = xPathLexer10.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer4.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("-", token11.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("&", token12.getTokenText());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.765903252575577
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('T');
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      xPathLexer1.equals();
      xPathLexer1.identifier();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      xPathLexer0.dots();
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals(17, token10.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.mod();
      boolean boolean1 = xPathLexer1.hasMoreChars();
      assertFalse(boolean1 == boolean0);
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer1.currentPosition();
      Token token13 = xPathLexer0.rightParen();
      assertEquals(2, token13.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(6, int0);
      
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer0.rightBracket();
      assertEquals(4, token15.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.9463226773165536
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer1.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer5 = new XPathLexer("%] T VY%$");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer6.notEquals();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.equals();
      XPathLexer xPathLexer8 = new XPathLexer("%] T VY%$");
      xPathLexer5.pipe();
      XPathLexer xPathLexer9 = new XPathLexer("EX,l#");
      xPathLexer2.not();
      xPathLexer6.minus();
      xPathLexer5.notEquals();
      xPathLexer9.colon();
      xPathLexer6.comma();
      Token token0 = xPathLexer1.or();
      assertNull(token0);
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.850791657818068
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      xPathLexer0.doubleColon();
      xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1512));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q@<");
      char char0 = xPathLexer0.LA(32);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.8599481574305257
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2<Shb}6@~mq");
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.0305563419589365
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      xPathLexer0.at();
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      assertEquals(">", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals("x", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      Token token2 = xPathLexer2.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer3 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      Token token3 = xPathLexer3.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("D", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals(">x", token5.getTokenText());
      
      Token token6 = xPathLexer4.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer3.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("U", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("`", token9.getTokenText());
      
      xPathLexer4.and();
      Token token10 = xPathLexer3.equals();
      assertEquals("q", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer3.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("m", token11.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.rightParen();
      xPathLexer5.operatorName();
      Token token12 = xPathLexer3.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals("6", token12.getTokenText());
      
      Token token13 = xPathLexer5.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      xPathLexer2.mod();
      Token token14 = xPathLexer1.plus();
      assertEquals(5, token14.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.3681648597767215
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.plus();
      xPathLexer0.plus();
      xPathLexer0.currentPosition();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.242613097835338
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("5.3*");
      Token token0 = xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("5.3*");
      xPathLexer0.dots();
      xPathLexer0.relationalOperator();
      xPathLexer1.doubleColon();
      xPathLexer2.relationalOperator();
      xPathLexer2.relationalOperator();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("o:w2GA9>7r=.");
      xPathLexer1.plus();
      token0.toString();
      xPathLexer4.star();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer1.dollar();
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer5 = new XPathLexer("o:w2GA9>7r=.");
      xPathLexer0.notEquals();
      xPathLexer3.equals();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=3.4552410743474
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      Token token1 = xPathLexer1.plus();
      assertEquals(5, token1.getTokenType());
      
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("Fe3CeCFPx/9");
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer3.identifierOrOperatorName();
      assertEquals("Fe3CeCFPx", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.equals();
      Token token6 = xPathLexer3.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("/", token6.getTokenText());
      
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertNotNull(token7);
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer4.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer4.star();
      assertEquals(20, token9.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.8402966075107032
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.and();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.star();
      assertEquals("m", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      xPathLexer0.comma();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("saxpath.XPathLexer", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.comma();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.8577477233072843
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("_KO8]");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer2.dots();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer6.relationalOperator();
      xPathLexer5.whitespace();
      xPathLexer1.rightBracket();
      Token token0 = xPathLexer3.rightParen();
      xPathLexer6.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer("H=dbn");
      xPathLexer3.plus();
      token0.toString();
      xPathLexer5.star();
      xPathLexer5.identifierOrOperatorName();
      xPathLexer0.comma();
      xPathLexer4.dollar();
      xPathLexer5.rightBracket();
      XPathLexer xPathLexer8 = null;
      try {
        xPathLexer8 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.3101551610406985
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("a", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("}=", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("fhL", token5.getTokenText());
      
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals("K8", token8.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("\"8");
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("\"8");
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.identifier();
      Token token9 = xPathLexer2.slashes();
      assertEquals("\"", token9.getTokenText());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals("\"", token10.getTokenText());
      
      Token token11 = xPathLexer1.comma();
      assertEquals("8", token11.getTokenText());
      
      Token token12 = xPathLexer3.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals("n", token13.getTokenText());
      assertEquals(18, token13.getTokenType());
      
      xPathLexer0.literal();
      Token token14 = xPathLexer2.dollar();
      assertEquals(26, token14.getTokenType());
      assertEquals("8", token14.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token15 = xPathLexer4.not();
      assertEquals(23, token15.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token16 = xPathLexer5.notEquals();
      assertEquals(22, token16.getTokenType());
      
      xPathLexer3.nextToken();
      Token token17 = xPathLexer4.doubleColon();
      assertEquals(19, token17.getTokenType());
      
      Token token18 = xPathLexer2.nextToken();
      assertEquals((-1), token18.getTokenType());
      
      Token token19 = xPathLexer5.comma();
      assertEquals(32, token19.getTokenType());
      
      Token token20 = xPathLexer0.plus();
      assertEquals(5, token20.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.6884612084667237
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "com.werken.saxpath.XPathLexer";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~m$");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.div();
      xPathLexer2.dots();
      xPathLexer2.comma();
      xPathLexer2.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("\"|@/");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.6884296373583734
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.dollar();
      xPathLexer2.dots();
      xPathLexer2.doubleColon();
      xPathLexer2.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("\"|T@/");
      xPathLexer1.leftBracket();
      xPathLexer1.nextToken();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
