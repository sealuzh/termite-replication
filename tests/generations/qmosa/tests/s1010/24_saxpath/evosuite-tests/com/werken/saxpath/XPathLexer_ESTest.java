/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 10 20:20:10 GMT 2020
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.976820895313566
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.consume((-467));
      xPathLexer0.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.5400363038209806
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("JP'ut(s@a");
      xPathLexer0.pipe();
      xPathLexer0.colon();
      xPathLexer0.consume((-410));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6385341421186768
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      Token token0 = xPathLexer2.nextToken();
      assertEquals("_.", token0.getTokenText());
      
      Token token1 = xPathLexer2.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.comma();
      Token token2 = xPathLexer2.nextToken();
      assertEquals("*", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer3.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer1.mod();
      xPathLexer4.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("U", token4.getTokenText());
      
      xPathLexer2.comma();
      xPathLexer4.relationalOperator();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer4.dollar();
      assertEquals("_", token6.getTokenText());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer4.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals("X", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.operatorName();
      Token token11 = xPathLexer5.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
      
      char char0 = xPathLexer1.LA(0);
      assertEquals('1', char0);
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.6551791657909392
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      String string0 = "$di-Na\\#13";
      xPathLexer0.setXPath("$di-Na#13");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      xPathLexer1.consume((-6007));
      // Undeclared exception!
      try { 
        xPathLexer1.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.349517984638823
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.at();
      Token token1 = xPathLexer0.dots();
      assertEquals("a", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("}=", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("f", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("h", token4.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("53", token5.getTokenText());
      
      xPathLexer1.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.star();
      assertEquals("H", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("vd");
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer5.nextToken();
      assertEquals("vd", token14.getTokenText());
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.495851530555165
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("o", token1.getTokenText());
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("XO/RHMjROa");
      XPathLexer xPathLexer2 = new XPathLexer("e=J tfAKa5Ku*");
      Token token2 = xPathLexer2.at();
      assertEquals("e", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("XO/RHMjROa");
      Token token3 = xPathLexer3.dollar();
      assertEquals("X", token3.getTokenText());
      
      Token token4 = xPathLexer2.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("=", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("m.", token5.getTokenText());
      assertEquals(14, token5.getTokenType());
      
      xPathLexer2.or();
      xPathLexer2.operatorName();
      xPathLexer3.div();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.rightBracket();
      Token token6 = xPathLexer2.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      assertEquals("w", token7.getTokenText());
      
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer2.mod();
      Token token8 = xPathLexer4.nextToken();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals("*", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("XO/RHMjROa");
      Token token11 = xPathLexer1.notEquals();
      assertEquals("XO", token11.getTokenText());
      assertEquals(22, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("A?}hA EkIpG{_H@h");
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer3.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("O", token13.getTokenText());
      
      Token token14 = xPathLexer3.nextToken();
      assertEquals(11, token14.getTokenType());
      assertEquals("/", token14.getTokenText());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.735561305548352
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("[ (");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("D^9iBLf");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.consume(34);
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.minus();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3156290769546946
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.consume((-125));
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5120774968994817
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("al=+f|aHE");
      Token token0 = xPathLexer0.star();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer1.dots();
      assertEquals("a", token1.getTokenText());
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("xU", token2.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.star();
      xPathLexer3.mod();
      xPathLexer0.star();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("l", token4.getTokenText());
      
      Token token5 = xPathLexer1.leftBracket();
      assertEquals("=", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer3.equals();
      XPathLexer xPathLexer4 = new XPathLexer("OC?K]PJe{");
      Token token6 = xPathLexer1.star();
      assertEquals("+", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer("[ (");
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token8 = xPathLexer4.comma();
      assertEquals("O", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer6.notEquals();
      assertEquals("[ ", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3391313190641558
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals("1", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      XPathLexer xPathLexer3 = new XPathLexer("1xU#5]p]");
      Token token1 = xPathLexer3.colon();
      assertEquals("1", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      Token token2 = xPathLexer2.pipe();
      assertEquals("_", token2.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token3 = xPathLexer4.rightBracket();
      assertEquals("D", token3.getTokenText());
      
      Token token4 = xPathLexer3.doubleColon();
      assertEquals("xU", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.setXPath("5m$|HmIRIB");
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertEquals("5m", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals("$", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("H", token8.getTokenText());
      
      xPathLexer1.dollar();
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("#", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("_. *GXIZr}59Ni");
      Token token10 = xPathLexer2.literal();
      assertNull(token10);
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer8.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer4.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("H", token12.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("1xU#5]p]");
      xPathLexer9.relationalOperator();
      Token token13 = xPathLexer2.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer2.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer2.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0915751612793196
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer2.nextToken();
      xPathLexer2.plus();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer2.relationalOperator();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer1.mod();
      xPathLexer0.star();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("je6bu-C&");
      xPathLexer6.nextToken();
      xPathLexer3.comma();
      xPathLexer0.relationalOperator();
      String string0 = "";
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2376158064095715
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("1>xU#5]p]");
      xPathLexer1.colon();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.number();
      xPathLexer1.whitespace();
      xPathLexer2.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.2268187770577332
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("f", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("h", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("L ", token6.getTokenText());
      
      xPathLexer1.star();
      xPathLexer0.mod();
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertNotNull(token9);
      
      XPathLexer xPathLexer3 = new XPathLexer("G:AQ$w9ip~[6H#");
      xPathLexer0.dollar();
      Token token10 = xPathLexer1.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("O]|nHmfdhH>6{1S1m");
      Token token11 = xPathLexer4.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer(":^wEqS3w&Z0F_GgXl'o");
      Token token12 = xPathLexer3.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals("G", token12.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer5.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals(":", token13.getTokenText());
      
      Token token14 = xPathLexer5.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      Token token15 = xPathLexer1.not();
      assertEquals(23, token15.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5676000307283082
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.consume();
      Token token3 = xPathLexer0.pipe();
      assertEquals("e", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifier();
      assertEquals(15, token4.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.setXPath("[ (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("D^9iBLf");
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.minus();
      assertEquals("D", token7.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.equals();
      assertEquals("^", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      xPathLexer0.star();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("i", token9.getTokenText());
      
      xPathLexer0.div();
      Token token10 = xPathLexer0.nextToken();
      assertEquals("BLf", token10.getTokenText());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals("B", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      xPathLexer0.consume(34);
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token12 = xPathLexer0.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.774132364519093
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("R-R7H", token1.getTokenText());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.setXPath("&2Wf{$GaZY\"t4cy/Q");
      xPathLexer0.identifierOrOperatorName();
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      Token token6 = xPathLexer0.at();
      assertEquals("2", token6.getTokenText());
      
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.minus();
      assertEquals("W", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      xPathLexer0.and();
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("f", token8.getTokenText());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.literal();
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer0.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3020518624656743
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.comma();
      assertEquals("s", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(")", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("a", token2.getTokenText());
      
      xPathLexer0.not();
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.dollar();
      assertEquals("f", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("L", token5.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token6 = xPathLexer2.notEquals();
      assertEquals("s)", token6.getTokenText());
      
      xPathLexer2.star();
      xPathLexer0.mod();
      xPathLexer0.star();
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer2.star();
      assertEquals("a", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer(") (");
      xPathLexer2.mod();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer3.setPreviousToken(token9);
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer4.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token13 = xPathLexer1.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer6.identifier();
      assertEquals(15, token14.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.280526124759944
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("xgg$A^;hU@~*");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("x", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("xgg$A^;hU@~*");
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer3.colon();
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.star();
      xPathLexer1.mod();
      Token token6 = xPathLexer0.star();
      assertEquals("A", token6.getTokenText());
      
      Token token7 = xPathLexer4.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer3.star();
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      String string0 = token5.toString();
      assertEquals("[ (21) ($)", string0);
      
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertEquals("gg", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer0.mod();
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token10 = xPathLexer8.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer8.setPreviousToken(token5);
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer8.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer3.equals();
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token13 = xPathLexer10.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8458617003902114
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.consume(71);
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7192072479019818
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      XPathLexer xPathLexer1 = new XPathLexer("5.3*");
      Token token3 = xPathLexer1.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("5.", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("5.3*");
      Token token4 = xPathLexer0.dots();
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.whitespace();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer2.whitespace();
      assertEquals((-2), token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.leftParen();
      xPathLexer5.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer7.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer5.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals(".", token10.getTokenText());
      
      xPathLexer4.literal();
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer8.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      Token token12 = xPathLexer2.not();
      assertEquals("3", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer8.plus();
      assertEquals(5, token13.getTokenType());
      assertEquals("o", token13.getTokenText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4854009752643673
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("[ (");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("\"k'ZJx(qyrFd=Zsd");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer("\"k'ZJx(qyrFd=Zsd");
      xPathLexer3.dollar();
      xPathLexer2.getPreviousToken();
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer4.not();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.getPreviousToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.leftBracket();
      xPathLexer2.comma();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.8078838594064366
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      Token token0 = xPathLexer0.minus();
      assertEquals("5", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(31, token1.getTokenType());
      assertEquals(".3", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      XPathLexer xPathLexer1 = new XPathLexer("5.3*");
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("5.3*");
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer1.doubleColon();
      assertEquals("5.", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer3.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals("3", token7.getTokenText());
      
      Token token8 = xPathLexer1.comma();
      assertEquals("*", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer("5.3*");
      Token token9 = xPathLexer1.minus();
      assertEquals(6, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.dollar();
      Token token10 = xPathLexer6.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer1.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer3.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals("o", token12.getTokenText());
      
      xPathLexer4.leftBracket();
      Token token13 = xPathLexer3.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer6.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer2.literal();
      assertNull(token15);
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token16 = xPathLexer4.dollar();
      assertEquals(26, token16.getTokenType());
      
      xPathLexer1.not();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer0.relationalOperator();
      Token token17 = xPathLexer5.slashes();
      assertEquals(11, token17.getTokenType());
      assertEquals("5", token17.getTokenText());
      
      Token token18 = xPathLexer2.rightBracket();
      assertEquals(4, token18.getTokenType());
      
      Token token19 = xPathLexer5.leftBracket();
      assertEquals(".", token19.getTokenText());
      assertEquals(3, token19.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6931364897291892
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("9`EWeMT $R:");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.slashes();
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer4.dots();
      xPathLexer1.at();
      xPathLexer4.comma();
      xPathLexer0.literal();
      xPathLexer1.dollar();
      xPathLexer2.not();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.6506263362583729
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer1.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer2.rightBracket();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("co", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer2.minus();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer1.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(".", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("$dEi-Nad#13");
      Token token5 = xPathLexer5.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("$", token5.getTokenText());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("$dEi-Nad#13");
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      XPathLexer xPathLexer7 = new XPathLexer("G:AQ$w9ip~[6H#");
      xPathLexer7.dollar();
      Token token7 = xPathLexer3.rightBracket();
      assertEquals("c", token7.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer("O]|nHmfdhH>6{1S1m");
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token8 = xPathLexer1.dollar();
      assertEquals("m", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token9 = xPathLexer6.leftBracket();
      assertEquals(3, token9.getTokenType());
      assertEquals("$", token9.getTokenText());
      
      Token token10 = xPathLexer10.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer7.not();
      assertEquals(23, token11.getTokenType());
      assertEquals(":", token11.getTokenText());
      
      Token token12 = xPathLexer7.slashes();
      assertEquals(11, token12.getTokenType());
      assertEquals("A", token12.getTokenText());
      
      Token token13 = xPathLexer9.rightBracket();
      assertEquals(4, token13.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.8146055712247147
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('R');
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.rightBracket();
      xPathLexer1.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.dots();
      xPathLexer1.minus();
      xPathLexer0.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer1.equals();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      xPathLexer0.nextToken();
      xPathLexer0.consume(71);
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.067153925931236
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.comma();
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.notEquals();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      token0.toString();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer4.setPreviousToken(token0);
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.not();
      xPathLexer2.setPreviousToken(token1);
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.rightParen();
      xPathLexer2.or();
      xPathLexer4.at();
      Token token2 = xPathLexer6.and();
      assertNull(token2);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.420482321303883
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      assertEquals("1", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(">", token1.getTokenText());
      assertEquals(9, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      Token token3 = xPathLexer1.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      assertEquals("U#", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.setXPath("DH`qm6Z'-C8<!#%FR.#");
      xPathLexer3.pipe();
      Token token6 = xPathLexer2.identifierOrOperatorName();
      assertEquals("H", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("9]");
      Token token7 = xPathLexer5.minus();
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer4.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer4.star();
      assertEquals("`", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(",^B%`$rZk~mGDJzQ ");
      xPathLexer1.notEquals();
      XPathLexer xPathLexer7 = new XPathLexer("`-I");
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer3.not();
      assertEquals(23, token13.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token14 = xPathLexer8.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer3.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7012216850266353
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      xPathLexer0.at();
      Token token0 = xPathLexer0.relationalOperator();
      assertEquals(9, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token1 = xPathLexer0.at();
      assertEquals("x", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      Token token2 = xPathLexer2.dollar();
      assertEquals("1", token2.getTokenText());
      
      Token token3 = xPathLexer1.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("U", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      xPathLexer2.operatorName();
      Token token5 = xPathLexer1.nextToken();
      assertEquals(1, token5.getTokenType());
      assertEquals("(", token5.getTokenText());
      
      xPathLexer1.or();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      assertEquals("#", token6.getTokenText());
      
      xPathLexer1.notEquals();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer0.and();
      xPathLexer2.and();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals(">", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.comma();
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.literal();
      Token token10 = xPathLexer6.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer3.colon();
      xPathLexer4.literal();
      Token token11 = xPathLexer6.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer4.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer5.relationalOperator();
      xPathLexer2.operatorName();
      Token token13 = xPathLexer4.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer0.colon();
      assertEquals("5", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.8152049266199466
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String string0 = "";
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.notEquals();
      xPathLexer0.setXPath("");
      xPathLexer0.leftBracket();
      xPathLexer0.leftParen();
      xPathLexer0.leftParen();
      xPathLexer0.consume((-935));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.6739518601943744
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      xPathLexer0.setXPath("$di-Na#13");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token8 = xPathLexer2.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token9 = xPathLexer2.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer2.mod();
      Token token10 = xPathLexer0.plus();
      assertEquals("d", token10.getTokenText());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("i", token11.getTokenText());
      
      xPathLexer0.div();
      Token token12 = xPathLexer1.plus();
      assertEquals(5, token12.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5320518282871962
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('*');
      assertFalse(boolean0);
      
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("?|='1cN");
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("?", token3.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("|", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.getPreviousToken();
      assertEquals("cN", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer0.mod();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.286496722151829
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("U", token2.getTokenText());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.star();
      assertEquals(20, token4.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.mod();
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer4.dollar();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer6 = new XPathLexer("$d X?U.7|7g?!P");
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token8 = xPathLexer0.dollar();
      assertEquals("5", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer4.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("]", token10.getTokenText());
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.489441727823875
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer("_KO8]");
      xPathLexer3.dots();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer1.identifier();
      xPathLexer0.rightBracket();
      xPathLexer2.mod();
      XPathLexer xPathLexer4 = new XPathLexer("QI4?H_2rSF\"e");
      xPathLexer4.mod();
      xPathLexer3.nextToken();
      xPathLexer1.comma();
      xPathLexer2.at();
      XPathLexer xPathLexer5 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      XPathLexer xPathLexer6 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer0.dollar();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.leftBracket();
      xPathLexer6.nextToken();
      xPathLexer1.not();
      Token token0 = xPathLexer6.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.611438858078601
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Pa", token1.getTokenText());
      
      Token token2 = xPathLexer1.plus();
      assertEquals("s", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(2, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("&(F");
      Token token4 = xPathLexer3.star();
      assertEquals("&", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer3.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.mod();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("Pa}=fhL 53HK8ns\"w", token6.getTokenText());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("}", token7.getTokenText());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("&(F");
      Token token8 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.dollar();
      Token token9 = xPathLexer7.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer5.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer4.literal();
      Token token11 = xPathLexer7.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer4.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token13 = xPathLexer5.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.8243998690443624
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("a", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("}=", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals("3", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token8 = xPathLexer1.plus();
      assertEquals(5, token8.getTokenType());
      
      Token token9 = xPathLexer0.colon();
      assertEquals("H", token9.getTokenText());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer2.whitespace();
      assertEquals((-2), token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer4.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer3.at();
      assertEquals(16, token14.getTokenType());
      
      Token token15 = xPathLexer0.comma();
      assertEquals("K", token15.getTokenText());
      assertEquals(32, token15.getTokenType());
      
      Token token16 = xPathLexer2.literal();
      assertNull(token16);
      
      Token token17 = xPathLexer3.dollar();
      assertEquals(26, token17.getTokenType());
      
      Token token18 = xPathLexer4.not();
      assertEquals(23, token18.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token19 = xPathLexer5.notEquals();
      assertEquals(22, token19.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token20 = xPathLexer6.colon();
      assertEquals(18, token20.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.9380950028948225
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.rightParen();
      xPathLexer0.dots();
      xPathLexer0.identifier();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer1.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.763467788561912
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.div();
      xPathLexer0.at();
      Token token0 = xPathLexer0.dots();
      assertEquals(")", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("Pa", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(" ", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer2.identifierOrOperatorName();
      assertEquals("s", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.slashes();
      assertEquals("H", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.comma();
      Token token7 = xPathLexer3.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer1.at();
      assertEquals("s", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer3.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer3.dollar();
      assertEquals(26, token11.getTokenType());
      
      xPathLexer4.not();
      xPathLexer2.relationalOperator();
      Token token12 = xPathLexer1.notEquals();
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7231500603959644
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("$di-Na#13");
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("$di-Na#13");
      Token token3 = xPathLexer2.slashes();
      assertEquals("$", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("i", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dollar();
      Token token7 = xPathLexer2.at();
      assertEquals("1", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.minus();
      assertEquals(6, token9.getTokenType());
      
      xPathLexer2.literal();
      Token token10 = xPathLexer0.dollar();
      assertEquals("-", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.operatorName();
      Token token12 = xPathLexer1.notEquals();
      assertEquals(22, token12.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("K`*Mz8Ick4");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer4.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
      assertEquals("Na", token14.getTokenText());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.4479398253090516
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.consume((-2446));
      xPathLexer0.leftParen();
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.768665996138965
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      xPathLexer3.rightParen();
      xPathLexer3.dots();
      xPathLexer1.operatorName();
      xPathLexer2.nextToken();
      xPathLexer0.or();
      xPathLexer2.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer2.mod();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer1.and();
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer5.slashes();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.comma();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.literal();
      xPathLexer2.at();
      xPathLexer7.colon();
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer9 = new XPathLexer("o2}j$jzjVB>!/7*C)Q");
      xPathLexer8.not();
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer3.leftBracket();
      xPathLexer2.nextToken();
      xPathLexer3.not();
      Token token0 = xPathLexer9.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3220422799608142
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("a}", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("=", token3.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.equals();
      xPathLexer2.mod();
      Token token4 = xPathLexer0.star();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      Token token6 = xPathLexer3.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals("H", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token4);
      assertEquals("5", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token8 = xPathLexer3.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals("K8ns", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer5.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer4.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.3745225631561353
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      xPathLexer0.colon();
      xPathLexer1.and();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.nextToken();
      xPathLexer2.rightBracket();
      xPathLexer1.doubleColon();
      xPathLexer2.minus();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer1.mod();
      XPathLexer xPathLexer5 = new XPathLexer("$dEi-Nad#13");
      xPathLexer5.nextToken();
      xPathLexer2.comma();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer1.dollar();
      xPathLexer3.getPreviousToken();
      XPathLexer xPathLexer8 = new XPathLexer("e$s#te}m");
      XPathLexer xPathLexer9 = null;
      try {
        xPathLexer9 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7473269645895768
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(5t");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.colon();
      assertEquals("(", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("ckzyA/GM{F>");
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("c", token3.getTokenText());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("y", token6.getTokenText());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume(85);
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.603169583973213
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token1 = xPathLexer0.at();
      assertEquals("+", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token2 = xPathLexer2.dots();
      assertEquals("G", token2.getTokenText());
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("R-", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (");
      XPathLexer xPathLexer4 = new XPathLexer("k9");
      Token token4 = xPathLexer0.slashes();
      assertEquals("R", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      xPathLexer1.mod();
      Token token5 = xPathLexer4.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("k9", token5.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer0.dollar();
      Token token6 = xPathLexer3.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer5.comma();
      xPathLexer4.literal();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("G", token7.getTokenText());
      
      Token token8 = xPathLexer5.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("+", token8.getTokenText());
      
      xPathLexer5.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.operatorName();
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals("&%", token9.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer5.comma();
      assertEquals("R", token10.getTokenText());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.8920031969002864
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.number();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer(")");
      xPathLexer1.plus();
      xPathLexer0.colon();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.whitespace();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.at();
      xPathLexer3.leftBracket();
      xPathLexer0.at();
      xPathLexer0.pipe();
      xPathLexer3.or();
      xPathLexer3.dollar();
      xPathLexer2.not();
      xPathLexer1.operatorName();
      xPathLexer1.colon();
      Token token1 = xPathLexer3.doubleColon();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8534598672333995
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.number();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("s", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("a}", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("f", token4.getTokenText());
      
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.leftParen();
      assertEquals("H", token7.getTokenText());
      assertEquals(1, token7.getTokenType());
      
      xPathLexer0.operatorName();
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("K", token8.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("ns\"w", token9.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      Token token11 = xPathLexer1.dollar();
      assertEquals(26, token11.getTokenType());
      
      xPathLexer0.leftBracket();
      xPathLexer3.mod();
      Token token12 = xPathLexer2.slashes();
      assertEquals(11, token12.getTokenType());
      
      xPathLexer3.rightBracket();
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6849710822878323
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.rightBracket();
      xPathLexer1.whitespace();
      xPathLexer1.leftParen();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      xPathLexer1.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.nextToken();
      xPathLexer2.consume((-665));
      xPathLexer2.equals();
      xPathLexer1.comma();
      xPathLexer0.mod();
      xPathLexer1.relationalOperator();
      // Undeclared exception!
      try { 
        xPathLexer2.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.3929568921817759
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.dollar();
      xPathLexer1.rightParen();
      xPathLexer1.dots();
      xPathLexer1.or();
      xPathLexer1.operatorName();
      xPathLexer0.div();
      xPathLexer1.or();
      xPathLexer2.rightBracket();
      xPathLexer1.identifier();
      xPathLexer0.rightBracket();
      xPathLexer2.mod();
      XPathLexer xPathLexer3 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer1.comma();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer("_KO8]");
      XPathLexer xPathLexer5 = new XPathLexer("hO?H|/x`:oAB?_m5m=I");
      xPathLexer2.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.not();
      Token token0 = xPathLexer4.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.3320698142757312
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@x ");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("$:", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.colon();
      assertEquals("Z", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("$:(Z`[&C~@x ");
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(3, token3.getTokenType());
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals("&", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer1.plus();
      assertEquals("$", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("^6_U[^TiRXj$@>kmb0]");
      Token token6 = xPathLexer0.identifier();
      assertEquals("C", token6.getTokenText());
      
      xPathLexer2.pipe();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("xh$$9]&p54 ");
      Token token8 = xPathLexer6.identifierOrOperatorName();
      assertNotNull(token8);
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer2.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("%] T VY%$");
      Token token10 = xPathLexer3.notEquals();
      assertEquals("^6", token10.getTokenText());
      
      Token token11 = xPathLexer1.not();
      assertEquals(":", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer7.operatorName();
      Token token12 = xPathLexer5.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer4.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer3.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("_", token14.getTokenText());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4902327928254984
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals("P", token1.getTokenText());
      
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("}=", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals("f", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("h", token4.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("53", token5.getTokenText());
      
      xPathLexer1.equals();
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token6 = xPathLexer1.plus();
      assertEquals(5, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("9]");
      Token token7 = xPathLexer3.minus();
      assertEquals(6, token7.getTokenType());
      assertEquals("9", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("HK8ns", token8.getTokenText());
      
      Token token9 = xPathLexer3.leftBracket();
      assertEquals("]", token9.getTokenText());
      
      Token token10 = xPathLexer3.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("\"", token11.getTokenText());
      
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer2.at();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer2.at();
      assertEquals(16, token13.getTokenType());
      
      Token token14 = xPathLexer4.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("s", token14.getTokenText());
      
      xPathLexer1.or();
      Token token15 = xPathLexer2.dollar();
      assertEquals(26, token15.getTokenType());
      
      Token token16 = xPathLexer1.not();
      assertEquals(23, token16.getTokenType());
      
      xPathLexer0.operatorName();
      Token token17 = xPathLexer5.colon();
      assertEquals(18, token17.getTokenType());
      
      Token token18 = xPathLexer1.doubleColon();
      assertEquals(19, token18.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.73621063594081
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.at();
      assertEquals("x", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("#5", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("]", token4.getTokenText());
      
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("1xU#5]p]");
      xPathLexer2.div();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1xU#5]p]");
      xPathLexer3.mod();
      xPathLexer1.mod();
      Token token6 = xPathLexer2.nextToken();
      assertEquals("1", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("x", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("1xU#5]p]");
      Token token8 = xPathLexer4.identifierOrOperatorName();
      assertEquals("1xU", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.dollar();
      assertEquals("1", token9.getTokenText());
      
      Token token10 = xPathLexer0.getPreviousToken();
      assertEquals("p]", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token11 = xPathLexer6.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer6.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer3.minus();
      assertEquals("x", token14.getTokenText());
      assertEquals(6, token14.getTokenType());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.4818632718568978
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer1.equals();
      xPathLexer0.mod();
      xPathLexer1.star();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("9]");
      xPathLexer3.minus();
      xPathLexer0.nextToken();
      xPathLexer3.leftBracket();
      xPathLexer3.equals();
      xPathLexer0.star();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.doubleColon();
      xPathLexer5.notEquals();
      xPathLexer4.identifierOrOperatorName();
      XPathLexer xPathLexer6 = new XPathLexer(",^B%`$rZk~mGDJzQ ");
      XPathLexer xPathLexer7 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer7.equals();
      XPathLexer xPathLexer8 = new XPathLexer();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token1 = xPathLexer9.comma();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.6277494893779199
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.minus();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.slashes();
      xPathLexer2.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer("Ehk5$M.6I`(pX.#&~");
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer4.slashes();
      xPathLexer1.comma();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.not();
      xPathLexer5.dots();
      xPathLexer0.at();
      xPathLexer2.comma();
      xPathLexer4.literal();
      xPathLexer5.dollar();
      xPathLexer3.not();
      Token token0 = xPathLexer2.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.2487229711975187
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals("c", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      Token token1 = xPathLexer2.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("2", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.div();
      Token token2 = xPathLexer3.dots();
      assertEquals("c", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer3.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("om", token3.getTokenText());
      
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer0.whitespace();
      Token token5 = xPathLexer1.rightBracket();
      assertEquals("o", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("o", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals(13, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.plus();
      String string0 = token4.toString();
      assertEquals("[ (-2) ()", string0);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer1.leftParen();
      assertEquals("m", token8.getTokenText());
      
      xPathLexer5.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer("7gNhbu");
      xPathLexer2.LA(2);
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.div();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("m", token9.getTokenText());
      
      Token token10 = xPathLexer0.literal();
      assertNotNull(token10);
      
      String string1 = token10.toString();
      assertEquals("[ (27) (werken)", string1);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5217015582472255
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("2g");
      xPathLexer0.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("2g");
      Token token0 = xPathLexer2.colon();
      assertEquals("2", token0.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token1 = xPathLexer1.rightParen();
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      
      xPathLexer1.getPreviousToken();
      Token token3 = xPathLexer2.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer2.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("5", token5.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertNull(token7);
      
      XPathLexer xPathLexer4 = new XPathLexer("zr^^a`=||[&7'Fr~g`");
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertEquals("g", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer4.equals();
      assertEquals("z", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("zr^^a`=||[&7'Fr~g`");
      Token token11 = xPathLexer6.comma();
      assertEquals("z", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.6002101800400885
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.star();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.dots();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer1.whitespace();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer1.or();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("m.", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer0.whitespace();
      assertEquals("", token4.getTokenText());
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("w", token5.getTokenText());
      
      xPathLexer2.rightParen();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer0.at();
      assertEquals(16, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("erken.saxpath.XPathLexer", token7.getTokenText());
      
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer1.and();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token11 = xPathLexer3.rightParen();
      assertEquals("c", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer1.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token13 = xPathLexer3.notEquals();
      assertEquals("om", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer3.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7064078118009394
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("YH-'ndhFq{e*A~7/;");
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.mod();
      xPathLexer2.mod();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer1.at();
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.literal();
      xPathLexer3.dollar();
      xPathLexer3.not();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.operatorName();
      xPathLexer3.notEquals();
      xPathLexer1.colon();
      Token token1 = xPathLexer5.leftBracket();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.382360289892168
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer1.comma();
      assertEquals("G", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("G", token2.getTokenText());
      
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("R-R7H", token3.getTokenText());
      
      Token token4 = xPathLexer1.not();
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer1.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("%", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("+", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("G+R-R7H&%}%");
      Token token7 = xPathLexer2.colon();
      assertEquals("G", token7.getTokenText());
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.equals();
      Token token8 = xPathLexer1.notEquals();
      assertEquals("}%", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      xPathLexer1.star();
      xPathLexer3.mod();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("-R", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer4.star();
      Token token11 = xPathLexer3.plus();
      assertEquals(5, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.star();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.identifierOrOperatorName();
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer0.mod();
      xPathLexer6.not();
      xPathLexer7.setPreviousToken(token10);
      assertEquals("c", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token12 = xPathLexer5.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer4.equals();
      assertEquals("o", token13.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("G+R-R7H&%}%");
      Token token14 = xPathLexer2.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("+", token14.getTokenText());
      
      Token token15 = xPathLexer8.not();
      assertEquals(23, token15.getTokenType());
      
      Token token16 = xPathLexer5.equals();
      assertEquals(21, token16.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.5979319334551412
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("_KO8]");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer1.dollar();
      xPathLexer1.rightParen();
      xPathLexer2.dots();
      xPathLexer1.or();
      xPathLexer2.operatorName();
      xPathLexer0.div();
      xPathLexer1.or();
      xPathLexer3.rightBracket();
      xPathLexer1.identifier();
      xPathLexer0.rightBracket();
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer1.mod();
      xPathLexer2.nextToken();
      xPathLexer1.comma();
      xPathLexer0.at();
      xPathLexer3.literal();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.dollar();
      xPathLexer2.not();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer4.at();
      xPathLexer0.notEquals();
      xPathLexer3.colon();
      xPathLexer5.doubleColon();
      int int0 = xPathLexer4.endPosition();
      assertEquals(16, int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4897960110338981
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.isIdentifierStartChar('*');
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("?|='1cN");
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.leftParen();
      xPathLexer0.isIdentifierStartChar('C');
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.colon();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.and();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.equals();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.1514792533381626
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      String string0 = null;
      xPathLexer0.nextToken();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.607801520194626
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@xW");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(18, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("$:(Z`[&C~@xW");
      Token token2 = xPathLexer0.at();
      assertEquals("(", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("#C]Ky6QH@)n~3V1V");
      Token token3 = xPathLexer1.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("$", token3.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      Token token5 = xPathLexer0.plus();
      assertEquals("Z", token5.getTokenText());
      
      Token token6 = xPathLexer0.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("`[", token6.getTokenText());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("$:(Z`[&C~@xW");
      xPathLexer3.whitespace();
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("&", token7.getTokenText());
      
      Token token8 = xPathLexer2.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer3.or();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("#C]Ky6QH@)n~3V1V");
      Token token9 = xPathLexer6.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("}96t$EWT ]");
      Token token10 = xPathLexer4.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer4.rightBracket();
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token11 = xPathLexer8.plus();
      assertEquals(5, token11.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token12 = xPathLexer3.leftBracket();
      assertEquals(":", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer3.nextToken();
      assertEquals("(", token13.getTokenText());
      
      Token token14 = xPathLexer1.not();
      assertEquals(23, token14.getTokenType());
      
      Token token15 = xPathLexer8.slashes();
      assertEquals(11, token15.getTokenType());
      
      Token token16 = xPathLexer5.rightBracket();
      assertEquals(4, token16.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.737695258602555
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("P", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("a}", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("=", token5.getTokenText());
      
      xPathLexer0.equals();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("hL", token6.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token7 = xPathLexer0.star();
      assertEquals("H", token7.getTokenText());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("K", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token10 = xPathLexer1.not();
      xPathLexer1.setPreviousToken(token10);
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("X&mfR;F/'\"x{%<ZmK");
      Token token11 = xPathLexer4.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertNull(token12);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.equals();
      XPathLexer xPathLexer6 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token13 = xPathLexer6.comma();
      assertEquals("s", token13.getTokenText());
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer3.slashes();
      assertEquals("s", token14.getTokenText());
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer4.equals();
      assertEquals(21, token15.getTokenType());
      assertEquals("f", token15.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7318140686430212
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.star();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer1.whitespace();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer1.dots();
      assertEquals(14, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      xPathLexer1.relationalOperator();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals("r", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("}");
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("}", token5.getTokenText());
      
      String string0 = token0.toString();
      assertEquals("[ (19) (om)", string0);
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer2.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.leftParen();
      assertEquals(1, token12.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.7520892463510203
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      Token token0 = xPathLexer0.colon();
      assertEquals("o", token0.getTokenText());
      
      xPathLexer1.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals("m", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer2.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("co", token4.getTokenText());
      
      Token token5 = xPathLexer2.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer1.mod();
      xPathLexer2.mod();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(".", token6.getTokenText());
      
      xPathLexer1.comma();
      xPathLexer2.relationalOperator();
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertNull(token7);
      
      xPathLexer0.dollar();
      Token token8 = xPathLexer4.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertEquals(27, token10.getTokenType());
      assertNotNull(token10);
      assertEquals("rk", token10.getTokenText());
      
      Token token11 = xPathLexer3.dollar();
      assertEquals("c", token11.getTokenText());
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals("n", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.operatorName();
      Token token13 = xPathLexer4.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer5.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.5895704189689137
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("f", token3.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer1.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token4 = xPathLexer0.minus();
      assertEquals("H", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("K8ns", token5.getTokenText());
      
      Token token6 = xPathLexer1.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("\"", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(",9x+@X)Xt@k");
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      assertEquals(",9", token9.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer2.div();
      Token token11 = xPathLexer3.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("+", token11.getTokenText());
      
      Token token12 = xPathLexer0.nextToken();
      assertEquals("w", token12.getTokenText());
      
      Token token13 = xPathLexer2.doubleColon();
      assertEquals(19, token13.getTokenType());
      assertEquals("s)", token13.getTokenText());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.172105353577486
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer1.mod();
      xPathLexer1.star();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer1.mod();
      xPathLexer2.setPreviousToken(token2);
      assertEquals("+R", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("%}", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals("%", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.3085424529486214
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      assertEquals("G", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("T'_xYHg'");
      Token token1 = xPathLexer0.at();
      assertEquals("G", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      Token token2 = xPathLexer1.dollar();
      assertEquals("+", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer3.doubleColon();
      assertEquals("2<", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token4 = xPathLexer3.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer3.rightBracket();
      assertEquals("h", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer1.rightParen();
      xPathLexer2.nextToken();
      xPathLexer3.dots();
      Token token6 = xPathLexer2.getPreviousToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer2.rightParen();
      Token token7 = xPathLexer2.dots();
      assertEquals("_", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("}", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("#-LfM8Z)IOGl59");
      xPathLexer3.setXPath("");
      Token token10 = xPathLexer1.identifier();
      assertEquals("-R7H", token10.getTokenText());
      
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5562945534777526
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("(5t");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.colon();
      assertEquals("(", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.equals();
      assertEquals("5", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("t", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("!YoqBQxRHKu5d->Nak ");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.mod();
      xPathLexer0.mod();
      Token token6 = xPathLexer2.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.dollar();
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer1.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("!", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.302602737089012
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("$:(Z`[&C~@x ");
      Token token1 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("Uy}\"7hLg=`");
      Token token3 = xPathLexer1.plus();
      assertEquals("$", token3.getTokenText());
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.identifier();
      Token token4 = xPathLexer2.pipe();
      assertEquals("U", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.star();
      assertEquals(20, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("xh$$9]&p54 ");
      Token token6 = xPathLexer6.identifierOrOperatorName();
      assertEquals("xh", token6.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("%] T VY%$");
      xPathLexer3.notEquals();
      Token token7 = xPathLexer1.not();
      assertEquals(":", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer7.operatorName();
      Token token8 = xPathLexer5.notEquals();
      assertEquals(22, token8.getTokenType());
      
      Token token9 = xPathLexer4.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.6385341421186768
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer2.plus();
      assertEquals(" ", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer2.nextToken();
      assertEquals(20, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer2.star();
      assertEquals("G", token2.getTokenText());
      
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer3.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer1.mod();
      xPathLexer4.mod();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("xU", token4.getTokenText());
      
      xPathLexer2.comma();
      xPathLexer4.relationalOperator();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer4.dollar();
      assertEquals("_", token6.getTokenText());
      
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("1", token7.getTokenText());
      
      Token token8 = xPathLexer4.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals(".", token8.getTokenText());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals("I", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.operatorName();
      Token token11 = xPathLexer5.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.7193351345224852
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer2.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      Token token2 = xPathLexer3.rightParen();
      assertEquals("o", token2.getTokenText());
      
      Token token3 = xPathLexer3.dots();
      assertEquals(14, token3.getTokenType());
      assertEquals("m.", token3.getTokenText());
      
      xPathLexer1.operatorName();
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer2.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("co", token6.getTokenText());
      
      xPathLexer2.mod();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer1.and();
      xPathLexer4.and();
      xPathLexer4.identifierOrOperatorName();
      Token token7 = xPathLexer0.slashes();
      assertEquals("m", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.comma();
      Token token8 = xPathLexer0.comma();
      assertEquals(".", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals("w", token9.getTokenText());
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer3.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer5.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer2.operatorName();
      Token token13 = xPathLexer5.notEquals();
      assertEquals(22, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer7.doubleColon();
      assertEquals(19, token15.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.380492084000039
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dollar();
      xPathLexer3.rightParen();
      xPathLexer3.dots();
      xPathLexer1.operatorName();
      xPathLexer2.nextToken();
      xPathLexer0.or();
      xPathLexer2.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer2.mod();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer1.and();
      xPathLexer4.and();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      xPathLexer2.mod();
      xPathLexer5.slashes();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.comma();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.literal();
      xPathLexer2.at();
      xPathLexer7.colon();
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer9 = new XPathLexer("o2}j$jzjVB>!/7*C)Q");
      xPathLexer8.dollar();
      XPathLexer xPathLexer10 = new XPathLexer();
      xPathLexer3.leftBracket();
      xPathLexer8.and();
      xPathLexer3.not();
      Token token0 = xPathLexer9.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.6253872550386539
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer1.pipe();
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("_KO8]");
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("2<Shb}6@~mq");
      Token token1 = xPathLexer1.dollar();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals("m", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer2.dots();
      assertEquals("K", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      xPathLexer1.or();
      xPathLexer2.operatorName();
      xPathLexer0.div();
      xPathLexer1.or();
      xPathLexer3.rightBracket();
      Token token4 = xPathLexer1.identifier();
      assertEquals(".werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("c", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer1.mod();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals("o", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer3.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer5.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer2.not();
      assertEquals("]", token11.getTokenText());
      assertEquals(23, token11.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.operatorName();
      Token token12 = xPathLexer0.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("m.", token12.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("XM F&nH+:mh?8B-");
      Token token13 = xPathLexer6.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4923684426493404
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals(">", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("U", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("#", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("]", token5.getTokenText());
      
      xPathLexer0.colon();
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.mod();
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.dollar();
      Token token10 = xPathLexer2.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("1>xU#5]p]");
      XPathLexer xPathLexer4 = new XPathLexer("67y_ArX]#Z:;G-");
      Token token11 = xPathLexer1.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer2.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer3.nextToken();
      assertEquals("1", token13.getTokenText());
      assertEquals(30, token13.getTokenType());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.6917647857361826
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("om.werken.saxpath.XPathLexer", token0.getTokenText());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("$di-Na#13");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("$", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("$di-Na#13");
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer1.slashes();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      
      xPathLexer3.setXPath("");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token6 = xPathLexer2.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("#", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer3.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      assertEquals("1", token8.getTokenText());
      
      Token token9 = xPathLexer5.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer0.plus();
      Token token10 = xPathLexer3.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer1.div();
      Token token11 = xPathLexer0.plus();
      assertEquals("i", token11.getTokenText());
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer4.nextToken();
      assertEquals((-1), token12.getTokenType());
      
      Token token13 = xPathLexer3.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("-", token14.getTokenText());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.6044487145494926
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.setXPath("$dEi-Nad#13");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.consume((-1799));
      assertEquals("$dEi-Nad#13", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.8326566613222242
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.setXPath("$di-Na#13");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      Token token6 = xPathLexer0.rightParen();
      assertEquals("$", token6.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("$di-Na#13");
      Token token7 = xPathLexer2.slashes();
      assertEquals("$", token7.getTokenText());
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals("di-Na", token8.getTokenText());
      
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.XPathLexer", token9.getTokenText());
      
      xPathLexer1.comma();
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dollar();
      Token token10 = xPathLexer2.at();
      assertEquals("1", token10.getTokenText());
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.comma();
      assertEquals("3", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer2.minus();
      assertEquals(6, token12.getTokenType());
      
      Token token13 = xPathLexer2.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer0.dollar();
      assertEquals(26, token14.getTokenType());
      assertEquals("d", token14.getTokenText());
      
      Token token15 = xPathLexer2.not();
      assertEquals(23, token15.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer2.operatorName();
      Token token16 = xPathLexer1.notEquals();
      assertEquals(22, token16.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("K`*Mz8Ick4");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.colon();
      Token token17 = xPathLexer4.colon();
      assertEquals(18, token17.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.747572996756772
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("P", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals("a", token3.getTokenText());
      assertEquals(13, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("}=", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.pipe();
      assertEquals("3", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("8", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("n", token8.getTokenText());
      
      xPathLexer0.mod();
      Token token9 = xPathLexer0.leftParen();
      assertEquals("s", token9.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      assertEquals("\"", token11.getTokenText());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals("w", token12.getTokenText());
      
      xPathLexer0.mod();
      Token token13 = xPathLexer0.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer0.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer0.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      Token token16 = xPathLexer0.colon();
      assertEquals(18, token16.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.8081658051284157
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals(")", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("P", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("}=", token4.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.and();
      xPathLexer1.div();
      xPathLexer0.or();
      xPathLexer1.rightBracket();
      xPathLexer0.identifier();
      xPathLexer1.rightBracket();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer("NNDwO'cFk/o}\"Z$D8P");
      xPathLexer1.mod();
      Token token6 = xPathLexer0.nextToken();
      assertEquals(30, token6.getTokenType());
      assertEquals("53", token6.getTokenText());
      
      xPathLexer1.comma();
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("A?}hA EkIpG{_H@h");
      XPathLexer xPathLexer4 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer1.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer2.leftBracket();
      assertEquals("N", token8.getTokenText());
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer4.nextToken();
      assertEquals("A", token9.getTokenText());
      
      Token token10 = xPathLexer5.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer3.mod();
      Token token11 = xPathLexer2.leftParen();
      assertEquals("D", token11.getTokenText());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals("H", token12.getTokenText());
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.748867971343626
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.operatorName();
      xPathLexer0.LA(476);
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer1.star();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.setPreviousToken(token0);
      xPathLexer4.notEquals();
      xPathLexer2.LA(476);
      xPathLexer2.comma();
      Token token1 = xPathLexer0.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5538433189418661
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.whitespace();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.dots();
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.rightParen();
      xPathLexer0.div();
      xPathLexer0.consume(121);
      assertEquals("G+R-R7H&%}%", xPathLexer0.getXPath());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.4376968977250792
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer2.at();
      xPathLexer1.div();
      xPathLexer0.dots();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer2.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      xPathLexer1.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.plus();
      token0.toString();
      xPathLexer3.rightBracket();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.comma();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.626678305422152
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("9.1A~^y Sx#oVBGCeC!");
      Token token2 = xPathLexer2.rightParen();
      assertEquals("9", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals("1", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals(".", token4.getTokenText());
      
      xPathLexer0.colon();
      Token token5 = xPathLexer2.number();
      assertEquals("1", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.consume();
      xPathLexer1.getXPath();
      Token token6 = xPathLexer2.doubleColon();
      assertEquals("A~", token6.getTokenText());
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.getXPath();
      xPathLexer3.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftParen();
      assertEquals(1, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer3.getXPath();
      Token token11 = xPathLexer1.nextToken();
      assertEquals("xU", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer3.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals("#", token13.getTokenText());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5532895955505757
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.at();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("L ", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      assertEquals("5", token5.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer1.mod();
      xPathLexer2.mod();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("3", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.comma();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertNotNull(token8);
      
      xPathLexer1.dollar();
      Token token9 = xPathLexer4.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("s", token9.getTokenText());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(")", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer2.literal();
      assertNotNull(token11);
      assertEquals(")Pa}=fhL 53HK8n", token11.getTokenText());
      assertEquals(27, token11.getTokenType());
      
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals("H", token12.getTokenText());
      
      xPathLexer1.not();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.operatorName();
      Token token13 = xPathLexer1.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer0.colon();
      assertEquals("K", token14.getTokenText());
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("n)4oPl{>8gR:");
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5995978390206242
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.slashes();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.comma();
      xPathLexer3.dots();
      xPathLexer3.consume((-218));
      // Undeclared exception!
      try { 
        xPathLexer3.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.1885481254780896
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("5.3*");
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("5.3*");
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("5.3*");
      xPathLexer0.dots();
      xPathLexer1.doubleColon();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.rightBracket();
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.or();
      xPathLexer0.and();
      XPathLexer xPathLexer5 = new XPathLexer("5.3*");
      xPathLexer1.minus();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.nextToken();
      xPathLexer1.plus();
      xPathLexer3.equals();
      xPathLexer3.star();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.7134034387243857
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("G", token0.getTokenText());
      
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.or();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("+R", token1.getTokenText());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.colon();
      assertEquals("R", token2.getTokenText());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("H", token3.getTokenText());
      
      Token token4 = xPathLexer0.at();
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("%", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("Jb!/^4m^ mPP%KJ^");
      xPathLexer0.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.comma();
      Token token9 = xPathLexer1.literal();
      assertNotNull(token9);
      assertEquals("b!/^4m^ mPP%K", token9.getTokenText());
      
      Token token10 = xPathLexer2.at();
      assertEquals(16, token10.getTokenType());
      
      xPathLexer2.colon();
      xPathLexer2.literal();
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer0.operatorName();
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.561183890325565
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("G+", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.colon();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("-", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("7", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer1.getPreviousToken();
      Token token3 = xPathLexer0.rightParen();
      assertEquals("H", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer1.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("G", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.plus();
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("G+R-R7H&%}%");
      Token token6 = xPathLexer3.identifier();
      assertEquals("G", token6.getTokenText());
      
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.star();
      assertEquals("+", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("%] T VY%$");
      Token token8 = xPathLexer5.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertNotNull(token8);
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer6.comma();
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.at();
      XPathLexer xPathLexer8 = new XPathLexer("%] T VY%$");
      Token token10 = xPathLexer8.notEquals();
      assertEquals("%]", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer(") (");
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer();
      Token token12 = xPathLexer7.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer0.nextToken();
      assertEquals("&%}%", token13.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.232804146818012
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer1.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer0.equals();
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer1.star();
      XPathLexer xPathLexer3 = new XPathLexer(",9x+@X)Xt@k");
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer(",9x+@X)Xt@k");
      XPathLexer xPathLexer5 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer3.dollar();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.leftBracket();
      xPathLexer2.nextToken();
      xPathLexer6.not();
      Token token0 = xPathLexer3.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.2233988545494683
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.div();
      Token token0 = xPathLexer0.pipe();
      assertEquals("s", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token1 = xPathLexer1.at();
      assertEquals("s", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("2<Shb}6@~mq");
      xPathLexer2.leftParen();
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      assertEquals(")", token2.getTokenText());
      
      xPathLexer0.plus();
      XPathLexer xPathLexer3 = new XPathLexer("_KO8]");
      xPathLexer0.or();
      xPathLexer1.div();
      xPathLexer0.div();
      Token token3 = xPathLexer3.not();
      assertEquals("_", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      xPathLexer3.or();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.identifier();
      assertEquals("a", token4.getTokenText());
      
      Token token5 = xPathLexer2.rightBracket();
      assertEquals("<", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer("A?}hA EkIpG{_H@h");
      xPathLexer0.mod();
      Token token6 = xPathLexer4.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("A", token6.getTokenText());
      
      Token token7 = xPathLexer4.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("7ag4");
      Token token8 = xPathLexer0.notEquals();
      assertEquals("}=", token8.getTokenText());
      assertEquals(22, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[ (");
      Token token9 = xPathLexer6.plus();
      assertEquals("[", token9.getTokenText());
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("S", token10.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer2.leftBracket();
      assertEquals(3, token11.getTokenType());
      assertEquals("h", token11.getTokenText());
      
      Token token12 = xPathLexer0.minus();
      assertEquals("f", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.7072697097848133
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      xPathLexer0.isIdentifierChar('+');
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      xPathLexer0.or();
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.6923109941417853
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.literal();
      xPathLexer0.relationalOperator();
      xPathLexer0.at();
      xPathLexer0.consume((-2529));
      xPathLexer0.consume((-2529));
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.endPosition();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.6958946706926024
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("a=6.>\"qfhMf'C");
      xPathLexer1.comma();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer2.minus();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8086366741423785
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.isIdentifierChar('R');
      xPathLexer0.slashes();
      xPathLexer0.notEquals();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer("com.we+ken.saxpath.XPuthLexer");
      xPathLexer1.and();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.slashes();
      xPathLexer2.comma();
      xPathLexer1.dots();
      xPathLexer2.at();
      xPathLexer0.comma();
      xPathLexer1.literal();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.7305520297206
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.minus();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.identifierOrOperatorName();
      int int0 = xPathLexer0.endPosition();
      xPathLexer0.equals();
      xPathLexer0.not();
      xPathLexer0.leftBracket();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.or();
      xPathLexer0.equals();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.number();
      xPathLexer0.minus();
      int int1 = xPathLexer0.endPosition();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.6805574318945102
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.plus();
      xPathLexer0.doubleColon();
      xPathLexer0.star();
      xPathLexer0.colon();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.leftParen();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.isIdentifierStartChar('6');
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.mod();
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.slashes();
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      Token token1 = xPathLexer0.comma();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.50796920570736
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("x", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#5]p]", token2.getTokenText());
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals("#", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("]", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals("p", token6.getTokenText());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("]", token7.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      xPathLexer0.isIdentifierStartChar('C');
      xPathLexer0.and();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer1.colon();
      xPathLexer1.star();
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      xPathLexer1.div();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token12 = xPathLexer2.notEquals();
      assertEquals(22, token12.getTokenType());
      
      Token token13 = xPathLexer0.identifierOrOperatorName();
      assertNull(token13);
      
      Token token14 = xPathLexer1.equals();
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer2.comma();
      assertEquals(32, token15.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.442280370217103
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("x", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#5]p]", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("]", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("]", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNull(token11);
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer0.dollar();
      assertEquals(26, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer2.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.6385341421186768
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer0.comma();
      XPathLexer xPathLexer2 = new XPathLexer("_. *GXIZr}59Ni");
      xPathLexer2.nextToken();
      Token token0 = xPathLexer2.plus();
      assertEquals(" ", token0.getTokenText());
      assertEquals(5, token0.getTokenType());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer2.star();
      assertEquals("G", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token2 = xPathLexer3.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      Token token3 = xPathLexer0.slashes();
      assertEquals("x", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      
      xPathLexer2.comma();
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer5 = new XPathLexer("1xU#5]p]");
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertNull(token5);
      
      Token token6 = xPathLexer4.dollar();
      assertEquals("_", token6.getTokenText());
      
      Token token7 = xPathLexer1.at();
      assertEquals("1", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer5.comma();
      assertEquals("1", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      xPathLexer5.literal();
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals("I", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      xPathLexer4.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer6.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer3.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.678673451219029
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.dots();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("}=", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals("f", token4.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      assertEquals("5", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("H0 [58m{4puT=h!{`V");
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      Token token7 = xPathLexer0.equals();
      assertEquals("H", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer2.pipe();
      assertEquals("H", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token9 = xPathLexer2.nextToken();
      assertEquals("0", token9.getTokenText());
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer2.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals(" ", token10.getTokenText());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      assertEquals("K", token11.getTokenText());
      
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      assertEquals("8", token12.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token13 = xPathLexer5.rightParen();
      assertEquals("s", token13.getTokenText());
      assertEquals(2, token13.getTokenType());
      
      Token token14 = xPathLexer3.identifier();
      assertEquals(15, token14.getTokenType());
      
      Token token15 = xPathLexer0.notEquals();
      assertEquals("ns", token15.getTokenText());
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.6200041058814412
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer0.slashes();
      xPathLexer0.number();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer1.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer("G+R-R7H&%}%");
      xPathLexer3.identifier();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.star();
      XPathLexer xPathLexer5 = new XPathLexer("%] T VY%$");
      xPathLexer5.identifierOrOperatorName();
      xPathLexer2.at();
      XPathLexer xPathLexer6 = new XPathLexer("tpQf5tXy\"#M");
      xPathLexer6.notEquals();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer5.equals();
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer3.comma();
      xPathLexer2.or();
      // Undeclared exception!
      try { 
        xPathLexer7.LA((-660));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.4254797084327193
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.830713403754631
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("_. *GXIZr}59Ni");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("_.", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      Token token1 = xPathLexer1.minus();
      assertEquals("D", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(" ", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("H", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("_. *GXIZr}59Ni");
      Token token4 = xPathLexer4.comma();
      assertEquals("_", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("`", token7.getTokenText());
      
      xPathLexer0.slashes();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer3.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.99150146857535
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.dots();
      xPathLexer0.rightBracket();
      xPathLexer0.star();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer0.consume(0);
      xPathLexer0.and();
      xPathLexer0.equals();
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      xPathLexer0.setXPath("");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.dots();
      xPathLexer0.getPreviousToken();
      xPathLexer0.notEquals();
      xPathLexer0.literal();
      xPathLexer0.hasMoreChars();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-1011));
      xPathLexer0.setPreviousToken(token0);
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=1.5346734077412132
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.equals();
      assertEquals("h", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("H", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("K8ns", token4.getTokenText());
      
      xPathLexer3.identifierOrOperatorName();
      xPathLexer2.comma();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer2.dollar();
      Token token6 = xPathLexer2.at();
      assertEquals("(", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
      
      Token token9 = xPathLexer2.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(")", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("Pa", token12.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token13 = xPathLexer4.colon();
      assertEquals(18, token13.getTokenType());
      
      Token token14 = xPathLexer3.doubleColon();
      assertEquals(19, token14.getTokenType());
      assertEquals("}=", token14.getTokenText());
      
      Token token15 = xPathLexer0.plus();
      assertEquals(5, token15.getTokenType());
      
      Token token16 = xPathLexer1.dots();
      assertEquals(13, token16.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.3237473945026776
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1xU#5]p]");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.at();
      assertEquals("1", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("1xU#5]p]");
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("9.1A~^y Sx#oVBGCeC!");
      Token token5 = xPathLexer2.rightParen();
      assertEquals("9", token5.getTokenText());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals("1", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer2.equals();
      assertEquals(".", token7.getTokenText());
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals("U", token10.getTokenText());
      assertEquals(1, token10.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("9.1A~^y Sx#oVBGCeC!");
      xPathLexer0.setXPath("1xU#5]p]");
      Token token11 = xPathLexer0.identifier();
      assertEquals("1xU", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
      
      xPathLexer2.hasMoreChars();
      Token token12 = xPathLexer1.notEquals();
      assertEquals("#5", token12.getTokenText());
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.3426533224669694
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals("P", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals("a", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("}=", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals("f", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals("h", token5.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("53", token6.getTokenText());
      
      xPathLexer1.equals();
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token7 = xPathLexer1.plus();
      assertEquals(5, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.star();
      assertEquals("H", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals("K8ns", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("X&mfR;F/'\"x{%<ZmK");
      Token token10 = xPathLexer0.not();
      xPathLexer1.setPreviousToken(token10);
      assertEquals("\"", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      Token token11 = xPathLexer2.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.identifierOrOperatorName();
      assertNull(token12);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer1.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer1.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer5.slashes();
      assertEquals(11, token15.getTokenType());
      
      Token token16 = xPathLexer4.minus();
      assertEquals(6, token16.getTokenType());
      assertEquals("X", token16.getTokenText());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.4049260119151696
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$:(Z`[&C~@x ");
      xPathLexer0.identifier();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      Token token0 = xPathLexer0.colon();
      assertEquals("Z", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("$:(Z`[&C~@x ");
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("C", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer1.plus();
      assertEquals("$", token5.getTokenText());
      assertEquals(5, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("^6_U[^TiRXj$@>kmb0]");
      xPathLexer0.identifier();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("xh$$9]&p54 ");
      xPathLexer6.identifierOrOperatorName();
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("%] T VY%$");
      Token token9 = xPathLexer3.notEquals();
      assertEquals("^6", token9.getTokenText());
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.not();
      assertEquals(":", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer7.operatorName();
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals(" ", token11.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
      assertEquals("(", token12.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2676214656339961
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('T');
      assertTrue(boolean0);
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer1.equals();
      xPathLexer1.identifier();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      xPathLexer0.dots();
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      xPathLexer0.hasMoreChars();
      xPathLexer0.mod();
      xPathLexer1.hasMoreChars();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      xPathLexer0.not();
      xPathLexer1.currentPosition();
      Token token13 = xPathLexer0.rightParen();
      assertEquals(2, token13.getTokenType());
      
      int int0 = xPathLexer1.currentPosition();
      assertEquals(6, int0);
      
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer0.rightBracket();
      assertEquals(4, token15.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=3.19363093805362
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.at();
      assertEquals("P", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("a", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("}=", token3.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.colon();
      assertEquals("f", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("L ", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      xPathLexer1.star();
      xPathLexer0.mod();
      xPathLexer1.star();
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals("K8ns", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("X&mfR;F/'\"x{%<ZmK");
      xPathLexer0.mod();
      Token token9 = xPathLexer0.not();
      assertEquals("\"", token9.getTokenText());
      
      Token token10 = xPathLexer2.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      xPathLexer3.getPreviousToken();
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.mod();
      Token token12 = xPathLexer3.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer2.minus();
      assertEquals(6, token13.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.031759218569271
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Syc7.-vHexI%U5OV75`");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.4849066497880012
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.leftParen();
      xPathLexer0.star();
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2570));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=2.458311329683084
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftBracket();
      xPathLexer0.pipe();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      xPathLexer0.LA(4);
      xPathLexer0.pipe();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.minus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("2<Shb}6@~mq");
      Token token0 = xPathLexer0.colon();
      assertEquals("2", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("h", token3.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.2024451212289278
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1>xU#5]p]");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.at();
      assertEquals("1", token0.getTokenText());
      
      Token token1 = xPathLexer0.relationalOperator();
      assertEquals(9, token1.getTokenType());
      assertEquals(">", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("x", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer2 = new XPathLexer("1>xU#5]p]");
      Token token3 = xPathLexer2.colon();
      assertEquals("1", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer3 = new XPathLexer("DH`qm6Z'-C8<!#%FR.#");
      Token token4 = xPathLexer3.pipe();
      assertEquals("D", token4.getTokenText());
      
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer3.not();
      xPathLexer2.slashes();
      xPathLexer1.mod();
      xPathLexer1.dollar();
      xPathLexer3.slashes();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("U#", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer4 = new XPathLexer("1>xU#5]p]");
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("5]", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer3.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("q", token9.getTokenText());
      
      xPathLexer1.comma();
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("1", token10.getTokenText());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer4.not();
      xPathLexer5.dollar();
      Token token13 = xPathLexer2.not();
      assertEquals("U", token13.getTokenText());
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer1.plus();
      assertEquals(5, token14.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=1.5346734077412132
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals("s", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(")", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.slashes();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      assertEquals("h", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("L ", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      XPathLexer xPathLexer3 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("H", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer3.identifierOrOperatorName();
      assertEquals("s", token6.getTokenText());
      
      Token token7 = xPathLexer2.comma();
      assertEquals("[", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer2.dollar();
      Token token8 = xPathLexer2.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer2.minus();
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer2.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer3.dollar();
      assertEquals(")", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer2.not();
      assertEquals(23, token13.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      Token token14 = xPathLexer3.notEquals();
      assertEquals(22, token14.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token15 = xPathLexer4.colon();
      assertEquals(18, token15.getTokenType());
      assertEquals(")", token15.getTokenText());
      
      Token token16 = xPathLexer3.doubleColon();
      assertEquals(19, token16.getTokenType());
      assertEquals("}=", token16.getTokenText());
      
      Token token17 = xPathLexer0.plus();
      assertEquals(5, token17.getTokenType());
      
      Token token18 = xPathLexer1.dots();
      assertEquals(13, token18.getTokenType());
      
      int int0 = xPathLexer4.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.5650337650370836
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.star();
      assertEquals(")", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("}=", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals("5", token6.getTokenText());
      
      xPathLexer0.operatorName();
      Token token7 = xPathLexer0.pipe();
      assertEquals("3", token7.getTokenText());
      
      xPathLexer0.or();
      Token token8 = xPathLexer0.rightBracket();
      assertEquals(4, token8.getTokenType());
      assertEquals("H", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals("K8ns", token9.getTokenText());
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals("", token10.getTokenText());
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("5&H{9~<e]v`g2POD");
      Token token12 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token12.getTokenType());
      assertNotNull(token12);
      
      Token token13 = xPathLexer0.at();
      assertEquals(16, token13.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer2.notEquals();
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer2.operatorName();
      Token token15 = xPathLexer1.notEquals();
      assertEquals("&H", token15.getTokenText());
      
      Token token16 = xPathLexer1.colon();
      assertEquals("{", token16.getTokenText());
      assertEquals(18, token16.getTokenType());
      
      Token token17 = xPathLexer0.pipe();
      assertEquals(17, token17.getTokenType());
      
      xPathLexer1.operatorName();
      Token token18 = xPathLexer0.notEquals();
      assertEquals(22, token18.getTokenType());
  }

  /**
  //Test case number: 118
  /*Coverage entropy=3.0704220095710304
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.at();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("a", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("}=", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.colon();
      assertEquals("f", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("h", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.notEquals();
      assertEquals("L ", token5.getTokenText());
      
      Token token6 = xPathLexer1.equals();
      assertEquals(21, token6.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer1.star();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("5", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.comma();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.literal();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("3", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.notEquals();
      Token token10 = xPathLexer6.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer6.relationalOperator();
      xPathLexer0.operatorName();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer1.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer6.pipe();
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=3.0420561557364767
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.not();
      assertEquals("P", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("}=", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("5", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(".'");
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("3", token5.getTokenText());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals("H", token6.getTokenText());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(".'");
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token8.getTokenType());
      assertNotNull(token8);
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.whitespace();
      assertEquals((-2), token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(".'");
      Token token10 = xPathLexer0.at();
      assertEquals("\"", token10.getTokenText());
      
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer5 = new XPathLexer(")");
      Token token11 = xPathLexer5.at();
      assertEquals(16, token11.getTokenType());
      
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      assertEquals("w", token12.getTokenText());
      
      Token token13 = xPathLexer2.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer4.dollar();
      assertEquals(".", token14.getTokenText());
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer3.not();
      assertEquals(23, token15.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token16 = xPathLexer6.rightBracket();
      assertEquals(4, token16.getTokenType());
      
      Token token17 = xPathLexer7.leftBracket();
      assertEquals("s", token17.getTokenText());
      assertEquals(3, token17.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=2.1527165161995527
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.794614698514362
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      xPathLexer0.plus();
      Token token0 = xPathLexer0.star();
      assertEquals(")", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.doubleColon();
      assertEquals("}=", token1.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.colon();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer2 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      XPathLexer xPathLexer3 = new XPathLexer("s)Pa}=fhL 53HK8ns\"w");
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer3.identifierOrOperatorName();
      xPathLexer2.comma();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer2.dollar();
      Token token6 = xPathLexer2.at();
      assertEquals(16, token6.getTokenType());
      assertEquals("P", token6.getTokenText());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer2.minus();
      assertEquals("a", token8.getTokenText());
      assertEquals(6, token8.getTokenType());
      
      xPathLexer2.literal();
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.operatorName();
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("Pa", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      xPathLexer4.and();
      Token token12 = xPathLexer4.colon();
      assertEquals(18, token12.getTokenType());
      assertEquals(")", token12.getTokenText());
      
      xPathLexer3.doubleColon();
      Token token13 = xPathLexer0.plus();
      assertEquals("n", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer1.dots();
      assertEquals(13, token14.getTokenType());
      
      Token token15 = xPathLexer4.nextToken();
      assertEquals("(", token15.getTokenText());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.5232109529528914
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.7516666169315163
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
  }
}
