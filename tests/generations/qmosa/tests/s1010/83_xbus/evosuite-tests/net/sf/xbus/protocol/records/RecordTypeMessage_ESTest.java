/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 09:05:52 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.function.Consumer;
import javax.xml.namespace.QName;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.MessageContext;
import org.apache.axis.SOAPPart;
import org.apache.axis.deployment.wsdd.WSDDConstants;
import org.apache.axis.deployment.wsdd.WSDDGlobalConfiguration;
import org.apache.axis.encoding.DeserializationContext;
import org.apache.axis.message.MessageElement;
import org.apache.axis.message.MimeHeaders;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentFragmentImpl;
import org.apache.xerces.dom.TextImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Node;
import org.w3c.dom.traversal.NodeFilter;
import org.xml.sax.InputSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      String[] stringArray0 = new String[7];
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Ha}");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      Locale locale0 = Locale.CANADA_FRENCH;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "Ha}", (Object[]) stringArray0);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale1 = Locale.ENGLISH;
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(printStream0);
      mimeHeaders0.writeExternal(objectOutputStream0);
      stringArray0[0] = "Ha}";
      mimeHeaders0.getMatchingHeaders(stringArray0);
      mimeHeaders0.removeAllHeaders();
      mockPrintStream0.print(51);
      Message message0 = new Message("Ha}", (MimeHeaders) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)68;
      byteArray0[6] = (byte) (-54);
      byteArray0[2] = (byte)17;
      byteArray0[8] = (byte) (-88);
      mockFileOutputStream0.write(byteArray0);
      SOAPPart sOAPPart0 = new SOAPPart(message0, printStream0, true);
      recordTypeMessage0.setResponseDocument(sOAPPart0, (XBUSSystem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      sequenceInputStream0.mark(3);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false, true);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Locale locale0 = Locale.KOREA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      linkedList0.forEach(consumer0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      Locale locale1 = Locale.PRC;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      Vector<Locale> vector0 = new Vector<Locale>(linkedList2);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0, locale_FilteringMode0);
      vector0.add(locale0);
      linkedList0.offerLast((Locale.LanguageRange) null);
      linkedList2.addAll((Collection<? extends Locale>) list0);
      linkedList2.spliterator();
      Locale locale2 = Locale.KOREAN;
      linkedList2.add(locale0);
      locale2.toLanguageTag();
      linkedList2.push(locale1);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Vector<Locale> vector2 = new Vector<Locale>();
      locale2.getExtensionKeys();
      Locale locale3 = Locale.CANADA_FRENCH;
      locale2.getDisplayVariant(locale0);
      locale1.getScript();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      Locale.setDefault(locale1);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      Locale locale4 = Locale.ITALY;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte)18;
      byteArray0[2] = (byte)15;
      byteArray0[3] = (byte)34;
      byteArray0[4] = (byte)15;
      byteArrayList0.add(byteArray0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)85;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-54);
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)0;
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      byteArray0[6] = (byte)0;
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      Object object0 = new Object();
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      Object object1 = new Object();
      try { 
        recordTypeMessage0.setResponseObject(object1, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.Object cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MessageContext.getCurrentContext();
      StringReader stringReader0 = new StringReader("acceptMissingParams");
      StringReader stringReader1 = new StringReader("transport.url");
      StringReader stringReader2 = new StringReader("call_object");
      stringReader2.markSupported();
      Boolean boolean0 = new Boolean("axis.wsdlgen.serv.loc.url");
      MessageContext.getCurrentContext();
      Boolean boolean1 = new Boolean((String) null);
      CharBuffer charBuffer0 = CharBuffer.allocate(7);
      charBuffer0.get();
      stringReader2.read(charBuffer0);
      stringReader2.reset();
      CharBuffer charBuffer1 = CharBuffer.allocate(7);
      stringReader1.read(charBuffer0);
      stringReader1.read(charBuffer1);
      char[] charArray0 = new char[5];
      charArray0[0] = '\u0000';
      stringReader1.read(charArray0);
      stringReader2.read(charArray0);
      stringReader1.close();
      InputSource inputSource0 = new InputSource("isMsg");
      stringReader2.read(charArray0);
      inputSource0.setEncoding("axis.wsdlgen.intfnamespace");
      charBuffer1.order();
      CharBuffer charBuffer2 = CharBuffer.allocate(5);
      stringReader0.markSupported();
      charBuffer0.flip();
      inputSource0.setCharacterStream(stringReader1);
      inputSource0.getPublicId();
      charBuffer0.flip();
      charBuffer1.flip();
      stringReader2.read(charBuffer2);
      inputSource0.setCharacterStream(stringReader2);
      inputSource0.setEncoding("transport.url");
      DeserializationContext deserializationContext0 = new DeserializationContext(inputSource0, (MessageContext) null, "axis.wsdlgen.intfnamespace");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("transport.url", (XBUSSystem) null, "call_object");
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      Locale locale0 = Locale.CHINA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      linkedList0.add((Locale.LanguageRange) null);
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale1 = Locale.CHINA;
      recordTypeMessage0.getResponseObject();
      linkedList1.remove((Object) null);
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      locale1.getDisplayCountry();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      linkedList1.spliterator();
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode1);
      MimeHeaders mimeHeaders1 = new MimeHeaders();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale locale2 = Locale.CANADA;
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList4 = new LinkedList<String>();
      mimeHeaders0.removeAllHeaders();
      Locale.setDefault(locale1);
      MimeHeaders mimeHeaders2 = new MimeHeaders();
      mimeHeaders2.getAllHeaders();
      Locale locale3 = Locale.CHINA;
      Locale locale4 = Locale.ROOT;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      assertEquals(0, byteArrayList0.length());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Consumer<Locale.LanguageRange> consumer0 = (Consumer<Locale.LanguageRange>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.addAll((Collection<? extends Locale>) linkedList2);
      Locale locale1 = Locale.CHINA;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList3 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      Vector<Locale> vector0 = new Vector<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) vector0, locale_FilteringMode0);
      linkedList2.spliterator();
      linkedList2.add(locale0);
      Locale locale2 = locale0.stripExtensions();
      linkedList2.add(locale0);
      Locale locale3 = locale0.stripExtensions();
      locale3.getDisplayVariant(locale2);
      linkedList2.push(locale3);
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) null, (Locale.FilteringMode) null);
      Vector<Locale.LanguageRange> vector1 = new Vector<Locale.LanguageRange>();
      locale2.getDisplayLanguage();
      Locale.filter((List<Locale.LanguageRange>) vector1, (Collection<Locale>) list0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      Locale.filter((List<Locale.LanguageRange>) linkedList3, (Collection<Locale>) vector0, locale_FilteringMode1);
      LinkedList<Locale.LanguageRange> linkedList4 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList4, (Collection<String>) linkedList1, locale_FilteringMode1);
      Vector<Locale> vector2 = new Vector<Locale>();
      Locale locale4 = Locale.TRADITIONAL_CHINESE;
      locale2.getDisplayVariant(locale0);
      locale3.getDisplayName();
      LinkedList<Locale.LanguageRange> linkedList5 = new LinkedList<Locale.LanguageRange>();
      Locale.setDefault(locale4);
      Locale locale5 = Locale.KOREA;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("Chinese", (XBUSSystem) null, "Chinese");
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("`0bU}HhgZRb<a2<'{", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants1 = SOAPConstants.SOAP12_CONSTANTS;
      CharBuffer.allocate(17);
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charBuffer0.limit(2);
      charBuffer0.rewind();
      SOAP12Constants sOAP12Constants2 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants3 = SOAPConstants.SOAP12_CONSTANTS;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)5;
      ByteArrayList.createByteArrayList(byteArray0, 2);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("&lowXD|a", (XBUSSystem) null, "0");
      try { 
        recordTypeMessage0.setRequestObject(charBuffer1, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.nio.HeapCharBuffer cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-87);
      ByteArrayList.createByteArrayList(byteArray0, (byte) (-87));
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      System.setCurrentTimeMillis((byte) (-123));
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "003");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-87);
      ByteArrayList.createByteArrayList(byteArray0, (byte) (-87));
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      deferredDocumentImpl0.createDeferredDocument();
      DocumentFragment documentFragment0 = deferredDocumentImpl0.createDocumentFragment();
      DocumentFragmentImpl documentFragmentImpl0 = new DocumentFragmentImpl();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      documentFragment0.compareDocumentPosition(deferredDocumentImpl0);
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl();
      deferredDocumentImpl2.setDocumentURI("\"8}JR$Lx5_h]^LP");
      NodeFilter nodeFilter0 = mock(NodeFilter.class, new ViolatedAssumptionAnswer());
      TextImpl textImpl0 = new TextImpl();
      documentFragment0.isSupported("\"8}JR$Lx5_h]^LP", "\"8}JR$Lx5_h]^LP");
      deferredDocumentImpl2.createTreeWalker((Node) documentFragment0, 0, nodeFilter0, true);
      // Undeclared exception!
      try { 
        deferredDocumentImpl2.getParentNode(32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Locale locale0 = Locale.CHINA;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale locale1 = Locale.SIMPLIFIED_CHINESE;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      locale0.getDisplayCountry();
      Integer[] integerArray0 = new Integer[5];
      Integer integer0 = new Integer((-494));
      integerArray0[0] = integer0;
      Integer integer1 = new Integer((-494));
      integerArray0[1] = integer1;
      Integer integer2 = new Integer((int) integerArray0[0]);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[1]);
      integerArray0[2] = integerArray0[1];
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = WSDDConstants.QNAME_TRANSPORT;
      MessageElement messageElement0 = new MessageElement(qName0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      qName0.getNamespaceURI();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      WSDDGlobalConfiguration wSDDGlobalConfiguration0 = null;
      try {
        wSDDGlobalConfiguration0 = new WSDDGlobalConfiguration(messageElement0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Invalid WSDD element 'transport' (wanted 'globalConfiguration')
         //
         verifyException("org.apache.axis.deployment.wsdd.WSDDElement", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte) (-123);
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-87);
      ByteArrayList.createByteArrayList(byteArray0, (byte) (-87));
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MessageContext.getCurrentContext();
      StringReader stringReader0 = new StringReader("acceptMissingParams");
      StringReader stringReader1 = new StringReader("transport.url");
      StringReader stringReader2 = new StringReader("call_object");
      stringReader2.markSupported();
      Boolean boolean0 = new Boolean("axis.wsdlgen.serv.loc.url");
      stringReader1.markSupported();
      CharBuffer charBuffer0 = CharBuffer.allocate(7);
      charBuffer0.get();
      stringReader2.read(charBuffer0);
      stringReader2.reset();
      CharBuffer charBuffer1 = CharBuffer.allocate(7);
      stringReader1.read(charBuffer0);
      stringReader1.read(charBuffer1);
      char[] charArray0 = new char[4];
      charArray0[0] = '\u0000';
      stringReader1.read(charArray0);
      stringReader2.read(charArray0);
      stringReader1.close();
      InputSource inputSource0 = new InputSource();
      stringReader2.read(charArray0);
      inputSource0.setEncoding("axis.wsdlgen.intfnamespace");
      charBuffer1.order();
      CharBuffer charBuffer2 = CharBuffer.allocate(4);
      stringReader2.markSupported();
      charBuffer0.flip();
      inputSource0.setCharacterStream(stringReader1);
      charBuffer1.flip();
      stringReader2.read(charBuffer2);
      Integer integer0 = new Integer(3);
      inputSource0.setCharacterStream(stringReader2);
      inputSource0.setEncoding("transport.url");
      DeserializationContext deserializationContext0 = new DeserializationContext(inputSource0, (MessageContext) null, "axis.wsdlgen.intfnamespace");
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("transport.url", (XBUSSystem) null, "call_object");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("isMsg", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XBUSSystem xBUSSystem0 = null;
      QName qName0 = WSDDConstants.QNAME_FAULT;
      MessageElement messageElement0 = new MessageElement(qName0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.toString();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-61);
      byteArrayList0.add(byteArray0);
      byteArray0[2] = (byte) (-110);
      messageElement0.hasAttributeNS("CqdJR&0", "CqdJR&0");
      byteArray0[2] = (byte)105;
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      qName0.getNamespaceURI();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayList byteArrayList0 = new ByteArrayList();
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants1 = SOAPConstants.SOAP12_CONSTANTS;
      CharBuffer.allocate(17);
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      charBuffer0.limit(2);
      charBuffer0.rewind();
      SOAP12Constants sOAP12Constants2 = SOAPConstants.SOAP12_CONSTANTS;
      SOAP12Constants sOAP12Constants3 = SOAPConstants.SOAP12_CONSTANTS;
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("soap12.webmethod", (XBUSSystem) null, "soap12.webmethod");
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }
}
