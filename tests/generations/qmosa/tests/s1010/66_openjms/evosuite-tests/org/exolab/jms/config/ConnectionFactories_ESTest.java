/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 08:23:13 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.StringReader;
import java.io.Writer;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.Attributes;
import org.xml.sax.ContentHandler;
import org.xml.sax.EntityResolver;
import org.xml.sax.HandlerBase;
import org.xml.sax.SAXParseException;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("8<B#KbNv", "8<B#KbNv", "8<B#KbNv", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("8<B#KbNv", "8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      SAXParseException sAXParseException2 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "8<B#KbNv", "8<B#KbNv", 3509, 96);
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException2.getException();
      SAXParseException sAXParseException3 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 96, 3509, sAXParseException1);
      sAXParseException3.toString();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 96, 96, sAXParseException3);
      sAXParseException1.getLineNumber();
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException5 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 3509);
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.toString();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 3509, 96);
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", (String) null, "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", (-761), 3509, sAXParseException5);
      SAXParseException sAXParseException8 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", (-761), (-761), sAXParseException4);
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, (-761), sAXParseException7);
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException10 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 3509, sAXParseException1);
      sAXParseException6.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException11 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 96, sAXParseException2);
      SAXParseException sAXParseException12 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 3509, 96, sAXParseException0);
      SAXParseException sAXParseException13 = new SAXParseException((String) null, "T6Z]lLftnL:*!RH+UG", "T6Z]lLftnL:*!RH+UG", 3509, 96, sAXParseException2);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[3];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(3, int0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[22];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" lmHmr ", "m4#r", " lmHmr ", 81);
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[10] = stackTraceElement0;
      Marshaller.enableDebug = true;
      StackTraceElement stackTraceElement1 = new StackTraceElement("m4#r", "this is a required field and annot be null.", "m4#r", 1093);
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("*z`IpLMby", "*z`IpLMby", "this is a required field and annot be null.", 81);
      StackTraceElement stackTraceElement3 = new StackTraceElement("UcC/J", "The argument type array must be the same length as argument value 3rra.", " lmHmr ", 24);
      stackTraceElementArray0[6] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("UcC/J", "", "fop", 81);
      stackTraceElementArray0[7] = stackTraceElement4;
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[4];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      assertEquals(4, connectionFactories0.getXAConnectionFactoryCount());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.enumerateXAConnectionFactory();
      boolean boolean1 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      connectionFactories0.clearConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      xATopicConnectionFactoryArray0[0] = null;
      xATopicConnectionFactoryArray0[1] = null;
      xATopicConnectionFactoryArray0[2] = null;
      xATopicConnectionFactoryArray0[3] = null;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")pQ;c%p85}>eQLBF-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")pQ;c%p85}>eQLBF-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")pQ;c%p85}>eQLBF-");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.0724441304240533
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      Marshaller.enableDebug = false;
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[0];
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.enumerateXAConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.processingInstruction("UnicodeLittle", "");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[2];
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      connectionFactories1.setTopicConnectionFactory(topicConnectionFactoryArray0);
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      connectionFactories0.getTopicConnectionFactory(0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t8<xdgpt");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "nUO*lRaQc|Mh2 -1]~-");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t8<xdgpt");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "BTTwQT?'{a");
      SAXParseException sAXParseException0 = new SAXParseException("\"MO]W:x%q43e3U", "nUO*lRaQc|Mh2 -1]~-", "nUO*lRaQc|Mh2 -1]~-", (-971), 0);
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.warning(sAXParseException0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.getConnectionFactory();
      StringReader stringReader0 = new StringReader("\"MO]W:x%q43e3U");
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addQueueConnectionFactory((QueueConnectionFactory) null);
      connectionFactories0.removeQueueConnectionFactory((QueueConnectionFactory) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~B@Gh$W");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      assertNull(queueConnectionFactory0.getName());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      xATopicConnectionFactory0.isValid();
      Writer writer0 = null;
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      xMLReaderAdapter2.setEntityResolver(xMLFilterImpl0);
      xMLReaderAdapter2.endPrefixMapping("");
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(xMLFilterImpl0);
      xMLReaderAdapter3.startDocument();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter3);
      parserAdapter1.getDTDHandler();
      xMLReaderAdapter2.setDocumentHandler(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter2.startPrefixMapping("aH>g~`*NQ}%Cqh.~", "aH>g~`*NQ}%Cqh.~");
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = '';
      charArray0[2] = 'j';
      xMLFilterImpl0.ignorableWhitespace(charArray0, 694, 2928);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(xMLFilterImpl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.getConnectionFactoryCount();
      connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
      StringReader stringReader0 = new StringReader("aH>g~`*NQ}%Cqh.~");
      StringReader stringReader1 = null;
      try {
        stringReader1 = new StringReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXATopicConnectionFactoryCount();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[5];
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      topicConnectionFactoryArray0[0] = topicConnectionFactory1;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      int int0 = 3030;
      try { 
        connectionFactories0.getXAQueueConnectionFactory(3030);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      Marshaller.enableDebug = true;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName(".]*|v+FNx2=:L#p");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      boolean boolean1 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[0];
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.resolveEntity("resulted in the following error: ", ";Vc,$fPx?29.~$]");
      handlerBase0.resolveEntity(" AlumI ", ";Vc,$fPx?29.~$]");
      handlerBase0.ignorableWhitespace((char[]) null, (-870), (-870));
      handlerBase0.processingInstruction(" AlumI ", " AlumI ");
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.processingInstruction("NsGxJ6{Q", "NsGxJ6{Q");
      defaultHandler2_0.comment((char[]) null, 1850, 1850);
      defaultHandler2_0.ignorableWhitespace((char[]) null, (-2165), (-870));
      defaultHandler2_0.startDTD("){Maa@WeTEzQcv>I>t(v", "@FM(g&Gx9\"{I?St/z#", "");
      defaultHandler2_0.characters((char[]) null, (-2165), 1725);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.endDTD();
      defaultHandler2_1.ignorableWhitespace((char[]) null, (-1343), 1850);
      defaultHandler2_1.endDTD();
      defaultHandler2_1.resolveEntity("", "", "){Maa@WeTEzQcv>I>t(v", "resulted in the following error: ");
      defaultHandler2_1.unparsedEntityDecl("){Maa@WeTEzQcv>I>t(v", "NsGxJ6{Q", "@FM(g&Gx9\"{I?St/z#", "");
      defaultHandler2_1.startCDATA();
      defaultHandler2_0.skippedEntity("");
      defaultHandler2_1.endCDATA();
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8063294488351005
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[6];
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      queueConnectionFactoryArray0[1] = queueConnectionFactory1;
      queueConnectionFactoryArray0[2] = null;
      queueConnectionFactoryArray0[3] = null;
      queueConnectionFactoryArray0[4] = null;
      queueConnectionFactoryArray0[5] = null;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.getQueueConnectionFactory();
      try { 
        TopicConnectionFactory.unmarshal(stringReader1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Premature end of file.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("");
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7962284387340903
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[4];
      xAQueueConnectionFactory0.setName("66Zx:D@&kom:,");
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactoryArray0[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.setXAQueueConnectionFactory(1, xAQueueConnectionFactoryArray0[0]);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory(1);
      assertEquals(4, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[6];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("/>?J`\"");
      xATopicConnectionFactory0.setName("");
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(6, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~B@Gh$W");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~B@Gh$W");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory0 = connectionFactories0.getXATopicConnectionFactory(0);
      assertNull(xATopicConnectionFactory0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[4] = topicConnectionFactoryArray0[0];
      TopicConnectionFactory[] topicConnectionFactoryArray1 = new TopicConnectionFactory[4];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray1);
      connectionFactories0.getTopicConnectionFactoryCount();
      int int0 = 1096;
      try { 
        connectionFactories0.getXATopicConnectionFactory(3404);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Marshaller.enableDebug = true;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)1;
      byteArray0[1] = (byte)87;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NskS;,N/b@Fp1TKZusK");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      connectionFactories0.getXAQueueConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories1.addXATopicConnectionFactory(xATopicConnectionFactory0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories1.enumerateXAConnectionFactory();
      connectionFactories1.getXATopicConnectionFactoryCount();
      try { 
        connectionFactories0.getQueueConnectionFactory((-2636));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[6] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[7] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[5] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      assertEquals(10, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1944064129383247
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[7];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[1] = topicConnectionFactory1;
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[2] = topicConnectionFactory2;
      TopicConnectionFactory topicConnectionFactory3 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[3] = topicConnectionFactory3;
      TopicConnectionFactory topicConnectionFactory4 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[4] = topicConnectionFactory4;
      TopicConnectionFactory topicConnectionFactory5 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[5] = topicConnectionFactory5;
      TopicConnectionFactory topicConnectionFactory6 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[6] = topicConnectionFactory6;
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getXAQueueConnectionFactory();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(7, connectionFactories0.getTopicConnectionFactoryCount());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte) (-105);
      byteArray0[3] = (byte) (-38);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte) (-3);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[5];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[4] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      queueConnectionFactory0.setName("#@%P ch?oakUjf9");
      connectionFactories0.getXATopicConnectionFactory();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      connectionFactories0.getXATopicConnectionFactory();
      assertEquals(5, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      xMLFilterImpl0.getEntityResolver();
      xMLReaderAdapter2.setEntityResolver((EntityResolver) null);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter4.endPrefixMapping("");
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.getDTDHandler();
      xMLReaderAdapter5.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(xMLFilterImpl0);
      String string0 = "aH>g~`*NQ}%Cqh.~";
      xMLReaderAdapter2.startPrefixMapping("", "");
      xMLFilterImpl0.ignorableWhitespace((char[]) null, 1599, 3864);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter(parserAdapter1);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(3864, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      parserAdapter0.endDocument();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter3.startDocument();
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter2);
      xMLReaderAdapter4.startPrefixMapping("(gnGA]a4t)pe!f20 2t", "");
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter8.endDocument();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "m");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXAConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[2];
      connectionFactories0.addQueueConnectionFactory(0, (QueueConnectionFactory) null);
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[3];
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory1;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XATopicConnectionFactory xATopicConnectionFactory2 = new XATopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory3 = connectionFactories0.getXATopicConnectionFactory(0);
      try { 
        connectionFactories0.addXATopicConnectionFactory(73, xATopicConnectionFactory3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 73, Size: 3
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.6120172700343436
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[0];
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("The namespace associated with the prefix '");
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactory1.isValid();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.isValid();
      xAConnectionFactory0.setName((String) null);
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.getXAConnectionFactory(0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[4];
      xAQueueConnectionFactory0.setName("66Zx:D@&kom:,");
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[1] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      try { 
        connectionFactories0.addXAQueueConnectionFactory(108, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 108, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[2] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[3] = xAQueueConnectionFactory0;
      xAQueueConnectionFactoryArray0[4] = xAQueueConnectionFactory0;
      try { 
        connectionFactories0.addXAQueueConnectionFactory((-412), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -412, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      StringReader stringReader0 = new StringReader("");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addQueueConnectionFactory(73, queueConnectionFactory1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 73, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(1139, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1139, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("YpY", " AlumI ", "4t;dvV7p80i>4b4ZN%", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException(" AlumI ", "YpY", "unable to unmashal: ", 3509, 3509);
      sAXParseException0.toString();
      sAXParseException1.toString();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException2 = new SAXParseException(" AlumI ", " AlumI ", " AlumI ", 81, 836);
      SAXParseException sAXParseException3 = new SAXParseException("unable to unmashal: ", "U", " AlumI ", 3509, 81);
      sAXParseException3.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      sAXParseException2.fillInStackTrace();
      MockException mockException0 = new MockException(sAXParseException3);
      SAXParseException sAXParseException4 = new SAXParseException("4t;dvV7p80i>4b4ZN%", ".'VGL8HTL}{sJ", "YpY", 3509, 3509);
      Throwable throwable0 = sAXParseException2.fillInStackTrace();
      throwable0.getCause();
      sAXParseException4.addSuppressed(throwable0);
      SAXParseException sAXParseException5 = new SAXParseException("unable to unmashal: ", "U", "YpY", 81, 3509);
      sAXParseException4.getCause();
      connectionFactories0.getConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-1), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(1042, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      try { 
        connectionFactories0.setXATopicConnectionFactory((-18), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.processingInstruction("unable to unmarshal: ", "unable to unmarshal: ");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "m4#r", 1033);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("m4#r", "this is a required field and cannot be null.", "m4#r", 1033);
      stackTraceElementArray0[3] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "this is a required field and cannot be null.", (-1));
      stackTraceElementArray0[4] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("M4C/J", "Hq2Ws# #(9)GZZ", " AlumI ", 25);
      stackTraceElementArray0[6] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("M4C/J", "unable to unmarshal: ", "P=8WS7{y3", 81);
      stackTraceElementArray0[7] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("/[Q", "", "", (-2538));
      stackTraceElementArray0[8] = stackTraceElement5;
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(25, (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.getXAConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      Locale locale0 = Locale.CANADA_FRENCH;
      locale0.getDisplayName();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#~>2Q]V}%");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ha Q^-H`S`bhw; <N");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactory connectionFactory1 = new ConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      connectionFactories0.setConnectionFactory(0, connectionFactory1);
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl0.processingInstruction(">, bu received </", ">, bu received </");
      xMLFilterImpl4.unparsedEntityDecl(">, bu received </", "9W3AER+i.x(M", "9W3AER+i.x(M", ">, bu received </");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("<~7vXy._wt)'|1Wev=x");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl4.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl10.startDocument();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      xMLFilterImpl8.getEntityResolver();
      xMLFilterImpl15.skippedEntity(">, bu received </");
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl6.skippedEntity("<~7vXy.'wtK'|1Wev=x");
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl17);
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl21 = new XMLFilterImpl(xMLFilterImpl14);
      XMLFilterImpl xMLFilterImpl22 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      HandlerBase handlerBase0 = new HandlerBase();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      HandlerBase handlerBase1 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl1.endPrefixMapping("jQ^fum");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl6.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl5.endDocument();
      xMLFilterImpl7.startDocument();
      xMLFilterImpl2.getParent();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl5);
      xMLFilterImpl9.startPrefixMapping("/org/exolab/castor/castor.properties", "/org/exolab/castor/castor.properties");
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl14);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      xMLFilterImpl11.getEntityResolver();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl18);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl19);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      char[] charArray0 = new char[19];
      charArray0[0] = ',';
      charArray0[1] = '\'';
      charArray0[2] = ',';
      AttributesImpl attributesImpl0 = new AttributesImpl();
      xMLReaderAdapter0.startElement("XFu^LiJ:R9Ifov[e", "XFu^LiJ:R9Ifov[e", "XFu^LiJ:R9Ifov[e", attributesImpl0);
      charArray0[3] = 'Q';
      charArray0[4] = '<';
      xMLReaderAdapter0.characters(charArray0, ',', (-378));
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter3);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      String string0 = "org.exolab.castor.util.Configuration";
      xMLReaderAdapter3.skippedEntity("org.exolab.castor.util.Configuration");
      xMLReaderAdapter4.startPrefixMapping("org.exolab.castor.util.Configuration", "4-)+CKXRc 8_tE7Rn");
      xMLReaderAdapter1.endDocument();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(1, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      Enumeration enumeration0 = connectionFactories0.enumerateQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactory0.setName("66Zx:D@&kom:,");
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearTopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[10];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[6];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      try { 
        connectionFactories0.addTopicConnectionFactory(2142, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2142, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.processingInstruction("unable to unmarshal: ", "unable to unmarshal: ");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" AlumI ", "m4#r", " - unable to instantiate: ", (-1));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("_(VCjpvsxZ6nehi", "", "m4#r", 1033);
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("m4#r", "this is a required field and cannot be null.", "m4#r", 1033);
      stackTraceElementArray0[3] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("", "", "Y'n9,q/", (-1));
      stackTraceElementArray0[4] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "Hq2Ws# #(9)GZZ", " AlumI ", 25);
      stackTraceElementArray0[6] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("M4C/J", "unable to unmarshal: ", "P=8WS7{y3", 81);
      stackTraceElementArray0[7] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("/[Q", "Y'n9,q/", "", (-2538));
      stackTraceElementArray0[8] = stackTraceElement6;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = connectionFactories0.getQueueConnectionFactory();
      assertEquals(0, queueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXATopicConnectionFactoryCount();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      assertNull(queueConnectionFactory0.getName());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.processingInstruction("JAi9-", "JAi9-");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl3.setParent(xMLFilterImpl2);
      xMLFilterImpl0.endPrefixMapping("Il9pQmz7y(");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl1.setParent(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl1.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl3.endDocument();
      xMLFilterImpl1.startDocument();
      xMLFilterImpl5.getParent();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl(xMLFilterImpl6);
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl12.startPrefixMapping("Il9pQmz7y(", "Il9pQmz7y(");
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl13);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      xMLFilterImpl1.getEntityResolver();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl9);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl12);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl9);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl1.endPrefixMapping("jQ^fu(");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl5.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl6.setEntityResolver(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl0.endDocument();
      xMLFilterImpl7.startDocument();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl6);
      xMLFilterImpl13.getEntityResolver();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl7);
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl13.processingInstruction("/org/exolab/castor/castor.properties", "/org/exolab/castor/castor.properties");
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl19);
      XMLFilterImpl xMLFilterImpl21 = new XMLFilterImpl(xMLFilterImpl20);
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      HandlerBase handlerBase0 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ryb+'L7BLJ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ryb+'L7BLJ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ryb+'L7BLJ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(2142, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.resolveEntity("resulted in the following error: ", ";Vc,$fPx?29.~$]");
      handlerBase0.ignorableWhitespace((char[]) null, (-870), (-870));
      handlerBase0.processingInstruction(" AlumI ", " AlumI ");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" AlumI ", "LIm4#", ")co#LtDY{G{{", (-1));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("resulted in the following error: ", "", "LIm4#", (-1));
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement2 = new StackTraceElement("LIm4#", "GbKtk^s", ")co#LtDY{G{{", (-1));
      stackTraceElementArray0[3] = stackTraceElement0;
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      char[] charArray0 = new char[0];
      defaultHandler2_0.ignorableWhitespace((char[]) null, (-2165), (-547));
      defaultHandler2_0.startDTD(")co#LtDY{G{{", "@FM(g&Gx9\"{I?St/z#", "");
      defaultHandler2_0.characters(charArray0, (-1), (-3115));
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_0.skippedEntity("0W`@~");
      defaultHandler2_1.endCDATA();
      defaultHandler2_1.endPrefixMapping("LIm4#");
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-658), xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      connectionFactories0.clearXAQueueConnectionFactory();
      assertEquals(0, connectionFactories0.getQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HandlerBase handlerBase0 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.processingInstruction("", "C{|57id");
      HandlerBase handlerBase1 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("Il9pQmz7y(");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl1.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      xMLFilterImpl12.getEntityResolver();
      xMLFilterImpl13.skippedEntity("");
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl11.skippedEntity("");
      xMLFilterImpl11.endPrefixMapping("");
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl12);
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("", "", "", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("", "", "T6Z]lLftnL:*!RH+UG", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      sAXParseException0.printStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "", "", 3509, 96);
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException1.getException();
      SAXParseException sAXParseException3 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "T6Z]lLftnL:*!RH+UG", 96, 3509, sAXParseException1);
      sAXParseException3.toString();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", 96, 96, sAXParseException3);
      sAXParseException1.getLineNumber();
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException5 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "", "", 3509, 3509, (Exception) null);
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.toString();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; ", "T6Z]lLftnL:*!RH+UG", 3509, 96);
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; ", (String) null, "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", (-761), 3509, sAXParseException5);
      SAXParseException sAXParseException8 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", (-761), (-761), sAXParseException4);
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 96; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", 3509, (-761), sAXParseException7);
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException10 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", 3509, 3509, sAXParseException1);
      sAXParseException6.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException11 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; ", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; ", 3509, 96, sAXParseException2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SAXParseException sAXParseException12 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; ", "T6Z]lLftnL:*!RH+UG", 3509, 96, sAXParseException0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-761), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("8<B#KbNv", "8<B#KbNv", "8<B#KbNv", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("8<B#KbNv", "8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      SAXParseException sAXParseException2 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "8<B#KbNv", "8<B#KbNv", 3509, 3509);
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      sAXParseException2.getException();
      SAXParseException sAXParseException3 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 3509, 3509, sAXParseException1);
      sAXParseException3.toString();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 3509, sAXParseException3);
      sAXParseException1.getLineNumber();
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException5 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "8<B#KbNv", 3509, 3509, sAXParseException4);
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.toString();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 3509, sAXParseException1);
      sAXParseException4.toString();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", (String) null, "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", (-761), 3509, sAXParseException5);
      SAXParseException sAXParseException8 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", (-761), (-761), sAXParseException4);
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, (-761), sAXParseException7);
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException10 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 3509, sAXParseException1);
      sAXParseException6.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException11 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: 8<B#KbNv; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", 3509, 3509, sAXParseException2);
      SAXParseException sAXParseException12 = new SAXParseException("T6Z]lLftnL:*!RH+UG", "org.xml.sax.SAXParseExceptionpublicId: 8<B#KbNv; systemId: T6Z]lLftnL:*!RH+UG; lineNumber: 3509; columnNumber: 3509; 8<B#KbNv", "T6Z]lLftnL:*!RH+UG", 3509, 3509, sAXParseException0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory(1, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("6A,yGsZxC", "6A,yGsZxC", "6A,yGsZxC", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("6A,yGsZxC", "6A,yGsZxC", "#rB~tTc=$Z;tH", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      sAXParseException0.printStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("#rB~tTc=$Z;tH", "6A,yGsZxC", "6A,yGsZxC", 3509, 81);
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException1.getException();
      SAXParseException sAXParseException3 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "#rB~tTc=$Z;tH", 81, 3509, sAXParseException1);
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("#rB~tTc=$Z;tH", "#rB~tTc=$Z;tH", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 81, 81, sAXParseException3);
      sAXParseException1.getLineNumber();
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException5 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: #rB~tTc=$Z;tH; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "6A,yGsZxC", "6A,yGsZxC", 3509, 3509, (Exception) null);
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.toString();
      SAXParseException sAXParseException6 = new SAXParseException("#rB~tTc=$Z;tH", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: #rB~tTc=$Z;tH; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 81, mockException0);
      SAXParseException sAXParseException7 = new SAXParseException("@XFJ&*bPybx?N", (String) null, "k?1/`z('HM0wG", (-3009), 3509, sAXParseException5);
      SAXParseException sAXParseException8 = new SAXParseException("#rB~tTc=$Z;tH", "@XFJ&*bPybx?N", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 3509);
      SAXParseException sAXParseException9 = new SAXParseException("k?1/`z('HM0wG", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: #rB~tTc=$Z;tH; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "@XFJ&*bPybx?N", 3509, (-3009), sAXParseException7);
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException10 = new SAXParseException("#rB~tTc=$Z;tH", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 3509, sAXParseException1);
      sAXParseException6.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException11 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: #rB~tTc=$Z;tH; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: #rB~tTc=$Z;tH; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 81, sAXParseException2);
      SAXParseException sAXParseException12 = new SAXParseException("#rB~tTc=$Z;tH", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: #rB~tTc=$Z;tH; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "#rB~tTc=$Z;tH", 3509, 81, sAXParseException0);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[3];
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)11;
      connectionFactories0.enumerateXATopicConnectionFactory();
      byteArray0[1] = (byte)51;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")pQ;c%p85}>eQLBF-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ")pQ;c%p85}>eQLBF-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")pQ;c%p85}>eQLBF-");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      HandlerBase handlerBase0 = new HandlerBase();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      HandlerBase handlerBase1 = new HandlerBase();
      HandlerBase handlerBase2 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl1.endPrefixMapping("Z");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl6.startDocument();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl8.startDocument();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl10);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLFilterImpl11.setParent(parserAdapter0);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl15);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      xMLFilterImpl12.getEntityResolver();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl10);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.skippedEntity("Z");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Z");
      connectionFactories0.marshal((Writer) mockPrintWriter0);
      try { 
        connectionFactories0.marshal((ContentHandler) xMLFilterImpl8);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.processingInstruction("", "");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" AlHmr ", "m4#r", " AlHmr ", (-1));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("", "", "m4#r", 1093);
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("m4#r", "this is a required field and cannot be null.", "m4#r", 1093);
      stackTraceElementArray0[3] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("*z`IpLMby", "*z`IpLMby", "this is a required field and cannot be null.", (-1));
      stackTraceElementArray0[4] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("M4C/J", "M4C/J", " AlHmr ", (-1));
      stackTraceElementArray0[6] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("M4C/J", "", "P=8WS7{y3", 81);
      stackTraceElementArray0[7] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("/[Q", "*z`IpLMby", "*z`IpLMby", (-2538));
      stackTraceElementArray0[8] = stackTraceElement6;
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.processingInstruction("JAi9-", "C{|57id");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("Il9pQmz7y(");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl1.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl10.getEntityResolver();
      xMLFilterImpl13.getEntityResolver();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl12.skippedEntity("");
      xMLFilterImpl12.endPrefixMapping("(?\"ku8 38gcW");
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl13);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-620);
      String string0 = "U";
      String string1 = "~p";
      String string2 = "4t;dvV7p80i>4b4ZN%";
      SAXParseException sAXParseException0 = new SAXParseException("~p", " AlumI ", "4t;dvV7p80i>4b4ZN%", (-620), (-620));
      sAXParseException0.getCause();
      SAXParseException sAXParseException1 = new SAXParseException(" AlumI ", "~p", "~p", (-620), (-620));
      sAXParseException0.toString();
      int int1 = (-1939);
      int int2 = (-1156);
      SAXParseException sAXParseException2 = new SAXParseException(" AlumI ", " AlumI ", " AlumI ", (-1156), (-1939));
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("~p", "U", " AlumI ", (-620), (-1156));
      sAXParseException3.getLineNumber();
      try { 
        connectionFactories0.addXAConnectionFactory(23, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 23, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("YpY", " AlucI", "4t;dvV7p80i>4b4ZN%", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException(" AlucI", "YpY", "unable to unmashal: ", 3509, 3509);
      sAXParseException0.toString();
      sAXParseException1.toString();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException2 = new SAXParseException("unable to unmashal: ", "U", " AlucI", 3509, 81);
      sAXParseException2.fillInStackTrace();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException3 = new SAXParseException("unable to unmashal: ", "4t;dvV7p80i>4b4ZN%", "YpY", 81, 836);
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException4 = new SAXParseException("4t;dvV7p80i>4b4ZN%", ".'VGL8HTL}{sJ", "YpY", 3509, 3509);
      Throwable throwable0 = sAXParseException1.fillInStackTrace();
      throwable0.initCause(sAXParseException4);
      throwable0.getCause();
      sAXParseException4.addSuppressed(throwable0);
      sAXParseException4.getCause();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(3509, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Marshaller.enableDebug = true;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)1;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "NskS;,N/b@Fp1TKZusK");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t-CjqaitpDz^/c");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-84);
      byteArray0[4] = (byte)105;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)116;
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)35;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t-CjqaitpDz^/c");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.types.AnyNode");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.types.AnyNode");
      connectionFactories0.isValid();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      xMLReaderAdapter4.startPrefixMapping("org.exolab.jms.config.ConnectionFactories", "org.exolab.jms.config.ConnectionFactories");
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter1);
      char[] charArray0 = new char[9];
      charArray0[0] = 'm';
      charArray0[1] = 'I';
      charArray0[2] = 'k';
      charArray0[3] = '}';
      charArray0[4] = 'm';
      charArray0[5] = '\u0080';
      charArray0[6] = '/';
      charArray0[7] = '\"';
      charArray0[8] = '>';
      parserAdapter3.characters(charArray0, 1, 2);
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter3);
      xMLReaderAdapter1.endDocument();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "t8<xdgpt");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nUO*lRaQc|Mh2 -1]~-");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$UN/c&)!R");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nUO*lRaQc|Mh2 -1]~-");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl0.processingInstruction(">, bu received </", ">, bu received </");
      xMLFilterImpl4.unparsedEntityDecl(">, bu received </", "9W3AER+i.x(M", "QVk}YyA", ">, bu received </");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("<~7vXy._wt)'|1Wev=x");
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl2.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl1.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl9.startDocument();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      xMLFilterImpl7.getEntityResolver();
      xMLFilterImpl13.skippedEntity(">, bu received </");
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl9);
      xMLFilterImpl4.skippedEntity("<~7vXy._wt)'|1Wev=x");
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl15);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-857));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl4);
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl5.notationDecl("Z", "Z", "Z");
      xMLFilterImpl1.endPrefixMapping("Z");
      xMLFilterImpl7.startPrefixMapping("", "");
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl7.endPrefixMapping("Z");
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl16);
      xMLFilterImpl11.getEntityResolver();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl9.notationDecl("", "", "Z");
      XMLFilterImpl xMLFilterImpl21 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl22 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl9.setEntityResolver(xMLFilterImpl16);
      XMLFilterImpl xMLFilterImpl23 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl24 = new XMLFilterImpl();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-9), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl1.notationDecl("Z", "Z", "Z");
      xMLFilterImpl1.endPrefixMapping("Z");
      xMLFilterImpl6.startPrefixMapping("", "");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl6.endPrefixMapping("Z");
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl15);
      xMLFilterImpl10.getEntityResolver();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl8.notationDecl("", "", "Z");
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl4);
      XMLFilterImpl xMLFilterImpl21 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl8.setEntityResolver(xMLFilterImpl15);
      XMLFilterImpl xMLFilterImpl22 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl23 = new XMLFilterImpl();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-9), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Q\"kjaYx~1LS=D/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#1mv'8R?T~}H\"`nycr");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        connectionFactories0.getXAConnectionFactory((-805));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("$g", "$g", "$g", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("$g", "$g", "2`kG[U3Y@:B.tz:y.2@", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      sAXParseException1.toString();
      SAXParseException sAXParseException2 = new SAXParseException("mbQyF\"", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: $g; lineNumber: 3509; columnNumber: 3509; $g", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", 3509, 1047);
      sAXParseException2.getLocalizedMessage();
      sAXParseException1.getLocalizedMessage();
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      SAXParseException sAXParseException3 = new SAXParseException("$g", "$g", "$g", 1047, 1047);
      sAXParseException2.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("$g", "$g", "$g", 3509, 3509);
      sAXParseException0.addSuppressed(sAXParseException4);
      SAXParseException sAXParseException5 = new SAXParseException("$g", "$g", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", 3509, 822);
      SAXParseException sAXParseException6 = new SAXParseException("2`kG[U3Y@:B.tz:y.2@", "2`kG[U3Y@:B.tz:y.2@", "2`kG[U3Y@:B.tz:y.2@", 3509, 3509);
      sAXParseException0.getException();
      sAXParseException6.toString();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", "$g", "$g", 1047, 3509, sAXParseException2);
      sAXParseException7.getPublicId();
      sAXParseException2.getLocalizedMessage();
      sAXParseException1.initCause(sAXParseException4);
      SAXParseException sAXParseException8 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", "mbQyF\"", "mbQyF\"", 1047, 3509, sAXParseException1);
      sAXParseException4.getSuppressed();
      sAXParseException7.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 2`kG[U3Y@:B.tz:y.2@; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; 2`kG[U3Y@:B.tz:y.2@", "mbQyF\"", "mbQyF\"", 3509, 3509, sAXParseException7);
      SAXParseException sAXParseException10 = new SAXParseException("$g", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: $g; lineNumber: 3509; columnNumber: 3509; $g", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", 3509, 822, sAXParseException2);
      sAXParseException6.addSuppressed(sAXParseException7);
      SAXParseException sAXParseException11 = new SAXParseException("mbQyF\"", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: 2`kG[U3Y@:B.tz:y.2@; lineNumber: 3509; columnNumber: 3509; $g", 822, 3509, sAXParseException3);
      SAXParseException sAXParseException12 = new SAXParseException("2`kG[U3Y@:B.tz:y.2@", "org.xml.sax.SAXParseExceptionpublicId: $g; systemId: $g; lineNumber: 3509; columnNumber: 3509; $g", "mbQyF\"", 822, 3509, sAXParseException5);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Marshaller.enableDebug = false;
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      queueConnectionFactoryArray0[1] = queueConnectionFactory0;
      queueConnectionFactoryArray0[3] = queueConnectionFactory0;
      queueConnectionFactoryArray0[4] = queueConnectionFactory0;
      queueConnectionFactoryArray0[5] = queueConnectionFactory0;
      queueConnectionFactoryArray0[6] = queueConnectionFactory0;
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      boolean boolean1 = connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory1);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl0.setErrorHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl2);
      HandlerBase handlerBase0 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl1.endPrefixMapping("jQ^fu(");
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl6.startDocument();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl8.setEntityResolver(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl5.endDocument();
      xMLFilterImpl8.startDocument();
      xMLFilterImpl2.getParent();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl12);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl16);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      xMLFilterImpl13.getEntityResolver();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl11);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl21 = new XMLFilterImpl(xMLFilterImpl20);
      xMLFilterImpl21.processingInstruction("jQ^fu(", "/org/exolab/castor/castor.properties");
      XMLFilterImpl xMLFilterImpl22 = new XMLFilterImpl(xMLFilterImpl21);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl((XMLReader) null);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl((XMLReader) null);
      xMLFilterImpl2.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl5.setEntityResolver((EntityResolver) null);
      xMLFilterImpl3.getContentHandler();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl2.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl5.startDocument();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl12);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl11);
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "", "0NSFVK06s+E3w", 28);
      StackTraceElement stackTraceElement1 = new StackTraceElement("a/puw%3Emv[u8[", "", "0NSFVK06s+E3w", 9);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.resolveEntity("resulte~it foElwIng errom: ", "mapping.createMethodNotFound");
      handlerBase0.resolveEntity("sAtmIt ", "mapping.createMethodNotFound");
      handlerBase0.ignorableWhitespace((char[]) null, (-886), (-886));
      handlerBase0.processingInstruction("sAtmIt ", "sAtmIt ");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.processingInstruction("A.Iz?1bn]LpiD", "A.Iz?1bn]LpiD");
      defaultHandler2_0.comment((char[]) null, (-886), (-886));
      defaultHandler2_0.ignorableWhitespace((char[]) null, (-2165), (-886));
      defaultHandler2_0.startDTD("", "@FM(g%Gx9\"{I?gSt/z#", "W");
      defaultHandler2_0.characters((char[]) null, (-2165), 1725);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_1.endDTD();
      defaultHandler2_1.endPrefixMapping("rOH8$");
      defaultHandler2_1.notationDecl("org.exolab.jms.config.ConnectionFactories", "mapping.createMethodNotFound", "W");
      defaultHandler2_1.endDTD();
      defaultHandler2_1.resolveEntity("Thi# nde type can nE contan name;pa?s", "G", "", "resulte~it foElwIng errom: ");
      defaultHandler2_1.internalEntityDecl("rOH8$", "}>");
      defaultHandler2_1.unparsedEntityDecl("", "A.Iz?1bn]LpiD", "@FM(g%Gx9\"{I?gSt/z#", "6 .^VFtK");
      defaultHandler2_1.startCDATA();
      defaultHandler2_1.endCDATA();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      assertEquals(0, topicConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl0);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter3);
      xMLReaderAdapter2.setDocumentHandler(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter2.startPrefixMapping("aH>g~`*NQ}%Cqh.~", "aH>g~`*NQ}%Cqh.~");
      char[] charArray0 = new char[3];
      charArray0[0] = '5';
      charArray0[1] = 'I';
      charArray0[2] = 'j';
      xMLFilterImpl0.ignorableWhitespace(charArray0, 694, 2928);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(xMLFilterImpl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory2 = new QueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" AlmHmr ", "m4#r", " AlmHmr ", 81);
      stackTraceElementArray0[0] = stackTraceElement0;
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("m4#r", "this is a required field and cannot be null.", "m4#r", 1093);
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("*z`IpLMby", "*z`IpLMby", "this is a required field and cannot be null.", 81);
      stackTraceElementArray0[0] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("UcC/J", "The argument type array must be the same length as argument value array.", " AlmHmr ", 24);
      stackTraceElementArray0[6] = stackTraceElement3;
      stackTraceElementArray0[7] = stackTraceElement2;
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-1), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter3.startDocument();
      xMLReaderAdapter4.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter0);
      parserAdapter0.getErrorHandler();
      xMLReaderAdapter4.startPrefixMapping("e#n7Z//rbJl\"o{q", "e#n7Z//rbJl\"o{q");
      xMLReaderAdapter4.startPrefixMapping("e#n7Z//rbJl\"o{q", "");
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      xMLReaderAdapter8.endDocument();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter3.startDocument();
      xMLReaderAdapter4.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter2);
      parserAdapter0.getErrorHandler();
      xMLReaderAdapter4.startPrefixMapping("e#n7Z//rbJl\"o{q", "e#n7Z//rbJl\"o{q");
      xMLReaderAdapter4.startPrefixMapping("e#n7Z//rbJl\"o{q", "");
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter8.endDocument();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter2);
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter();
      xMLReaderAdapter3.startDocument();
      xMLReaderAdapter4.setDocumentHandler(parserAdapter0);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter(parserAdapter2);
      parserAdapter0.getErrorHandler();
      xMLReaderAdapter4.startPrefixMapping("e#n7Z//rbJl\"o{q", "e#n7Z//rbJl\"o{q");
      xMLReaderAdapter4.startPrefixMapping("e#n7Z//rbJl\"o{q", "");
      XMLReaderAdapter xMLReaderAdapter6 = new XMLReaderAdapter(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter7 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter8 = new XMLReaderAdapter();
      xMLReaderAdapter8.endDocument();
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      HandlerBase handlerBase0 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl0.processingInstruction("", "C{|5d");
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("C{|5d");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl1.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      xMLFilterImpl10.startDocument();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl();
      xMLFilterImpl13.getEntityResolver();
      xMLFilterImpl14.skippedEntity("");
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl12.skippedEntity("");
      xMLFilterImpl12.endPrefixMapping("&EI]!3XAX");
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl(xMLFilterImpl10);
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl(xMLFilterImpl13);
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      try { 
        connectionFactories0.getTopicConnectionFactory((-285));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.processingInstruction("", "");
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[8];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" AlmHmr ", "m4#r", " AlmHmr ", 81);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement(" AlmHmr ", "", "m4#r", 1093);
      stackTraceElementArray0[2] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("m4#r", "this is a required field and cannot be null.", "m4#r", 1093);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("*z`IpLMby", "*z`IpLMby", "this is a required field and cannot be null.", 81);
      stackTraceElementArray0[0] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("U4C/J", "The argument type array must be the same length as argument value array.", " AlmHmr ", 24);
      stackTraceElementArray0[6] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("U4C/J", "", "oR", 81);
      stackTraceElementArray0[7] = stackTraceElement5;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      defaultHandler2_0.internalEntityDecl("this is a required field and cannot be null.", "*z`IpLMby");
      defaultHandler2_0.unparsedEntityDecl("this is a required field and cannot be null.", "oR", "", "");
      defaultHandler2_0.startCDATA();
      defaultHandler2_0.endCDATA();
      try { 
        connectionFactories0.getTopicConnectionFactory(81);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HandlerBase handlerBase0 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl1.setEntityResolver(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl1.startElement("", "", "|b.ly2H;0?o!", (Attributes) null);
      xMLFilterImpl0.processingInstruction("", "C{|5d");
      HandlerBase handlerBase1 = new HandlerBase();
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl0.endPrefixMapping("Il9pQmz7y(");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl3.startDocument();
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl1.startDocument();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl(xMLFilterImpl8);
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl13.getEntityResolver();
      xMLFilterImpl8.skippedEntity("");
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl10);
      xMLFilterImpl12.skippedEntity("");
      xMLFilterImpl12.endPrefixMapping("");
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl(xMLFilterImpl13);
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory(1485);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "kG5<f`igE(EY3@");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kG5<f`igE(EY3@");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Unable to resolve ID for instance of class '");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "=~G@GV$W");
      StringReader stringReader0 = new StringReader(";]2_mi!-6/K3");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("YpY", " AlucI", "4t;dvV7p80i>4b4ZN%", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException(" AlucI", "YpY", "unable to unmashal: ", 3509, 3509);
      sAXParseException0.toString();
      sAXParseException1.toString();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException2 = new SAXParseException(" AlucI", " AlucI", " AlucI", 81, 836);
      SAXParseException sAXParseException3 = new SAXParseException("unable to unmashal: ", "U", " AlucI", 3509, 81);
      sAXParseException3.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("unable to unmashal: ", "4t;dvV7p80i>4b4ZN%", "YpY", 81, 836);
      MockException mockException0 = new MockException(sAXParseException3);
      SAXParseException sAXParseException5 = new SAXParseException("4t;dvV7p80i>4b4ZN%", ".'VGL8HTL}{sJ", "YpY", 3509, 3509);
      SAXParseException sAXParseException6 = (SAXParseException)sAXParseException2.fillInStackTrace();
      sAXParseException6.initCause(sAXParseException5);
      sAXParseException6.getCause();
      sAXParseException5.addSuppressed(sAXParseException6);
      sAXParseException5.getCause();
      SAXParseException sAXParseException7 = new SAXParseException("AhAc+x}XH_IU3!`h", locator2Impl0, sAXParseException6);
      sAXParseException7.getSystemId();
      sAXParseException7.getCause();
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.getConnectionFactory((-1116));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.setEntityResolver(xMLFilterImpl0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(xMLFilterImpl0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter3 = new ParserAdapter(xMLReaderAdapter4);
      XMLReaderAdapter xMLReaderAdapter5 = new XMLReaderAdapter();
      char[] charArray0 = new char[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getXATopicConnectionFactory();
      try { 
        connectionFactories0.getXATopicConnectionFactory((-2330));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.endPrefixMapping("^=5`3eu1{g^8)");
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      HandlerBase handlerBase0 = new HandlerBase();
      parserAdapter0.setEntityResolver(handlerBase0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      xMLReaderAdapter0.endDocument();
      StringReader stringReader0 = new StringReader("wexKaw,-");
      StringReader stringReader1 = new StringReader("^=5`3eu1{g^8)");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      QueueConnectionFactory queueConnectionFactory1 = new QueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory(xAQueueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "D6A,yGXsZxC");
      SAXParseException sAXParseException0 = new SAXParseException(" AlumI ", " AlumI ", " AlumI ", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException(" AlumI ", " AlumI ", "mbQ~9yF\"", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      sAXParseException0.printStackTrace();
      int int0 = 81;
      SAXParseException sAXParseException2 = new SAXParseException("mbQ~9yF\"", "D6A,yGXsZxC", " AlumI ", 3509, 81);
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException3 = new SAXParseException(" AlumI ", " AlumI ", " AlumI ", 81, 81);
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException(" AlumI ", " AlumI ", "org.xml.sax.SAXParseExceptionpublicId:  AlumI ; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509;  AlumI ", 3509, 836);
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException5 = new SAXParseException("D6A,yGXsZxC", ".'VGL8HTL}{sJ", "D6A,yGXsZxC", 3509, 3509);
      sAXParseException2.getColumnNumber();
      sAXParseException5.toString();
      SAXParseException sAXParseException6 = new SAXParseException("mbQ~9yF\"", "org.xml.sax.SAXParseExceptionpublicId: .'VGL8HTL}{sJ; systemId: D6A,yGXsZxC; lineNumber: 3509; columnNumber: 3509; D6A,yGXsZxC", "mbQ~9yF\"", 836, 3509);
      sAXParseException0.getCause();
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: .'VGL8HTL}{sJ; systemId: D6A,yGXsZxC; lineNumber: 3509; columnNumber: 3509; D6A,yGXsZxC", "org.xml.sax.SAXParseExceptionpublicId:  AlumI ; systemId:  AlumI ; lineNumber: 3509; columnNumber: 3509;  AlumI ", "org.xml.sax.SAXParseExceptionpublicId:  AlumI ; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509;  AlumI ", 3509, 3509);
      sAXParseException6.addSuppressed(sAXParseException1);
      sAXParseException1.initCause(sAXParseException0);
      sAXParseException5.addSuppressed(sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("mbQ~9yF\"", "org.xml.sax.SAXParseExceptionpublicId:  AlumI ; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509;  AlumI ", "mbQ~9yF\"", 836, 81, sAXParseException0);
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.setContentHandler(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl4);
      xMLFilterImpl0.setEntityResolver(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl(xMLFilterImpl2);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      xMLFilterImpl5.notationDecl("M", "M", "M");
      xMLFilterImpl1.endPrefixMapping("M");
      xMLFilterImpl7.startPrefixMapping("", "");
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl9 = new XMLFilterImpl();
      xMLFilterImpl7.endPrefixMapping("M");
      XMLFilterImpl xMLFilterImpl10 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl11 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl12 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl13 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl14 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl15 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl16 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl17 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl18 = new XMLFilterImpl(xMLFilterImpl16);
      xMLFilterImpl11.getEntityResolver();
      XMLFilterImpl xMLFilterImpl19 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl20 = new XMLFilterImpl(xMLFilterImpl3);
      xMLFilterImpl9.notationDecl("", "", "M");
      XMLFilterImpl xMLFilterImpl21 = new XMLFilterImpl(xMLFilterImpl5);
      XMLFilterImpl xMLFilterImpl22 = new XMLFilterImpl(xMLFilterImpl2);
      xMLFilterImpl9.setEntityResolver(xMLFilterImpl16);
      XMLFilterImpl xMLFilterImpl23 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl24 = new XMLFilterImpl();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.getXAConnectionFactory(21);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("g", "g", "g", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("g", "g", "mbQ~9yF\"", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      sAXParseException1.toString();
      SAXParseException sAXParseException2 = new SAXParseException("mbQ~9yF\"", "", "g", 3509, 79);
      sAXParseException2.getLocalizedMessage();
      sAXParseException1.getLocalizedMessage();
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      SAXParseException sAXParseException3 = new SAXParseException("g", "g", "g", 79, 79);
      sAXParseException2.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException4 = new SAXParseException("g", "g", "g", 3509, 3509);
      sAXParseException0.addSuppressed(sAXParseException4);
      SAXParseException sAXParseException5 = new SAXParseException("g", "g", "org.xml.sax.SAXParseExceptionpublicId: g; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509; g", 3509, 836);
      SAXParseException sAXParseException6 = new SAXParseException("", "FlE=}1n", "", 3509, 3509);
      sAXParseException2.getException();
      sAXParseException6.toString();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: g; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509; g", "mbQ~9yF\"", "g", 79, 3509, sAXParseException2);
      sAXParseException7.getPublicId();
      sAXParseException2.getLocalizedMessage();
      sAXParseException7.initCause(sAXParseException5);
      SAXParseException sAXParseException8 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: g; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509; g", "mbQ~9yF\"", "mbQ~9yF\"", 79, 3509, sAXParseException1);
      sAXParseException1.getSuppressed();
      sAXParseException7.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: FlE=}1n; systemId: ; lineNumber: 3509; columnNumber: 3509; ", "mbQ~9yF\"", "mbQ~9yF\"", 3509, 3509, sAXParseException7);
      SAXParseException sAXParseException10 = new SAXParseException("g", "org.xml.sax.SAXParseExceptionpublicId: g; systemId: g; lineNumber: 3509; columnNumber: 3509; g", "FlE=}1n", 3509, 836, sAXParseException2);
      sAXParseException6.addSuppressed(sAXParseException7);
      SAXParseException sAXParseException11 = new SAXParseException("mbQ~9yF\"", "org.xml.sax.SAXParseExceptionpublicId: g; systemId: mbQ~9yF\"; lineNumber: 3509; columnNumber: 3509; g", "mbQ~9yF\"", 836, 79, sAXParseException0);
      sAXParseException6.getCause();
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("6A,yGsZxC", "6A,yGsZxC", "6A,yGsZxC", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException("6A,yGsZxC", "6A,yGsZxC", "mbQ~9F\"", 3509, 3509);
      sAXParseException1.toString();
      sAXParseException0.toString();
      sAXParseException0.toString();
      sAXParseException0.printStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("mbQ~9F\"", "6A,yGsZxC", "6A,yGsZxC", 3509, 81);
      sAXParseException2.getMessage();
      sAXParseException2.getLineNumber();
      sAXParseException0.getSuppressed();
      sAXParseException1.getException();
      SAXParseException sAXParseException3 = new SAXParseException("6A,yGsZxC", "6A,yGsZxC", "6A,yGsZxC", 81, 81);
      sAXParseException1.toString();
      sAXParseException2.addSuppressed(sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("6A,yGsZxC", "6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 3509);
      MockException mockException0 = new MockException(sAXParseException2);
      SAXParseException sAXParseException5 = new SAXParseException("6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "6A,yGsZxC", 3509, 3509);
      sAXParseException2.getColumnNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.toString();
      SAXParseException sAXParseException6 = new SAXParseException("mbQ~9F\"", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "mbQ~9F\"", 3509, 3509);
      sAXParseException0.getCause();
      sAXParseException5.getSuppressed();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 3509);
      sAXParseException6.addSuppressed(sAXParseException1);
      SAXParseException sAXParseException8 = new SAXParseException("6A,yGsZxC", "mbQ~9F\"", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: 6A,yGsZxC; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 3509, 3509);
      sAXParseException5.addSuppressed(sAXParseException6);
      SAXParseException sAXParseException9 = new SAXParseException("mbQ~9F\"", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "mbQ~9F\"", 3509, 81, sAXParseException0);
      SAXParseException sAXParseException10 = new SAXParseException("6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", "org.xml.sax.SAXParseExceptionpublicId: 6A,yGsZxC; systemId: mbQ~9F\"; lineNumber: 3509; columnNumber: 3509; 6A,yGsZxC", 81, 3509);
      try { 
        connectionFactories0.getQueueConnectionFactory(3509);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      char[] charArray0 = new char[19];
      charArray0[0] = ',';
      charArray0[1] = '\'';
      charArray0[2] = ',';
      charArray0[3] = '\\';
      charArray0[4] = '<';
      charArray0[6] = 'U';
      charArray0[8] = 'T';
      xMLReaderAdapter0.characters(charArray0, (-85), (-378));
      XMLReaderAdapter xMLReaderAdapter2 = new XMLReaderAdapter();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter2);
      xMLReaderAdapter0.setDocumentHandler(parserAdapter1);
      XMLReaderAdapter xMLReaderAdapter3 = new XMLReaderAdapter(parserAdapter0);
      xMLReaderAdapter2.skippedEntity("4M9p2A)i]xRh|p,m");
      xMLReaderAdapter2.startPrefixMapping("4M9p2A)i]xRh|p,m", "4M9p2A)i]xRh|p,m");
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter2);
      char[] charArray1 = new char[3];
      charArray1[2] = '<';
      XMLReaderAdapter xMLReaderAdapter4 = new XMLReaderAdapter(parserAdapter2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader("z?hARoP87sq-x3fx");
      StringReader stringReader1 = new StringReader("4-)+CKXRc 8_tE7Rn");
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      HandlerBase handlerBase0 = new HandlerBase();
      HandlerBase handlerBase1 = new HandlerBase();
      handlerBase1.processingInstruction("unable to unmarshal: ", "unable to unmarshal: ");
      SAXParseException sAXParseException0 = new SAXParseException("YpY", " AlumI ", "4t;dvV7p80i>4b4ZN%", 3509, 3509);
      SAXParseException sAXParseException1 = new SAXParseException(" - unable to instantiate: ", " AlumI ", " AlumI ", 3509, 3509, sAXParseException0);
      sAXParseException0.toString();
      sAXParseException1.toString();
      handlerBase1.warning(sAXParseException1);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      handlerBase1.endDocument();
      SAXParseException sAXParseException2 = new SAXParseException(" AlumI ", " AlumI ", " AlumI ", 81, 842);
      SAXParseException sAXParseException3 = new SAXParseException("unable to unmarshal: ", "m4#r", " AlumI ", 3509, 81);
      sAXParseException3.fillInStackTrace();
      sAXParseException3.addSuppressed(sAXParseException0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[9];
      StackTraceElement stackTraceElement0 = new StackTraceElement(" AlumI ", ")co#LtDY{G{{", "4t;dvV7p80i>4b4ZN%", (-1));
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("4t;dvV7p80i>4b4ZN%", "YpY", "M4C/J", (-856));
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("", "", "m4#r", 1033);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("m4#r", "this is a required field and cannot be null.", ")co#LtDY{G{{", 1033);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("", "", "Y'n9,q/", (-1));
      stackTraceElementArray0[4] = stackTraceElement4;
      StackTraceElement stackTraceElement5 = new StackTraceElement("org.xml.sax.SAXParseExceptionpublicId:  AlumI ; systemId: 4t;dvV7p80i>4b4ZN%; lineNumber: 3509; columnNumber: 3509; YpY", "", (String) null, 128);
      stackTraceElementArray0[5] = stackTraceElement5;
      StackTraceElement stackTraceElement6 = new StackTraceElement("", "Hq2Ws# #()GZZ", ")co#LtDY{G{{", 1240);
      stackTraceElementArray0[6] = stackTraceElement6;
      StackTraceElement stackTraceElement7 = new StackTraceElement("0^a>uGVmum[m::{p", "unable to unmarshal: ", "", (-856));
      stackTraceElementArray0[7] = stackTraceElement7;
      StackTraceElement stackTraceElement8 = new StackTraceElement("/[Q", "Y'n9,q/", (String) null, (-2538));
      stackTraceElementArray0[8] = stackTraceElement8;
      sAXParseException2.setStackTrace(stackTraceElementArray0);
      MockException mockException0 = new MockException(sAXParseException3);
      SAXParseException sAXParseException4 = new SAXParseException("4t;dvV7p80i>4b4ZN%", ".'IF2LY8HTL}{sJ", "YpY", 3509, 3509);
      sAXParseException2.getSuppressed();
      SAXParseException sAXParseException5 = new SAXParseException("5ugH", (String) null, (String) null, 81, 3509);
      sAXParseException0.getSuppressed();
      sAXParseException5.getSuppressed();
      connectionFactories0.validate();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      int int0 = 0;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
