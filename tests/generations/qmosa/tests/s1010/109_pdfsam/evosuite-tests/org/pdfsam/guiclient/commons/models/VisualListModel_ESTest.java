/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 08:23:35 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Container;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.DefaultFocusTraversalPolicy;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.event.ComponentListener;
import java.awt.event.ContainerListener;
import java.awt.event.HierarchyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.DataBufferFloat;
import java.awt.image.IndexColorModel;
import java.awt.image.RescaleOp;
import java.awt.image.renderable.ParameterBlock;
import java.text.Format;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.Chronology;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.EventListener;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import java.util.stream.Stream;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.FPXDescriptor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JLayeredPane;
import javax.swing.JTable;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.border.LineBorder;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.StyledEditorKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.6801886765033243
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.moveUpIndex(9999);
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel1.addAllElements(9999, (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      vector1.add(visualPageListItemArray0[0]);
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.updateElementAt(9999, visualPageListItemArray0[3]);
      visualListModel0.moveUpIndex(0);
      visualListModel0.getSize();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.prependAllElements(vector1);
      visualListModel1.removeElements(1, 1, false);
      visualListModel1.clearData();
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.1817319207582866
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jTable_PrintModeArray0[2] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      visualListModel0.data = null;
      jTable_PrintModeArray0[3] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode5;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(linkedHashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.8584738281091195
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      jTable_PrintModeArray0[3] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[2];
      intArray1[1] = 1;
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      hashSet0.removeIf(predicate3);
      visualListModel0.prependAllElements(hashSet0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addElementAt((VisualPageListItem) null, 3174);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.565394837118028
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[10];
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      int[] intArray0 = new int[2];
      intArray0[0] = 2412;
      intArray0[1] = 5;
      try { 
        visualListModel0.moveDownIndexes(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2412
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7604522029057335
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[6];
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      vector2.add((VisualPageListItem) null);
      visualListModel1.setData(vector2);
      visualListModel0.moveUpIndex(9999);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel1.addAllElements(5000, (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualPageListItemArray0[1] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(2);
      visualListModel0.getSize();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(4, visualListModel0.getSize());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.652376137750783
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray1);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1442));
      linkedHashSet0.stream();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.spliterator();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray2 = new int[1];
      intArray2[0] = (-1442);
      visualListModel0.moveUpIndexes(intArray2);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(1895);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.71747278103407
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(293.23007638525, 0.0, 293.23007638525, 71.1397327107641);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 72;
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.NORMAL;
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[6];
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      jTable_PrintModeArray0[1] = jTable_PrintMode3;
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      jTable_PrintModeArray0[3] = jTable_PrintMode2;
      jTable_PrintModeArray0[4] = jTable_PrintMode1;
      jTable_PrintModeArray0[5] = jTable_PrintMode0;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 72
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3791235169376774
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      Predicate<VisualPageListItem> predicate0 = Predicate.isEqual((Object) null);
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate1).test(any());
      Predicate<VisualPageListItem> predicate2 = predicate0.and(predicate1);
      Predicate<VisualPageListItem> predicate3 = predicate2.or(predicate0);
      Predicate<VisualPageListItem> predicate4 = predicate3.negate();
      linkedHashSet0.removeIf(predicate4);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray1);
      linkedHashSet0.iterator();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, 90);
      linkedHashSet0.stream();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.spliterator();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray2 = new int[1];
      intArray2[0] = 90;
      try { 
        visualListModel0.moveUpIndexes(intArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 89
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      visualListModel0.reverseElements(intArray0);
      intArray0[0] = (-2948);
      int int0 = 0;
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      visualListModel0.undeleteElements(intArray0);
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      ParameterBlock parameterBlock1 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, ".s^\"w6DeV`Jv[o4M", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \".s^\"w6DeV`Jv[o4M\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.172031691593465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Unable to create error image.");
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      linkedHashSet0.clear();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedHashSet0.iterator();
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte) (-127);
      intArray0[0] = (int) (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 102
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9487205928347628
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      linkedHashSet0.clear();
      Object object0 = new Object();
      visualListModel0.getSize();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[3];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveDownIndex(0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.317477358555153
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[5] = jTable_PrintMode5;
      JTable.PrintMode jTable_PrintMode6 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode6;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.723618513741878
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.updateElementAt(90, (VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray1);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1442));
      linkedHashSet0.stream();
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.add((VisualPageListItem) null);
      linkedHashSet0.spliterator();
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      linkedHashSet0.add((VisualPageListItem) null);
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      visualListModel0.moveUpIndexes(intArray2);
      visualListModel0.moveDownIndex(1);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance(1895);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      OperationRegistry operationRegistry0 = OperationRegistry.getThreadSafeOperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "sZh)%6}", parameterBlock0);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"sZh)%6}\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.1785118019005782
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Unable to create error image.");
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      linkedHashSet0.clear();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedHashSet0.iterator();
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte) (-127);
      intArray0[0] = (int) (byte)102;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[3];
      intArray1[0] = (int) (byte)102;
      intArray1[1] = (int) (byte) (-127);
      intArray1[2] = (-153);
      visualListModel0.undeleteElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 102
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.51302553055285
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1442));
      linkedHashSet0.stream();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      int[] intArray2 = new int[1];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[6];
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      jTable_PrintModeArray0[1] = jTable_PrintMode0;
      jTable_PrintModeArray0[2] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[3] = jTable_PrintMode1;
      jTable_PrintModeArray0[4] = jTable_PrintMode0;
      jTable_PrintModeArray0[5] = jTable_PrintMode0;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray2);
      visualListModel1.moveUpIndexes(intArray0);
      int[] intArray3 = new int[6];
      intArray3[0] = (-1442);
      intArray3[1] = (-1523);
      intArray3[2] = (-1442);
      intArray3[3] = (-1442);
      intArray3[4] = (-1);
      intArray3[5] = 90;
      visualListModel0.moveUpIndexes(intArray3);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3499577949565915
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 979;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      linkedHashSet0.clear();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\u0130NFO");
      visualListModel0.undeleteElements(intArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      System.setCurrentTimeMillis(979);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.0868706841389337
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      linkedHashSet0.add((VisualPageListItem) null);
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[3];
      renderingHints_KeyArray0[0] = (RenderingHints.Key) sunHints_Key5;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key0;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key3;
      linkedHashSet0.toArray(renderingHints_KeyArray0);
      JTable.PrintMode.values();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.prependAllElements(linkedHashSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")scp5\"Y|");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      int int0 = 91;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      float float0 = 1950.0F;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      hashMap0.clear();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key0, hashSet0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      hashMap0.put(sunHints_Key1, sunHints_Key1);
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(1950.0F, 1950.0F, renderingHints0);
      float float1 = (-0.008584201F);
      float float2 = (-1616.093F);
      AffineTransform affineTransform0 = new AffineTransform(0.0F, 0.0F, 0.0F, (-997.4F), (-1616.093F), (-0.008584201F));
      double[] doubleArray0 = new double[0];
      AffineTransform affineTransform1 = null;
      try {
        affineTransform1 = new AffineTransform(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.9786448585994891
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1096;
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel1.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      try { 
        visualListModel1.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1096
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2977630792386363
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      jTable_PrintModeArray0[3] = jTable_PrintModeArray0[1];
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[2];
      visualListModel0.moveUpIndexes(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) visualListModel0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.negate();
      Predicate<Object> predicate3 = predicate0.or(predicate1);
      predicate3.and(predicate2);
      predicate1.or(predicate0);
      Predicate<Object> predicate4 = predicate0.and(predicate3);
      hashSet0.removeIf(predicate4);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedHashSet0);
      System.setCurrentTimeMillis(0L);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.983773063727694
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      jTable_PrintModeArray0[2] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode5;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.6910688711446102
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 68;
      intArray0[1] = 5;
      intArray0[2] = 68;
      visualListModel0.elementsChanged();
      intArray0[3] = 1;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel1.moveUpIndex(1);
      visualListModel0.getSize();
      visualListModel1.prependAllElements(vector0);
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements((Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.768088661873535
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.moveUpIndex(9999);
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel1.addAllElements(9999, (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      vector1.add(visualPageListItemArray0[0]);
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      vector1.clear();
      visualListModel1.updateElementAt(9999, visualPageListItemArray0[3]);
      visualListModel0.moveUpIndex(0);
      visualListModel0.getSize();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.prependAllElements(vector1);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.elementChanged(visualPageListItemArray0[2]);
      assertEquals(0, visualListModel2.getSize());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8344920661816384
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      int[] intArray0 = new int[2];
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      visualListModel0.moveDownIndexes(intArray1);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.addElementAt((VisualPageListItem) null, (-1442));
      linkedHashSet0.stream();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      int[] intArray2 = new int[1];
      intArray2[0] = 1;
      visualListModel0.moveUpIndexes(intArray2);
      visualListModel0.moveUpIndexes(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray3 = new int[5];
      intArray3[0] = (-1442);
      intArray3[1] = 1;
      intArray3[2] = 90;
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      int[] intArray4 = new int[2];
      intArray4[0] = 1;
      intArray4[1] = 1;
      visualListModel0.removeElements(intArray4, true);
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3389008843576193
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      linkedHashSet0.clear();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedHashSet0.add((VisualPageListItem) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveDownIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.6775183972806262
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 1096;
      visualListModel0.moveDownIndexes(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      VisualListModel visualListModel3 = new VisualListModel();
      visualListModel3.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel4 = new VisualListModel();
      VisualListModel visualListModel5 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel5.data;
      vector0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = new Vector<VisualPageListItem>();
      vector1.add((VisualPageListItem) null);
      visualListModel2.setData(vector0);
      visualListModel0.moveUpIndex(1);
      visualListModel1.getSize();
      visualListModel4.addElementAt((VisualPageListItem) null, 170);
      visualListModel5.addAllElements(496, (Collection<VisualPageListItem>) vector1);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel3.setData(visualPageListItemArray0);
      VisualListModel visualListModel6 = new VisualListModel();
      visualListModel6.moveUpIndex(1);
      visualListModel5.getSize();
      visualListModel5.setData(visualPageListItemArray0);
      int[] intArray1 = new int[0];
      visualListModel6.moveDownIndexes(intArray1);
      visualListModel0.clearData();
      assertNotSame(visualListModel0, visualListModel3);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7875783603338458
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      vector1.add((VisualPageListItem) null);
      visualListModel1.setData(vector1);
      visualListModel0.moveUpIndex(9999);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel1.addAllElements(5000, (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.moveUpIndex(360);
      visualListModel1.getSize();
      visualListModel1.setData(visualPageListItemArray0);
      visualListModel1.prependAllElements(stack0);
      visualListModel0.removeElements(0, 4, true);
      int[] intArray0 = new int[1];
      intArray0[0] = 9999;
      try { 
        visualListModel1.removeElements(intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9999
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      Stream<Integer> stream0 = stack0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer1 = new Integer(408);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(stack0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(293.23007638525, (-41.4300082974168), (double) 408, (double) integer1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret1 = (DefaultCaret)AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) aWTEventMulticaster0);
      Stack<Object> stack1 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack1);
      parameterBlock0.add((byte)64);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Vector<Object> vector0 = parameterBlock0.getParameters();
      stack0.clone();
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector0);
      jComboBox1.addMouseMotionListener(defaultCaret1);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) stream0;
      objectArray0[1] = (Object) jComboBox0;
      objectArray0[2] = (Object) jComboBox0;
      objectArray0[3] = (Object) jComboBox0;
      JComboBox<Object> jComboBox2 = new JComboBox<Object>(objectArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      containerOrderFocusTraversalPolicy0.getLastComponent(jComboBox1);
      jComboBox2.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addListDataListener(jComboBox2);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.add((VisualPageListItem) null);
      stack0.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.moveUpIndex(9999);
      stack0.add((VisualPageListItem) null);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel1.addAllElements(9999, (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      vector1.add(visualPageListItemArray0[0]);
      visualPageListItemArray0[2] = null;
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener2 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener1);
      AWTEventMulticaster.remove(windowFocusListener2, windowFocusListener2);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      WindowFocusListener windowFocusListener3 = AWTEventMulticaster.add(windowFocusListener2, windowFocusListener2);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener3);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      VisualListModel visualListModel2 = new VisualListModel();
      Locale locale0 = Locale.CANADA;
      Vector<VisualPageListItem> vector2 = visualListModel1.data;
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.5763525794641384
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[5];
      intArray0[0] = 68;
      intArray0[1] = 5;
      intArray0[2] = 68;
      visualListModel0.elementsChanged();
      intArray0[3] = 1;
      intArray0[4] = 9999;
      visualListModel0.moveDownIndexes(intArray0);
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel1.data;
      vector0.add((VisualPageListItem) null);
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      visualListModel1.moveUpIndex(1);
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 68);
      // Undeclared exception!
      try { 
        visualListModel1.addAllElements(1, (Collection<VisualPageListItem>) vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.3429402510969424
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      jTable_PrintModeArray0[2] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode5;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.09666722582832
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      int[] intArray0 = new int[6];
      int int0 = (-202);
      intArray0[0] = (-202);
      intArray0[1] = (-956);
      int int1 = 0;
      intArray0[2] = 0;
      intArray0[3] = 15;
      int int2 = (-1220);
      intArray0[4] = (-1220);
      int int3 = (-1743);
      intArray0[5] = (-1743);
      visualListModel0.undeleteElements(intArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[2];
      visualListModel0.reverseElements(intArray1);
      visualListModel0.moveUpIndexes(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.4914302833355375
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode5;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.380959279845783
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      linkedHashSet0.clear();
      linkedHashSet0.iterator();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(+siiUY1J*a7nJ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?IA{");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U {6wlaSO");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.undeleteElements(intArray0);
      Boolean.valueOf(false);
      PriorityQueue<ChronoLocalDate> priorityQueue0 = new PriorityQueue<ChronoLocalDate>();
      PriorityQueue<ChronoLocalDate> priorityQueue1 = new PriorityQueue<ChronoLocalDate>(priorityQueue0);
      Locale locale0 = Locale.GERMANY;
      Chronology chronology0 = Chronology.ofLocale(locale0);
      ChronoLocalDate chronoLocalDate0 = chronology0.dateEpochDay(561L);
      priorityQueue1.add(chronoLocalDate0);
      linkedHashSet0.containsAll(priorityQueue1);
      visualListModel0.prependAllElements(linkedHashSet0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "t=LG(@N!o5");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.prependAllElements(linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      linkedHashSet0.add((VisualPageListItem) null);
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode3;
      visualListModel0.updateElementAt(9, (VisualPageListItem) null);
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[5] = jTable_PrintMode5;
      JTable.PrintMode jTable_PrintMode6 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode6;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[3];
      intArray1[1] = 1;
      visualListModel0.getSize();
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7039917864324616
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      hashMap0.clear();
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener1);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.add(hierarchyListener2, hierarchyListener2);
      HierarchyListener hierarchyListener4 = AWTEventMulticaster.add(hierarchyListener3, hierarchyListener3);
      HierarchyListener hierarchyListener5 = AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener4);
      Object object0 = new Object();
      AWTEventMulticaster.remove(hierarchyListener5, hierarchyListener5);
      AWTEventMulticaster.add(hierarchyListener2, hierarchyListener4);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy0.getLastComponent(jComboBox0);
      jComboBox0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      VisualListModel visualListModel1 = new VisualListModel();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      JComponent.getDefaultLocale();
      visualListModel0.addListDataListener(jComboBox1);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel1.setData(vector0);
      assertEquals(1, visualListModel1.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.3957094260849354
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      jTable_PrintModeArray0[3] = jTable_PrintModeArray0[1];
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[2];
      visualListModel0.moveUpIndexes(intArray0);
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(2, intArray1.length);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.653003720864452
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 1719;
      intArray0[1] = 172;
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray1);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.removeElements(360, (-4278), true);
      visualListModel0.moveDownIndexes(intArray1);
      visualListModel1.removeElements(intArray1, false);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel1.rotateClockwiseElements(intArray1);
      visualListModel0.undeleteElements(intArray1);
      assertEquals(1, intArray1.length);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Comparator<VisualPageListItem> comparator0 = (Comparator<VisualPageListItem>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>(comparator0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      Boolean boolean0 = new Boolean(true);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) linkedHashSet0;
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) comparator0;
      objectArray0[3] = (Object) stack0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Unknown periodicity type.";
      stringArray0[1] = "76Cmx*`vqSh6Cz^xSn";
      linkedHashSet0.toArray(stringArray0);
      objectArray0[4] = (Object) null;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      Object[] objectArray1 = new Object[9];
      objectArray1[0] = (Object) visualListModel1;
      objectArray1[1] = (Object) visualListModel0;
      objectArray1[2] = (Object) linkedHashSet1;
      objectArray1[3] = (Object) treeSet0;
      objectArray1[4] = (Object) linkedHashSet1;
      objectArray1[6] = (Object) treeSet0;
      objectArray1[7] = (Object) jComboBox0;
      objectArray1[8] = (Object) linkedHashSet0;
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray1);
      visualListModel0.addListDataListener(jComboBox1);
      visualListModel1.setData((Vector<VisualPageListItem>) stack0);
      // Undeclared exception!
      try { 
        visualListModel1.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[9];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateClockwiseElements(intArray0);
      int[] intArray1 = null;
      // Undeclared exception!
      try { 
        visualListModel1.rotateAnticlockwiseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.6082873972465448
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.getElements();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashMap0.put(sunHints_Key1, sunHints_Key1);
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      hashMap1.putAll(hashMap0);
      hashMap0.put(sunHints_Key0, integer0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Object object0 = new Object();
      hashMap0.put(sunHints_Key3, object0);
      HashMap<RenderingHints.Key, JTable.PrintMode> hashMap2 = new HashMap<RenderingHints.Key, JTable.PrintMode>();
      hashMap2.remove(object0);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key1, (Object) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.601407867759606
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int[] intArray0 = new int[2];
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray1 = new int[0];
      VisualListModel visualListModel1 = new VisualListModel();
      DefaultComboBoxModel<DefaultTableModel> defaultComboBoxModel0 = new DefaultComboBoxModel<DefaultTableModel>();
      defaultComboBoxModel0.getListDataListeners();
      defaultComboBoxModel0.removeAllElements();
      JComboBox<DefaultTableModel> jComboBox0 = new JComboBox<DefaultTableModel>(defaultComboBoxModel0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray1);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray1);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.removeElements((-1), (-1188), false);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel2.removeElements(intArray0, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-109);
      visualListModel0.removeElements(intArray1, false);
      visualListModel0.rotateAnticlockwiseElements(intArray1);
      visualListModel2.rotateClockwiseElements(intArray1);
      // Undeclared exception!
      try { 
        ICC_Profile.getInstance((-3010));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown color space
         //
         verifyException("java.awt.color.ICC_Profile", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>((Comparator<? super VisualPageListItem>) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      LinkedHashSet<VisualPageListItem> linkedHashSet1 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      LinkedHashSet<VisualPageListItem> linkedHashSet2 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet1.add((VisualPageListItem) null);
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      VisualListModel visualListModel0 = new VisualListModel();
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) visualListModel0;
      linkedHashSet0.clear();
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) linkedHashSet0;
      objectArray0[3] = (Object) null;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.moveDownIndex(1332);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.clearData();
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[2] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode3;
      visualListModel0.subList(1467, 4);
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.FIT_WIDTH;
      visualListModel0.moveDownIndex((-1));
      linkedHashSet0.add((VisualPageListItem) null);
      jTable_PrintModeArray0[4] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[5] = jTable_PrintMode5;
      JTable.PrintMode jTable_PrintMode6 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode6;
      linkedHashSet0.toArray(jTable_PrintModeArray0);
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[3];
      intArray1[1] = 1;
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(117);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.352464060620752
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      stack0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = 408;
      visualListModel0.undeleteElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel1.moveDownIndexes(intArray0);
      visualListModel0.removeElements(4, 1783, false);
      VisualListModel visualListModel2 = new VisualListModel();
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // toIndex = 409
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.765776354343656
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      Vector<VisualPageListItem> vector1 = visualListModel1.data;
      vector1.add((VisualPageListItem) null);
      vector1.add((VisualPageListItem) null);
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      visualListModel1.setData(vector2);
      visualListModel0.moveUpIndex(9999);
      visualListModel1.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 9999);
      visualListModel1.addAllElements(5000, (Collection<VisualPageListItem>) null);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[4];
      visualPageListItemArray0[0] = null;
      visualPageListItemArray0[1] = null;
      visualPageListItemArray0[2] = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      visualPageListItemArray0[3] = null;
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.moveUpIndex(1);
      visualListModel0.getSize();
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel1.prependAllElements(vector2);
      visualListModel1.removeElements(1, 1, false);
      int[] intArray0 = new int[3];
      intArray0[0] = 9999;
      intArray0[1] = 1;
      intArray0[2] = 1;
      // Undeclared exception!
      try { 
        visualListModel1.removeElements(intArray0, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(9999) > toIndex(2)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.231857190801683
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      visualListModel0.updateElementAt(1, (VisualPageListItem) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      linkedHashSet0.add((VisualPageListItem) null);
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[3];
      renderingHints_KeyArray0[0] = (RenderingHints.Key) sunHints_Key4;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key0;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key0;
      linkedHashSet0.toArray(renderingHints_KeyArray0);
      JTable.PrintMode.values();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.addAllElements(1, (Collection<VisualPageListItem>) linkedHashSet0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.6443457122064435
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      linkedHashSet0.add((VisualPageListItem) null);
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[3];
      renderingHints_KeyArray0[0] = (RenderingHints.Key) sunHints_Key5;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key0;
      linkedHashSet0.toArray(renderingHints_KeyArray0);
      JTable.PrintMode.values();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(1, intArray0.length);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getElements();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashMap0.put(sunHints_Key0, sunHints_Key0);
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      HashMap<RenderingHints.Key, Object> hashMap2 = new HashMap<RenderingHints.Key, Object>();
      // Undeclared exception!
      try { 
        hashMap2.putAll((Map<? extends RenderingHints.Key, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-667));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.0141266108053313
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      hashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(hashSet0);
      int[] intArray0 = new int[18];
      intArray0[0] = 0;
      intArray0[1] = 5204;
      intArray0[2] = 5204;
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.moveUpIndex(5204);
      visualListModel0.removeElementAt(0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(293.23007638525, 0.0, 293.23007638525, 71.1397327107641);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret1);
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      defaultCaret1.mouseEntered((MouseEvent) null);
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.remove(windowFocusListener0, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) defaultCaret1;
      objectArray0[1] = (Object) defaultCaret0;
      defaultCaret1.x = 0;
      objectArray0[3] = (Object) aWTEventMulticaster0;
      objectArray0[4] = (Object) aWTEventMulticaster1;
      objectArray0[5] = (Object) windowFocusListener0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy0.getLastComponent(jComboBox0);
      jComboBox0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      JComponent.getDefaultLocale();
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.setData(vector1);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) vector1);
      assertEquals("[]", vector1.toString());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(Integer.MAX_VALUE, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(2147483647) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.142901605801397
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[4];
      visualListModel0.moveUpIndexes(intArray0);
      intArray0[0] = (-4329);
      intArray0[1] = 1555;
      intArray0[2] = 9;
      visualListModel0.subList(9, 1555);
      intArray0[3] = (-1576);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[3];
      intArray1[0] = 1555;
      intArray1[1] = (-4329);
      intArray1[2] = (-1576);
      visualListModel0.reverseElements(intArray1);
      // Undeclared exception!
      try { 
        visualListModel0.subList(3790, (-4329), false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(3790) > toIndex(-4329)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      Stack<Object> stack0 = new Stack<Object>();
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster1);
      defaultCaret1.toString();
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster6, (WindowFocusListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster7, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster8, (WindowFocusListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster3);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((Format) mockSimpleDateFormat0);
      MouseEvent mouseEvent0 = new MouseEvent(jFormattedTextField0, 0, 314L, (-1541), 0, 1, 0, true, 0);
      aWTEventMulticaster9.mouseDragged(mouseEvent0);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-1), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      int int0 = 91;
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      visualListModel0.clearData();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      hashMap0.clear();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashMap0.put(sunHints_Key0, hashSet0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      RescaleOp rescaleOp0 = new RescaleOp(1950.0F, 1950.0F, renderingHints0);
      AffineTransform affineTransform0 = new AffineTransform(100.0F, 100.0F, 100.0F, (-997.4F), (-1616.093F), (-0.008584201F));
      double[] doubleArray0 = new double[0];
      AffineTransform affineTransform1 = null;
      try {
        affineTransform1 = new AffineTransform(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(293.23007638525, 0.0, 293.23007638525, 71.1397327107641);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove(mouseMotionListener0, (MouseMotionListener) defaultCaret1);
      MouseMotionListener mouseMotionListener1 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret1);
      Stack<Object> stack0 = new Stack<Object>();
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.remove(windowFocusListener0, (WindowFocusListener) null);
      WindowFocusListener windowFocusListener2 = AWTEventMulticaster.add(windowFocusListener1, windowFocusListener1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.addMouseMotionListener(mouseMotionListener1);
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) windowFocusListener0;
      objectArray0[1] = (Object) vector0;
      objectArray0[2] = (Object) windowFocusListener0;
      Object object0 = new Object();
      objectArray0[3] = object0;
      objectArray0[4] = (Object) vector0;
      objectArray0[5] = (Object) windowFocusListener2;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray0);
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy1 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy0.getLastComponent(jComboBox0);
      jComboBox0.setFocusTraversalPolicy(defaultFocusTraversalPolicy0);
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox2 = new JComboBox<Object>(objectArray0);
      JComponent.getDefaultLocale();
      visualListModel0.addListDataListener(jComboBox2);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.addAllElements(72, (Collection<VisualPageListItem>) vector1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(293.23007638525, 0.0, 293.23007638525, 71.1397327107641);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret1);
      Stack<Object> stack0 = new Stack<Object>();
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.remove(windowFocusListener0, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster1);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(stack0);
      jComboBox0.addMouseMotionListener(defaultCaret1);
      Object[] objectArray0 = new Object[6];
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy0.getLastComponent(jComboBox0);
      jComboBox0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox2 = new JComboBox<Object>(objectArray0);
      JComponent.getDefaultLocale();
      visualListModel0.addListDataListener(jComboBox2);
      ArrayDeque<VisualPageListItem> arrayDeque0 = new ArrayDeque<VisualPageListItem>();
      ArrayDeque<VisualPageListItem> arrayDeque1 = arrayDeque0.clone();
      visualListModel0.addAllElements((-1), (Collection<VisualPageListItem>) arrayDeque1);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7385727210046005
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      HashSet<VisualPageListItem> hashSet0 = new HashSet<VisualPageListItem>();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) null);
      AWTEventMulticaster.add((MouseMotionListener) null, (MouseMotionListener) null);
      Stack<Object> stack0 = new Stack<Object>();
      defaultCaret0.mouseEntered((MouseEvent) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      Object object0 = new Object();
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      containerOrderFocusTraversalPolicy0.getLastComponent(jComboBox0);
      VisualListModel visualListModel1 = new VisualListModel();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      JComponent.getDefaultLocale();
      visualListModel1.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      assertEquals(10, vector0.capacity());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(0.0, 0.0, 0.0, (double) 34);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret2 = new DefaultCaret();
      AWTEventMulticaster.add(mouseMotionListener0, (MouseMotionListener) defaultCaret1);
      Stack<Object> stack0 = new Stack<Object>();
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      WindowFocusListener windowFocusListener1 = AWTEventMulticaster.add(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster.remove(windowFocusListener1, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, (WindowFocusListener) null);
      WindowFocusListener windowFocusListener2 = AWTEventMulticaster.add((WindowFocusListener) null, windowFocusListener1);
      AWTEventMulticaster.remove((WindowFocusListener) null, windowFocusListener2);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add(windowFocusListener1, (WindowFocusListener) null);
      Vector<Object> vector1 = new Vector<Object>();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      vector0.remove((Object) integer0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = new Integer((-14));
      Integer.getInteger("", integer1);
      Stack<Object> stack0 = new Stack<Object>();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(stack0);
      Color color0 = new Color((int) integer2);
      LineBorder lineBorder0 = new LineBorder(color0);
      Integer.divideUnsigned(804, (int) integer2);
      jComboBox0.setBorder(lineBorder0);
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) integer1;
      objectArray0[1] = (Object) stack0;
      objectArray0[2] = (Object) integer2;
      objectArray0[3] = (Object) stack0;
      objectArray0[4] = (Object) vector0;
      objectArray0[5] = (Object) vector0;
      JComboBox<Object> jComboBox1 = new JComboBox<Object>();
      JComboBox<Object> jComboBox2 = new JComboBox<Object>(objectArray0);
      Object[] objectArray1 = new Object[1];
      objectArray1[0] = (Object) jComboBox0;
      JComboBox<Object> jComboBox3 = new JComboBox<Object>(objectArray1);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList((-14), (-14), false);
      assertNull(collection0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      Stack<Object> stack0 = new Stack<Object>();
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster1);
      defaultCaret1.toString();
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster6, (WindowFocusListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster7, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster8, (WindowFocusListener) aWTEventMulticaster8);
      defaultCaret1.add((Rectangle2D) defaultCaret0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster9, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster10, (WindowFocusListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster3);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((Format) mockSimpleDateFormat0);
      MouseEvent mouseEvent0 = new MouseEvent(jFormattedTextField0, 0, 314L, (-1541), 0, 1, 0, true, 0);
      aWTEventMulticaster11.mouseDragged(mouseEvent0);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster0, (HierarchyListener) aWTEventMulticaster4);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      List<VisualPageListItem> list0 = visualListModel0.getValidElements();
      assertNull(list0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.1297124335358584
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveDownIndexes(intArray0);
      LinkedHashSet<VisualPageListItem> linkedHashSet0 = new LinkedHashSet<VisualPageListItem>();
      JTable.PrintMode[] jTable_PrintModeArray0 = new JTable.PrintMode[7];
      JTable.PrintMode jTable_PrintMode0 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[0] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode1 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[1] = jTable_PrintMode1;
      jTable_PrintModeArray0[2] = jTable_PrintMode0;
      JTable.PrintMode jTable_PrintMode2 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[3] = jTable_PrintMode2;
      JTable.PrintMode jTable_PrintMode3 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[4] = jTable_PrintMode3;
      JTable.PrintMode jTable_PrintMode4 = JTable.PrintMode.NORMAL;
      RenderingHints.Key[] renderingHints_KeyArray0 = new RenderingHints.Key[9];
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      renderingHints_KeyArray0[0] = (RenderingHints.Key) sunHints_Key0;
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[1] = (RenderingHints.Key) sunHints_Key1;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[2] = (RenderingHints.Key) sunHints_Key2;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      renderingHints_KeyArray0[3] = (RenderingHints.Key) sunHints_Key3;
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      renderingHints_KeyArray0[4] = (RenderingHints.Key) sunHints_Key4;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      renderingHints_KeyArray0[5] = (RenderingHints.Key) sunHints_Key5;
      SunHints.Key sunHints_Key6 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      renderingHints_KeyArray0[6] = (RenderingHints.Key) sunHints_Key6;
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      renderingHints_KeyArray0[7] = (RenderingHints.Key) sunHints_LCDContrastKey0;
      SunHints.Key sunHints_Key7 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      renderingHints_KeyArray0[8] = (RenderingHints.Key) sunHints_Key7;
      linkedHashSet0.toArray(renderingHints_KeyArray0);
      jTable_PrintModeArray0[5] = jTable_PrintMode4;
      JTable.PrintMode jTable_PrintMode5 = JTable.PrintMode.NORMAL;
      jTable_PrintModeArray0[6] = jTable_PrintMode5;
      JTable.PrintMode.values();
      linkedHashSet0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedHashSet0);
      int[] intArray1 = new int[3];
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.sum((-1), 1561);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer1 = new Integer(1561);
      vector0.add(integer1);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(vector0);
      Stack<Object> stack0 = new Stack<Object>();
      ParameterBlock parameterBlock0 = new ParameterBlock(stack0);
      Vector<Object> vector1 = parameterBlock0.getParameters();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(vector1);
      JComboBox<Object> jComboBox2 = new JComboBox<Object>();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) stack0;
      objectArray0[1] = (Object) integer1;
      objectArray0[2] = (Object) jComboBox2;
      JComboBox<Object> jComboBox3 = new JComboBox<Object>(objectArray0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addListDataListener(jComboBox2);
      Vector<VisualPageListItem> vector2 = visualListModel0.data;
      visualListModel1.setData(vector2);
      visualListModel0.addAllElements(1850, (Collection<VisualPageListItem>) vector2);
      assertNotSame(visualListModel0, visualListModel1);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster0);
      defaultCaret1.toString();
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster6, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster7, (WindowFocusListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster2);
      Container container0 = new Container();
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseListener) defaultCaret1, (MouseListener) aWTEventMulticaster8);
      MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent(container0, 0, 2687L, 0, 0, 359, (-1), true, 0, 0, 0);
      aWTEventMulticaster8.mouseExited(mouseWheelEvent0);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster6, (WindowFocusListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster9, (ContainerListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster10, (WindowStateListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster4, (ContainerListener) aWTEventMulticaster11);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster7, (HierarchyListener) aWTEventMulticaster6);
      Boolean boolean0 = Boolean.TRUE;
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 3097, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveUpIndexes(intArray0);
      Point point0 = new Point();
      DefaultEditorKit.BeepAction defaultEditorKit_BeepAction0 = new DefaultEditorKit.BeepAction();
      visualListModel0.moveDownIndexes(intArray0);
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem(defaultEditorKit_BeepAction0);
      MenuElement[] menuElementArray0 = new MenuElement[1];
      menuElementArray0[0] = (MenuElement) jCheckBoxMenuItem0;
      MenuSelectionManager menuSelectionManager0 = new MenuSelectionManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(jCheckBoxMenuItem0, 125, (-1L), (-490), 1132, 1132, 117, (-490), 3218, true, menuElementArray0, menuSelectionManager0);
      Point point1 = menuDragMouseEvent0.getPoint();
      point0.setLocation(point1);
      DataBufferFloat dataBufferFloat0 = new DataBufferFloat(1132, 1132);
      assertEquals(0, dataBufferFloat0.getOffset());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      int int0 = Integer.MIN_VALUE;
      stack0.remove((Object) integer0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      int int1 = (-1);
      Integer integer2 = new Integer((-1));
      Integer.getInteger("", integer1);
      Stack<Object> stack1 = new Stack<Object>();
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      visualListModel0.appendAllElements(arrayList0);
      AffineTransform affineTransform0 = new AffineTransform();
      AffineTransform affineTransform1 = new AffineTransform(affineTransform0);
      affineTransform0.setToShear((-1), Integer.MIN_VALUE);
      affineTransform1.isIdentity();
      double[] doubleArray0 = null;
      // Undeclared exception!
      try { 
        affineTransform1.getMatrix((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList(0, 0);
      int[] intArray0 = new int[0];
      int int1 = 64;
      visualListModel0.moveUpIndex(64);
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      int[] intArray0 = new int[6];
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.add((Integer) null);
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)54;
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      vector0.replaceAll(unaryOperator0);
      Integer.remainderUnsigned(65535, 408);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("U8]Ysm3H8hLiO");
      Integer integer4 = new Integer(34);
      Integer.compare((byte)8, 709);
      Integer integer5 = new Integer((byte)8);
      Integer.max((-1), 408);
      Integer.getInteger("", integer3);
      int int0 = new Byte((byte)54);
      vector0.add(integer0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(vector0);
      intArray0[4] = 0;
      intArray0[5] = 34;
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, false);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.subList((-826), 1391);
      int[] intArray0 = new int[0];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)7;
      byte byte0 = (byte) (-67);
      byteArray0[1] = (byte) (-67);
      byteArray0[2] = (byte)51;
      byte byte1 = (byte) (-76);
      byteArray0[3] = (byte) (-76);
      byteArray0[4] = (byte)85;
      IndexColorModel indexColorModel0 = null;
      try {
        indexColorModel0 = new IndexColorModel(93, 0, byteArray0, byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Number of bits must be between 1 and 16.
         //
         verifyException("java.awt.image.IndexColorModel", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Integer.toUnsignedLong((-661));
      Integer.toUnsignedString((-1));
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      stack0.add(integer0);
      Integer integer1 = FPXDescriptor.MAX_RESOLUTION;
      Integer integer2 = JLayeredPane.PALETTE_LAYER;
      Integer.getInteger("<n^wr2lEYAf GZSz=", integer2);
      Stack<Integer> stack1 = new Stack<Integer>();
      stack1.add((Integer) null);
      visualListModel0.removeElements(90, 3174, false);
      int[] intArray0 = new int[3];
      intArray0[0] = (-661);
      intArray0[1] = (-1);
      intArray0[2] = 3174;
      visualListModel0.removeElements(intArray0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.stream();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      DefaultCaret defaultCaret0 = new DefaultCaret();
      defaultCaret0.setRect(293.23007638525, 0.0, 293.23007638525, 71.1397327107641);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret1);
      Stack<Object> stack0 = new Stack<Object>();
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster1, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster5, (HierarchyListener) aWTEventMulticaster0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) defaultCaret1;
      objectArray0[1] = (Object) defaultCaret0;
      objectArray0[2] = (Object) integer0;
      objectArray0[3] = (Object) aWTEventMulticaster0;
      objectArray0[4] = (Object) aWTEventMulticaster1;
      objectArray0[5] = (Object) aWTEventMulticaster0;
      JComboBox<Object> jComboBox0 = new JComboBox<Object>(objectArray0);
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      defaultFocusTraversalPolicy0.getLastComponent(jComboBox0);
      jComboBox0.setFocusTraversalPolicy(containerOrderFocusTraversalPolicy0);
      VisualListModel visualListModel0 = new VisualListModel();
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray0);
      JComponent.getDefaultLocale();
      visualListModel0.addListDataListener(jComboBox0);
      Vector<VisualPageListItem> vector1 = visualListModel0.data;
      visualListModel0.removeElements(109, 0, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      visualListModel0.getListDataListeners();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte) (-103);
      byteArray0[2] = (byte)48;
      byteArray0[3] = (byte) (-25);
      byteArray0[4] = (byte)16;
      byteArray0[5] = (byte)71;
      byteArray0[6] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Object object0 = visualListModel0.getElementAt(90);
      assertNull(object0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      int[] intArray0 = new int[6];
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)54;
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer integer2 = JLayeredPane.DEFAULT_LAYER;
      Function<Object, Integer> function0 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      vector0.replaceAll(unaryOperator0);
      Integer integer3 = JLayeredPane.MODAL_LAYER;
      Integer.getInteger("U8]Ysm3H8hLiO");
      Integer integer4 = new Integer(34);
      Integer integer5 = new Integer((byte)8);
      Integer.max((-1), 408);
      Integer.getInteger("", integer3);
      Integer.sum(34, 408);
      vector0.add(integer0);
      JComboBox<Integer> jComboBox0 = new JComboBox<Integer>(vector0);
      intArray0[4] = 0;
      intArray0[5] = 34;
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(1661, 1661, false);
      assertNull(collection0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DefaultCaret defaultCaret0 = new DefaultCaret();
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseMotionListener) defaultCaret1, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      Stack<Object> stack0 = new Stack<Object>();
      WindowFocusListener windowFocusListener0 = mock(WindowFocusListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowFocusListener0, windowFocusListener0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster0, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster2, (WindowFocusListener) aWTEventMulticaster0);
      defaultCaret1.toString();
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster5, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster6, (WindowFocusListener) aWTEventMulticaster6);
      defaultCaret1.add((Rectangle2D) defaultCaret0);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster7, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster8, (WindowFocusListener) aWTEventMulticaster7);
      Class<StyledEditorKit.ItalicAction> class0 = StyledEditorKit.ItalicAction.class;
      AWTEventMulticaster.getListeners((EventListener) null, class0);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster2, (HierarchyListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster4, (HierarchyListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster1);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(0);
      vector0.add(integer0);
      VisualListModel visualListModel0 = new VisualListModel();
      Collection<VisualPageListItem> collection0 = visualListModel0.subList(0, 0, true);
      assertNotNull(collection0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 90;
      intArray0[1] = 90;
      VisualListModel visualListModel0 = new VisualListModel();
      HashMap<RenderingHints.Key, Object> hashMap0 = new HashMap<RenderingHints.Key, Object>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.put(sunHints_Key0, visualListModel0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Object object0 = new Object();
      visualListModel0.getElementAt(0);
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      HashMap<RenderingHints.Key, Object> hashMap1 = new HashMap<RenderingHints.Key, Object>();
      hashMap1.put(sunHints_Key0, styledEditorKit_ItalicAction0);
      AffineTransform affineTransform0 = new AffineTransform(0.0, 1000.0, (-865.422037), 1950.0F, 90, 0.0);
      AffineTransform affineTransform1 = new AffineTransform((-628.45), 1950.0F, 4914.2729000047, 0.0, 0, 0);
      AffineTransform affineTransform2 = AffineTransform.getRotateInstance(2210.9398569019, (double) 0, 0.0, (-865.422037));
      affineTransform1.preConcatenate(affineTransform2);
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = (-865.422037);
      doubleArray0[1] = (-628.45);
      // Undeclared exception!
      try { 
        affineTransform2.getMatrix(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }
}
