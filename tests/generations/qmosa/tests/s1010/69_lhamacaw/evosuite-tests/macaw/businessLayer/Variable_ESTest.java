/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 16 08:44:33 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.function.Consumer;
import java.util.function.UnaryOperator;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.278654570851994
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setCleaned(false);
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.setCleaned(true);
      rawVariable0.setCodeBookNumber("k");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getQuestionNumber();
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList1);
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIdentifier((-1438286218));
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, rawVariable1);
      assertEquals((-1438286218), derivedVariable1.getIdentifier());
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.1302892469269343
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.setDescription((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("2");
      User user0 = new User("\"0J@nb,x8#B3?Yd", "32Jj]5/t6Aa");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.setCleaned(false);
      rawVariable0.setCodeBookNumber("user.city.label");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getQuestionNumber();
      RawVariable rawVariable2 = new RawVariable();
      Variable.validateFields(rawVariable1);
      User user1 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable2.getSourceVariables();
      derivedVariable1.removeSourceVariables(arrayList0);
      Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument2.getDisplayName();
      derivedVariable0.setIdentifier(122);
      derivedVariable2.containsSupportingDocument(supportingDocument2);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("122", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.9512667872451708
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable2.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setIdentifier(1852);
      derivedVariable1.containsSupportingDocument(supportingDocument3);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User((String) null, (String) null);
      user0.setAddressLine1("variable.cleaningStatus.label");
      User user1 = new User("variable.cleaningStatus.label", "variable.cleaningStatus.label");
      User user2 = new User("M", "variable.cleaningStatus.label");
      User.detectFieldChanges(user0, user1, user0);
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.5820183568770023
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.setValue("s{\"QG");
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setIdentifier((-1467510135));
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      
      ontologyTerm2.setNameSpace("rG%U&");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList3 = rawVariable1.getSupportingDocuments();
      arrayList3.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      derivedVariable0.removeSupportingDocuments(arrayList4);
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.ensureCapacity(869);
      derivedVariable1.setCleaningStatus("KL92[qc7LY&FfG");
      user0.setLastName(":i[");
      user0.setUserID(":i[");
      derivedVariable1.setSourceVariables(arrayList1);
      User user1 = new User();
      user1.setCity(":i[");
      user1.setLastName("1<h");
      user1.setCity("1<h");
      user1.setCity("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      User user2 = new User("user.firstName.sav?Cha:ges", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      user2.setAddressLine1("&Lg");
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "user.firstName.sav?Cha:ges");
      User user4 = new User(") e@ez(wae?J>-x", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      User.detectFieldChanges(user2, user1, user2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getName();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("&Lg", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.7286875121524328
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnEnd("FPwvj~kkw>897");
      rawVariable0.notes = "m8t >hG6Qzi;NzS0";
      rawVariable0.setCleaned(true);
      rawVariable0.setValueLabels((ArrayList<ValueLabel>) null);
      Variable.validateFields(rawVariable0);
      rawVariable0.setYear("variable.year.label");
      rawVariable0.getIdentifier();
      rawVariable0.isCleaned();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.954982420855201
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart((String) null);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable1);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertEquals("Unknown", derivedVariable0.getCategory());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      String string0 = rawVariable0.getColumnStart();
      assertNull(string0);
      
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm1.setTerm("UNABLE_TO_COMMIT_CHANGES");
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertFalse(arrayList1.contains(ontologyTerm2));
      
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList2);
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6241026221599717
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.setColumnEnd("pdTUY$]7(");
      arrayList0.add((Variable) derivedVariable0);
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.getCleaningStatus();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList1.add(ontologyTerm0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      ontologyTerm2.setDescription("D'e#9*zqi!3");
      arrayList0.add((OntologyTerm) null);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User(">OyH{h:AC", ">OyH{h:AC");
      User user1 = new User();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_RAW_VARIABLE");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setNameSpace("UNABLE_TO_GET_RAW_VARIABLE");
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm(ontologyTerm2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.7534149746734564
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("n;zo2X%sQ8P7L`");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("n;zo2X%sQ8P7L`");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("y4p}~~.1M");
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setIdentifier(2937);
      User user0 = new User("Bb+Cy\"Ik $v?8I*O2", "n;zo2X%sQ8P7L`");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1109));
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable0.addSupportingDocuments(arrayList0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = (DerivedVariable)derivedVariable1.clone();
      derivedVariable2.getFilePath();
      derivedVariable2.setCodeBookNumber("");
      derivedVariable1.getName();
      derivedVariable3.getYear();
      assertFalse(derivedVariable3.isNewRecord());
      assertEquals("Unknown", derivedVariable3.getCategory());
      assertEquals("Unknown", derivedVariable3.getAvailability());
      assertEquals("Unknown", derivedVariable3.getCleaningStatus());
      assertEquals(0, derivedVariable3.getIdentifier());
      
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isCoded());
      assertEquals("", derivedVariable0.getYear());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.6618159803974826
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      User user0 = new User("ariable.leaningStatu.label", "ariable.leaningStatu.label");
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      ontologyTerm3.setNameSpace((String) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setNameSpace("6aj)");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm1.setTerm(" -");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.getAlternativeVariable();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.8433231525109064
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      rawVariable1.setIdentifier(1);
      User user0 = new User("4-4A]3J{?%}<$", "variable.alias.label");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      rawVariable2.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      System.setCurrentTimeMillis(0L);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertNull(variable0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.1523104182777795
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ontologyTerm0.setNameSpace("iCLK8`6De0:<DFV?");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      ontologyTerm1.setIdentifier((-2073952132));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setIdentifier((-1));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      ontologyTerm7.setTerm("iCLK8`6De0:<DFV?");
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1140059550872974
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      ontologyTerm0.setIdentifier(3552);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm3.setTerm(".O)=P.n0c");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.8028445680265075
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.ensureCapacity((-741));
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.setName("&Lg");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable0);
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("-LHA");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      rawVariable0.setLabel("&Lg");
      User user0 = new User("UNABLE_TO_CHECK_DOCUMENT_DUPLICATES", "&Lg");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      supportingDocument0.setIsNewRecord(true);
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      Variable.validateFields(derivedVariable0);
      derivedVariable1.clone();
      derivedVariable0.getAlternativeVariable();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      rawVariable0.getLabel();
      assertEquals("-LHA", rawVariable0.getQuestionNumber());
      
      DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable1);
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.8901268971014353
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Comparator<SupportingDocument> comparator0 = (Comparator<SupportingDocument>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      supportingDocument0.setIdentifier(1334);
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("KVQ1ZQy~,4Uk=Kwd0s");
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      rawVariable1.setCodeBookNumber("KVQ1ZQy~,4Uk=Kwd0s");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable2.setCodeBookNumber(":mIu]KEC:R-Ap=");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable1.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable2.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName("KVQ1ZQy~,4Uk=Kwd0s");
      rawVariable2.createVariableSummary();
      rawVariable2.getDisplayName();
      assertEquals("KVQ1ZQy~,4Uk=Kwd0s", rawVariable2.getDisplayName());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6454371383635378
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("");
      supportingDocument1.clone();
      supportingDocument1.clone();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      rawVariable0.getColumnEnd();
      assertEquals("SxBP~[p_4{I", rawVariable0.getColumnEnd());
      
      boolean boolean0 = derivedVariable1.hasSameDisplayName(derivedVariable0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.843174908491223
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      derivedVariable0.setAvailability("");
      User user0 = new User("4-4A]3J{?%}<$", "variable.alias.label");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      rawVariable2.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.clone();
      rawVariable0.getDisplayItemIdentifier();
      rawVariable2.cloneAttributes(rawVariable0);
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable1.getForm();
      RawVariable rawVariable3 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.3628433742803376
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.setColumnEnd("variable.availability.label");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel6.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType2 = ValueLabel.EditingOperationType.EDIT;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType2);
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabel7.hasSameDisplayName(valueLabel6);
      ValueLabel valueLabel8 = new ValueLabel();
      ValueLabel valueLabel9 = new ValueLabel();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setNewRecord(true);
      ontologyTerm1.setTerm("{");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.createVariableSummary();
      assertEquals("variable.availability.label", rawVariable0.getColumnEnd());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.727129360708031
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.validateFields(valueLabel1);
      valueLabel0.setMissingValue(false);
      derivedVariable1.removeValueLabel(valueLabel0);
      derivedVariable1.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      valueLabel0.setMissingValue(false);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIdentifier(1533);
      rawVariable0.setName("general.fieldValue.unknown");
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSourceVariables(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable3.addSourceVariables(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.744373561607235
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm1.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      rawVariable0.setLabel("-LHA");
      derivedVariable1.setSourceVariables((ArrayList<Variable>) null);
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, rawVariable0, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument3);
      assertEquals("&Lg", derivedVariable0.getName());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.7743860779798863
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("&Lg");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.createVariableSummary();
      rawVariable1.setLabel("2");
      User user0 = new User("2", "\"0J@nb,x8#B3?nd");
      user0.setUserID("&Lg");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setIsNewRecord(false);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSupportingDocuments();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.7467447448420033
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.ensureCapacity(869);
      user0.setLastName(":i[");
      user0.setUserID(":i[");
      derivedVariable1.setSourceVariables(arrayList1);
      User user1 = new User();
      user1.setCity(":i[");
      user1.setLastName("1<h");
      user1.setCity("1<h");
      user1.setCity("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      User user2 = new User("user.firstName.sav?Cha:ges", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      user2.setAddressLine1("&Lg");
      derivedVariable1.setAvailability("user.email.label");
      User user3 = new User("user.email.label", "Q");
      user3.setAffiliation("UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      User user4 = new User("UNABLE_TO_GET_AVAILABILITY_STATE_NAME", "");
      User.detectFieldChanges(user0, user3, user0);
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable1.getName();
      System.setCurrentTimeMillis(869);
      derivedVariable0.getAlias();
      assertEquals("&Lg", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      arrayList1.ensureCapacity(869);
      user0.setLastName(":i[");
      user0.setUserID(":i[");
      derivedVariable1.setSourceVariables(arrayList1);
      User user1 = new User();
      user1.setCity(":i[");
      user1.setLastName("1<h");
      user1.setCity("1<h");
      user0.setCity("user.firstName.saveChanges");
      User user2 = new User(") e@ez(wae?J>-x", "UNABLE_TO_DELETE_RAW_VARIABLE");
      user2.setAddressLine1("EDIT");
      User user3 = new User("Q", ") e@ez(wae?J>-x");
      user1.setAffiliation("Q");
      User user4 = new User("user.email.label", "PVS7HEvnP*#[RCHP|t");
      User.detectFieldChanges(user3, user2, user1);
      DerivedVariable.detectFieldChanges(user4, derivedVariable1, derivedVariable0);
      derivedVariable1.getName();
      System.setCurrentTimeMillis(869);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.805754096314494
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      rawVariable0.isNewRecord();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) derivedVariable0);
      User user0 = new User("general.fieldValue.blank", "6D>");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.removeSourceVariables(arrayList0);
      derivedVariable0.setNotes("SxBP~[p_4{I");
      derivedVariable0.getNotes();
      derivedVariable0.getValueLabels();
      derivedVariable0.getAlias();
      assertEquals("SxBP~[p_4{I", derivedVariable0.getNotes());
      
      rawVariable0.getCodeBookNumber();
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.3000759753606212
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User("M", "M");
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm("UNABLE_TO_GET_ORIGINAL_VARIABLE");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm3.setNameSpace("&mfy4~");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setNameSpace("2");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm7);
      ontologyTerm0.setTerm(">OyH{h:AC");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=3.201072749436288
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.questionNumber = "variable.cleaningStatus.label";
      rawVariable0.setNotes("variable.cleaningStatus.label");
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.getCleaningStatus();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getQuestionNumber();
      derivedVariable0.getName();
      User user0 = new User("UNABLE_TO_CHECK_DOCUMENT_DUPLICATES", "");
      user0.setFirstName("variable.cleaningStatus.label");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable1.getOntologyTerms();
      rawVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.getQuestionNumber();
      rawVariable0.getForm();
      derivedVariable0.getCategory();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      derivedVariable0.removeSourceVariables(arrayList0);
      Variable.validateFields(derivedVariable0);
      derivedVariable1.addSourceVariable(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      assertEquals("variable.cleaningStatus.label", derivedVariable0.getQuestionNumber());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.5709195237181253
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.listIterator();
      Consumer<OntologyTerm> consumer0 = (Consumer<OntologyTerm>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList0.forEach(consumer0);
      arrayList0.add((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      arrayList0.containsAll(linkedList0);
      ontologyTerm0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.validateFields(derivedVariable1);
      arrayList0.add(ontologyTerm0);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.574464215715726
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.setIdentifier(1);
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getColumnEnd();
      derivedVariable0.getIdentifier();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.6257113527782097
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      rawVariable0.form = "general.fieldValue.blank";
      rawVariable0.setFilePath("");
      rawVariable0.setForm("");
      rawVariable0.setIsNewRecord(false);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setLabel("UNABLE_TO_GET_ONTOLOGY_TERM_IDENTIFIER");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.addSourceVariables(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1982292595));
      assertEquals("-1982292595", rawVariable1.getDisplayItemIdentifier());
      
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable1.addSourceVariable(rawVariable0);
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.3592809961036476
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addValueLabel((ValueLabel) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setColumnStart("UNABLE_TO_DELETE_RAW_VARIABLE");
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes(derivedVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.9187474192610656
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ontologyTerm0.setNameSpace(">G.IU!5k-xCKJ");
      ValueLabel valueLabel1 = new ValueLabel();
      ontologyTerm0.setDescription((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel3.hasSameDisplayName(valueLabel0);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType2 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel3.setEditingOperationType(valueLabel_EditingOperationType2);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, derivedVariable1, rawVariable0);
      assertFalse(derivedVariable1.isNewRecord());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertTrue(arrayList2.isEmpty());
      assertFalse(derivedVariable1.isCoded());
      assertEquals(0, derivedVariable1.getIdentifier());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.1800207734413646
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList1);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(rawVariable1);
      User user0 = new User((String) null, (String) null);
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNameSpace("Ta0");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      User user2 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.0204142811723194
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User(">OyH{h:AC", ">OyH{h:AC");
      User user1 = new User();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm1.setNameSpace((String) null);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setNameSpace("2m]Djsl!");
      ontologyTerm4.setNameSpace((String) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      ontologyTerm5.setTerm("2m]Djsl!");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.ensureCapacity((-741));
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.8258375263575486
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      user0.setEmail("9");
      User.detectFieldChanges(user0, user0, user0);
      rawVariable0.setAlias((String) null);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setAlias("Unknown");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      user0.setStatus("9");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      derivedVariable0.getSourceVariables();
      System.setCurrentTimeMillis((-1862L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("LQsaLD[?lL8=N4");
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      System.setCurrentTimeMillis((-161L));
      rawVariable0.getAlias();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.isNewRecord();
      derivedVariable0.addSourceVariable(rawVariable0);
      rawVariable0.getYear();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getYear();
      derivedVariable0.getColumnStart();
      assertEquals("Unknown", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setYear("s{g9p");
      UnaryOperator<SupportingDocument> unaryOperator0 = UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      int int0 = derivedVariable0.getIdentifier();
      assertEquals("s{g9p", derivedVariable0.getYear());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.setLabel(">]P}KhrWol+");
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.createVariableSummary();
      assertEquals(">]P}KhrWol+", derivedVariable0.getLabel());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.6846842034128904
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.ensureCapacity(869);
      user0.setLastName(":i[");
      user0.setUserID(":i[");
      derivedVariable0.setSourceVariables(arrayList1);
      User user1 = new User();
      user1.setCity(":i[");
      user1.setLastName("1<h");
      user1.setCity("1<h");
      user1.setCity("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      User user2 = new User("user.firstName.sav?Cha:ges", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      user2.setAddressLine1("&Lg");
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "user.firstName.sav?Cha:ges");
      User user4 = new User(") e@ez(wae?J>-x", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      User.detectFieldChanges(user2, user1, user2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getName();
      derivedVariable0.createVariableSummary();
      assertEquals("&Lg", derivedVariable0.getName());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.418359126143601
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm4.setTerm((String) null);
      rawVariable1.removeOntologyTerm(ontologyTerm2);
      rawVariable1.getOntologyTerms();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.2813156724577044
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      User user0 = new User("", "]y'!!yMOF6p+w");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setLabel("RlZ])nNL4e|Ov");
      derivedVariable0.getNotes();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.getDisplayName();
      valueLabel0.setMissingValue(false);
      derivedVariable0.addValueLabel(valueLabel0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCategory("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      rawVariable1.setIdentifier(1533);
      rawVariable0.setName("UNABLE_TO_CREATE_VALUE_LABELS");
      Variable.validateFields(rawVariable1);
      rawVariable0.getFilePath();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getColumnStart();
      assertEquals("UNABLE_TO_CREATE_VALUE_LABELS", rawVariable0.getName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.8856101118277016
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("");
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = (SupportingDocument)supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User((String) null, "_f#:;nQOaS");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("SxBP~[p_4{I", rawVariable0.getColumnEnd());
      
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.7462151539509665
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.columnStart = "Lp-)>~C0OcU";
      arrayList0.ensureCapacity(199);
      User user0 = new User("Lp-)>~C0OcU", ":i[");
      user0.setLastName("variable.columnStart.label");
      user0.setUserID("#FD=");
      derivedVariable0.setSourceVariables(arrayList0);
      derivedVariable0.getDisplayItemIdentifier();
      User user1 = new User("<", "macaw.system.ChangeEventType");
      User user2 = new User("7H(V0yu:v,_gR6Ne`8*", "MY Tsjof");
      User.detectFieldChanges(user2, user2, user2);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      assertEquals("Lp-)>~C0OcU", derivedVariable0.getColumnStart());
      assertEquals(1, arrayList1.size());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.756697550418927
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAlternativeVariable(derivedVariable0);
      User user1 = new User("user.lastName.saveChanges", ">OyH{h:AC");
      User user2 = new User();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable3, derivedVariable2);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("&Lg");
      User user3 = new User("general.error.blankField", "&Lg");
      user3.setUserID(":i[");
      Variable.detectFieldChanges(user3, derivedVariable1, derivedVariable2);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.setIsNewRecord(false);
      derivedVariable1.containsSupportingDocument(supportingDocument3);
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(derivedVariable2);
      // Undeclared exception!
      try { 
        derivedVariable0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.8250649524544955
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("rG%U&");
      ontologyTerm0.setOntologyName("n;zo2X%sQ8P7L`");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable1.setFilePath("$O1)%OA");
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable1, derivedVariable1);
      derivedVariable1.setCoded(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setFilePath("rG%U&");
      derivedVariable0.getFilePath();
      derivedVariable0.setIsNewRecord(false);
      assertEquals("rG%U&", derivedVariable0.getFilePath());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.add(supportingDocument0);
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setDescription("KVQ1ZQy~,4Uk=Kwd0s");
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("KVQ1ZQy~,4Uk=Kwd0s");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable1.setCodeBookNumber("UNABLE_TO_CHECK_USER_DUPLICATE");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.getSupportingDocuments();
      rawVariable0.getFilePath();
      rawVariable0.getNotes();
      assertEquals("KVQ1ZQy~,4Uk=Kwd0s", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.717865020700214
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.removeOntologyTerm(ontologyTerm1);
      rawVariable2.setNotes("pRv");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      rawVariable2.getFilePath();
      System.setCurrentTimeMillis((-1992L));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.4061015168765665
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      ontologyTerm2.setNewRecord(false);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User(">OyH{h:AC", ">OyH{h:AC");
      User user1 = new User();
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setTerm(">OyH{h:AC");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm(ontologyTerm1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.831268540942669
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.codeBookNumber = "[jHU'Xg^";
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable2 = new RawVariable();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      String string0 = rawVariable1.getCleaningDescription();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", string0);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.7926143025735883
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setForm("n;zo2X%sQ8P7L`");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("n;zo2X%sQ8P7L`");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFilePath("y4p}V~.1M");
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable1.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setIdentifier(2937);
      User user0 = new User("Bb+Cy\"Ik $v?8I*O2", "n;zo2X%sQ8P7L`");
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier((-1109));
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      arrayList1.add(supportingDocument2);
      derivedVariable0.addSupportingDocuments(arrayList0);
      assertEquals("n;zo2X%sQ8P7L`", derivedVariable0.getForm());
      
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(derivedVariable2);
      derivedVariable1.clone();
      derivedVariable2.getFilePath();
      derivedVariable2.setCodeBookNumber("");
      derivedVariable1.getName();
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.963826488286453
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setOntologyName("n;zo2X%sQ8P7L`");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAvailability("rG%U&");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      derivedVariable0.setCoded(true);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm1);
      derivedVariable0.setFilePath((String) null);
      derivedVariable0.getFilePath();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setIsNewRecord(false);
      try { 
        DerivedVariable.validateFields(derivedVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.6845198108434345
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.clone();
      supportingDocument1.clone();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      User user0 = new User("nJbR[q=%azzm", "32Jj]5/t6Aa");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User(">OyH{h:AC", ">OyH{h:AC");
      User user1 = new User();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setTerm(">OyH{h:AC");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm2.setNameSpace("variable.alias.label");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm5.setNameSpace(">OyH{h:AC");
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm6);
      ontologyTerm7.setTerm("UNABLE_TO_UPDATE_DERIVED_VARIABLE");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm10);
      rawVariable1.getCodeBookNumber();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=3.747647826160577
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm1.setTerm("Unknown");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getOntologyTerms();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertFalse(rawVariable2.isCoded());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertFalse(rawVariable2.isCleaned());
      
      boolean boolean0 = rawVariable0.isCleaned();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.695806303913707
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("rG%U&");
      ontologyTerm0.setOntologyName("n;zo2X%sQ8P7L`");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.questionNumber = "rG%U&";
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("rG%U&", derivedVariable0.getQuestionNumber());
      
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable1.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=3.5927777302928687
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setIsNewRecord(false);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setDescription("rG%U&");
      ontologyTerm0.setOntologyName("n;zo2X%sQ8P7L`");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.questionNumber = null;
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.787178188888964
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getName();
      derivedVariable0.getQuestionNumber();
      User user0 = new User("r%9d]@;?;", "");
      derivedVariable0.form = "^LD6aZP!";
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCleaningDescription();
      derivedVariable0.getCodeBookNumber();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      assertEquals("^LD6aZP!", derivedVariable0.getForm());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.1760956851343245
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("2");
      rawVariable0.setAlias("2");
      User user0 = new User("\"0J@nb,x8#B3?nd", "32Jj]5/t6Aa");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      rawVariable1.setName("");
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = rawVariable2.getSupportingDocuments();
      arrayList0.add(supportingDocument2);
      arrayList2.add(supportingDocument3);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable3 = new RawVariable();
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable1);
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.5015166969605436
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("=gK+#");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.getColumnStart();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm0.setTerm("X:HbM");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      rawVariable0.getOntologyTerms();
      assertEquals("=gK+#", rawVariable0.getColumnStart());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("CaF}CgP6:D@HAa?tVq");
      User user0 = new User("k", "k");
      user0.setPassword("variable.name.label");
      User user1 = new User();
      user1.setAddressLine2("variable.columnEnd.label");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("CaF}CgP6:D@HAa?tVq", rawVariable0.getCleaningDescription());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.990635925616123
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("!re4_d$kP");
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.setDescription("0chs");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("m&?");
      User user0 = new User("vaZiable.year.lael", "2");
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable1.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument3);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      arrayList2.add(supportingDocument2);
      supportingDocument3.setFileName("2");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList0.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocument(supportingDocument4);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      derivedVariable0.getSupportingDocuments();
      System.setCurrentTimeMillis((-921L));
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6902535776209735
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.getOntologyTerms();
      derivedVariable1.setOntologyTerms(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.NEW;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel valueLabel5 = new ValueLabel();
      valueLabel5.hasSameDisplayName(valueLabel1);
      ValueLabel valueLabel6 = new ValueLabel();
      ValueLabel valueLabel7 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType2 = ValueLabel.EditingOperationType.DELETE;
      valueLabel7.setEditingOperationType(valueLabel_EditingOperationType2);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm2.setTerm("&:<Gn!dB[)U\"r[[u_");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      assertEquals("", ontologyTerm4.getDescription());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.785694393057566
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<Variable> arrayList1 = derivedVariable0.getSourceVariables();
      arrayList1.ensureCapacity(869);
      user0.setLastName(":i[");
      user0.setUserID(":i[");
      derivedVariable1.setSourceVariables(arrayList1);
      User user1 = new User();
      user1.setCity(":i[");
      user1.setLastName("1<h");
      user1.setCity("1<h");
      user1.setCity("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      User user2 = new User("user.firstName.sav?Cha:ges", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      user2.setAddressLine1("&Lg");
      User user3 = new User("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME", "user.firstName.sav?Cha:ges");
      User user4 = new User(") e@ez(wae?J>-x", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      User.detectFieldChanges(user2, user1, user2);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.getName();
      Variable.validateFields(derivedVariable0);
      assertEquals("&Lg", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      derivedVariable0.setYear(") e@ez(wae?J>-x");
      User user0 = new User("&Lg", ") e@ez(wae?J>-x");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      user0.setLastName(":i[");
      user0.setUserID(":i[");
      User user1 = new User();
      user1.setCity(":i[");
      user1.setLastName("1<h");
      user1.setCity("1<h");
      User user2 = new User("user.firstName.sav?Cha:ges", "UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      user2.setAddressLine1("&Lg");
      User user3 = new User("user.email.label", "Q");
      user3.setAffiliation("UNABLE_TO_GET_AVAILABILITY_STATE_NAME");
      User user4 = new User("UNABLE_TO_GET_AVAILABILITY_STATE_NAME", "");
      User.detectFieldChanges(user0, user3, user0);
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertEquals("&Lg", derivedVariable0.getDisplayName());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.9643575928553387
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnStart("zxl]0{!`_sNg+f)~$B-");
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      rawVariable0.getCodeBookNumber();
      rawVariable2.setForm((String) null);
      RawVariable rawVariable3 = (RawVariable)rawVariable0.clone();
      rawVariable1.setCleaned(false);
      rawVariable2.setCodeBookNumber("SxBP~[p_4{I");
      rawVariable2.getQuestionNumber();
      RawVariable rawVariable4 = new RawVariable();
      Variable.validateFields(derivedVariable0);
      derivedVariable0.getLabel();
      RawVariable rawVariable5 = new RawVariable();
      rawVariable0.getCodeBookNumber();
      rawVariable4.createVariableSummary();
      rawVariable4.getColumnEnd();
      rawVariable1.getSupportingDocuments();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      String string0 = rawVariable3.getColumnEnd();
      assertEquals("zxl]0{!`_sNg+f)~$B-", rawVariable0.getColumnStart());
      assertEquals("SxBP~[p_4{I", string0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.8450536892369547
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("v?[ u`RG=");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setCleaned(true);
      rawVariable0.setColumnStart("v?[ u`RG=");
      RawVariable rawVariable1 = new RawVariable();
      Variable.validateFields(rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.setQuestionNumber("v?[ u`RG=");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable3);
      rawVariable1.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable3.getColumnStart();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable3.removeOntologyTerm(ontologyTerm4);
      assertTrue(rawVariable3.isCleaned());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7013345082067275
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.setName("&Lg");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ontologyTerm0.getDisplayName();
      derivedVariable0.cloneAttributes(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSupportingDocuments(arrayList2);
      arrayList2.add((SupportingDocument) null);
      arrayList2.add((SupportingDocument) null);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      rawVariable0.getSupportingDocuments();
      System.setCurrentTimeMillis((-741));
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.0215619476762305
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("2");
      rawVariable0.codeBookNumber = "2";
      User user0 = new User("\"0J@nb,x8#B3?nd", "32Jj]5/t6Aa");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable1.getSupportingDocuments();
      arrayList0.add((SupportingDocument) null);
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      rawVariable1.addSupportingDocument(supportingDocument2);
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.removeSupportingDocuments(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.0111135035319254
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("SxBP~[p_4{I", rawVariable0.getColumnEnd());
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.8479830773703685
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      derivedVariable0.getDisplayName();
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      derivedVariable0.setAlternativeVariable(rawVariable1);
      User user1 = new User("4-4A]3J{?%}<$", "variable.alias.label");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      rawVariable2.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable2.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      Variable.validateFields(rawVariable1);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setQuestionNumber("TkQ\"#.e#hm^p.o |");
      derivedVariable0.removeSupportingDocuments(arrayList1);
      assertEquals("TkQ\"#.e#hm^p.o |", derivedVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2167389191417985
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable4.getSupportingDocuments();
      arrayList3.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      derivedVariable2.removeSupportingDocuments(arrayList2);
      derivedVariable2.removeSupportingDocuments(arrayList3);
      boolean boolean1 = derivedVariable1.isCoded();
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(boolean1 == boolean0);
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable1.isCleaned());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.3740076486025066
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSourceVariable(rawVariable0);
      derivedVariable2.setCategory("UNABLE_TO_DELETE_CLEANING_STATE");
      DerivedVariable derivedVariable4 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList4 = derivedVariable2.getSupportingDocuments();
      arrayList4.add(supportingDocument0);
      assertEquals("UNABLE_TO_DELETE_CLEANING_STATE", derivedVariable2.getCategory());
      
      ArrayList<SupportingDocument> arrayList5 = new ArrayList<SupportingDocument>();
      arrayList5.add(supportingDocument0);
      arrayList5.add(supportingDocument1);
      derivedVariable5.removeSupportingDocuments(arrayList2);
      derivedVariable5.removeSupportingDocuments(arrayList5);
      assertFalse(derivedVariable5.isCleaned());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.726745986753559
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      String string0 = ">OyH{h:AC";
      User user0 = new User(">OyH{h:AC", ">OyH{h:AC");
      User user1 = new User();
      rawVariable0.setForm(">OyH{h:AC");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.214349432881345
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.setIdentifier((-1262));
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable3);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList2);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.160858742064353
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable3.removeSourceVariable(derivedVariable4);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable3.containsSupportingDocument(supportingDocument4);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      arrayList1.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      arrayList3.add(supportingDocument1);
      derivedVariable0.setYear("hSAe53s&");
      ArrayList<SupportingDocument> arrayList4 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList3);
      assertEquals("hSAe53s&", derivedVariable0.getYear());
      
      derivedVariable3.removeSupportingDocuments(arrayList4);
      assertFalse(derivedVariable3.isNewRecord());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.5829958739835517
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      ontologyTerm0.setNameSpace("k");
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setTerm("variable.alias.label");
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      assertTrue(arrayList1.isEmpty());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.2215523079930732
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm3);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      String string0 = "1Ol";
      User user0 = new User();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("1Ol");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm(ontologyTerm4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.726120595884266
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms((ArrayList<OntologyTerm>) null);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.setAvailability("@_5MzlcYiwk@hus!");
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User("1Ol", "1Ol");
      user0.setLastName("1Ol");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, rawVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm("1Ol");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm.detectFieldChanges(user1, ontologyTerm4, ontologyTerm2);
      ontologyTerm5.setNameSpace("1Ol");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ontologyTerm6.setNameSpace("variable.columnStart.label");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      ontologyTerm4.setTerm("J}fB+M|sBehi[B<~}I");
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      assertEquals("LHA", ontologyTerm9.getOntologyName());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      arrayList0.spliterator();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      valueLabel0.setMissingValue(false);
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setAlias("-b15b2bG5zxr<th7A");
      derivedVariable0.setAvailability((String) null);
      derivedVariable0.setCleaningDescription("-b15b2bG5zxr<th7A");
      // Undeclared exception!
      try { 
        Variable.validateFields(derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      arrayList0.add(valueLabel0);
      derivedVariable0.setValueLabels(arrayList0);
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.619143255140718
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      ontologyTerm2.setNewRecord(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList1);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType1);
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel2.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel5.hasSameDisplayName(valueLabel1);
      ValueLabel valueLabel7 = new ValueLabel();
      ValueLabel valueLabel8 = new ValueLabel();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm4.setTerm("=message==");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=3.7740657851407193
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.setDescription((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("2");
      User user0 = new User((String) null, "2");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument2);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList1);
      derivedVariable0.getSupportingDocuments();
      arrayList1.add((SupportingDocument) null);
      supportingDocument2.setFileName("PC^dA}fk1ea;,,");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      arrayList1.add(supportingDocument4);
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      rawVariable0.getSupportingDocuments();
      System.setCurrentTimeMillis(1L);
      rawVariable0.clone();
      assertEquals("2", rawVariable0.getLabel());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.0219528629287806
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(false);
      arrayList0.remove((Object) rawVariable0);
      assertFalse(rawVariable0.isCoded());
      
      arrayList0.trimToSize();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("Nt5UrFF");
      arrayList1.add(ontologyTerm0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      arrayList1.forEach(consumer0);
      rawVariable1.removeOntologyTerms(arrayList1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.addOntologyTerm(ontologyTerm1);
      boolean boolean0 = rawVariable1.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      rawVariable1.getColumnStart();
      rawVariable1.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm4);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm2.setTerm("");
      rawVariable1.removeOntologyTerm(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = rawVariable1.getOntologyTerms();
      assertEquals(0, arrayList3.size());
      
      derivedVariable0.getSourceVariables();
      ArrayList<String> arrayList4 = Variable.validateFields(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertEquals(1, arrayList4.size());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "UNABLE_TO_GET_ALIAS_FILE_PATH_NAME";
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.setCleaningDescription("-LHA");
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm2);
      assertEquals("-LHA", rawVariable0.getCleaningDescription());
      
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User(">OyH{h:AC", "bGJ,");
      User user1 = new User();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm0.setNameSpace(">]P}KhrWol+");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setNameSpace("@SfwP");
      ontologyTerm3.setNameSpace("Nt5UrFF");
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      ontologyTerm1.setTerm("@SfwP");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm5);
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel2);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel3.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel6.hasSameDisplayName(valueLabel3);
      ValueLabel valueLabel7 = new ValueLabel();
      valueLabel7.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.7273132017280344
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable1);
      derivedVariable0.setIsNewRecord(true);
      User user0 = new User("4-4A]3J{?%}<$", ">OyH{h:AC");
      User user1 = new User();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm3);
      assertTrue(derivedVariable0.isNewRecord());
      
      ontologyTerm1.setNameSpace("4-4A]3J{?%}<$");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm3.setTerm(",Krx#v)p8'{a3)Ol");
      ontologyTerm0.setTerm("Rlv(6*FQpYo(");
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.1860329267487786
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setNameSpace("UNABLE_TO_GET_RAW_VARIABLE");
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      ontologyTerm1.setNameSpace("n;zo2X%sQ8P7L`");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm3.setTerm((String) null);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      boolean boolean1 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.200193459219825
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      arrayList0.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      ontologyTerm2.setNameSpace("rG%U&");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm5.setTerm("rG%U&");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm7);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.9169986404446697
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      supportingDocument0.setDescription((String) null);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("2");
      derivedVariable0.setFilePath("UNABLE_TO_GET_RAW_VARIABLE");
      String string0 = "32Jj]5/t6Aa";
      User user0 = new User("\"0J@nb,x8#B3?Yd", "32Jj]5/t6Aa");
      Variable.detectFieldChanges(user0, rawVariable0, derivedVariable1);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument2);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      valueLabel0.setLabel("X%");
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType1);
      derivedVariable0.addValueLabel(valueLabel0);
      derivedVariable0.setAlias("general.fieldValue.blank");
      derivedVariable0.setFilePath("");
      derivedVariable0.getYear();
      assertEquals("general.fieldValue.blank", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.5545558491949714
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      User user0 = new User("Ni~irIld", "Ni~irIld");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      ValueLabel.detectFieldChanges(user0, derivedVariable0, valueLabel0, valueLabel1);
      valueLabel1.hasSameDisplayName(valueLabel0);
      valueLabel0.hasSameDisplayName(valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.EDIT;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      User user1 = new User("k", "k");
      user1.setPassword("variable.name.label");
      User user2 = new User();
      user2.setUserID("general.fieldValue.unknown");
      user2.setAddressLine2("variable.columnEnd.label");
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, arrayList0.size());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.4574653869995418
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ontologyTerm1.setNewRecord(true);
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("general.fieldValue.unknown");
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setOntologyTerms(arrayList1);
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      ValueLabel valueLabel4 = new ValueLabel();
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel valueLabel6 = new ValueLabel();
      valueLabel5.hasSameDisplayName(valueLabel0);
      valueLabel5.setValue((String) null);
      ValueLabel valueLabel7 = new ValueLabel();
      ValueLabel valueLabel8 = new ValueLabel();
      ValueLabel valueLabel9 = new ValueLabel();
      ValueLabel valueLabel10 = new ValueLabel();
      valueLabel5.getDisplayName();
      valueLabel5.setMissingValue(true);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType1 = ValueLabel.EditingOperationType.CANCEL;
      valueLabel6.setEditingOperationType(valueLabel_EditingOperationType1);
      valueLabel5.hasSameDisplayName(valueLabel0);
      ValueLabel valueLabel11 = new ValueLabel();
      ValueLabel valueLabel12 = new ValueLabel();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNewRecord(true);
      assertEquals("", ontologyTerm0.getTerm());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = "user.status.saveChanges";
      rawVariable0.form = "";
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.columnStart = "";
      User user0 = new User("CANCEL", "user.status.saveChanges");
      ValueLabel.differencesExist(user0, rawVariable0, valueLabel0, valueLabel0);
      rawVariable0.setCleaningStatus((String) null);
      rawVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setSupportingDocuments(arrayList0);
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCoded());
      assertEquals("", rawVariable0.getName());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.3900257142817853
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      RawVariable rawVariable1 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable1.addValueLabel(valueLabel0);
      rawVariable0.setYear("$Crv`wGsO8O@/M");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.getSupportingDocuments();
      assertEquals("$Crv`wGsO8O@/M", rawVariable0.getYear());
      
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable0.removeSupportingDocuments(arrayList3);
      DerivedVariable derivedVariable6 = new DerivedVariable();
      ArrayList<Variable> arrayList4 = derivedVariable6.getSourceVariables();
      derivedVariable1.setSourceVariables(arrayList4);
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.7386800526124166
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setOntologyTerms(arrayList0);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.setAlternativeVariable(rawVariable2);
      User user0 = new User("Nt5UrFF", "54W,l:BN1aHd");
      User user1 = new User();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable((User) null, rawVariable2, rawVariable2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.324481088886851
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ontologyTerm0.setTerm(".O)=P.n0c");
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm4);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.6258417525947544
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.trimToSize();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      derivedVariable0.columnStart = "";
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDescription("");
      supportingDocument0.clone();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "SxBP~[p_4{I";
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument1);
      assertTrue(boolean0);
      
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable0.getSupportingDocuments();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      String string0 = rawVariable0.getFilePath();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("", string0);
      assertEquals("", rawVariable0.getCodeBookNumber());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.1552486438876346
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      boolean boolean0 = derivedVariable2.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      boolean boolean1 = derivedVariable1.containsSupportingDocument(supportingDocument3);
      assertFalse(boolean1 == boolean0);
      
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList2 = derivedVariable2.getSupportingDocuments();
      arrayList2.add(supportingDocument1);
      ArrayList<SupportingDocument> arrayList3 = new ArrayList<SupportingDocument>();
      derivedVariable3.removeSupportingDocuments(arrayList2);
      assertEquals("0", derivedVariable3.getDisplayItemIdentifier());
      assertFalse(derivedVariable3.isCleaned());
      assertFalse(derivedVariable3.isNewRecord());
      assertFalse(derivedVariable3.isCoded());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.304704691639832
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      rawVariable1.containsOntologyTerm(ontologyTerm0);
      rawVariable0.form = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.setNotes("general.fieldValue.blank");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("general.fieldValue.blank", rawVariable0.getNotes());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=3.7412952613039128
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("iCLK8`6De0:<DFV?");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable1.notes = "iCLK8`6De0:<DFV?";
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm6);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm8);
      ontologyTerm8.setTerm("iCLK8`6De0:<DFV?");
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable2 = (RawVariable)rawVariable1.clone();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("", rawVariable2.getColumnEnd());
      assertEquals("", rawVariable2.getForm());
      assertEquals("", rawVariable2.getLabel());
      assertEquals("iCLK8`6De0:<DFV?", rawVariable2.getNotes());
      assertEquals("0", rawVariable2.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals("", rawVariable2.getDisplayName());
      
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm2);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.add(supportingDocument0);
      supportingDocument0.setFilePath("qRQ!E!xQ f-hpg#Vw/");
      rawVariable0.setSupportingDocuments(arrayList0);
      supportingDocument0.setDescription("I(:mCM\"5U{u#R<");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertTrue(boolean0);
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.7190638218990157
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setColumnStart("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      rawVariable0.cloneAttributes(rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("iCLK8`6De0:<DFV?");
      rawVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm5);
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      ontologyTerm7.setTerm("");
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.getOntologyTerms();
      assertEquals("UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE", rawVariable0.getColumnStart());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.7794207077756727
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      derivedVariable0.addSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription("");
      supportingDocument0.clone();
      supportingDocument1.clone();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument2);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      rawVariable0.setCodeBookNumber("SxBP~[p_4{I");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCodeBookNumber((String) null);
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      rawVariable0.getSupportingDocuments();
      ArrayList<SupportingDocument> arrayList2 = new ArrayList<SupportingDocument>();
      derivedVariable1.removeSupportingDocuments(arrayList2);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable1);
      assertEquals("SxBP~[p_4{I", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=3.534616400831924
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "}kvQ:kI'8`1B";
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("", rawVariable1.getYear());
      assertEquals("}kvQ:kI'8`1B", rawVariable1.getForm());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("", rawVariable1.getCleaningDescription());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("", rawVariable1.getColumnStart());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("", rawVariable1.getAlias());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.1569877743224173
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel1.hasSameDisplayName(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel1.setEditingOperationType(valueLabel_EditingOperationType0);
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm2);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      rawVariable0.setColumnEnd((String) null);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNameSpace("$wXM}o");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }
}
