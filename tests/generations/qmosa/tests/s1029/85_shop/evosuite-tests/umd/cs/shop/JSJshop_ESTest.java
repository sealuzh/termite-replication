/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 00:56:00 GMT 2019
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.ContainerOrderFocusTraversalPolicy;
import java.awt.DefaultFocusTraversalPolicy;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.event.HierarchyListener;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.IndexColorModel;
import java.io.BufferedReader;
import java.io.PipedReader;
import java.io.StreamTokenizer;
import java.text.DateFormat;
import java.time.Month;
import java.util.HashMap;
import java.util.Hashtable;
import javax.swing.Action;
import javax.swing.DebugGraphics;
import javax.swing.Icon;
import javax.swing.JApplet;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JFormattedTextField;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.JSplitPane;
import javax.swing.JTable;
import javax.swing.JToggleButton;
import javax.swing.JTree;
import javax.swing.event.TableModelEvent;
import javax.swing.plaf.basic.BasicTreeUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.InternationalFormatter;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.TextAction;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import sun.awt.SunHints;
import umd.cs.shop.JSJshop;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSMethod;
import umd.cs.shop.JSPlanningProblem;
import umd.cs.shop.JSTaskAtom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSJshop_ESTest extends JSJshop_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      JSJshopVars.leftPar = (-4);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.717020786717215
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = "";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      JSJshop jSJshop0 = new JSJshop("one", "one");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "7vht1N%hfZNCZ@@QbB");
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.addHierarchyListener((HierarchyListener) null);
      jSJshop0.parserFile("one");
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4659497192528064
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = "";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      JSJshop jSJshop0 = new JSJshop("one", "one");
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      jSJshop0.parserFile("one");
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5785663521818436
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("XSX<8Cs?");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "XSX<8Cs?");
      jSJshop0.testParser();
      JSplitPane jSplitPane0 = new JSplitPane();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("plan # ", (Icon) null, true);
      jCheckBoxMenuItem0.getAccelerator();
      JMenu jMenu0 = new JMenu("2owb?w%om");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " 'first' expected");
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.582647532242458
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte)123;
      byteArray0[4] = (byte)38;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) (byte)38;
      objectArray0[1] = (Object) (byte) (-26);
      objectArray0[2] = (Object) (byte)41;
      objectArray0[5] = (Object) evoSuiteFile0;
      objectArray0[4] = (Object) (byte) (-26);
      objectArray0[5] = (Object) evoSuiteFile0;
      objectArray0[6] = (Object) evoSuiteFile0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 1);
      JTable jTable0 = new JTable();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, defaultTableModel0, defaultTableModel0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.put(sunHints_Key2, defaultTableModel0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap1 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.leftPar = (int) (byte)41;
      jSJshop0.testParser();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.1015830955806851
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = "one";
      stringArray0[2] = "one";
      stringArray0[3] = "";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("one", "");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5540761036710294
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)62;
      byteArray0[1] = (byte)38;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)55;
      byteArray0[4] = (byte)38;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)38;
      byteArray0[7] = (byte)55;
      byteArray0[8] = (byte) (-127);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)123;
      byteArray1[1] = (byte)41;
      byteArray1[2] = (byte)38;
      byteArray1[3] = (byte) (-26);
      byteArray1[4] = (byte)38;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) (byte)123;
      objectArray0[1] = (Object) (byte)41;
      objectArray0[2] = (Object) (byte) (-26);
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, (byte)55);
      JTable jTable0 = new JTable();
      defaultTableModel0.removeTableModelListener(jTable0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      hashMap0.put(sunHints_Key0, defaultTableModel0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap1 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.474097458509018
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = "one";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      JSJshop.main(stringArray0);
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      JInternalFrame jInternalFrame1 = new JInternalFrame("= ", true, true);
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction0.getPropertyChangeListeners();
      defaultEditorKit_PasteAction0.isEnabled();
      defaultEditorKit_PasteAction0.getKeys();
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      Action[] actionArray0 = new Action[2];
      actionArray0[0] = (Action) defaultEditorKit_InsertContentAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray1 = TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      TextAction.augmentList(actionArray1, actionArray1);
      TextAction.augmentList(actionArray0, actionArray0);
      System.setCurrentTimeMillis(33L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-26);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "alm7,LOME zPOg");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem((String) null, (Icon) null, true);
      jCheckBoxMenuItem0.isFocusOwner();
      DefaultEditorKit.CutAction defaultEditorKit_CutAction0 = new DefaultEditorKit.CutAction();
      Action[] actionArray0 = new Action[7];
      actionArray0[2] = (Action) defaultEditorKit_CutAction0;
      DateFormat dateFormat0 = DateFormat.getTimeInstance();
      InternationalFormatter internationalFormatter0 = new InternationalFormatter(dateFormat0);
      DefaultFormatterFactory defaultFormatterFactory0 = new DefaultFormatterFactory(internationalFormatter0, internationalFormatter0);
      JFormattedTextField jFormattedTextField0 = new JFormattedTextField((JFormattedTextField.AbstractFormatterFactory) defaultFormatterFactory0);
      jFormattedTextField0.getAction();
      actionArray0[3] = null;
      actionArray0[4] = (Action) defaultEditorKit_CutAction0;
      actionArray0[5] = (Action) defaultEditorKit_CutAction0;
      actionArray0[6] = (Action) defaultEditorKit_CutAction0;
      // Undeclared exception!
      try { 
        TextAction.augmentList(actionArray0, actionArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.5584105701317909
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SystemInUtil.addInputLine("n cVAaMvn6Cu");
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Returning failure from find-plan: Can not find an operator");
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[2];
      String string0 = "n cVAaMvn6Cu";
      SystemInUtil.addInputLine("n cVAaMvn6Cu");
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "{-]\"ls`>z>;&");
      jSJshop0.testParser();
      JInternalFrame jInternalFrame0 = new JInternalFrame();
      String string1 = "= ";
      JInternalFrame jInternalFrame1 = new JInternalFrame(">oZ]tuBrtW\"G", false, true);
      JInternalFrame jInternalFrame2 = new JInternalFrame("= ", true);
      JRootPane jRootPane0 = jInternalFrame2.getRootPane();
      jRootPane0.getJMenuBar();
      JApplet jApplet0 = null;
      try {
        jApplet0 = new JApplet();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.applet.Applet", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.5732052067491771
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.backquote = (-1083);
      JSJshopVars.slash = (-1909740749);
      JSJshopVars.backquote = (int) (byte)41;
      JSJshopVars.plus = (int) (byte)41;
      jSJshop0.testParser();
      PipedReader pipedReader0 = new PipedReader((byte)41);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap1 = new HashMap<RenderingHints.Key, DefaultTableModel>(hashMap0);
      JMenuBar jMenuBar0 = new JMenuBar();
      jMenuBar0.getGraphics();
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null, jMenuBar0);
      DebugGraphics debugGraphics1 = new DebugGraphics(debugGraphics0, jMenuBar0);
      System.setCurrentTimeMillis(0L);
      JMenu jMenu0 = new JMenu("umd.cs.shop.JSListLogicalAtoms");
      JMenu jMenu1 = jMenuBar0.add(jMenu0);
      jMenu1.add("umd.cs.shop.JSListLogicalAtoms");
      System.setCurrentTimeMillis((byte)41);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5785663521818436
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SystemInUtil.addInputLine("XSX<8C?");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "XSX<8C?");
      jSJshop0.testParser();
      JSplitPane jSplitPane0 = new JSplitPane();
      BasicTreeUI basicTreeUI0 = new BasicTreeUI();
      basicTreeUI0.getExpandedIcon();
      JCheckBoxMenuItem jCheckBoxMenuItem0 = new JCheckBoxMenuItem("XSX<8C?", (Icon) null, true);
      jCheckBoxMenuItem0.getAccelerator();
      JMenu jMenu0 = new JMenu("P#HhxsbsMu&:N");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "~lBf[v#N\"4<\"?1I");
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      JSJshop jSJshop0 = new JSJshop();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "=Z@Z AMmcLt6");
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5869819987032194
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)123;
      byteArray0[4] = (byte)38;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Object object0 = new Object();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) (byte)38;
      objectArray0[1] = (Object) (byte)0;
      objectArray0[2] = (Object) (byte)41;
      objectArray0[5] = (Object) evoSuiteFile0;
      objectArray0[4] = (Object) (byte)0;
      objectArray0[5] = (Object) evoSuiteFile0;
      objectArray0[6] = (Object) evoSuiteFile0;
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(objectArray0, 1);
      TableModelEvent tableModelEvent0 = new TableModelEvent(defaultTableModel0);
      defaultTableModel0.newRowsAdded(tableModelEvent0);
      JTable jTable0 = new JTable();
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.replace((RenderingHints.Key) sunHints_Key0, defaultTableModel0, defaultTableModel0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_STROKE_CONTROL;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      hashMap0.put(sunHints_Key2, defaultTableModel0);
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap1 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap1);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.testParser();
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "one";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = "";
      stringArray0[2] = "one";
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("one", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.567944147734173
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)4;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SystemInUtil.addInputLine("[\"");
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.slash = (-1909740749);
      JSJshopVars.plus = (int) (byte)4;
      jSJshop0.testParser();
      assertFalse(JSJshop.corbaToHicap);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      String string0 = ")ne";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ")ne");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = ")ne";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String[] stringArray0 = new String[9];
      JSJshopVars.percent = (-38);
      stringArray0[1] = "\"zOA(wM}.ZO/g>oL}*n";
      stringArray0[2] = "t;\"!fvNY";
      stringArray0[4] = "\"zOA(wM}.ZO/g>oL}*n";
      stringArray0[5] = "";
      stringArray0[6] = "";
      JApplet jApplet0 = JSJshop.applet;
      BufferedReader bufferedReader0 = jSJshop0.getBufferedReader("", stringArray0[7], (JApplet) null);
      assertNull(bufferedReader0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ":*");
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("one", "$X<F");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      String string0 = "one";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "one");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, false);
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6017766353206057
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("farp.shp");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)41;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      SystemInUtil.addInputLine("n cVAaMv6Cu");
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.verticalL = 2574;
      jSJshop0.testParser();
      // Undeclared exception!
      try { 
        jSJshop0.processToken((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte)45;
      byteArray0[3] = (byte)41;
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.parserFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JSJshopVars.interrogation = 1782;
      JSJshopVars.flagExit = false;
      String[] stringArray0 = new String[0];
      JSJshopVars.exclamation = 1782;
      JSJshop.main(stringArray0);
      JSJshop jSJshop1 = new JSJshop("all", "all");
      jSJshop1.getDeleteList();
      jSJshop1.getTree();
      JSJshopVars.semicolon = 1782;
      jSJshop1.tree();
      jSJshop1.getTree();
      jSJshop0.getDeleteList();
      jSJshop0.getAddList();
      JSMethod jSMethod0 = new JSMethod();
      jSMethod0.head();
      // Undeclared exception!
      try { 
        jSJshop1.setFile("n cvaamvn6cu", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Hashtable<String, JSPlanningProblem> hashtable0 = new Hashtable<String, JSPlanningProblem>();
      JTree jTree0 = new JTree(hashtable0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      defaultTreeCellEditor0.getBorderSelectionColor();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer2.setAlignmentX(1.0F);
      defaultTreeCellRenderer2.getBackgroundSelectionColor();
      Hashtable<JSPlanningProblem, Month> hashtable1 = new Hashtable<JSPlanningProblem, Month>();
      JTree jTree1 = new JTree(hashtable1);
      DefaultTreeCellEditor defaultTreeCellEditor1 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer1);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor2 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer2, defaultTreeCellEditor1);
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "KyFuGkyh{++KH(qX2*";
      stringArray0[1] = "j+%@HAQn-ph\"SY.3(";
      stringArray0[2] = "SWwp,RTQ7";
      JSJshop.main(stringArray0);
      JToggleButton jToggleButton0 = new JToggleButton("KyFuGkyh{++KH(qX2*");
      assertFalse(jToggleButton0.isFocusTraversalPolicyProvider());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "one";
      stringArray0[1] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      String string0 = "Ft9dY(<Cj:a=<";
      // Undeclared exception!
      try { 
        jSJshop0.getAppletURL("Ft9dY(<Cj:a=<", (JApplet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String string0 = "XSX<8Cs?";
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)4;
      JSJshop jSJshop0 = null;
      try {
        jSJshop0 = new JSJshop("XSX<8Cs?", "XSX<8Cs?");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JApplet jApplet0 = null;
      SystemInUtil.addInputLine("= ");
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.dom();
      int int0 = 676;
      int int1 = (-687);
      int int2 = 33;
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage((-4), 33, 676, (IndexColorModel) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Hashtable<String, JSPlanningProblem> hashtable0 = new Hashtable<String, JSPlanningProblem>();
      JTree jTree0 = new JTree(hashtable0);
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener0);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.add((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      AWTEventMulticaster.remove((HierarchyListener) null, (HierarchyListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer1.addHierarchyListener((HierarchyListener) null);
      Color.getColor("9H7Z!v");
      defaultTreeCellRenderer1.getTextSelectionColor();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JSJshop jSJshop0 = new JSJshop();
      // Undeclared exception!
      try { 
        jSJshop0.testParser();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Color color0 = defaultTreeCellRenderer1.getBackgroundSelectionColor();
      defaultTreeCellRenderer1.setLabelFor(defaultTreeCellRenderer0);
      Month month0 = Month.FEBRUARY;
      month0.minus((-514));
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      ContainerOrderFocusTraversalPolicy containerOrderFocusTraversalPolicy0 = new ContainerOrderFocusTraversalPolicy();
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy0 = new DefaultFocusTraversalPolicy();
      containerOrderFocusTraversalPolicy0.setImplicitDownCycleTraversal(true);
      DefaultFocusTraversalPolicy defaultFocusTraversalPolicy1 = new DefaultFocusTraversalPolicy();
      defaultTreeCellRenderer0.setFocusTraversalPolicy(defaultFocusTraversalPolicy0);
      defaultTreeCellRenderer0.setTextSelectionColor(color0);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer4.transferFocus();
      defaultTreeCellRenderer0.getTextSelectionColor();
      JSJshop jSJshop0 = new JSJshop();
      JSMethod jSMethod0 = new JSMethod();
      jSMethod0.head();
      JSJshop jSJshop1 = null;
      try {
        jSJshop1 = new JSJshop("qb", (JSTaskAtom) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSJshopVars.colon = (-1463495268);
      JSJshop jSJshop0 = new JSJshop();
      jSJshop0.getSolution();
      DefaultEditorKit.PasteAction defaultEditorKit_PasteAction0 = new DefaultEditorKit.PasteAction();
      defaultEditorKit_PasteAction0.getPropertyChangeListeners();
      defaultEditorKit_PasteAction0.isEnabled();
      defaultEditorKit_PasteAction0.getKeys();
      Action[] actionArray0 = new Action[7];
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      actionArray0[0] = (Action) defaultEditorKit_InsertContentAction0;
      actionArray0[1] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[2] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[3] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[4] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[5] = (Action) defaultEditorKit_PasteAction0;
      actionArray0[6] = (Action) defaultEditorKit_PasteAction0;
      Action[] actionArray1 = TextAction.augmentList(actionArray0, actionArray0);
      DefaultEditorKit.InsertTabAction defaultEditorKit_InsertTabAction0 = new DefaultEditorKit.InsertTabAction();
      StyledEditorKit.ItalicAction styledEditorKit_ItalicAction0 = new StyledEditorKit.ItalicAction();
      Action[] actionArray2 = TextAction.augmentList(actionArray1, actionArray0);
      Action[] actionArray3 = TextAction.augmentList(actionArray0, actionArray2);
      assertNotSame(actionArray3, actionArray2);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("one");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      JSJshop jSJshop0 = new JSJshop("one", "one");
      HashMap<RenderingHints.Key, DefaultTableModel> hashMap0 = new HashMap<RenderingHints.Key, DefaultTableModel>();
      HierarchyListener hierarchyListener0 = mock(HierarchyListener.class, new ViolatedAssumptionAnswer());
      HierarchyListener hierarchyListener1 = AWTEventMulticaster.add(hierarchyListener0, hierarchyListener0);
      HierarchyListener hierarchyListener2 = AWTEventMulticaster.remove(hierarchyListener0, hierarchyListener1);
      HierarchyListener hierarchyListener3 = AWTEventMulticaster.add(hierarchyListener1, hierarchyListener2);
      HierarchyListener hierarchyListener4 = AWTEventMulticaster.remove(hierarchyListener2, hierarchyListener3);
      HierarchyListener hierarchyListener5 = AWTEventMulticaster.add(hierarchyListener3, hierarchyListener2);
      HierarchyListener hierarchyListener6 = AWTEventMulticaster.add(hierarchyListener4, hierarchyListener5);
      AWTEventMulticaster.add(hierarchyListener2, hierarchyListener4);
      AWTEventMulticaster.remove(hierarchyListener6, hierarchyListener5);
      HierarchyListener hierarchyListener7 = AWTEventMulticaster.add(hierarchyListener6, hierarchyListener6);
      HierarchyListener hierarchyListener8 = AWTEventMulticaster.add(hierarchyListener7, hierarchyListener4);
      HierarchyListener hierarchyListener9 = AWTEventMulticaster.add(hierarchyListener4, hierarchyListener5);
      AWTEventMulticaster.remove(hierarchyListener9, hierarchyListener5);
      HierarchyListener hierarchyListener10 = AWTEventMulticaster.add(hierarchyListener1, hierarchyListener9);
      AWTEventMulticaster.remove(hierarchyListener8, hierarchyListener10);
      AWTEventMulticaster.remove(hierarchyListener9, hierarchyListener8);
      AWTEventMulticaster.remove(hierarchyListener10, hierarchyListener4);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.addHierarchyListener(hierarchyListener6);
      Color.getColor("one");
      defaultTreeCellRenderer0.getTextSelectionColor();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JSJshop jSJshop1 = new JSJshop();
      JSPlanningProblem jSPlanningProblem0 = jSJshop1.prob();
      assertNull(jSPlanningProblem0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.8791326374377332
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = ")ne";
      String[] stringArray0 = new String[4];
      stringArray0[1] = ")ne";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      boolean boolean0 = jSJshop0.parserFile("> ");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "one";
      stringArray0[1] = ")ne";
      stringArray0[2] = "one";
      stringArray0[3] = "one";
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        JSJshop.main(stringArray0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[2] = "oX";
      JSJshop.main(stringArray0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)1;
      ByteLookupTable byteLookupTable0 = null;
      try {
        byteLookupTable0 = new ByteLookupTable((-327), byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Offset must be greater than 0
         //
         verifyException("java.awt.image.LookupTable", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      // Undeclared exception!
      try { 
        jSJshop0.processToken(streamTokenizer0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSJshop", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JSJshop jSJshop0 = new JSJshop();
      JApplet jApplet0 = null;
      jSJshop0.getBufferedReader("Wh$[Gw ", "********* list-tree FINAL SOLUTION*******", (JApplet) null);
      Integer integer0 = new Integer(47);
      JOptionPane jOptionPane0 = new JOptionPane(integer0);
      try { 
        JOptionPane.getFrameForComponent((Component) null);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
