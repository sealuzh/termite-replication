/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 01:54:45 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis((-3321L));
      Player player0 = new Player((-1811), "", "", (-1811), (-1811));
      assertEquals(10.0F, player0.getX(), 0.01F);
      
      player0.setX(0.0F);
      float float0 = player0.getX();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.7590010767317845
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player();
      player0.next = (Party) player0;
      player0.pack();
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, false);
      Party party0 = new Party();
      player0.head = party0;
      Player player1 = new Player((-1));
      player0.isJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296340L);
      player0.pack();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      party0.add(player0);
      Player player2 = new Player(4919);
      player0.isJoinOK(player2, true);
      player1.setConnected(false);
      Player player3 = new Player(157, "", "", (short)4919);
      player3.setY(4919);
      player0.isJoinOK(player1, true);
      player1.getX();
      // Undeclared exception!
      try { 
        player3.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1502035530702606
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player();
      player0.next = (Party) player0;
      player0.pack();
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, false);
      Party party0 = new Party();
      player0.head = party0;
      Player player1 = new Player((-1));
      player0.isJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296320L);
      player0.pack();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Player player2 = new Player((-1));
      player0.isJoinOK(player2, true);
      System.setCurrentTimeMillis((short)4919);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "R$SUk");
      String string0 = "";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      String string1 = "setate.PaHey";
      Player player0 = new Player(2238, "setate.PaHey", 2238);
      MockFile mockFile0 = new MockFile("");
      FileSystemHandling.createFolder(evoSuiteFile0);
      // Undeclared exception!
      try { 
        player0.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#DE9JuAZ\"S");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)111;
      byteArray0[1] = (byte)84;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#DE9JuAZ\"S");
      Player player1 = new Player(2147340491, "#DE9JuAZ\"S", "#DE9JuAZ\"S", (byte)111, (-2466));
      assertTrue(player1.isConnected());
      
      player1.setConnected(false);
      int int0 = player1.getStrength();
      assertFalse(player1.isConnected());
      assertEquals((-2466), int0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.1034354550763315
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player((-66), "0b3+Y5dt0FY6>ssb$+", (-66));
      player0.prev = null;
      player0.type();
      player0.getStrength();
      Player player1 = new Player((-1921), " ", "0b3+Y5dt0FY6>ssb$+", (-66), (-3303));
      player0.setMoney((-3303));
      player1.remove(player0);
      player0.add(player1);
      player0.getMoney();
      player1.setDead((long) 5);
      player0.getX();
      player1.gangStrength();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      player1.type();
      player1.getX();
      player1.gangStrength();
      player0.pack();
      player1.gangStrength();
      System.setCurrentTimeMillis(1649L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(2589, (String) null, (String) null, (-20482), (-20482));
      player0.getIP();
      assertEquals((-20482), player0.getStrength());
      assertEquals((-20482), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3072109573039925
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player();
      player0.next = (Party) player0;
      player0.pack();
      player0.setJoinOK(player0, false);
      player0.setJoinOK(player0, false);
      Party party0 = new Party();
      player0.head = party0;
      party0.boss = player0.head;
      Party party1 = new Party((short)4919);
      party0.prev = party1;
      Player player1 = new Player((-1));
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertFalse(player1.isDead());
      assertEquals("Player-1", player1.toString());
      assertTrue(player1.isConnected());
      assertEquals("0.0.0.0", player1.getIP());
      assertTrue(boolean0);
      assertEquals(1, player1.getStrength());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-81);
      Player player0 = new Player(2067, "", (byte) (-2));
      player0.setX((byte) (-2));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      player0.getX();
      // Undeclared exception!
      try { 
        player0.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.1279462185041473
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player(2332, "e c", "module.ModuleBrowserDialog$ModuleFilter", 2332);
      player0.id = 2332;
      Player player1 = new Player(1, "", "", (-544));
      player0.next = (Party) player1;
      player0.setMoney(2332);
      player0.add(player1);
      player0.setDead();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      player0.setDead(41L);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player0.unpack(dataInputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "e c");
      player0.getX();
      System.setCurrentTimeMillis(2332);
      player0.id = (-169);
      player0.getStrength();
      player0.getMoney();
      player1.pack();
      player1.isJoinOK(player0, false);
      player0.isJoinOK(player1, false);
      player0.getIP();
      assertEquals(41L, player0.getTimeOfDeath());
      
      float float0 = player1.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(2238, "s:tate.PaHty", 2238);
      MockFile mockFile0 = new MockFile("s:tate.PaHty", "s:tate.PaHty");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "s:tate.PaHty");
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (byte) (-1), 2238);
      byteArrayInputStream1.skip((-110L));
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream1, byteArrayInputStream0);
      sequenceInputStream0.skip((-1332));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Player player1 = new Player(1345, "_^VU\">lz.!uZ", "_^VU\">lz.!uZ", (byte) (-1), (-146));
      // Undeclared exception!
      try { 
        player0.unpack(dataInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Player player0 = new Player(1833, "<{,gzgN9Ys", 2673);
      player0.setY((-1.0F));
      player0.getX();
      player0.gangStrength();
      player0.pack();
      player0.gangStrength();
      player0.getX();
      player0.type();
      player0.getY();
      Locale locale0 = Locale.ENGLISH;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      Locale locale1 = locale0.stripExtensions();
      locale0.getDisplayName(locale1);
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0, locale_FilteringMode0);
      Object[] objectArray0 = new Object[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ");
      int int0 = player0.type();
      assertEquals((-1.0F), player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.5679741712427773
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getY();
      player0.setDead((long) 0);
      player0.getX();
      player0.type();
      player0.setDead(0L);
      player0.getPictureId();
      Player player1 = new Player((-1594));
      player0.isJoinOK(player1, false);
      player1.getZ();
      player0.isConnected();
      player1.setZ(1481.1741F);
      Player player2 = new Player(5, "~Ox[F2u@z", "", 0, (-1594));
      byte[] byteArray0 = player2.pack();
      player2.unpack(byteArray0);
      Player player3 = new Player(1528, "V#f*}K={wk{Y", 0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      System.setCurrentTimeMillis((short)4919);
      player3.gangStrength();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      player3.unpack(dataInputStream0);
      player3.toString();
      player0.getStrength();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      player3.pack(dataOutputStream0);
      assertEquals("\u00137\uFFFD\u0000\u0001\u0000\u0000A \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\fV#f*}K={wk{Y", byteArrayOutputStream0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.435964402895254
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Player player0 = new Player(0, ".*[.]class$", (String) null, 0, 0);
      player0.setDead(0L);
      Player player1 = new Player((short)4919);
      player0.isJoinOK(player1, false);
      Player player2 = new Player();
      player2.getZ();
      Player player3 = new Player(1, (String) null, 2703);
      player3.setConnected(false);
      player0.isConnected();
      player3.setZ(1224.2733F);
      Player player4 = new Player();
      player4.boss = (Party) player1;
      player4.getSubparty();
      byte[] byteArray0 = player2.pack();
      player0.unpack(byteArray0);
      player1.type();
      player3.type();
      player3.isDead();
      player3.toString();
      player0.isJoinOK(player2, false);
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.4162134738653434
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player(223);
      Player player1 = new Player((-1432), "mwGym\"dEl@Pey", "state.Party", (-1432));
      player1.setX(223);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      player0.setY(0.2F);
      player0.setJoinOK(player1, false);
      player0.gangStrength();
      player0.setMoney(0.1F);
      player1.setDead(1595L);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "mwGym\"dEl@Pey");
      player0.add(player1);
      player0.getY();
      player0.getIP();
      player0.setConnected(false);
      player0.getX();
      player1.pack();
      player1.getX();
      player0.getY();
      player0.type();
      player1.isJoinOK(player0, false);
      player1.getY();
      player0.getIP();
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((File) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=3.0118117773297155
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player();
      player0.next = (Party) player0;
      byte[] byteArray0 = player0.pack();
      player0.setJoinOK(player0, true);
      player0.setJoinOK(player0, false);
      Party party0 = player0.gangBoss();
      party0.prev = party0;
      Player player1 = new Player();
      player0.isJoinOK(player1, true);
      player1.isJoinOK(player0, true);
      System.setCurrentTimeMillis(1392409296320L);
      player0.pack();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(pipedOutputStream0, true);
      party0.add(player0);
      player0.setZ(0.0F);
      player0.isJoinOK(player1, true);
      player1.setConnected(false);
      Player player2 = new Player(157, "", "", (short)4919);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      player2.unpack(dataInputStream0);
      player2.next = (Party) player1;
      player2.setY(4919);
      player1.isConnected();
      player1.getX();
      // Undeclared exception!
      try { 
        player1.pack((DataOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.448437455613918
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player();
      player0.next = (Party) player0;
      byte[] byteArray0 = player0.pack();
      player0.setJoinOK(player0, true);
      Party party0 = new Party();
      player0.head = party0;
      player0.isJoinOK(player0, true);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "XV9>;2\"m4T8");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "(i];{OdT@a");
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.973278742811257
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      float float0 = player0.getY();
      assertEquals(0.0F, float0, 0.01F);
      
      player0.getX();
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player1.setJoinOK(player0, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Player player2 = new Player(2079, "", "gui.ModuleBrowserDialog$ModuleFiltgr", 0);
      String string0 = player2.getIP();
      assertEquals("", string0);
      
      float float1 = player2.getX();
      assertEquals(10.0F, float1, 0.01F);
      
      System.setCurrentTimeMillis((short)4919);
      player0.add(player2);
      boolean boolean0 = player1.isJoinOK(player2, false);
      assertEquals("Player-1", player1.toString());
      assertFalse(boolean0);
      assertEquals(0, player1.getPictureId());
      
      Player player3 = new Player((short)4919, "", 3559);
      assertEquals(1, player3.getStrength());
      assertEquals("0.0.0.0", player3.getIP());
      assertEquals(3559, player3.getPictureId());
      
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-119);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      float float2 = player0.getMoney();
      assertTrue(player0.isConnected());
      assertEquals(0, player0.getStrength());
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, float2, 0.01F);
      assertEquals(float2, float0, 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.126862207664039
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0);
      Player player1 = new Player((short)4919);
      player0.setY((-792.1F));
      player1.setDead(863L);
      player0.isJoinOK(player1, false);
      float float0 = Player.MOVE_DISTANCE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-81);
      player1.setZ(0.1F);
      player0.pack();
      player1.unpack(byteArray0);
      player1.type();
      player0.type();
      player0.pack();
      player0.add(player1);
      player1.getZ();
      player1.pack();
      assertEquals(863L, player1.getTimeOfDeath());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.0543110595891974
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Player player0 = new Player(0);
      player0.getY();
      player0.setDead((long) 0);
      Player player1 = new Player(301, "", ">OJ", 0);
      player0.getZ();
      player0.setZ(0.0F);
      byte[] byteArray0 = player1.pack();
      player1.unpack(byteArray0);
      Player player2 = new Player(301, "", ">OJ", (short)4919);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(pushbackInputStream0, sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player2.unpack(dataInputStream0);
      player2.pack();
      assertEquals(45, player2.getId());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=3.127429422638514
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(0, "'Ym!!Qg-2p>d=S^79Jz", (-2727));
      player0.setZ((-2727));
      player0.setDead((-892L), false);
      player0.setDead();
      player0.setY(0);
      player0.type();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      player0.unpack(dataInputStream0);
      player0.isConnected();
      player0.id = 983;
      player0.getY();
      player0.pack();
      player0.getX();
      player0.getY();
      player0.unpack(dataInputStream0);
      player0.pack();
      player0.getZ();
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-81);
      Player player0 = new Player(2067, "", (byte) (-2));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      sequenceInputStream0.skip((-2624L));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      DataInputStream dataInputStream2 = new DataInputStream(dataInputStream1);
      player0.unpack(dataInputStream2);
      player0.toString();
      Player player1 = new Player(512, "", "", 512);
      player1.getStrength();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("state.Player", "?jp zLe");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // ?jp zLe
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(445, "M>6W49H =g", "M>6W49H =g", 445, 0);
      int int0 = player0.gangStrength();
      assertFalse(player0.isDead());
      assertEquals(0, int0);
      assertEquals(445, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player(1931, "", 1931);
      Player player1 = new Player();
      player0.head = (Party) player1;
      assertEquals("Player-1", player0.head.toString());
      assertEquals(0, player1.getPictureId());
      
      float float0 = Player.MOVE_DISTANCE;
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1931, player0.getPictureId());
      assertEquals(2, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "U");
      Player player0 = new Player(2238, "setate.PaHey", 2238);
      MockFile mockFile0 = new MockFile((String) null, "setate.PaHey");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      player0.setDead((-611L), false);
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "setate.PaHey");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "OzP`FUph%2");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      player0.pack();
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      player0.isDead();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      byte[] byteArray1 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      float float0 = player0.getX();
      assertEquals((-611L), player0.getTimeOfDeath());
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player();
      player0.pack();
      Player player1 = new Player(2, "", 2);
      player1.getIP();
      player1.getName();
      player0.pack();
      int int0 = Packable.GAME_STATE;
      int int1 = player1.type();
      assertEquals(5, int1);
      assertEquals(2, player1.getPictureId());
      
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      
      float float1 = player0.getX();
      assertEquals("Player-1", player0.toString());
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals(10.0F, float1, 0.01F);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Player player0 = new Player(2067, "~Ox[F2u@z", 2067);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(2067, player0.getPictureId());
      assertEquals("0.0.0.0", player0.getIP());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.7518685126965625
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Player player0 = new Player(3326, "", "", (-4413), 435);
      player0.id = 3;
      Party party0 = player0.head;
      player0.add((Party) null);
      player0.getStrength();
      System.setCurrentTimeMillis((short)4919);
      player0.id = 3326;
      player0.pack();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
      
      player0.getStrength();
      int int0 = player0.getStrength();
      assertEquals(435, int0);
      
      float float1 = player0.getZ();
      assertEquals(0.0F, float1, 0.01F);
      
      int int1 = player0.gangStrength();
      assertEquals(435, int1);
      assertEquals((-4413), player0.getPictureId());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.2603936002885616
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(3120);
      player0.setDead();
      player0.setX(3120);
      player0.setConnected(true);
      player0.getSubparty();
      player0.setY(0.1F);
      player0.getName();
      player0.pack();
      player0.setX(3120);
      player0.getX();
      player0.setDead((-1L));
      Party party0 = player0.gangBoss();
      player0.add(party0);
      party0.id = (int) (short)4919;
      party0.prev = (Party) player0;
      player0.add(party0);
      player0.setMoney(3120);
      player0.setY(3120.0F);
      player0.getTimeOfDeath();
      player0.toString();
      player0.getIP();
      player0.setZ(2127.453F);
      assertEquals(3120.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player0 = new Player(56, ">J9tF9$w[g2=qD{%\"7", (-440));
      player0.pack();
      boolean boolean0 = true;
      Player player1 = null;
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-3138));
      Party party0 = null;
      player0.head = null;
      player0.pack();
      player0.id = (-3138);
      player0.add((Party) null);
      player0.getPictureId();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("NC");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player();
      player0.setZ((-1660.2518F));
      player0.setMoney(391.67F);
      player0.setDead((long) (short)4919);
      player0.next = null;
      player0.getTimeOfDeath();
      player0.getName();
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("H7Lh8");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2238);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      Player player0 = new Player(2238, "sthte.PaHty", 2238);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertFalse(boolean0);
      assertTrue(player0.isConnected());
      assertEquals("0.0.0.0", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(2238, player0.getPictureId());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      EvoSuiteFile evoSuiteFile0 = null;
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Player player0 = new Player((byte) (-33), "", (String) null, (-1939), (-2184));
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte) (-81);
      Player player0 = new Player(2067, "", (byte) (-2));
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        player0.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      System.setCurrentTimeMillis((-2485));
      System.setCurrentTimeMillis(4919L);
      System.setCurrentTimeMillis(2627L);
      Player player0 = new Player(4, "module.ModuleBrowserDialog$ModuleFilter", "k6TW!wc!Pm", 4610, 14335);
      System.setCurrentTimeMillis(14335);
      System.setCurrentTimeMillis(14335);
      System.setCurrentTimeMillis((-1795L));
      int int0 = player0.gangStrength();
      assertTrue(player0.isConnected());
      assertEquals(4610, player0.getPictureId());
      assertEquals(14335, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("module.ModuleBrowserDialog$ModuleFilter", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockFile mockFile0 = new MockFile("s:tate.PaHty");
      MockFile mockFile1 = new MockFile("", "#\"m1MUJa6");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "a^");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "a^");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ra#");
      Player player0 = new Player((-195), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "#\"m1MUJa6", 1, (byte) (-1));
      String string0 = player0.getIP();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(1, player0.getPictureId());
      assertFalse(player0.isDead());
      assertEquals("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", string0);
      assertEquals((-1), player0.getStrength());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(0);
      player0.setY(0);
      player0.setX(0.0F);
      player0.setY(0.0F);
      player0.getPictureId();
      player0.getPictureId();
      player0.setZ(0.0F);
      player0.getStrength();
      player0.getIP();
      Party party0 = player0.gangBoss();
      player0.remove(party0);
      Player player1 = new Player(36);
      player0.boss = (Party) player1;
      player0.setDead(0L, true);
      player0.getZ();
      player0.pack();
      player0.setX(1.0F);
      player0.getTimeOfDeath();
      assertEquals(1.0F, player0.getX(), 0.01F);
      
      float float0 = player1.getY();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player(0, "CUbv!LL!_@hRt9)bm)T", 1763);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.324122434965307
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0, "", "", 0, 0);
      player0.getY();
      player0.setDead((long) 0);
      player0.getX();
      player0.type();
      player0.setDead(0L);
      player0.getPictureId();
      Player player1 = new Player((-466), "~Ox[F2u@z", "1E%x_[HE", 0);
      player0.prev = (Party) player1;
      player1.add(player0);
      player0.setY(5);
      player0.isJoinOK(player1, true);
      player0.getZ();
      player0.setX(0.0F);
      Player player2 = new Player((short)4919, "~Ox[F2u@z", 5);
      player1.isConnected();
      player1.setZ(0.1F);
      Player player3 = new Player();
      Player player4 = new Player(4919);
      int int0 = player0.type();
      assertEquals(5.0F, player0.getY(), 0.01F);
      assertEquals(5, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "R$SUk");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Player player0 = new Player(2238, ":", 2238);
      player0.setDead();
      MockFile mockFile0 = new MockFile((String) null, ":");
      FileSystemHandling.createFolder(evoSuiteFile0);
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":");
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean1 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(601, "", "H5AQn-N", 601);
      DataOutputStream dataOutputStream1 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.557702411245053
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player();
      player0.setX(0.0F);
      player0.setDead();
      player0.setY(0.2F);
      player0.head = null;
      player0.getName();
      player0.setDead();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        dataOutputStream0.writeFloat(0.1F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      System.setCurrentTimeMillis((-2478));
      System.setCurrentTimeMillis(4919L);
      System.setCurrentTimeMillis(2627L);
      Player player0 = new Player(4, "module.ModuleBrowserDialog$ModuleFilter", "k6TW!wc!Pm", 4610, 14335);
      System.setCurrentTimeMillis(14335);
      System.setCurrentTimeMillis(14335);
      player0.pack();
      System.setCurrentTimeMillis(2627L);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5531257522061517
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Player player0 = new Player(2238, "state.Party", "state.Party", 2238);
      player0.pack();
      player0.getPictureId();
      Player player1 = new Player();
      player0.isJoinOK(player1, false);
      URI uRI0 = MockURI.aFTPURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      Player player0 = new Player(143, "state.Player", "state.Player", 3782);
      player0.reset(false);
      player0.getMoney();
      float float0 = player0.getMoney();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(1, player0.getStrength());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(3782, player0.getPictureId());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "R$SUk");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "R$SUk");
      Player player0 = new Player(2238, "se=ate.PaHey", 2238);
      MockFile mockFile0 = new MockFile("");
      FileSystemHandling.createFolder(evoSuiteFile0);
      System.setCurrentTimeMillis((short)4919);
      System.setCurrentTimeMillis((short)4919);
      Player player1 = new Player(990, "state.Party", "", 65, 2238);
      player1.reset(true);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(4919L);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MockFile mockFile0 = new MockFile("s:tate.PaHty");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      Player player0 = new Player(1214, "", "s:tate.PaHty", (-20481));
      player0.toString();
      assertEquals("", player0.getIP());
      assertEquals(1, player0.getStrength());
      assertTrue(player0.isConnected());
      assertEquals((-20481), player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "U");
      MockFile mockFile0 = new MockFile((String) null, "setate.PaHey");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "setate.PaHey");
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "U");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "OzP`FUph%2");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("/home/ubuntu/termite/projects/27_gangup");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Player player0 = new Player((-1696), (String) null, 1);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      System.setCurrentTimeMillis((-2478));
      System.setCurrentTimeMillis(2179L);
      System.setCurrentTimeMillis((-2478));
      Player player0 = new Player(4610, "", "", (-2478), (-256));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)9;
      player0.unpack(byteArray0);
      player0.getSubparty();
      System.setCurrentTimeMillis((byte)24);
      System.setCurrentTimeMillis((-893L));
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2238);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      DataInputStream dataInputStream1 = new DataInputStream(sequenceInputStream0);
      Player player0 = new Player(2238, "sthte.PaHty", "sthte.PaHty", 2238, 2238);
      boolean boolean0 = player0.unpack(dataInputStream1);
      assertEquals(2238, player0.getStrength());
      assertEquals(2238, player0.getPictureId());
      assertFalse(boolean0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.879376754279852
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-1), (String) null, (String) null, (-1), (-1));
      player0.setX((-860.205F));
      player0.setZ(0.1F);
      player0.getName();
      player0.setZ((-860.205F));
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte) (-123);
      byteArray0[5] = (byte) (-54);
      player0.unpack(byteArray0);
      player0.setMoney(3711.3843F);
      player0.setZ(0.0F);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
