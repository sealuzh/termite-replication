/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 03:28:52 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.io.Writer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.getXAConnectionFactory(0);
      connectionFactories0.getXATopicConnectionFactory();
      byte[] byteArray0 = new byte[15];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        pipedInputStream0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // mark/reset not supported
         //
         verifyException("java.io.InputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      attributes2Impl1.getType(257);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl2);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl2);
      attributesImpl2.getType(".j0^bC ", ".j0^bC ");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl0);
      connectionFactories0.getXATopicConnectionFactoryCount();
      attributes2Impl4.getValue("rg1G'fr");
      attributes2Impl4.clear();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl4);
      attributes2Impl0.setAttributes(attributes2Impl4);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl7);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      attributes2Impl9.getIndex((String) null, "strings of this type must have a minimum length of ");
      attributes2Impl0.getType("C", (String) null);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      QueueConnectionFactory queueConnectionFactory0 = connectionFactories0.getQueueConnectionFactory(0);
      assertNull(queueConnectionFactory0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      attributes2Impl0.getLocalName((-1));
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl0);
      attributesImpl2.getType("moB(5S sH>Wc");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      attributesImpl2.getLength();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl2);
      attributes2Impl1.getValue("strings o this type mut have a legth of ");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl3);
      attributesImpl3.getURI((-895));
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl3);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl2);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl();
      attributes2Impl4.getLocalName((-895));
      attributesImpl0.getType((String) null, "w_Fa=!8ec'/cWMP");
      Attributes2Impl attributes2Impl8 = new Attributes2Impl();
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl(attributesImpl2);
      AttributesImpl attributesImpl6 = new AttributesImpl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl6.setAttributes(attributes2Impl5);
      attributes2Impl2.setAttributes(attributes2Impl6);
      attributes2Impl4.getIndex("L~y+");
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.4221006252457893
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.enumerateXATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory((XATopicConnectionFactory) null);
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.enumerateConnectionFactory();
      connectionFactories0.getXATopicConnectionFactoryCount();
      connectionFactories0.enumerateXATopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[0];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'J}bawNj81/?|Ym\"", "'J}bawNj81/?|Ym\"", "'J}bawNj81/?|Ym\"", 439, 439);
      SAXParseException sAXParseException1 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("", "", "W >RBL&", 439, 439);
      MockException mockException0 = new MockException("'J}bawNj81/?|Ym\"");
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException0.toString();
      StackTraceElement stackTraceElement0 = new StackTraceElement("W >RBL&", "", "", (-1531));
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bawNj81/?|Ym\"", "W >RBL&", "", 439, 439);
      sAXParseException1.getStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("'J}bawNj81/?|Ym\"", "W >RBL&", "", 439, 439, sAXParseException1);
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("", "", "", 439, (-1531));
      sAXParseException0.getMessage();
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?|Ym\"; systemId: 'J}bawNj81/?|Ym\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?|Ym\"", "org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?|Ym\"; systemId: 'J}bawNj81/?|Ym\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?|Ym\"", "W >RBL&", 439, 439, sAXParseException0);
      SAXParseException sAXParseException7 = new SAXParseException("'J}bawNj81/?|Ym\"", "org.exola-.jms.config.Connectionxactories", "'J}bawNj81/?|Ym\"", (-1531), 439);
      sAXParseException7.getSuppressed();
      sAXParseException7.printStackTrace();
      sAXParseException2.getCause();
      SAXParseException sAXParseException8 = new SAXParseException("W >RBL&", "", "W >RBL&", 0, 59);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory();
      assertEquals(1, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", 495, 495);
      SAXParseException sAXParseException1 = new SAXParseException("'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", 495, 495);
      sAXParseException0.getMessage();
      sAXParseException1.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("OE", "OE", "OE", 495, 495);
      sAXParseException0.getLineNumber();
      sAXParseException2.getPublicId();
      sAXParseException1.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException1.getLocalizedMessage();
      sAXParseException0.toString();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bwNj81/?zYo\"", "OE", "cN1Gc^P{.", 495, 495);
      SAXParseException sAXParseException4 = new SAXParseException("'J}bwNj81/?zYo\"", "OE", "OE", 495, 495, sAXParseException1);
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("__5,l'|1v4e1Hi DED", "__5,l'|1v4e1Hi DED", "cN1Gc^P{.", 495, 495);
      sAXParseException4.getException();
      sAXParseException0.getMessage();
      SAXParseException sAXParseException6 = new SAXParseException("cN1Gc^P{.", "'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", 495, 495);
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bwNj81/?zYo\"; systemId: 'J}bwNj81/?zYo\"; lineNumber: 495; columnNumber: 495; 'J}bwNj81/?zYo\"", "org.xml.sax.SAXParseExceptionpublicId: 'J}bwNj81/?zYo\"; systemId: 'J}bwNj81/?zYo\"; lineNumber: 495; columnNumber: 495; 'J}bwNj81/?zYo\"", "OE", 495, 495, sAXParseException0);
      SAXParseException sAXParseException8 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bwNj81/?zYo\"; systemId: 'J}bwNj81/?zYo\"; lineNumber: 495; columnNumber: 495; 'J}bwNj81/?zYo\"", "org.exola-.jms.config.Connectionxactories", "OE", 495, 495, sAXParseException4);
      SAXParseException sAXParseException9 = new SAXParseException("'J}bwNj81/?zYo\"", "OE", "OE", 495, 495, sAXParseException2);
      sAXParseException8.getSuppressed();
      sAXParseException2.getPublicId();
      sAXParseException2.getCause();
      SAXParseException sAXParseException10 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bwNj81/?zYo\"; systemId: 'J}bwNj81/?zYo\"; lineNumber: 495; columnNumber: 495; 'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", "'J}bwNj81/?zYo\"", 495, 495, sAXParseException5);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[14];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(14, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      xAConnectionFactoryArray0[0] = xAConnectionFactory0;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      DefaultHandler defaultHandler0 = new DefaultHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.mapping.xml.MappingRoot");
      DefaultHandler2 defaultHandler2_2 = new DefaultHandler2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      assertFalse(fileSystemHandling2.equals((Object)fileSystemHandling1));
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl1);
      attributes2Impl2.getValue("", (String) null);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "", "", 0, (-631));
      SAXParseException sAXParseException1 = new SAXParseException("OTSXn-&f(gp\"Tg{_G9", (String) null, "", 0, (-603), sAXParseException0);
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException2 = new SAXParseException("", "OTSXn-&f(gp\"Tg{_G9", "", (-1), 0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException3 = new SAXParseException((String) null, locatorImpl0, sAXParseException2);
      SAXParseException sAXParseException4 = new SAXParseException("", "w^_P%?6-.h1+TZN", "", 4, (-631), sAXParseException0);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_0.warning(sAXParseException0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      assertFalse(attributes2Impl3.equals((Object)attributes2Impl2));
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[2];
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory1 = new XATopicConnectionFactory();
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory1;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl1);
      attributes2Impl2.getValue("", (String) null);
      SAXParseException sAXParseException0 = new SAXParseException((String) null, "", "", 0, (-631));
      SAXParseException sAXParseException1 = new SAXParseException("OTSXn-&f(gp\"Tg{_G9", (String) null, "", 0, (-603), sAXParseException0);
      sAXParseException1.getLocalizedMessage();
      SAXParseException sAXParseException2 = new SAXParseException("", "OTSXn-&f(gp\"Tg{_G9", "", (-1), 0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException3 = new SAXParseException((String) null, locatorImpl0, sAXParseException2);
      SAXParseException sAXParseException4 = new SAXParseException("", "w^_P%?6-.h1+TZN", "", 4, (-631), sAXParseException0);
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      defaultHandler2_0.warning(sAXParseException0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      assertFalse(attributes2Impl3.equals((Object)attributes2Impl1));
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-127);
      byteArray0[1] = (byte) (-28);
      byteArray0[3] = (byte) (-127);
      byteArray0[4] = (byte)12;
      byteArray0[4] = (byte)9;
      byteArray0[6] = (byte)33;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      QueueConnectionFactory queueConnectionFactory1 = connectionFactories0.getQueueConnectionFactory(0);
      assertNull(queueConnectionFactory1.getName());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      TopicConnectionFactory topicConnectionFactory1 = connectionFactories0.getTopicConnectionFactory(0);
      assertNull(topicConnectionFactory1.getName());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4993646124305886
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "org.exolab.castor.xml.CastorException");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1)GTela#H");
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[7];
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      topicConnectionFactoryArray0[1] = topicConnectionFactory0;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      topicConnectionFactoryArray0[3] = topicConnectionFactory0;
      topicConnectionFactoryArray0[4] = topicConnectionFactory0;
      topicConnectionFactoryArray0[5] = topicConnectionFactory0;
      topicConnectionFactoryArray0[6] = topicConnectionFactory0;
      connectionFactories1.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories1.setTopicConnectionFactory(0, topicConnectionFactory0);
      assertEquals(7, connectionFactories1.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      connectionFactories0.clearXAConnectionFactory();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1)GTela#H");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[7];
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      String string0 = "";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.196664918501384
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      StringReader stringReader0 = new StringReader("");
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      EvoSuiteFile evoSuiteFile0 = null;
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      try { 
        connectionFactories0.getTopicConnectionFactory(25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl0);
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl2);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      int int0 = 0;
      try { 
        connectionFactories0.setQueueConnectionFactory(0, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      int int0 = connectionFactories0.getXAConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getQueueConnectionFactoryCount();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = new XAQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[4];
      xATopicConnectionFactoryArray0[0] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[1] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[2] = xATopicConnectionFactory0;
      xATopicConnectionFactoryArray0[3] = xATopicConnectionFactory0;
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      int int0 = (-2716);
      try { 
        connectionFactories0.getQueueConnectionFactory((-2716));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      StackTraceElement stackTraceElement0 = new StackTraceElement("{zsHq nLPC*`", "{zsHq nLPC*`", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("{zsHq nLPC*`", " T", " T", 445);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("{zsHq nLPC*`", " T", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("ZK%u/", "{zsHq nLPC*`", "ZK%u/", 445);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("{zsHq nLPC*`", "ZK%u/", "{zsHq nLPC*`", (-15));
      stackTraceElementArray0[4] = stackTraceElement4;
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement5 = new StackTraceElement(" T", "' appears illegal&P on element '", "Internal", (-54));
      StackTraceElement stackTraceElement6 = new StackTraceElement("{zsHq nLPC*`", "ZK%u/", " T", (-54));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-54), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl1);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl0);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl2);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributesImpl0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl3);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      try { 
        connectionFactories0.setQueueConnectionFactory(55, (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.6120172700343436
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactoryCount();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[4];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[1] = topicConnectionFactory1;
      topicConnectionFactoryArray0[2] = topicConnectionFactory0;
      StringReader stringReader0 = new StringReader("");
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      topicConnectionFactory1.isValid();
      connectionFactories0.isValid();
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[0];
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[16];
      StackTraceElement stackTraceElement0 = new StackTraceElement("' also exists.", "' also exists.", "' also exists.", 445);
      stackTraceElementArray1[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("' also exists.", "!1JuY:ElJC8`h", "!1JuY:ElJC8`h", 445);
      stackTraceElementArray1[0] = stackTraceElement1;
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(1, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Thenamespace associated with the prefix: '");
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-17);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Thenamespace associated with the prefix: '");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w=eD\fHW%uL+|5\"N");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXATopicConnectionFactory((XATopicConnectionFactory) null);
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      assertNull(queueConnectionFactory0.getName());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.7842068034002128
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)44;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte)47;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, xAConnectionFactory0);
      connectionFactories0.getXAConnectionFactory();
      try { 
        connectionFactories0.getConnectionFactory(116);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("`p/J%_f.&", "'J}bawANj81/?|Ym\"", "`p/J%_f.&", 425, 425);
      SAXParseException sAXParseException1 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getLineNumber();
      sAXParseException0.getPublicId();
      StackTraceElement stackTraceElement0 = new StackTraceElement("'J}bawANj81/?|Ym\"", ")PB9:U! >=Hu<=Wp[g", ")PB9:U! >=Hu<=Wp[g", 425);
      sAXParseException1.getLocalizedMessage();
      MockThrowable mockThrowable0 = new MockThrowable();
      SAXParseException sAXParseException2 = new SAXParseException(")PB9:U! >=Hu<=Wp[g", ")PB9:U! >=Hu<=Wp[g", "95I_q2r6|sx1I", 425, 425);
      sAXParseException2.toString();
      sAXParseException0.printStackTrace();
      sAXParseException1.getPublicId();
      sAXParseException1.getException();
      sAXParseException0.fillInStackTrace();
      sAXParseException2.printStackTrace();
      sAXParseException1.getCause();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bawANj81/?|Ym\"", ")PB9:U! >=Hu<=Wp[g", "95I_q2r6|sx1I", 425, 425);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      sAXParseException3.printStackTrace();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[0];
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[16];
      StackTraceElement stackTraceElement0 = new StackTraceElement("' also exists.", "' also exists.", "' also exists.", 424);
      stackTraceElementArray1[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("' also exists.", "!1^uY:ElJC8`h", "!1^uY:ElJC8`h", 424);
      stackTraceElementArray1[1] = stackTraceElement1;
      SAXParseException sAXParseException0 = new SAXParseException("!1^uY:ElJC8`h", "!1^uY:ElJC8`h", "' also exists.", 424, 424);
      sAXParseException0.printStackTrace();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory((-4345), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.flush();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setTopicConnectionFactory(8, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{zsH\"- nLPC?*`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{zsH\"- nLPC?*`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{zsH\"- nLPC?*`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The namespace associated with the prefix: '");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w=eDAHW%uL+|5\"N");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.setXAConnectionFactory((-175), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("", "", "r0bt+", (-1017), (-1017));
      sAXParseException0.getColumnNumber();
      sAXParseException0.getPublicId();
      SAXParseException sAXParseException1 = new SAXParseException("", "", "", 1, 1024, sAXParseException0);
      SAXParseException sAXParseException2 = new SAXParseException("r0bt+", "", "", 1, 1, sAXParseException0);
      sAXParseException2.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("", locator2Impl0, sAXParseException0);
      MockException mockException0 = new MockException("_tV/mzFE");
      SAXParseException sAXParseException4 = new SAXParseException("", locator2Impl0, mockException0);
      SAXParseException sAXParseException5 = new SAXParseException("", "r0bt+", "mapping.accessorReturnTypeMismatch", (-973), (-973), sAXParseException2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = connectionFactories0.getXAConnectionFactory();
      assertEquals(0, xAConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      connectionFactories0.clearQueueConnectionFactory();
      int int0 = 0;
      connectionFactories0.getConnectionFactory(0);
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      AttributesImpl attributesImpl3 = new AttributesImpl(attributesImpl2);
      attributesImpl3.getQName(85);
      attributesImpl1.getType(255);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl3);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl3);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributes2Impl0);
      attributesImpl2.clear();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl0);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributesImpl2);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl5);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      attributes2Impl0.getValue("");
      AttributesImpl attributesImpl6 = new AttributesImpl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl6);
      attributes2Impl7.setAttributes(attributes2Impl0);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl();
      attributes2Impl2.getQName(255);
      attributes2Impl4.clear();
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributesImpl0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      AttributesImpl attributesImpl7 = new AttributesImpl(attributesImpl6);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Attributes2Impl attributes2Impl10 = new Attributes2Impl(attributes2Impl3);
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributesImpl0);
      Attributes2Impl attributes2Impl12 = new Attributes2Impl(attributesImpl1);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.addXATopicConnectionFactory(0, xATopicConnectionFactory0);
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.addXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
      connectionFactories1.getXAQueueConnectionFactory(0);
      try { 
        connectionFactories1.setXAQueueConnectionFactory((-3326), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'J}bawNj81/?|Ym\"", "'J}bawNj81/?|Ym\"", "'J}bawNj81/?|Ym\"", 439, 439);
      SAXParseException sAXParseException1 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("", "", "W >RBL&", 439, 439);
      sAXParseException0.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException0.toString();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bawNj81/?|Ym\"", "W >RBL&", "", 439, 439);
      sAXParseException1.getStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("'J}bawNj81/?|Ym\"", "W >RBL&", "", 439, 439, sAXParseException1);
      sAXParseException4.addSuppressed(sAXParseException3);
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("", "", "", 439, (-1531));
      sAXParseException0.getMessage();
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?|Ym\"; systemId: 'J}bawNj81/?|Ym\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?|Ym\"", "org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?|Ym\"; systemId: 'J}bawNj81/?|Ym\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?|Ym\"", "W >RBL&", 439, 439, sAXParseException0);
      SAXParseException sAXParseException7 = new SAXParseException("'J}bawNj81/?|Ym\"", "org.exola-.jms.config.Connectionxactories", "'J}bawNj81/?|Ym\"", (-1531), 439);
      sAXParseException7.getSuppressed();
      sAXParseException2.getPublicId();
      sAXParseException7.printStackTrace();
      sAXParseException2.getCause();
      SAXParseException sAXParseException8 = new SAXParseException("W >RBL&", "", "W >RBL&", 0, 59);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory(1155, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionFactories0.enumerateXAQueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactoryCount();
      connectionFactories0.getConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
      Enumeration enumeration1 = connectionFactories0.enumerateQueueConnectionFactory();
      assertFalse(enumeration1.equals((Object)enumeration0));
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[0];
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[16];
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[5];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(445, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 445, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactoryCount();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(0, connectionFactory0);
      connectionFactories0.setConnectionFactory(0, connectionFactory0);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      StringReader stringReader0 = new StringReader("");
      int int0 = (-1817);
      try { 
        connectionFactories0.addTopicConnectionFactory((-1817), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1817, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(;");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"Fc1");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w=eDAHW%uL+|5\"N");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory(1810, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1810, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.1375916250043898
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", (String) null, 460, 460);
      SAXParseException sAXParseException1 = new SAXParseException("'JawNj81/z~Yo\"", (String) null, (String) null, 460, 460);
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("OEU", "OEU", "W >RBL&", 460, 460);
      sAXParseException0.getLineNumber();
      sAXParseException1.getPublicId();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException0.toString();
      SAXParseException sAXParseException3 = new SAXParseException((String) null, "W >RBL&", "8YvDoC", 460, 460);
      SAXParseException sAXParseException4 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "W >RBL&", "OEU", 460, 460, sAXParseException1);
      sAXParseException1.toString();
      sAXParseException3.getLocalizedMessage();
      sAXParseException0.getMessage();
      SAXParseException sAXParseException5 = new SAXParseException("8YvDoC", "'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", 460, 460);
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "W >RBL&", 460, 460, sAXParseException0);
      sAXParseException1.fillInStackTrace();
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "org.exola-.jms.config.Connectionxactories", "W >RBL&", 460, (-1531), sAXParseException4);
      SAXParseException sAXParseException8 = new SAXParseException((String) null, "W >RBL&", "OEU", 460, (-1531), sAXParseException2);
      sAXParseException7.getSuppressed();
      sAXParseException2.getPublicId();
      sAXParseException7.printStackTrace();
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", "W >RBL&", 460, 460, sAXParseException0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.getXAQueueConnectionFactoryCount();
      int int0 = connectionFactories1.getXAQueueConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      String string0 = "";
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("Wc+tC]3Cy-", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-107), (XATopicConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", 439, 439);
      SAXParseException sAXParseException1 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("", "", "W >RBL&", 439, 439);
      sAXParseException0.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException0.toString();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bawNj81/?zYo\"", "W >RBL&", "", 439, 439);
      SAXParseException sAXParseException4 = new SAXParseException("'J}bawNj81/?zYo\"", "W >RBL&", "", 439, 439, sAXParseException1);
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("__5,l'|1Yv41Hi D?ED", "__5,l'|1Yv41Hi D?ED", "", 439, (-1531));
      sAXParseException2.getStackTrace();
      sAXParseException5.fillInStackTrace();
      sAXParseException0.getMessage();
      sAXParseException4.initCause(sAXParseException5);
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; systemId: 'J}bawNj81/?zYo\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?zYo\"", "org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; systemId: 'J}bawNj81/?zYo\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?zYo\"", "W >RBL&", 439, 439, sAXParseException0);
      SAXParseException sAXParseException7 = new SAXParseException("'J}bawNj81/?zYo\"", "org.exola-.jms.config.Connectionxactories", "'J}bawNj81/?zYo\"", (-1531), 439);
      sAXParseException7.getCause();
      sAXParseException7.getSuppressed();
      sAXParseException2.getPublicId();
      sAXParseException7.printStackTrace();
      sAXParseException2.getCause();
      SAXParseException sAXParseException8 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; systemId: 'J}bawNj81/?zYo\"; lineNumber: 439; columnNumber: 439; 'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", "W >RBL&", 439, 439, sAXParseException5);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", (-2565), (-2565));
      SAXParseException sAXParseException1 = new SAXParseException("'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", (-2565), (-2565));
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("", "", "W >RBL&", (-2565), (-2565));
      sAXParseException2.getException();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException0.toString();
      sAXParseException1.getSuppressed();
      SAXParseException sAXParseException3 = new SAXParseException("'JUA>bawNj81/%|Y|\"", (Locator) null, sAXParseException2);
      sAXParseException3.getPublicId();
      sAXParseException0.getLocalizedMessage();
      sAXParseException3.getLineNumber();
      SAXParseException sAXParseException4 = new SAXParseException("", "", "'JUA>bawNj81/%|Y|\"", (-2565), (-1), sAXParseException1);
      sAXParseException1.initCause((Throwable) null);
      SAXParseException sAXParseException5 = new SAXParseException((String) null, (Locator) null);
      sAXParseException4.addSuppressed(sAXParseException1);
      sAXParseException4.getColumnNumber();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JUA>bawNj81/%|Y|\"; systemId: 'JUA>bawNj81/%|Y|\"; lineNumber: -2565; columnNumber: -2565; 'JUA>bawNj81/%|Y|\"", (Locator) null, sAXParseException4);
      sAXParseException6.toString();
      sAXParseException6.toString();
      sAXParseException6.getColumnNumber();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JUA>bawNj81/%|Y|\"; systemId: 'JUA>bawNj81/%|Y|\"; lineNumber: -2565; columnNumber: -2565; 'JUA>bawNj81/%|Y|\"", (Locator) null, sAXParseException6);
      SAXParseException sAXParseException8 = new SAXParseException("org.xml.sax.SAXParseException; org.xml.sax.SAXParseExceptionpublicId: 'JUA>bawNj81/%|Y|\"; systemId: 'JUA>bawNj81/%|Y|\"; lineNumber: -2565; columnNumber: -2565; 'JUA>bawNj81/%|Y|\"", "[=6lr}Fw$", "'JUA>bawNj81/%|Y|\"", (-2565), (-2565));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MockException mockException0 = new MockException();
      SAXParseException sAXParseException0 = new SAXParseException("'J}bawANj81/?|Ym\"", "'J}bawANj81/?|Ym\"", "'J}bawANj81/?|Ym\"", 439, 439);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[0];
      mockException0.setStackTrace(stackTraceElementArray0);
      sAXParseException0.toString();
      sAXParseException0.getLineNumber();
      sAXParseException0.getPublicId();
      mockException0.addSuppressed(sAXParseException0);
      StackTraceElement[] stackTraceElementArray1 = new StackTraceElement[2];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "'J}bawANj81/?|Ym\"", "'J}bawANj81/?|Ym\"", 439);
      StackTraceElement stackTraceElement1 = new StackTraceElement("'J}bawANj81/?|Ym\"", "21^uY:ElJC8`b", "21^uY:ElJC8`b", 439);
      stackTraceElementArray1[1] = stackTraceElement1;
      SAXParseException sAXParseException1 = new SAXParseException("21^uY:ElJC8`b", "21^uY:ElJC8`b", "", 439, 439);
      sAXParseException1.getSystemId();
      sAXParseException1.printStackTrace();
      sAXParseException1.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("'J}bawANj81/?|Ym\"", "21^uY:ElJC8`b", "", 439, 439);
      MockException mockException1 = new MockException();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getConnectionFactoryCount();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "the argument 'data' must not be null.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "the argument 'data' must not be null.");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Ql4tN");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Xh4RFX?(`4*RE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Ql4tN");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Xh4RFX?(`4*RE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "the argument 'data' must not be null.");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = connectionFactories0.getXAQueueConnectionFactory();
      assertEquals(1, xAQueueConnectionFactoryArray0.length);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      attributes2Impl0.clear();
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      connectionFactories1.getXATopicConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      try { 
        connectionFactories1.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!*FC5=YHO-V=>^!");
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        connectionFactories0.addXAQueueConnectionFactory(1993, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1993, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", (-2565), (-2565));
      SAXParseException sAXParseException1 = new SAXParseException("'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", "'JUA>bawNj81/%|Y|\"", (-2565), (-2565));
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("", "", "W >RBL&", (-2565), (-2565));
      sAXParseException2.getException();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException0.toString();
      sAXParseException1.getSuppressed();
      SAXParseException sAXParseException3 = new SAXParseException("'JUA>bawNj81/%|Y|\"", (Locator) null, sAXParseException2);
      sAXParseException3.getPublicId();
      sAXParseException0.getLocalizedMessage();
      sAXParseException3.getLineNumber();
      SAXParseException sAXParseException4 = new SAXParseException("", "", "'JUA>bawNj81/%|Y|\"", (-2565), (-1), sAXParseException1);
      sAXParseException1.initCause((Throwable) null);
      SAXParseException sAXParseException5 = new SAXParseException((String) null, (Locator) null);
      sAXParseException4.addSuppressed(sAXParseException1);
      sAXParseException4.getColumnNumber();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JUA>bawNj81/%|Y|\"; systemId: 'JUA>bawNj81/%|Y|\"; lineNumber: -2565; columnNumber: -2565; 'JUA>bawNj81/%|Y|\"", (Locator) null, sAXParseException4);
      sAXParseException6.toString();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      xATopicConnectionFactory0.setName("org.exolab.jms.config.ConnectionFactories");
      try { 
        connectionFactories1.setXATopicConnectionFactory(15, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = (-18);
      try { 
        connectionFactories0.getXATopicConnectionFactory((-18));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(xAQueueConnectionFactory0);
      connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      MockFile mockFile0 = new MockFile("20", "20");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("gWuTP");
      MockPrintWriter mockPrintWriter1 = null;
      try {
        mockPrintWriter1 = new MockPrintWriter("gWuTP", "gWuTP");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // gWuTP
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockPrintWriter", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      attributesImpl2.getQName(85);
      attributes2Impl1.getType(252);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl2);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl2);
      attributes2Impl0.getValue((String) null);
      attributesImpl2.getType(".7^eY ", ".7^eY ");
      attributes2Impl2.getValue((String) null, (String) null);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl2.getQName((-3037));
      attributes2Impl1.getIndex((String) null, "~c^e;s|$");
      attributes2Impl4.getValue("w V0-8~+]X}9");
      attributes2Impl4.clear();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl2);
      attributes2Impl0.setAttributes(attributes2Impl4);
      attributesImpl1.getLocalName(85);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl7);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      attributes2Impl0.getType("C", (String) null);
      attributes2Impl9.addAttribute((String) null, (String) null, "In the chice contained in <", "httO:/wwww3.orgdTR/WD-html-in-xl/DTD/ZUtml1-strict.dtd", "mapping.exendsNoMapping");
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      queueConnectionFactory0.setName("");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      queueConnectionFactoryArray0[0] = queueConnectionFactory0;
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      try { 
        connectionFactories0.addQueueConnectionFactory((-4993), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4993, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      mockException0.getStackTrace();
      StackTraceElement stackTraceElement0 = new StackTraceElement("{zsHq nLPC*`", "{zsHq nLPC*`", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[0] = stackTraceElement0;
      mockException0.getStackTrace();
      StackTraceElement stackTraceElement1 = new StackTraceElement("{zsHq nLPC*`", " T", " T", 445);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("{zsHq nLPC*`", " T", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("ZK%u/", "{zsHq nLPC*`", "ZK%u/", 445);
      stackTraceElementArray0[3] = stackTraceElement3;
      MockThrowable.getDefaultStackTrace();
      StackTraceElement stackTraceElement4 = new StackTraceElement("{zsHq nLPC*`", "ZK%u/", "{zsHq nLPC*`", (-15));
      stackTraceElementArray0[4] = stackTraceElement4;
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement5 = new StackTraceElement(" T", "' appears illegal&Pon element '", "", (-54));
      StackTraceElement stackTraceElement6 = new StackTraceElement("{zsHq nLPC*`", "ZK%u/", " T", (-15));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-15), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(58, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      attributesImpl2.getQName(85);
      attributes2Impl1.getType(257);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl2);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl();
      attributes2Impl0.getValue((String) null);
      attributesImpl2.getType(".j0^bC ", ".j0^bC ");
      attributes2Impl2.getValue((String) null, (String) null);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl2.getQName(85);
      attributes2Impl1.getIndex((String) null, "~c^e/s|$");
      attributes2Impl4.getValue("rg1G'fr");
      attributes2Impl4.clear();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl4);
      attributes2Impl0.setAttributes(attributes2Impl4);
      attributesImpl1.getLocalName(85);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl7);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      int int0 = attributes2Impl9.getIndex((String) null, "strings of this type must have a minimum length of ");
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributes2Impl0);
      Attributes2Impl attributes2Impl12 = new Attributes2Impl();
      Attributes2Impl attributes2Impl13 = new Attributes2Impl();
      attributes2Impl0.setAttributes(attributes2Impl3);
      int int1 = connectionFactories0.getXAConnectionFactoryCount();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{zsHq nLPC*`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{zsHq nLPC*`");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{zsHq nLPC*`");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{zsHq nLPC*`");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The namespace associated with the prefix: '");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte) (-17);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{zsHq nLPC*`");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{zsHq nLPC*`");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w=eD\fHW%uL+|5\"N");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[0];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.flush();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream1.flush();
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(1155);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl2);
      attributes2Impl1.getType(257);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributes2Impl2);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl2);
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl3);
      attributesImpl1.getType(".j;^bC ", ".j;^bC ");
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl5.getQName(257);
      attributes2Impl1.getIndex((String) null, "~c^e/s|$");
      attributes2Impl5.getValue("rg1G'fr");
      attributes2Impl5.clear();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl();
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl2);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributes2Impl8);
      attributes2Impl5.getValue("", "");
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      attributes2Impl10.getIndex((String) null, "strings of this type must have a minimum length of ");
      attributes2Impl0.getType("C", (String) null);
      Attributes2Impl attributes2Impl11 = new Attributes2Impl();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~hA;");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "7~#MJG[|jMr-|");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-(DqJIOst;");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "dC IgpsC>");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1k_q~e)8;E;ET");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1k_q~e)8;E;ET");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory(120);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("", "7uNuvo62h\"&#s8G`5]2", "", (-3246), (-1017));
      SAXParseException sAXParseException1 = new SAXParseException("7uNuvo62h\"&#s8G`5]2", locator2Impl0, sAXParseException0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-73);
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)18;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte) (-6);
      byteArray0[8] = (byte)89;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SAXParseException sAXParseException2 = new SAXParseException("7uNuvo62h\"&#s8G`5]2", "i9Zk;)!", "", 5, (-1017), sAXParseException0);
      sAXParseException0.toString();
      sAXParseException1.getCause();
      sAXParseException2.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("7uNuvo62h\"&#s8G`5]2", locator2Impl0, sAXParseException0);
      SAXParseException sAXParseException4 = new SAXParseException("7uNuvo62h\"&#s8G`5]2", locator2Impl0, sAXParseException0);
      SAXParseException sAXParseException5 = new SAXParseException("&>5ff", locator2Impl0, sAXParseException3);
      MockException mockException0 = new MockException("Cl)4kH)5(g_w");
      mockException0.fillInStackTrace();
      SAXParseException sAXParseException6 = new SAXParseException("", (String) null, "org.apache.xml.serialize.Encodings", 5, (-1554), sAXParseException3);
      try { 
        connectionFactories0.setConnectionFactory(5, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "text/html");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "SW[");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory(0, connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "the argument 'data' must not be null.");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"=SD` A$#T");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Xh4RFX?(`4*RE");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"=SD` A$#T");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.setConnectionFactory((-546), connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactoryArray0[0]);
      try { 
        connectionFactories0.addQueueConnectionFactory((-4993), queueConnectionFactoryArray0[0]);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -4993, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      attributes2Impl0.getLocalName((-1));
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl0);
      attributesImpl2.getType("moB(5S sH>Wc");
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      Attributes2Impl attributes2Impl2 = new Attributes2Impl();
      attributesImpl2.getLength();
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl2);
      attributes2Impl1.getValue("strings o this type mut have a legth of ");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl3);
      attributesImpl3.getURI((-895));
      Attributes2Impl attributes2Impl5 = new Attributes2Impl(attributes2Impl3);
      AttributesImpl attributesImpl4 = new AttributesImpl(attributes2Impl2);
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl();
      attributes2Impl6.getQName(709);
      attributesImpl0.getType((String) null, "w_Fa=!8ec'/cWMP");
      Attributes2Impl attributes2Impl8 = new Attributes2Impl();
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      AttributesImpl attributesImpl5 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl(attributesImpl2);
      AttributesImpl attributesImpl6 = new AttributesImpl();
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl6.setAttributes(attributes2Impl5);
      attributesImpl3.getType("w_Fa=!8ec'/cWMP");
      attributes2Impl2.setAttributes(attributes2Impl6);
      attributes2Impl4.getIndex(":L~6gy+");
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      String string0 = ">7wW1ZTq|AV>w";
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      ConnectionFactories connectionFactories2 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories1.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      xMLReaderAdapter1.setEntityResolver(xMLFilterImpl0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      int int0 = connectionFactories0.getXATopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getTopicConnectionFactory();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedOutputStream0.close();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      pipedOutputStream1.flush();
      connectionFactories0.clearTopicConnectionFactory();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearQueueConnectionFactory();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.getQueueConnectionFactory();
      MockPrintWriter mockPrintWriter0 = null;
      try {
        mockPrintWriter0 = new MockPrintWriter("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl();
      AttributesImpl attributesImpl1 = new AttributesImpl(attributes2Impl1);
      AttributesImpl attributesImpl2 = new AttributesImpl(attributesImpl1);
      attributesImpl2.getQName(85);
      attributes2Impl1.getType(257);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl2);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributes2Impl2);
      attributes2Impl0.getValue((String) null);
      attributesImpl2.getType(".j0^bC ", ".j0^bC ");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributes2Impl0);
      attributes2Impl2.getQName(85);
      attributes2Impl1.getIndex((String) null, "~c^e/s|$");
      attributes2Impl4.getValue("rg1G'fr");
      attributes2Impl4.clear();
      AttributesImpl attributesImpl3 = new AttributesImpl(attributes2Impl4);
      attributes2Impl0.setAttributes(attributes2Impl4);
      attributesImpl1.getLocalName(85);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      Attributes2Impl attributes2Impl7 = new Attributes2Impl(attributesImpl1);
      Attributes2Impl attributes2Impl8 = new Attributes2Impl(attributes2Impl7);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl();
      attributes2Impl9.getIndex((String) null, "strings of this type must have a minimum length of ");
      attributes2Impl0.getType("C", (String) null);
      attributes2Impl9.addAttribute((String) null, (String) null, (String) null, "httO:/wwww3.orgdTRqWD-html-in-xl/DTD/ZUtml1-strict.dtd", "mapping.exeddsNoMapping");
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      try { 
        connectionFactories0.getQueueConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      StackTraceElement stackTraceElement0 = new StackTraceElement("{zsHq nLPC*`", "{zsHq nLPC*`", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("{zsHq nLPC*`", " T", " T", 445);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("{zsHq nLPC*`", " T", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[2] = stackTraceElement0;
      StackTraceElement stackTraceElement3 = new StackTraceElement("ZK%u/", "{zsHq nLPC*`", "ZK%u/", 445);
      stackTraceElementArray0[3] = stackTraceElement3;
      mockException0.getStackTrace();
      StackTraceElement stackTraceElement4 = new StackTraceElement("{zsHq nLPC*`", "ZK%u/", "{zsHq nLPC*`", (-15));
      stackTraceElementArray0[4] = stackTraceElement4;
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement5 = new StackTraceElement(" T", "' appears illegal&P on element '", "", (-54));
      StackTraceElement stackTraceElement6 = new StackTraceElement("{zsHq nLPC*`", "ZK%u/", " T", (-15));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAConnectionFactory((-54));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      xAConnectionFactory0.setName(">7wW1ZTq|AV>w");
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.enumerateXAConnectionFactory();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      AttributesImpl attributesImpl0 = new AttributesImpl(attributes2Impl0);
      AttributesImpl attributesImpl1 = new AttributesImpl();
      AttributesImpl attributesImpl2 = new AttributesImpl();
      AttributesImpl attributesImpl3 = new AttributesImpl();
      AttributesImpl attributesImpl4 = new AttributesImpl(attributesImpl3);
      AttributesImpl attributesImpl5 = new AttributesImpl(attributesImpl0);
      Attributes2Impl attributes2Impl1 = new Attributes2Impl(attributesImpl4);
      Attributes2Impl attributes2Impl2 = new Attributes2Impl(attributesImpl0);
      Attributes2Impl attributes2Impl3 = new Attributes2Impl(attributesImpl1);
      AttributesImpl attributesImpl6 = new AttributesImpl(attributesImpl0);
      AttributesImpl attributesImpl7 = new AttributesImpl(attributes2Impl1);
      attributesImpl7.getType("OXC14!a", "OXC14!a");
      Attributes2Impl attributes2Impl4 = new Attributes2Impl(attributesImpl7);
      Attributes2Impl attributes2Impl5 = new Attributes2Impl();
      Attributes2Impl attributes2Impl6 = new Attributes2Impl();
      attributesImpl3.getType("", "");
      Attributes2Impl attributes2Impl7 = new Attributes2Impl();
      Attributes2Impl attributes2Impl8 = new Attributes2Impl();
      AttributesImpl attributesImpl8 = new AttributesImpl(attributes2Impl6);
      Attributes2Impl attributes2Impl9 = new Attributes2Impl(attributesImpl1);
      AttributesImpl attributesImpl9 = new AttributesImpl();
      attributes2Impl1.getType(1);
      Attributes2Impl attributes2Impl10 = new Attributes2Impl();
      attributes2Impl5.setAttributes(attributes2Impl2);
      Attributes2Impl attributes2Impl11 = new Attributes2Impl(attributesImpl0);
      AttributesImpl attributesImpl10 = new AttributesImpl(attributesImpl2);
      Attributes2Impl attributes2Impl12 = new Attributes2Impl(attributes2Impl6);
      Attributes2Impl attributes2Impl13 = new Attributes2Impl();
      Attributes2Impl attributes2Impl14 = new Attributes2Impl(attributes2Impl9);
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      try { 
        connectionFactories0.setXAConnectionFactory(0, xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte byte0 = (byte) (-92);
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      try { 
        connectionFactories0.addXAConnectionFactory((-747), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -747, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", 460, 460);
      SAXParseException sAXParseException1 = new SAXParseException("'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", 460, 460);
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("OEU", "OEU", "W >RBL&", 460, 460);
      sAXParseException0.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException0.toString();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'JawNj81/z~Yo\"", "W >RBL&", "8YvDoC", 460, 460);
      SAXParseException sAXParseException4 = new SAXParseException("'JawNj81/z~Yo\"", "W >RBL&", "OEU", 460, 460, sAXParseException1);
      sAXParseException1.toString();
      sAXParseException0.getMessage();
      SAXParseException sAXParseException5 = new SAXParseException("8YvDoC", "'JawNj81/z~Yo\"", "'JawNj81/z~Yo\"", 460, 460);
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException6 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; systemId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; systemId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "W >RBL&", 460, 460, sAXParseException0);
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'JawNj81/z~Yo\"; systemId: 'JawNj81/z~Yo\"; lineNumber: 460; columnNumber: 460; 'JawNj81/z~Yo\"", "org.exola-.jms.config.Connectionxactories", "W >RBL&", 460, (-1531), sAXParseException4);
      SAXParseException sAXParseException8 = new SAXParseException("'JawNj81/z~Yo\"", "W >RBL&", "OEU", 460, (-1531), sAXParseException2);
      sAXParseException4.getLocalizedMessage();
      sAXParseException7.getSuppressed();
      sAXParseException2.getPublicId();
      sAXParseException7.printStackTrace();
      sAXParseException2.getCause();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(460);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)41;
      byteArray0[2] = (byte) (-88);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      connectionFactories1.clearConnectionFactory();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      assertNull(xAConnectionFactory0.getName());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", (String) null, 460, 460);
      SAXParseException sAXParseException1 = new SAXParseException("'J}bawNj81/?zYo\"", (String) null, (String) null, 460, 460);
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("OEU", "OEU", "W >RBL&", 460, 460);
      sAXParseException2.getColumnNumber();
      sAXParseException0.getLineNumber();
      sAXParseException2.getPublicId();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException0.toString();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bawNj81/?zYo\"", "W >RBL&", "8YvDoC", 460, 460);
      SAXParseException sAXParseException4 = new SAXParseException("'J}bawNj81/?zYo\"", "W >RBL&", "OEU", 460, 460, sAXParseException1);
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("__5,l'|1v41Hi DED", "__5,l'|1v41Hi DED", "8YvDoC", 460, (-1531));
      sAXParseException0.getMessage();
      SAXParseException sAXParseException6 = new SAXParseException("8YvDoC", "'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", 460, 460);
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; lineNumber: 460; columnNumber: 460; 'J}bawNj81/?zYo\"", "org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; lineNumber: 460; columnNumber: 460; 'J}bawNj81/?zYo\"", "W >RBL&", 460, 460, sAXParseException0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      boolean boolean0 = connectionFactories0.isValid();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.681095545078155
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      StackTraceElement stackTraceElement0 = new StackTraceElement("c@njLLrQ", "c@njLLrQ", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("c@njLLrQ", " T", " T", 445);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("{zsHq nLPC*`", " T", "c@njLLrQ", 445);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("Z%u/", "c@njLLrQ", "Z%u/", 0);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("{zsHq nLPC*`", "Z%u/", "c@njLLrQ", (-15));
      stackTraceElementArray0[4] = stackTraceElement4;
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement5 = new StackTraceElement(" T", "' appears illegal&P on element '", "Z%u/", 445);
      StackTraceElement stackTraceElement6 = new StackTraceElement("{zsHq nLPC*`", "Z%u/", " T", 445);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startDocument();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter0 = new StringWriter();
      connectionFactories0.marshal((Writer) stringWriter0);
      try { 
        connectionFactories0.marshal((ContentHandler) xMLFilterImpl1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      MockException mockException0 = new MockException();
      SAXParseException sAXParseException0 = new SAXParseException("zsH\"- nLPC?*`", "`p/J%_f.&", "", 432, 432, mockException0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "zsH\"- nLPC?*`", "zsH\"- nLPC?*`", 941);
      locator2Impl0.getColumnNumber();
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("zsH\"- nLPC?*`", "21^uY:ElJC8b", "21^uY:ElJC8b", 941);
      stackTraceElementArray0[1] = stackTraceElement1;
      mockException0.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException1 = new SAXParseException("zsH\"- nLPC?*`", locator2Impl0);
      sAXParseException1.getCause();
      locatorImpl1.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("`p/J%_f.&", locatorImpl0, mockException0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      SAXParseException sAXParseException3 = new SAXParseException("zsH\"- nLPC?*`", "21^uY:ElJC8b", "", 0, 432);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      try { 
        connectionFactories1.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-(D&JIOst;");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vk{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-(D&JIOst;");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.getConnectionFactory(2470);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-(D&JIOst;");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vk{");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vk{");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-(D&JIOst;");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[yR<ZqO}1");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.getConnectionFactory(2470);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      MockException mockException0 = new MockException();
      SAXParseException sAXParseException0 = new SAXParseException("{zsH\"- nLPC?*`", "`p/J%_f.&", "", 432, 432, mockException0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[2];
      StackTraceElement stackTraceElement0 = new StackTraceElement("", "{zsH\"- nLPC?*`", "{zsH\"- nLPC?*`", 941);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("{zsH\"- nLPC?*`", "21^uY:ElJC8b", "21^uY:ElJC8b", 941);
      stackTraceElementArray0[1] = stackTraceElement1;
      mockException0.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException1 = new SAXParseException("{zsH\"- nLPC?*`", locator2Impl0);
      sAXParseException1.getCause();
      locatorImpl1.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("`p/J%_f.&", locatorImpl0, mockException0);
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      SAXParseException sAXParseException3 = new SAXParseException("org.exolab.jms.config.ConnectionFactories", locatorImpl1, sAXParseException2);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[4];
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getConnectionFactory(0);
      connectionFactories0.getQueueConnectionFactory();
      assertEquals(4, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getConnectionFactory((-842));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFactories");
      stringReader0.reset();
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parsing Error : Content is not allowed in prolog.
         // Line : 1
         // Column : 1
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", (String) null, 460, 460);
      SAXParseException sAXParseException1 = new SAXParseException("'J}bawNj81/?zYo\"", (String) null, (String) null, 460, 460);
      sAXParseException0.getLineNumber();
      SAXParseException sAXParseException2 = new SAXParseException("OEU", "OEU", "W >RBL&", 460, 460);
      sAXParseException0.getLineNumber();
      sAXParseException2.getSuppressed();
      sAXParseException2.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException0.toString();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException3 = new SAXParseException("'J}bawNj81/?zYo\"", "W >RBL&", "8YvDoC", 460, 460);
      SAXParseException sAXParseException4 = new SAXParseException("'J}bawNj81/?zYo\"", "W >RBL&", "OEU", 460, 460, sAXParseException1);
      sAXParseException1.toString();
      SAXParseException sAXParseException5 = new SAXParseException("__5,l'|1v41Hi DED", "__5,l'|1v41Hi DED", "8YvDoC", 460, (-1531));
      sAXParseException0.getMessage();
      SAXParseException sAXParseException6 = new SAXParseException("8YvDoC", "'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", 460, 460);
      sAXParseException0.printStackTrace();
      sAXParseException4.getPublicId();
      sAXParseException0.getException();
      SAXParseException sAXParseException7 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; lineNumber: 460; columnNumber: 460; 'J}bawNj81/?zYo\"", "org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; lineNumber: 460; columnNumber: 460; 'J}bawNj81/?zYo\"", "W >RBL&", 460, 460, sAXParseException0);
      SAXParseException sAXParseException8 = new SAXParseException("org.xml.sax.SAXParseExceptionpublicId: 'J}bawNj81/?zYo\"; lineNumber: 460; columnNumber: 460; 'J}bawNj81/?zYo\"", "org.exola-.jms.config.Connectionxactories", "W >RBL&", 460, (-1531), sAXParseException4);
      sAXParseException8.getCause();
      sAXParseException8.getSuppressed();
      sAXParseException2.getPublicId();
      sAXParseException8.printStackTrace();
      sAXParseException2.getCause();
      SAXParseException sAXParseException9 = new SAXParseException("org.xml.sax.SAXParseException; lineNumber: 460; columnNumber: 460; 'J}bawNj81/?zYo\"", "'J}bawNj81/?zYo\"", "W >RBL&", 460, 460, sAXParseException5);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(460);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      MockException mockException0 = new MockException();
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[5];
      StackTraceElement stackTraceElement0 = new StackTraceElement("c@njLLrQ", "c@njLLrQ", "{zsHq nLPC*`", 445);
      stackTraceElementArray0[0] = stackTraceElement0;
      StackTraceElement stackTraceElement1 = new StackTraceElement("c@njLLrQ", " T", " T", 445);
      stackTraceElementArray0[1] = stackTraceElement1;
      StackTraceElement stackTraceElement2 = new StackTraceElement("{zsHq nLPC*`", " T", "c@njLLrQ", 445);
      stackTraceElementArray0[2] = stackTraceElement2;
      StackTraceElement stackTraceElement3 = new StackTraceElement("Z%u/", "c@njLLrQ", "Z%u/", 0);
      stackTraceElementArray0[3] = stackTraceElement3;
      StackTraceElement stackTraceElement4 = new StackTraceElement("{zsHq nLPC*`", "org.exolab.jms.config.ConnectionFactories", "c@njLLrQ", (-15));
      stackTraceElementArray0[4] = stackTraceElement4;
      mockException0.setStackTrace(stackTraceElementArray0);
      StackTraceElement stackTraceElement5 = new StackTraceElement(" T", "' appears illegal&P on element '", "", (-54));
      StackTraceElement stackTraceElement6 = new StackTraceElement("{zsHq nLPC*`", "Z%u/", " T", 445);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getTopicConnectionFactory((-15));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      assertEquals(0, connectionFactories0.getTopicConnectionFactoryCount());
  }
}
