/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 01:08:15 GMT 2019
 */

package client.network;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import client.BomberClient;
import client.network.ClientMsgReceiver;
import java.awt.HeadlessException;
import java.net.Proxy;
import java.net.Socket;
import java.sql.BatchUpdateException;
import java.sql.SQLDataException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.SQLTimeoutException;
import java.sql.SQLTransactionRollbackException;
import java.util.ArrayList;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JLayeredPane;
import messages.global.GlobalChatMsg;
import messages.global.InfoRequestMsg;
import messages.global.LoginMsg;
import messages.global.MapListMsg;
import messages.global.ScoreMsg;
import messages.round.BombExplodedMsg;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import server.ExplosionBounds;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientMsgReceiver_ESTest extends ClientMsgReceiver_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      int int0 = 463;
      String string0 = "N=aj-kNI4\\0/Y!f-P";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N=aj-kNI4\u0000/Y!f-P");
      ArrayList<MapListMsg> arrayList0 = new ArrayList<MapListMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      Proxy proxy0 = Proxy.NO_PROXY;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N=aj-kNI4\u0000/Y!f-P");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis(0L);
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      mockSocket0.getReuseAddress();
      MockThread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler) null);
      ThreadGroup threadGroup0 = mock(ThreadGroup.class, new ViolatedAssumptionAnswer());
      MockThread mockThread0 = new MockThread(threadGroup0, clientMsgReceiver0);
      MockThread mockThread1 = new MockThread(mockThread0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockThread.interrupted();
      Thread[] threadArray0 = new Thread[0];
      MockThread.enumerate(threadArray0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = 256;
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      stack0.add(integer0);
      String string0 = "vwM@";
      String string1 = null;
      Integer.getInteger(string1);
      int int1 = 0;
      Integer.compare(int0, int1);
      ArrayList<GlobalChatMsg> arrayList0 = new ArrayList<GlobalChatMsg>();
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg(string0);
      String string2 = "ulS=1q|6L]4";
      String string3 = null;
      String string4 = "start(): serverThread != null; no action taken";
      GlobalChatMsg globalChatMsg1 = new GlobalChatMsg(string4, string2);
      ArrayList<GlobalChatMsg> arrayList1 = new ArrayList<GlobalChatMsg>();
      arrayList0.add(globalChatMsg1);
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList1);
      int int2 = 2076;
      LoginMsg loginMsg0 = new LoginMsg(string0, int2);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(globalChatMsg0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      System.setCurrentTimeMillis(1286L);
      GlobalChatMsg globalChatMsg0 = new GlobalChatMsg("", "common.GameLoop");
      ArrayList<GlobalChatMsg> arrayList0 = new ArrayList<GlobalChatMsg>();
      arrayList0.add(globalChatMsg0);
      GlobalChatMsg globalChatMsg1 = new GlobalChatMsg("@XV^BKAUgpE");
      arrayList0.add(globalChatMsg0);
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      LoginMsg loginMsg0 = new LoginMsg("9]@Y;@kY! K9\".`hu:W", (-3037));
      Proxy proxy0 = Proxy.NO_PROXY;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      System.setCurrentTimeMillis(0L);
      InfoRequestMsg infoRequestMsg0 = new InfoRequestMsg(1);
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.processMsg(scoreMsg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("messages.global.ScoreMsg", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.max(1462, 463);
      stack0.add(integer0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      stack0.add(integer1);
      Integer integer2 = new Integer(463);
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = new Integer((-1728));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger((String) null, integer2);
      Integer.compare(3580, 3580);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer6 = new Integer(2289);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer7 = JLayeredPane.DEFAULT_LAYER;
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      vector2.add(integer8);
      Integer.max((-27), 2241);
      vector2.add(integer7);
      vector2.addElement(integer5);
      FileSystemHandling.shouldAllThrowIOExceptions();
      vector2.add((Integer) null);
      Vector<Integer> vector3 = new Vector<Integer>();
      stack0.add((Integer) null);
      Vector<Integer> vector4 = new Vector<Integer>();
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.displayErrorMessage();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.max(1462, 463);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer.min(463, 1462);
      Integer integer2 = new Integer(463);
      Integer.remainderUnsigned(463, 463);
      Integer integer3 = JLayeredPane.POPUP_LAYER;
      Integer integer4 = new Integer((-1728));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger((String) null, integer2);
      Integer.compare(3580, 3580);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer6 = new Integer(2289);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      vector2.add(integer7);
      Integer integer8 = JLayeredPane.POPUP_LAYER;
      Integer integer9 = JLayeredPane.DEFAULT_LAYER;
      vector2.add(integer8);
      vector2.add(integer9);
      Integer.max((-27), 2241);
      Integer integer10 = JLayeredPane.PALETTE_LAYER;
      vector2.add(integer10);
      vector2.add((Integer) null);
      Vector<Integer> vector3 = new Vector<Integer>();
      Vector<Integer> vector4 = new Vector<Integer>();
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.0
  */
  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      int int0 = 463;
      String string0 = "N=aj-kNI4\\0/Y!f-P";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N=aj-kNI4\u0000/Y!f-P");
      ArrayList<MapListMsg> arrayList0 = new ArrayList<MapListMsg>();
      ScoreMsg scoreMsg0 = new ScoreMsg(arrayList0);
      Proxy proxy0 = Proxy.NO_PROXY;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "N=aj-kNI4\u0000/Y!f-P");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      System.setCurrentTimeMillis((-437L));
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = null;
      try {
        clientMsgReceiver0 = new ClientMsgReceiver((Socket) null, (BomberClient) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("common.network.MsgReceiver", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockSocket mockSocket0 = new MockSocket();
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      int int0 = 400;
      int int1 = 256;
      ExplosionBounds explosionBounds0 = new ExplosionBounds(int0, int0, int0, int1);
      int int2 = 260;
      Vector<Integer> vector0 = null;
      Vector<Integer> vector1 = null;
      boolean boolean0 = false;
      BombExplodedMsg bombExplodedMsg0 = new BombExplodedMsg(int2, vector0, vector0, vector1, boolean0);
      bombExplodedMsg0.setExplosionBounds(explosionBounds0);
      clientMsgReceiver0.processMsg(bombExplodedMsg0);
      Throwable throwable0 = null;
      SQLTransactionRollbackException sQLTransactionRollbackException0 = new SQLTransactionRollbackException(throwable0);
      StackTraceElement[] stackTraceElementArray0 = new StackTraceElement[6];
      String string0 = "4GROh]e23<!K";
      String string1 = "AXhH";
      StackTraceElement stackTraceElement0 = new StackTraceElement(string0, string1, string1, int1);
      stackTraceElementArray0[0] = stackTraceElement0;
      String string2 = "&4yeD";
      StackTraceElement stackTraceElement1 = new StackTraceElement(string2, string0, string1, int2);
      stackTraceElementArray0[1] = stackTraceElement1;
      String string3 = "Lost connection to server!";
      int int3 = 1;
      StackTraceElement stackTraceElement2 = new StackTraceElement(string0, string1, string3, int3);
      stackTraceElementArray0[2] = stackTraceElement2;
      String string4 = "?ZI]-d,";
      int int4 = 0;
      StackTraceElement stackTraceElement3 = new StackTraceElement(string3, string4, string2, int4);
      stackTraceElementArray0[3] = stackTraceElement3;
      int int5 = (-2523);
      BomberClient.getInstance();
      int int6 = 2490;
      ExplosionBounds explosionBounds1 = new ExplosionBounds(int2, int2, int5, int6);
      assertEquals(260, explosionBounds1.getDown());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Stack<Integer> stack0 = new Stack<Integer>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      Integer.max(1462, 463);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      Integer.min(463, 1462);
      Integer integer2 = new Integer(463);
      Integer.remainderUnsigned(463, 463);
      Integer integer3 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer integer4 = new Integer((-1728));
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer.getInteger((String) null, integer2);
      Integer.compare(3580, 3580);
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer6 = new Integer(2289);
      Vector<Integer> vector2 = new Vector<Integer>();
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      vector2.add(integer7);
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = JLayeredPane.DEFAULT_LAYER;
      vector2.add(integer9);
      Integer.max((-27), 2241);
      vector2.add(integer8);
      vector2.add((Integer) null);
      Vector<Integer> vector3 = new Vector<Integer>();
      stack0.add((Integer) null);
      Vector<Integer> vector4 = new Vector<Integer>();
      MockSocket mockSocket0 = new MockSocket();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, (BomberClient) null);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.closeConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("client.network.ClientMsgReceiver", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      BomberClient bomberClient0 = BomberClient.getInstance();
      ClientMsgReceiver clientMsgReceiver0 = new ClientMsgReceiver(mockSocket0, bomberClient0);
      String string0 = "JMuHOCHKt C'B9@W";
      String string1 = "";
      int int0 = 1;
      int[] intArray0 = new int[6];
      intArray0[0] = int0;
      intArray0[1] = int0;
      intArray0[2] = int0;
      intArray0[3] = int0;
      intArray0[4] = int0;
      intArray0[5] = int0;
      String string2 = "yZc1K-&:^vh*I<>o0g";
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException(string0, string2, intArray0[4]);
      BatchUpdateException batchUpdateException0 = new BatchUpdateException(string0, string1, int0, intArray0, sQLIntegrityConstraintViolationException0);
      SQLDataException sQLDataException0 = new SQLDataException(batchUpdateException0);
      SQLTimeoutException sQLTimeoutException0 = new SQLTimeoutException(string0, sQLDataException0);
      SQLTimeoutException sQLTimeoutException1 = new SQLTimeoutException(sQLTimeoutException0);
      // Undeclared exception!
      try { 
        clientMsgReceiver0.handleConnectionLoss(sQLTimeoutException1);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
