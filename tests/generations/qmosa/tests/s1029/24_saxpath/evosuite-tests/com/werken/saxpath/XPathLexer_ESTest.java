/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 12 12:34:08 GMT 2020
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.4914066532757784
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@4WMbFIVB");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("n<sTPp?d");
      xPathLexer2.dollar();
      xPathLexer2.dollar();
      xPathLexer2.and();
      XPathLexer xPathLexer3 = new XPathLexer("n<sTPp?d");
      xPathLexer3.dollar();
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer2.plus();
      XPathLexer xPathLexer5 = new XPathLexer("jRZ@;{");
      xPathLexer2.nextToken();
      xPathLexer4.dollar();
      xPathLexer3.equals();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.notEquals();
      xPathLexer6.plus();
      xPathLexer3.plus();
      Token token0 = xPathLexer5.or();
      assertNull(token0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7345625890878371
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("co", token3.getTokenText());
      
      Token token4 = xPathLexer1.minus();
      String string0 = token4.toString();
      assertEquals("[ (6) (m)", string0);
      
      xPathLexer1.currentPosition();
      xPathLexer1.setPreviousToken(token2);
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.number();
      Token token5 = xPathLexer2.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer1.and();
      xPathLexer0.dollar();
      xPathLexer2.operatorName();
      xPathLexer1.dollar();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("e", token6.getTokenText());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("r", token7.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (6) (m)");
      xPathLexer4.operatorName();
      xPathLexer1.nextToken();
      Token token8 = xPathLexer1.dollar();
      assertEquals("k", token8.getTokenText());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals("[ ", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer2.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5986701618923704
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wtKQ%0?Xs[CD8Km/I");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.minus();
      token2.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.identifierOrOperatorName();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token2.toString();
      token3.toString();
      XPathLexer xPathLexer2 = new XPathLexer("ld)");
      xPathLexer2.leftParen();
      xPathLexer1.comma();
      xPathLexer1.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("%RJaKYr\"5.+`9x0j;");
      xPathLexer0.nextToken();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer("[ (15) ()");
      xPathLexer4.leftBracket();
      xPathLexer6.rightParen();
      Token token4 = xPathLexer5.div();
      assertNull(token4);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.278356645245533
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qCBJff}z+5u#fVM9J");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.minus();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (6) (z)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token3);
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("+", token5.getTokenText());
      
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer2.minus();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("^w?O");
      Token token7 = xPathLexer4.nextToken();
      assertEquals("^w?O", token7.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("5u", token9.getTokenText());
      
      Token token10 = xPathLexer6.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer6.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3982645205623387
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("om", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.div();
      xPathLexer0.dollar();
      Token token2 = xPathLexer0.not();
      assertEquals("r", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer1.mod();
      xPathLexer0.consume();
      xPathLexer2.consume();
      xPathLexer2.currentPosition();
      Token token3 = xPathLexer0.slashes();
      assertEquals("e", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer4.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer(")");
      Token token6 = xPathLexer0.nextToken();
      assertEquals("n.saxpath.Token", token6.getTokenText());
      
      Token token7 = xPathLexer4.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer5.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer3.rightParen();
      xPathLexer4.rightParen();
      xPathLexer0.identifier();
      Token token10 = xPathLexer2.identifier();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer4.relationalOperator();
      Token token11 = xPathLexer2.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer2.dots();
      assertEquals(13, token12.getTokenType());
      
      boolean boolean0 = xPathLexer6.isIdentifierStartChar('I');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4248839245599922
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.minus();
      assertEquals("2", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.consume();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("xb", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(",{");
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals(",", token5.getTokenText());
      
      Token token6 = xPathLexer1.dollar();
      assertEquals("{", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("7", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer3.comma();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("N", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      xPathLexer4.dots();
      xPathLexer2.at();
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals("]", token11.getTokenText());
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
      
      xPathLexer1.dots();
      Token token13 = xPathLexer2.dots();
      assertEquals(13, token13.getTokenType());
      
      xPathLexer2.getPreviousToken();
      xPathLexer2.and();
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      char char0 = xPathLexer5.LA(7);
      assertEquals('v', char0);
      
      xPathLexer4.at();
      xPathLexer0.div();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer6.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      Token token15 = xPathLexer5.at();
      assertEquals("N", token15.getTokenText());
      assertEquals(16, token15.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2555581793632256
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wtKQ%0?s[CD8Km/I");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("%", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      String string0 = token3.toString();
      assertEquals("[ (22) (0?)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer1.dollar();
      Token token5 = xPathLexer0.dollar();
      assertEquals("[", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("CT6cw]oHM");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.operatorName();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("CD8Km", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer4.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.plus();
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("/", token11.getTokenText());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2333824886315083
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("6s.<L['HUUH!~>:");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer1.dollar();
      assertEquals("6", token1.getTokenText());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals("s", token2.getTokenText());
      
      Token token3 = xPathLexer2.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer2.at();
      Token token5 = xPathLexer1.whitespace();
      assertEquals("", token5.getTokenText());
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.minus();
      assertEquals("L", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals("[", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      XPathLexer xPathLexer3 = new XPathLexer("");
      char char0 = xPathLexer3.LA(111);
      assertEquals('\uFFFF', char0);
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("", token9.getTokenText());
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer1.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token12 = xPathLexer0.leftParen();
      assertEquals(1, token12.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.1273064204476417
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("e", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals("w", token4.getTokenText());
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals("0M", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("9+", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("p");
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.dollar();
      xPathLexer1.and();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer4.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(" dxew0M9+o");
      Token token8 = xPathLexer4.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer6.dollar();
      Token token9 = xPathLexer6.equals();
      assertEquals("d", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer7.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3776484366709638
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1z>?N)*8-+e7?G{");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1z>?N)*8-+e7?G{");
      Token token1 = xPathLexer1.nextToken();
      assertEquals("", token1.getTokenText());
      
      token0.toString();
      Token token2 = xPathLexer1.identifier();
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals("\"", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer0.colon();
      assertEquals("g", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      xPathLexer2.and();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.leftBracket();
      xPathLexer1.dollar();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      xPathLexer1.or();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals("g", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer2.leftBracket();
      Token token8 = xPathLexer0.dollar();
      assertEquals("z", token8.getTokenText());
      
      xPathLexer1.identifier();
      xPathLexer2.mod();
      Token token9 = xPathLexer0.rightParen();
      assertEquals(">", token9.getTokenText());
      
      Token token10 = xPathLexer1.leftParen();
      assertEquals(1, token10.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer3 = new XPathLexer("\"gg1z>?N)*8-+e7?G{");
      Token token11 = xPathLexer0.nextToken();
      assertEquals(15, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (15) ()");
      Token token12 = xPathLexer3.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals("\"", token12.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer5.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      xPathLexer5.identifier();
      Token token14 = xPathLexer4.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer2.rightParen();
      assertEquals(2, token15.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3581878589069056
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QD;&3F");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals(";", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      Token token2 = xPathLexer1.notEquals();
      assertEquals(22, token2.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (15) (QD)", string0);
      
      xPathLexer1.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("&", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer0.or();
      xPathLexer1.dollar();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("F", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("QD;&3F");
      Token token6 = xPathLexer4.slashes();
      assertEquals("Q", token6.getTokenText());
      
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer4.relationalOperator();
      xPathLexer1.whitespace();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.relationalOperator();
      xPathLexer6.setPreviousToken((Token) null);
      xPathLexer2.identifierOrOperatorName();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer2.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer3.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer4.and();
      Token token12 = xPathLexer0.whitespace();
      assertEquals("", token12.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token13 = xPathLexer7.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('~');
      assertFalse(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.892400062386882
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.pipe();
      xPathLexer0.not();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer0.equals();
      xPathLexer0.getPreviousToken();
      xPathLexer0.isIdentifierStartChar('^');
      xPathLexer0.dollar();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.literal();
      xPathLexer1.div();
      xPathLexer2.plus();
      xPathLexer1.relationalOperator();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.3016103802915278
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.leftParen();
      xPathLexer0.not();
      xPathLexer0.rightBracket();
      xPathLexer0.div();
      xPathLexer0.rightParen();
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.dots();
      xPathLexer0.consume((-2388));
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.359215497864135
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("<", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("9x", token4.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (6) (2)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (6) (2)");
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      assertEquals("]I", token10.getTokenText());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5496244879875878
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("g", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(17, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.dollar();
      xPathLexer0.div();
      Token token3 = xPathLexer0.colon();
      assertEquals(" ", token3.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer1.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("3", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("*lkT'^ekQ-cB_n^");
      Token token6 = xPathLexer4.nextToken();
      assertEquals("*", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.dollar();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer3.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer5.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer2.mod();
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.5156777720794814
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qCBJff}z+5u#fVM9J");
      Token token0 = xPathLexer0.at();
      assertEquals("q", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.minus();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (6) (z)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token2.toString();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("+", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("5", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("u", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals("#f", token8.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) ()");
      Token token9 = xPathLexer1.colon();
      token1.toString();
      String string1 = token2.toString();
      assertEquals("[ (-2) ()", string1);
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("V", token10.getTokenText());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.setPreviousToken(token9);
      assertEquals("[", token9.getTokenText());
      
      String string2 = token4.toString();
      assertEquals("[ (15) ()", string2);
      
      Token token11 = xPathLexer0.pipe();
      assertEquals("M", token11.getTokenText());
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.literal();
      assertNull(token12);
      
      xPathLexer1.identifierOrOperatorName();
      Token token13 = xPathLexer1.dots();
      assertEquals(" ", token13.getTokenText());
      assertEquals(13, token13.getTokenType());
      
      Token token14 = xPathLexer1.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer1.equals();
      assertEquals(21, token15.getTokenType());
      assertEquals("1", token15.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("[ (-2) ()");
      Token token16 = xPathLexer1.doubleColon();
      assertEquals(19, token16.getTokenType());
      assertEquals("5)", token16.getTokenText());
      
      Token token17 = xPathLexer3.plus();
      assertEquals("[", token17.getTokenText());
      assertEquals(5, token17.getTokenType());
      
      Token token18 = xPathLexer2.rightParen();
      assertEquals(2, token18.getTokenType());
      
      Token token19 = xPathLexer0.notEquals();
      assertEquals(22, token19.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.652587534720148
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.div();
      xPathLexer0.literal();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.consume((-2036));
      xPathLexer0.colon();
      xPathLexer0.plus();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.249640018844567
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("bg-|2.290Ol-n1@]Ezd");
      Token token2 = xPathLexer2.rightBracket();
      assertEquals("b", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.leftBracket();
      assertEquals("g", token3.getTokenText());
      
      Token token4 = xPathLexer3.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer1.and();
      Token token5 = xPathLexer0.dollar();
      assertEquals("|", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.pipe();
      xPathLexer3.minus();
      xPathLexer4.relationalOperator();
      Token token6 = xPathLexer0.pipe();
      assertEquals("m", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token7 = xPathLexer2.nextToken();
      assertEquals("-", token7.getTokenText());
      assertEquals(6, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.doubleColon();
      Token token9 = xPathLexer6.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer4.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer6.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer6.plus();
      assertEquals(5, token12.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3878112667161586
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.not();
      assertEquals(".", token1.getTokenText());
      
      xPathLexer2.mod();
      xPathLexer1.consume();
      xPathLexer3.consume();
      xPathLexer3.currentPosition();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer3.dollar();
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token4 = xPathLexer5.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer(")");
      xPathLexer1.nextToken();
      Token token5 = xPathLexer5.equals();
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("?VscWS:_P0YU+xW@Y)]");
      Token token6 = xPathLexer6.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer4.rightParen();
      Token token8 = xPathLexer5.rightParen();
      assertEquals("m", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifier();
      assertEquals("werken.saxpath.Token", token9.getTokenText());
      
      Token token10 = xPathLexer3.identifier();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer5.relationalOperator();
      Token token11 = xPathLexer3.nextToken();
      assertEquals((-1), token11.getTokenType());
      
      Token token12 = xPathLexer3.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.180318409428917
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1z>?N)*8-+e7?G{");
      Token token0 = xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("\"gg1z>?N)*8-+e7?G{");
      xPathLexer1.nextToken();
      token0.toString();
      xPathLexer1.identifier();
      Token token1 = xPathLexer0.at();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      token1.toString();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.rightBracket();
      xPathLexer2.dollar();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.1769673643808223
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("co", token3.getTokenText());
      
      Token token4 = xPathLexer1.minus();
      String string0 = token4.toString();
      assertEquals("[ (6) (m)", string0);
      
      xPathLexer1.currentPosition();
      xPathLexer0.mod();
      xPathLexer0.consume();
      XPathLexer xPathLexer2 = new XPathLexer("[ (6) (m)");
      xPathLexer0.and();
      Token token5 = xPathLexer2.dollar();
      assertEquals("[", token5.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.star();
      XPathLexer xPathLexer5 = new XPathLexer("[ (6) (m)");
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token7 = xPathLexer6.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(" (", token8.getTokenText());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals(".", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      xPathLexer8.or();
      xPathLexer8.dollar();
      Token token10 = xPathLexer4.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("");
      Token token12 = xPathLexer10.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5007919570770327
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.star();
      Token token1 = xPathLexer0.number();
      token0.toString();
      Token token2 = xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.setPreviousToken((Token) null);
      token1.toString();
      xPathLexer0.currentPosition();
      XPathLexer xPathLexer1 = new XPathLexer("1?");
      xPathLexer1.setPreviousToken(token2);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.and();
      xPathLexer1.rightBracket();
      xPathLexer2.dollar();
      xPathLexer1.and();
      xPathLexer1.dollar();
      xPathLexer2.pipe();
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      xPathLexer3.dollar();
      xPathLexer3.equals();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer7.leftBracket();
      xPathLexer4.mod();
      Token token3 = xPathLexer4.or();
      assertNull(token3);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.554757345406144
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.notEquals();
      token3.toString();
      xPathLexer0.currentPosition();
      token2.toString();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token4.toString();
      token2.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (EE)");
      xPathLexer1.whitespace();
      token1.toString();
      token2.toString();
      xPathLexer0.star();
      xPathLexer1.equals();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.equals();
      xPathLexer1.rightBracket();
      xPathLexer0.plus();
      xPathLexer1.slashes();
      Token token5 = xPathLexer1.and();
      assertNull(token5);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.337478066928506
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (6) (N)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (6) (N)");
      Token token4 = xPathLexer3.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer1.leftParen();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.6491201792937724
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("Pk", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.colon();
      assertEquals("v", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("b5q<9xb7c]I", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.dollar();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.consume();
      xPathLexer1.consume();
      xPathLexer1.currentPosition();
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("NC){s%");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("5", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("N", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("NC){s%");
      xPathLexer4.rightParen();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer1.rightParen();
      Token token11 = xPathLexer0.rightParen();
      assertEquals(2, token11.getTokenType());
      
      xPathLexer3.mod();
      Token token12 = xPathLexer4.rightBracket();
      assertEquals(4, token12.getTokenType());
      assertEquals("C", token12.getTokenText());
      
      Token token13 = xPathLexer4.slashes();
      assertEquals(")", token13.getTokenText());
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5014136017331685
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("x", token1.getTokenText());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      xPathLexer0.or();
      Token token4 = xPathLexer0.colon();
      xPathLexer0.and();
      token4.toString();
      Token token5 = xPathLexer0.comma();
      String string0 = token5.toString();
      assertEquals("[ (32) (9)", string0);
      
      xPathLexer0.setPreviousToken(token5);
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      token4.toString();
      String string1 = token3.toString();
      assertEquals("[ (19) (w0)", string1);
      
      String string2 = token7.toString();
      assertEquals("[ (21) (+)", string2);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("o", token8.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (18) (M)");
      Token token9 = xPathLexer2.nextToken();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("[ (32) (9)");
      xPathLexer0.or();
      String string3 = token4.toString();
      assertEquals("[ (18) (M)", string3);
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.or();
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer1.at();
      assertEquals("[", token12.getTokenText());
      
      Token token13 = xPathLexer0.plus();
      assertEquals(5, token13.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.6626705912610644
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.at();
      xPathLexer0.identifier();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("bg-|2.290Ol-n1@]Ezd");
      Token token0 = xPathLexer2.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("|", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer3.pipe();
      Token token3 = xPathLexer3.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer2.comma();
      xPathLexer3.setPreviousToken(token4);
      assertEquals(32, token4.getTokenType());
      
      xPathLexer3.dots();
      xPathLexer3.at();
      Token token5 = xPathLexer1.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals("m", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer2.minus();
      assertEquals("|", token7.getTokenText());
      
      xPathLexer0.dots();
      Token token8 = xPathLexer0.dots();
      assertEquals("E", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer2.and();
      Token token9 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      
      char char0 = xPathLexer3.LA(111);
      assertEquals('\uFFFF', char0);
      
      xPathLexer2.at();
      xPathLexer2.div();
      Token token10 = xPathLexer2.nextToken();
      assertEquals(31, token10.getTokenType());
      
      Token token11 = xPathLexer2.at();
      assertEquals(16, token11.getTokenType());
      assertEquals("O", token11.getTokenText());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2186993861317765
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QD;&3F");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token1 = xPathLexer0.notEquals();
      token0.toString();
      token1.toString();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("[ (22) (&3)");
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("[ (15) (QD)");
      xPathLexer3.dollar();
      xPathLexer1.and();
      xPathLexer0.dollar();
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.pipe();
      xPathLexer3.plus();
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      xPathLexer1.equals();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.plus();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.plus();
      Token token2 = xPathLexer6.or();
      assertNull(token2);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.4896715763524144
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.or();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.doubleColon();
      Token token0 = xPathLexer1.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      Token token1 = xPathLexer0.dollar();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(".", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer2.mod();
      xPathLexer2.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer4.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.slashes();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer5.equals();
      xPathLexer4.relationalOperator();
      xPathLexer4.whitespace();
      Token token4 = xPathLexer5.dots();
      xPathLexer4.setPreviousToken(token4);
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer7.identifierOrOperatorName();
      assertEquals("com.werken.saxpath.Token", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("werken.saxpath.Token", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer7.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer6.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer8.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer7.slashes();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer5.and();
      Token token11 = xPathLexer3.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer8.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.595997442494154
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.at();
      xPathLexer0.not();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (EE)");
      xPathLexer1.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer1.endPosition();
      xPathLexer1.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer0.relationalOperator();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer3.pipe();
      xPathLexer0.mod();
      xPathLexer2.leftParen();
      Token token2 = xPathLexer3.div();
      assertNull(token2);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.5533767868817925
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.colon();
      assertEquals("<", token0.getTokenText());
      assertEquals(18, token0.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.relationalOperator();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("g| 3", token1.getTokenText());
      
      xPathLexer1.operatorName();
      Token token2 = xPathLexer0.dollar();
      assertEquals("g", token2.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("MLpv8bZQZr<g| 3");
      Token token3 = xPathLexer2.pipe();
      assertEquals("M", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      xPathLexer2.nextToken();
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer2.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer1.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer1.or();
      Token token8 = xPathLexer2.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer2.doubleColon();
      assertEquals("| ", token9.getTokenText());
      
      xPathLexer0.and();
      Token token10 = xPathLexer0.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer1.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4320474437592223
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@4WMbFIVB");
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token0 = xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("@4WMbFIVB");
      Token token1 = xPathLexer2.doubleColon();
      xPathLexer0.dollar();
      xPathLexer2.equals();
      token0.toString();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.comma();
      xPathLexer0.colon();
      token1.toString();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7872505873031537
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token3 = xPathLexer1.notEquals();
      assertEquals("co", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      String string0 = token4.toString();
      assertEquals("[ (6) (m)", string0);
      
      xPathLexer1.currentPosition();
      xPathLexer1.setPreviousToken(token2);
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer2.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer1.dollar();
      xPathLexer1.and();
      xPathLexer0.dollar();
      xPathLexer2.operatorName();
      xPathLexer1.dollar();
      xPathLexer0.div();
      XPathLexer xPathLexer3 = new XPathLexer("5v");
      Token token7 = xPathLexer1.pipe();
      assertEquals("e", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer1.nextToken();
      Token token8 = xPathLexer1.slashes();
      assertEquals("r", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("5", token9.getTokenText());
      
      xPathLexer1.equals();
      Token token10 = xPathLexer3.nextToken();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token12 = xPathLexer5.doubleColon();
      assertEquals(19, token12.getTokenType());
      assertEquals("co", token12.getTokenText());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals("e", token13.getTokenText());
      assertEquals(3, token13.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token14 = xPathLexer6.rightParen();
      assertEquals(2, token14.getTokenType());
      
      Token token15 = xPathLexer1.dots();
      assertEquals(14, token15.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.113993632979009
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.mod();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer(" dxew0M9+o");
      xPathLexer1.consume();
      xPathLexer0.currentPosition();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.slashes();
      xPathLexer1.getPreviousToken();
      xPathLexer1.plus();
      xPathLexer2.relationalOperator();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      xPathLexer0.dots();
      xPathLexer1.at();
      xPathLexer1.plus();
      Token token0 = xPathLexer2.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.3172032566725922
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = "QD;&3F";
      XPathLexer xPathLexer0 = new XPathLexer("QD;&3F");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token1 = xPathLexer0.notEquals();
      token0.toString();
      token1.toString();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer("[ (22) (&3)");
      xPathLexer2.rightBracket();
      XPathLexer xPathLexer3 = new XPathLexer("[ (15) (QD)");
      xPathLexer3.dollar();
      xPathLexer1.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("QD;&3F");
      XPathLexer xPathLexer6 = new XPathLexer("");
      xPathLexer3.number();
      xPathLexer6.nextToken();
      xPathLexer6.dollar();
      xPathLexer3.and();
      // Undeclared exception!
      try { 
        xPathLexer4.LA((-18));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.2845419289068438
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      Token token1 = xPathLexer0.star();
      assertEquals("x", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("ew", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer1.and();
      Token token3 = xPathLexer0.dollar();
      assertEquals("0", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.nextToken();
      Token token5 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer3.equals();
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer3.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals("+", token8.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7787262101395658
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("MLv8bZQZr<g| 3");
      xPathLexer1.operatorName();
      xPathLexer1.dollar();
      xPathLexer0.div();
      XPathLexer xPathLexer2 = new XPathLexer("`uC4]Sc39m+a+]qhr}6");
      xPathLexer2.pipe();
      xPathLexer1.nextToken();
      xPathLexer1.slashes();
      xPathLexer0.dollar();
      xPathLexer1.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer1.identifier();
      xPathLexer1.doubleColon();
      xPathLexer1.and();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer2.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.406852197767943
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@4WMbFIVB");
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.number();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume();
      xPathLexer0.setXPath("@4WMbFIVB");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      Token token0 = new Token(32, "", 1935, 28);
      String string0 = "w*k";
      XPathLexer xPathLexer1 = new XPathLexer("w*k");
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("w*k");
      xPathLexer2.endPosition();
      XPathLexer xPathLexer3 = new XPathLexer("Wa2!oaAA[J%1{");
      xPathLexer3.nextToken();
      xPathLexer1.consume((-53));
      // Undeclared exception!
      try { 
        xPathLexer1.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.688331918915611
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(" ", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("w0", token4.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      Token token5 = xPathLexer0.dollar();
      assertEquals("9", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      xPathLexer0.endPosition();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      xPathLexer0.relationalOperator();
      String string0 = token6.toString();
      assertEquals("[ (17) (+)", string0);
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("Ygg0X3i^Fh");
      Token token8 = xPathLexer0.minus();
      assertEquals(6, token8.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.setPreviousToken(token6);
      xPathLexer1.literal();
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertEquals("", token9.getTokenText());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer1.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.2164651660718557
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("M", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.equals();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (21) (<)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (15) (v8bZQZr)", string1);
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("g", token4.getTokenText());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("|", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(" ", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer0.pipe();
      assertEquals("3", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.plus();
      xPathLexer0.relationalOperator();
      xPathLexer1.dollar();
      xPathLexer1.equals();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer1.leftParen();
      assertEquals(1, token11.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.2837289946928305
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.not();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer3.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer2.plus();
      XPathLexer xPathLexer6 = new XPathLexer("[ (22) (|m)");
      xPathLexer3.nextToken();
      xPathLexer4.dollar();
      xPathLexer1.equals();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer6.plus();
      xPathLexer3.plus();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token1 = xPathLexer8.or();
      assertNull(token1);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6290615727841886
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token0 = xPathLexer0.not();
      assertEquals("p", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.dollar();
      Token token1 = xPathLexer0.colon();
      assertEquals("<", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("T");
      xPathLexer2.pipe();
      Token token3 = xPathLexer3.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer3.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer2.equals();
      assertEquals(21, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("T");
      Token token6 = xPathLexer4.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("T", token6.getTokenText());
      
      xPathLexer4.identifierOrOperatorName();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.identifier();
      Token token7 = xPathLexer4.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer0.and();
      xPathLexer4.rightParen();
      Token token8 = xPathLexer2.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer2.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer3.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.star();
      assertEquals(20, token11.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.481475040494917
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.notEquals();
      token3.toString();
      xPathLexer0.currentPosition();
      token2.toString();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token4.toString();
      token2.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (EE)");
      xPathLexer1.whitespace();
      token1.toString();
      token2.toString();
      xPathLexer0.star();
      xPathLexer1.equals();
      xPathLexer1.minus();
      xPathLexer0.whitespace();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.equals();
      xPathLexer1.rightBracket();
      xPathLexer1.slashes();
      xPathLexer1.and();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer1.and();
      assertNull(token5);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.7307398875442335
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals("A", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.whitespace();
      Token token2 = xPathLexer0.notEquals();
      String string0 = token2.toString();
      assertEquals("[ (22) (m,)", string0);
      
      xPathLexer0.currentPosition();
      token1.toString();
      Token token3 = xPathLexer0.identifierOrOperatorName();
      token3.toString();
      String string1 = token3.toString();
      assertEquals("[ (15) (EEh8Ul0)", string1);
      
      String string2 = token1.toString();
      assertEquals("[ (-2) ()", string2);
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("=", token4.getTokenText());
      
      xPathLexer0.and();
      Token token5 = xPathLexer0.dollar();
      assertEquals(",", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("0", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("E", token7.getTokenText());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.star();
      xPathLexer0.setPreviousToken(token9);
      xPathLexer0.at();
      xPathLexer0.whitespace();
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      char char0 = xPathLexer0.LA(1558);
      assertEquals('\uFFFF', char0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token13 = xPathLexer1.at();
      assertEquals(16, token13.getTokenType());
      
      xPathLexer1.div();
      Token token14 = xPathLexer1.nextToken();
      assertEquals((-1), token14.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6581745748325378
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(" ", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.rightParen();
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("w0", token4.getTokenText());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.colon();
      assertEquals("M", token5.getTokenText());
      
      Token token6 = xPathLexer0.not();
      assertEquals("9", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("+", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.div();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token11 = xPathLexer0.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.minus();
      assertEquals(6, token13.getTokenType());
      
      xPathLexer0.rightParen();
      Token token14 = xPathLexer0.doubleColon();
      assertEquals(19, token14.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token15 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token15.getTokenType());
      
      Token token16 = xPathLexer2.dots();
      assertEquals(13, token16.getTokenType());
      
      Token token17 = xPathLexer2.rightParen();
      assertEquals(2, token17.getTokenType());
      
      xPathLexer1.getPreviousToken();
      xPathLexer1.and();
      char char0 = xPathLexer2.LA(1284);
      assertEquals('\uFFFF', char0);
      
      Token token18 = xPathLexer2.at();
      assertEquals(16, token18.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6409037333129985
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("qCBJff}z+5u#fVM9J");
      xPathLexer0.at();
      Token token0 = xPathLexer0.identifier();
      Token token1 = xPathLexer0.whitespace();
      Token token2 = xPathLexer0.minus();
      token2.toString();
      token2.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.identifierOrOperatorName();
      token3.toString();
      token1.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) ()");
      xPathLexer1.colon();
      token0.toString();
      token1.toString();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer2.plus();
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      xPathLexer3.nextToken();
      xPathLexer0.dollar();
      xPathLexer2.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.plus();
      xPathLexer0.plus();
      xPathLexer3.or();
      Token token4 = xPathLexer3.operatorName();
      assertNull(token4);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.5965605696404757
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.or();
      Token token0 = xPathLexer0.not();
      assertEquals("p", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.dollar();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      xPathLexer1.operatorName();
      xPathLexer1.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer1.operatorName();
      xPathLexer0.dollar();
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("MLpv8bZQZr<g| 3");
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("M", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer2.dollar();
      assertEquals("<", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("|", token6.getTokenText());
      
      xPathLexer1.leftBracket();
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer0.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals(" 3", token9.getTokenText());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer2.dots();
      assertEquals("g", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.3693821196946767
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.mod();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-2152));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4512471421737254
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.at();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("V", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      token2.toString();
      Token token3 = xPathLexer0.identifier();
      Token token4 = xPathLexer0.at();
      assertEquals("=", token4.getTokenText());
      
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals("E", token5.getTokenText());
      
      String string0 = token3.toString();
      assertEquals("[ (15) (EEh8Ul0)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer1.dollar();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (22) (m,)");
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.operatorName();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.doubleColon();
      assertEquals(19, token12.getTokenType());
      
      Token token13 = xPathLexer1.plus();
      assertEquals(5, token13.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token14 = xPathLexer4.star();
      assertEquals(20, token14.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token15 = xPathLexer5.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.633401488368874
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.notEquals();
      token3.toString();
      token3.toString();
      xPathLexer0.currentPosition();
      token2.toString();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token4.toString();
      token2.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (EE)");
      xPathLexer1.whitespace();
      token1.toString();
      token2.toString();
      xPathLexer0.star();
      xPathLexer1.setXPath("@[rk-iT2t$pd-E*6(");
      xPathLexer1.equals();
      xPathLexer1.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.equals();
      xPathLexer1.rightBracket();
      xPathLexer0.plus();
      xPathLexer1.slashes();
      Token token5 = xPathLexer1.and();
      assertNull(token5);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.6022010372740705
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(" ", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("d", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("e", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      xPathLexer0.or();
      Token token5 = xPathLexer0.colon();
      xPathLexer0.and();
      token5.toString();
      Token token6 = xPathLexer0.comma();
      String string0 = token6.toString();
      assertEquals("[ (32) (9)", string0);
      
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.equals();
      String string1 = token5.toString();
      assertEquals("[ (18) (M)", string1);
      
      String string2 = token4.toString();
      assertEquals("[ (19) (w0)", string2);
      
      String string3 = token7.toString();
      assertEquals("[ (21) (+)", string3);
      
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(" dxew0M9+o");
      Token token10 = xPathLexer2.nextToken();
      assertEquals(15, token10.getTokenType());
      
      xPathLexer2.equals();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.doubleColon();
      Token token11 = xPathLexer1.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      xPathLexer1.rightParen();
      Token token12 = xPathLexer0.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.175818230730584
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.dollar();
      xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.nextToken();
      xPathLexer2.dollar();
      xPathLexer2.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer2.plus();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.36281270756957
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("AV", token0.getTokenText());
      
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      assertEquals("|", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (22) (m,)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.identifierOrOperatorName();
      token3.toString();
      token3.toString();
      String string1 = token3.toString();
      assertEquals("[ (15) (EEh8Ul0)", string1);
      
      xPathLexer0.leftParen();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("E", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer2.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.653221672632002
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.not();
      assertEquals("V", token1.getTokenText());
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.notEquals();
      String string0 = token2.toString();
      assertEquals("[ (22) (m,)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.dollar();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("E", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.equals();
      xPathLexer3.relationalOperator();
      xPathLexer3.whitespace();
      xPathLexer0.setPreviousToken(token3);
      assertEquals("=", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      Token token6 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer3.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer3.and();
      Token token12 = xPathLexer3.whitespace();
      assertEquals((-2), token12.getTokenType());
      
      Token token13 = xPathLexer1.doubleColon();
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.2295174392251824
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer2.dollar();
      Token token2 = xPathLexer0.colon();
      assertEquals("x", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer1.dollar();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("?|ld>8tM+Cz");
      Token token4 = xPathLexer3.leftParen();
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer(" dxew0M9+o");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("|", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer4.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer4.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer1.dots();
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.9677929092971476
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.notEquals();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer2.consume(1);
      xPathLexer0.colon();
      XPathLexer xPathLexer3 = new XPathLexer("{?>KerA");
      xPathLexer3.identifierOrOperatorName();
      xPathLexer1.identifier();
      xPathLexer3.rightBracket();
      xPathLexer3.minus();
      xPathLexer3.doubleColon();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer1.slashes();
      xPathLexer2.hasMoreChars();
      xPathLexer2.getXPath();
      xPathLexer2.consume((-660));
      XPathLexer xPathLexer4 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.7605491261631374
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wtKQ%0?s[CD8Km/I");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.minus();
      String string0 = token3.toString();
      assertEquals("[ (6) (0)", string0);
      
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("?", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      String string1 = token5.toString();
      assertEquals("[ (26) (s)", string1);
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer3.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer3.setPreviousToken(token5);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer2.nextToken();
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer3.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer2.and();
      Token token12 = xPathLexer2.whitespace();
      assertEquals((-2), token12.getTokenType());
      
      Token token13 = xPathLexer3.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals("m/I", token14.getTokenText());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.28699096930307
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token2 = new Token(5, "AV|m,EEh8Ul0=,0E", 5, 5);
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (EE)");
      xPathLexer1.endPosition();
      xPathLexer1.nextToken();
      xPathLexer0.consume((-2586));
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.consume(5);
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4680735281886386
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("|", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      String string0 = token3.toString();
      assertEquals("[ (22) (m,)", string0);
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("E", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("*lkT'^ekQ-cB_n^");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("8", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals("*", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals("U", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("l0", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer3.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals("=", token12.getTokenText());
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals(",0", token13.getTokenText());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.3365411347933778
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.notEquals();
      token1.toString();
      token1.toString();
      xPathLexer0.currentPosition();
      token1.toString();
      xPathLexer0.setPreviousToken(token1);
      token1.toString();
      token0.toString();
      xPathLexer0.leftParen();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.doubleColon();
      Token token2 = new Token(5, "AV|m,EEh8Ul0=,0E", 5, 5);
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("[ (16) (|)");
      xPathLexer1.endPosition();
      xPathLexer1.nextToken();
      xPathLexer0.consume((-2619));
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.consume(5);
      xPathLexer1.equals();
      xPathLexer1.rightBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.or();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.3978104550323496
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      assertEquals("<", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      String string0 = token0.toString();
      assertEquals("[ (6) (2)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("]", token4.getTokenText());
      
      Token token5 = xPathLexer1.dollar();
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (6) (2)");
      xPathLexer0.equals();
      xPathLexer1.and();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      xPathLexer4.leftBracket();
      xPathLexer4.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.rightParen();
      xPathLexer2.identifier();
      Token token8 = xPathLexer4.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer2.nextToken();
      assertEquals("[", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.7057460180567598
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.notEquals();
      token3.toString();
      xPathLexer0.currentPosition();
      String string0 = token3.toString();
      assertEquals("[ (22) (m,)", string0);
      
      token2.toString();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token4.toString();
      token2.toString();
      Token token5 = xPathLexer0.leftParen();
      assertEquals("=", token5.getTokenText());
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(",", token6.getTokenText());
      
      Token token7 = xPathLexer0.leftBracket();
      assertEquals("0", token7.getTokenText());
      assertEquals(3, token7.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (EE)");
      xPathLexer1.whitespace();
      String string1 = token1.toString();
      assertEquals("[ (15) (V)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (-2) ()", string2);
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("iUjZw#(%(n+|>.P");
      Token token9 = xPathLexer2.minus();
      assertEquals("i", token9.getTokenText());
      
      xPathLexer2.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(16, token0.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token10 = xPathLexer1.nextToken();
      assertEquals(30, token10.getTokenType());
      assertEquals("15", token10.getTokenText());
      
      Token token11 = xPathLexer2.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.plus();
      Token token13 = xPathLexer1.slashes();
      assertEquals(" ", token13.getTokenText());
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.7140105091873956
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.equals();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (21) (<)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (15) (v8bZQZr)", string1);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (21) (<)");
      Token token4 = xPathLexer1.colon();
      assertEquals("[", token4.getTokenText());
      assertEquals(18, token4.getTokenType());
      
      String string2 = token1.toString();
      assertEquals("[ (26) (L)", string2);
      
      String string3 = token0.toString();
      assertEquals("[ (4) (M)", string3);
      
      Token token5 = xPathLexer1.star();
      assertEquals(20, token5.getTokenType());
      assertEquals(" ", token5.getTokenText());
      
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer("9r]3,'@J~ ");
      xPathLexer2.minus();
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer2.whitespace();
      assertEquals("", token6.getTokenText());
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals("2", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      xPathLexer1.setPreviousToken(token3);
      xPathLexer2.identifierOrOperatorName();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(")", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      xPathLexer1.rightBracket();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("g", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      Token token11 = xPathLexer4.plus();
      assertEquals(")", token11.getTokenText());
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer2.minus();
      assertEquals("]", token12.getTokenText());
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.8556988573658266
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.pipe();
      Token token3 = xPathLexer0.equals();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (21) (8)", string0);
      
      String string1 = token2.toString();
      assertEquals("[ (17) (v)", string1);
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("b", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals("Z", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("Q", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      Token token7 = xPathLexer0.relationalOperator();
      assertEquals(7, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer1.or();
      Token token8 = xPathLexer0.dots();
      assertEquals("g", token8.getTokenText());
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      assertEquals("|", token9.getTokenText());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(" ", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.1972245773362196
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.58815928901206
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.comma();
      assertEquals("<", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.consume();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("xb", token2.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.and();
      Token token4 = xPathLexer0.dollar();
      assertEquals("]", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      int int0 = xPathLexer1.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer2 = new XPathLexer("#f*}K={wk{YK");
      Token token5 = xPathLexer2.slashes();
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("f", token6.getTokenText());
      
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.operatorName();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.plus();
      assertEquals(5, token8.getTokenType());
      
      xPathLexer3.relationalOperator();
      xPathLexer2.identifierOrOperatorName();
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("*", token9.getTokenText());
      
      xPathLexer1.mod();
      Token token10 = xPathLexer3.leftParen();
      assertEquals(1, token10.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4336381700891976
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.identifier();
      xPathLexer0.at();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      token0.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      Token token2 = new Token(5, "AV|m,EEh8Ul0=,0E", 5, 5);
      xPathLexer0.notEquals();
      xPathLexer0.and();
      Token token3 = new Token(5, "AV|m,EEh8Ul0=,0E", 5, 5);
      xPathLexer0.pipe();
      xPathLexer0.endPosition();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-2586));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4692481522940293
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.dollar();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals("<", token0.getTokenText());
      
      Token token1 = xPathLexer0.not();
      assertEquals("g", token1.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("|", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer1.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(" ", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.rightParen();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.mod();
      xPathLexer0.consume();
      xPathLexer0.consume();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.minus();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("MLpv8bZQZr<g| 3");
      Token token6 = xPathLexer3.comma();
      assertEquals("M", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("MLpv8bZQZr<g| 3");
      Token token7 = xPathLexer4.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token8 = xPathLexer0.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer5.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token10 = xPathLexer6.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer4.rightParen();
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer5.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.3287592344686323
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.dollar();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("{@E4)");
      xPathLexer1.or();
      xPathLexer0.identifier();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer1.rightParen();
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.7843385540874543
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("wtKQ%0?s[CD8Km/I");
      Token token0 = xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.minus();
      token1.toString();
      token1.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.identifierOrOperatorName();
      String string0 = token0.toString();
      assertEquals("[ (16) (w)", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (6) (0)", string1);
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals("?", token3.getTokenText());
      
      Token token4 = xPathLexer0.comma();
      assertEquals("s", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("[", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(",m8!j85+O*:wbG@T");
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      token2.toString();
      String string2 = token2.toString();
      assertEquals("[ (15) ()", string2);
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      assertEquals(",", token8.getTokenText());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer2.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer1.rightParen();
      xPathLexer0.setPreviousToken(token11);
      assertEquals("8", token11.getTokenText());
      
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertNull(token12);
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.nextToken();
      Token token13 = xPathLexer3.not();
      assertEquals(23, token13.getTokenType());
      
      Token token14 = xPathLexer3.rightBracket();
      assertEquals(4, token14.getTokenType());
      
      Token token15 = xPathLexer2.slashes();
      assertEquals(11, token15.getTokenType());
      
      Token token16 = xPathLexer1.plus();
      assertEquals(5, token16.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.2661618969998991
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer2.pipe();
      xPathLexer3.plus();
      XPathLexer xPathLexer4 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.nextToken();
      xPathLexer2.dollar();
      xPathLexer3.equals();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer3.plus();
      Token token0 = xPathLexer2.or();
      assertNull(token0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.322683002407317
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.consume();
      xPathLexer0.mod();
      xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("k.8DNDvT>");
      Token token1 = xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.star();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.identifierOrOperatorName();
      token2.toString();
      xPathLexer0.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.getXPath();
      xPathLexer0.consume((-1058));
      int int0 = 1;
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.567187274046352
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLv8bZQZr<g| 3");
      xPathLexer0.consume();
      xPathLexer0.or();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      assertEquals("v", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("bZQZr<g| 3", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.mod();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("MLv8bZQZr<g| 3");
      xPathLexer0.and();
      Token token4 = xPathLexer0.dollar();
      assertEquals("Q", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("*lkT'^ekQ-cB_n^");
      Token token6 = xPathLexer3.nextToken();
      assertEquals(20, token6.getTokenType());
      assertEquals("*", token6.getTokenText());
      
      xPathLexer1.or();
      Token token7 = xPathLexer1.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("L", token8.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer1.doubleColon();
      assertEquals("v8", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("l", token10.getTokenText());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.4049260119151694
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer1.or();
      xPathLexer1.not();
      xPathLexer1.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer2.dollar();
      xPathLexer0.not();
      xPathLexer2.mod();
      xPathLexer1.consume();
      xPathLexer2.consume();
      int int0 = xPathLexer1.currentPosition();
      xPathLexer2.slashes();
      xPathLexer0.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer3.nextToken();
      xPathLexer1.equals();
      XPathLexer xPathLexer5 = new XPathLexer("W[)3d^'Pt^]_");
      xPathLexer5.rightParen();
      xPathLexer1.doubleColon();
      xPathLexer2.leftBracket();
      xPathLexer1.rightParen();
      xPathLexer2.rightParen();
      xPathLexer2.mod();
      xPathLexer1.leftParen();
      int int1 = xPathLexer4.currentPosition();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.6333770816666053
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.setPreviousToken((Token) null);
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.getXPath();
      xPathLexer0.leftBracket();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.number();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(12, int0);
      
      xPathLexer0.colon();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.2240902111457808
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.slashes();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.operatorName();
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      xPathLexer0.equals();
      xPathLexer1.getPreviousToken();
      xPathLexer0.isIdentifierStartChar('Q');
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.not();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer0.minus();
      xPathLexer3.equals();
      int int0 = xPathLexer3.currentPosition();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.1927966896663031
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer0.minus();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      xPathLexer0.leftBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("+M{_eF:U|CWOdEi5V");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("+M{_eF:U|CWOdEi5V");
      xPathLexer3.equals();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.doubleColon();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token1 = xPathLexer5.or();
      assertNull(token1);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.3528487824625646
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.at();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      
      xPathLexer0.identifier();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      String string0 = token1.toString();
      assertEquals("[ (15) (om.werken.saxpath.XPathLexer)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      xPathLexer0.dollar();
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer1.pipe();
      assertEquals(17, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("CG<NB*4mh");
      xPathLexer1.operatorName();
      xPathLexer3.identifier();
      Token token9 = xPathLexer0.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals("<", token10.getTokenText());
      assertEquals(26, token10.getTokenType());
      
      xPathLexer2.equals();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer2.plus();
      Token token12 = xPathLexer1.plus();
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer2.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4527446479949826
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      Token token2 = xPathLexer0.colon();
      xPathLexer0.and();
      String string0 = token2.toString();
      assertEquals("[ (18) (M)", string0);
      
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(5, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer0.pipe();
      assertEquals("o", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(" dxew0M9+o");
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer3.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer(" dxew0M9+o");
      Token token8 = xPathLexer3.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer4.identifierOrOperatorName();
      assertNotNull(token9);
      
      Token token10 = xPathLexer3.identifier();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer4.doubleColon();
      assertEquals(19, token11.getTokenType());
      assertEquals(" d", token11.getTokenText());
      
      xPathLexer1.and();
      XPathLexer xPathLexer5 = new XPathLexer("[ (18) (M)");
      Token token12 = xPathLexer5.rightParen();
      assertEquals("[", token12.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer6.rightParen();
      assertEquals(2, token13.getTokenType());
      
      Token token14 = xPathLexer4.dots();
      assertEquals(13, token14.getTokenType());
      assertEquals("x", token14.getTokenText());
      
      Token token15 = xPathLexer1.pipe();
      assertEquals(17, token15.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.4737502700650262
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      Token token1 = xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("w0", token4.getTokenText());
      
      xPathLexer0.operatorName();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("M", token5.getTokenText());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.whitespace();
      String string0 = token0.toString();
      assertEquals("[ (11) ( )", string0);
      
      String string1 = token1.toString();
      assertEquals("[ (3) (d)", string1);
      
      String string2 = token3.toString();
      assertEquals("[ (20) (e)", string2);
      
      xPathLexer0.star();
      xPathLexer0.pipe();
      boolean boolean0 = xPathLexer0.isIdentifierChar('Q');
      assertTrue(boolean0);
      
      Token token7 = xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token7);
      Token token8 = xPathLexer0.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer1.dots();
      Token token12 = xPathLexer1.dots();
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer0.getPreviousToken();
      assertEquals(21, token13.getTokenType());
      
      xPathLexer1.and();
      char char0 = xPathLexer1.LA(111);
      assertEquals('\uFFFF', char0);
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
      
      xPathLexer0.div();
      Token token15 = xPathLexer0.nextToken();
      assertEquals((-1), token15.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.2245049235230576
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.star();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      xPathLexer0.notEquals();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5056766645884645
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer1.rightBracket();
      xPathLexer1.dollar();
      xPathLexer0.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer1.div();
      xPathLexer0.isIdentifierStartChar('#');
      xPathLexer1.dollar();
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer4 = new XPathLexer("Wi#d&q[");
      xPathLexer2.literal();
      xPathLexer0.div();
      xPathLexer3.plus();
      Token token1 = xPathLexer2.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.2048249317306332
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer0.getPreviousToken();
      xPathLexer0.at();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.identifier();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.currentPosition();
      xPathLexer0.pipe();
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals(26, token9.getTokenType());
      
      xPathLexer0.and();
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.getPreviousToken();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer0.notEquals();
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
      
      Token token14 = xPathLexer0.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      xPathLexer0.minus();
      Token token15 = xPathLexer0.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.9785084205272367
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1829));
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.6121500734118603
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|OGl47e8'mQw%");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.minus();
      token3.toString();
      int int0 = xPathLexer0.endPosition();
      assertEquals(13, int0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token2.toString();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      token4.toString();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (16) (|)", string0);
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("[ (15) (47e8)");
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("[", token8.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (15) (OGl47e8)", string1);
      
      String string2 = token2.toString();
      assertEquals("[ (-2) ()", string2);
      
      Token token9 = xPathLexer0.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.equals();
      assertEquals(21, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("iUjZw#(%(n+|>.P");
      xPathLexer2.minus();
      xPathLexer2.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      Token token11 = xPathLexer1.nextToken();
      assertEquals("(", token11.getTokenText());
      
      Token token12 = xPathLexer2.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer1.rightBracket();
      assertEquals("1", token13.getTokenText());
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer0.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer1.whitespace();
      assertEquals((-2), token15.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.1899307732207443
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QD;&3F");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.identifier();
      xPathLexer0.at();
      Token token2 = xPathLexer0.notEquals();
      token0.toString();
      token2.toString();
      token2.toString();
      token1.toString();
      xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.colon();
      // Undeclared exception!
      try { 
        token3.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.5549047753331693
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.mod();
      xPathLexer0.number();
      xPathLexer0.dots();
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.equals();
      xPathLexer0.doubleColon();
      xPathLexer0.rightParen();
      xPathLexer0.and();
      xPathLexer0.hasMoreChars();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.3494877682170874
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.slashes();
      assertEquals(" ", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("d", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("x", token2.getTokenText());
      
      Token token3 = xPathLexer0.star();
      assertEquals("e", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals("w0", token4.getTokenText());
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer1.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      int int0 = xPathLexer4.endPosition();
      assertEquals(0, int0);
      
      XPathLexer xPathLexer5 = new XPathLexer(" dxew0M9+o");
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer6.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer0.plus();
      assertEquals("9", token10.getTokenText());
      
      xPathLexer6.relationalOperator();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token11 = xPathLexer8.identifier();
      assertEquals(15, token11.getTokenType());
      
      xPathLexer8.mod();
      Token token12 = xPathLexer6.dots();
      assertEquals(13, token12.getTokenType());
      
      xPathLexer6.leftParen();
      Token token13 = xPathLexer8.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer0.colon();
      assertEquals(18, token14.getTokenType());
      assertEquals("+", token14.getTokenText());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=3.0030111414816556
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.pipe();
      assertEquals("\"", token0.getTokenText());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("g", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      xPathLexer0.or();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("1", token3.getTokenText());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      xPathLexer0.rightBracket();
      xPathLexer0.and();
      xPathLexer0.or();
      xPathLexer0.colon();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.div();
      Token token7 = xPathLexer0.whitespace();
      assertEquals((-2), token7.getTokenType());
      
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (2) (g)", string0);
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('^');
      assertFalse(boolean0);
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.setPreviousToken(token2);
      xPathLexer0.pipe();
      xPathLexer0.literal();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer0.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.not();
      assertEquals(23, token14.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      Token token15 = xPathLexer0.pipe();
      assertEquals(17, token15.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token16 = xPathLexer0.at();
      assertEquals(16, token16.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.3233312708374667
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer0.leftBracket();
      xPathLexer0.minus();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.at();
      xPathLexer0.notEquals();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.and();
      xPathLexer0.dollar();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("`k3.X~FsHRD-FQ?]&");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      xPathLexer6.dollar();
      xPathLexer5.equals();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer4.doubleColon();
      xPathLexer1.plus();
      xPathLexer1.rightParen();
      xPathLexer2.identifier();
      Token token1 = xPathLexer6.mod();
      assertNull(token1);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.5499611744166011
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.4540140931653895
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals(" ", token0.getTokenText());
      
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.not();
      assertEquals(23, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer2.dollar();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer1.dollar();
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("?|ld>8tM+Cz");
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token4 = xPathLexer4.pipe();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("ew0M9", token5.getTokenText());
      
      Token token6 = xPathLexer4.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer3.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer4.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer0.or();
      Token token9 = xPathLexer4.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.at();
      assertEquals(16, token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals("o", token11.getTokenText());
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.0280290733074104
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.div();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-1829));
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.comma();
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.relationalOperator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.120703310789184
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      
      xPathLexer0.minus();
      Token token1 = xPathLexer0.identifier();
      assertEquals("UlPkvdb5q", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("<", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("9x", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.leftBracket();
      xPathLexer1.rightBracket();
      xPathLexer1.dollar();
      xPathLexer0.and();
      Token token4 = xPathLexer0.dollar();
      assertEquals("b", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      Token token5 = xPathLexer0.minus();
      assertEquals("7", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.pipe();
      assertEquals("c", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("+M{_eF:U|CWOdEi5V");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("]", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("+M{_eF:U|CWOdEi5V");
      Token token8 = xPathLexer4.equals();
      assertEquals(21, token8.getTokenType());
      assertEquals("+", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer5.rightParen();
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.1671090089968792
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" dxew0M9+o");
      xPathLexer0.dollar();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      xPathLexer0.getPreviousToken();
      xPathLexer0.rightParen();
      xPathLexer0.star();
      xPathLexer0.doubleColon();
      xPathLexer0.or();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.identifier();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.rightBracket();
      xPathLexer0.dollar();
      String string0 = null;
      // Undeclared exception!
      try { 
        xPathLexer1.LA((-3129));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.5638374885022106
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@4WMbFIVB");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("@", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.colon();
      assertEquals("4", token1.getTokenText());
      
      xPathLexer0.or();
      Token token2 = xPathLexer0.not();
      assertEquals("W", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("MbFIVB", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("@4WMbFIVB");
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("@4", token4.getTokenText());
      
      xPathLexer0.dollar();
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer3.consume();
      xPathLexer0.consume();
      xPathLexer1.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer4.relationalOperator();
      xPathLexer1.plus();
      Token token9 = xPathLexer3.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.pipe();
      assertEquals(17, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.mod();
      Token token11 = xPathLexer4.dots();
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token12 = xPathLexer6.at();
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer3.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer1.slashes();
      assertEquals(11, token14.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.3053846531902893
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"gg1>?N)*8,+Me&?n{");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.pipe();
      assertEquals("\"", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.div();
      Token token1 = xPathLexer0.plus();
      assertEquals("g", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("g", token2.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.slashes();
      xPathLexer0.literal();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.consume();
      xPathLexer0.consume();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(24, int0);
      
      xPathLexer0.slashes();
      Token token5 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.leftParen();
      assertEquals(1, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token10 = xPathLexer2.identifier();
      assertEquals(15, token10.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token11 = xPathLexer0.slashes();
      assertEquals(11, token11.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.doubleColon();
      Token token12 = xPathLexer3.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer2.doubleColon();
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.3233312708374667
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      assertEquals(3, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      xPathLexer0.identifier();
      Token token2 = xPathLexer0.at();
      assertEquals("<", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("9x", token3.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      String string0 = token1.toString();
      assertEquals("[ (6) (2)", string0);
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("]", token5.getTokenText());
      
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (6) (2)");
      xPathLexer1.operatorName();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("I", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      Token token10 = xPathLexer0.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      char char0 = xPathLexer1.LA(2568);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.7809930013920423
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@4WMbFIVB");
      xPathLexer0.relationalOperator();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.star();
      assertEquals("W", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals("FIVB", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.setXPath("@4WMbFIVB");
      Token token3 = xPathLexer0.slashes();
      assertEquals("@", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("4", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("W", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals("M", token6.getTokenText());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals("bF", token7.getTokenText());
      
      xPathLexer0.dollar();
      Token token8 = new Token(32, "", 1935, 28);
      XPathLexer xPathLexer1 = new XPathLexer("w*k");
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("w*k");
      XPathLexer xPathLexer3 = new XPathLexer("LET0:3S");
      Token token10 = xPathLexer0.nextToken();
      assertEquals("VB", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token12 = xPathLexer5.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token13 = xPathLexer5.doubleColon();
      assertEquals(19, token13.getTokenType());
      
      Token token14 = xPathLexer6.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      xPathLexer4.mod();
      Token token15 = xPathLexer0.at();
      assertEquals(16, token15.getTokenType());
      assertEquals("B", token15.getTokenText());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.2678266223080543
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.plus();
      assertEquals(5, token3.getTokenType());
      
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      assertNotNull(token5);
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.4550569898525967
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      xPathLexer0.at();
      xPathLexer0.identifier();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.notEquals();
      token0.toString();
      int int0 = xPathLexer0.currentPosition();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      token1.toString();
      token1.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.dollar();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("EfZ+&EA");
      xPathLexer1.equals();
      xPathLexer1.getPreviousToken();
      xPathLexer1.hasMoreChars();
      xPathLexer0.hasMoreChars();
      xPathLexer1.slashes();
      xPathLexer1.literal();
      xPathLexer0.not();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dots();
      xPathLexer0.minus();
      xPathLexer2.equals();
      int int1 = xPathLexer2.currentPosition();
      assertFalse(int1 == int0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.8208620996066316
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("st*1L}vSM1YjI/E,O");
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.equals();
      token1.toString();
      token1.toString();
      token1.toString();
      token1.toString();
      String string0 = token1.toString();
      assertEquals("[ (21) (t)", string0);
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token1);
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("L}", token3.getTokenText());
      
      xPathLexer0.or();
      Token token4 = xPathLexer0.leftParen();
      assertEquals("v", token4.getTokenText());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightParen();
      assertEquals("S", token6.getTokenText());
      
      Token token7 = xPathLexer0.comma();
      assertEquals("M", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("YjI", token9.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      Token token10 = xPathLexer0.getPreviousToken();
      assertEquals(11, token10.getTokenType());
      
      xPathLexer0.or();
      Token token11 = xPathLexer0.minus();
      assertEquals(6, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer0.whitespace();
      assertEquals("", token14.getTokenText());
      assertEquals((-2), token14.getTokenType());
      
      Token token15 = xPathLexer0.literal();
      assertNull(token15);
      
      Token token16 = xPathLexer0.plus();
      assertEquals(5, token16.getTokenType());
      
      Token token17 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token17.getTokenType());
      
      Token token18 = xPathLexer0.pipe();
      assertEquals(17, token18.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.not();
      Token token19 = xPathLexer0.not();
      assertEquals(23, token19.getTokenType());
      
      Token token20 = xPathLexer0.slashes();
      assertEquals(11, token20.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.4461818316828365
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.equals();
      token0.toString();
      xPathLexer0.number();
      token0.toString();
      token0.toString();
      xPathLexer0.minus();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.consume(0);
      xPathLexer0.colon();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      xPathLexer0.rightBracket();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      xPathLexer0.and();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.div();
      assertNull(token2);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.3356820351582053
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("MLpv8bZQZr<g| 3");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.div();
      xPathLexer1.dollar();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      xPathLexer1.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      xPathLexer0.dollar();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.nextToken();
      Token token7 = xPathLexer2.slashes();
      assertEquals(11, token7.getTokenType());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      xPathLexer3.equals();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token10 = xPathLexer2.doubleColon();
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer1.rightParen();
      assertEquals(2, token12.getTokenType());
      
      Token token13 = xPathLexer5.dots();
      assertEquals(13, token13.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.6001882813317665
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.9426146392324255
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      xPathLexer0.consume(5180);
      xPathLexer0.slashes();
      xPathLexer0.star();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.literal();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.consume(5180);
      xPathLexer0.at();
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertNotNull(token4);
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.dots();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.slashes();
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.mod();
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.div();
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.operatorName();
      xPathLexer0.or();
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.32689030109692
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fsGym>Gpr4A5EC_b!#");
      xPathLexer0.and();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("f", token0.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.plus();
      assertEquals(5, token1.getTokenType());
      assertEquals("y", token1.getTokenText());
      
      xPathLexer0.equals();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(">", token2.getTokenText());
      assertEquals(9, token2.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token3 = xPathLexer0.minus();
      assertEquals(6, token3.getTokenType());
      assertEquals("p", token3.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.consume(84);
      xPathLexer0.doubleColon();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("#Y'R-C");
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer1.equals();
      assertEquals("#", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("c44ajBDTc8lP(]ad<x/");
      xPathLexer3.div();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer1.leftBracket();
      assertEquals("Y", token8.getTokenText());
      
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("c44ajBDTc8lP(]ad<x/");
      Token token10 = xPathLexer5.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals("c", token10.getTokenText());
      
      Token token11 = xPathLexer5.literal();
      assertEquals(27, token11.getTokenType());
      assertNotNull(token11);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.3324117342596768
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.minus();
      xPathLexer0.identifier();
      xPathLexer0.at();
      token0.toString();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer0.dollar();
      xPathLexer1.dollar();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("[ (6) (N)");
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer1.equals();
      xPathLexer3.literal();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer3.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.2527831909743785
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("N2UlPkvdb5q<9xb7c]I");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("N", token0.getTokenText());
      
      Token token1 = xPathLexer0.minus();
      Token token2 = xPathLexer0.identifier();
      assertEquals("UlPkvdb5q", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("<", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("9x", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (6) (2)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.mod();
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer1.rightBracket();
      xPathLexer1.dollar();
      xPathLexer0.and();
      Token token6 = xPathLexer0.dollar();
      assertEquals("b", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("+M{_eF:U|CWOdEi5V");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("+M{_eF:U|CWOdEi5V");
      Token token8 = xPathLexer4.equals();
      assertEquals("+", token8.getTokenText());
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer3.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals("+", token10.getTokenText());
      
      Token token11 = xPathLexer3.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.dots();
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.4164294865868372
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AV|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.at();
      Token token2 = xPathLexer0.notEquals();
      String string0 = token2.toString();
      assertEquals("[ (22) (m,)", string0);
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("E", token3.getTokenText());
      
      token0.toString();
      String string1 = token1.toString();
      assertEquals("[ (16) (|)", string1);
      
      String string2 = token0.toString();
      assertEquals("[ (15) (AV)", string2);
      
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("E", token4.getTokenText());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer0.pipe();
      assertEquals("8", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (16) (|)");
      Token token7 = xPathLexer0.nextToken();
      assertEquals("Ul0=,0E", token7.getTokenText());
      
      Token token8 = xPathLexer1.equals();
      assertEquals(21, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer2.doubleColon();
      assertEquals(19, token9.getTokenType());
      assertEquals("[ ", token9.getTokenText());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer2.rightParen();
      assertEquals("(", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.4680735281886386
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("A|m,EEh8Ul0=,0E");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("A", token0.getTokenText());
      
      Token token1 = xPathLexer0.at();
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("m", token2.getTokenText());
      
      xPathLexer0.at();
      Token token3 = xPathLexer0.notEquals();
      token3.toString();
      String string0 = token3.toString();
      assertEquals("[ (22) (EE)", string0);
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("h", token4.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.and();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("*lkT'^ekQ-cB_n^");
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.dollar();
      assertEquals("l", token8.getTokenText());
      assertEquals(26, token8.getTokenType());
      
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("0", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token10 = xPathLexer0.doubleColon();
      assertEquals("=,", token10.getTokenText());
      assertEquals(19, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.6475382882450424
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|OGl47e8'5Qw%");
      Token token0 = xPathLexer0.at();
      Token token1 = xPathLexer0.identifier();
      Token token2 = xPathLexer0.whitespace();
      Token token3 = xPathLexer0.minus();
      token3.toString();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.identifierOrOperatorName();
      token4.toString();
      token2.toString();
      xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.leftBracket();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.colon();
      token1.toString();
      token2.toString();
      Token token5 = xPathLexer0.star();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("iUjZw#(%(n+|>.P");
      xPathLexer1.minus();
      xPathLexer1.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer1.not();
      xPathLexer0.rightBracket();
      Token token6 = xPathLexer0.slashes();
      assertFalse(token6.equals((Object)token5));
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.016909154599245
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("c44ajBDTc8lP(]ad<x/");
      Token token1 = xPathLexer2.nextToken();
      assertEquals("c44ajBDTc8lP", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("(]", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("$x:j*[Y");
      Token token4 = xPathLexer4.nextToken();
      assertEquals(26, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer4.leftBracket();
      assertEquals("x", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      Token token6 = xPathLexer4.rightParen();
      assertEquals(2, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
  }
}
