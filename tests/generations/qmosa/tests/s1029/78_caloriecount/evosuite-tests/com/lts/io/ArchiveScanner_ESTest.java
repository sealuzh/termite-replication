/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 03:03:45 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Ac;gMH3x|F[sP6HDdH6", "Ac;gMH3x|F[sP6HDdH6");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Ac;gMH3x|F[sP6HDdH6";
      stringArray0[5] = "Ac;gMH3x|F[sP6HDdH6";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "Ac;gMH3x|F[sP6HDdH6";
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Integer, String> function0 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, String> function1 = unaryOperator0.andThen((Function<? super Integer, ? extends String>) function0);
      unaryOperator0.apply((Integer) 2);
      vector0.add((Integer) 1);
      unaryOperator0.andThen((Function<? super Integer, ? extends String>) function1);
      Integer integer0 = new Integer(2);
      unaryOperator0.compose((Function<? super Integer, ? extends Integer>) unaryOperator1);
      unaryOperator1.apply(integer0);
      Integer integer1 = new Integer(1024);
      Integer integer2 = new Integer(1024);
      unaryOperator0.apply(integer2);
      UnaryOperator.identity();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.dirsIncluded = vector1;
      vector0.replaceAll(unaryOperator1);
      Integer integer3 = new Integer(1024);
      linkedList0.iterator();
      vector0.add(integer3);
      Integer integer4 = new Integer(1024);
      vector0.add(integer4);
      Integer integer5 = new Integer(1);
      vector0.add(integer5);
      DirectoryScanner.matchPath("Ac;gMH3x|F[sP6HDdH6", "Ac;gMH3x|F[sP6HDdH6");
      vector0.addAll((Collection<? extends Integer>) linkedList0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Ac;gMH3x|F[sP6HDdH6", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Ac;gMH3x|F[sP6HDdH6", "Ac;gMH3x|F[sP6HDdH6");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Ac;gMH3x|F[sP6HDdH6";
      stringArray0[5] = "Ac;gMH3x|F[sP6HDdH6";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "Ac;gMH3x|F[sP6HDdH6";
      archiveScanner0.includes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Integer, String> function0 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, String> function1 = unaryOperator0.andThen((Function<? super Integer, ? extends String>) function0);
      vector0.add((Integer) 1);
      unaryOperator0.andThen((Function<? super Integer, ? extends String>) function1);
      Integer integer0 = new Integer(2);
      unaryOperator0.compose((Function<? super Integer, ? extends Integer>) unaryOperator1);
      unaryOperator1.apply(integer0);
      Integer integer1 = new Integer(1024);
      Vector<ByteArrayInputStream> vector1 = new Vector<ByteArrayInputStream>();
      archiveScanner0.filesExcluded = vector1;
      Integer integer2 = new Integer(1024);
      unaryOperator0.apply(integer2);
      UnaryOperator.identity();
      vector0.replaceAll(unaryOperator1);
      Integer integer3 = new Integer(1024);
      linkedList0.iterator();
      vector0.add(integer3);
      Integer integer4 = new Integer(1024);
      vector0.add(integer4);
      Integer integer5 = new Integer(1);
      vector0.add(integer5);
      DirectoryScanner.matchPath("Ac;gMH3x|F[sP6HDdH6", "Ac;gMH3x|F[sP6HDdH6");
      vector0.addAll((Collection<? extends Integer>) linkedList0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "Ac;gMH3x|F[sP6HDdH6", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("com.lts.pest.tree.Tree", "com.lts.pest.tree.Tree");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "com.lts.pest.tree.Tree";
      stringArray0[1] = "com.lts.pest.tree.Tree";
      stringArray0[3] = "com.lts.pest.tree.Tree";
      stringArray0[4] = "com.lts.pest.tree.Tree";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "com.lts.pest.tree.Tree";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      vector1.add((Object) "com.lts.pest.tree.Tree");
      vector0.add(object0);
      Object object1 = new Object();
      vector1.add((Object) "com.lts.pest.tree.Tree");
      Object object2 = new Object();
      vector0.add(object2);
      vector0.containsAll(vector1);
      Vector<ByteArrayInputStream> vector2 = new Vector<ByteArrayInputStream>();
      archiveScanner0.filesIncluded = vector2;
      Object object3 = new Object();
      vector1.add((Object) "com.lts.pest.tree.Tree");
      vector1.add((Object) vector0);
      Object object4 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      Object object5 = new Object();
      vector1.add(object5);
      vector1.add(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer0);
      Vector<Object> vector4 = new Vector<Object>();
      Integer integer0 = new Integer((-1));
      vector0.removeElement(integer0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "com.lts.pest.tree.Tree", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("y7%#tlW", "y7%#tlW");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "y7%#tlW";
      stringArray0[1] = "y7%#tlW";
      stringArray0[2] = "y7%#tlW";
      stringArray0[3] = "y7%#tlW";
      stringArray0[4] = "y7%#tlW";
      stringArray0[5] = "y7%#tlW";
      stringArray0[6] = "y7%#tlW";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = null;
      Vector<Object> vector1 = new Vector<Object>();
      Vector<Integer> vector2 = new Vector<Integer>();
      Object object0 = new Object();
      Integer integer0 = new Integer(1);
      vector2.add(integer0);
      vector0.add(object0);
      Object object1 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector3;
      vector0.containsAll(vector1);
      Object object2 = new Object();
      vector2.trimToSize();
      Integer integer1 = new Integer((-318));
      Object object3 = new Object();
      vector1.removeAll(vector2);
      DirectoryScanner.matchPatternStart("y7%#tlW", "y7%#tlW");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer0);
      improvedFile0.toURL();
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector4 = new Vector<Object>();
      ImprovedFile improvedFile1 = new ImprovedFile("y7%#tlW", "y7%#tlW");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "y7%#tlW", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = 445;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 445);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.available();
      bufferedInputStream1.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.close();
      bufferedInputStream1.markSupported();
      pipedInputStream1.mark(407);
      pipedInputStream1.mark(445);
      pipedInputStream0.close();
      pipedInputStream0.markSupported();
      pipedInputStream1.close();
      bufferedInputStream0.skip(0L);
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1, 445);
      bufferedInputStream2.close();
      bufferedInputStream2.markSupported();
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      pipedInputStream0.close();
      dataInputStream0.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ImprovedFile improvedFile0 = new ImprovedFile("{EJV");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "!ED*tFb-q9";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      stringArray0[1] = "!ED*tFb-q9";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "h>EO'w;", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("y7%#tlW", "y7%#tlW");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "y7%#tlW";
      stringArray0[1] = "y7%#tlW";
      stringArray0[2] = "y7%#tlW";
      stringArray0[3] = "y7%#tlW";
      stringArray0[4] = "y7%#tlW";
      stringArray0[5] = "y7%#tlW";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "y7%#tlW";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = null;
      Vector<Object> vector1 = new Vector<Object>();
      Vector<Integer> vector2 = new Vector<Integer>();
      Object object0 = new Object();
      vector0.add(object0);
      Object object1 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      archiveScanner0.dirsNotIncluded = vector3;
      vector0.containsAll(vector1);
      Object object2 = new Object();
      vector2.trimToSize();
      Integer integer0 = new Integer((-318));
      Object object3 = new Object();
      vector0.add(object3);
      vector1.removeAll(vector2);
      vector1.add((Object) "y7%#tlW");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer0);
      improvedFile0.toURL();
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector4 = new Vector<Object>();
      ImprovedFile improvedFile1 = new ImprovedFile("y7%#tlW", "y7%#tlW");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "y7%#tlW", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("y7%#tlW", "y7%#tlW");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "y7%#tlW";
      stringArray0[1] = "y7%#tlW";
      stringArray0[2] = "y7%#tlW";
      stringArray0[3] = "y7%#tlW";
      stringArray0[4] = "y7%#tlW";
      stringArray0[5] = "y7%#tlW";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "y7%#tlW";
      archiveScanner0.includes = stringArray0;
      Vector<ByteArrayInputStream> vector0 = new Vector<ByteArrayInputStream>();
      archiveScanner0.filesNotIncluded = vector0;
      Vector<Object> vector1 = new Vector<Object>();
      Vector<Object> vector2 = new Vector<Object>();
      Vector<Integer> vector3 = new Vector<Integer>();
      Object object0 = new Object();
      vector1.add(object0);
      Object object1 = new Object();
      vector1.containsAll(vector2);
      Object object2 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector4;
      vector3.trimToSize();
      Integer integer0 = new Integer((-318));
      Object object3 = new Object();
      vector1.add(object3);
      vector2.removeAll(vector3);
      vector2.add((Object) "y7%#tlW");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector2.forEach(consumer0);
      improvedFile0.toURL();
      archiveScanner0.addDefaultExcludes();
      Vector<Object> vector5 = new Vector<Object>();
      ImprovedFile improvedFile1 = new ImprovedFile("y7%#tlW", "y7%#tlW");
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "y7%#tlW", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".war", "0buFA[3{iATHbiqZ1A");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-5);
      archiveScanner0.setBasedir("f]&&q4");
      stringArray0[0] = "0buF[3{iATHbiqZ1A.jar";
      stringArray0[1] = "0buFA[3{iATHbiqZ1A";
      stringArray0[2] = ".war";
      stringArray0[3] = "zI,I";
      stringArray0[6] = "0buFA[3{iATHbiqZ1A";
      archiveScanner0.setBasedir("0buFA[3{iATHbiqZ1A0user.home.jar");
      archiveScanner0.excludes = stringArray0;
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[6] = ".war";
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      stringArray0[7] = ".war";
      archiveScanner0.includes = stringArray0;
      Integer integer0 = new Integer((-365934630));
      vector0.add(integer0);
      System.setCurrentTimeMillis((-2534L));
      archiveScanner0.processArchive(improvedFile0, "0buFA[3{iATHbiqZ1A");
      try { 
        archiveScanner0.scanArchive(improvedFile0, "zI,I");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/.war/0buFA[3{iATHbiqZ1A
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".war", "0bukFA[3{iATHViqZ1A");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte) (-81);
      archiveScanner0.setBasedir(".war");
      stringArray0[0] = "0bukFA[3{iATHViqZ1A";
      stringArray0[1] = "0bukFA[3{iATHViqZ1A";
      stringArray0[2] = ".war";
      stringArray0[3] = "zI,I";
      Vector<Integer> vector0 = new Vector<Integer>();
      stringArray0[2] = ".war";
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      stringArray0[7] = ".war";
      archiveScanner0.includes = stringArray0;
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer0 = new Integer(1);
      vector1.add(integer0);
      Integer integer1 = new Integer(1911);
      unaryOperator0.apply(integer1);
      UnaryOperator.identity();
      Vector<Integer> vector2 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector2;
      vector1.replaceAll(unaryOperator0);
      vector1.add((Integer) null);
      DirectoryScanner.match(".war", "zI,I");
      vector1.addAll((Collection<? extends Integer>) vector0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, ".war", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("war", "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[2];
      stringArray0[0] = "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar";
      stringArray0[1] = "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar";
      stringArray0[3] = "zI,I";
      stringArray0[6] = "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[2] = "war";
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      Integer integer0 = new Integer((byte)0);
      vector1.add(integer0);
      stringArray0[7] = "war";
      archiveScanner0.includes = stringArray0;
      Integer integer1 = new Integer(2920);
      vector0.add(integer1);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer2 = new Integer(1);
      vector1.add(integer2);
      Integer integer3 = new Integer(2);
      vector0.add((Integer) null);
      Integer integer4 = new Integer(1);
      UnaryOperator.identity();
      vector1.replaceAll(unaryOperator0);
      vector1.add((Integer) null);
      DirectoryScanner.match("war", "zI,I");
      vector1.addAll((Collection<? extends Integer>) vector0);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "war", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".war", "0buFA[3{iATHbiqZ1A");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-5);
      archiveScanner0.setBasedir("f]&&q4");
      stringArray0[0] = "0buF[3{iATHbiqZ1A.jar";
      stringArray0[1] = "0buFA[3{iATHbiqZ1A";
      stringArray0[2] = ".war";
      stringArray0[3] = "zI,I";
      stringArray0[6] = "0buFA[3{iATHbiqZ1A";
      archiveScanner0.setBasedir("0buFA[3{iATHbiqZ1A0user.home.jar");
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[6] = ".war";
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesExcluded = vector1;
      stringArray0[7] = ".war";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer0 = new Integer((-365934630));
      vector0.add(integer0);
      System.setCurrentTimeMillis((-2534L));
      try { 
        archiveScanner0.processArchive(improvedFile0, "0buFA[3{iATHbiqZ1A");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/termite/projects/78_caloriecount/.war/0buFA[3{iATHbiqZ1A
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.533344419789668
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 473;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 473);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream1.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      bufferedInputStream1.markSupported();
      pipedInputStream1.mark(473);
      pipedInputStream1.markSupported();
      pipedInputStream1.close();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1, 473);
      bufferedInputStream2.markSupported();
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      pipedInputStream0.close();
      dataInputStream0.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ImprovedFile improvedFile0 = new ImprovedFile(",*>nOA=");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = ",*>nOA=";
      stringArray0[1] = "VED*tFb-q9";
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector0;
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, ")mi", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".war", "0buFA[3{iATHbiqZ1A");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp/b^W$ss\\?M=JQzE0rror creating temp directory 0;HQq;3n=Usn.jar");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-46);
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-117);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      stringArray0[0] = "f&$4";
      stringArray0[1] = "0buFA[3{iATHbiqZ1A";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[2] = ".war";
      stringArray0[3] = "zI,I";
      stringArray0[4] = "0buFA[3{iATHbiqZ1A";
      stringArray0[5] = "0buFA[3{iATHbiqZ1A";
      stringArray0[6] = ".war";
      stringArray0[7] = ".war";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      MockFile.createTempFile("b^W$ss?M=JQzE", "f&$4");
      improvedFile0.setReadable(true, true);
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      archiveScanner0.processArchive(improvedFile0, "rror creating temp directory 0;HQq;3n=Usn.jar");
      assertEquals("0buFA[3{iATHbiqZ1A", improvedFile0.getName());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(11L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ":b^^toLpb``Hzm5:A");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Tnx.|v^M9");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":b^^toLpb``Hzm5:A");
      MockFile mockFile0 = new MockFile("com.lts.application.fatal.createTempArea");
      mockFile0.toURL();
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(", was not recognized.", ":b^^toLpb``Hzm5:A", (File) mockFile0);
      mockFile0.renameTo(improvedFile0);
      mockFile0.toURI();
      ImprovedFile.createTempImprovedFile(":b^^toLpb``Hzm5:A", ":b^^toLpb``Hzm5:A", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-25);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[9];
      stringArray0[0] = ".ZIP";
      stringArray0[1] = "Quit application?";
      stringArray0[2] = "com.lts.io.ArchiveScanner";
      stringArray0[3] = ".tmp";
      stringArray0[4] = "fRnzbqFTzw58uNR1jbA";
      stringArray0[5] = "AukQI>m&Y= Nyh;";
      stringArray0[6] = "z3PIq,:3LG'+|$z:";
      stringArray0[7] = ".ear.jar";
      stringArray0[8] = "QNz}DK`>pu6Zm#*U1)_cr0VJ\"5w.jar.jar";
      archiveScanner0.setIncludes(stringArray0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "%k2Qx");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".war", "0buFA[3{iATHbiqZ1A");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-46);
      improvedFile0.deleteAll();
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-117);
      archiveScanner0.setBasedir("f&$4");
      stringArray0[0] = "rror creating temp directory 0;HQq;3n=Usn.jar";
      stringArray0[1] = "0buFA[3{iATHbiqZ1A";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[2] = ".war";
      stringArray0[3] = "zI,I";
      stringArray0[4] = "0buFA[3{iATHbiqZ1A";
      stringArray0[5] = "0buFA[3{iATHbiqZ1A";
      stringArray0[6] = ".war";
      stringArray0[7] = ".war";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector1 = new Vector<Object>();
      Vector<Object> vector2 = new Vector<Object>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      archiveScanner0.processFile(".zip");
      System.setCurrentTimeMillis(0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Ac;gMH3x|F[sP6HDdH6", "Ac;gMH3x|F[sP6HDdH6");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "Ac;gMH3x|F[sP6HDdH6";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "Ac;gMH3x|F[sP6HDdH6";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Integer> unaryOperator1 = UnaryOperator.identity();
      Function<Integer, String> function0 = (Function<Integer, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Integer, String> function1 = unaryOperator0.andThen((Function<? super Integer, ? extends String>) function0);
      unaryOperator1.andThen((Function<? super Integer, ? extends Integer>) unaryOperator0);
      unaryOperator0.andThen((Function<? super Integer, ? extends String>) function1);
      Integer integer0 = new Integer(2);
      unaryOperator1.apply(integer0);
      improvedFile0.createNewFile();
      Integer integer1 = new Integer(1024);
      Integer integer2 = new Integer(1024);
      unaryOperator0.apply(integer2);
      UnaryOperator.identity();
      Integer integer3 = new Integer(1024);
      linkedList0.iterator();
      Integer integer4 = new Integer(1046);
      Integer integer5 = new Integer(1);
      DirectoryScanner.match("!11c?Y1&#7Nc", "Ac;gMH3x|F[sP6HDdH6");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "Ac;gMH3x|F[sP6HDdH6");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("war", "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[12];
      stringArray0[0] = "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar";
      stringArray0[1] = "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar";
      stringArray0[3] = ".zip";
      stringArray0[6] = "com.lts.application.prompt.startup.continueDespitnCommandLine2rror12rud(v1<[xE_^}ca.jar";
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[2] = "war";
      archiveScanner0.addDefaultExcludes();
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer0 = new Integer((byte)0);
      vector1.add(integer0);
      stringArray0[7] = "war";
      archiveScanner0.includes = stringArray0;
      Integer integer1 = new Integer(2920);
      vector0.add(integer1);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator.identity();
      Integer integer2 = new Integer(1);
      vector1.add(integer2);
      Integer integer3 = new Integer(2);
      vector0.add((Integer) null);
      Integer integer4 = new Integer(1);
      UnaryOperator.identity();
      vector1.replaceAll(unaryOperator0);
      vector1.add((Integer) null);
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer5 = new Integer(3188);
      archiveScanner0.processFile("war");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      System.setCurrentTimeMillis(1L);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/78_caloriecount");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "[sB.q<7'.");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "2rud(v1<[xE_^}ca");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"_|z{T;;QDEB");
      MockFile mockFile0 = new MockFile("com.lts.applicatSon.fatal.creat&TempArea");
      mockFile0.toURL();
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory(", was not recognized.", ":b^^toLpb``Hzm5:A", (File) mockFile0);
      mockFile0.renameTo(improvedFile0);
      mockFile0.toURI();
      ImprovedFile.createTempImprovedFile("\"_|z{T;;QDEB", "2rud(v1<[xE_^}ca", improvedFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-25);
      mockFile0.mkdirs();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, ", was not recognized.");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("U<.4Um8n~LV4[(");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[25];
      stringArray0[0] = "U<.4Um8n~LV4[(";
      stringArray0[1] = "U<.4Um8n~LV4[(";
      stringArray0[16] = "U<.4Um8n~LV4[(";
      stringArray0[4] = "U<.4Um8n~LV4[(";
      archiveScanner0.excludes = stringArray0;
      stringArray0[6] = "U<.4Um8n~LV4[(";
      archiveScanner0.includes = stringArray0;
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Vector<Object> vector1 = new Vector<Object>();
      Object object1 = new Object();
      vector1.add((Object) "U<.4Um8n~LV4[(");
      vector0.add((Object) null);
      vector0.add(object1);
      vector0.add((Object) "U<.4Um8n~LV4[(");
      Object object2 = new Object();
      vector1.add((Object) "U<.4Um8n~LV4[(");
      Object object3 = new Object();
      vector0.add(object3);
      vector0.containsAll(vector1);
      Object object4 = new Object();
      vector1.add((Object) "U<.4Um8n~LV4[(");
      vector1.add((Object) vector0);
      Object object5 = new Object();
      Object object6 = new Object();
      vector1.add(object5);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer0);
      vector1.add(object6);
      Consumer<Object> consumer1 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector1.forEach(consumer1);
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("U<.4Um8n~LV4[(");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 444);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.available();
      bufferedInputStream1.markSupported();
      bufferedInputStream1.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      pipedInputStream1.close();
      pipedInputStream1.mark(444);
      pipedInputStream1.mark(444);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream1.connect(pipedOutputStream0);
      pipedInputStream0.close();
      pipedInputStream0.markSupported();
      pipedInputStream1.close();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1, 444);
      bufferedInputStream2.close();
      pipedInputStream0.mark(444);
      bufferedInputStream2.markSupported();
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      pipedInputStream0.close();
      dataInputStream0.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ImprovedFile improvedFile0 = new ImprovedFile("{EJV");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      pipedInputStream0.markSupported();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "!ED*Ttb-q";
      stringArray0[1] = "!ED*Ttb-q";
      archiveScanner0.includes = stringArray0;
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("{EJV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 445);
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream0.markSupported();
      bufferedInputStream0.available();
      bufferedInputStream1.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      bufferedInputStream1.markSupported();
      pipedInputStream1.mark(445);
      pipedInputStream0.close();
      pipedInputStream0.markSupported();
      pipedInputStream1.close();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1, 445);
      bufferedInputStream2.close();
      bufferedInputStream2.markSupported();
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      pipedInputStream0.close();
      dataInputStream0.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ImprovedFile improvedFile0 = new ImprovedFile("{EJV");
      improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "!ED*tFb-q9";
      stringArray0[1] = "!ED*tFb-q9";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4881075087522722
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 473);
      bufferedInputStream0.mark((-591));
      BufferedInputStream bufferedInputStream1 = new BufferedInputStream(pipedInputStream0);
      bufferedInputStream1.close();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      bufferedInputStream0.available();
      bufferedInputStream1.markSupported();
      pipedInputStream1.markSupported();
      pipedInputStream1.markSupported();
      pipedInputStream1.close();
      pipedInputStream0.markSupported();
      bufferedInputStream1.markSupported();
      BufferedInputStream bufferedInputStream2 = new BufferedInputStream(bufferedInputStream1, 473);
      bufferedInputStream2.markSupported();
      bufferedInputStream2.markSupported();
      BufferedInputStream bufferedInputStream3 = new BufferedInputStream(bufferedInputStream2);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      pipedInputStream0.close();
      dataInputStream0.markSupported();
      DataInputStream dataInputStream1 = new DataInputStream(dataInputStream0);
      ImprovedFile improvedFile0 = new ImprovedFile(",*>nOA=");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile1, "VED*tFb-q9", false);
      String[] stringArray0 = new String[2];
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.filesNotIncluded = vector0;
      stringArray0[0] = "VED*tFb-q9";
      stringArray0[1] = "VED*tFb-q9";
      archiveScanner0.includes = stringArray0;
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "mi", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ImprovedFile improvedFile0 = new ImprovedFile("6dToCy");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(">a 7c8F ");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "6dToCy");
      charBuffer0.codePoints();
      CharBuffer.wrap((CharSequence) charBuffer0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream1);
      mockPrintStream2.close();
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      mockPrintStream0.println(charArray0);
      MockPrintStream mockPrintStream3 = new MockPrintStream("tempdir0.jar");
      MockPrintStream mockPrintStream4 = new MockPrintStream(byteArrayOutputStream0, true);
      mockPrintStream4.print((-303.6703590833));
      mockPrintStream1.append((CharSequence) ">a 7c8F ");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      ImprovedFile improvedFile1 = improvedFile0.createTempDir(";YytO~I", ".jar");
      archiveScanner0.isArchive(improvedFile1);
      long long0 = 34L;
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[11];
      byte[] byteArray0 = new byte[12];
      stringArray0[0] = "IO error scanning direct,ry 1, qoes not exist in cla!s .jar";
      stringArray0[1] = "IO error scanning direct,ry 1, qoes not exist in cla!s .jar";
      stringArray0[6] = "IO error scanning direct,ry 1, qoes not exist in cla!s .jar";
      Vector<Integer> vector0 = new Vector<Integer>();
      stringArray0[2] = "IO error scanning direct,ry 1, qoes not exist in cla!s .jar";
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer0 = new Integer((byte)0);
      vector1.add(integer0);
      Integer integer1 = new Integer(2901);
      vector0.add((Integer) null);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer2 = new Integer(2901);
      Integer integer3 = new Integer((-472));
      vector0.add(integer3);
      UnaryOperator.identity();
      vector1.listIterator();
      Integer integer4 = new Integer(2901);
      vector0.replaceAll(unaryOperator0);
      vector1.add((Integer) null);
      vector1.addAll((Collection<? extends Integer>) vector0);
      vector1.add((Integer) null);
      vector1.add((Integer) null);
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, ".war");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ImprovedFile improvedFile0 = new ImprovedFile("<75rUwyRFra0Wn.#");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream("6dToCy");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ".war");
      charBuffer0.codePoints();
      CharBuffer.wrap((CharSequence) "<75rUwyRFra0Wn.#");
      MockPrintStream mockPrintStream1 = new MockPrintStream(byteArrayOutputStream0, true);
      mockPrintStream1.close();
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = '8';
      mockPrintStream1.println(charArray0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("<75rUwyRFra0Wn.#");
      MockPrintStream mockPrintStream3 = new MockPrintStream(byteArrayOutputStream0, true);
      mockPrintStream3.print(2903.552003);
      mockPrintStream0.append((CharSequence) charBuffer0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      long long0 = 1586L;
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ImprovedFile improvedFile0 = new ImprovedFile("6dToCy");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(">a 7c8F ");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "6dToCy");
      charBuffer0.codePoints();
      CharBuffer.wrap((CharSequence) charBuffer0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      char[] charArray0 = new char[2];
      mockPrintStream1.close();
      charArray0[0] = '8';
      charArray0[1] = 'g';
      mockPrintStream1.println(charArray0);
      MockPrintStream mockPrintStream2 = new MockPrintStream("6dToCy");
      MockPrintStream mockPrintStream3 = new MockPrintStream(mockPrintStream0, true);
      mockPrintStream3.print(2903.552003);
      mockPrintStream3.append((CharSequence) "6dToCy");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      long long0 = 1497L;
      System.setCurrentTimeMillis(long0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[13];
      stringArray0[1] = stringArray0[0];
      stringArray0[3] = stringArray0[1];
      stringArray0[4] = stringArray0[1];
      stringArray0[6] = stringArray0[4];
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Object object1 = new Object();
      vector0.add((Object) stringArray0[4]);
      Object object2 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate0.or(predicate1);
      Predicate.isEqual((Object) stringArray0[4]);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate.isEqual((Object) stringArray0[1]);
      predicate2.or(predicate3);
      vector0.removeIf(predicate2);
      Object object3 = new Object();
      vector0.add(object3);
      vector0.containsAll(vector0);
      Object object4 = new Object();
      vector0.add((Object) stringArray0[0]);
      vector0.add((Object) vector0);
      Object object5 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      Object object6 = new Object();
      Object object7 = new Object();
      vector0.add(object7);
      vector0.containsAll(vector1);
      vector0.add(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      Vector<Object> vector2 = new Vector<Object>();
      ImprovedFile improvedFile0 = new ImprovedFile("Z@'&`}sayq 21CPWTwP\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[13];
      stringArray0[1] = stringArray0[0];
      stringArray0[3] = stringArray0[1];
      stringArray0[4] = stringArray0[1];
      stringArray0[6] = stringArray0[4];
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      Object object1 = new Object();
      vector0.add((Object) stringArray0[4]);
      Object object2 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.test(stringArray0[3]);
      Object object3 = new Object();
      Object object4 = new Object();
      vector0.add(object4);
      vector0.add(object3);
      vector0.containsAll(vector0);
      Object object5 = new Object();
      vector0.add((Object) stringArray0[0]);
      vector0.add((Object) vector0);
      Object object6 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      Object object7 = new Object();
      vector0.add(object6);
      Object object8 = new Object();
      vector0.add(object8);
      vector0.add(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      Vector<Object> vector2 = new Vector<Object>();
      ImprovedFile improvedFile0 = new ImprovedFile("yyyy-MM-dd@HH:mm:ss", "h0-b9O-pf");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.haveSlowResults = true;
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      //  // Unstable assertion: assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("Area", "Area");
      String[] stringArray0 = new String[13];
      stringArray0[0] = "Area";
      stringArray0[1] = "Area";
      stringArray0[5] = "Area";
      Vector<Object> vector0 = new Vector<Object>();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      vector1.add((Object) "Area");
      Object object1 = new Object();
      vector1.add((Object) stringArray0[4]);
      Object object2 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate1.and(predicate0);
      predicate2.or(predicate1);
      vector1.add((Object) predicate0);
      predicate1.or(predicate2);
      predicate1.negate();
      predicate0.negate();
      Object object3 = new Object();
      vector0.add((Object) "Area");
      Object object4 = new Object();
      vector1.add((Object) stringArray0[4]);
      Object object5 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      Object object6 = new Object();
      vector0.add(object6);
      Object object7 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      vector3.add((Object) "not implemented");
      Object object8 = new Object();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "Area", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/Area/Area
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ImprovedFile improvedFile0 = new ImprovedFile("6dToCy");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(">a 7c8F ");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "6dToCy");
      charBuffer0.codePoints();
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      char[] charArray0 = new char[3];
      charArray0[0] = '8';
      charArray0[1] = '_';
      charArray0[2] = '_';
      mockPrintStream0.println(charArray0);
      MockPrintStream mockPrintStream2 = new MockPrintStream(improvedFile0);
      MockPrintStream mockPrintStream3 = new MockPrintStream(mockPrintStream1, false);
      mockPrintStream0.println(0.0);
      PrintStream printStream0 = mockPrintStream0.append((CharSequence) charBuffer1);
      ImprovedFile.copy(byteArrayInputStream0, printStream0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      //  // Unstable assertion: assertEquals(2, int0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.432813901625505
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(424);
      pipedInputStream0.close();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 424);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.clone();
      byte[] byteArray0 = new byte[1];
      pipedInputStream0.markSupported();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
      vector0.add((Object) pipedInputStream1);
      ImprovedFile improvedFile0 = new ImprovedFile("!");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String[] stringArray0 = new String[8];
      byte[] byteArray0 = new byte[12];
      stringArray0[0] = "k>_&x1ik3|Q9583?";
      stringArray0[1] = "k>_&x1ik3|Q9583?";
      stringArray0[6] = "k>_&x1ik3|Q9583?";
      Vector<Integer> vector0 = new Vector<Integer>();
      stringArray0[2] = "k>_&x1ik3|Q9583?";
      Vector<Integer> vector1 = new Vector<Integer>();
      Integer integer0 = new Integer((byte)0);
      vector1.add(integer0);
      stringArray0[7] = "k>_&x1ik3|Q9583?";
      vector0.add((Integer) null);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer1 = new Integer(2901);
      Integer integer2 = new Integer(2901);
      Integer integer3 = unaryOperator0.apply(integer2);
      Integer integer4 = new Integer((-472));
      vector0.add(integer4);
      UnaryOperator.identity();
      Integer integer5 = new Integer((-472));
      vector1.add(integer5);
      Integer integer6 = new Integer(2901);
      vector0.replaceAll(unaryOperator0);
      vector1.add(integer3);
      Integer integer7 = new Integer(2901);
      vector1.add((Integer) null);
      vector1.addAll((Collection<? extends Integer>) vector0);
      vector1.add((Integer) null);
      vector1.add((Integer) null);
      ImprovedFile improvedFile0 = new ImprovedFile("applicationDirectory", "kj[M7]");
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0);
      File file0 = ImprovedFile.buildName("J`qI,A@8Keg", 2901, "k>_&x1ik3|Q9583?", improvedFile1);
      ImprovedFile improvedFile2 = ImprovedFile.createTempDirectory("J`qI,A@8Keg", "k>_&x1ik3|Q9583?", file0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile2);
      int int0 = archiveScanner0.toFileType(improvedFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[13];
      stringArray0[1] = stringArray0[0];
      stringArray0[3] = stringArray0[1];
      stringArray0[4] = stringArray0[1];
      stringArray0[6] = stringArray0[4];
      Vector<Object> vector0 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add(object0);
      Object object1 = new Object();
      vector0.add((Object) stringArray0[4]);
      Object object2 = new Object();
      Predicate<Object> predicate0 = Predicate.isEqual(object2);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate1.or(predicate0);
      Predicate.isEqual((Object) stringArray0[1]);
      predicate2.or(predicate3);
      vector0.removeIf(predicate2);
      Object object3 = new Object();
      vector0.add(object3);
      vector0.containsAll(vector0);
      Object object4 = new Object();
      vector0.add((Object) stringArray0[0]);
      vector0.add((Object) vector0);
      Object object5 = new Object();
      Vector<Object> vector1 = new Vector<Object>();
      Object object6 = new Object();
      Object object7 = new Object();
      vector0.add(object7);
      vector0.add(object0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      Vector<Object> vector2 = new Vector<Object>();
      ImprovedFile improvedFile0 = new ImprovedFile("Z@'&`}say21CPWTwP\"");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("0buFA[3{iATHbiqZ1A", "yM%#tw");
      Vector<Integer> vector0 = new Vector<Integer>();
      vector0.add((Integer) null);
      vector0.add((Integer) null);
      UnaryOperator<Integer> unaryOperator0 = UnaryOperator.identity();
      Integer integer0 = new Integer(2901);
      Integer integer1 = new Integer(2901);
      Integer integer2 = new Integer((-277673703));
      Integer integer3 = unaryOperator0.apply(integer2);
      Integer integer4 = new Integer((-468));
      vector0.add(integer3);
      UnaryOperator.identity();
      Integer integer5 = new Integer((-468));
      vector0.add((Integer) null);
      Integer integer6 = new Integer(852);
      vector0.replaceAll(unaryOperator0);
      vector0.add(integer4);
      Integer integer7 = new Integer((-786));
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      vector0.addAll((Collection<? extends Integer>) linkedList0);
      vector0.add((Integer) null);
      Integer integer8 = new Integer(852);
      vector0.add(integer8);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      System.setCurrentTimeMillis((-786));
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(0, int0);
  }
}
