/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 01:32:35 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.function.Consumer;
import java.util.regex.PatternSyntaxException;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.error.StandardException;
import org.apache.derby.iapi.services.io.ArrayInputStream;
import org.apache.derby.iapi.services.io.FormatableHashtable;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.impl.services.uuid.BasicUUID;
import org.apache.derby.impl.sql.catalog.DataDictionaryImpl;
import org.apache.derby.impl.sql.compile.AllResultColumn;
import org.apache.derby.impl.sql.compile.InsertNode;
import org.apache.derby.impl.sql.compile.ModifyColumnNode;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.apache.derby.impl.store.raw.RawStore;
import org.apache.derby.impl.store.raw.xact.ConcurrentXactFactory;
import org.apache.derby.impl.store.raw.xact.GlobalXactId;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.CompositeDBObject;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.databene.jdbacl.model.TableContainerSupport;
import org.databene.jdbacl.model.TableHolder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.wire.DatabaseParameterBufferImp;
import org.firebirdsql.gds.impl.wire.JavaGDSImpl;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBCallableStatement;
import org.firebirdsql.jdbc.InternalTransactionCoordinator;
import org.h2.engine.SessionRemote;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.Result;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;
import org.postgresql.Driver;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.getStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      DBSchema dBSchema0 = new DBSchema("Error in executing SQL: ");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(":4", dBSchema0);
      defaultDBTable0.getCatalog();
      DBSchema dBSchema1 = new DBSchema((String) null, (DBCatalog) null);
      dBSchema1.getTables();
      dBSchema0.setCatalog((DBCatalog) null);
      dBSchema0.setCatalog((DBCatalog) null);
      DBSchema dBSchema2 = new DBSchema("RF)IZ");
      dBSchema2.isIdentical((DBObject) null);
      dBSchema0.getTriggers();
      dBSchema0.setCatalog((DBCatalog) null);
      dBSchema2.getPackages();
      dBSchema0.setCatalog((DBCatalog) null);
      dBSchema2.getPackages();
      dBSchema0.getTables();
      List<DBTable> list0 = DBUtil.dependencyOrderedTables(dBSchema0);
      assertEquals(1, list0.size());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      DBDataType dBDataType0 = DBDataType.getInstance(121, "`");
      TableContainer tableContainer0 = new TableContainer("Rg>eZBx*3?z");
      dBDataType0.isAlpha();
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.h2.command.ddl.GrantRevoke", (DBSchema) null);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Empty SQL string in executeUpdate()", defaultDBTable0, dBDataType0);
      defaultDBColumn0.getForeignKeyConstraint();
      tableContainer0.getSequences(false);
      defaultDBTable0.setDoc("`");
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("Connecting ", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      boolean boolean0 = DBUtil.containsMandatoryColumn(dBForeignKeyConstraint0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("org.databene.SQL");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VersionNumber.valueOf("SELECT 1 FROM (SELECT ");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      ConstraintDescriptorList constraintDescriptorList1 = dataDictionaryImpl0.getActiveConstraintDescriptors(constraintDescriptorList0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      VersionNumber versionNumber0 = new VersionNumber(constraintDescriptorList1, linkedList0);
      VersionNumber versionNumber1 = new VersionNumber(constraintDescriptorList0, linkedList0);
      TableContainer tableContainer0 = new TableContainer("Yn8mrAaHw0*tna%qY[");
      tableContainer0.getSchema();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("7C`eGCo>", (DBSchema) null);
      defaultDBTable0.setDoc("7C`eGCo>");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SELECT 1 FROM (SELECT ";
      stringArray0[1] = "org.apache.derby.impl.sql.compile.UpdateNode";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("/3*oJ-5B|u0?wQwxR69", false, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn(dBForeignKeyConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Column 'SELECT 1 FROM (SELECT ' not found in table '7C`eGCo>'
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVAR2.deepCopy();
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVAR3.decodeTime((byte[]) null);
      XSQLVAR xSQLVAR4 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR5 = xSQLVAR3.deepCopy();
      xSQLVAR4.copyFrom(xSQLVAR5);
      try { 
        DBUtil.nextLine(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6868977693384444
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVARArray0[1] = xSQLVAR1;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR4.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      XSQLVAR xSQLVAR6 = xSQLVAR3.deepCopy();
      xSQLVAR6.sqlname = null;
      xSQLVARArray0[4] = xSQLVAR2;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      xSQLVARArray0[5] = xSQLVAR7;
      XSQLVAR xSQLVAR8 = new XSQLVAR();
      xSQLVAR7.aliasname = null;
      xSQLVAR5.copyFrom(xSQLVAR3, false);
      xSQLVAR3.aliasname = null;
      xSQLVAR3.sqlsubtype = 12;
      xSQLVAR3.copyFrom(xSQLVAR5);
      System.setCurrentTimeMillis(0);
      DBUtil.format(simpleResultSet0);
      System.setCurrentTimeMillis(0);
      Statement statement0 = DBUtil.getStatement(simpleResultSet0);
      assertNull(statement0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/null.env.properties");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)107;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("qg", 85);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)113;
      byteArray1[1] = (byte)113;
      byteArray1[2] = (byte)35;
      byteArray1[3] = (byte)38;
      byteArray1[4] = (byte)107;
      byteArray1[5] = (byte)35;
      byteArray1[6] = (byte)38;
      byteArray1[7] = (byte)35;
      byteArray1[8] = (byte)35;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray1);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((String) null, false, false, false, false, "~mO!] c1w3%", false, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error reading environment data for 'null'
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DBUtil.checkReadOnly("SELECT 1 FROM (SELECT ", true);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/h*k3V8aud|b,+PUa,}.env.properties");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte) (-43);
      byteArray0[6] = (byte)37;
      byteArray0[7] = (byte)59;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = "6 ";
      // Undeclared exception!
      try { 
        DBUtil.connect("h*k3V8aud|b,+PUa,}", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = "OevL;)ti\"_e c#%i_";
      ErrorHandler errorHandler0 = new ErrorHandler("OevL;)ti\"_e c#%i_");
      String string1 = "USINGTEXT";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("USINGTEXT");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte) (-98);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)14;
      byteArray0[5] = (byte) (-41);
      byteArray0[6] = (byte)32;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        DBUtil.runScript("USINGTEXT", "USINGTEXT", (Connection) null, true, errorHandler0);
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(UnsupportedEncodingException e) {
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVARArray0[1] = xSQLVAR1;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR4.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      XSQLVAR xSQLVAR6 = xSQLVAR3.deepCopy();
      xSQLVAR6.sqlname = null;
      xSQLVARArray0[4] = xSQLVAR2;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.setAutoCommit(false);
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.getNextId();
      System.setCurrentTimeMillis(0);
      Object[] objectArray0 = DBUtil.currentLine(simpleResultSet0);
      assertEquals(0, objectArray0.length);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "P4]?Oz8^yR;Yf@)/");
      DBUtil.available("P4]?Oz8^yR;Yf@)/", " to=", "One-row database query returned multiple rows: ", " to=");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      basicUUID0.stringWorkhorse('z');
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "One-row database query returned multiple rows: ", 'z', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("RWRKed7neuw?4['");
      versionNumber0.toString();
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("RWRKed7neuw", ",deletePriv=", versionNumber0);
      DBUtil.dependencyOrderedTables(defaultDatabase0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(") or wrong URL format (.env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "Oe");
      DBUtil.existsEnvironment(") or wrong URL format (");
      ModifyColumnNode modifyColumnNode0 = new ModifyColumnNode();
      modifyColumnNode0.getGenerationClauseNode();
      AllResultColumn allResultColumn0 = new AllResultColumn();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      Long long0 = new Long(3);
      Class<JdbcConnection> class0 = JdbcConnection.class;
      // Undeclared exception!
      try { 
        DBUtil.queryScalarArray("RWRKed7neuw?4['", class0, (Connection) jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      SQLWarning sQLWarning0 = new SQLWarning("--a#=\"EY*#S|38Ke{Hq");
      StackTraceElement[] stackTraceElementArray0 = MockThrowable.getDefaultStackTrace();
      sQLWarning0.setStackTrace(stackTraceElementArray0);
      sQLWarning0.fillInStackTrace();
      SQLWarning sQLWarning1 = new SQLWarning("--a#=\"EY*#S|38Ke{Hq", sQLWarning0);
      sQLWarning0.getStackTrace();
      sQLWarning0.fillInStackTrace();
      sQLWarning0.fillInStackTrace();
      sQLWarning0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable0 = new MockThrowable((String) null, sQLWarning0);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorMessages errorMessages0 = new ErrorMessages();
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement(errorMessages0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error getting statement from result set
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.readSessionState();
      sessionRemote0.cancelStatement(3109);
      sessionRemote0.cancelStatement(3109);
      sessionRemote0.setAutoCommit(false);
      sessionRemote0.getNextId();
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, "5{?14MPQd00CIpp.6", false, 3, 0, 3);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // java.lang.String@0000000003
         //
         verifyException("org.hsqldb.jdbc.Util", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      JavaGDSImpl javaGDSImpl1 = new JavaGDSImpl();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("wfIM", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getNextId();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote0.cancelStatement(11);
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.setAutoCommit(true);
      sessionRemote2.getNextId();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "5{?14MPQd00CIpp.6", true, 9, 74, 74);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 5{?14MPQd00CIpp.6
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Level level0 = Level.warn;
      ErrorHandler errorHandler0 = new ErrorHandler("PURE_JAVA", level0);
      try { 
        DBUtil.runScript("", "", '8', (Connection) null, true, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler(" statement(s)");
      Recover.execute(" statement(s)", "Closin stateent{failed");
      SQLWarning sQLWarning0 = new SQLWarning("OevLti\"_e c#%i_", "OevLti\"_e c#%i_");
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler errorHandler1 = new ErrorHandler("Closin stateent{failed", level0);
      Level level1 = Level.ignore;
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler.setDefaultLevel(level1);
      // Undeclared exception!
      try { 
        DBUtil.runScript("Q", "Closin stateent{failed", 'e', (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: Q
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      String string0 = "org.h2.command.dml.Query";
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      // Undeclared exception!
      try { 
        DBUtil.queryScalar("----or", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JavaGDSImpl javaGDSImpl0 = new JavaGDSImpl();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp0 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      GDSHelper.GDSHelperErrorListener gDSHelper_GDSHelperErrorListener0 = mock(GDSHelper.GDSHelperErrorListener.class, new ViolatedAssumptionAnswer());
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Level level0 = Level.debug;
      Level level1 = Level.fatal;
      ErrorHandler.setDefaultLevel(level1);
      ErrorHandler errorHandler0 = new ErrorHandler("", level0);
      Level level2 = Level.ignore;
      ErrorHandler.setDefaultLevel(level2);
      try { 
        DBUtil.runScript("", "", (Connection) null, true, errorHandler0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.nextLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVAR1.deepCopy();
      xSQLVARArray0[3] = xSQLVAR2;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR2.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      XSQLVAR xSQLVAR6 = xSQLVAR3.deepCopy();
      xSQLVAR6.sqlname = null;
      xSQLVARArray0[4] = xSQLVAR6;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      xSQLVARArray0[5] = xSQLVAR7;
      XSQLVAR xSQLVAR8 = new XSQLVAR();
      xSQLVAR3.copyFrom(xSQLVAR5);
      System.setCurrentTimeMillis(0);
      jdbcDriver.getConnection("-- ERROR: checksum mismatch page: ", (Properties) null);
      Object[] objectArray0 = DBUtil.nextLine(simpleResultSet0);
      assertNull(objectArray0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("RWRKed7neuw?4['");
      Recover.execute("RWRKed7neuw?4['", "G{I|db9c-hGUvh7ALlI");
      SQLWarning sQLWarning0 = new SQLWarning();
      Class<Driver> class0 = Driver.class;
      SQLException sQLException0 = Driver.notImplemented(class0, "W:uwX");
      sQLWarning0.initCause(sQLException0);
      StackTraceElement[] stackTraceElementArray0 = sQLWarning0.getStackTrace();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.forEach(consumer0);
      sQLWarning0.getLocalizedMessage();
      SQLWarning sQLWarning1 = new SQLWarning("G{I|db9c-hGUvh7ALlI", (String) null);
      SQLWarning sQLWarning2 = new SQLWarning("+9;aTE/E!s", sQLWarning0);
      sQLWarning2.setNextWarning(sQLWarning1);
      sQLWarning2.fillInStackTrace();
      sQLWarning0.setStackTrace(stackTraceElementArray0);
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("--Expected exactly one row, found more.", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Connection connection0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "u>4Kbec<NRw_");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String string0 = "FGzw~(';NF F";
      // Undeclared exception!
      try { 
        DBUtil.getMetaData((Connection) null, "}'3YpF+yb)", "----JDBC version", false, false, false, true, "FGzw~(';NF F", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 13
         // FGzw~(';NF F
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.399891585838211
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      Connection connection0 = null;
      boolean boolean0 = false;
      ErrorHandler errorHandler0 = new ErrorHandler("OevLti\"_e c#%i_");
      // Undeclared exception!
      try { 
        DBUtil.runScript("G", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("RWRKed7neuw?4['");
      Recover.execute("RWRKed7neuw?4['", "G{I|db9c-hGUvh7ALlI");
      SQLWarning sQLWarning0 = new SQLWarning();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      sQLWarning0.getLocalizedMessage();
      SQLWarning sQLWarning1 = new SQLWarning((String) null, "d;L5o");
      DBUtil.close((Connection) null);
      StandardException.normalClose();
      System.setCurrentTimeMillis(1235L);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("org.databene.SQL");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      ConstraintDescriptorList constraintDescriptorList1 = new ConstraintDescriptorList();
      VersionNumber versionNumber1 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      versionNumber0.compareTo(versionNumber1);
      versionNumber1.compareTo(versionNumber0);
      VersionNumber versionNumber2 = new VersionNumber(constraintDescriptorList1, constraintDescriptorList0);
      VersionNumber versionNumber3 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      versionNumber0.compareTo(versionNumber3);
      versionNumber2.compareTo(versionNumber1);
      versionNumber2.compareTo(versionNumber0);
      VersionNumber versionNumber4 = VersionNumber.valueOf("UJMd>N6(A%Orere");
      versionNumber4.compareTo(versionNumber1);
      versionNumber4.toString();
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      DBUtil.close((Connection) jdbcConnection0);
      StandardException.normalClose();
      System.setCurrentTimeMillis(2260L);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      Connection connection0 = null;
      try { 
        DBUtil.getMetaData((Connection) null, (String) null, "ppi~0", true, false, true, true, "--G", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "RWRKed7neuw?4['";
      FBArray fBArray0 = new FBArray();
      FormatableHashtable formatableHashtable0 = new FormatableHashtable();
      fBArray0.getResultSet((-3544L), 865, (Map) formatableHashtable0);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("SELECT 1 FROM (SELECT ");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      ConstraintDescriptorList constraintDescriptorList1 = dataDictionaryImpl0.getActiveConstraintDescriptors(constraintDescriptorList0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      VersionNumber versionNumber1 = new VersionNumber(constraintDescriptorList1, linkedList0);
      VersionNumber versionNumber2 = new VersionNumber(constraintDescriptorList0, linkedList0);
      versionNumber0.compareTo(versionNumber2);
      versionNumber2.toString();
      VersionNumber versionNumber3 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      versionNumber3.compareTo(versionNumber0);
      VersionNumber versionNumber4 = VersionNumber.valueOf("");
      versionNumber1.compareTo(versionNumber4);
      VersionNumber.valueOf("UJM*d>N6(Arere");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      // Undeclared exception!
      try { 
        DBUtil.format((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      String string0 = "Y$";
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "shutdown trace", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getNextId();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.readSessionState();
      sessionRemote1.getLobStorage();
      sessionRemote0.cancelStatement(0);
      SessionRemote sessionRemote2 = new SessionRemote();
      sessionRemote2.getNextId();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "5{?14MPQd00CIpp.6", false, 9, 97, 97);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.escape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)107;
      byteArray0[0] = (byte)107;
      Boolean.valueOf(true);
      byteArray0[1] = (byte)113;
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.ignore;
      ErrorHandler.setDefaultLevel(level1);
      Level level2 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("Bp_U<B%$;", level2);
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.error;
      ErrorHandler.setDefaultLevel(level3);
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, 'e', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/null.env.properties");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)107;
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("qg", 85);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      try { 
        DBUtil.getMetaData((String) null, true, false, true, false, "~mO!] c1w3%", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.close((Statement) null);
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      Connection connection0 = null;
      String string0 = "ppi~0";
      try { 
        DBUtil.getMetaData((Connection) null, "c%s7:r#", "c/K2qtC%|IUO", true, true, true, false, "}UgH\"\";UI}/XN6-#", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl");
      DBUtil.available("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", "org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", "No environment definition '", "IC.]@Qd\"R");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVAR2.deepCopy();
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR3 = xSQLVAR2.deepCopy();
      xSQLVAR3.deepCopy();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DBUtil.escape(" arg2=[");
      CompositeDBObject<DefaultDBTable> compositeDBObject0 = (CompositeDBObject<DefaultDBTable>) mock(CompositeDBObject.class, new ViolatedAssumptionAnswer());
      TableContainer tableContainer0 = new TableContainer("}", compositeDBObject0);
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      tableContainer0.equals(jdbcConnection0);
      tableContainer0.equals("}");
      TableContainerSupport tableContainerSupport0 = new TableContainerSupport();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseResultRow(simpleResultSet0);
      tableContainerSupport0.getTable("WHEN");
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(" arg2=[", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.1815461113373171
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VersionNumber.valueOf("RWRKed7neuw?4['");
      ErrorHandler errorHandler0 = new ErrorHandler("RWRKed7neuw?4['");
      Recover.execute("RWRKed7neuw?4['", "G{I|db,cvhGUvh7ALlI");
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.warn;
      ErrorHandler errorHandler1 = new ErrorHandler("RWRKed7neuw?4['", level1);
      Level level2 = Level.info;
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.ignore;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler.setDefaultLevel(level3);
      Level level4 = Level.trace;
      ErrorHandler.setDefaultLevel(level4);
      // Undeclared exception!
      try { 
        DBUtil.runScript("M!xW'5j0&Fw", 'x', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "org.firebirdsql.gds.impl.wire.isc_svc_handle_impl";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl");
      String[] stringArray0 = new String[3];
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", "org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", "MEMORY_USED", "MEMORY_USED");
      try { 
        DBUtil.connect("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", (String) null, (String) null, (String) null, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting org.firebirdsql.gds.impl.wire.isc_svc_handle_impl failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Recover.execute("user", "user");
      SQLWarning sQLWarning0 = new SQLWarning();
      SQLWarning sQLWarning1 = new SQLWarning("XDc=>+3Sz3.3v{z0]h", sQLWarning0);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "qgDo@}H#dw", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: qgDo@}H#dw
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.readSessionState();
      sessionRemote0.readSessionState();
      sessionRemote0.cancelStatement(86);
      sessionRemote0.setAutoCommit(false);
      sessionRemote0.getNextId();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "user", false, 11, 4, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVARArray0[1] = xSQLVAR2;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR4.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      XSQLVAR xSQLVAR6 = xSQLVAR3.deepCopy();
      xSQLVAR6.sqlname = null;
      xSQLVARArray0[4] = xSQLVAR6;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      xSQLVARArray0[5] = xSQLVAR7;
      XSQLVAR xSQLVAR8 = new XSQLVAR();
      xSQLVAR3.copyFrom(xSQLVAR5);
      System.setCurrentTimeMillis(0);
      jdbcDriver.getConnection("-- ERROR: checksum mismatch page: ", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5981863871455346
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler(" statement(s)");
      Recover.execute(" statement(s)", "Closin stateent{failed");
      SQLWarning sQLWarning0 = new SQLWarning("OevLti\"_e c#%i_", "OevLti\"_e c#%i_");
      Level level0 = Level.warn;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.info;
      Level level2 = Level.ignore;
      ErrorHandler.setDefaultLevel(level2);
      ErrorHandler.setDefaultLevel(level1);
      Level level3 = Level.info;
      ErrorHandler errorHandler1 = new ErrorHandler("Closin stateent{failed", level3);
      Level level4 = Level.ignore;
      ErrorHandler.setDefaultLevel(level4);
      Level level5 = Level.debug;
      ErrorHandler.setDefaultLevel(level5);
      Level level6 = Level.fatal;
      ErrorHandler.setDefaultLevel(level6);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--`!D(}Oc7s", 'x', (Connection) null, true, errorHandler0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("Closin stateent{failed", "OevLti\"_e c#%i_", (Connection) null, (boolean) dBExecutionResult0.changedStructure, errorHandler1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: Closin stateent{failed
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      String string0 = "org.firebirdsql.gds.impl.wire.isc_svc_handle_impl";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl");
      String string1 = "Y0J_?[z8";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData((String) null, "CbXqrv!qbmgaX#<HwEr", "Y0J_?[z8", "MEMORY_USED");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Connecting .env.properties");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "''");
      ErrorMessages errorMessages0 = new ErrorMessages();
      JDBCConnectData jDBCConnectData0 = DBUtil.getConnectData("Connecting ");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseResultRow(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Long long0 = new Long((-5));
      try { 
        DBUtil.getMetaData((Connection) null, "~A_%i28@;l_vt", "O", true, false, false, false, "", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/databene/null.env.properties");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)113;
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)40;
      byteArray0[5] = (byte)92;
      byteArray0[6] = (byte) (-119);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "");
      try { 
        DBUtil.getMetaData((String) null, false, false, false, false, "~mO!] c1w3%", false, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      try { 
        DBUtil.getMetaData((Connection) null, "BLOBGETPOSITIONFROMBYTES", "M!", false, true, true, true, "BLOBGETPOSITIONFROMBYTES", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DBUtil.available("S`EPut&DU", (String) null, (String) null, "java.lang.Exception");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = 1007;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark((-935));
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.6141342688540803
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)35;
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte)17;
      byteArray0[5] = (byte) (-21);
      byteArray0[6] = (byte)87;
      byteArray0[7] = (byte)81;
      byteArray0[8] = (byte)13;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      List<Object[]> list0 = new ArrayList<Object[]>();
      DBUtil.assertAllDbResourcesClosed(false);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((-645L), 226);
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[6];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVAR1.deepCopy();
      xSQLVARArray0[3] = xSQLVAR2;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR2.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      XSQLVAR xSQLVAR6 = xSQLVAR3.deepCopy();
      xSQLVAR6.sqlname = null;
      xSQLVARArray0[4] = xSQLVAR6;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      xSQLVAR7.deepCopy();
      xSQLVARArray0[5] = xSQLVAR7;
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      assertTrue(simpleResultSet0.isClosed());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      List<Object[]> list0 = new ArrayList<Object[]>();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("a#=\"EY**S|38Ke{HF", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("No environmen@ de1inition '", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.3117676775595015
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.firebirdsql.gds.impl.wire.isc_svc_handle_impl";
      stringArray0[1] = "org.firebirdsql.gds.impl.wire.isc_svc_handle_impl";
      InsertNode insertNode0 = new InsertNode();
      jdbcDriver.getConnection("org.firebirdsql.gds.impl.wire.isc_svc_handle_impl", (Properties) null);
      DBUtil.executeUpdate("", (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.countRows("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[8];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVARArray0[1] = xSQLVAR2;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      XSQLVAR xSQLVAR4 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR5 = xSQLVAR4.deepCopy();
      byte[] byteArray0 = xSQLVAR5.sqldata;
      XSQLVAR xSQLVAR6 = xSQLVAR0.deepCopy();
      xSQLVARArray0[4] = xSQLVAR6;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      XSQLVAR xSQLVAR8 = new XSQLVAR();
      String string0 = "BMC<a?*5";
      // Undeclared exception!
      try { 
        DBUtil.connect((JDBCConnectData) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      SQLWarning sQLWarning0 = new SQLWarning();
      sQLWarning0.getSuppressed();
      sQLWarning0.getStackTrace();
      SQLWarning sQLWarning1 = new SQLWarning("XDc=>+3Sz3.3v{z0]h", sQLWarning0);
      MockThrowable mockThrowable0 = new MockThrowable("qgDo@}H#dw", sQLWarning1);
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      Level level1 = Level.ignore;
      ErrorHandler.setDefaultLevel(level1);
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, true);
      assertNotNull(proxy0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      SQLWarning sQLWarning0 = new SQLWarning();
      StackTraceElement[] stackTraceElementArray0 = sQLWarning0.getStackTrace();
      sQLWarning0.fillInStackTrace();
      SQLWarning sQLWarning1 = new SQLWarning("--a#=\"EY*#S|38Ke{Hq", sQLWarning0);
      sQLWarning0.fillInStackTrace();
      sQLWarning0.setStackTrace(stackTraceElementArray0);
      MockThrowable mockThrowable0 = new MockThrowable((String) null, sQLWarning0);
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.6650517089974617
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.format(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis(0L);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("--G", "--G", "--G", "--(");
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting --G failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.8113308577108624
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "org.firebiAdsql.gds.impl.wire.isc_svc_handle_impl";
      stringArray0[1] = "org.firebiAdsql.gds.impl.wire.isc_svc_handle_impl";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "org.firebiAdsql.gds.impl.wire.isc_svc_handle_impl", true, stringArray0);
      Integer integer0 = new Integer(519);
      boolean boolean0 = dBPrimaryKeyConstraint0.equals(integer0);
      boolean boolean1 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getNextId();
      sessionRemote0.readSessionState();
      SessionRemote sessionRemote1 = new SessionRemote();
      sessionRemote1.readSessionState();
      sessionRemote1.getLobStorage();
      sessionRemote0.cancelStatement(0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "!E");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("i ", false, true, true, true, "r7SE%iyIHoSDdS{|T", true, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'i .env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DatabaseParameterBufferImp databaseParameterBufferImp0 = new DatabaseParameterBufferImp();
      org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp databaseParameterBufferImp1 = new org.firebirdsql.gds.impl.jni.DatabaseParameterBufferImp();
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("1y+q[69", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 1y+q[69
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      xSQLVARArray0[1] = xSQLVAR1;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      xSQLVARArray0[2] = xSQLVAR3;
      xSQLVAR2.copyFrom(xSQLVAR3);
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR4.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      XSQLVAR xSQLVAR6 = xSQLVAR3.deepCopy();
      xSQLVAR6.sqlname = null;
      xSQLVARArray0[4] = xSQLVAR2;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      xSQLVARArray0[5] = xSQLVAR7;
      XSQLVAR xSQLVAR8 = new XSQLVAR();
      XSQLVAR xSQLVAR9 = new XSQLVAR();
      xSQLVAR2.copyFrom(xSQLVAR0);
      System.setCurrentTimeMillis(0);
      // Undeclared exception!
      try { 
        DBUtil.connect((String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'null.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("jQB[8TX!EfvD#?");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "|A~4@^lE7ubS5g";
      defaultDBTable0.getUniqueConstraint(stringArray0);
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("org.databene.SQL");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      ConstraintDescriptorList constraintDescriptorList1 = dataDictionaryImpl0.getActiveConstraintDescriptors(constraintDescriptorList0);
      VersionNumber versionNumber1 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      VersionNumber versionNumber2 = new VersionNumber(constraintDescriptorList1, constraintDescriptorList0);
      versionNumber2.compareTo(versionNumber0);
      VersionNumber.valueOf("UJM*d>N6(Arere");
      DBUtil.checkReadOnly("Gc]C*", false);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.close((ResultSet) null);
      RawStore rawStore0 = new RawStore();
      GlobalXactId globalXactId0 = new GlobalXactId();
      ConcurrentXactFactory concurrentXactFactory0 = new ConcurrentXactFactory();
      // Undeclared exception!
      try { 
        concurrentXactFactory0.getTransactionInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.XactFactory", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      DBUtil.close((ResultSet) errorMessages0);
      RawStore rawStore0 = new RawStore();
      GlobalXactId globalXactId0 = new GlobalXactId();
      ConcurrentXactFactory concurrentXactFactory0 = new ConcurrentXactFactory();
      // Undeclared exception!
      try { 
        concurrentXactFactory0.getTransactionInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.XactFactory", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.370146355566411
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Session session0 = mock(Session.class, new ViolatedAssumptionAnswer());
      doReturn((Result) null).when(session0).execute(any(org.hsqldb.Result.class));
      jdbcConnection jdbcConnection0 = new jdbcConnection(session0);
      Long long0 = new Long(4294967298L);
      Recover.execute("", "");
      Level level0 = Level.debug;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler errorHandler0 = new ErrorHandler("Rg", level0);
      Level level1 = Level.info;
      Level level2 = Level.fatal;
      ErrorHandler.setDefaultLevel(level2);
      Level level3 = Level.ignore;
      Level level4 = Level.trace;
      ErrorHandler.setDefaultLevel(level4);
      ErrorHandler.setDefaultLevel(level3);
      ErrorHandler.setDefaultLevel(level1);
      // Undeclared exception!
      try { 
        DBUtil.runScript("PU", 'x', (Connection) jdbcConnection0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      XSQLVAR xSQLVAR2 = xSQLVAR1.deepCopy();
      XSQLVAR xSQLVAR3 = xSQLVAR2.deepCopy();
      xSQLVARArray0[1] = xSQLVAR0;
      XSQLVAR xSQLVAR4 = xSQLVAR0.deepCopy();
      xSQLVARArray0[2] = xSQLVAR4;
      XSQLVAR xSQLVAR5 = new XSQLVAR();
      XSQLVAR xSQLVAR6 = xSQLVAR5.deepCopy();
      xSQLVARArray0[3] = xSQLVAR6;
      XSQLVAR xSQLVAR7 = xSQLVAR4.deepCopy();
      xSQLVAR7.relname = "cf";
      xSQLVAR7.sqlname = null;
      xSQLVAR6.ownname = null;
      xSQLVARArray0[4] = xSQLVAR3;
      XSQLVAR xSQLVAR8 = new XSQLVAR();
      xSQLVARArray0[5] = xSQLVAR8;
      xSQLVAR6.sqlsubtype = 0;
      XSQLVAR xSQLVAR9 = new XSQLVAR();
      xSQLVAR8.deepCopy();
      xSQLVAR4.aliasname = null;
      xSQLVAR4.sqlsubtype = 12;
      xSQLVAR4.copyFrom(xSQLVAR6);
      System.setCurrentTimeMillis(0);
      jdbcDriver.getConnection("-- ERROR: checksum mismatch page: ", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.query("9j-ZuL3obLdp", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      try { 
        DBUtil.connect("", "~A_%i28@;l_vt", "~A_%i28@;l_vt", "wfIM", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DBUtil.available("--{m-", "jbt#NH5$#?>2!", "Nnw", "a");
      GlobalXactId globalXactId0 = new GlobalXactId();
      ConcurrentXactFactory concurrentXactFactory0 = new ConcurrentXactFactory();
      // Undeclared exception!
      try { 
        concurrentXactFactory0.getTransactionInfo();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.derby.impl.store.raw.xact.XactFactory", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.containsMandatoryColumn((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dependencyOrderedTables((TableHolder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Random.setNextRandom(393);
      int int0 = DBUtil.getOpenPreparedStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("SELECT 1 FROM (SELECT ");
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      ConstraintDescriptorList constraintDescriptorList1 = dataDictionaryImpl0.getActiveConstraintDescriptors(constraintDescriptorList0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      VersionNumber versionNumber1 = new VersionNumber(constraintDescriptorList1, linkedList0);
      VersionNumber versionNumber2 = new VersionNumber(constraintDescriptorList0, linkedList0);
      versionNumber0.compareTo(versionNumber2);
      versionNumber2.toString();
      VersionNumber versionNumber3 = new VersionNumber(constraintDescriptorList0, constraintDescriptorList0);
      versionNumber3.compareTo(versionNumber0);
      VersionNumber versionNumber4 = VersionNumber.valueOf("");
      versionNumber1.compareTo(versionNumber4);
      VersionNumber.valueOf("UJM*d>N6(Arere");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      System.setCurrentTimeMillis(0);
      jdbcDriver.getConnection("Np;&,[,Kc;OeINx", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[7];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      XSQLVAR xSQLVAR2 = xSQLVAR0.deepCopy();
      xSQLVAR1.deepCopy();
      xSQLVARArray0[1] = xSQLVAR2;
      XSQLVAR xSQLVAR3 = new XSQLVAR();
      XSQLVAR xSQLVAR4 = new XSQLVAR();
      XSQLVAR xSQLVAR5 = xSQLVAR4.deepCopy();
      xSQLVARArray0[3] = xSQLVAR5;
      xSQLVARArray0[4] = xSQLVAR4;
      XSQLVAR xSQLVAR6 = new XSQLVAR();
      xSQLVARArray0[5] = xSQLVAR6;
      XSQLVAR xSQLVAR7 = new XSQLVAR();
      xSQLVAR3.sqlsubtype = 0;
      xSQLVAR3.copyFrom(xSQLVAR5);
      System.setCurrentTimeMillis(0);
      int int0 = DBUtil.getOpenStatementCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ConstraintDescriptorList constraintDescriptorList0 = new ConstraintDescriptorList();
      int int0 = DBUtil.getOpenConnectionCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      SessionRemote sessionRemote0 = new SessionRemote();
      DBUtil.getOpenResultSetCount();
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      FBCallableStatement fBCallableStatement0 = null;
      try {
        fBCallableStatement0 = new FBCallableStatement((GDSHelper) null, "lo_creat", 1162, (-280), 1540, internalTransactionCoordinator_MetaDataTransactionCoordinator0, internalTransactionCoordinator_MetaDataTransactionCoordinator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractCallableStatement", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getConnectData("----`!D(}Oc7s");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '----`!D(}Oc7s.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      DBUtil.existsEnvironment("P4]?Oz8^yR;Yf@)/");
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      DataDictionaryImpl dataDictionaryImpl0 = new DataDictionaryImpl();
      BasicUUID basicUUID0 = new BasicUUID();
      basicUUID0.stringWorkhorse('z');
      ArrayInputStream arrayInputStream0 = new ArrayInputStream();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(arrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      InternalTransactionCoordinator.MetaDataTransactionCoordinator internalTransactionCoordinator_MetaDataTransactionCoordinator0 = new InternalTransactionCoordinator.MetaDataTransactionCoordinator();
      InternalTransactionCoordinator internalTransactionCoordinator0 = new InternalTransactionCoordinator(internalTransactionCoordinator_MetaDataTransactionCoordinator0);
      internalTransactionCoordinator0.getConnection();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery("--.(cGxY", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.3016184880865236
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "b");
      Level level0 = Level.ignore;
      ErrorHandler errorHandler0 = new ErrorHandler("SELECT 1 FROM (SELECT ", level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("SELECT 1 FROM (SELECT ", '*', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      DBUtil.resetMonitors();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      try { 
        simpleResultSet0.getBinaryStream("");
        fail("Expecting exception: JdbcSQLException");
      
      } catch(JdbcSQLException e) {
         //
         // Feature not supported: null [50100-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }
}
