/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 01:46:10 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.Date;
import java.util.function.Predicate;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.ChangeEventType;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.162409200836301
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("g>GweS`e&yjbEp{");
      ontologyTerm0.setOntologyName("Qn4k4kF");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("ZS");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm2);
      ontologyTerm4.setTerm("Qn4k4kF");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Object object0 = new Object();
      User user0 = new User("%", "W[Gf");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(macawChangeEvent0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.69443788276161
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel0, valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      User.detectFieldChanges(user0, user0, user0);
      derivedVariable0.setName("general.fieldValue.blank");
      derivedVariable0.addValueLabel(valueLabel0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.cloneAttributes(derivedVariable0);
      derivedVariable0.addSourceVariable(derivedVariable1);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = null;
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("general.fieldValue.blank");
      user0.setPassword("r:Awc}LK8Q`/");
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      derivedVariable1.getCleaningStatus();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      arrayList0.add((Variable) rawVariable0);
      derivedVariable1.addSourceVariables(arrayList0);
      derivedVariable0.addSourceVariables(arrayList0);
      System.setCurrentTimeMillis(0L);
      rawVariable0.isCleaned();
      User user1 = null;
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnEnd((String) null);
      // Undeclared exception!
      try { 
        RawVariable.detectFieldChanges((User) null, rawVariable1, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.890065105150076
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(851);
      supportingDocument0.setIsNewRecord(true);
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getAvailability();
      derivedVariable0.getAlias();
      derivedVariable0.columnEnd = "Unknown";
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.removeSourceVariables(arrayList1);
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber("");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      rawVariable0.isCleaned();
      rawVariable0.getDisplayItemIdentifier();
      System.setCurrentTimeMillis(851);
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.getSourceVariables();
      derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable0.getColumnEnd());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6152408844365813
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "UNABLE_TO_GET_VARIABLE_IDENTIFIER";
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_VARIABLE_IDENTIFIER");
      supportingDocument0.setFileName("xqvF``<^O~6@&J\"V");
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("UNABLE_TO_CREATE_VRIABLE", (String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setCoded(true);
      User user1 = new User();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=3.685933690751724
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Variable.validateFields(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setFileName("P?}r,Z");
      arrayList0.add(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("iYV8=L");
      arrayList0.add(supportingDocument1);
      rawVariable0.removeSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart("iYV8=L");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.setOntologyTerms(arrayList1);
      rawVariable0.getColumnEnd();
      rawVariable0.columnEnd = "iYV8=L";
      rawVariable0.setCategory("");
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.getForm();
      rawVariable0.clone();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("*'JL})");
      derivedVariable0.clone();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.getYear();
      User user0 = new User("", "");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("*'JL})", derivedVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.290867889118821
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.setCleaned(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      derivedVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.hasSameDisplayName(rawVariable1);
      assertTrue(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0652173913644494
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      User user1 = new User("q*", "variable.isCoded.label");
      User user2 = new User("#25iQ", "variable.isCoded.label");
      user2.setPostCode("#25iQ");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"blank\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.79790993117846
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath(";");
      derivedVariable0.setLabel(";");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(derivedVariable1);
      derivedVariable0.form = "variable.columnStart.label";
      derivedVariable0.getName();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable0.setIsNewRecord(true);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable1.questionNumber = "variable.columnStart.label";
      ontologyTerm1.setNewRecord(false);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      derivedVariable0.getFilePath();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.708895446945671
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.isCleaned();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setIdentifier(137);
      arrayList0.add(supportingDocument1);
      supportingDocument0.setTitle((String) null);
      supportingDocument0.setFileName((String) null);
      arrayList0.add(supportingDocument0);
      rawVariable0.setSupportingDocuments(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setColumnStart("Iw<|Ns_C?l]");
      rawVariable1.questionNumber = "{&|8-{^1<?P-]#;W";
      rawVariable0.hasSameDisplayName(rawVariable1);
      rawVariable1.getFilePath();
      assertEquals("Iw<|Ns_C?l]", rawVariable1.getColumnStart());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCategory());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.3729499867192074
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier(1946);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("NJ;c*>X<x");
      boolean boolean0 = rawVariable0.containsSupportingDocument(supportingDocument1);
      assertFalse(boolean0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument2.setDescription("-(7Ua0");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument4.setDescription("");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      User user0 = new User("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES", "UNABLE_TO_GET_CHANGES_FOR_VALUE_LABEL");
      RawVariable rawVariable1 = new RawVariable();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      rawVariable0.getAlternativeVariable();
      rawVariable0.getColumnEnd();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      supportingDocument0.setIdentifier((-1));
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("NJ;c*>X<x");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      // Undeclared exception!
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.util.ValidationUtility", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.781986170977664
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setColumnStart((String) null);
      rawVariable0.getQuestionNumber();
      rawVariable0.isNewRecord();
      rawVariable0.getCategory();
      String string0 = rawVariable0.getColumnStart();
      assertNull(string0);
      
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.9130492873822047
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setCleaned(true);
      User user0 = new User((String) null, "V;=YW-p1sEfNM91zN");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      assertTrue(rawVariable0.isCleaned());
      
      User user1 = new User("user.postCode.saveChanges", "NON_EXISTENT_VALUE_LABELS");
      user1.setCity("V;=YW-p1sEfNM91zN");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable1);
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.762649384310328
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(true);
      User user0 = new User("V;=YW-p1sEfNM91zN", (String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user1 = new User("V;=YW-p1sEfNM91zN", "V;=YW-p1sEfNM91zN");
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument0.setDescription("4MJiZS");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument1.setDescription("V;=YW-p1sEfNM91zN");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertEquals("Unknown", rawVariable1.getCategory());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.6231368603252263
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("Im3qP!A_}-E=2E?H31B", ";");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaned(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.addSupportingDocument((SupportingDocument) null);
      derivedVariable1.addSourceVariable(rawVariable0);
      derivedVariable1.getAvailability();
      derivedVariable0.getCleaningStatus();
      derivedVariable1.setName("O_+z86E6+`;8V)3\neW");
      derivedVariable0.containsSourceVariable(derivedVariable1);
      // Undeclared exception!
      try { 
        derivedVariable1.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.9179059899758726
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      MockInstant.ofEpochSecond(3567L);
      rawVariable0.setLabel("ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User("Im3qP!A_}-E=2E?H31B", ";");
      OntologyTerm.detectFieldChanges(user0, ontologyTerm0, ontologyTerm0);
      ontologyTerm0.setNameSpace("+tHSeO");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIsNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("Z05]7!O>%<yp6v=]");
      rawVariable0.setName("Z05]7!O>%<yp6v=]");
      derivedVariable0.setLabel("+tHSeO");
      derivedVariable0.setFilePath("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.containsSupportingDocument(supportingDocument0);
      User user1 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", "3t60\"P?t5XnK(}P");
      user1.setPostCode(":mUCg");
      User user2 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", "I&}NV\"5^m*el yJ");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getCleaningStatus();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable2.getAvailability();
      RawVariable rawVariable4 = new RawVariable();
      Object object0 = new Object();
      rawVariable0.getLabel();
      assertEquals("Z05]7!O>%<yp6v=]", rawVariable0.getName());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.9448189437408714
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      User user0 = new User("k2TR]1", ">%");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setTitle("CzME");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("Z05]7!O>%<yp6v=]");
      derivedVariable0.setLabel("-");
      User user1 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", (String) null);
      user0.setPostCode("xqvF``<^O~6@&J\"V");
      User user2 = new User();
      rawVariable0.setName("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS");
      Variable.detectFieldChanges(user1, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setDescription("Z05]7!O>%<yp6v=]");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      rawVariable0.createVariableSummary();
      assertEquals("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", rawVariable0.getDisplayName());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.7712728358637344
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable1.setName(".ZHz~6P\u0006f>");
      Variable.detectFieldChanges(user2, rawVariable1, rawVariable0);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument8);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.8439004190080452
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      rawVariable0.setName(",|i+U'G0x]=K%&Q");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName(",|i+U'G0x]=K%&Q");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument5, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument4.setDescription("]7(K/~G");
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument9.setDescription("C/oto?\"x-(");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument12.setFileName("]a4rqUy'gMCv',4>v");
      supportingDocument12.setDescription((String) null);
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      SupportingDocument supportingDocument15 = new SupportingDocument();
      SupportingDocument supportingDocument16 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      rawVariable3.getAlternativeVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals(",|i+U'G0x]=K%&Q", rawVariable0.getName());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.951199355842293
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnStart = "a+bipS`o";
      rawVariable0.getAlias();
      rawVariable0.getCodeBookNumber();
      rawVariable0.getAvailability();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setAlias("general.fieldValue.unknown");
      ontologyTerm0.setTerm((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setQuestionNumber("Unknown");
      rawVariable0.addValueLabel(valueLabel0);
      ontologyTerm0.setNameSpace("variable.category.label");
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      rawVariable0.clone();
      rawVariable0.getQuestionNumber();
      rawVariable0.getColumnStart();
      rawVariable0.isNewRecord();
      rawVariable0.createVariableSummary();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertEquals("Unknown", rawVariable0.getQuestionNumber());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.886323362441233
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      User user1 = new User("q*", "q*");
      User user2 = new User("#25iQ", "q*");
      user2.setPostCode("3~/r9Xf");
      user2.setPostCode("]7(K/~G");
      User user3 = new User("", "q*");
      user3.setAddressLine1("");
      rawVariable0.setName("");
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      assertTrue(arrayList0.isEmpty());
      
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDocumentCode("D92Ygp^c8!~`kgL");
      supportingDocument0.setDescription((String) null);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setFileName("'\"AtP32r<qIU)");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.setDescription("+tHSeO");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      assertEquals("Unknown", variable0.getCleaningStatus());
      assertFalse(variable0.isCoded());
      assertEquals(0, variable0.getIdentifier());
      assertEquals("Unknown", variable0.getCategory());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.842128154940699
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      rawVariable0.setName(",|i+U'G0x]=K%&Q");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName(",|i+U'G0x]=K%&Q");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument5, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument4.setDescription("]7(K/~G");
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument9.setDescription("C/oto?\"x-(");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument12.setFileName("]a4rqUy'gMCv',4>v");
      supportingDocument12.setDescription((String) null);
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      SupportingDocument supportingDocument15 = new SupportingDocument();
      SupportingDocument supportingDocument16 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable1);
      assertEquals(",|i+U'G0x]=K%&Q", rawVariable0.getName());
      
      rawVariable3.getAlternativeVariable();
      rawVariable3.getName();
      assertEquals("Unknown", rawVariable3.getAvailability());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "macaw.businessLayer.Variable";
      rawVariable0.setQuestionNumber("Evt");
      rawVariable0.getQuestionNumber();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.removeSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable0.setForm("macaw.businessLayer.Variable");
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      derivedVariable0.getCodeBookNumber();
      assertEquals("macaw.businessLayer.Variable", derivedVariable0.getForm());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.7076405819586076
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      assertFalse(rawVariable0.isCleaned());
      
      rawVariable0.setCleaned(true);
      User user0 = new User((String) null, "V;=YW-p1sEfNM91zN");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.setTitle("mC- $qqR#e,I,5#$@1H");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument4.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument6.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument6.setDescription(";lNp");
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      ArrayList<String> arrayList0 = Variable.validateFields(rawVariable0);
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.8279774527349413
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable1.notes = "a+bipS`o";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("a+bipS`o", "/N9qwy?#.Y0");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      user0.setAddressLine2("UNABLE_TO_CHECK_CATEGORY_DUPLICATE");
      rawVariable1.getAlternativeVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.746976092441772
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("xqvF``<^O~6@&J\"V", ";");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setDocumentCode("ONTOLOGY_TERM");
      supportingDocument0.setTitle("O\"y(b[PEG'b");
      rawVariable0.setName("O\"y(b[PEG'b");
      derivedVariable0.setLabel("+tHSeO");
      User user1 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", "MISSING_DISPLAY_LIST_SELECTOR");
      user1.setPostCode("#25iQ");
      user1.setPostCode("");
      User user2 = new User("ONTOLOGY_TERM", "");
      user2.setAddressLine1(":Cg");
      rawVariable0.setName("");
      Variable.detectFieldChanges(user2, rawVariable0, derivedVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.getDisplayName();
      try { 
        SupportingDocument.validateFields(supportingDocument3);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.749208947306206
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("?Fr<'TZ");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("#Q:ZKcP~]w|a>byt8");
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      ontologyTerm0.setNameSpace("#Q:ZKcP~]w|a>byt8");
      ontologyTerm0.setNameSpace("?Fr<'TZ");
      User user0 = new User((String) null, "?Fr<'TZ");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setCleaningStatus("");
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.397792808146163
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MockInstant.now();
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate();
      MockDate.UTC((-1914651048), (-1079), 21, (-1142), (-1798), 30);
      MockDate mockDate2 = new MockDate();
      MockDate mockDate3 = new MockDate((-2652), 2453, (-1142), (-1142), (-580));
      MockDate mockDate4 = new MockDate((-243), 0, (-1798));
      Object object0 = new Object();
      User user0 = new User("variable.alias.label", "FJokBmvdR|Qsg}T1-");
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable0.questionNumber = null;
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      Object object0 = new Object();
      derivedVariable0.removeSourceVariable(rawVariable0);
      VariableSummary variableSummary0 = derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, variableSummary0.getIdentifier());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=3.8531513314447063
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      arrayList0.add(supportingDocument0);
      rawVariable0.addSupportingDocuments(arrayList0);
      rawVariable0.setCleaned(false);
      rawVariable0.questionNumber = "+tHSeO";
      rawVariable0.setNotes("+tHSeO");
      rawVariable0.setCategory("UNABLE_TO_GET_VALUE_LABELS");
      rawVariable0.codeBookNumber = "+tHSeO";
      rawVariable0.getQuestionNumber();
      rawVariable0.createVariableSummary();
      rawVariable0.clone();
      rawVariable0.getAlias();
      rawVariable0.getSupportingDocuments();
      rawVariable0.getNotes();
      rawVariable0.isCleaned();
      rawVariable0.getName();
      rawVariable0.clone();
      User user0 = new User("+tHSeO", "[La0>}vtF@)YNa");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getQuestionNumber();
      assertEquals("+tHSeO", rawVariable0.getNotes());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.071975750031805
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      User user0 = new User("general.error.blankField", "general.error.blankField");
      RawVariable rawVariable0 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setQuestionNumber("general.error.blankField");
      rawVariable0.setCleaned(false);
      rawVariable0.getFilePath();
      rawVariable0.setCoded(true);
      rawVariable0.getColumnEnd();
      rawVariable0.getFilePath();
      Variable.validateFields(rawVariable0);
      rawVariable0.getCleaningDescription();
      assertEquals("general.error.blankField", rawVariable0.getQuestionNumber());
      
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.8472492602203676
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.createVariableSummary();
      rawVariable1.setLabel("?Fr<'TZ");
      rawVariable1.setAlternativeVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("#Q:ZKcP~]w|a>byt8");
      ontologyTerm0.setNameSpace("UNABLE_TO_GET_ORIGINAL_ONTOLOGY_TERM");
      ontologyTerm0.setNameSpace("#Q:ZKcP~]w|a>byt8");
      ontologyTerm0.setNameSpace("?Fr<'TZ");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable1.setCategory("?Fr<'TZ");
      User user0 = new User("RYPoX-Px", "?Fr<'TZ");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument1);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument2);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.555632017870312
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm2);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable1);
      rawVariable0.getForm();
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable0.getForm());
      
      derivedVariable0.createVariableSummary();
      derivedVariable0.getNotes();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.896934599451277
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      rawVariable0.columnEnd = "B,}Mi?KN|Fj4]";
      user0.setAddressLine1("F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument6.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument9.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      rawVariable1.getAlternativeVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      try { 
        DerivedVariable.validateFields(derivedVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.8055124628724255
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setCleaned(true);
      assertTrue(rawVariable0.isCleaned());
      
      MockDate mockDate0 = new MockDate((-3970), (-1142), (-3970), (-3970), (-1142));
      MockDate.UTC((-1798), (-1798), (-1353), (-3970), 95, (-3970));
      MockDate mockDate1 = new MockDate();
      rawVariable1.columnStart = null;
      MockDate mockDate2 = new MockDate(0, (-2004864732), 1, (-1840700267), 2335);
      mockDate0.before(mockDate2);
      Object object0 = new Object();
      User user0 = new User("loay", "t4p#l!_sdY$");
      RawVariable rawVariable2 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable1, derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(1, arrayList0.size());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setIdentifier(2335);
      ontologyTerm1.setDescription("a,");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      Integer integer0 = new Integer((-3));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.6868977693384446
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setDescription("*$y)<");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setIdentifier((-1332));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.0646746038270627
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      User user0 = new User("Im3qP!A_}-E=2E?H31B", "Cz=;rciTlu!g");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User("", "");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.setAvailability("Im3qP!A_}-E=2E?H31B");
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getFilePath();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.codeBookNumber = "0wa@GAZh!";
      DerivedVariable derivedVariable4 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable3.getOntologyTerms();
      derivedVariable4.removeOntologyTerms(arrayList1);
      assertEquals("0wa@GAZh!", derivedVariable3.getCodeBookNumber());
      
      RawVariable rawVariable4 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.719698663507202
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("xqvF``<^O~6@&J\"V", ";");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("Z05]7!O>%<yp6v=]");
      rawVariable0.setName("Z05]7!O>%<yp6v=]");
      derivedVariable0.setLabel("+tHSeO");
      User user1 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", "MISSING_DISPLAY_LIST_SELECTOR");
      user1.setPostCode("");
      User user2 = new User();
      rawVariable0.setName("");
      Variable.detectFieldChanges(user2, rawVariable0, derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setDescription("+FDY^7qUJbdCX");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable1.columnStart = "Z05]7!O>%<yp6v=]";
      SupportingDocument supportingDocument6 = new SupportingDocument();
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, (Variable) null);
      rawVariable0.clone();
      rawVariable0.getDisplayItemIdentifier();
      assertEquals("ONTOLOGY_TERM", rawVariable0.getLabel());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7039917864324614
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, (Variable) null);
      assertNull(macawChangeEvent0);
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.2085716838811678
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      arrayList0.add((SupportingDocument) null);
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList1 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("Q*y\"");
      ontologyTerm0.setNameSpace((String) null);
      User user0 = new User("b8;kD%{", "}+Z6L_/)");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      macawChangeEvent0.setChangeMessage((String) null);
      MockDate mockDate0 = new MockDate(1358, (-1806584690), (-1908874351));
      ChangeEventType changeEventType0 = ChangeEventType.ONTOLOGY_TERM;
      macawChangeEvent0.setChangeType(changeEventType0);
      MockDate mockDate1 = new MockDate(0L);
      mockDate0.after(mockDate1);
      macawChangeEvent0.setDate(mockDate0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      user0.setCounty("");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument2);
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument2);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setDescription("T?Jo5*7e]3\"M,");
      supportingDocument2.setDescription("");
      supportingDocument3.setTitle("}+Z6L_/)");
      String string0 = rawVariable0.getNotes();
      assertNull(string0);
      
      boolean boolean0 = rawVariable0.isCoded();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.355825830420688
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      String string0 = "general.fieldValue.unknown";
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      User user0 = new User("_5C(!X<2cTsH50|)O40", "general.fieldValue.unknown");
      User user1 = new User("variable.saveChanges.valueChanged", "_5C(!X<2cTsH50|)O40");
      User.detectFieldChanges(user1, user1, user0);
      MockDate mockDate0 = new MockDate((-625), (-625), (-625), (-625), (-625));
      Instant instant0 = MockInstant.ofEpochSecond((long) (-625));
      Date date0 = Date.from(instant0);
      mockDate0.before(date0);
      Date.from(instant0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      macawChangeEvent0.setDate(date0);
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.remove((Object) macawChangeEvent0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.setIsNewRecord(true);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.0023865793404863
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      User user0 = new User("Im3qP!A_}-E=2E?H31B", "Cz=;rciTlu!g");
      RawVariable rawVariable1 = new RawVariable();
      User user1 = new User("", "");
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user0, derivedVariable2, derivedVariable1);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getFilePath();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = derivedVariable3.getOntologyTerms();
      derivedVariable2.removeOntologyTerms(arrayList1);
      RawVariable rawVariable4 = new RawVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("Unknown", rawVariable0.getCategory());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.850863601176158
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.listIterator();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setIsNewRecord(false);
      rawVariable0.setName("v*SoT^d4\"1F[On");
      derivedVariable1.setLabel((String) null);
      derivedVariable1.setFilePath("I&}NV\"5^m*el yJ");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      derivedVariable1.getLabel();
      rawVariable0.getName();
      assertEquals("v*SoT^d4\"1F[On", rawVariable0.getName());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.651960303209114
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      user1.setUserID("variable.cleaningDescription.label");
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      RawVariable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User((String) null, (String) null);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.8860347621526325
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<MacawChangeEvent> arrayList0 = new ArrayList<MacawChangeEvent>();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument3.setDescription((String) null);
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument3.setDescription("aM>nE_9)h2Q8;Vxaj");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("F", rawVariable0.getLabel());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.70816141220136
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.notes = "variable.columnStart.label";
      derivedVariable1.setColumnStart("X,GiVTVT");
      derivedVariable1.questionNumber = "INVALID_CATEGORY";
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.notes = "Q[wA";
      derivedVariable0.createVariableSummary();
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.getFilePath();
      derivedVariable0.getQuestionNumber();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable1.removeSourceVariables(arrayList0);
      assertEquals("", derivedVariable1.getNotes());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      MockInstant.now();
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-247), 17, 2993, 2993, (-1));
      MockDate.UTC(9, (-1798), 1255, (-1798), 17, (-361));
      MockDate mockDate2 = new MockDate(1234, (-2067947214), 30, (-361), 666);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.683859228591611
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setFilePath("1eF,5");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      Integer integer0 = new Integer((-3));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      Object object0 = new Object();
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7468661552001836
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList1);
      rawVariable0.setForm("}9nO&e?");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm((String) null);
      ontologyTerm0.setIdentifier((-1));
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.containsOntologyTerm(ontologyTerm2);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("'}?6J:Txo-rIO'_0jO");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.addOntologyTerm(ontologyTerm1);
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      rawVariable0.removeOntologyTerm(ontologyTerm1);
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable0.getForm());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.165778762403776
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAlternativeVariable(rawVariable0);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setNameSpace("a+bipS`o");
      User user0 = new User("a+bipS`o", "T?Jo5*7e]3\"M,");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      macawChangeEvent0.setChangeMessage("cY*#4&ZV*)");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setForm("cY*#4&ZV*)");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user1 = new User();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("cY*#4&ZV*)", rawVariable0.getForm());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.9445186734976527
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument6.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument10.setFileName("B !v;e,gJ8r|Utz`Ucv");
      supportingDocument10.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      rawVariable0.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable1, rawVariable0);
      assertEquals("F", rawVariable0.getLabel());
      
      rawVariable1.getAlternativeVariable();
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      rawVariable0.setName("cN<sZj=?gYq!:");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      String string0 = "0]Y!j";
      rawVariable2.setName("]7(K/~G");
      rawVariable0.createVariableSummary();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getColumnStart();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.1330894306292527
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("general.fieldValue.unknown");
      ontologyTerm0.setTerm("variable.cleaningStatus.label");
      ontologyTerm0.setIdentifier(132);
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      rawVariable1.removeOntologyTerms(arrayList0);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      MockInstant.now();
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(30, (-1), (-2013772730), 78, (-1142));
      MockDate.UTC((-2472), 17, (-1), 1, 78, (-1798));
      MockDate mockDate2 = new MockDate();
      MockDate mockDate3 = new MockDate(17, (-1), (-1798), (-1073741822), 1);
      mockDate1.before(mockDate3);
      Object object0 = new Object();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      User user0 = new User("rDO;P", "loay");
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user0, (Variable) null, (Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.889668043406975
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>();
      derivedVariable0.codeBookNumber = null;
      ChangeEventType changeEventType0 = ChangeEventType.SUPPORTING_DOCUMENT;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, ":mUCg", ":mUCg");
      Predicate<Object> predicate0 = Predicate.isEqual((Object) macawChangeEvent0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      Predicate<Object> predicate4 = predicate2.and(predicate0);
      predicate0.and(predicate4);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      Predicate.isEqual((Object) rawVariable1);
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isCoded());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("Unknown", rawVariable1.getCategory());
      assertFalse(rawVariable1.isNewRecord());
      
      arrayList0.removeIf(predicate3);
      derivedVariable0.removeSourceVariables(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIsNewRecord(true);
      supportingDocument0.setDescription((String) null);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      String string0 = derivedVariable0.getAlias();
      assertNotNull(string0);
      
      derivedVariable0.getName();
      derivedVariable0.isCleaned();
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getValueLabels();
      String string1 = derivedVariable0.getFilePath();
      assertNotNull(string1);
      
      derivedVariable0.getCategory();
      String string2 = derivedVariable0.getCodeBookNumber();
      assertNull(string2);
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.0973059499921614
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("bTkGLmbgp<Ter*nN");
      derivedVariable0.columnEnd = ",|i+U'G0x]=K%&Q";
      derivedVariable0.setLabel("bTkGLmbgp<Ter*nN");
      derivedVariable0.addValueLabel((ValueLabel) null);
      derivedVariable0.setName("bTkGLmbgp<Ter*nN");
      derivedVariable0.form = "bTkGLmbgp<Ter*nN";
      derivedVariable0.setCategory("bTkGLmbgp<Ter*nN");
      derivedVariable0.setCleaned(false);
      DerivedVariable.validateFields(derivedVariable0);
      derivedVariable0.getValueLabels();
      derivedVariable0.getValueLabels();
      derivedVariable0.getQuestionNumber();
      System.setCurrentTimeMillis(0L);
      derivedVariable0.getCategory();
      derivedVariable0.getDisplayItemIdentifier();
      User user0 = new User();
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("[sw-,.]*");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      assertEquals("bTkGLmbgp<Ter*nN", derivedVariable0.getForm());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.684840477830768
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User("atnMTT_F_=k0=4zt@}]", "atnMTT_F_=k0=4zt@}]");
      Object object0 = new Object();
      arrayList0.remove(object0);
      User.detectFieldChanges(user0, user0, user0);
      MockDate mockDate0 = new MockDate((-614), (-614), (-614), (-614), (-625));
      Instant instant0 = MockInstant.ofEpochSecond((long) (-614));
      Date date0 = Date.from(instant0);
      mockDate0.before(date0);
      Date.from(instant0);
      User user1 = new User("general.error.blankField", "general.error.blankField");
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable.detectFieldChanges(user2, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("atnMTT_F_=k0=4zt@}]");
      ontologyTerm0.setTerm("UNABLE_TO_ASSOCIATE_ONTOLOGY_TERM");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-1));
      // Undeclared exception!
      try { 
        rawVariable0.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      MockDate mockDate0 = new MockDate();
      derivedVariable0.questionNumber = "`,B<n";
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      Object object0 = new Object();
      String string0 = derivedVariable0.getAlias();
      assertEquals("", string0);
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.425910149055313
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.notes = null;
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      RawVariable rawVariable1 = new RawVariable();
      String string0 = rawVariable0.getFilePath();
      assertNotNull(string0);
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSourceVariable(derivedVariable1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable2.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      RawVariable rawVariable2 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      String string1 = rawVariable0.getYear();
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertNotNull(string1);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.751075869929338
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.addSupportingDocument(supportingDocument0);
      derivedVariable1.columnStart = null;
      derivedVariable1.columnStart = null;
      derivedVariable1.setColumnEnd((String) null);
      derivedVariable0.createVariableSummary();
      derivedVariable1.clone();
      User user0 = new User("V{8QD", "[/z!");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.6845453789466043
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals(1, arrayList0.size());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertFalse(derivedVariable1.isCoded());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("0", derivedVariable1.getDisplayItemIdentifier());
      assertFalse(derivedVariable1.isNewRecord());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9366147725931562
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Date date0 = Date.from(instant0);
      MockDate mockDate0 = new MockDate((-247), (-247), (-247), 2147483645, 2147483645);
      mockDate0.before(date0);
      MockDate mockDate1 = new MockDate((-247), (-247), 2147483645, (-247), (-247), 2147483645);
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "Sn_`,Zju(blRN%)", "Sn_`,Zju(blRN%)");
      macawChangeEvent0.setDate(mockDate1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.remove((Object) mockDate1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getOntologyTerms();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("UNABLE_TO_UPDATE_AVAILABILITY_STATE");
      ontologyTerm0.setTerm("general.error.blankField");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setIdentifier((-247));
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm1);
      assertFalse(boolean0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.619143255140718
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Date.from(instant0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm3);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      Object object0 = new Object();
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("Unknown", rawVariable0.getCategory());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=3.5776570084615655
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      supportingDocument0.setDocumentCode((String) null);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      rawVariable0.setAvailability("NJ;c*>X<x");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("NJ;c*>X<x");
      rawVariable0.containsSupportingDocument(supportingDocument1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7299497258922214
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.setLabel("RYPoX-Px");
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.questionNumber = "RYPoX-Px";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setNameSpace("a+bipS`o");
      rawVariable0.setColumnEnd("a+bipS`o");
      User user0 = new User("a+bipS`o", "T?Jo5*7e]3\"M,");
      user0.setFirstName("6ooDtRh11[?]aXe");
      rawVariable1.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User((String) null, "a+bipS`o");
      RawVariable.detectFieldChanges(user0, rawVariable1, rawVariable1);
      RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNameSpace("Q]`*ml[xgkO2)");
      ontologyTerm0.setTerm("_,{Qab7hFN~#*B5");
      rawVariable0.cloneAttributes(derivedVariable0);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.5854094185656926
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaned(false);
      rawVariable0.notes = "B";
      rawVariable0.setCodeBookNumber("[?~'`b8)u5)RaCM");
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      System.setCurrentTimeMillis((-573L));
      rawVariable1.getOntologyTerms();
      rawVariable1.cloneAttributes(rawVariable0);
      assertEquals("B", rawVariable0.getNotes());
      assertEquals("[?~'`b8)u5)RaCM", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.6942931440150475
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("zg");
      rawVariable1.questionNumber = "q*";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      user3.setPassword("b{ x>1}0Vk*");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument3.setDescription("aM>nE_9)h2Q8;Vxaj");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      rawVariable1.clone();
      assertEquals("q*", rawVariable1.getQuestionNumber());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.6675511293466374
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.setForm("/[b&~BawsB^3f;px*g");
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable2);
      ArrayList<OntologyTerm> arrayList1 = derivedVariable0.getOntologyTerms();
      derivedVariable1.removeOntologyTerms(arrayList1);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable2);
      assertEquals("/[b&~BawsB^3f;px*g", rawVariable0.getForm());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.632527251013279
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("ONTOLOGY_TERM");
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      User user0 = new User("xqvF``<^O~6@&J\"V", ";");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("Z05]7!O>%<yp6v=]");
      rawVariable0.setName("Z05]7!O>%<yp6v=]");
      derivedVariable0.setLabel("+tHSeO");
      derivedVariable0.setFilePath("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS");
      User user1 = new User("UNABLE_TO_CHECK_VARIABLE_ASSOCIATION_EXISTS", "3t60\"P?t5XnK(}P");
      user1.setPostCode("");
      User user2 = new User();
      user2.setAffiliation("INVALID_DERIVED_VARIABLE");
      rawVariable0.setName("");
      Variable.detectFieldChanges(user2, rawVariable0, derivedVariable0);
      rawVariable0.clone();
      RawVariable rawVariable1 = new RawVariable();
      try { 
        SupportingDocument.validateFields(supportingDocument0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.SupportingDocument", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("g>GweS`e&yjbEp{");
      ontologyTerm0.setOntologyName("Qn4k4kF");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("ZS");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setTerm("Qn4k4kF");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Object object0 = new Object();
      derivedVariable0.getColumnEnd();
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=3.051435843948024
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable1.notes = null;
      rawVariable0.setAlternativeVariable(rawVariable1);
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      arrayList0.listIterator();
      rawVariable0.setSupportingDocuments(arrayList0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable1.addSupportingDocument(supportingDocument0);
      rawVariable1.isNewRecord();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      rawVariable0.setLabel("variable.codeBookNumber.label");
      derivedVariable0.setIsNewRecord(false);
      rawVariable0.setName((String) null);
      assertEquals("variable.codeBookNumber.label", rawVariable0.getLabel());
      
      derivedVariable0.setFilePath((String) null);
      rawVariable1.getDisplayItemIdentifier();
      derivedVariable0.setSourceVariables((ArrayList<Variable>) null);
      rawVariable1.addSupportingDocuments(arrayList0);
      ArrayList<SupportingDocument> arrayList1 = rawVariable1.getSupportingDocuments();
      derivedVariable0.addSupportingDocuments(arrayList1);
      derivedVariable0.getSupportingDocuments();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.632328239081241
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Date.from(instant0);
      MockDate mockDate0 = new MockDate((-247), (-247), (-2034458197), 3794, 3794);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(true);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getFilePath();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      DerivedVariable derivedVariable4 = new DerivedVariable();
      rawVariable1.setColumnEnd("INVALID_DERIVED_VARIABLE");
      derivedVariable4.removeSourceVariable(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable5 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList1 = rawVariable1.getOntologyTerms();
      derivedVariable2.removeOntologyTerms(arrayList1);
      assertEquals("INVALID_DERIVED_VARIABLE", rawVariable1.getColumnEnd());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.removeOntologyTerm(ontologyTerm0);
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument1);
      supportingDocument0.setFileName("NJ;c*>X<x");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      String string0 = derivedVariable0.getAvailability();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm1.setNewRecord(false);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setTerm("xLsGY6T7C:-OTAf$");
      derivedVariable0.setCategory("xLsGY6T7C:-OTAf$");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      Integer integer0 = new Integer((-3));
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      assertEquals("", ontologyTerm7.getDescription());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.1937561962712997
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setColumnStart("r6D LP$>x`c");
      rawVariable0.removeValueLabel((ValueLabel) null);
      rawVariable0.setName(">)>lDc!1-./#@:6");
      rawVariable0.setIsNewRecord(false);
      rawVariable0.notes = ")o_dYUhu)Oc8F#gD>6N";
      rawVariable0.setCategory("");
      rawVariable0.setAlias("");
      Variable.validateFields(rawVariable0);
      rawVariable0.getCodeBookNumber();
      rawVariable0.getQuestionNumber();
      rawVariable0.getCategory();
      rawVariable0.setIsNewRecord(false);
      rawVariable0.getValueLabels();
      User user0 = null;
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges((User) null, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.768120536379051
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      rawVariable0.questionNumber = "DOpzb4[zKPO\"qe";
      User user0 = new User();
      Object object0 = new Object();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      user0.setPostCode("Q0O*DkD");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertNotNull(macawChangeEvent1);
      
      rawVariable0.getAlternativeVariable();
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.9116112050510297
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      rawVariable0.setName(",|i+U'G0x]=K%&Q");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setName(",|i+U'G0x]=K%&Q");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable3);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument5, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument3.setDescription("UNABLE_TO_DELETE_USER");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument2.setDescription("UNABLE_TO_CHECK_CATEGORY_EXISTS");
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      SupportingDocument supportingDocument15 = new SupportingDocument();
      SupportingDocument supportingDocument16 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable3.getAlternativeVariable();
      Variable.validateFields(rawVariable2);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, (Variable) null);
      assertEquals(",|i+U'G0x]=K%&Q", rawVariable2.getName());
      assertEquals(",|i+U'G0x]=K%&Q", rawVariable2.getDisplayName());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = null;
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("general.fieldValue.unknown");
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.0113645074166633
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("Qn4k4kF");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setTerm("Qn4k4kF");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      OntologyTerm ontologyTerm13 = new OntologyTerm();
      Object object0 = new Object();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCodeBookNumber("Qn4k4kF");
      derivedVariable0.removeSourceVariable(derivedVariable1);
      assertEquals("Qn4k4kF", derivedVariable1.getCodeBookNumber());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=2.1290003949677563
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("*vb'qPyJo");
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      arrayList0.removeAll(arrayList1);
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addValueLabel((ValueLabel) null);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      derivedVariable0.getLabel();
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.862681628353659
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.clone();
      User user0 = new User("/[b&~BawsB^3f;px*g", "/[b&~BawsB^3f;px*g");
      user0.setAddressLine1("/[b&~BawsB^3f;px*g");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel0, valueLabel0);
      valueLabel0.setIdentifier(0);
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable1, valueLabel0, valueLabel1);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.DELETE;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      derivedVariable1.codeBookNumber = "/[b&~BawsB^3f;px*g";
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.setIdentifier(0);
      derivedVariable0.isNewRecord();
      derivedVariable0.getCodeBookNumber();
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      int int0 = derivedVariable0.getIdentifier();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals(0, int0);
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate((-247), 17, 2993, 2993, (-1));
      mockDate1.setTime((-4139L));
      MockDate.UTC((-8), (-1798), 1255, (-1798), 17, (-361));
      mockDate0.after(mockDate1);
      MockDate mockDate2 = new MockDate((-2067947214), (-2067947214), 30, (-361), 666);
      MockDate mockDate3 = new MockDate(30);
      MockDate mockDate4 = new MockDate(420L);
      mockDate4.after(mockDate0);
      RawVariable rawVariable0 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable0.containsSupportingDocument((SupportingDocument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.clone();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      MockDate mockDate0 = new MockDate();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCoded(true);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertTrue(rawVariable0.isCoded());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=3.6043604057362626
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      DerivedVariable derivedVariable1 = (DerivedVariable)rawVariable0.getAlternativeVariable();
      RawVariable rawVariable1 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable1.getAvailability());
      assertFalse(rawVariable1.isNewRecord());
      assertEquals("Unknown", rawVariable1.getCleaningStatus());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
      assertEquals("Unknown", rawVariable1.getCategory());
      
      ArrayList<Variable> arrayList0 = derivedVariable1.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      assertFalse(derivedVariable1.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Object object0 = new Object();
      arrayList0.remove(object0);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      int int0 = (-1);
      MockDate mockDate0 = new MockDate((-1), (-614), (-1));
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList0.remove((Object) rawVariable0);
      arrayList1.add((OntologyTerm) null);
      rawVariable0.setIsNewRecord(false);
      // Undeclared exception!
      try { 
        rawVariable0.removeOntologyTerms(arrayList1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=2.2240585736572336
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      Date.from(instant0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      ChangeEventType changeEventType0 = ChangeEventType.LIST_CHOICE;
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent(changeEventType0, "Sn_`,Zju(blRN%)", "Sn_`,Zju(blRN%)");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      rawVariable0.getOntologyTerms();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerms(arrayList0);
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      rawVariable0.removeOntologyTerm(ontologyTerm2);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable1.getOntologyTerms();
      derivedVariable0.setOntologyTerms(arrayList0);
      Variable.validateFields(derivedVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.9365407703769004
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      rawVariable1.setQuestionNumber((String) null);
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument6.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument10.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable1);
      assertEquals("F", rawVariable0.getLabel());
      
      rawVariable1.getAlternativeVariable();
      assertEquals("Unknown", rawVariable1.getAvailability());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getDisplayName();
      System.setCurrentTimeMillis(6015L);
      rawVariable0.getDisplayName();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.9121708005877587
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.setNotes("variable.cleaningStatus.label");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("variable.cleaningStatus.label", rawVariable0.getNotes());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0164927125448684
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.setColumnStart((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setTerm("UNABLE_TO_GET_ALIAS_FILE_PATH_NAME");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 103
  /*Coverage entropy=3.0773094654030735
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAlternativeVariable((Variable) null);
      rawVariable0.form = "F";
      rawVariable0.setLabel("F");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setNameSpace("w5^,H3s(<ZCM");
      ontologyTerm0.setNameSpace("1WGcq-9d^>a5#1P3");
      String string0 = "variable.cleaningDescription.label";
      User user0 = new User("D92Ygp^c8!~`kgL", "variable.cleaningDescription.label");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setNotes("w5^,H3s(<ZCM");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      User user1 = new User("w5^,H3s(<ZCM", "KUF2/");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, (Variable) null);
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=2.5920593920578305
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setQuestionNumber((String) null);
      String string0 = "V;=YW-p1sEfNM91zN\\";
      User user0 = new User("V;=YW-p1sEfNM91zN", "V;=YW-p1sEfNM91zN");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.554035648050529
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      MockDate mockDate0 = new MockDate();
      MockDate.UTC((-1142), (-1079), 21, (-1142), (-1798), 78);
      MockDate mockDate1 = new MockDate();
      Date.from(instant0);
      MockDate mockDate2 = new MockDate((-790), (-1079), 78, (-3413), 294);
      MockDate mockDate3 = new MockDate(201L);
      MockDate mockDate4 = new MockDate((-1079), (-2013772730), (-2013772730));
      mockDate0.before(mockDate4);
      Object object0 = new Object();
      User user0 = new User("$", (String) null);
      user0.setLastName("$");
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "{";
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("{", rawVariable0.getCodeBookNumber());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=2.853455669502729
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningDescription("iYV8=L");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("g>GweS`e&yjbEp{");
      ontologyTerm0.setOntologyName("Qn4k4kF");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("ZS");
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      ontologyTerm4.setTerm("Qn4k4kF");
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm7);
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      OntologyTerm ontologyTerm9 = new OntologyTerm();
      OntologyTerm ontologyTerm10 = new OntologyTerm();
      OntologyTerm ontologyTerm11 = new OntologyTerm();
      OntologyTerm ontologyTerm12 = new OntologyTerm();
      User user0 = new User();
      user0.setLastName("Qn4k4kF");
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      assertEquals("iYV8=L", derivedVariable0.getCleaningDescription());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.6206220186660607
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.columnEnd = "UNABLE_TO_CHECK_CLEANING_STATE_EXISTS";
      rawVariable0.createVariableSummary();
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_CHECK_CLEANING_STATE_EXISTS", rawVariable0.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.9367155191755026
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      user0.setAddressLine1("F");
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setYear(".ZHz~6P\u0006f>");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument1.setDescription((String) null);
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument6.setDescription("F");
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument0.setFileName(".ZHz~6P\u0006f>");
      supportingDocument2.setFileName("F");
      supportingDocument9.setDescription((String) null);
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("F", rawVariable0.getLabel());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.8862308982710987
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument3.setDescription((String) null);
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument3.setDescription("aM>nE_9)h2Q8;Vxaj");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("F", rawVariable0.getLabel());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = "macaw.businessLayer.Va=iable";
      derivedVariable0.getOntologyTerms();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.hasSameDisplayName(derivedVariable0);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("", derivedVariable0.getName());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.789335756721589
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable2, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      rawVariable0.notes = "T?Jo5*7e]3\"M,";
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument2, supportingDocument0);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument1, supportingDocument8);
      supportingDocument8.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument7.setDescription("0]Y!j");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      User user1 = new User("DUPLICATE_VALUE_LABEL", (String) null);
      RawVariable rawVariable4 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable0, rawVariable0);
      assertEquals("T?Jo5*7e]3\"M,", rawVariable0.getNotes());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.155463957215262
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "variable.year.label";
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertNotNull(macawChangeEvent1);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertEquals(0, macawChangeEvent1.getChangedObjectIdentifier());
      
      rawVariable0.getAlternativeVariable();
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.5531577432135641
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Instant instant0 = MockInstant.now();
      MockDate mockDate0 = new MockDate();
      MockDate.UTC(9, (-1798), 1255, (-1798), 17, (-361));
      MockDate mockDate1 = new MockDate((-2067947214), (-2067947214), 30, (-361), 666);
      MockDate mockDate2 = new MockDate(9, 666, (-1798), (-247), 2991);
      Date.from(instant0);
      MockDate mockDate3 = new MockDate(420L);
      mockDate3.after(mockDate0);
      MockDate mockDate4 = new MockDate((-3679));
      MockDate mockDate5 = new MockDate(17, (-1789569704), (-247), (-3393), 40, 30);
      mockDate5.getTime();
      mockDate3.after(mockDate0);
      Date.from(instant0);
      MockDate.UTC((-1952257859), (-361), (-1), (-3679), 666, 74);
      mockDate3.before(mockDate5);
      MockDate mockDate6 = new MockDate((-3679), (-128), 30, (-2067947214), 2659, (-1));
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      assertFalse(rawVariable1.isCleaned());
      assertEquals(0, rawVariable1.getIdentifier());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCoded());
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.8966087604157607
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setLabel("F");
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      MockDate mockDate0 = new MockDate((-1L));
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user1.setPassword((String) null);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user1, supportingDocument1, supportingDocument0);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      User user3 = new User("F", ".ZHz~6P\u0006f>");
      SupportingDocument.detectFieldChanges(user3, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument6.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument10.setDescription("B !v;e,gJ8r|Utz`Ucv");
      rawVariable1.setIdentifier(110);
      try { 
        RawVariable.validateFields(rawVariable1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.9363521800893
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      User user0 = new User();
      Object object0 = new Object();
      User user1 = new User("q*", "q*");
      User user2 = new User("#25iQ", "q*");
      user2.setPostCode("3~/r9Xf");
      user2.setPostCode("]7(K/~G");
      User user3 = new User("", "q*");
      user3.setAddressLine1("");
      rawVariable0.setName("");
      Variable.detectFieldChanges(user2, rawVariable0, rawVariable0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument0.setDescription((String) null);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setFileName("'\"AtP32r<qIU)");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      rawVariable0.setAvailability("p;2C");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.setDescription("+teO");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      rawVariable0.getAlternativeVariable();
      assertEquals("p;2C", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.297687147780183
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      arrayList0.sort((Comparator<? super SupportingDocument>) null);
      rawVariable0.setSupportingDocuments(arrayList0);
      Variable.validateFields(rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      Object object0 = new Object();
  }

  /**
  //Test case number: 117
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      rawVariable0.setAlternativeVariable(rawVariable0);
      String string0 = "F";
      rawVariable0.setLabel("F");
      String string1 = null;
      User user0 = new User((String) null, "F");
      RawVariable rawVariable1 = new RawVariable();
      // Undeclared exception!
      try { 
        rawVariable1.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=2.836041545443152
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlternativeVariable(rawVariable1);
      rawVariable0.setCleaned(true);
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      rawVariable0.addSupportingDocuments(arrayList0);
      User user0 = new User((String) null, "V;=YW-p1sEfNM91zN");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument1.setDescription("B !v;e,gJ8r|Utz`Ucv");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      supportingDocument5.setDescription("V;=YW-p1sEfNM91zN");
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      rawVariable1.getAlternativeVariable();
      assertFalse(rawVariable1.isCleaned());
      
      Variable.validateFields(rawVariable0);
      assertTrue(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
