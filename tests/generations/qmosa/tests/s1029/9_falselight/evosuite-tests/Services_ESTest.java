/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 20 01:59:36 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 426);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("**PErreu g\u00E9n\u00E9\u00E9e : ", 426);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1439);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "k|hW]5R laVk+Nv");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "k|hW]5R laVk+Nv");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "k|hW]5R laVk+Nv");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "k|hW]5R laVk+Nv");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "OI&4]t[^E|gLq}`");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("IV", 1439);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://yi5p<MR:1595");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ",&hmYz");
      EvoSuiteURL evoSuiteURL1 = new EvoSuiteURL("http://yi5p<MR:1595");
      NetworkHandling.createRemoteTextFile(evoSuiteURL1, "g");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("yi5p<MR", 1595);
      assertEquals(7, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.3502705392332346
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://Tl8VyP\"+yrCs(Jkp_:1");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "nt}icmLmV^v");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("Tl8VyP\"+yrCs(Jkp_", 1);
      assertEquals(12, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, (-428));
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1L);
      Services.testPOP3("", (-1));
      System.setCurrentTimeMillis((byte) (-23));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-184L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1897L));
      System.setCurrentTimeMillis((-1371L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      
      services_HTTP_Result0.code = 0;
      services_HTTP_Result0.Error = services_HTTP_Result0.Error;
      services_HTTP_Result0.Error = "";
      services_HTTP_Result0.code = 1424;
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 1424\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-187L));
      System.setCurrentTimeMillis(2611L);
      System.setCurrentTimeMillis((byte) (-23));
      System.setCurrentTimeMillis(1440L);
      System.setCurrentTimeMillis(1L);
      Services.testHTTP("k|hW]5R laVk+Nv", (byte) (-23));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((byte) (-23));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1059L);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("** Erreur g\u00E9n\u00E9r\u00E9e : ", (-1));
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, (-380));
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      
      services_HTTP_Result0.code = 0;
      services_HTTP_Result0.Error = services_HTTP_Result0.Error;
      services_HTTP_Result0.code = 1424;
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 1424\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      assertEquals(0L, services_SIMPLE_Result0.time);
      
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      services_SIMPLE_Result1.works = false;
      services_SIMPLE_Result0.time = (-1L);
      services_SIMPLE_Result1.time = (-1L);
      services_SIMPLE_Result1.works = true;
      services_SIMPLE_Result1.works = true;
      services_SIMPLE_Result1.Error = "";
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_SIMPLE_Result0.toString();
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      services_SIMPLE_Result1.reset();
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1929L));
      System.setCurrentTimeMillis((-1829L));
      Services.testHTTPS("Qe.,p4A", (-793));
      System.setCurrentTimeMillis((-1829L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("97m7,di&'e[", (-1808));
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("rx{MO_u/y}Kt?[S", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("Tl8VyP\"+yrbs(JKp_", 1);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("TM#h;)8K^kFUG", 0);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Services services0 = new Services();
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(1154);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      Services.testPOP3("6GvqM", 1154);
      System.setCurrentTimeMillis(1040L);
      System.setCurrentTimeMillis(1154);
      System.setCurrentTimeMillis(1085L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis((-79L));
  }
}
