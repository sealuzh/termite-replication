/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:24:53 GMT 2019
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Services_ESTest extends Services_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 2554);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress1 = new EvoSuiteRemoteAddress("200.42.42.0", 2554);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress1);
      System.setCurrentTimeMillis(2234L);
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "**");
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("**", 2554);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.8058632507364383
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("?DiL 2", (-893));
      services_HTTP_Result0.toString();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://5!e7^:1207");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "**URL Mal Form\u00E9** (java.net.MalformedURLException: Invalid port number :-893) **");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "lAXK[qT");
      Services.testHTTP("5!e7^", 1207);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.works = false;
      System.setCurrentTimeMillis(0L);
      Services.HTTP_Result services_HTTP_Result1 = new Services.HTTP_Result();
      System.setCurrentTimeMillis(1176L);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = new Services.SIMPLE_Result();
      services_SIMPLE_Result0.reset();
      services_SIMPLE_Result0.Error = "&C2Ga";
      Services.SIMPLE_Result services_SIMPLE_Result1 = new Services.SIMPLE_Result();
      String string0 = services_SIMPLE_Result0.toString();
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Erreur g\u00E9n\u00E9r\u00E9e : &C2Ga.\n****", string0);
      
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://5!e7^:1207");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      NetworkHandling.createRemoteTextFile((EvoSuiteURL) null, "lAXK[qT");
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTP("5!e7^", 1207);
      assertTrue(services_HTTP_Result1.works);
      
      String string1 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteLocalAddress evoSuiteLocalAddress0 = new EvoSuiteLocalAddress("192.168.1.42", 40000);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte)1;
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      NetworkHandling.sendMessageOnTcp(evoSuiteLocalAddress0, "eRX3V#v!?mV{/wC");
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 1);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("Aj64E0-X", 1);
      assertEquals(0L, services_SIMPLE_Result0.time);
      assertFalse(services_SIMPLE_Result0.works);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.4942662253853725
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("https://j0nz/brw-Tm:2405");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "uar.,}l&V[Ip7zra");
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("j0nz/brw-Tm", 2405);
      assertEquals(17, services_HTTP_Result0.page_weight);
      assertTrue(services_HTTP_Result0.works);
      
      Services.HTTP_Result services_HTTP_Result1 = Services.testHTTPS("**Erreur : ", (-1));
      assertFalse(services_HTTP_Result1.works);
      assertEquals(0, services_HTTP_Result1.code);
      assertEquals(0L, services_HTTP_Result1.time);
      assertEquals(0, services_HTTP_Result1.page_weight);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.reset();
      assertEquals(0, services_HTTP_Result0.code);
      
      services_HTTP_Result0.code = (-1343);
      String string0 = services_HTTP_Result0.toString();
      assertEquals("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : -1343\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", string0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP((String) null, 0);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("TMooIKoWP", (-1));
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testSMTP("u_1tu*8sEr4J{", 265);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(265);
      System.setCurrentTimeMillis(265);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(265);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis((-3228L));
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(3796L);
      services_SIMPLE_Result0.reset();
      System.setCurrentTimeMillis(265);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(3796L);
      System.setCurrentTimeMillis((-3228L));
      System.setCurrentTimeMillis(2519L);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis((-3228L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-3228L));
      System.setCurrentTimeMillis(3107L);
      System.setCurrentTimeMillis(265);
      System.setCurrentTimeMillis(14L);
      System.setCurrentTimeMillis(2493L);
      System.setCurrentTimeMillis(3107L);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTP("** Erreur g\u00E9n\u00E9r\u00E9e : ", 0);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
      assertFalse(services_HTTP_Result0.works);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Services services0 = new Services();
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.page_weight = (-1343);
      services_HTTP_Result0.toString();
      services_HTTP_Result0.reset();
      services_HTTP_Result0.code = (-1343);
      services_HTTP_Result0.toString();
      assertEquals(0, services_HTTP_Result0.page_weight);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("ild!2", (-1));
      services_SIMPLE_Result0.toString();
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(3901L);
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(3901L);
      System.setCurrentTimeMillis(3901L);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-3228L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-3L));
      System.setCurrentTimeMillis((-2809L));
      System.setCurrentTimeMillis(1211L);
      System.setCurrentTimeMillis((-1343L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-411L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-2809L));
      System.setCurrentTimeMillis((-3228L));
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(2012L);
      System.setCurrentTimeMillis((-1));
      System.setCurrentTimeMillis((-239L));
      System.setCurrentTimeMillis((-6L));
      System.setCurrentTimeMillis((-1222L));
      System.setCurrentTimeMillis(21L);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(2012L);
      System.setCurrentTimeMillis(2012L);
      System.setCurrentTimeMillis((-239L));
      System.setCurrentTimeMillis(2012L);
      System.setCurrentTimeMillis((-11L));
      System.setCurrentTimeMillis((-239L));
      System.setCurrentTimeMillis((-1L));
      Services.HTTP_Result services_HTTP_Result0 = new Services.HTTP_Result();
      services_HTTP_Result0.toString();
      services_HTTP_Result0.toString();
      Services.testSMTP("**** Resultat : \n** Fonctionnement : false\n** Temps : 0 ms\n** Poid de la page : 0 octets\n** Code de page : 0\n** Erreur g\u00E9n\u00E9r\u00E9e : .\n****", 1);
      System.setCurrentTimeMillis((-1L));
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Services.SIMPLE_Result services_SIMPLE_Result0 = Services.testPOP3("a[%bg%<kyc3", 0);
      assertFalse(services_SIMPLE_Result0.works);
      assertEquals(0L, services_SIMPLE_Result0.time);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS((String) null, 1);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.code);
      assertEquals(0L, services_HTTP_Result0.time);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Services.HTTP_Result services_HTTP_Result0 = Services.testHTTPS("+h!io$yO9z?x`~oL=AR", (-116));
      assertFalse(services_HTTP_Result0.works);
      assertEquals(0, services_HTTP_Result0.page_weight);
      assertEquals(0L, services_HTTP_Result0.time);
      assertEquals(0, services_HTTP_Result0.code);
  }
}
