/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:16:53 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.beans.PropertyChangeListener;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.net.URI;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.Month;
import java.time.chrono.Chronology;
import java.time.format.ResolverStyle;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalField;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.plaf.metal.MetalComboBoxUI;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAlias;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasColorProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaDetailProperties;
import net.sourceforge.squirrel_sql.client.gui.db.SQLAliasSchemaProperties;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.IntegerIdentifier;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.swing.ImageIconUIResource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z,#4otcx<De[=%", "AEuf?y9LcYMT*dqcnc", (String) null, "h;w/u7dlrA", (-1), "Y,VpPG1K>cf8", (-2008), 23498, 151, (-1781), "h;w/u7dlrA", (String) null, 23498, 151, ">UO#@");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("h;w/u7dlrA");
      DatabaseObjectType.createNewDatabaseObjectType("[;?Gk(Jb3dm`&?Sg");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      PrintWriter printWriter0 = mockPrintWriter0.append('\'');
      printWriter0.println(1032.1323F);
      defaultListCellRenderer0.list(printWriter0, 2002);
      defaultListCellRenderer0.getIcon();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Y,VpPG1K>cf8");
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, (-2255), (-2117), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDTPropertiesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("_n=oV~BI!h", "q0HQi?T", fileWrapper0);
      fileWrapperImpl0.deleteOnExit();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("rbDt}(>6fm@");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, (-513), 985, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getColorProperties();
      Month month0 = Month.NOVEMBER;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getLibraryDirectory();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(file0);
      FileWrapperImpl fileWrapperImpl1 = FileWrapperImpl.createTempFile("DBUtil.info.bindcloblength", ";S/c;M_j`wK*", fileWrapperImpl0);
      fileWrapperImpl1.renameTo(fileWrapperImpl0);
      fileWrapperFactoryImpl0.create("$~1??Cs aWq");
      fileWrapperFactoryImpl0.create("DBUtil.info.bindcloblength", "TRUNCATE TABLE ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileWrapperImpl0.toURL();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(file0);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      int int0 = 93;
      sQLAliasSchemaDetailProperties0.setProcedure(93);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 91, 0, 1, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString(" ");
      uidIdentifier0.setString("*J\"*s$R3");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("*J\"*s$R3");
      uidIdentifier1.setString((String) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFwJarFile();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      applicationFileWrappersImpl0.getUpdateDirectory();
      applicationFileWrappersImpl0.getUserSQLHistoryFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 12, 2004, (byte) (-51), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte)0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getUserSettingsDirectory();
      FileWrapper fileWrapper1 = applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("Encountered unexpected exception while attempting to determine if schemas are used in table definitions", "_n=oV~BI!h", fileWrapper0);
      fileWrapperImpl0.deleteOnExit();
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperImpl0.renameTo(fileWrapper1);
      fileWrapperFactoryImpl0.create("$~1??Cs aWq");
      fileWrapperFactoryImpl0.create("i_LB2_K9o0-0S/Rm", "Encountered unexpected exception while attempting to determine if schemas are used in table definitions");
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileWrapperImpl0.toURL();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl((File) null);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setProcedure(93);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2), 93, 1, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("#%T-6D3xbV|FG3t#\"");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("_n=oV~BI!h");
      fileWrapperImpl1.deleteOnExit();
      fileWrapperImpl1.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperImpl1.renameTo(fileWrapperImpl0);
      fileWrapperFactoryImpl1.create("org.hibernate.dialect.TypeNames");
      fileWrapperFactoryImpl1.create("#%T-6D3xbV|FG3t#\"", "#%T-6D3xbV|FG3t#\"");
      fileWrapperImpl1.toURL();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl((File) null);
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl("_n=oV~BI!h");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1111, 1111, 93, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("SELECT data_type FROM information_schema.columns where column_name = ? ");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2006, (-1952257859), (-1952257859), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getColorProperties();
      Month month0 = Month.NOVEMBER;
      Chronology.from(month0);
      HashMap<TemporalField, Long> hashMap0 = new HashMap<TemporalField, Long>();
      ChronoField chronoField0 = ChronoField.HOUR_OF_AMPM;
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("/W&`");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, (-1), 2009, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl1.createTempFile("J0LYovLUEE#%.[e,jvG", "J0LYovLUEE#%.[e,jvG", fileWrapper0);
      FileWrapperImpl.listRoots();
      fileWrapperImpl0.deleteOnExit();
      FileWrapper fileWrapper1 = fileWrapperImpl0.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      fileWrapperImpl0.renameTo(fileWrapper1);
      fileWrapperFactoryImpl1.create("DBUtil.error.bindblobfailure");
      fileWrapperFactoryImpl0.create("J0LYovLUEE#%.[e,jvG", "2_l@,g*8");
      FileSystemHandling.shouldAllThrowIOExceptions();
      fileWrapperImpl0.toURL();
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(mockFile0);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties0.setProcedure((-1406));
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, 93, (-52), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDTPropertiesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("_n=oV~BI!h", "#%T-6D3xbV|FG3t#\"", fileWrapper0);
      fileWrapperImpl0.deleteOnExit();
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperImpl0.renameTo(fileWrapper0);
      fileWrapperFactoryImpl1.create("#%T-6D3xbV|FG3t#\"", "#%T-6D3xbV|FG3t#\"");
      fileWrapperImpl0.toURL();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl((File) null);
      fileWrapperImpl0.getBufferedReader();
      fileWrapperFactoryImpl1.create((File) null);
      fileWrapperFactoryImpl0.create("_n=oV~BI!h", "Unknown 'category' key.");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("&$8t05}Bzm`I");
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserSQLHistoryFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 70, (byte)8, (byte)8, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("#%T-6D3xbV|FG3t#\"");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getUserSettingsDirectory();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl1 = fileWrapperFactoryImpl0.createTempFile("_n=oV~BI!h", "#%T-6D3xbV|FG3t#\"", (FileWrapper) fileWrapperImpl0);
      fileWrapperImpl1.deleteOnExit();
      fileWrapperImpl1.getCanonicalFile();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("#%T-6D3xbV|FG3t#\"");
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-1), 1, 72, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties2.setProcedure(1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1, 0, (-1982), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties6 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties7 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties8 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties7.setProcedure((-54));
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, (-5161), 91, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl1.create(" )", "-02-");
      applicationFileWrappersImpl0.getEditWhereColsFile();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getUserSQLHistoryFile();
      fileWrapperFactoryImpl1.create(file0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getFwJarFile();
      applicationFileWrappersImpl2.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("-02-");
      applicationFileWrappersImpl2.getUserSQLHistoryFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3), 2004, (-3), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("=|eWX?=F}n/0");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("jw=0u'[");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("ej6u&uad4B", icon0);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      databaseObjectType1.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("(j1La,Y$#V=");
      ImageIcon imageIcon0 = new ImageIcon("|x!!k>.[-ZsF.C5}D0P", "$&9N,3=Y/jwWM=$-8'");
      imageIcon0.getImage();
      ImageIcon imageIcon1 = new ImageIcon(byteArray0);
      imageIcon0.getAccessibleContext();
      imageIcon1.getAccessibleContext();
      imageIcon0.getAccessibleContext();
      imageIcon1.getImageLoadStatus();
      imageIcon1.getDescription();
      ImageIcon imageIcon2 = new ImageIcon("jw=0u'[");
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      imageIcon0.getImageObserver();
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("=|eWX?=F}n/0", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.FUNCTION;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "=|eWX?=F}n/0", (String) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDTPropertiesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("_n=oV~BI!h", "#%T-6D3xbV|FG3t#\"", fileWrapper0);
      fileWrapperImpl0.deleteOnExit();
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperImpl0.renameTo(fileWrapper0);
      fileWrapperFactoryImpl1.create("#%T-6D3xbV|FG3t#\"", "#%T-6D3xbV|FG3t#\"");
      fileWrapperImpl0.toURL();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl((File) null);
      fileWrapperImpl0.getBufferedReader();
      fileWrapperFactoryImpl1.create((File) null);
      fileWrapperFactoryImpl0.create("_n=oV~BI!h", "Unknown 'category' key.");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("'?;8T-\"^_{4UI(9+");
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getUserSQLHistoryFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (byte)8, 70, (byte)8, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDTPropertiesFile();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      fileWrapperFactoryImpl0.create("#%T-6D3xbV|FG3t#\"", "#%T-6D3xbV|FG3t#\"");
      applicationFileWrappersImpl0.getEditWhereColsFile();
      fileWrapperFactoryImpl0.create((File) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getFwJarFile();
      applicationFileWrappersImpl2.getJDBCDebugLogFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("#%T-6D3xbV|FG3t#\"");
      applicationFileWrappersImpl0.getUserSQLHistoryFile();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, (-3), (-3), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      DatabaseObjectType.createNewDatabaseObjectType("DROP TABLE ", (Icon) imageIcon0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("9>TbU)c} 77]L", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, (byte) (-48), (-15), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailProperties3.setProcedure((-5018));
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, (-5018), (-504), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(",\n\tP_IMARY KEY ", "^#;_", (String) null, ",\n\tP_IMARY KEY ", (-1121), "Y)RZ Gm", 5, 3045, (-2), 22, "Us |^pTp", "yX3!uC{$CwReLS0Fj))", 588, 2005, "x[?Oo!)YNlA$c");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType(",\n\tP_IMARY KEY ", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.CATALOG;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, 3045, 1007, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G,b!{)Bbj\"o7");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "G,b!{)Bbj\"o7");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.unload();
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("WN|5->i9h)3", "WN|5->i9h)3", "G,b!{)Bbj\"o7", "Y)RZ Gm", 1111, "Z&>3o,yt``.U:+", 1078, 7, 2000, 1078, "H", "S0HFq;", 1078, 8, "S0HFq;");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(1111, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-38));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties6 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties7 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[3];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties8 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties8;
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties6;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties0;
      sQLAlias0.getSchemaProperties();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "5BT0";
      stringArray0[1] = "5BT0";
      stringArray0[2] = "5BT0";
      stringArray0[3] = "F/\"\"S2p@j4@~Q7cA";
      stringArray0[4] = "F/\"\"S2p@j4@~Q7cA";
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, 2, 121, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-1969), (-7), 1896, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "f1", "@[U^dMbOi9");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      DBUtil.typesAreEquivalent((-7), 1699);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "f1", "|@m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-726));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(connection0).getAutoCommit();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)107;
      byteArray0[1] = (byte)107;
      byteArray0[4] = (byte)107;
      byteArray0[7] = (byte) (-9);
      byteArray0[8] = (byte)53;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "INCO{k4,gAK;ntj,");
      sQLDriver0.clone();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      sQLConnection0.close();
      try { 
        DBUtil.executeUpdate(sQLConnection0, "Y,VpPG1K>cf8", false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No connection
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLConnection", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      MetalComboBoxUI metalComboBoxUI0 = new MetalComboBoxUI();
      PropertyChangeListener propertyChangeListener0 = metalComboBoxUI0.createPropertyChangeListener();
      sQLAlias0.removePropertyChangeListener(propertyChangeListener0);
      sQLAlias0.getSchemaProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "wrapper-binary";
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 3);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      String[] stringArray0 = new String[1];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties6 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[4];
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties3;
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties1;
      sQLAliasSchemaDetailPropertiesArray0[3] = sQLAliasSchemaDetailProperties3;
      sQLAliasSchemaProperties0.setSchemaDetails(sQLAliasSchemaDetailPropertiesArray0);
      String[] stringArray1 = sQLAliasSchemaProperties0.getAllSchemaProceduresNotToBeCached();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, stringArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-3384));
      SQLAlias sQLAlias0 = new SQLAlias(integerIdentifier0);
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier((-1352));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("06");
      uidIdentifier0.setString("v}y");
      uidIdentifier0.setString("j8T/q]3QNGME(70|Cu");
      sQLAlias0.getDriverPropertiesClone();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte) (-14);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3365, (-1352));
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      String string0 = "|mHG\"";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("wB&iaZr!'_\"", "]bGZj\"yZOM_", "j8T/q]3QNGME(70|Cu", "wB&iaZr!'_\"", 92, "P#4B9Y", (-4), 4503, 1963, 92, "j8T/q]3QNGME(70|Cu", "|mHG\"", 1963, 4503, "v}y");
      arrayList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(arrayList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      SQLAliasSchemaProperties sQLAliasSchemaProperties0 = new SQLAliasSchemaProperties();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "5BT0";
      stringArray0[1] = "F/\"\"S2p@j4@~Q7cA";
      stringArray0[2] = null;
      stringArray0[3] = "F/\"\"S2p@j4@~Q7cA";
      stringArray0[4] = null;
      stringArray0[6] = "F/\"\"S2p@j4@~Q7cA";
      stringArray0[7] = "`RM5U-8";
      stringArray0[8] = null;
      ISQLConnection iSQLConnection0 = null;
      ITableInfo iTableInfo0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDF;
      databaseObjectType0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType((String) null);
      ImageIcon imageIcon0 = new ImageIcon("l", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      imageIcon0.getAccessibleContext();
      imageIcon0.getImage();
      imageIcon0.getDescription();
      DatabaseObjectType.createNewDatabaseObjectType(";;l|yK[c$JDIO", (Icon) null);
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      ImageIcon imageIcon1 = new ImageIcon("select ");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PROCEDURE;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, (-1));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-51);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" CHAR(10) )", "@FfqSr@}&&ZT@H", " CHAR(10) )", "@FfqSr@}&&ZT@H", 136, "p8NK", 8, (byte)8, (byte) (-51), (byte)8, "Max function is null for dialect=", "@FfqSr@}&&ZT@H", (byte) (-51), 2291, "Max function is null for dialect=");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("select ");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.UDF;
      databaseObjectType3.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType(" CHAR(10) )");
      ImageIcon imageIcon0 = new ImageIcon("select ", "fixCase: unexpected exception: ");
      imageIcon0.getImage();
      imageIcon0.getDescription();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      ImageIcon imageIcon1 = new ImageIcon("@FfqSr@}&&ZT@H");
      DatabaseObjectType.createNewDatabaseObjectType("select ", (Icon) null);
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.PROCEDURE;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 2291);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte) (-72);
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte) (-42);
      byteArray0[2] = (byte) (-7);
      byteArray0[8] = (byte) (-22);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (byte) (-7));
      boolean boolean1 = DBUtil.typesAreEquivalent(16, (byte) (-122));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "f");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((DatabaseMetaData) null).when(connection0).getMetaData();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      File file0 = applicationFiles0.getFAQFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(file0);
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getSQuirrelJarFile();
      fileWrapperImpl0.renameTo(fileWrapper0);
      fileWrapperFactoryImpl0.create((File) null);
      applicationFileWrappersImpl0.getExecutionLogFile();
      FileWrapperImpl fileWrapperImpl1 = fileWrapperFactoryImpl0.createTempFile("t/6Z?q?@+", "(", fileWrapper0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl(fileWrapperImpl1);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getUserSQLHistoryFile();
      fileWrapperImpl2.deleteOnExit();
      fileWrapperImpl2.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey(sQLConnection0, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("returning null as column: ");
      uidIdentifier0.setString("applicationFiles");
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString((String) null);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("returning null as column: ");
      uidIdentifier2.setString((String) null);
      uidIdentifier1.setString(" ");
      uidIdentifier2.setString("");
      uidIdentifier0.setString("returning null as column: ");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("qTV[x o=[Q#@0/");
      uidIdentifier1.setString("({+:(YxaRn");
      uidIdentifier1.setString((String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "applicationFiles", "");
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "SmallIcon", "Time", "org.apache.log4j.WriterAppender");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-47);
      byteArray0[1] = (byte)107;
      byteArray0[1] = (byte)107;
      byteArray0[4] = (byte)107;
      byteArray0[7] = (byte) (-14);
      byteArray0[8] = (byte)53;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "INCO{k4,gAK;ntj,");
      SQLDriver sQLDriver1 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "Y,VpPG1K>cf8", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.ScriptWriter", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-9);
      byteArray0[8] = (byte)53;
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      sQLDriverPropertyCollection0.clear();
      DriverPropertyInfo[] driverPropertyInfoArray0 = new DriverPropertyInfo[5];
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo(";;l|yK[c$JDIO", "");
      driverPropertyInfoArray0[0] = driverPropertyInfo0;
      DriverPropertyInfo driverPropertyInfo1 = new DriverPropertyInfo("x(", ";;l|yK[c$JDIO");
      driverPropertyInfoArray0[1] = driverPropertyInfo1;
      DriverPropertyInfo driverPropertyInfo2 = new DriverPropertyInfo("", (String) null);
      driverPropertyInfoArray0[2] = driverPropertyInfo2;
      DriverPropertyInfo driverPropertyInfo3 = new DriverPropertyInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ", ");
      driverPropertyInfoArray0[3] = driverPropertyInfo3;
      DriverPropertyInfo driverPropertyInfo4 = new DriverPropertyInfo("VJ$^e?#QH6q`=c1", ", ");
      driverPropertyInfoArray0[4] = driverPropertyInfo4;
      sQLDriverPropertyCollection0.applyDriverPropertynfo(driverPropertyInfoArray0);
      SQLDriver sQLDriver0 = new SQLDriver();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      sQLDriver0.clone();
      sQLDriver0.setReportPropertyChanges(false);
      SQLConnection sQLConnection0 = new SQLConnection(connection0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate(sQLConnection0, "Y,VpPG1K>c`f8", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties0 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties1 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties2 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties3 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties4 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties5 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties6 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties7 = new SQLAliasSchemaDetailProperties();
      SQLAliasSchemaDetailProperties[] sQLAliasSchemaDetailPropertiesArray0 = new SQLAliasSchemaDetailProperties[3];
      SQLAliasSchemaDetailProperties sQLAliasSchemaDetailProperties8 = new SQLAliasSchemaDetailProperties();
      sQLAliasSchemaDetailPropertiesArray0[0] = sQLAliasSchemaDetailProperties6;
      sQLAliasSchemaDetailProperties8.setProcedure(1);
      sQLAliasSchemaDetailPropertiesArray0[1] = sQLAliasSchemaDetailProperties6;
      sQLAliasSchemaDetailPropertiesArray0[2] = sQLAliasSchemaDetailProperties0;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "5BT0";
      stringArray0[1] = "5BT0";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("0XL&) ,dDgnnf!O", "5BT0", "F/\"\"S2p@j4@~Q7cA", "5BT0", 0, "GinK|,p", 1122, 2, 3, 966, " in schema ", "-m!}K{5}YeqF", 1, 1, "?|W(w");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("<IIZRH~92qx", "<IIZRH~92qx", "MnNO5?", "<IIZRH~92qx", 0, "MnNO5?", 0, 117, 117, 1247, "(", "<IIZRH~92qx", 117, 117, "MnNO5?");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.OTHER;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM((DatabaseObjectType) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getSourceSession();
      DBUtil.typesAreEquivalent(2, 6);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo1 = null;
      try {
        tableColumnInfo1 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "org.jfree.data.general.Series", "DOI^", "MnNO5?", (-730), "DOI^", 1, 96, (-730), 1, "S}^WWu0H|Ni{", "YcmA93w'c", 189, 5584, "}`JyKs[.X:,`EG%3", (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-51);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte) (-51);
      byteArray0[6] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 23502);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)90;
      dBCopyPlugin0.getSourceSession();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~Ymu)/");
      dBCopyPlugin0.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("C5E24i", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ":[9-KlnnC", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-158), "QZ", (-158), (byte)90, (byte)90, (-2084), "t;P!_HlQr@XB", "C5E24i", 6, 11, "logs");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType((TableColumnInfo) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.117456111453701
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "", "", "select ", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte)0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("applicationFiles");
      uidIdentifier1.setString("%Myj.7-1b3u");
      uidIdentifier0.setString("com.jidesoft.plaf.vsnet.VsnetMenuUI$MenuKeyHandler");
      uidIdentifier1.setString("$f\u0005M");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier0.setString(";;l|yK[c$JDIO");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      assertEquals("7845f96b:16e6d0aa6bd:-745a", uidIdentifier3.toString());
      
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "com.jidesoft.plaf.vsnet.VsnetMenuUI$MenuKeyHandler", "X [reQAML");
      int int0 = DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (String) null);
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver();
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      sQLDriver0.removePropertyChangeListener((PropertyChangeListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      sQLDriverPropertyCollection0.clear();
      sQLConnection0.setCommitOnClose(true);
      dBCopyPlugin0.getPasteToTableInfo(sQLConnection0, "(!^FM`$6]cU,WluIA", "JC,VM?X71G1U_");
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      SQLConnection sQLConnection2 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) sQLConnection2, (ITableInfo) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.3288274798399655
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("\"*W-x{#zDGS", ".CURRVAL", "Y;)tF", "AK:rRhdwE5%E-R+d", 2004, ".CURRVAL", (-3417), 840, (-43), (-2434), "K,RaJ@O!1w$f7t", "getCurrencyCode", (-104), (-7), "\"*W-x{#zDGS");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.OTHER;
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      fileWrapperFactoryImpl0.create("4r}zry", "{M8o;HMc_6I(?0!'");
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      fileWrapperFactoryImpl0.createTempFile("%oGN'sP`2@m", "%oGN'sP`2@m", fileWrapper0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-79);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(2004, int0);
      
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      boolean boolean0 = DBUtil.typesAreEquivalent((-1750), (-104));
      boolean boolean1 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Y,VpPG1K>cf8", ") - table ", " AND ", ">#2:@", (-2), ") - table ", (-654), 19, (-1769), (-2008), "; ", ") - table ", (-2), 1900, "Failed to call ResultSetMetaData.isAutoIncrement()");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("[QxNloxiH");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(">#2:@");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.createNewDatabaseObjectType("VPH>=Ny;J0R9=", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.setPasteToTableName("M{jn(");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.isBinaryType(tableColumnInfo0);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      ISession iSession0 = dBCopyPlugin1.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("nOl");
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDTPropertiesFile();
      fileWrapper0.deleteOnExit();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      fileWrapper0.getCanonicalFile();
      fileWrapperFactoryImpl0.createTempFile("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", fileWrapper0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT_TYPE_DBO;
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX_TYPE_DBO;
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      String string0 = "C>0ACHE";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Cr", "C>0ACHE");
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-1969);
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-1969));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      sQLDriverPropertyCollection0.removeDriverProperty("R}%0h#o@8q#Krk");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      SQLConnection sQLConnection0 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "R}%0h#o@8q#Krk", 282, "R}%0h#o@8q#Krk", (-1386), (-1386), (-1386), 1258, "com.jidesoft.plaf.vsnet.VsnetMenuUI$MenuDragMouseHandler", (String) null, 1078, 1231, "_{AGY=~{>,^S");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      SQLConnection sQLConnection1 = new SQLConnection(connectionWrapper0, sQLDriverPropertyCollection0, sQLDriver0);
      dBCopyPlugin1.getPasteToTableInfo(sQLConnection1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "$L59y+^$Pn");
      //  // Unstable assertion: assertEquals("7845f96b:16e6d0aa6bd:-7466", uidIdentifier0.toString());
      
      linkedList0.add((ITableInfo) null);
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(linkedList0);
      DBUtil.convertObjectToTableList(list0);
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(stack0);
      //  // Unstable assertion: assertFalse(list1.equals((Object)list0));
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL(dBCopyPlugin0, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "C>0ACHE", "3DcUnXEhNqYmLcH", "R", (-2004318069), "R", (-2004318069), (-1), 102, (-2004318069), (String) null, "BWM,kM*]yf", (-2004318069), 2003, "Null 'range' argument.");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte)0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      //  // Unstable assertion: assertEquals("7845f96b:16e6d0aa6bd:-74c5", uidIdentifier1.toString());
      
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)119;
      byteArray1[1] = (byte)8;
      byteArray1[2] = (byte)119;
      ImageIcon imageIcon0 = new ImageIcon(byteArray1, ";/vM+=kih");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.createNewDatabaseObjectType("7[jxrWiXAlV,lN", (Icon) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("[E?u,z2YTVGqOyq`-a", "[E?u,z2YTVGqOyq`-a", ";/vM+=kih", (String) null, 1000000000, ";/vM+=kih", 2670, (byte)119, (-5), 2670, ";/vM+=kih", "java.lang.String", (-1073741822), (byte)119, ".");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      //  // Unstable assertion: assertFalse(boolean0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("CcE24", "R}%0h#o@8q#Krk", "Cr", "C>0ACHE", 44, "Cr", 44, (-3355), 543, (-15), "q}FePWu-4kclbl8w/}", "R}%0h#o@8q#Krk", 1879, 10000, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte) (-22);
      DBUtil.replaceDistinctDataType(2004, tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin0.getApplication();
      dBCopyPlugin0.getApplication();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      assertEquals(0, SchemaInfo.TABLE_EXT_NOT_A_TABLE);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getDTPropertiesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapper fileWrapper1 = applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("_n=oV~BI!h", "#%T-6D3xbV|FG3t#\"", fileWrapper0);
      fileWrapperImpl0.deleteOnExit();
      fileWrapperImpl0.getCanonicalFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      fileWrapperImpl0.renameTo(fileWrapper0);
      FileWrapperImpl fileWrapperImpl1 = (FileWrapperImpl)fileWrapperFactoryImpl1.create("#%T-6D3xbV|FG3t#\"", "#%T-6D3xbV|FG3t#\"");
      fileWrapperImpl0.toURL();
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl((File) null);
      fileWrapperImpl0.getBufferedReader();
      fileWrapperFactoryImpl1.create((File) null);
      FileWrapperImpl fileWrapperImpl3 = (FileWrapperImpl)fileWrapperFactoryImpl0.create("_n=oV~BI!h", "Unknown 'category' key.");
      fileWrapperFactoryImpl1.createTempFile("max", "_n=oV~BI!h", (FileWrapper) fileWrapperImpl3);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl4 = new FileWrapperImpl("_n=oV~BI!h", "#%T-6D3xbV|FG3t#\"");
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl5 = new FileWrapperImpl(fileWrapperImpl1);
      applicationFileWrappersImpl2.getUserSQLHistoryFile();
      fileWrapper1.deleteOnExit();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "_n=oV~BI!h", "#%T-6D3xbV|FG3t#\"");
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      assertEquals("changes.txt", dBCopyPlugin0.getChangeLogFileName());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean0 = DBUtil.typesAreEquivalent(45, 45);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      String string0 = "d%8xO";
      DBUtil dBUtil0 = new DBUtil();
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[9];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[3] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[4] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[5] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[6] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[7] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[8] = (IDatabaseObjectInfo) foreignKeyInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$1800000813 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[2];
      DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.setConnectAtStartup(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SQLAlias sQLAlias1 = new SQLAlias();
      sQLAlias0.getDriverPropertiesClone();
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      // Undeclared exception!
      try { 
        metalSplitPaneUI0.createDefaultDivider();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(1681);
      SQLAlias sQLAlias1 = new SQLAlias(integerIdentifier0);
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAlias1.setUserName("*5z8Q%}i;s[`5\"A");
      sQLAlias1.setUrl("Can't evaluate the week.");
      SQLAliasColorProperties sQLAliasColorProperties1 = sQLAlias0.getColorProperties();
      sQLAlias1.setDriverIdentifier(integerIdentifier0);
      SQLAliasColorProperties sQLAliasColorProperties2 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties2.setObjectTreeBackgroundColorRgbValue(1681);
      sQLAliasColorProperties1.setOverrideToolbarBackgroundColor(true);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      sQLAliasColorProperties2.setToolbarBackgroundColorRgbValue(1681);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias2 = new SQLAlias(integerIdentifier0);
      SQLDriver sQLDriver0 = new SQLDriver();
      DBUtil.fixCase((ISession) null, (String) null);
      System.setCurrentTimeMillis(1045L);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      SQLAlias sQLAlias0 = new SQLAlias();
      SQLAliasColorProperties sQLAliasColorProperties1 = sQLAlias0.getColorProperties();
      sQLAliasColorProperties1.setOverrideToolbarBackgroundColor(false);
      sQLAliasColorProperties1.setToolbarBackgroundColorRgbValue(1705);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLAlias sQLAlias1 = new SQLAlias(uidIdentifier0);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier(2);
      sQLAliasColorProperties1.setStatusBarBackgroundColorRgbValue(4);
      sQLAliasColorProperties1.setObjectTreeBackgroundColorRgbValue(1705);
      sQLAliasColorProperties1.setObjectTreeBackgroundColorRgbValue((-187));
      sQLAliasColorProperties0.setOverrideToolbarBackgroundColor(false);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.COLUMN;
      SQLAliasColorProperties sQLAliasColorProperties2 = new SQLAliasColorProperties();
      sQLAliasColorProperties0.setToolbarBackgroundColorRgbValue((-1038));
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("");
      SQLAlias sQLAlias2 = new SQLAlias(uidIdentifier0);
      SQLDriver sQLDriver0 = new SQLDriver();
      DBUtil.fixCase((ISession) null, "");
      System.setCurrentTimeMillis(271);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBUtil.typesAreEquivalent((-765), 6);
      System.setCurrentTimeMillis(1L);
      System.setCurrentTimeMillis(6);
      boolean boolean0 = DBUtil.typesAreEquivalent((-1635), 2016);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-51);
      byteArray0[6] = (byte) (-51);
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-51);
      byteArray0[5] = (byte) (-51);
      byteArray0[6] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = DBUtil.typesAreEquivalent(39, 23502);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", ",\n\tP_IMARY KEY ", "ih`=|17]ILv{4dx", 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("z,#4otcx<De[=%", "AEuf?y9LcYMT*dqcnc", (String) null, "/p`}A", (-1), "Y,VpPG1K>cf8", (-2008), 23498, 151, (-1769), "/p`}A", (String) null, 23498, 151, ">UO#@");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType(">UO#@");
      DatabaseObjectType.createNewDatabaseObjectType("/p`}A");
      DatabaseObjectType.createNewDatabaseObjectType("[;?Gk(Jb3dm`&?Sg");
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("/p`}A", (Icon) null);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte) (-73);
      byteArray0[2] = (byte) (-111);
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte)96;
      byteArray0[7] = (byte)82;
      byteArray0[8] = (byte)119;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("}X2", "v|B(*dnu<#`N)Xx>87", "ukB=Jj@Ud$4XcC&", "Null 'range' argument.", (-2), "CR[AC2E", 1141, 167, (-227), (-8), "ukB=Jj@Ud$4XcC&", "CcE24", (-227), 102, "T_!");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[5];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("Null 'range' argument., Null 'range' argument., Null 'range' argument., Null 'range' argument., Null 'range' argument.", string0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("returning null as column: ");
      uidIdentifier0.setString("applicationFiles");
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString((String) null);
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString((String) null);
      uidIdentifier1.setString(" ");
      uidIdentifier2.setString("");
      uidIdentifier0.setString("returning null as column: ");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier3.setString("qTVI[x o=[Q#@0/");
      uidIdentifier1.setString("dbcopytest");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      UidIdentifier uidIdentifier5 = new UidIdentifier();
      uidIdentifier5.setString("$oN@;P)vj$qvXt:V`");
      UidIdentifier uidIdentifier6 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "9jE.u(", "DBUtil.error.bindclobfailure");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("Y,VpPG1K>cf8");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.INDEX;
      ImageIcon imageIcon0 = (ImageIcon)databaseObjectType1.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("fixCase: unexpected exception: ", (Icon) imageIcon0);
      ImageIcon imageIcon1 = new ImageIcon("fixCase: unexpected exception: ", "9)");
      imageIcon0.getDescription();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getDisabledIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Y,VpPG1K>cf8", (Icon) null);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.TABLE_TYPE_DBO;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("9)", ")", "Max function is null for dialect=", "|x!!k>.[-ZsF.C5}D0P", (-518), " CHAR(10) )", (-1067), 2704, (-1004), 878, "9)", "DROP TABLE ", 2704, 182, "|x!!k>.[-ZsF.C5}D0P");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "`wB=J>7-o#[J 0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("kH>O.NgYwUM|YOj", "Vc!!9)f[l2NE", "RXo", "cvkKWB)dXN", 4, "}", (-2), 382, 16, 4, "1,:|r", "fYI&6oTs-6U", 4, 8, "}");
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "[076~#Vo", "axion");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("CcE24", "R}%0h#o@8q#Krk", "Cr", "C>0ACHE", 44, "Cr", 44, (-3355), 543, (-15), "q}FePWu-4kclbl8w/}", "R}%0h#o@8q#Krk", 1879, 10000, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      byte[] byteArray0 = new byte[3];
      ImageIcon imageIcon0 = new ImageIcon(byteArray0);
      imageIcon0.getAccessibleContext();
      imageIcon0.getAccessibleContext();
      imageIcon0.getAccessibleContext();
      imageIcon0.getImageLoadStatus();
      imageIcon0.getDescription();
      ImageIcon imageIcon1 = new ImageIcon("\"F");
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      imageIcon0.getImageObserver();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon1);
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.FUNCTION;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType3);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "l", "/lZx`?mVY9~E5R<o8", "n+>]!XS@");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "", "%hm", 0, "TimePeriodAnchor.END", 0, 0, 0, 366, "%hm", "", 0, 0, "kqEa^5.[cH9}G@C");
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-51);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" CHAR(10) )", "@FfqSr@}&&ZT@H", " CHAR(10) )", "@FfqSr@}&&ZT@H", 136, "p8NK", 8, (byte)8, (byte) (-51), (byte)8, "Max function is null for dialect=", "@FfqSr@}&&ZT@H", (byte) (-51), 136, "Max function is null for dialect=");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("=|eWX?=F}n/0");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.INDEX;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      databaseObjectType1.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("(j1La,Y$#V=");
      ImageIcon imageIcon0 = new ImageIcon("|x!!k>.[-ZsF.C5}D0P", "$&9N,3=Y/jwWM=$-8'");
      ImageIcon imageIcon1 = new ImageIcon(byteArray0);
      imageIcon1.getAccessibleContext();
      imageIcon0.getAccessibleContext();
      imageIcon1.getImageLoadStatus();
      imageIcon1.getDescription();
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      DatabaseObjectType.createNewDatabaseObjectType("ALTER TABLE ", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType5 = DatabaseObjectType.TABLE_TYPE_DBO;
      DatabaseObjectType databaseObjectType6 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("=|eWX?=F}n/0", (Icon) imageIcon0);
      DatabaseObjectType databaseObjectType7 = DatabaseObjectType.FUNCTION;
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals("@FfqSr@}&&ZT@H", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      String string0 = "|x!!k>.[-ZsF.C5}D0P";
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin0, "|x!!k>.[-ZsF.C5}D0P", (ITableInfo) null, (-2843));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      SQLAliasColorProperties sQLAliasColorProperties0 = new SQLAliasColorProperties();
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue((-2411));
      sQLAliasColorProperties0.setOverrideStatusBarBackgroundColor(false);
      sQLAliasColorProperties0.setOverrideToolbarBackgroundColor(false);
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue(2004);
      sQLAliasColorProperties0.setObjectTreeBackgroundColorRgbValue((-2433));
      sQLAliasColorProperties0.setOverrideStatusBarBackgroundColor(false);
      sQLAliasColorProperties0.setToolbarBackgroundColorRgbValue(12);
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getColorProperties();
      Month month0 = Month.NOVEMBER;
      Chronology chronology0 = Chronology.from(month0);
      HashMap<TemporalField, Long> hashMap0 = new HashMap<TemporalField, Long>();
      ChronoField chronoField0 = ChronoField.HOUR_OF_AMPM;
      chronology0.resolveDate(hashMap0, (ResolverStyle) null);
      sQLAlias0.equals((Object) null);
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString(" ");
      uidIdentifier0.setString("*J\"*s$R3");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier2.setString("*J\"*s$R3");
      uidIdentifier1.setString((String) null);
      uidIdentifier2.setString("applicationFiles");
      uidIdentifier2.setString("dp=U~*xv[gS");
      uidIdentifier1.setString("#lC$>?=ZMr/x51)%#");
      uidIdentifier2.setString(" in schema ");
      UidIdentifier uidIdentifier3 = new UidIdentifier();
      uidIdentifier2.setString("|%`X; +X ");
      UidIdentifier uidIdentifier4 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("kz", " ", "dp=U~*xv[gS", foreignKeyInfo0, dBCopyPlugin0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("org.jfree.data.DefaultKeyedValues");
      uidIdentifier0.setString((String) null);
      uidIdentifier1.setString("m0iuRg");
      uidIdentifier0.setString(" ");
      uidIdentifier0.setString("*J\"*s$R3");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("C+");
      uidIdentifier2.setString("*J\"*s$R3");
      uidIdentifier1.setString((String) null);
      uidIdentifier2.setString("C+");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "Y;)tF", "*J\"*s$R3");
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      IntegerIdentifier integerIdentifier1 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "1Z(=t`k-cvt0laabN", " to 128.", "Found protocol:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier0.setString((String) null);
      uidIdentifier0.setString(" ");
      uidIdentifier0.setString("*J\"*s$R3");
      UidIdentifier uidIdentifier2 = new UidIdentifier();
      uidIdentifier1.setString("applicationFiles");
      uidIdentifier2.setString("*J\"*s$R3");
      uidIdentifier2.setString("applicationFiles");
      uidIdentifier1.setString((String) null);
      uidIdentifier2.setString("applicationFiles");
      uidIdentifier2.setString("dp=U~*xv[gS");
      uidIdentifier1.setString("#lC$>?=ZMr/x51)%#");
      uidIdentifier2.setString(" in schema ");
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2002, 16);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)90;
      byteArray0[1] = (byte)90;
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, "First", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte byte0 = (byte) (-51);
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((byte) (-51));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      uidIdentifier1.setString("*J\"*s$R3");
      uidIdentifier0.setString((String) null);
      uidIdentifier1.setString("applicationFiles");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, "$f\u0005M", (String) null, "*J\"*s$R3", 38, " to 128.", (byte) (-51), (byte) (-51), (-7), (-7), "*J\"*s$R3", " to 128.", (-7), 2147483645, "$f\u0005M");
      IApplication iApplication0 = null;
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DBUtil.setLastStatementValues("schemaFilterExclude");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      schemaInfo0.getSQLDatabaseMetaData();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-51);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" =@P}k-}I_jM}Lj#$O", "DBUtil.error.nocolumns", ">/5hU@/s]`LMlhDn", "hibernate.jdbc.use_get_generated_keys", (byte) (-51), "@FfqSr@}&&ZT@H", 1879, 44, (byte)8, 2001, "ISQLAlias == null", "|x!!k>.[-ZsF.C5}D0P", (-2602), 0, "ISQLAlias == null");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      DBUtil.replaceDistinctDataType((byte) (-51), tableColumnInfo0, (ISession) null);
      dBCopyPlugin0.getWebSite();
      dBCopyPlugin1.getApplication();
      dBCopyPlugin1.getApplication();
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      dBCopyPlugin2.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      assertEquals(1, SchemaInfo.TABLE_EXT_COLS_LOADED_IN_THIS_CALL);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("", "", "WITH CHECK OPTION", "WITH CHECK OPTION", 0, "", 0, 0, 0, 0, "net.sourceforge.squirrel_sql.fw.dialects.DaffodilDialectExt$DaffodilDialectHelper", "", 0, 0, (String) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      int int0 = 710;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("net.sourceforge.squirrel_sql.fw.sql.ProgressCallBackAdaptor", "net.sourceforge.squirrel_sql.fw.sql.ProgressCallBackAdaptor", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, (-128), " ", 710, (-128), 1078, 710, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "2VIA6_b-Oy]o3od~", (-590), 1558, "|x!!k>.[-ZsF.C5}D0P");
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(710, tableColumnInfo0, (ISession) null);
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader((PipedWriter) null, (-432));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Month month0 = Month.NOVEMBER;
      Chronology.from(month0);
      ChronoField chronoField0 = ChronoField.HOUR_OF_AMPM;
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("=|eWX?=F}n/0");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.DATABASE_TYPE_DBO;
      DatabaseObjectType.createNewDatabaseObjectType("jw=0u'[");
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      ImageIconUIResource imageIconUIResource0 = (ImageIconUIResource)defaultTreeCellRenderer0.getDefaultClosedIcon();
      DatabaseObjectType.createNewDatabaseObjectType("ej6u&uad4B", (Icon) imageIconUIResource0);
      DatabaseObjectType databaseObjectType3 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectType databaseObjectType4 = DatabaseObjectType.UDF;
      databaseObjectType1.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("(j1La,Y$#V=");
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getImage();
      imageIconUIResource0.getAccessibleContext();
      imageIcon0.getAccessibleContext();
      imageIcon0.getImageLoadStatus();
      imageIconUIResource0.getDescription();
      ImageIcon imageIcon1 = new ImageIcon("jw=0u'[");
      DatabaseObjectType.createNewDatabaseObjectType((String) null, (Icon) imageIcon0);
      imageIcon0.getImageObserver();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, (String) null, "4s!UlaQCQ$M8I", "jw=0u'[", (-2433));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 45);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DBUtil.setPreferences((DBCopyPreferenceBean) null);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceDatabaseObjects();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      IntegerIdentifier integerIdentifier0 = new IntegerIdentifier((-1352));
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("v}y");
      uidIdentifier0.setString("j8T/q]3QNGME(70|Cu");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)26;
      byteArray0[1] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3361, (-1352));
      ArrayList<IDatabaseObjectInfo> arrayList0 = new ArrayList<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(arrayList0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("C>0ACHE", "C>0ACHE", "3DcUnXEhNqYmLcH", "3DcUnXEhNqYmLcH", 2187, "Null 'range' argument.", 2187, 31, 4, 102, "Null 'range' argument.", "Null 'range' argument.", 999, (-1), ",\n");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      // Undeclared exception!
      try { 
        DBUtil.getColumnList(tableColumnInfoArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "CREATE OR REPLACE TRIGGER $triggerName$ \nBEFORE INSERT ON $tableName$ \nFOR EACH ROW \nDECLARE \n    nextid number(8) := 0; \nBEGIN \n    SELECT $sequenceName$.nextval into nextid from dual; \n    :new.$columnName$ := nextid; \nEND; ");
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("C>0ACHE", "C>0ACHE", "3DcUnXEhNqYmLcH", "3DcUnXEhNqYmLcH", 2187, ";x%015$}pSGi8t)", 2187, 102, 4, 102, ";x%015$}pSGi8t)", ";x%015$}pSGi8t)", 999, (-1), "RXo");
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      String string0 = DBUtil.getColumnList(tableColumnInfoArray0);
      assertEquals("3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH, 3DcUnXEhNqYmLcH", string0);
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getColorProperties();
      Month month0 = Month.NOVEMBER;
      Chronology chronology0 = Chronology.from(month0);
      HashMap<TemporalField, Long> hashMap0 = new HashMap<TemporalField, Long>();
      Long.getLong("pRY-EIrlDVH8||q2?1", (Long) null);
      hashMap0.put((TemporalField) null, (Long) null);
      ChronoField chronoField0 = ChronoField.HOUR_OF_AMPM;
      chronology0.resolveDate(hashMap0, (ResolverStyle) null);
      // Undeclared exception!
      try { 
        DBUtil.dropTable("~Ymu)/", "dot.table", (String) null, (ISession) null, false, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte) (-50);
      byteArray0[4] = (byte)8;
      byteArray0[5] = (byte) (-29);
      byteArray0[6] = (byte) (-44);
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getPluginAppSettingsFolder();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("IH2I0Tc#5CktDy]2/", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "C5E24i", (-766), "C5E24i", (byte)31, 878, (byte)31, (-4088), " CHAR(10) )", "C5E24i", (-13), (-1527), "8Fvr0~");
      DBCopyPlugin dBCopyPlugin2 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin3 = new DBCopyPlugin();
      dBCopyPlugin3.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-766), int0);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DBUtil.setLastStatement("sqlNbrOfRowsToShow");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "{vMso");
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("k?,i'O|qn]w%,zrA", "sqlNbrOfRowsToShow", "", "#^c]$$e", (-2587), "#^c]$$e", (-2587), 0, (-2587), (-1818), "dQV6fr^y&1'", "{vMso", 365, (-2587), "dQV6fr^y&1'");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      assertEquals("license.txt", dBCopyPlugin0.getLicenceFileName());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      SQLAlias sQLAlias0 = new SQLAlias();
      sQLAlias0.getColorProperties();
      Month month0 = Month.NOVEMBER;
      month0.minus((-1601L));
      Chronology chronology0 = Chronology.from(month0);
      HashMap<TemporalField, Long> hashMap0 = new HashMap<TemporalField, Long>();
      ChronoField chronoField0 = ChronoField.HOUR_OF_AMPM;
      chronology0.resolveDate(hashMap0, (ResolverStyle) null);
      sQLAlias0.equals((Object) null);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("R'e:o7?", "~Ymu)/", "S0HFq;", "org.jfree.data.time.FixedMillisecond", 8, "f1", 985, 286, 8, 70, "~Ymu)/", ".", 286, 34, " and catalog ");
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(8, int0);
  }
}
