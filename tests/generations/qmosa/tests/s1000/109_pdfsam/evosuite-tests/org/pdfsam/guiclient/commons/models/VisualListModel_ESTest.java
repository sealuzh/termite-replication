/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:10:01 GMT 2019
 */

package org.pdfsam.guiclient.commons.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lowagie.text.pdf.PdfGraphics2D;
import java.awt.AWTEventMulticaster;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.color.ICC_Profile;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentListener;
import java.awt.event.ContainerListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.ItemListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Point2D;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBufferShort;
import java.awt.image.Kernel;
import java.awt.image.renderable.ParameterBlock;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.ConcurrentModificationException;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import java.util.function.BiConsumer;
import java.util.function.BiFunction;
import java.util.function.Predicate;
import javax.media.jai.CollectionOp;
import javax.media.jai.OperationRegistry;
import javax.media.jai.operator.IIPResolutionDescriptor;
import javax.swing.Box;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLayeredPane;
import javax.swing.JList;
import javax.swing.JMenu;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JTextPane;
import javax.swing.JTree;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.event.MenuDragMouseEvent;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.plaf.metal.MetalComboBoxEditor;
import javax.swing.plaf.multi.MultiListUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellEditor;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.pdfsam.guiclient.commons.models.VisualListModel;
import org.pdfsam.guiclient.dto.VisualPageListItem;
import sun.awt.SunHints;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VisualListModel_ESTest extends VisualListModel_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.1100843864598464
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int int0 = 7;
      int int1 = 1;
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(7);
      affineTransform0.rotate((double) 1, 2408.76300346678, (-264.7772778));
      affineTransform0.setToQuadrantRotation((-866));
      double[] doubleArray0 = new double[0];
      int int2 = (-1);
      AffineTransform affineTransform1 = new AffineTransform();
      affineTransform1.isIdentity();
      affineTransform0.concatenate(affineTransform1);
      AffineTransform affineTransform2 = AffineTransform.getQuadrantRotateInstance(5, 588.36847334, (-1526.115811951754));
      AffineTransform affineTransform3 = new AffineTransform(affineTransform2);
      // Undeclared exception!
      try { 
        visualListModel0.appendAllElements(vector0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Vector$Itr", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>(hashtable1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashtable1.put(sunHints_Key1, "g*P`w");
      hashtable1.elements();
      hashtable0.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key1, "yuTVZf?P=TgpH]J");
      hashtable1.putAll(hashtable0);
      hashtable0.put(sunHints_Key0, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key0, "No appenders could be found for logger (");
      hashtable2.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable0.put(sunHints_Key0, "No appenders could be found for logger (");
      hashtable0.put(sunHints_Key0, "+[y!W\"{lh|kO_7cp*0");
      hashtable1.put(sunHints_Key0, "+[y!W\"{lh|kO_7cp*0");
      hashtable0.putAll(hashtable2);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      Vector<Object> vector0 = parameterBlock0.getParameters();
      ParameterBlock parameterBlock1 = new ParameterBlock(vector0, vector0);
      Vector<Object> vector1 = parameterBlock1.getSources();
      ParameterBlock parameterBlock2 = new ParameterBlock(vector1);
      RenderingHints renderingHints0 = new RenderingHints(sunHints_Key2, sunHints_Key2);
      CollectionOp collectionOp0 = new CollectionOp("+1n`6PLa^Cbh a*", parameterBlock2, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel1.prependAllElements(collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \"+1n`6PLa^Cbh a*\" is registered under mode \"collection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.0369616956257754
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      WindowStateListener windowStateListener1 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener0);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener1, windowStateListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(windowStateListener0, windowStateListener1);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((ContainerListener) aWTEventMulticaster1, (ContainerListener) aWTEventMulticaster0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ContainerListener) null, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster0, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster1, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster7, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster5, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster8, (WindowStateListener) null);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster9, (WindowStateListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((WindowStateListener) null, windowStateListener1);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = (-1714);
      visualListModel0.moveUpIndexes(intArray1);
      assertArrayEquals(new int[] {(-1714)}, intArray1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster6, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster5, (ComponentListener) null);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster10);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster9, (ComponentListener) aWTEventMulticaster8);
      int[] intArray0 = new int[1];
      intArray0[0] = 125;
      try { 
        visualListModel0.reverseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 125
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3358362894044107
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 3587;
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.removeElements(intArray0, false);
      visualListModel0.moveDownIndexes(intArray1);
      try { 
        visualListModel0.moveUpIndexes(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 3586
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.498021642871728
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      WindowStateListener windowStateListener1 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener0);
      WindowStateListener windowStateListener2 = AWTEventMulticaster.add(windowStateListener1, windowStateListener1);
      WindowStateListener windowStateListener3 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener2);
      WindowStateListener windowStateListener4 = AWTEventMulticaster.remove(windowStateListener2, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      WindowStateListener windowStateListener5 = AWTEventMulticaster.remove(windowStateListener2, (WindowStateListener) null);
      WindowStateListener windowStateListener6 = AWTEventMulticaster.add(windowStateListener5, windowStateListener5);
      WindowStateListener windowStateListener7 = AWTEventMulticaster.add(windowStateListener3, (WindowStateListener) null);
      WindowStateListener windowStateListener8 = AWTEventMulticaster.add(windowStateListener5, windowStateListener2);
      AWTEventMulticaster.add(windowStateListener6, windowStateListener0);
      AWTEventMulticaster.add(windowStateListener8, (WindowStateListener) null);
      WindowStateListener windowStateListener9 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener7);
      AWTEventMulticaster.add(windowStateListener9, windowStateListener4);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndex(1);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.395709426084936
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster2, (MouseMotionListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster6, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster4, (ComponentListener) null);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster0, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ItemListener) aWTEventMulticaster4, (ItemListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster8, (ComponentListener) null);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      visualListModel0.moveUpIndex(1);
      visualListModel0.updateElementAt(1159, (VisualPageListItem) null);
      visualListModel0.moveDownIndex((-755));
      visualListModel0.addElementAt((VisualPageListItem) null, (-745));
      int[] intArray0 = new int[1];
      intArray0[0] = (-755);
      visualListModel0.moveDownIndexes(intArray0);
      try { 
        visualListModel0.removeElements(intArray0, true);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // fromIndex = -755
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3798771645280943
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      WindowStateListener windowStateListener1 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener0);
      AWTEventMulticaster.remove(windowStateListener1, windowStateListener1);
      WindowStateListener windowStateListener2 = AWTEventMulticaster.add(windowStateListener1, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, windowStateListener2);
      AWTEventMulticaster.remove((WindowStateListener) null, windowStateListener2);
      WindowStateListener windowStateListener3 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener2);
      WindowStateListener windowStateListener4 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener3);
      AWTEventMulticaster.add(windowStateListener0, (WindowStateListener) null);
      WindowStateListener windowStateListener5 = AWTEventMulticaster.add(windowStateListener3, (WindowStateListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster.remove(windowStateListener5, windowStateListener5);
      WindowStateListener windowStateListener6 = AWTEventMulticaster.add(windowStateListener2, windowStateListener4);
      AWTEventMulticaster.add((WindowStateListener) null, windowStateListener6);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      try { 
        visualListModel0.undeleteElements(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.4448836846954114
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.addElement((VisualPageListItem) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      VisualListModel visualListModel2 = new VisualListModel();
      int[] intArray0 = new int[1];
      visualListModel2.addElementAt((VisualPageListItem) null, 612);
      intArray0[0] = 9;
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel2.rotateAnticlockwiseElements(intArray0);
      visualListModel0.undeleteElements(intArray0);
      try { 
        visualListModel1.rotateClockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 9
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      int[] intArray1 = new int[1];
      intArray1[0] = 360;
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 360
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      basicComboBoxEditor_UIResource0.getEditorComponent();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.setFocusTraversalKeysEnabled(true);
      basicComboBoxEditor_UIResource0.addActionListener(jComboBox0);
      jComboBox0.doLayout();
      jComboBox0.getLocation();
      jComboBox0.getInheritsPopupMenu();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.removeActionListener(jComboBox0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt(0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem visualPageListItem0 = null;
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      visualListModel0.moveDownIndex(0);
      visualListModel0.getSize();
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode((Object) null, false);
      DefaultMutableTreeNode defaultMutableTreeNode1 = new DefaultMutableTreeNode();
      defaultMutableTreeNode0.getSharedAncestor(defaultMutableTreeNode1);
      defaultMutableTreeNode0.isNodeAncestor((TreeNode) null);
      DefaultMutableTreeNode defaultMutableTreeNode2 = defaultMutableTreeNode0.getFirstLeaf();
      // Undeclared exception!
      try { 
        defaultMutableTreeNode2.getFirstChild();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // node has no children
         //
         verifyException("javax.swing.tree.DefaultMutableTreeNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster5);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster6, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((MouseListener) aWTEventMulticaster4, (MouseListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster7, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((AdjustmentListener) aWTEventMulticaster7, (AdjustmentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster7, (ComponentListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster6);
      // Undeclared exception!
      try { 
        visualListModel0.rotateClockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.2584261358947213
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      basicComboBoxEditor_UIResource0.getEditorComponent();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.setFocusTraversalKeysEnabled(true);
      basicComboBoxEditor_UIResource0.addActionListener(jComboBox0);
      jComboBox0.doLayout();
      jComboBox0.getInheritsPopupMenu();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.removeActionListener(jComboBox0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      visualListModel0.getSize();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      visualListModel0.elementChanged((VisualPageListItem) null);
      assertEquals(1, visualListModel0.getSize());
      
      visualListModel0.removeElementAt(0, true);
      visualListModel0.getSize();
      visualListModel0.addElementAt((VisualPageListItem) null, 0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.36970383561253
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      int[] intArray1 = new int[1];
      visualListModel0.moveUpIndexes(intArray1);
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.removeElements(intArray1, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5238373317185396
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(intArray0, true);
      visualListModel1.undeleteElements(intArray0);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.3378560624935094
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel1.undeleteElements(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      visualListModel1.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel1.getSize());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0423569973977633
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster0, (ContainerListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster6, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster9);
      int[] intArray0 = new int[1];
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.383686688337618
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      visualListModel1.rotateClockwiseElements(intArray0);
      VisualListModel visualListModel2 = new VisualListModel();
      visualListModel2.moveDownIndexes(intArray0);
      visualListModel2.rotateClockwiseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.undeleteElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.373950665988046
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "true");
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.getElements();
      int[] intArray0 = new int[1];
      visualListModel0.removeElements(intArray0, false);
      intArray0[0] = 2812;
      visualListModel0.undeleteElements(intArray0);
      visualListModel0.reverseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      int int0 = (-1075);
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      RenderingHints renderingHints0 = new RenderingHints(hashMap0);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, ",}~", parameterBlock0, renderingHints0, true);
      // Undeclared exception!
      try { 
        visualListModel0.addAllElements((Collection<VisualPageListItem>) collectionOp0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No descriptor by name \",}~\" is registered under mode \"renderableCollection\".
         //
         verifyException("javax.media.jai.OperationRegistry", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.659334098393565
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      arrayList0.add((VisualPageListItem) null);
      visualListModel0.addAllElements((Collection<VisualPageListItem>) arrayList0);
      String string0 = "gVALUES";
      int int0 = 0;
      // Undeclared exception!
      try { 
        visualListModel0.subList(0, (-2318));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-2318)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      WindowStateListener windowStateListener1 = AWTEventMulticaster.add((WindowStateListener) null, windowStateListener0);
      AWTEventMulticaster.remove(windowStateListener1, windowStateListener1);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      ComponentListener componentListener1 = AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster.remove(componentListener1, componentListener1);
      AWTEventMulticaster.add((ComponentListener) null, componentListener1);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.clearData();
      int int0 = visualListModel0.getSize();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      AWTEventMulticaster.remove((MouseListener) defaultCaret0, (MouseListener) defaultCaret0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      TextListener textListener0 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      TextListener textListener1 = mock(TextListener.class, new ViolatedAssumptionAnswer());
      TextListener textListener2 = AWTEventMulticaster.remove(textListener0, textListener1);
      TextListener textListener3 = AWTEventMulticaster.add(textListener2, textListener2);
      AWTEventMulticaster.add(textListener3, textListener2);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((AdjustmentListener) null, (AdjustmentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      // Undeclared exception!
      try { 
        visualListModel0.getValidElements();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      // Undeclared exception!
      try { 
        visualListModel0.clearData();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int int0 = 1;
      // Undeclared exception!
      try { 
        visualListModel0.subList(1, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4283060927308124
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.add((VisualPageListItem) null);
      visualListModel0.prependAllElements(linkedList0);
      int[] intArray0 = new int[4];
      intArray0[3] = 10;
      intArray0[1] = 10;
      intArray0[2] = 10;
      intArray0[3] = 10;
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>();
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      linkedList0.offer((VisualPageListItem) null);
      Class<DefaultTreeCellEditor> class0 = DefaultTreeCellEditor.class;
      defaultComboBoxModel0.getListDataListeners();
      defaultComboBoxModel0.getListeners(class0);
      jComboBox0.repaint(10, 0, 5, 10);
      visualListModel0.removeListDataListener(jComboBox0);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) linkedList0);
      visualListModel0.reverseElements(intArray0);
      Object object0 = new Object();
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.moveDownIndex(0);
      visualListModel0.getElements();
      visualListModel0.removeElements(intArray0, false);
      int[] intArray1 = new int[7];
      intArray1[0] = 0;
      intArray1[1] = 10;
      intArray1[2] = 5;
      intArray1[3] = (-16);
      intArray1[4] = 5;
      intArray1[5] = 2471;
      intArray1[6] = 10;
      visualListModel0.moveDownIndexes(intArray1);
      assertEquals(3, visualListModel0.getSize());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.7437009261328056
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[8];
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      double[] doubleArray0 = new double[0];
      AffineTransform affineTransform0 = new AffineTransform();
      affineTransform0.isIdentity();
      visualListModel0.setData(visualPageListItemArray0);
      assertEquals(8, visualListModel0.getSize());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.7315797140115936
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      vector0.add((VisualPageListItem) null);
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(7);
      float[] floatArray0 = new float[5];
      affineTransform0.rotate((double) (-604), 2408.76300346678, (-264.7772778));
      affineTransform0.transform(floatArray0, (-866), floatArray0, (-814), (-866));
      floatArray0[0] = (float) 7;
      floatArray0[1] = (float) 7;
      floatArray0[2] = (float) 7;
      affineTransform0.setToQuadrantRotation((-866));
      floatArray0[3] = (float) (-604);
      floatArray0[4] = (float) 7;
      affineTransform0.setToShear(7.0F, 721.9);
      double[] doubleArray0 = new double[0];
      AffineTransform affineTransform1 = new AffineTransform();
      affineTransform1.isIdentity();
      affineTransform0.concatenate(affineTransform1);
      // Undeclared exception!
      try { 
        affineTransform0.transform(floatArray0, (-604), doubleArray0, (-1), 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -604
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.8493384930337247
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int[] intArray0 = new int[1];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      visualListModel0.addElement((VisualPageListItem) null);
      WindowStateListener windowStateListener0 = mock(WindowStateListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(windowStateListener0, windowStateListener0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener1);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) null);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) null);
      visualListModel0.moveDownIndexes(intArray0);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6675530205253588
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster4, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster8, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster10, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster5);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-1817);
      visualListModel1.rotateClockwiseElements(intArray0);
      try { 
        visualListModel0.rotateAnticlockwiseElements(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1817
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[6];
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      int int0 = (-604);
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(7);
      float[] floatArray0 = new float[5];
      affineTransform0.rotate((double) (-604), 2408.76300346678, (-264.7772778));
      int int1 = (-866);
      affineTransform0.transform(floatArray0, (-866), floatArray0, (-814), (-866));
      floatArray0[0] = (float) 7;
      floatArray0[1] = (float) 7;
      floatArray0[2] = (float) 7;
      affineTransform0.setToQuadrantRotation((-866));
      floatArray0[3] = (float) (-604);
      affineTransform0.setToTranslation((-264.7772778), 508.6343022328);
      floatArray0[4] = (float) 7;
      double[] doubleArray0 = new double[0];
      int int2 = (-1);
      AffineTransform affineTransform1 = new AffineTransform();
      affineTransform0.concatenate(affineTransform1);
      int int3 = 5;
      // Undeclared exception!
      try { 
        affineTransform0.transform(floatArray0, (-604), doubleArray0, (-1), 5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -604
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.7937175017485838
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addElement((VisualPageListItem) null);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ContainerListener) aWTEventMulticaster5, (ContainerListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster4, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster3, (WindowStateListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster2, (WindowStateListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster5, (WindowStateListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster9, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster10, (WindowStateListener) aWTEventMulticaster7);
      AWTEventMulticaster.remove((WindowStateListener) aWTEventMulticaster9, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster8, (ComponentListener) aWTEventMulticaster11);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getValidElements();
      VisualListModel visualListModel2 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = visualListModel0.getElements();
      assertEquals(1, visualPageListItemArray0.length);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.960841804955975
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = visualListModel0.data;
      visualListModel0.setData(vector0);
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[1];
      visualListModel0.setData(visualPageListItemArray0);
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      AffineTransform.getQuadrantRotateInstance(7);
      JTree jTree0 = new JTree(vector0);
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_COLOR_RENDERING;
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode(sunHints_Key0, true);
      defaultMutableTreeNode0.getLevel();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      JTree jTree1 = new JTree();
      DefaultTreeCellEditor defaultTreeCellEditor1 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      jTree0.getAutoscrolls();
      jTree0.getUIClassID();
      jTree1.getY();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      defaultTreeCellEditor1.stopCellEditing();
      DefaultTreeCellEditor defaultTreeCellEditor2 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer1);
      defaultTreeCellEditor0.getCellEditorValue();
      DefaultTreeCellEditor defaultTreeCellEditor3 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer1);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel0.prependAllElements(vector0);
      assertEquals("[null, null]", vector0.toString());
      assertEquals(2, visualListModel0.getSize());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)82;
      byteArray0[1] = (byte) (-89);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)1;
      byteArray0[5] = (byte)88;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.setData((Vector<VisualPageListItem>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      int int0 = (-751);
      intArray0[0] = (-751);
      AffineTransform.getRotateInstance((double) 2, (double) (-751), (double) 2, (double) 2);
      // Undeclared exception!
      try { 
        visualListModel0.reverseElements((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      hashtable0.putAll(hashtable1);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "v";
      stringArray0[2] = "v";
      stringArray0[3] = "z8^E@Q|;&sXo";
      stringArray0[4] = "";
      stringArray0[5] = "v";
      arrayList0.toArray(stringArray0);
      arrayList0.spliterator();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      stack0.setSize(215);
      stack0.toArray(stringArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      visualListModel0.clearData();
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualPageListItem[] visualPageListItemArray0 = new VisualPageListItem[0];
      visualListModel0.setData(visualPageListItemArray0);
      VisualListModel visualListModel1 = new VisualListModel();
      visualListModel1.getListDataListeners();
      PriorityQueue<VisualPageListItem> priorityQueue0 = new PriorityQueue<VisualPageListItem>();
      Stack<VisualPageListItem> stack0 = new Stack<VisualPageListItem>();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stack0.setSize(1);
      stack0.toArray(stringArray0);
      visualListModel0.setData((Vector<VisualPageListItem>) stack0);
      assertEquals(1, visualListModel0.getSize());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      OperationRegistry operationRegistry0 = new OperationRegistry();
      ParameterBlock parameterBlock0 = new ParameterBlock((Vector<Object>) null);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      CollectionOp collectionOp0 = new CollectionOp(operationRegistry0, "R>6|+cPf}gz:", parameterBlock0, renderingHints0);
      // Undeclared exception!
      try { 
        visualListModel0.prependAllElements(collectionOp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.renderable.ParameterBlock", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = (-510);
      AffineTransform.getTranslateInstance((-510), (-1580.23656));
      AffineTransform affineTransform0 = AffineTransform.getRotateInstance((double) 425, (double) 425, (double) 425, (double) 425);
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) (-269), (double) (-269), 10.0, (double) 425);
      affineTransform1.setTransform(affineTransform0);
      int int1 = 886;
      affineTransform1.setToRotation((-1866.8482370599393));
      AffineTransform affineTransform2 = AffineTransform.getShearInstance((-269), 1000.0);
      affineTransform1.invert();
      affineTransform2.inverseTransform((double[]) null, 93, (double[]) null, 886, (-269));
      AffineTransform affineTransform3 = AffineTransform.getScaleInstance((-269), (-1428.6282224726342));
      AffineTransform affineTransform4 = AffineTransform.getQuadrantRotateInstance((-510));
      affineTransform2.setToRotation((-666.05635), (double) 93);
      affineTransform4.preConcatenate(affineTransform3);
      visualListModel0.reverseElements(intArray0);
      // Undeclared exception!
      try { 
        affineTransform3.inverseTransform((double[]) null, 425, (double[]) null, 65535, 425);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>(hashtable1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashtable2.put(sunHints_Key1, "g*P`w");
      hashtable1.put(sunHints_Key1, "g*P`w");
      hashtable0.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable0.put(sunHints_Key0, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key1, "yuTVZf?P=TgpH]J");
      hashtable1.putAll(hashtable0);
      hashtable0.put(sunHints_Key0, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key0, "No appenders could be found forlogger (");
      hashtable0.clone();
      hashtable2.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable0.put(sunHints_Key0, "No appenders could be found forlogger (");
      hashtable0.put(sunHints_Key0, "+[y!W\"{lh|kO_7cp*0");
      hashtable1.put(sunHints_Key0, "+[y!W\"{lh|kO_7cp*0");
      hashtable0.putAll(hashtable2);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Integer integer0 = IIPResolutionDescriptor.MAX_RESOLUTION;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.moveDownIndexes(intArray0);
      assertEquals(0, intArray0.length);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      double[] doubleArray0 = new double[6];
      doubleArray0[4] = (double) 3835;
      doubleArray0[4] = (double) (-509);
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[7];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1020, 3835);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(1020, 2);
      defaultTableModelArray0[3] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      defaultTableModel3.setColumnIdentifiers((Object[]) defaultTableModelArray0);
      defaultTableModelArray0[4] = defaultTableModel3;
      DefaultTableModel defaultTableModel4 = new DefaultTableModel(1020, 2340);
      defaultTableModel3.fireTableRowsInserted(3835, (-509));
      defaultTableModel3.fireTableDataChanged();
      defaultTableModel2.addRow((Object[]) null);
      defaultTableModel4.getDataVector();
      JList<DefaultTableModel> jList0 = new JList<DefaultTableModel>(defaultTableModelArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-745);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster3, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster1, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster2);
      Stack<String> stack0 = new Stack<String>();
      stack0.parallelStream();
      visualListModel0.moveDownIndex((-745));
      visualListModel0.moveDownIndex(92);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.data = null;
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      visualListModel0.prependAllElements(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndex(16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      int int0 = 0;
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(647, (-2235), true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(647) > toIndex(-2235)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      hashtable1.putAll(hashtable1);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      arrayList0.toArray(stringArray0);
      arrayList0.spliterator();
      visualListModel0.addAllElements((-10), (Collection<VisualPageListItem>) arrayList0);
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(0.0, (-548));
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      Component component0 = Box.createVerticalStrut((-10));
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JMenu jMenu0 = new JMenu("");
      menuElementArray0[0] = (MenuElement) jMenu0;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("", icon0, true);
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(component0, (-548), 2593L, (-548), 0, (-548), (-10), true, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent0.getPoint();
      Point2D point2D0 = colorConvertOp0.getPoint2D(point0, point0);
      affineTransform0.deltaTransform(point2D0, point2D0);
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) 215, (double) (-548), 2927.751920327138);
      affineTransform0.setTransform(affineTransform1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 0;
      doubleArray0[1] = (double) (-10);
      doubleArray0[2] = (double) (-548);
      affineTransform1.getMatrix(doubleArray0);
      affineTransform1.setToRotation(0.0, (-0.9802456219572225));
      // Undeclared exception!
      try { 
        affineTransform1.inverseTransform(doubleArray0, (-10), doubleArray0, 2450, 1481);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 1815;
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      int int1 = 0;
      int int2 = 1188;
      int int3 = (-716);
      DataBufferShort dataBufferShort0 = null;
      try {
        dataBufferShort0 = new DataBufferShort(1815, (-716));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.image.DataBuffer", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(90, 90);
      int[] intArray0 = new int[0];
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(0);
      assertNull(object0);
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      hashtable0.entrySet();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      hashtable0.putAll(hashtable0);
      hashtable0.keys();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      hashtable0.keySet();
      hashtable0.putAll(hashtable0);
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      Object object0 = visualListModel0.getElementAt(1494);
      assertNull(object0);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "\"2t~C<w!G'il0c5#(/%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"2t~C<w!G'El0c5#(/%");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Boolean boolean0 = new Boolean(true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      byteArray0[4] = (byte)7;
      byteArray0[3] = (byte)80;
      byteArray0[5] = (byte)118;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.getElementAt((-1507));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<String> vector0 = new Vector<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(vector0);
      // Undeclared exception!
      try { 
        visualListModel0.setData((VisualPageListItem[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      DefaultTableModel[] defaultTableModelArray0 = new DefaultTableModel[7];
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1020, 3835);
      defaultTableModelArray0[0] = defaultTableModel0;
      DefaultTableModel defaultTableModel1 = new DefaultTableModel();
      DefaultTableModel defaultTableModel2 = new DefaultTableModel(1020, 2);
      defaultTableModelArray0[3] = defaultTableModel2;
      DefaultTableModel defaultTableModel3 = new DefaultTableModel();
      defaultTableModel3.setColumnIdentifiers((Object[]) defaultTableModelArray0);
      defaultTableModelArray0[4] = defaultTableModel3;
      DefaultTableModel defaultTableModel4 = new DefaultTableModel(1020, 2340);
      defaultTableModel3.fireTableRowsInserted(3835, (-509));
      defaultTableModel3.fireTableDataChanged();
      defaultTableModel2.addRow((Object[]) null);
      defaultTableModel4.getDataVector();
      JList<DefaultTableModel> jList0 = new JList<DefaultTableModel>(defaultTableModelArray0);
      visualListModel0.moveUpIndexes(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      Stack<String> stack0 = new Stack<String>();
      stack0.trimToSize();
      stack0.parallelStream();
      JComboBox<String> jComboBox0 = new JComboBox<String>(stringArray0);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      jComboBox0.removeNotify();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource2 = new BasicComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      basicComboBoxEditor_UIResource0.getEditorComponent();
      parameterBlock0.set((short)2970, 1);
      parameterBlock0.set((long) 0, 1);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource3 = new BasicComboBoxEditor.UIResource();
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      // Undeclared exception!
      try { 
        visualListModel0.moveUpIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.remove((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      Stack<String> stack0 = new Stack<String>();
      stack0.parallelStream();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex(0);
      visualListModel0.moveDownIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)82;
      byteArray0[1] = (byte) (-89);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)88;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveDownIndex((byte)13);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      DefaultMutableTreeNode defaultMutableTreeNode1 = defaultMutableTreeNode0.getLastLeaf();
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      Stack<Integer> stack0 = new Stack<Integer>();
      defaultTreeCellEditor0.getCellEditorListeners();
      defaultMutableTreeNode0.depthFirstEnumeration();
      JTree jTree1 = new JTree(stack0);
      defaultMutableTreeNode1.getLevel();
      DefaultTreeCellEditor defaultTreeCellEditor1 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      JTree jTree2 = new JTree();
      DefaultTreeCellEditor defaultTreeCellEditor2 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      jTree2.getEditingPath();
      jTree1.isPathEditable((TreePath) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellEditor0.stopCellEditing();
      DefaultTreeCellEditor defaultTreeCellEditor3 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0, defaultTreeCellEditor1);
      defaultTreeCellRenderer1.getLabelFor();
      defaultTreeCellEditor1.getCellEditorListeners();
      DefaultTreeCellEditor[] defaultTreeCellEditorArray0 = new DefaultTreeCellEditor[9];
      defaultTreeCellEditorArray0[7] = defaultTreeCellEditor2;
      defaultTreeCellEditorArray0[1] = defaultTreeCellEditor1;
      defaultTreeCellEditorArray0[2] = defaultTreeCellEditor0;
      defaultTreeCellEditorArray0[3] = defaultTreeCellEditor0;
      defaultTreeCellRenderer1.setFocusable(false);
      defaultMutableTreeNode0.breadthFirstEnumeration();
      defaultTreeCellEditor2.stopCellEditing();
      defaultTreeCellEditorArray0[4] = defaultTreeCellEditor0;
      defaultTreeCellRenderer1.getText();
      defaultTreeCellEditorArray0[5] = defaultTreeCellEditor0;
      defaultTreeCellEditorArray0[6] = defaultTreeCellEditor2;
      DefaultTreeCellEditor defaultTreeCellEditor4 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      defaultTreeCellEditor4.cancelCellEditing();
      defaultTreeCellEditorArray0[4] = defaultTreeCellEditor4;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      MockFile mockFile0 = new MockFile("0mL_/oOK7q");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      DefaultMutableTreeNode defaultMutableTreeNode1 = defaultMutableTreeNode0.getLastLeaf();
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      Stack<Integer> stack0 = new Stack<Integer>();
      defaultTreeCellEditor0.getCellEditorListeners();
      defaultMutableTreeNode0.depthFirstEnumeration();
      JTree jTree1 = new JTree(stack0);
      defaultMutableTreeNode1.getLevel();
      DefaultTreeCellEditor defaultTreeCellEditor1 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      JTree jTree2 = new JTree();
      DefaultTreeCellEditor defaultTreeCellEditor2 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      jTree2.getEditingPath();
      jTree1.isPathEditable((TreePath) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellEditor0.stopCellEditing();
      DefaultTreeCellEditor defaultTreeCellEditor3 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0, defaultTreeCellEditor1);
      defaultTreeCellRenderer1.getLabelFor();
      defaultTreeCellEditor1.getCellEditorListeners();
      DefaultTreeCellEditor[] defaultTreeCellEditorArray0 = new DefaultTreeCellEditor[9];
      defaultTreeCellEditorArray0[0] = defaultTreeCellEditor2;
      defaultTreeCellEditorArray0[1] = defaultTreeCellEditor1;
      defaultTreeCellEditorArray0[2] = defaultTreeCellEditor0;
      defaultTreeCellEditorArray0[3] = defaultTreeCellEditor0;
      defaultTreeCellRenderer1.setFocusable(false);
      defaultTreeCellEditor2.stopCellEditing();
      defaultTreeCellEditorArray0[4] = defaultTreeCellEditor0;
      defaultTreeCellRenderer1.getText();
      defaultTreeCellEditorArray0[5] = defaultTreeCellEditor0;
      defaultTreeCellEditorArray0[6] = defaultTreeCellEditor2;
      DefaultTreeCellEditor defaultTreeCellEditor4 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      defaultTreeCellEditor4.cancelCellEditing();
      defaultTreeCellEditorArray0[4] = defaultTreeCellEditor4;
      defaultTreeCellEditorArray0[8] = defaultTreeCellEditor2;
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.undeleteElements(intArray0);
      assertArrayEquals(new int[] {}, intArray0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(1898, 0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(1898) > toIndex(0)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList((-4019), 0, true);
      Stack<DefaultTableModel> stack0 = new Stack<DefaultTableModel>();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel(1020, 0);
      defaultTableModel0.fireTableDataChanged();
      int int0 = 717;
      Object object0 = new Object();
      Object[] objectArray0 = new Object[0];
      defaultTableModel0.insertRow(125, objectArray0);
      Vector vector0 = defaultTableModel0.getDataVector();
      DefaultTableModel defaultTableModel1 = new DefaultTableModel(stack0, vector0);
      DefaultTableModel defaultTableModel2 = null;
      try {
        defaultTableModel2 = new DefaultTableModel(1550, (-2409));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -2409
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>();
      visualListModel0.addAllElements(712, (Collection<VisualPageListItem>) treeSet0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_INTERPOLATION;
      hashtable0.put(sunHints_Key0, ")Wr`J%t-*P&mad#a(:+");
      hashtable0.putAll(hashtable1);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      float[] floatArray0 = new float[3];
      floatArray0[0] = (float) 2530;
      floatArray0[1] = (float) (-691);
      floatArray0[2] = (float) 3795;
      Kernel kernel0 = new Kernel(3795, 0, floatArray0);
      kernel0.clone();
      ConvolveOp convolveOp0 = new ConvolveOp(kernel0);
      BufferedImage bufferedImage0 = null;
      try {
        bufferedImage0 = new BufferedImage(2530, 2530, 1636);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown image type 1636
         //
         verifyException("java.awt.image.BufferedImage", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.addAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      hashtable0.values();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>(hashtable1);
      hashtable2.put(sunHints_Key0, "^uQ!)bM(_)$\"_ewJYH'");
      hashtable1.putAll(hashtable0);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Integer integer0 = new Integer(14);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = new Integer(14);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      hashtable1.put(sunHints_Key0, "] is not a subclass of org.apache.log4j.Level");
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer5 = new Integer(14);
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer6 = JLayeredPane.PALETTE_LAYER;
      SunHints.Key sunHints_Key5 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer7 = JLayeredPane.DRAG_LAYER;
      HashMap<RenderingHints.Key, Integer> hashMap1 = new HashMap<RenderingHints.Key, Integer>();
      Integer integer8 = JLayeredPane.DEFAULT_LAYER;
      Integer integer9 = new Integer(5);
      hashMap1.put(sunHints_Key1, integer3);
      Integer integer10 = JLayeredPane.MODAL_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements((-421), (-3975), true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[1];
      intArray0[0] = (-745);
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(componentListener0, componentListener0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((KeyListener) aWTEventMulticaster0, (KeyListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster4);
      Stack<String> stack0 = new Stack<String>();
      stack0.parallelStream();
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster2, (ComponentListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster7, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) aWTEventMulticaster3);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster7, (ComponentListener) aWTEventMulticaster1);
      visualListModel0.moveUpIndex(9999);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      Vector<String> vector0 = new Vector<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(vector0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      jComboBox0.createVolatileImage(1, 0);
      visualListModel1.addListDataListener(jComboBox0);
      visualListModel1.appendAllElements((Collection<VisualPageListItem>) null);
      assertNotSame(visualListModel1, visualListModel0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      int int0 = 0;
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) null);
      VisualListModel visualListModel1 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = 0;
      Vector<String> vector0 = new Vector<String>();
      DefaultComboBoxModel<String> defaultComboBoxModel0 = new DefaultComboBoxModel<String>(vector0);
      JComboBox<String> jComboBox0 = new JComboBox<String>(defaultComboBoxModel0);
      visualListModel1.addListDataListener(jComboBox0);
      intArray0[1] = 0;
      double[] doubleArray0 = new double[0];
      AffineTransform affineTransform0 = null;
      try {
        affineTransform0 = new AffineTransform(doubleArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      DefaultMutableTreeNode defaultMutableTreeNode1 = defaultMutableTreeNode0.getLastLeaf();
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor((JTree) null, (DefaultTreeCellRenderer) null);
      Stack<Integer> stack0 = new Stack<Integer>();
      JTree jTree1 = new JTree(stack0);
      defaultMutableTreeNode0.getLevel();
      DefaultTreeCellEditor defaultTreeCellEditor1 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      JTree jTree2 = new JTree();
      DefaultTreeCellEditor defaultTreeCellEditor2 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      JTextPane jTextPane0 = new JTextPane();
      Color color0 = jTextPane0.getSelectionColor();
      jTree1.getAutoscrolls();
      defaultTreeCellRenderer0.setBorderSelectionColor(color0);
      jTree1.getUIClassID();
      defaultTreeCellEditor2.stopCellEditing();
      DefaultTreeCellEditor defaultTreeCellEditor3 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      defaultTreeCellEditor3.getCellEditorValue();
      DefaultTreeCellEditor defaultTreeCellEditor4 = new DefaultTreeCellEditor((JTree) null, defaultTreeCellRenderer1);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.moveUpIndex(0);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      hashtable0.putAll(hashtable1);
      RenderingHints renderingHints0 = new RenderingHints(hashtable0);
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      arrayList0.toArray(stringArray0);
      arrayList0.spliterator();
      visualListModel0.addAllElements(0, (Collection<VisualPageListItem>) arrayList0);
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance(0.0, (-548));
      ICC_Profile[] iCC_ProfileArray0 = new ICC_Profile[0];
      ColorConvertOp colorConvertOp0 = new ColorConvertOp(iCC_ProfileArray0, renderingHints0);
      Component component0 = Box.createVerticalStrut(0);
      MenuElement[] menuElementArray0 = new MenuElement[2];
      JMenu jMenu0 = new JMenu((String) null);
      menuElementArray0[0] = (MenuElement) jMenu0;
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Icon icon0 = defaultTreeCellRenderer0.getDefaultClosedIcon();
      JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem("", icon0, true);
      menuElementArray0[1] = (MenuElement) jRadioButtonMenuItem0;
      MenuSelectionManager menuSelectionManager0 = MenuSelectionManager.defaultManager();
      MenuDragMouseEvent menuDragMouseEvent0 = new MenuDragMouseEvent(component0, (-548), 2593L, (-548), 0, (-548), 0, true, menuElementArray0, menuSelectionManager0);
      Point point0 = menuDragMouseEvent0.getPoint();
      Point2D point2D0 = colorConvertOp0.getPoint2D(point0, point0);
      affineTransform0.deltaTransform(point2D0, point2D0);
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) 215, (double) (-548), 2927.751920327138);
      affineTransform0.setTransform(affineTransform1);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (double) 215;
      doubleArray0[1] = (double) 0;
      doubleArray0[2] = (double) (-548);
      affineTransform1.getMatrix(doubleArray0);
      affineTransform1.setToRotation(0.0, 0.0);
      // Undeclared exception!
      try { 
        affineTransform1.inverseTransform(doubleArray0, 0, doubleArray0, 2450, 1481);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      hashMap1.compute(pdfGraphics2D_HyperLinkKey0, biFunction0);
      HashMap<RenderingHints.Key, String> hashMap2 = new HashMap<RenderingHints.Key, String>();
      hashMap0.putAll(hashMap1);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      hashMap0.put((RenderingHints.Key) null, (String) null);
      BiFunction<Object, String, String> biFunction1 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.computeIfPresent(pdfGraphics2D_HyperLinkKey0, biFunction1);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      hashtable0.putAll(hashMap1);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      assertTrue(renderingHints0.isEmpty());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(0, 0, true);
      HashMap<RenderingHints.Key, String> hashMap0 = new HashMap<RenderingHints.Key, String>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      HashMap<RenderingHints.Key, String> hashMap1 = new HashMap<RenderingHints.Key, String>();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(biFunction0).apply(any() , any());
      hashMap1.compute(pdfGraphics2D_HyperLinkKey0, biFunction0);
      HashMap<RenderingHints.Key, String> hashMap2 = new HashMap<RenderingHints.Key, String>();
      hashMap0.putAll(hashMap1);
      SunHints.LCDContrastKey sunHints_LCDContrastKey0 = (SunHints.LCDContrastKey)RenderingHints.KEY_TEXT_LCD_CONTRAST;
      hashMap0.put(pdfGraphics2D_HyperLinkKey0, (String) null);
      BiFunction<Object, String, String> biFunction1 = (BiFunction<Object, String, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      hashMap1.computeIfPresent(pdfGraphics2D_HyperLinkKey0, biFunction1);
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      hashtable0.putAll(hashMap1);
      RenderingHints renderingHints0 = new RenderingHints((Map<RenderingHints.Key, ?>) null);
      assertTrue(renderingHints0.isEmpty());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.2096058100845513
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      DefaultMutableTreeNode defaultMutableTreeNode1 = defaultMutableTreeNode0.getLastLeaf();
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      defaultMutableTreeNode1.getLevel();
      JTree jTree1 = new JTree();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      ArrayList<VisualPageListItem> arrayList0 = new ArrayList<VisualPageListItem>();
      TreeSet<VisualPageListItem> treeSet0 = new TreeSet<VisualPageListItem>(arrayList0);
      DefaultTreeCellEditor[] defaultTreeCellEditorArray0 = new DefaultTreeCellEditor[9];
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      visualListModel0.rotateClockwiseElements(intArray0);
      visualListModel0.removeElements(7, 0, true);
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.977500522076773
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultMutableTreeNode defaultMutableTreeNode0 = new DefaultMutableTreeNode();
      DefaultMutableTreeNode defaultMutableTreeNode1 = defaultMutableTreeNode0.getLastLeaf();
      JTree jTree0 = new JTree(defaultMutableTreeNode1);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellEditor defaultTreeCellEditor0 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      Stack<Integer> stack0 = new Stack<Integer>();
      defaultTreeCellEditor0.getCellEditorListeners();
      defaultMutableTreeNode0.depthFirstEnumeration();
      JTree jTree1 = new JTree();
      defaultMutableTreeNode0.getNextSibling();
      defaultMutableTreeNode1.getLevel();
      DefaultTreeCellEditor defaultTreeCellEditor1 = new DefaultTreeCellEditor(jTree0, defaultTreeCellRenderer0);
      DefaultTreeCellEditor defaultTreeCellEditor2 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      TreePath treePath0 = jTree1.getClosestPathForLocation(0, 0);
      jTree1.isPathEditable(treePath0);
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      defaultTreeCellEditor0.stopCellEditing();
      DefaultTreeCellEditor defaultTreeCellEditor3 = new DefaultTreeCellEditor(jTree1, defaultTreeCellRenderer0);
      defaultMutableTreeNode1.isRoot();
      defaultTreeCellRenderer1.getLabelFor();
      DefaultTreeCellEditor[] defaultTreeCellEditorArray0 = new DefaultTreeCellEditor[22];
      defaultTreeCellEditorArray0[7] = defaultTreeCellEditor2;
      defaultTreeCellEditorArray0[1] = defaultTreeCellEditor1;
      defaultTreeCellEditorArray0[7] = defaultTreeCellEditor0;
      defaultTreeCellEditorArray0[3] = defaultTreeCellEditor0;
      defaultMutableTreeNode0.breadthFirstEnumeration();
      boolean boolean0 = new Boolean(true);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.removeElements(0, (-1), false);
      int[] intArray0 = new int[1];
      intArray0[0] = 0;
      visualListModel0.rotateAnticlockwiseElements(intArray0);
      visualListModel0.moveUpIndexes(intArray0);
      // Undeclared exception!
      try { 
        visualListModel0.moveDownIndexes((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.pdfsam.guiclient.commons.models.VisualListModel", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)82;
      byteArray0[1] = (byte) (-89);
      byteArray0[3] = (byte) (-89);
      byteArray0[4] = (byte)34;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)13;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)88;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.prependAllElements((Collection<VisualPageListItem>) null);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>(hashtable1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashtable1.put(sunHints_Key1, "g*`w");
      hashtable1.elements();
      hashtable0.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key1, "");
      hashtable1.putAll(hashtable0);
      hashtable0.put(sunHints_Key0, "1(D]w]xUGI");
      hashtable1.put(sunHints_Key0, "");
      hashtable2.put(sunHints_Key1, "1(D]w]xUGI");
      hashtable0.put(sunHints_Key0, "");
      hashtable0.put(sunHints_Key0, "+[y!W\"{lh|kO_7cp*0");
      hashtable1.put(sunHints_Key0, "+[y!W\"{lh|kO_7cp*0");
      hashtable0.putAll(hashtable2);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[0];
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(2918, 125, true);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.subList(2334, 2334, true);
      JTree jTree0 = new JTree();
      ImageIcon imageIcon0 = new ImageIcon("\" variable.");
      imageIcon0.getIconWidth();
      ImageIcon imageIcon1 = new ImageIcon();
      JCheckBox jCheckBox0 = new JCheckBox("\" variable.", imageIcon1, true);
      // Undeclared exception!
      try { 
        jCheckBox0.remove(2334);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2334
         //
         verifyException("java.awt.Container", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      VisualListModel visualListModel0 = new VisualListModel();
      // Undeclared exception!
      try { 
        visualListModel0.subList(90, (-864));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(90) > toIndex(-864)
         //
         verifyException("java.util.SubList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      BiConsumer<Object, String> biConsumer0 = (BiConsumer<Object, String>) mock(BiConsumer.class, new ViolatedAssumptionAnswer());
      Collection<String> collection0 = hashtable1.values();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      hashtable0.put(sunHints_Key0, "*K&nCAk&4");
      hashtable1.putAll(hashtable0);
      HashMap<RenderingHints.Key, Integer> hashMap0 = new HashMap<RenderingHints.Key, Integer>();
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Integer integer0 = new Integer(14);
      Integer integer1 = JLayeredPane.DEFAULT_LAYER;
      Integer integer2 = new Integer(0);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer3 = JLayeredPane.PALETTE_LAYER;
      Integer integer4 = JLayeredPane.PALETTE_LAYER;
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashtable0.put(sunHints_Key3, "java.lang.String");
      SunHints.Key sunHints_Key4 = (SunHints.Key)RenderingHints.KEY_DITHERING;
      Integer integer5 = JLayeredPane.DRAG_LAYER;
      Integer integer6 = JLayeredPane.DRAG_LAYER;
      hashMap0.put(sunHints_Key1, integer6);
      Integer integer7 = JLayeredPane.MODAL_LAYER;
      Integer integer8 = JLayeredPane.FRAME_CONTENT_LAYER;
      Integer.remainderUnsigned((-2945), (-745));
      hashMap0.put(sunHints_Key1, integer4);
      JComponent.setDefaultLocale((Locale) null);
      LinkedList<VisualPageListItem> linkedList0 = new LinkedList<VisualPageListItem>();
      linkedList0.retainAll(collection0);
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.appendAllElements(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4399756932787804
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Hashtable<RenderingHints.Key, String> hashtable0 = new Hashtable<RenderingHints.Key, String>();
      SunHints.Key sunHints_Key0 = (SunHints.Key)RenderingHints.KEY_ALPHA_INTERPOLATION;
      Hashtable<RenderingHints.Key, String> hashtable1 = new Hashtable<RenderingHints.Key, String>();
      Hashtable<RenderingHints.Key, String> hashtable2 = new Hashtable<RenderingHints.Key, String>(hashtable1);
      SunHints.Key sunHints_Key1 = (SunHints.Key)RenderingHints.KEY_ANTIALIASING;
      hashtable0.put(sunHints_Key1, "");
      hashtable1.putAll(hashtable0);
      hashtable0.put(sunHints_Key0, "+[y!W\"{lhkO_7cp*0");
      hashtable1.put(sunHints_Key0, "+[y!W\"{lhkO_7cp*0");
      hashtable0.putAll(hashtable2);
      PdfGraphics2D.HyperLinkKey pdfGraphics2D_HyperLinkKey0 = PdfGraphics2D.HyperLinkKey.KEY_INSTANCE;
      Integer integer0 = new Integer(0);
      SunHints.Key sunHints_Key2 = (SunHints.Key)RenderingHints.KEY_FRACTIONALMETRICS;
      Integer integer1 = JLayeredPane.PALETTE_LAYER;
      SunHints.Key sunHints_Key3 = (SunHints.Key)RenderingHints.KEY_TEXT_ANTIALIASING;
      Hashtable<RenderingHints.Key, String> hashtable3 = new Hashtable<RenderingHints.Key, String>();
      hashtable3.values();
      hashtable0.keySet();
      Hashtable<RenderingHints.Key, String> hashtable4 = new Hashtable<RenderingHints.Key, String>();
      hashtable4.put(pdfGraphics2D_HyperLinkKey0, "w5H6 8Zo-;>.L");
      hashtable0.putAll(hashtable4);
      VisualListModel visualListModel0 = new VisualListModel();
      int[] intArray0 = new int[2];
      intArray0[0] = (-651);
      intArray0[1] = (-651);
      visualListModel0.removeElements(intArray0, false);
      visualListModel0.removeElements(344, (-651), false);
      assertEquals(0, visualListModel0.getSize());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.removeActionListener(defaultEditorKit_InsertContentAction0);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource2 = new BasicComboBoxEditor.UIResource();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource3 = new BasicComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      basicComboBoxEditor_UIResource1.getEditorComponent();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.setFocusTraversalKeysEnabled(true);
      basicComboBoxEditor_UIResource1.addActionListener(jComboBox0);
      jComboBox0.doLayout();
      jComboBox0.getLocation();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) parameterBlock1;
      objectArray0[1] = (Object) basicComboBoxEditor_UIResource3;
      objectArray0[2] = (Object) jComboBox0;
      objectArray0[3] = (Object) basicComboBoxEditor_UIResource0;
      objectArray0[4] = (Object) basicComboBoxEditor_UIResource2;
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray0);
      jComboBox1.getInheritsPopupMenu();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource4 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource4.removeActionListener(defaultEditorKit_InsertContentAction0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-7), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -7
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      String[] stringArray0 = new String[2];
      stringArray0[1] = stringArray0[0];
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource2 = new BasicComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      basicComboBoxEditor_UIResource0.getEditorComponent();
      ParameterBlock parameterBlock1 = new ParameterBlock();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.getLocation();
      jComboBox0.getInheritsPopupMenu();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource3 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource2.removeActionListener(jComboBox0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor metalComboBoxEditor1 = new MetalComboBoxEditor();
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-7), false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      int[] intArray0 = new int[0];
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.rotateClockwiseElements(intArray0);
      int int0 = (-269);
      int int1 = (-510);
      double double0 = (-1580.23656);
      AffineTransform affineTransform0 = AffineTransform.getTranslateInstance((-510), (-1580.23656));
      double[] doubleArray0 = null;
      affineTransform0.shear(3608.317061002731, (-510));
      int int2 = 425;
      AffineTransform affineTransform1 = AffineTransform.getRotateInstance((double) 425, (double) 425, (double) 425, (double) 425);
      affineTransform1.setToQuadrantRotation(5257);
      double double1 = (-1428.6282224726342);
      AffineTransform affineTransform2 = null;
      try {
        affineTransform2 = new AffineTransform((double[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.AffineTransform", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      VisualListModel visualListModel0 = new VisualListModel();
      visualListModel0.elementsChanged();
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Vector<String> vector0 = new Vector<String>();
      JList<String> jList0 = new JList<String>();
      int int0 = (-1189);
      MultiListUI multiListUI0 = new MultiListUI();
      // Undeclared exception!
      try { 
        multiListUI0.indexToLocation(jList0, (-1189));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0 >= 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      Vector<VisualPageListItem> vector0 = new Vector<VisualPageListItem>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) pipedInputStream0);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      Predicate<Object> predicate3 = predicate0.and(predicate2);
      vector0.removeIf(predicate3);
      visualListModel0.setData(vector0);
      assertEquals("[]", vector0.toString());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      VisualListModel visualListModel0 = new VisualListModel();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      DefaultEditorKit.InsertContentAction defaultEditorKit_InsertContentAction0 = new DefaultEditorKit.InsertContentAction();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource1 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource1.removeActionListener(defaultEditorKit_InsertContentAction0);
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource2 = new BasicComboBoxEditor.UIResource();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource3 = new BasicComboBoxEditor.UIResource();
      ParameterBlock parameterBlock0 = new ParameterBlock();
      basicComboBoxEditor_UIResource1.getEditorComponent();
      JComboBox<Object> jComboBox0 = new JComboBox<Object>();
      jComboBox0.setFocusTraversalKeysEnabled(true);
      basicComboBoxEditor_UIResource1.addActionListener(jComboBox0);
      jComboBox0.doLayout();
      jComboBox0.getLocation();
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) parameterBlock0;
      objectArray0[1] = (Object) basicComboBoxEditor_UIResource3;
      objectArray0[2] = (Object) jComboBox0;
      objectArray0[3] = (Object) basicComboBoxEditor_UIResource0;
      objectArray0[4] = (Object) basicComboBoxEditor_UIResource2;
      JComboBox<Object> jComboBox1 = new JComboBox<Object>(objectArray0);
      jComboBox1.getInheritsPopupMenu();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource4 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource4.removeActionListener(defaultEditorKit_InsertContentAction0);
      MetalComboBoxEditor metalComboBoxEditor0 = new MetalComboBoxEditor();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource0 = new MetalComboBoxEditor.UIResource();
      MetalComboBoxEditor.UIResource metalComboBoxEditor_UIResource1 = new MetalComboBoxEditor.UIResource();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        visualListModel0.removeElementAt((-7), true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -7
         //
         verifyException("java.util.Vector", e);
      }
  }
}
