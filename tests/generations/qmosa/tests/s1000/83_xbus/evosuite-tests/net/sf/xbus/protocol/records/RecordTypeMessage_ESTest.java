/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 02:13:21 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.time.Instant;
import java.time.temporal.TemporalAmount;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.configuration.DirProvider;
import org.apache.axis.deployment.wsdd.WSDDDeployment;
import org.apache.axis.deployment.wsdd.WSDDService;
import org.apache.axis.message.Detail;
import org.apache.axis.message.SOAPBodyElement;
import org.apache.axis.soap.SOAP12Constants;
import org.apache.axis.soap.SOAPConstants;
import org.apache.commons.httpclient.ConnectMethod;
import org.apache.html.dom.HTMLAppletElementImpl;
import org.apache.html.dom.HTMLAreaElementImpl;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.wml.dom.WMLDocumentImpl;
import org.apache.xerces.dom.CDATASectionImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Node;
import org.w3c.dom.html.HTMLElement;
import org.w3c.dom.traversal.NodeFilter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Boolean boolean0 = Boolean.FALSE;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      byteArrayList0.addAll(byteArrayList0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate2 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate3 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate4 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate5 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate6 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate7 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate8 = new EventReaderDelegate();
      ByteArrayList byteArrayList3 = new ByteArrayList();
      byteArrayList1.toByteArray();
      try { 
        recordTypeMessage0.setRequestObject(eventReaderDelegate5, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 javax.xml.stream.util.EventReaderDelegate cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(9);
      try { 
        recordTypeMessage0.setResponseObject(pipedInputStream0, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.io.PipedInputStream cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(true);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      DocumentImpl documentImpl1 = new DocumentImpl(true);
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl5 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl6 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl7 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl8 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl9 = new HTMLDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl9, ":.@am");
      deferredDocumentImpl0.getXmlEncoding();
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(hTMLDocumentImpl5, ":.@am", "Zujxk|BZcPd%OT82q", (String) null);
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl(documentTypeImpl0);
      hTMLDocumentImpl5.hasAttributes();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(":.@am", (XBUSSystem) null, "Enter: DeserializationContext::endDocument()");
      recordTypeMessage0.setResponseDocument(hTMLDocumentImpl4, (XBUSSystem) null);
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl(true, false);
      DeferredDocumentImpl deferredDocumentImpl4 = new DeferredDocumentImpl();
      deferredDocumentImpl4.getXmlEncoding();
      HTMLDocumentImpl hTMLDocumentImpl10 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(deferredDocumentImpl3, "Enter: DeserializationContext::endDocument()");
      DocumentImpl documentImpl2 = new DocumentImpl(true);
      recordTypeMessage0.getResponseText();
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      hTMLDocumentImpl0.getAnchors();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      hTMLElement0.getNodeValue();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl3, "RC_OK");
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      hTMLDocumentImpl3.putIdentifier("RC_OK", hTMLElement0);
      hTMLDocumentImpl2.hasChildNodes();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "RC_OK");
      hTMLAreaElementImpl0.getNamespaceURI();
      HTMLAreaElementImpl hTMLAreaElementImpl1 = (HTMLAreaElementImpl)hTMLDocumentImpl3.adoptNode(hTMLAreaElementImpl0);
      hTMLAreaElementImpl1.getTarget();
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement((String) null, (String) null);
      hTMLDocumentImpl3.getAsync();
      hTMLDocumentImpl3.getIdentifier("RC_OK");
      hTMLAreaElementImpl1.item((-788));
      hTMLDocumentImpl3.setDocumentURI((String) null);
      hTMLAreaElementImpl1.cloneNode(false);
      hTMLAreaElementImpl1.getNodeValue();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl2 = new HTMLAreaElementImpl(hTMLDocumentImpl3, "RC_OK");
      hTMLDocumentImpl0.getAsync();
      hTMLDocumentImpl0.isSameNode(hTMLAreaElementImpl0);
      MockDate.UTC((-788), (-480), 443, 443, (-480), (-788));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray1 = new byte[3];
      byteArray1[2] = (byte) (-56);
      ByteArrayList.createByteArrayList(byteArray1, (byte) (-56));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ByteArrayList.createByteArrayList(byteArray1, 2498);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      ByteArrayList.createByteArrayList(byteArray1, 2498);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-56);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true, true);
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(true);
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      DocumentImpl documentImpl1 = new DocumentImpl(true);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl1.getDoctype();
      hTMLDocumentImpl0.getApplets();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl((DocumentType) null);
      wMLDocumentImpl1.getChildNodes();
      wMLDocumentImpl1.normalize();
      wMLDocumentImpl0.loadXML("");
      hTMLDocumentImpl1.createTreeWalker((Node) hTMLDocumentImpl0, 427, (NodeFilter) null, false);
      wMLDocumentImpl1.toString();
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(true, true);
      hTMLDocumentImpl1.getXmlEncoding();
      WMLDocumentImpl wMLDocumentImpl2 = new WMLDocumentImpl((DocumentType) null);
      hTMLDocumentImpl1.hasAttributes();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("2xr667iCd{", (XBUSSystem) null, (String) null);
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl4 = new DeferredDocumentImpl(false);
      deferredDocumentImpl1.getXmlEncoding();
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      CDATASectionImpl cDATASectionImpl0 = new CDATASectionImpl(documentImpl0, (String) null);
      DocumentImpl documentImpl2 = new DocumentImpl(true);
      recordTypeMessage0.getResponseText();
      Object object0 = new Object();
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("R_eU/=_;Z{z+Ylb", (XBUSSystem) null, "R_eU/=_;Z{z+Ylb");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      Detail detail0 = new Detail();
      detail0.getDeserializationContext();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      WSDDDeployment wSDDDeployment0 = new WSDDDeployment();
      DirProvider dirProvider0 = null;
      try {
        dirProvider0 = new DirProvider("provider", "deployment");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Configuration file directory 'provider' does not exist or is not a directory or is not readable.
         //
         verifyException("org.apache.axis.configuration.DirProvider", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      boolean boolean0 = new Boolean("");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-56);
      byteArray1[1] = (byte) (-56);
      byteArray1[2] = (byte) (-56);
      byteArray1[3] = (byte) (-56);
      byteArray1[4] = (byte) (-56);
      byteArray1[5] = (byte) (-56);
      byteArray1[6] = (byte) (-56);
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      recordTypeMessage0.setShortname("");
      RecordTypeMessage recordTypeMessage1 = new RecordTypeMessage((XBUSSystem) null);
      RecordTypeMessage recordTypeMessage2 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      assertNotSame(recordTypeMessage0, recordTypeMessage1);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate();
      mockDate0.before(mockDate1);
      MockDate mockDate2 = new MockDate((-53), (-53), (-53), (-53), (-53));
      Boolean.valueOf(false);
      MockDate mockDate3 = new MockDate(1372, 1372, (-53), 1372, (-53));
      MockDate mockDate4 = (MockDate)mockDate1.clone();
      mockDate2.after(mockDate3);
      MockDate mockDate5 = new MockDate();
      mockDate5.after(mockDate0);
      MockDate mockDate6 = new MockDate(1372, (-53), 1372, (-53), (-53), 1372);
      mockDate5.after(mockDate3);
      MockDate.UTC((-53), (-53), (-53), (-53), (-53), 1372);
      mockDate1.before(mockDate5);
      mockDate5.getTime();
      mockDate0.before(mockDate5);
      boolean boolean0 = new Boolean(false);
      MockDate mockDate7 = new MockDate((-53), (-53), 1372, 1372, (-53), (-53));
      MockDate.UTC((-26), (-53), (-53), 1372, (-53), (-26));
      mockDate3.getTime();
      MockDate mockDate8 = new MockDate();
      mockDate4.after(mockDate7);
      MockDate mockDate9 = new MockDate((-4025827808000L));
      mockDate2.before(mockDate9);
      MockDate mockDate10 = new MockDate((-1674), (-1674), 1372, 1372, (-53), 1372);
      mockDate7.before(mockDate1);
      mockDate2.after(mockDate0);
      mockDate2.getTime();
      mockDate2.after(mockDate5);
      MockDate.UTC((-53), (-1674), 1372, (-53), 1372, (-53));
      MockDate.UTC((-53), (-1674), 1372, (-53), (-53), 1372);
      MockDate.UTC((-53), (-53), (-53), (-53), (-53), 1372);
      mockDate7.after(mockDate2);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(true);
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(true);
      deferredDocumentImpl0.createDeferredElement("");
      DocumentImpl documentImpl0 = new DocumentImpl(true);
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      hTMLDocumentImpl3.getDoctype();
      WMLDocumentImpl wMLDocumentImpl0 = new WMLDocumentImpl((DocumentType) null);
      wMLDocumentImpl0.loadXML("");
      WMLDocumentImpl wMLDocumentImpl1 = new WMLDocumentImpl((DocumentType) null);
      wMLDocumentImpl1.toString();
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(false, false);
      CoreDocumentImpl coreDocumentImpl1 = new CoreDocumentImpl((DocumentType) null, false);
      coreDocumentImpl1.getXmlEncoding();
      CoreDocumentImpl coreDocumentImpl2 = new CoreDocumentImpl(true);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("9cO#sDD~a)},%qC]|?", (XBUSSystem) null, "n;5]^+e");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(deferredDocumentImpl1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      hTMLElement0.lookupNamespaceURI("Z");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLElement0.getNodeValue();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl2, "RC_OK");
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl2.putIdentifier("RC_OK", hTMLElement0);
      hTMLDocumentImpl1.hasChildNodes();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "RC_OK");
      hTMLAreaElementImpl0.getAttribute("r]t|BB(H");
      hTMLAreaElementImpl0.setReadOnly(false, false);
      hTMLAreaElementImpl0.getNamespaceURI();
      HTMLAreaElementImpl hTMLAreaElementImpl1 = (HTMLAreaElementImpl)hTMLDocumentImpl2.adoptNode(hTMLAreaElementImpl0);
      hTMLAreaElementImpl1.getTarget();
      hTMLAreaElementImpl0.compareDocumentPosition(hTMLDocumentImpl2);
      hTMLDocumentImpl2.getIdentifier("RC_OK");
      hTMLAreaElementImpl1.getLength();
      hTMLAreaElementImpl1.item((-830));
      HTMLAreaElementImpl hTMLAreaElementImpl2 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "W");
      hTMLAreaElementImpl2.getAttributes();
      Integer integer0 = new Integer((short)35);
      HTMLAreaElementImpl hTMLAreaElementImpl3 = new HTMLAreaElementImpl(hTMLDocumentImpl2, "RC_OK");
      HTMLDocumentImpl hTMLDocumentImpl4 = new HTMLDocumentImpl();
      hTMLDocumentImpl4.getDoctype();
      hTMLAreaElementImpl1.getNodeValue();
      HTMLAreaElementImpl hTMLAreaElementImpl4 = new HTMLAreaElementImpl(hTMLDocumentImpl3, "W");
      hTMLDocumentImpl4.isSameNode((Node) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLElement hTMLElement0 = hTMLDocumentImpl0.getHead();
      hTMLDocumentImpl0.getAnchors();
      hTMLElement0.lookupNamespaceURI("Z");
      HTMLDocumentImpl hTMLDocumentImpl1 = new HTMLDocumentImpl();
      hTMLElement0.getNodeValue();
      HTMLDocumentImpl hTMLDocumentImpl2 = new HTMLDocumentImpl();
      HTMLAppletElementImpl hTMLAppletElementImpl0 = new HTMLAppletElementImpl(hTMLDocumentImpl2, "RC_OK");
      HTMLDocumentImpl hTMLDocumentImpl3 = new HTMLDocumentImpl();
      hTMLDocumentImpl2.putIdentifier("RC_OK", hTMLElement0);
      hTMLDocumentImpl1.hasChildNodes();
      HTMLAreaElementImpl hTMLAreaElementImpl0 = new HTMLAreaElementImpl(hTMLDocumentImpl0, "RC_OK");
      hTMLAreaElementImpl0.setReadOnly(false, false);
      hTMLAreaElementImpl0.getNamespaceURI();
      HTMLAreaElementImpl hTMLAreaElementImpl1 = (HTMLAreaElementImpl)hTMLDocumentImpl2.adoptNode(hTMLAreaElementImpl0);
      hTMLAreaElementImpl1.getTarget();
      SOAPBodyElement sOAPBodyElement0 = new SOAPBodyElement((String) null, (String) null);
      hTMLAreaElementImpl0.compareDocumentPosition(hTMLDocumentImpl2);
      hTMLDocumentImpl2.getAsync();
      hTMLDocumentImpl2.getIdentifier("RC_OK");
      hTMLAreaElementImpl1.item((-788));
      hTMLAreaElementImpl1.getAttributes();
      hTMLAreaElementImpl1.getTabIndex();
      hTMLAreaElementImpl1.cloneNode(false);
      hTMLDocumentImpl0.getDoctype();
      hTMLAreaElementImpl1.getNodeValue();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl();
      HTMLAreaElementImpl hTMLAreaElementImpl2 = new HTMLAreaElementImpl(hTMLDocumentImpl2, "RC_OK");
      hTMLDocumentImpl0.isSameNode(hTMLAreaElementImpl0);
      CoreDocumentImpl coreDocumentImpl1 = new CoreDocumentImpl(false);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-56);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byte[] byteArray1 = new byte[3];
      byteArray1[2] = (byte) (-56);
      ByteArrayList.createByteArrayList(byteArray1, (byte) (-56));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      ByteArrayList.createByteArrayList(byteArray1, (byte) (-56));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      ByteArrayList.createByteArrayList(byteArray1, (byte) (-56));
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("Y h :G*y}s`", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(".", (XBUSSystem) null, ".");
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      Boolean boolean0 = new Boolean(".");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.iterator();
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.addAll(byteArrayList0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      Hashtable<Integer, InputStream> hashtable0 = new Hashtable<Integer, InputStream>(21);
      Enumeration<InputStream> enumeration0 = hashtable0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      sOAP12Constants0.getFaultQName();
      WSDDService wSDDService0 = new WSDDService();
      Hashtable<Integer, InputStream> hashtable1 = null;
      try {
        hashtable1 = new Hashtable<Integer, InputStream>(1, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Load: 0.0
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockInstant.ofEpochMilli(0);
      MockDate mockDate0 = new MockDate(0, 0, 0);
      MockDate mockDate1 = new MockDate(102, 0, 0, (-163), 0);
      MockDate mockDate2 = new MockDate((-163), (-163), 0);
      mockDate1.before(mockDate2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockDate0.setTime(102);
      MockDate mockDate3 = new MockDate();
      MockDate mockDate4 = new MockDate(1801, 0, 1801, 1394, (-163));
      MockDate mockDate5 = new MockDate();
      mockDate5.after(mockDate0);
      mockDate0.setTime(1394);
      MockDate mockDate6 = new MockDate(0, 0, (-163));
      mockDate4.after(mockDate3);
      mockDate4.after(mockDate3);
      MockDate.UTC(8, (-1667), 1394, 1532, (-3794), 2174);
      MockDate.UTC((-163), 5, 8, 8, 0, (-1));
      long long0 = new Integer(102);
      mockDate6.after(mockDate3);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("RC_OK", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate2 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate3 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate4 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate5 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate6 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate7 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate8 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate9 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate10 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate11 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate12 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate13 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate14 = new EventReaderDelegate();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate15 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate16 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate17 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate18 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate19 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate20 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate21 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate22 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate23 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate24 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate25 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate26 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate27 = new EventReaderDelegate();
      byteArrayList0.addAll(byteArrayList0);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("RC_OK", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "R_eU/=_;Z{z+Ylb";
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("R_eU/=_;Z{z+Ylb", (XBUSSystem) null, "R_eU/=_;Z{z+Ylb");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-103);
      byteArray0[0] = (byte) (-103);
      byteArrayList0.add(byteArray0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.iterator();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Boolean boolean0 = Boolean.FALSE;
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate2 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate3 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate4 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate5 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate6 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate7 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate8 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate9 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate10 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate11 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate12 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate13 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate14 = new EventReaderDelegate();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate15 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate16 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate17 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate18 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate19 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate20 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate21 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate22 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate23 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate24 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate25 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate26 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate27 = new EventReaderDelegate();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      byteArrayList1.add(byteArray0);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("", (XBUSSystem) null, "");
      recordTypeMessage0.getResponseObject();
      Instant instant0 = MockInstant.ofEpochSecond((-185L), (-185L));
      TemporalAmount temporalAmount0 = mock(TemporalAmount.class, new ViolatedAssumptionAnswer());
      Instant instant1 = MockInstant.plusNanos(instant0, (-185L));
      Instant instant2 = MockInstant.minusNanos(instant1, 0L);
      Instant instant3 = MockInstant.minusMillis(instant2, (-185L));
      Instant instant4 = MockInstant.plusSeconds(instant3, 0L);
      // Undeclared exception!
      try { 
        MockInstant.minus(instant4, (TemporalAmount) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.time.Instant", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("R_eU/=_;Z{z+Ylb", (XBUSSystem) null, "R_eU/=_;Z{z+Ylb");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.iterator();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-23);
      byteArray0[1] = (byte)15;
      byteArrayList1.add(byteArray0);
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byteArrayList2.iterator();
      byteArrayList1.toByteArray();
      ConnectMethod connectMethod0 = new ConnectMethod();
      ConnectMethod connectMethod1 = new ConnectMethod(connectMethod0);
      // Undeclared exception!
      try { 
        MockURL.URL((String) null, "", (int) (byte) (-61), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Boolean boolean0 = Boolean.FALSE;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate2 = new EventReaderDelegate();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate3 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate4 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate5 = new EventReaderDelegate();
      byteArrayList1.addAll(byteArrayList0);
      EventReaderDelegate eventReaderDelegate6 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate7 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate8 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate9 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate10 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate11 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate12 = new EventReaderDelegate();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byte[] byteArray0 = new byte[4];
      byteArrayList1.iterator();
      ByteArrayList byteArrayList3 = ByteArrayList.createByteArrayList(byteArray0, 808);
      byteArrayList2.addAll(byteArrayList3);
      byteArrayList1.addAll(byteArrayList2);
      ByteArrayList byteArrayList4 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate13 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate14 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate15 = new EventReaderDelegate();
      byteArrayList1.toByteArray();
      EventReaderDelegate eventReaderDelegate16 = new EventReaderDelegate();
      byteArray0[2] = (byte)0;
      EventReaderDelegate eventReaderDelegate17 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate18 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate19 = new EventReaderDelegate();
      ByteArrayList byteArrayList5 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate20 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate21 = new EventReaderDelegate();
      byteArrayList5.toByteArray();
      byteArrayList5.addAll(byteArrayList2);
      recordTypeMessage0.setRequestObject(byteArrayList5, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Boolean boolean0 = Boolean.TRUE;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      byteArrayList0.addAll(byteArrayList0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate2 = new EventReaderDelegate();
      byteArrayList0.toString();
      EventReaderDelegate eventReaderDelegate3 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate4 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate5 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate6 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate7 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate8 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate9 = new EventReaderDelegate();
      ByteArrayList byteArrayList3 = new ByteArrayList();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      byteArray0[2] = (byte) (-104);
      EventReaderDelegate eventReaderDelegate10 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate11 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate12 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate13 = new EventReaderDelegate();
      ByteArrayList byteArrayList4 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate14 = new EventReaderDelegate();
      ByteArrayList byteArrayList5 = new ByteArrayList();
      byteArrayList5.toByteArray();
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Boolean boolean0 = Boolean.FALSE;
      ByteArrayList byteArrayList0 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate1 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate2 = new EventReaderDelegate();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate3 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate4 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate5 = new EventReaderDelegate();
      byteArrayList1.addAll(byteArrayList0);
      EventReaderDelegate eventReaderDelegate6 = new EventReaderDelegate();
      byteArrayList1.toString();
      EventReaderDelegate eventReaderDelegate7 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate8 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate9 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate10 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate11 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate12 = new EventReaderDelegate();
      ByteArrayList byteArrayList2 = new ByteArrayList();
      byte[] byteArray0 = new byte[4];
      byteArrayList1.iterator();
      byteArrayList1.addAll(byteArrayList2);
      ByteArrayList byteArrayList3 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate13 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate14 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate15 = new EventReaderDelegate();
      byteArrayList1.toByteArray();
      EventReaderDelegate eventReaderDelegate16 = new EventReaderDelegate();
      byteArray0[2] = (byte)0;
      EventReaderDelegate eventReaderDelegate17 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate18 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate19 = new EventReaderDelegate();
      ByteArrayList byteArrayList4 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate20 = new EventReaderDelegate();
      EventReaderDelegate eventReaderDelegate21 = new EventReaderDelegate();
      byteArrayList4.toByteArray();
      byteArrayList4.addAll(byteArrayList2);
      recordTypeMessage0.setRequestObject(byteArrayList4, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      Boolean boolean0 = new Boolean(".");
      ByteArrayList byteArrayList0 = new ByteArrayList();
      byteArrayList0.iterator();
      byteArrayList0.addAll(byteArrayList0);
      byteArrayList0.addAll(byteArrayList0);
      ByteArrayList byteArrayList1 = new ByteArrayList();
      Hashtable<Integer, InputStream> hashtable0 = new Hashtable<Integer, InputStream>(21);
      Enumeration<InputStream> enumeration0 = hashtable0.elements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SOAP12Constants sOAP12Constants0 = SOAPConstants.SOAP12_CONSTANTS;
      sOAP12Constants0.getFaultQName();
      WSDDService wSDDService0 = new WSDDService();
      Hashtable<Integer, InputStream> hashtable1 = null;
      try {
        hashtable1 = new Hashtable<Integer, InputStream>(1, 0.0F);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Load: 0.0
         //
         verifyException("java.util.Hashtable", e);
      }
  }
}
