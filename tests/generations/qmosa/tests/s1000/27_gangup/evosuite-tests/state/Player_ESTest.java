/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:20:33 GMT 2019
 */

package state;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.UnsupportedEncodingException;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import state.Packable;
import state.Party;
import state.Player;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Player_ESTest extends Player_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.8868172102030196
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".*[.]class$");
      Player player0 = new Player(2147340491, "]ySCt)sk,,c9E=", ">dd*_eRsm", 2147340491);
      Player player1 = new Player((short)4919, "]ySCt)sk,,c9E=", ">dd*_eRsm", 10);
      player1.setMoney(0.0F);
      player1.pack();
      player0.setMoney(1515.9424F);
      player1.remove(player0);
      player0.isJoinOK(player1, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player2 = new Player((short)4919, ".*[.]class$", ".*[.]class$", (short)4919);
      player0.setJoinOK(player2, true);
      System.setCurrentTimeMillis(10);
      player1.setJoinOK(player2, true);
      player0.gangStrength();
      player2.type();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "]ySCt)sk,,c9E=");
      player1.type();
      player2.isJoinOK(player0, false);
      player0.gangStrength();
      System.setCurrentTimeMillis(15010L);
      player2.isConnected();
      player1.isJoinOK(player2, false);
      player0.pack();
      assertEquals(1515.9424F, player0.getMoney(), 0.01F);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.768498603470507
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Player player0 = new Player(2147340491, ">dd*_eRsm", 2147340491);
      Player player1 = new Player((short)4919, "", ">dd*_eRsm", (short)4919);
      player1.setMoney(0.0F);
      player0.reset(false);
      player1.pack();
      player0.setMoney(1515.9424F);
      player1.remove(player0);
      player0.isJoinOK(player1, true);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player1.add(player0);
      player0.boss = (Party) player1;
      player1.setJoinOK(player0, false);
      player0.setMoney(0.0F);
      player0.setJoinOK(player1, false);
      player0.boss = null;
      System.setCurrentTimeMillis(0L);
      player0.setJoinOK(player1, false);
      player1.gangStrength();
      player1.type();
      player0.isBoss();
      player0.id = 2147340491;
      player0.type();
      player0.isJoinOK(player1, true);
      player1.gangStrength();
      System.setCurrentTimeMillis(2147340491);
      player0.isJoinOK(player1, false);
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals(0.0F, player0.getMoney(), 0.01F);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Player player0 = new Player(1713, "", "", 1713, 0);
      int int0 = player0.gangStrength();
      assertEquals(0, int0);
      assertEquals(1713, player0.getPictureId());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals(0L, player0.getTimeOfDeath());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.322575046183876
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Player player0 = new Player((-2066), "", "$?R#A)N", 1, 1150);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)111;
      player0.unpack(byteArray0);
      Player player1 = new Player((byte) (-1), (String) null, ".*[.]class$", (byte)111, (-700));
      player1.pack();
      Player player2 = new Player(3);
      player2.setJoinOK(player1, false);
      player1.setMoney(0.0F);
      Player player3 = new Player();
      player3.setDead((-579L));
      assertEquals((-579L), player3.getTimeOfDeath());
      
      player0.isJoinOK(player2, false);
      player1.getIP();
      float float0 = player0.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Player player0 = new Player((-526), "_~NEvtbOc", 1664);
      player0.getX();
      player0.setX((-526));
      player0.boss = null;
      player0.setDead((long) 1664);
      player0.setX(0.0F);
      player0.getIP();
      player0.getX();
      player0.getIP();
      Player player1 = new Player(351);
      player0.boss = (Party) player1;
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(1664L, player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Player player0 = new Player(5, ">dd*_eRsm", "\"a!T1aCK&", 5);
      player0.setX(1.0F);
      Player player1 = new Player(5, "", "rI#mqeww+gqF@J:=|~1", (-3322));
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      player0.setMoney((-3322));
      PipedInputStream pipedInputStream0 = new PipedInputStream((short)4919);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(pipedOutputStream0);
      filterOutputStream0.close();
      DataOutputStream dataOutputStream0 = new DataOutputStream(filterOutputStream0);
      try { 
        player1.pack(dataOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.10451946591644
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Player player0 = new Player(2147340491, "]ySCt)sk,,c9E=", ">dd*_eRsm", 2147340491);
      Player player1 = new Player((short)4919, "", ">dd*_eRsm", (short)4919);
      player1.setMoney(0.0F);
      player1.pack();
      player0.setMoney(1515.9424F);
      player1.remove(player0);
      player1.setX(2147340491);
      player0.isJoinOK(player1, true);
      player0.setZ((-2178.5F));
      player1.add(player0);
      player0.setJoinOK(player1, false);
      System.setCurrentTimeMillis((short)4919);
      player0.setJoinOK(player1, false);
      player1.gangStrength();
      player1.type();
      player0.id = 2147340491;
      player0.type();
      player1.gangStrength();
      System.setCurrentTimeMillis((short)4919);
      float float0 = player0.getZ();
      assertEquals(1515.9424F, player0.getMoney(), 0.01F);
      assertEquals((-2178.5F), float0, 0.01F);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.7853437136837007
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      Player player1 = new Player((-4676), (String) null, (String) null, (short)4919, (-4676));
      player1.reset(true);
      player1.setMoney(0.2F);
      Player player2 = new Player((-671));
      player1.setDead((long) 2582);
      player0.isJoinOK(player1, true);
      player1.isJoinOK(player1, false);
      float float0 = player1.getMoney();
      assertTrue(player1.isDead());
      assertEquals(0.2F, float0, 0.01F);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(2147340491, "]ySCt)sk,,c9E=", ">dd*_eRsm", 2147340491);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(1916, "(cL[x8r|I", ">dd*_eRsm", (-3516), (-845));
      player0.setJoinOK(player1, false);
      player1.setDead((long) (-845));
      assertEquals((-845L), player1.getTimeOfDeath());
      
      Player player2 = new Player((short)4919, "", "a", 3113, 0);
      player2.setConnected(false);
      player0.isJoinOK(player2, false);
      boolean boolean0 = player2.isConnected();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Player player0 = new Player((-90), "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", "", 449, (-90));
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals("Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", player0.getIP());
      assertEquals(449, player0.getPictureId());
      assertEquals((-90), int0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Player player0 = new Player(2147340491, ")~sgnq-[cd,BgcUMP", "]SC)sk,,c9E=", (-368));
      Party party0 = new Party(2147340491);
      player0.head = party0;
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = object0;
      objectArray0[3] = (Object) ")~sgnq-[cd,BgcUMP";
      objectArray0[4] = objectArray0[3];
      objectArray0[5] = (Object) "]SC)sk,,c9E=";
      objectArray0[6] = (Object) "Fe}HOfJqs#Qc'";
      System.setCurrentTimeMillis(2147340491);
      player0.pack();
      // Undeclared exception!
      try { 
        player0.gangStrength();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // state.Party cannot be cast to state.Player
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.363279396743392
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Y2rN8J");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Player player0 = new Player((-3890), "", "state.Player", 262);
      Player player1 = new Player((short)4919, "", "", (-1873), (-3890));
      player1.setDead();
      player0.reset(false);
      player1.getSubparty();
      player0.id = 262;
      player0.isJoinOK(player1, false);
      player0.gangStrength();
      player1.pack();
      player0.getMoney();
      player1.setDead();
      player0.getZ();
      player1.getZ();
      player0.boss = (Party) player1;
      player0.getIP();
      System.setCurrentTimeMillis(1156L);
      player1.pack();
      player0.getZ();
      player1.getX();
      player1.type();
      player1.getIP();
      player1.type();
      int int0 = player1.getStrength();
      assertEquals(1392409281320L, player1.getTimeOfDeath());
      assertEquals((-3890), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Player player0 = new Player((-1), "iT(K9bj**z", "iT(K9bj**z", 915);
      player0.setX((-571.8F));
      player0.getX();
      System.setCurrentTimeMillis(2822L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.1341286000959614
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Player.unpack(): *** WARNING *** data is not of proper type!");
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-41);
      byteArray0[2] = (byte) (-102);
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(2147340491, "", ">dd*_eRsm", 2147340491);
      Player player1 = (Player)player0.gangBoss();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 14085);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      player0.add(player1);
      player0.setJoinOK(player0, false);
      boolean boolean1 = player0.isJoinOK(player0, false);
      assertEquals(1, player0.getStrength());
      assertFalse(boolean1 == boolean0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertFalse(player0.isDead());
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals("", player0.getIP());
      assertEquals(2147340491, player0.getPictureId());
      assertTrue(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.419594359581629
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)0;
      Player player1 = new Player((byte)0, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 2147340500);
      player0.prev = (Party) player1;
      byteArray0[3] = (byte)117;
      player0.unpack(byteArray0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      player0.toString();
      assertEquals("0.0.0.0", player0.getIP());
      
      float float0 = player1.getX();
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(10.0F, float0, 0.01F);
      assertEquals(2147340500, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0L, player1.getTimeOfDeath());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Player player0 = new Player(5, "gui.ModuleBrowserDialog$ModuleFilter", (-1703));
      Player player1 = new Player((byte)10, "", "", (-2066));
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        player1.unpack((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.5594415416798357
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      player0.setDead((long) (-4676));
      Player player1 = new Player((-4676), (String) null, (short)4919);
      player1.getMoney();
      int int0 = Packable.TEXT_MESSAGE;
      player1.type();
      player1.type();
      player0.isDead();
      player0.type();
      long long0 = player0.getTimeOfDeath();
      assertEquals((-4676L), long0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.1068586472029898
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Player player0 = new Player((-449));
      Player player1 = new Player((short)4919, "-M^S,", 2287);
      byte[] byteArray0 = player1.pack();
      player0.getY();
      byte[] byteArray1 = player1.pack();
      player1.setZ(2287);
      player1.getY();
      player1.setY((-1865.0F));
      player0.getIP();
      player0.unpack(byteArray1);
      Player player2 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player3 = new Player(3770, "-M^S,", "+pX[v$N)Rl|", 3663);
      player3.unpack(byteArray1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)4;
      byteArray2[1] = (byte) (-23);
      byteArray2[2] = (byte) (-7);
      byteArray2[3] = (byte)55;
      byteArray2[4] = (byte)10;
      dataInputStream0.readFully(byteArray2);
      player0.unpack(dataInputStream0);
      player2.getZ();
      int int0 = player3.type();
      assertEquals("-M^S,", player3.toString());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player();
      player0.setMoney((-2066));
      player0.getMoney();
      Player player1 = new Player((-2066), "va}bSMr{:-S !DO", (short)4919);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      System.setCurrentTimeMillis(1588L);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = (-536);
      Player player0 = new Player((-536), "?R#)", (String) null, 272);
      // Undeclared exception!
      try { 
        player0.pack();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1411461439556105
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(2147340491, "", "m%7P0<%V}CqCjl<i~J", (-746));
      Player player1 = new Player(1, "", "6NQdyEY:Z", (-746));
      player0.setJoinOK(player1, true);
      boolean boolean0 = player0.isJoinOK(player1, false);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertEquals((-746), player1.getPictureId());
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
      assertEquals("", player1.getIP());
      assertFalse(player1.isDead());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.1757412430371352
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney((short)4919);
      player0.setY((short)4919);
      player0.setDead();
      player0.setDead();
      player0.setZ((short)4919);
      player0.type();
      player0.getY();
      player0.pack();
      player0.pack();
      player0.setDead();
      player0.getIP();
      player0.getZ();
      player0.gangStrength();
      float float0 = player0.getZ();
      assertEquals(4919.0F, float0, 0.01F);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.3039214422364647
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Player player0 = new Player((-66));
      player0.setMoney((-4058.2F));
      player0.setY((-1.0F));
      player0.setDead();
      player0.setDead();
      player0.setZ((-1536.2397F));
      player0.type();
      player0.getY();
      player0.pack();
      Player player1 = new Player((-66), "", (-66));
      player0.pack();
      Player player2 = new Player();
      player2.getIP();
      player2.gangStrength();
      Player player3 = new Player((short)4919, "", "", (short)4919);
      player3.getZ();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "8,zt+aXU/?MVOH,");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.884381759284857
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      Player player1 = new Player(3084, (String) null, (String) null, 3084);
      player0.head = (Party) player1;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player2 = new Player(2260, "", 2260);
      player0.setJoinOK(player2, true);
      player2.reset(true);
      player2.setMoney(0.2F);
      player2.isBoss();
      Player player3 = new Player(2139);
      player2.setDead((long) (-631));
      player2.isJoinOK(player3, false);
      player2.toString();
      player2.isJoinOK(player3, false);
      assertEquals(0.2F, player2.getMoney(), 0.01F);
      
      boolean boolean0 = player1.isJoinOK(player3, false);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.2641141459685947
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Player player0 = new Player();
      player0.setMoney(0.0F);
      player0.setY(0.0F);
      player0.setDead();
      player0.setDead();
      player0.setZ(0.0F);
      player0.type();
      player0.getY();
      player0.pack();
      Player player1 = new Player(0, "U0a8s[2$~", 0);
      Player player2 = new Player(0, "U0a8s[2$~", "U0a8s[2$~", (short)4919, (short)4919);
      player2.setMoney(0.0F);
      player2.getPictureId();
      player2.pack();
      player2.type();
      player2.pack();
      int int0 = player0.type();
      assertEquals(1392409281320L, player0.getTimeOfDeath());
      assertEquals(5, int0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 0, 0);
      player0.setY((-227.64644F));
      player0.setDead(3814L, false);
      player0.setY(0.0F);
      long long0 = player0.getTimeOfDeath();
      assertEquals(3814L, long0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 248;
      Player player0 = new Player((-66), "$?R#A)N", "$?R#A)N", 248, (-66));
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      player0.unpack(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, (-66));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.6772245773362195
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Player player0 = new Player(0, "", "", (-3916), 5);
      player0.id = 0;
      player0.setDead();
      player0.getSubparty();
      player0.type();
      player0.getName();
      player0.setDead(1813L);
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Player player0 = new Player(2147340491, "T", "]SC)sk,,c9E=", (-368));
      Party party0 = player0.next;
      player0.head = null;
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "T";
      objectArray0[4] = objectArray0[3];
      objectArray0[5] = (Object) "]SC)sk,,c9E=";
      objectArray0[6] = (Object) "Fe}HOfJqs#Qc'";
      objectArray0[7] = (Object) "T";
      objectArray0[8] = (Object) "";
      // Undeclared exception!
      try { 
        player0.isJoinOK((Player) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.579755221006731
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      Player player1 = new Player(2260, (String) null, 2260);
      player0.setJoinOK(player1, true);
      player1.reset(true);
      player1.setMoney(0.2F);
      Player player2 = new Player((-671));
      player1.setDead((long) 2582);
      player0.isJoinOK(player1, false);
      // Undeclared exception!
      try { 
        player1.unpack((DataInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)0;
      Player player1 = new Player((byte)0, (String) null, "module.ModuleBrowserDialog$ModuleFilter", 2147340491);
      player0.prev = (Party) player1;
      byteArray0[8] = (byte)117;
      player0.unpack(byteArray0);
      assertEquals("0.0.0.0", player0.getIP());
      
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      boolean boolean0 = player1.unpack(dataInputStream0);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(2147340491, player1.getPictureId());
      assertFalse(player1.isDead());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Player player0 = new Player(2147340491, "]ySCt)sk,,c9E=", ">dd*_eRsm", 2147340491);
      Player player1 = new Player((-1721), "]ySCt)sk,,c9E=", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 21, 2147340491);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byte byte0 = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-33);
      player0.unpack(byteArray0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-1475));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "]SC)sk,,c9E=";
      String string1 = "T";
      Player player0 = new Player(2147340472, "T", "]SC)sk,,c9E=", 1170);
      Party party0 = player0.next;
      String string2 = "Fe}HOfJqs#Qc'";
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "]SC)sk,,c9E=";
      objectArray0[1] = (Object) "]SC)sk,,c9E=";
      objectArray0[4] = objectArray0[3];
      // Undeclared exception!
      try { 
        player0.setJoinOK((Player) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("state.Player", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Player player0 = new Player((-66), "$?R#A)N", "$?R#A)N", 248, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockPrintStream mockPrintStream0 = new MockPrintStream("$?R#A)N");
      Locale locale0 = Locale.JAPAN;
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "$?R#A)N";
      objectArray0[3] = (Object) mockPrintStream0;
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) null;
      Object object1 = new Object();
      objectArray0[6] = object1;
      PrintStream printStream0 = mockPrintStream0.format(locale0, "", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      player0.pack(dataOutputStream0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertEquals(1, player0.getStrength());
      assertEquals(248, player0.getPictureId());
      assertTrue(player0.isConnected());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = (-536);
      int int1 = 272;
      Player player0 = new Player((-536), "?R#", "?R#", 272, (-536));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      // Undeclared exception!
      try { 
        player0.pack(dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataOutputStream", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Player player0 = new Player((-2652));
      player0.setZ((-1.0F));
      player0.setX((-339.3F));
      player0.setMoney(651.53F);
      int int0 = player0.getPictureId();
      assertEquals(651.53F, player0.getMoney(), 0.01F);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Player player0 = new Player();
      player0.toString();
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("Player-1", "Player-1");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // Player-1
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Player player0 = new Player(2147340491, "T", "]SC)sk,,c9E=", (-368));
      player0.setX(0.0F);
      player0.setX((-368));
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "T";
      objectArray0[4] = objectArray0[3];
      objectArray0[5] = (Object) "]SC)sk,,c9E=";
      objectArray0[6] = (Object) "Fe}HOfJqs#Qc'";
      objectArray0[7] = (Object) "]SC)sk,,c9E=";
      objectArray0[8] = (Object) "";
      System.setCurrentTimeMillis((-390L));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)0;
      int int0 = player0.getPictureId();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals((-4676), int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1, player0.getStrength());
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.262384640607128
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Player player0 = new Player(0, "0.0.0.0", "0.0.0.0", 4919, 0);
      Party party0 = new Party();
      party0.boss = (Party) player0;
      party0.next = (Party) player0;
      player0.add(party0);
      player0.setMoney(0);
      player0.getIP();
      player0.setDead(1L, false);
      player0.setDead((long) 0);
      player0.setConnected(true);
      player0.setDead((-399L), false);
      Player player1 = new Player();
      player0.setJoinOK(player1, false);
      player0.setZ(0.0F);
      player0.setJoinOK(player1, false);
      player0.getY();
      player0.getStrength();
      player1.setMoney(0);
      player1.setDead(0L, false);
      player1.getIP();
      boolean boolean0 = player1.isJoinOK(player0, true);
      assertEquals((-399L), player0.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.0506636431758234
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Player player0 = new Player(2147340491, "]ySCt)sk,,c9E=", ">dd*_eRsm", 2147340491);
      Player player1 = new Player((-1721), "]ySCt)sk,,c9E=", "Player.unpack(): *** WARNING *** [EOF] data was incomplete: ", 21, 2147340491);
      player0.setY(0.0F);
      player1.setJoinOK(player0, false);
      player0.setDead((-1L));
      Player player2 = new Player((-3413));
      player2.isJoinOK(player0, false);
      player1.getStrength();
      player0.getMoney();
      assertTrue(player0.isDead());
      
      float float0 = player2.getX();
      assertEquals(10.0F, float0, 0.01F);
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Player player0 = new Player(2147340491, "T", "E/", (-368));
      Object object0 = new Object();
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) "";
      objectArray0[2] = object0;
      objectArray0[3] = (Object) "T";
      objectArray0[4] = objectArray0[3];
      objectArray0[5] = (Object) "E/";
      objectArray0[6] = (Object) "Fe}HOfJqs#Qc'";
      objectArray0[7] = (Object) "T";
      objectArray0[0] = (Object) "";
      System.setCurrentTimeMillis((-390L));
      Player player1 = new Player();
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals(0, player1.getPictureId());
      assertEquals("Player-1", player1.getName());
      assertEquals((-368), player0.getPictureId());
      assertEquals("T", player0.getIP());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.4164983843494308
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Player player0 = new Player(0, "module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter", 0, 0);
      player0.boss = null;
      player0.setY((-227.64644F));
      player0.setDead((long) 0, false);
      player0.setY(0.0F);
      player0.getTimeOfDeath();
      assertEquals(0.0F, player0.getY(), 0.01F);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.218655583840207
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte) (-41);
      byteArray0[3] = (byte) (-102);
      byteArray0[3] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(2147340491, "", ">dd*_eRsm", 2147340491);
      Player player1 = (Player)player0.gangBoss();
      player0.add(player1);
      player1.reset(false);
      player0.setJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player0, false);
      assertTrue(boolean0);
      
      boolean boolean1 = player0.isJoinOK(player1, true);
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertEquals(2147340491, player1.getPictureId());
      assertFalse(player1.isDead());
      assertFalse(boolean1);
      assertEquals("", player1.getIP());
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(1, player1.getStrength());
      assertTrue(player1.isConnected());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.5010693989799213
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player(2147340491, "", "", (-3195));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player1 = new Player(0);
      player1.head = (Party) player0;
      player0.setJoinOK(player1, false);
      player1.setDead(15010L);
      player0.isDead();
      player1.isJoinOK(player0, false);
      boolean boolean0 = player0.isJoinOK(player1, true);
      assertEquals(15010L, player1.getTimeOfDeath());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Player player0 = new Player(2147340491, "]ySCt)sk,,c9E=", ">dd*_eRsm", 2147340491);
      player0.setJoinOK(player0, false);
      player0.setDead((long) 2147340491);
      boolean boolean0 = player0.isDead();
      assertEquals(2147340491L, player0.getTimeOfDeath());
      assertTrue(boolean0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Player player0 = new Player(0, "b", "b", 1);
      Player player1 = new Player(1627, "b", 1553);
      player0.setJoinOK(player1, true);
      assertEquals(0L, player1.getTimeOfDeath());
      assertEquals(10.0F, player1.getX(), 0.01F);
      assertFalse(player1.isDead());
      assertEquals("0.0.0.0", player1.getIP());
      assertEquals(1553, player1.getPictureId());
      assertEquals(1, player1.getStrength());
      assertEquals(0.0F, player1.getY(), 0.01F);
      assertTrue(player1.isConnected());
      assertEquals(1, player0.getPictureId());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = (-66);
      Player player0 = new Player((-66), "$?R#A)N", "$?R#A)N", 248, 1);
      player0.setDead((-2001L), true);
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.022248870579868
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Player player0 = new Player(1946, "Nl]bis|9w", "", (-2419), 14135);
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals("Nl]bis|9w", player0.getIP());
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
      assertEquals(14135, int0);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals((-2419), player0.getPictureId());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.5063874375065844
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Player player0 = new Player((-1265), "", 1275);
      Player player1 = new Player(1275, "m*XQnY}k/!z_vxBl", (-2906));
      player0.head = (Party) player1;
      player0.gangStrength();
      player0.gangStrength();
      int int0 = player0.gangStrength();
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertEquals(0L, player0.getTimeOfDeath());
      assertFalse(player0.isDead());
      assertEquals(2, int0);
      assertEquals("0.0.0.0", player0.getIP());
      assertTrue(player0.isConnected());
      assertEquals(1275, player0.getPictureId());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=3.056474781190351
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Player player0 = new Player((-449));
      Player player1 = new Player((short)4919, "-M^S,", 2287);
      byte[] byteArray0 = player1.pack();
      player0.getY();
      byte[] byteArray1 = player1.pack();
      player1.setZ(2287);
      player1.getY();
      player1.setY((-1866.12F));
      player0.getIP();
      player0.unpack(byteArray1);
      Player player2 = new Player();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Player player3 = new Player(3770, "-M^S,", "+pX[v$N)Rl|", 3663);
      player3.unpack(byteArray1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.markSupported();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      player0.unpack(dataInputStream0);
      assertEquals((-1866.12F), player1.getY(), 0.01F);
      
      float float0 = player2.getZ();
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Player player0 = new Player((-4676), (String) null, (-4676));
      byte[] byteArray0 = new byte[9];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      player0.getName();
      player0.getIP();
      player0.gangStrength();
      player0.getZ();
      String string0 = "";
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "0.0.0.0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Player player0 = new Player((-2066), "module.ModuleBrowserDialog$ModuleFilter", (-2066));
      player0.pack();
      File file0 = MockFile.createTempFile("module.ModuleBrowserDialog$ModuleFilter", "module.ModuleBrowserDialog$ModuleFilter");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      player0.getName();
      String string0 = player0.getIP();
      assertEquals("0.0.0.0", string0);
      
      int int0 = player0.gangStrength();
      float float0 = player0.getZ();
      assertEquals(0.0F, float0, 0.01F);
      
      File file1 = MockFile.createTempFile("0.0.0.0", "DVq[BZ4mT=:<%Td$!");
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(file1);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      int int1 = player0.getStrength();
      assertEquals(10.0F, player0.getX(), 0.01F);
      assertFalse(player0.isDead());
      assertEquals((-2066), player0.getPictureId());
      assertEquals(1, int1);
      assertTrue(int1 == int0);
      assertEquals(0.0F, player0.getY(), 0.01F);
      assertTrue(player0.isConnected());
  }
}
