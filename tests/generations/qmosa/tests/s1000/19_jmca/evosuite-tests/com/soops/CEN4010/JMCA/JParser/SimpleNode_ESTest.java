/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 23:40:18 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.6691825225299436
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(315);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode1.setIdentifier("?");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      CharBuffer.wrap((CharSequence) "?");
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "<");
      simpleNode1.dump("?", stringWriter1);
      JavaParser javaParser0 = new JavaParser("?");
      SimpleNode simpleNode2 = new SimpleNode(315);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode2.identifiers = arrayList0;
      simpleNode2.jjtAddChild(simpleNode1, 0);
      simpleNode1.dump((String) null, stringWriter1);
      UnaryOperator.identity();
      UnaryOperator.identity();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3097558619082146
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 255;
      SimpleNode simpleNode0 = new SimpleNode(255);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      Node node0 = simpleNode1.parent;
      simpleNode1.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.setIdentifier("}");
      simpleNode1.dump("}", stringWriter0);
      int int1 = 2361;
      simpleNode1.jjtAddChild(simpleNode0, 2361);
      simpleNode1.jjtGetNumChildren();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = null;
      nodeArray0[1] = (Node) simpleNode0;
      StringReader stringReader0 = new StringReader("}");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      Node node1 = javaParser0.currNode;
      nodeArray0[2] = null;
      nodeArray0[3] = (Node) simpleNode1;
      simpleNode1.children = nodeArray0;
      UnaryOperator.identity();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2362);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(2787);
      SimpleNode simpleNode1 = new SimpleNode(2787);
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode1.jjtAddChild(node0, 35);
      int int0 = 49;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6425990774875225
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(50);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode0, 50);
      StringWriter stringWriter0 = new StringWriter(50);
      String string0 = ":";
      simpleNode0.setIdentifier(":");
      // Undeclared exception!
      simpleNode0.dump(":", stringWriter0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(9);
      simpleNode0.setIdentifier("<");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "assGer=");
      stringWriter0.append((CharSequence) "assGer=");
      simpleNode0.dump(";W1(&YluII_RTS@im?u", stringWriter1);
      simpleNode0.toString();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream1);
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
      PipedOutputStream pipedOutputStream3 = new PipedOutputStream();
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier(">>");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">>", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(dataInputStream0, (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.0408398374232388
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(255);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      SimpleNode simpleNode2 = new SimpleNode(0);
      Node node0 = simpleNode2.parent;
      simpleNode2.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(0);
      char[] charArray0 = new char[6];
      charArray0[0] = '|';
      charArray0[1] = '2';
      charArray0[2] = ')';
      charArray0[3] = 'O';
      charArray0[4] = 'D';
      charArray0[5] = '>';
      stringWriter0.write(charArray0);
      simpleNode2.dump(":", stringWriter0);
      simpleNode2.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode1, 255);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild(simpleNode2, 256);
      simpleNode1.jjtAddChild((Node) null, 256);
      assertEquals(257, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(255);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.jjtAddChild(simpleNode1, 0);
      assertEquals(0, simpleNode1.jjtGetNumChildren());
      
      simpleNode1.jjtAddChild(simpleNode0, 0);
      simpleNode2.jjtGetChild(0);
      assertEquals(1, simpleNode2.jjtGetNumChildren());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.156750971308615
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(10);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.jjtGetNumChildren();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "assert");
      String string0 = "{";
      simpleNode0.setIdentifier("{");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter(10);
      simpleNode0.dump(":", stringWriter0);
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.9836002995230935
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = 9;
      SimpleNode simpleNode0 = new SimpleNode(9);
      SimpleNode simpleNode1 = new SimpleNode(9);
      Node node0 = simpleNode1.parent;
      simpleNode0.jjtAddChild(simpleNode1, 9);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("assGer=", stringWriter0);
      simpleNode0.jjtAddChild(simpleNode1, 2361);
      simpleNode1.jjtGetNumChildren();
      UnaryOperator.identity();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.jjtGetChild(2361);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedInputStream pipedInputStream1 = new PipedInputStream(9);
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      PipedOutputStream pipedOutputStream2 = null;
      try {
        pipedOutputStream2 = new PipedOutputStream(pipedInputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9943536917623688
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 255;
      SimpleNode simpleNode0 = new SimpleNode(255);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode1 = new SimpleNode(0);
      Node node0 = simpleNode1.parent;
      simpleNode1.jjtAddChild((Node) null, 0);
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "P;t]0aAGW";
      simpleNode1.dump("P;t]0aAGW", stringWriter0);
      int int1 = 2361;
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0114042647073518
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.jjtGetNumChildren();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode2 = new SimpleNode((-1427));
      SimpleNode simpleNode3 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      simpleNode3.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtAddChild(simpleNode0, 3585);
      simpleNode3.jjtGetNumChildren();
      simpleNode1.jjtAddChild((Node) null, 0);
      assertEquals(3586, simpleNode1.jjtGetNumChildren());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.5660857389596289
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.wrap((CharSequence) "");
      StringBuffer stringBuffer0 = new StringBuffer(84);
      StringBuffer stringBuffer1 = new StringBuffer("");
      stringWriter0.append((CharSequence) stringBuffer0);
      StringReader stringReader0 = new StringReader(" kW?{@c,y0Vt&dtB@p");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.lengthOfMatch = 84;
      javaParserTokenManager1.jjmatchedKind = Integer.MIN_VALUE;
      javaParserTokenManager1.defaultLexState = 84;
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.jjmatchedKind = 84;
      simpleNode0.dump("NormalAnnotation", stringWriter0);
      assertEquals("<ForInit>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.allocate(84);
      stringWriter0.getBuffer();
      stringWriter0.getBuffer();
      StringReader stringReader0 = new StringReader(" kW?{@c,y0Vt&dtB@p");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.lengthOfMatch = 84;
      javaParserTokenManager1.jjmatchedKind = Integer.MIN_VALUE;
      javaParserTokenManager1.defaultLexState = 84;
      javaParserTokenManager0.TokenLexicalActions(javaParser0.token);
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.jjmatchedKind = 84;
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3046);
      SimpleNode simpleNode1 = new SimpleNode(3046);
      simpleNode0.jjtAddChild(simpleNode1, 3046);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('Z');
      StringReader stringReader0 = new StringReader("<=");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 67, (-1), 87);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      simpleNode0.parser = javaParser0;
      SimpleNode simpleNode2 = new SimpleNode(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-42);
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte) (-1);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, (byte) (-42), 0);
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager(javaCharStream1, 0);
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      stringWriter1.append('Z');
      simpleNode2.jjtAddChild(simpleNode1, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1751));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1751
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      simpleNode0.jjtGetNumChildren();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      SimpleNode simpleNode1 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode1.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      SimpleNode simpleNode2 = new SimpleNode((-1427));
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtAddChild(simpleNode0, 3553);
      assertEquals(3554, simpleNode1.jjtGetNumChildren());
      
      int int0 = simpleNode2.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.8310204811135162
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "Y+sB0?Z";
      StringReader stringReader0 = new StringReader("Y+sB0?Z");
      char[] charArray0 = new char[3];
      charArray0[0] = 'V';
      stringReader0.ready();
      StringReader stringReader1 = new StringReader("Y+sB0?Z");
      JavaParser javaParser0 = new JavaParser(stringReader1);
      try { 
        javaParser0.Expression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 7.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6428579130907905
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.wrap((CharSequence) "");
      StringBuffer stringBuffer0 = new StringBuffer("");
      StringReader stringReader0 = new StringReader(" kW?{@c,y0Vt&dtB@p");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.lengthOfMatch = 84;
      javaParserTokenManager1.jjmatchedKind = Integer.MIN_VALUE;
      javaParserTokenManager1.defaultLexState = 84;
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.jjmatchedKind = 84;
      simpleNode0.dump("NormalAnnotation", stringWriter0);
      assertEquals("<ForInit>\n  <identifier></identifier>\n</ForInit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString();
      assertEquals("ForInit : ", string0);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.7892773734611849
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      simpleNode0.setIdentifier("");
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.wrap((CharSequence) "");
      StringBuffer stringBuffer0 = new StringBuffer(84);
      stringWriter0.write("");
      StringBuffer stringBuffer1 = new StringBuffer("");
      stringWriter0.append((CharSequence) stringBuffer0);
      StringReader stringReader0 = new StringReader(" kW?{@c,y0Vt&dtB@p");
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      javaParserTokenManager0.jjround = 84;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.lengthOfMatch = 84;
      javaParserTokenManager1.jjmatchedKind = Integer.MIN_VALUE;
      javaParserTokenManager1.defaultLexState = 84;
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.jjmatchedKind = 84;
      simpleNode0.dump("NormalAnnotation", stringWriter0);
      assertEquals("<ForInit>\n  <identifier></identifier>\n</ForInit>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString("H");
      assertEquals("HForInit : ", string0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.jjtGetNumChildren();
      StringReader stringReader0 = new StringReader("\"&=\"");
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 30);
      simpleNode0.jjtGetNumChildren();
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      simpleNode0.jjtGetChild(30);
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator0.compose((Function<? super InputStream, ? extends String>) function0);
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator2.compose((Function<? super String, ? extends String>) unaryOperator0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      UnaryOperator.identity();
      arrayList0.replaceAll(unaryOperator1);
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "</");
      assertTrue(boolean1 == boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.7478680974667573
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode0;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      simpleNode0.id = 4050;
      simpleNode0.children = nodeArray0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtOpen();
      simpleNode0.jjtSetParent(simpleNode0);
      simpleNode0.jjtAddChild(simpleNode0, 1);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtGetNumChildren();
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      String string0 = ":";
      UnaryOperator.identity();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      Function.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      unaryOperator1.compose((Function<? super Object, ? extends String>) function0);
      unaryOperator1.compose((Function<? super String, ? extends String>) unaryOperator0);
      UnaryOperator.identity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, 2361);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":");
      PipedInputStream pipedInputStream0 = new PipedInputStream(114);
      JavaParser javaParser0 = new JavaParser(pipedInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 256);
      SimpleNode simpleNode1 = (SimpleNode)javaParser0.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-61300178));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("i");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 3240);
      simpleNode0.jjtAddChild(simpleNode0, 1803);
      assertEquals(1804, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavaParser javaParser0 = new JavaParser("|`+6");
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2184));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("\"&=\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      stringReader0.read();
      StringReader stringReader1 = new StringReader("");
      stringWriter0.append('X');
      StringReader stringReader2 = new StringReader("7u");
      stringReader2.ready();
      stringReader2.close();
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-2610));
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        simpleNode0.dump("\"&=\"", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2610
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      StringReader stringReader0 = new StringReader("");
      CharBuffer.allocate(107);
      int int0 = 0;
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) ">=", 11, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3805062184775959
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">=");
      simpleNode0.setIdentifier(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("", stringWriter0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      SimpleNode simpleNode0 = new SimpleNode((-1));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      UnaryOperator.identity();
      SimpleNode simpleNode0 = new SimpleNode(2361);
      // Undeclared exception!
      try { 
        simpleNode0.toString(":");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2361
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = 255;
      StringReader stringReader0 = new StringReader("EnS:I'KWhjt|=igrX[");
      SimpleNode simpleNode0 = new SimpleNode(255);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode1 = new SimpleNode(255);
      SimpleNode simpleNode2 = new SimpleNode(255);
      SimpleNode simpleNode3 = new SimpleNode(255);
      simpleNode1.jjtSetParent(simpleNode2);
      SimpleNode simpleNode4 = (SimpleNode)simpleNode1.parent;
      simpleNode3.jjtAddChild(simpleNode1, 255);
      Node node0 = simpleNode3.jjtGetChild(255);
      simpleNode2.jjtAddChild(node0, 255);
      // Undeclared exception!
      try { 
        simpleNode2.jjtGetChild((-985));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -985
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":");
      SimpleNode simpleNode0 = new SimpleNode(64);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.8143075196071254
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("\"&=\"");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("7u");
      stringReader2.ready();
      StringReader stringReader3 = new StringReader("\"&=\"");
      javaParser0.Expression();
      stringReader3.close();
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-593));
      simpleNode0.dump("", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.45056120886630463
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      CharBuffer.wrap((CharSequence) "");
      StringWriter stringWriter1 = new StringWriter();
      StringBuffer stringBuffer0 = new StringBuffer(84);
      StringBuffer stringBuffer1 = new StringBuffer("");
      stringWriter1.append((CharSequence) stringBuffer0);
      StringReader stringReader0 = new StringReader(" kW?{@c,y0Vt&dtB@p");
      stringReader0.close();
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      JavaParserTokenManager javaParserTokenManager1 = new JavaParserTokenManager((JavaCharStream) null);
      javaParserTokenManager1.jjmatchedKind = Integer.MIN_VALUE;
      javaParserTokenManager1.defaultLexState = 84;
      javaParserTokenManager1.MoreLexicalActions();
      javaParserTokenManager0.jjmatchedKind = 1504;
      JavaParser javaParser1 = new JavaParser(javaParserTokenManager1);
      SimpleNode simpleNode1 = new SimpleNode(84);
      simpleNode0.dump("", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }
}
