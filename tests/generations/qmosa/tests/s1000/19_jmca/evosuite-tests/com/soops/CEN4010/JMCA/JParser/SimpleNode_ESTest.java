/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:37:44 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.7488320958430319
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      Node[] nodeArray1 = new Node[0];
      simpleNode0.children = nodeArray1;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("MemberValueArrayInitializer", stringWriter0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("MemberValueArrayInitializer");
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.3367764046147577
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      simpleNode0.setIdentifier("");
      SimpleNode simpleNode1 = new SimpleNode(18);
      simpleNode0.jjtAddChild(simpleNode1, 18);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LDeS");
      simpleNode1.setIdentifier("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      simpleNode0.dump(")", stringWriter2);
      SimpleNode simpleNode2 = new SimpleNode(1);
      SimpleNode simpleNode3 = new SimpleNode(1894);
      simpleNode1.toString();
      ArrayList<String> arrayList0 = simpleNode1.identifiers;
      arrayList0.clear();
      arrayList0.add(")");
      ArrayList<String> arrayList1 = simpleNode3.identifiers;
      simpleNode0.setIdentifier("LDeS");
      assertEquals(19, simpleNode0.jjtGetNumChildren());
      
      stringWriter2.write(1);
      StringWriter stringWriter3 = new StringWriter();
      simpleNode2.dump((String) null, stringWriter2);
      simpleNode1.dump(">>", stringWriter3);
      int int0 = simpleNode3.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("{");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(">");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      simpleNode0.identifiers = null;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte)52;
      byteArray0[5] = (byte)52;
      byteArray0[6] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "{";
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("{");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(">");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      simpleNode0.identifiers = null;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-87);
      byteArray0[4] = (byte) (-78);
      byteArray0[5] = (byte) (-78);
      byteArray0[6] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.toString("{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1148464942838232
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      String string0 = ">=";
      SimpleNode simpleNode1 = new SimpleNode(9);
      simpleNode1.setIdentifier(">=");
      Node[] nodeArray0 = new Node[1];
      simpleNode0.toString(">=");
      nodeArray0[0] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode((-3160));
      SimpleNode simpleNode3 = new SimpleNode(9);
      simpleNode3.id = 14;
      simpleNode3.toString();
      simpleNode3.children = nodeArray0;
      arrayList0.add("fe");
      simpleNode0.setIdentifier("J]#pi|Au=Ga+");
      ArrayList<String> arrayList1 = simpleNode2.identifiers;
      int int0 = 1259;
      simpleNode1.jjtAddChild(nodeArray0[0], 1259);
      simpleNode1.setIdentifier(">=ClassOrInterfaceBody");
      simpleNode1.identifiers = simpleNode0.identifiers;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "oNQ28ElK1C0F";
      stringWriter0.write("ClassOrInterfaceBody");
      stringWriter0.write(1259);
      simpleNode0.children = simpleNode3.children;
      // Undeclared exception!
      simpleNode1.dump("oNQ28ElK1C0F", stringWriter0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.1569877743224173
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(62);
      simpleNode0.toString();
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      simpleNode0.toString("pj~!#`O5;ze]kHA4=1");
      simpleNode0.jjtAddChild((Node) null, 66);
      simpleNode0.jjtGetChild(0);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1952982234));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1952982234
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2072786321248754
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(46);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">>");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString(">");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      simpleNode0.dump("&", stringWriter0);
      assertEquals("<EqualityExpression>\n  <identifier>*gt</identifier>\n  <identifier>*rshft</identifier>\n</EqualityExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.children = null;
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.identifiers = null;
      String string0 = "^";
      // Undeclared exception!
      try { 
        simpleNode1.setIdentifier("^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.2305886554348988
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.setIdentifier(">=");
      StringReader stringReader0 = new StringReader("++");
      StringReader stringReader1 = new StringReader("++");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-3247), 2158);
      javaCharStream0.ReadByte();
      JavaParser javaParser0 = new JavaParser(stringReader1);
      stringReader1.ready();
      JavaCharStream javaCharStream1 = javaParser0.jj_input_stream;
      simpleNode1.setIdentifier("&&");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("*gt", stringWriter0);
      simpleNode1.dump("*gt", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*ge</identifier>\n  <identifier>*amp</identifier>\n</PackageDeclaration>\n<PackageDeclaration>\n  <identifier>*ge</identifier>\n  <identifier>*amp</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      simpleNode1.toString("Invalid escap7charactr at ine ");
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode0.toString("hBslI?%sSL5?5");
      simpleNode2.toString();
      simpleNode0.toString("&&");
      simpleNode0.parent = (Node) simpleNode1;
      String string0 = simpleNode0.toString((String) null);
      assertEquals("nullCompilationUnit", string0);
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.2072786321248754
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(46);
      simpleNode0.setIdentifier(">");
      simpleNode0.setIdentifier(">>");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">>");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString(">");
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      stringWriter0.write("InstanceOfExpression");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&");
      simpleNode0.dump("&", stringWriter0);
      assertEquals("InstanceOfExpression<EqualityExpression>\n  <identifier>*gt</identifier>\n  <identifier>*rshft</identifier>\n</EqualityExpression>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.002663334987299
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 1;
      SimpleNode simpleNode0 = new SimpleNode(1);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.setIdentifier(">=");
      Object object0 = new Object();
      Predicate.isEqual((Object) simpleNode1);
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      stringWriter0.write(1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.2018850110876715
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.setIdentifier("`D8{cJ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte) (-36);
      byteArray0[4] = (byte)18;
      byteArray0[5] = (byte) (-88);
      byteArray0[6] = (byte)10;
      byteArray0[7] = (byte)115;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Node[] nodeArray0 = new Node[1];
      simpleNode1.parent = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      nodeArray0[0] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      simpleNode1.setIdentifier("*lshft");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      simpleNode1.dump("*lshft", stringWriter0);
      simpleNode0.dump("LU", stringWriter0);
      simpleNode1.toString("`D8{cJ");
      Node node0 = simpleNode1.jjtGetParent();
      assertNotSame(node0, simpleNode1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.1697982476322353
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode0.setIdentifier("<=");
      Object object0 = new Object();
      simpleNode1.toString("nLzJ");
      Predicate.isEqual((Object) simpleNode1);
      simpleNode1.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      stringWriter0.write(1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0, 1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.8090776470490244
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[9];
      charArray0[0] = '>';
      charArray0[1] = 'E';
      charArray0[2] = 'a';
      charArray0[3] = ':';
      charArray0[4] = 'F';
      charArray0[6] = '<';
      charArray0[6] = '>';
      charArray0[7] = '>';
      stringWriter0.write(4637);
      charArray0[0] = ':';
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("<");
      StringWriter stringWriter2 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter3 = stringWriter2.append('>');
      stringWriter2.write((String) null);
      stringWriter1.write(charArray0);
      StringWriter stringWriter4 = new StringWriter();
      stringWriter1.write((int) '\u0000');
      StringWriter stringWriter5 = new StringWriter('a');
      StringWriter stringWriter6 = new StringWriter();
      stringWriter6.append((CharSequence) "<");
      stringWriter2.write("*lshft");
      stringWriter6.write((int) '>');
      simpleNode0.dump("*lshft", stringWriter0);
      StringWriter stringWriter7 = new StringWriter();
      assertFalse(stringWriter7.equals((Object)stringWriter3));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0676032882216056
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[9];
      charArray0[1] = 'E';
      charArray0[2] = 'a';
      charArray0[3] = ':';
      charArray0[4] = 'F';
      charArray0[6] = '8';
      charArray0[6] = '\u0000';
      stringWriter0.write(4637);
      charArray0[3] = ':';
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(0);
      simpleNode0.setIdentifier("}");
      StringWriter stringWriter2 = new StringWriter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter2.write((String) null);
      stringWriter1.write(charArray0);
      StringWriter stringWriter4 = new StringWriter();
      stringWriter1.write((int) '\u0000');
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = new StringWriter();
      StringWriter stringWriter7 = stringWriter6.append((CharSequence) "}");
      stringWriter7.append((CharSequence) "}");
      stringWriter6.close();
      stringWriter7.write("}");
      stringWriter2.write("*hft");
      stringWriter7.write(0);
      simpleNode0.dump("}", stringWriter1);
      StringWriter stringWriter8 = new StringWriter();
      assertFalse(stringWriter8.equals((Object)stringWriter4));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.58208024436458
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("{");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)52;
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)52;
      byteArray0[3] = (byte) (-87);
      byteArray0[0] = (byte) (-78);
      byteArray0[5] = (byte) (-78);
      byteArray0[6] = (byte)52;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " ");
      simpleNode0.dump(">", stringWriter0);
      assertEquals("<PackageDeclaration>\n</PackageDeclaration>\n", stringWriter0.toString());
      
      String string0 = simpleNode0.toString(">");
      assertEquals(">PackageDeclaration : {", string0);
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.0524688301563836
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.identifiers = arrayList0;
      SimpleNode simpleNode1 = new SimpleNode(9);
      simpleNode1.setIdentifier(">=");
      Node[] nodeArray0 = new Node[1];
      simpleNode0.toString(">=");
      nodeArray0[0] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump(">=", stringWriter0);
      SimpleNode simpleNode2 = new SimpleNode((-3160));
      SimpleNode simpleNode3 = new SimpleNode(72);
      simpleNode3.toString();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      arrayList1.add(">=ClassOrInterfaceBody");
      simpleNode3.setIdentifier("<<");
      ArrayList<String> arrayList2 = simpleNode1.identifiers;
      simpleNode3.toString("LabeledStatement");
      SimpleNode simpleNode4 = new SimpleNode(14);
      simpleNode3.setIdentifier("m9P<");
      simpleNode3.dump("m9P<", stringWriter0);
      stringWriter0.write("J]#pi|Au=Ga+");
      stringWriter0.write((-1953031963));
      simpleNode4.dump("<<", stringWriter0);
      assertEquals("<ClassOrInterfaceBody><EnumBody>\n  <identifier>*ge</identifier>\n</EnumBody>\n</ClassOrInterfaceBody>\n<LabeledStatement>\n  <identifier>*lshft</identifier>\n  <identifier>m9P<</identifier>\n</LabeledStatement>\nJ]#pi|Au=Ga+\u18E5", stringWriter0.toString());
      
      StringWriter stringWriter1 = new StringWriter();
      simpleNode0.toString();
      String string0 = simpleNode1.toString("*lshft");
      assertEquals("*lshftEnumBody : >=", string0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2018850110876715
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      SimpleNode simpleNode1 = new SimpleNode(1);
      simpleNode1.setIdentifier("`D8{cJ");
      StringReader stringReader0 = new StringReader("LU");
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) simpleNode1;
      simpleNode0.children = nodeArray0;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, (-1089));
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      simpleNode1.setIdentifier("vAn");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("LU", stringWriter0);
      stringWriter0.write((-1089));
      simpleNode0.dump("TypeParameter", stringWriter0);
      simpleNode1.jjtGetParent();
      Node node0 = simpleNode0.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild(node0, (-117644756));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.4570954642719265
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 1;
      SimpleNode simpleNode0 = new SimpleNode(1);
      Node node0 = simpleNode0.parent;
      simpleNode0.jjtAddChild((Node) null, 1);
      simpleNode0.toString(")");
      simpleNode0.toString();
      simpleNode0.toString(")PackageDeclaration");
      simpleNode0.jjtGetNumChildren();
      simpleNode0.setIdentifier(")");
      simpleNode0.toString();
      simpleNode0.toString();
      SimpleNode simpleNode1 = new SimpleNode(592);
      simpleNode1.setIdentifier("goto");
      simpleNode1.jjtGetParent();
      simpleNode0.jjtAddChild((Node) null, 2);
      SystemInUtil.addInputLine("PackageDeclaration : )");
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1792739018));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1792739018
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-17));
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaParser javaParser0 = new JavaParser(mockFileInputStream0);
      SimpleNode simpleNode1 = new SimpleNode((-17));
      simpleNode0.parent = (Node) simpleNode1;
      Node node0 = simpleNode0.jjtGetParent();
      assertNotSame(simpleNode0, node0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.8120939218445867
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(1);
      simpleNode0.setIdentifier("-7Kg*S");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      simpleNode0.setIdentifier(";");
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter1 = new StringWriter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(Dm@VdidB*pQA");
      simpleNode0.dump("-7Kg*S", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>-7Kg*S</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8282495135936656
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 10, 10);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      stringReader0.mark(10);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      JavaParser javaParser1 = new JavaParser("Cj9eE2+5Cy[_56");
      Node node0 = javaParser0.currNode;
      JavaParser javaParser2 = new JavaParser(javaParserTokenManager0);
      JavaParser javaParser3 = new JavaParser("c(p LAzj@I;");
      Node node1 = javaParser3.currNode;
      StringWriter stringWriter1 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1));
      simpleNode0.dump("{", stringWriter0);
      StringReader stringReader1 = new StringReader("Cj9eE2+5Cy[_56");
      simpleNode0.jjtAddChild((Node) null, 10);
      JavaParser javaParser4 = new JavaParser(stringReader1);
      JavaParser.main(javaParserTokenManager0.jjstrLiteralImages);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      simpleNode0.parser = javaParser3;
      javaCharStream0.GetImage();
      simpleNode0.jjtAddChild((Node) null, 668);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-1051));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1051
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader(" ");
      stringReader0.reset();
      StringReader stringReader1 = new StringReader(" ");
      String[] stringArray0 = new String[5];
      stringArray0[0] = " ";
      stringArray0[1] = ">";
      stringArray0[2] = ">";
      stringArray0[3] = " ";
      stringArray0[0] = ">";
      JavaParser.main(stringArray0);
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1050));
      SimpleNode simpleNode1 = new SimpleNode(1474);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      int int0 = simpleNode0.jjtGetNumChildren();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(1674);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump((String) null, stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.087302357535235
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      String string0 = "=";
      simpleNode0.setIdentifier("=");
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("Modifiers : =", stringWriter0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      byte[] byteArray0 = null;
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 3);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(bufferedInputStream0);
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = 'G';
      charArray0[2] = 'L';
      charArray0[3] = '`';
      charArray0[4] = 'J';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(18);
      stringWriter1.flush();
      stringWriter0.flush();
      StringWriter stringWriter3 = new StringWriter('`');
      stringWriter1.write(charArray0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add(" ");
      arrayList0.add("&");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      stringWriter1.flush();
      stringWriter2.write("4!>~@MS|LK_");
      stringWriter0.write((-1));
      stringWriter1.write(charArray0);
      simpleNode0.dump(",UnvG#e9J *nusjJ;,", stringWriter1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(18);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.6061920506332319
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(32);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[5];
      StringReader stringReader0 = new StringReader("G8~RNB&a");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 32, 32);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      StringBuffer stringBuffer0 = javaParserTokenManager0.image;
      stringWriter1.append((CharSequence) null);
      charArray0[0] = '.';
      charArray0[1] = 'G';
      charArray0[2] = 'L';
      charArray0[3] = '`';
      charArray0[4] = 'J';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter2.write(32);
      stringWriter1.flush();
      stringWriter0.flush();
      StringWriter stringWriter3 = new StringWriter('`');
      stringWriter1.write(charArray0);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      stringWriter1.flush();
      stringWriter0.write((-1));
      stringWriter1.write(charArray0);
      simpleNode0.dump(",UnvG#e9J *nusjJ;,", stringWriter1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(32);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(18);
      StringWriter stringWriter0 = new StringWriter(18);
      StringWriter stringWriter1 = new StringWriter();
      char[] charArray0 = new char[5];
      charArray0[0] = '.';
      charArray0[1] = 'G';
      charArray0[2] = 'L';
      charArray0[3] = '`';
      charArray0[4] = 'J';
      stringWriter1.write(charArray0);
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.write("9$KsF)u\"sp");
      stringWriter2.write(18);
      stringWriter1.flush();
      stringWriter0.flush();
      StringWriter stringWriter3 = new StringWriter('`');
      stringWriter1.write(charArray0);
      StringReader stringReader0 = new StringReader("9$KsF)u\"sp");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("&");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      stringWriter2.write("4!>~@MS|LK_");
      stringWriter0.write((-1));
      stringWriter1.write(charArray0);
      simpleNode0.dump(",UnvG#e9J *nusjJ;,", stringWriter1);
      PipedInputStream pipedInputStream0 = new PipedInputStream(18);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-602));
      // Undeclared exception!
      try { 
        simpleNode0.toString("Modifiers");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -602
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.576085836981849
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("Hc");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 1571);
      JJTJavaParserState jJTJavaParserState0 = javaParser0.jjtree;
      javaCharStream0.ExpandBuff(false);
      javaParser0.EqualityExpression();
      Node node0 = jJTJavaParserState0.popNode();
      Node node1 = node0.jjtGetChild(0);
      assertEquals(1, node1.jjtGetNumChildren());
      assertNotNull(node1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = (-117644756);
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-117644756));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.1476926351053998
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>(0);
      simpleNode0.identifiers = arrayList0;
      SimpleNode simpleNode1 = new SimpleNode(0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      SimpleNode simpleNode2 = new SimpleNode((-1791095628));
      simpleNode2.jjtAddChild(simpleNode0, 3142);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1791095628));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w52kE,^ozxx5/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w52kE,^ozxx5/");
      FileSystemHandling fileSystemHandling7 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(b?1H)<EJ$Fq");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode(442);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild((-995));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = 0;
      SimpleNode simpleNode0 = new SimpleNode(0);
      ArrayList<String> arrayList0 = new ArrayList<String>(0);
      simpleNode0.identifiers = arrayList0;
      SimpleNode simpleNode1 = new SimpleNode(0);
      byte[] byteArray0 = new byte[4];
      arrayList0.add("\"Nc*' gSrm0*+");
      arrayList0.add("_[64+3KmN~$^6T");
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte)0;
      simpleNode0.jjtAddChild(simpleNode0, 3142);
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild(simpleNode1, (-1791095609));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1791095609
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w52kE,^ozxx5/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w52kE,^ozxx5/");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(b?1H)<EJ$Fq");
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-1968670786));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1968670786
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-2184));
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode((-21));
      String string0 = "AGD~mRx,PW7;";
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        simpleNode0.dump("AGD~mRx,PW7;", stringWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode((byte)92);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      simpleNode0.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      simpleNode0.toString("w52kE,^ozxx5/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w52kE,^ozxx5/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "w52kE,^ozxx5/");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.toString();
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling fileSystemHandling4 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling5 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling fileSystemHandling6 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "$Ac;T]Do&IH,! ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(b?1H)<EJ$Fq");
      StringWriter stringWriter0 = new StringWriter();
      StringReader stringReader0 = new StringReader("i4:");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, 47);
      Node node0 = simpleNode0.jjtGetParent();
      assertNull(node0);
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.43570606742266
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      StringWriter stringWriter0 = new StringWriter();
      int int0 = 57;
      SimpleNode simpleNode0 = new SimpleNode(57);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      StringReader stringReader0 = new StringReader("ForInit");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.ResultType();
      StringReader stringReader1 = new StringReader("fJ5tny");
      PipedInputStream pipedInputStream1 = null;
      PipedOutputStream pipedOutputStream0 = null;
      try {
        pipedOutputStream0 = new PipedOutputStream((PipedInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.6345319339779745
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringReader stringReader0 = new StringReader("{");
      stringReader0.ready();
      stringReader0.markSupported();
      JavaParser javaParser0 = new JavaParser("Cj9eE2+5Cy[_56");
      StringWriter stringWriter0 = new StringWriter();
      stringReader0.ready();
      stringReader0.read();
      stringReader0.ready();
      stringReader0.reset();
      StringReader stringReader1 = new StringReader("*&i)0TtS");
      JavaParser javaParser1 = new JavaParser(stringReader0);
      String[] stringArray0 = new String[0];
      JavaParser.main(stringArray0);
      byte[] byteArray0 = new byte[8];
  }
}
