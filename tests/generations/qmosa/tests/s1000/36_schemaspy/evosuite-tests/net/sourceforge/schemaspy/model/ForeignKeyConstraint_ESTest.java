/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 01:52:29 GMT 2019
 */

package net.sourceforge.schemaspy.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.ResourceBundle;
import java.util.function.Consumer;
import net.sourceforge.schemaspy.Config;
import net.sourceforge.schemaspy.model.ForeignKeyConstraint;
import net.sourceforge.schemaspy.model.Table;
import net.sourceforge.schemaspy.model.TableColumn;
import net.sourceforge.schemaspy.model.xml.SchemaMeta;
import net.sourceforge.schemaspy.model.xml.TableColumnMeta;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ForeignKeyConstraint_ESTest extends ForeignKeyConstraint_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5852414683530274
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/@e[m*B", 415, 415);
      List<TableColumn> list0 = foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.isRestrictDelete();
      ForeignKeyConstraint.toString(list0);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", (-2), (-1740));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "./)#$i3GgV2");
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "", (-18), (-2));
      foreignKeyConstraint2.isReal();
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint2.isReal();
      List<TableColumn> list1 = foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint2.getName();
      ForeignKeyConstraint.toString(list1);
      foreignKeyConstraint1.isReal();
      foreignKeyConstraint1.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.compareTo(foreignKeyConstraint2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = " referncxs ";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, " referncxs ", 0, (-46));
      foreignKeyConstraint0.getUpdateRule();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo((ForeignKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' to ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' to ");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":cairo");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " references ");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, (String) null, 621, 621);
      System.setCurrentTimeMillis((-20L));
      boolean boolean0 = foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getName();
      boolean boolean1 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean1 == boolean0);
      assertEquals(621, foreignKeyConstraint0.getDeleteRule());
      assertEquals(621, foreignKeyConstraint0.getUpdateRule());
      assertFalse(boolean1);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "Uq{1u(lrh\"BMwzH}t],";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Uq{1u(lrh\"BMwzH}t],", 8, (-26));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Uq{1u(lrh\"BMwzH}t],", 8, 3217);
      Integer integer0 = new Integer((-26));
      foreignKeyConstraint0.getDeleteRule();
      String string1 = "/@e[mV*B";
      Config config0 = new Config();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      String string2 = "";
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("", "UTF-8", "/@e[mV*B");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Meta directory \"\" must contain a file named \"/@e[mV*B.meta.xml\"
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.4827260708081504
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1234, 1234);
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getParentTable();
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "ku", 826, 3);
      foreignKeyConstraint1.isRestrictDelete();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getDeleteRuleName();
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint1.getDeleteRuleDescription();
      foreignKeyConstraint1.getParentTable();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Table table0 = null;
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
      linkedList0.add((TableColumn) null);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      linkedList0.sort(comparator0);
      // Undeclared exception!
      try { 
        ForeignKeyConstraint.toString((List<TableColumn>) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte) (-109);
      byteArray0[1] = (byte) (-60);
      byte byte0 = (byte) (-7);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[4] = (byte) (-7);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion of parent deletes child", 8, 2);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion of parent deletes child", 8, 3203);
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint0.getUpdateRule();
      foreignKeyConstraint0.getChildTable();
      Integer integer0 = new Integer((byte)0);
      // Undeclared exception!
      try { 
        foreignKeyConstraint1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "`");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eb{\" ]|X@Z.O");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "GDEUERRABLE", (-1783), 2);
      System.setCurrentTimeMillis((-1783));
      boolean boolean0 = foreignKeyConstraint0.isReal();
      boolean boolean1 = foreignKeyConstraint0.isImplied();
      assertFalse(boolean1 == boolean0);
      
      int int0 = foreignKeyConstraint0.getUpdateRule();
      assertEquals((-1783), int0);
      assertEquals(2, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "w", 8, 1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/36_schemaspy");
      foreignKeyConstraint0.getChildColumns();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Config config0 = new Config();
      LinkedList<TableColumn> linkedList0 = new LinkedList<TableColumn>();
      boolean boolean0 = foreignKeyConstraint0.isRestrictDelete();
      assertTrue(boolean0);
      
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      foreignKeyConstraint0.getChildTable();
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      assertEquals(8, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-53);
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)65;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte)23;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jQ,{VUK;{*dQQX4TcM1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "jQ,{VUK;{*dQQX4TcM1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1783));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "jQ,{VUK;{*dQQX4TcM1", (-1783), 0);
      foreignKeyConstraint0.isRestrictDelete();
      System.setCurrentTimeMillis(2108L);
      System.setCurrentTimeMillis(1842L);
      System.setCurrentTimeMillis(1842L);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.509458094643633
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-noimplie");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-noimplie");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1, 1);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Z/", (-256), 0);
      int int0 = foreignKeyConstraint1.compareTo(foreignKeyConstraint0);
      assertEquals(2, int0);
      
      foreignKeyConstraint1.getChildColumns();
      foreignKeyConstraint1.getDeleteRule();
      boolean boolean0 = foreignKeyConstraint0.isReal();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals("Restrict delete:\n Parent cannot be deleted if children exist", string0);
      
      String string1 = foreignKeyConstraint1.getDeleteRuleName();
      assertEquals("Cascade on delete", string1);
      
      foreignKeyConstraint1.getParentColumns();
      assertEquals((-256), foreignKeyConstraint1.getUpdateRule());
      
      String string2 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("R", string2);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.5982538439717047
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", 1, 1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Restrict delete", string0);
      
      String string1 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(1, foreignKeyConstraint0.getUpdateRule());
      assertEquals("R", string1);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-53);
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte)78;
      byteArray0[4] = (byte)43;
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte)3;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eb{\" ]|X@Z.O");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1783));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "eb{\" ]|X@Z.O", (-1783), 0);
      foreignKeyConstraint0.isNullOnDelete();
      System.setCurrentTimeMillis(2108L);
      System.setCurrentTimeMillis(1842L);
      System.setCurrentTimeMillis(1842L);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "Uq{1u(lrh\"BMwzH}t],";
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint((TableColumn) null, tableColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Uq{1u(lrh\"BMwzH}t],", 8, 2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Uq{1u(lrh\"BMwzH}t],";
      stringArray0[1] = "Uq{1u(lrh\"BMwzH}t],";
      stringArray0[2] = "Uq{1u(lrh\"BMwzH}t],";
      Config config0 = new Config(stringArray0);
      config0.setDriverPath("I.+k,)");
      String[] stringArray1 = new String[7];
      stringArray1[0] = "UTF-8";
      stringArray1[1] = "UTF-8";
      stringArray1[2] = "Uq{1u(lrh\"BMwzH}t],";
      stringArray1[3] = "I.+k,)";
      stringArray1[4] = ",^?wK@.-Wl-+9(.^";
      stringArray1[5] = "I.+k,)";
      stringArray1[6] = "UTF-8";
      Config config1 = new Config(stringArray1);
      config1.getDb();
      config0.setViewsEnabled(true);
      Config config2 = new Config(stringArray1);
      Config config3 = new Config(stringArray1);
      Config config4 = new Config(stringArray1);
      config1.getColumnDetails();
      config3.getRenderer();
      config3.getParam("kuR'{]Ub[n>F`E}mI$");
      String[] stringArray2 = new String[2];
      stringArray2[0] = "Uq{1u(lrh\"BMwzH}t],";
      stringArray2[1] = "";
      Config config5 = new Config(stringArray2);
      Config config6 = new Config();
      Config config7 = new Config();
      Config config8 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(8, foreignKeyConstraint0.getUpdateRule());
      assertEquals("N", string0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 196;
      Config config0 = Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 196, 196);
      foreignKeyConstraint0.isNullOnDelete();
      String[] stringArray0 = null;
      Config.getInstance();
      config0.getFont();
      // Undeclared exception!
      try { 
        Config.asProperties((ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Tt6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Tt6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Tt6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Tt6");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p,1wh[Q-*h'dU1");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte) (-32);
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte) (-5);
      byteArray0[4] = (byte) (-4);
      byteArray0[5] = (byte) (-5);
      byteArray0[6] = (byte)52;
      byteArray0[7] = (byte)35;
      byteArray0[8] = (byte)96;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Tt6");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Tt6", (-1783), 2);
      System.setCurrentTimeMillis((-1783));
      boolean boolean0 = foreignKeyConstraint0.isCascadeOnDelete();
      assertFalse(boolean0);
      assertEquals((-1783), foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete", foreignKeyConstraint0.getDeleteRuleName());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)12;
      byteArray0[3] = (byte)27;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "GDEUERRABLE");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "u9");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "eb{\" ]|X@Z.O");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      System.setCurrentTimeMillis((-1783));
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "eb{\" ]|X@Z.O", (-1783), 0);
      foreignKeyConstraint0.isCascadeOnDelete();
      System.setCurrentTimeMillis(2125L);
      System.setCurrentTimeMillis(1842L);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Config config0 = new Config();
      config0.isEvaluateAllEnabled();
      Config config1 = new Config();
      Config config2 = new Config();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      Config config3 = new Config(stringArray0);
      config3.getFontSize();
      config3.setMaxDbThreads((-59));
      Config config4 = new Config();
      Config config5 = new Config();
      Config config6 = Config.getInstance();
      config5.setRailsEnabled(false);
      Config.setInstance(config6);
      Config config7 = new Config();
      config7.isLogoEnabled();
      config3.setSchemaSpec("UTF-8");
      config4.setConnectionProperties("UTF-8");
      Config config8 = new Config();
      config6.setDriverPath("UTF-8");
      config2.setEncodeCommentsEnabled(true);
      Config config9 = new Config(stringArray0);
      config9.getPassword();
      config9.getDb();
      Config config10 = new Config(stringArray0);
      config9.isLowQuality();
      Config config11 = new Config(stringArray0);
      Config config12 = new Config(stringArray0);
      config1.setHasRoutines(true);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", (-59), (-59));
      foreignKeyConstraint0.isCascadeOnDelete();
      Config config13 = new Config();
      Config config14 = new Config();
      Config config15 = new Config();
      assertFalse(config15.equals((Object)config5));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = 196;
      Config config0 = Config.getInstance();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "UTF-8", 196, 196);
      foreignKeyConstraint0.isRestrictDelete();
      String[] stringArray0 = null;
      Config config1 = new Config();
      config0.getFont();
      // Undeclared exception!
      try { 
        Config.asProperties((ResourceBundle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.Config", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5350813079469845
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion of parent deletes child", 8, 2);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "t4&o3,W80FFjd", 46, 147);
      assertFalse(foreignKeyConstraint1.isNullOnDelete());
      
      boolean boolean0 = foreignKeyConstraint0.isNullOnDelete();
      assertTrue(boolean0);
      
      String string0 = foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals(8, foreignKeyConstraint0.getUpdateRule());
      assertEquals("Null on delete:\n Foreign key to parent set to NULL when parent deleted", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.7576378583071737
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-268), 0);
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getDeleteRuleDescription();
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7186438010844762
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "AMRNYC$e", 8, 8);
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "Efj", 1976, (-1229));
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "AMRNYC$e", 8, 8);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.7186438010844762
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "Cascade on elete:\n Deleion ofEparent deletes child";
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion ofEparent deletes child", 8, (-59));
      ForeignKeyConstraint foreignKeyConstraint1 = new ForeignKeyConstraint((Table) null, "", 3, 8);
      foreignKeyConstraint0.compareTo(foreignKeyConstraint1);
      ForeignKeyConstraint foreignKeyConstraint2 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion ofEparent deletes child", 8, 3203);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.compareTo(foreignKeyConstraint2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-268), 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals((-268), foreignKeyConstraint0.getUpdateRule());
      assertEquals("C", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "O-OlfeetxY6;", 12, 12);
      foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals(12, foreignKeyConstraint0.getUpdateRule());
      assertEquals(12, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Po3Ter,C");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Z/");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "-noimplied");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (-268), 0);
      String string0 = foreignKeyConstraint0.getDeleteRuleAlias();
      assertEquals("C", string0);
      assertEquals((-268), foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.2248830687452414
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-98);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion of parent deletes child", 78, (byte) (-109));
      Config.getInstance();
      foreignKeyConstraint0.getDeleteRuleDescription();
      assertEquals((-109), foreignKeyConstraint0.getDeleteRule());
      assertEquals(78, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.019761732828532
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)125;
      byteArray0[2] = (byte)125;
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "", (byte) (-21), 3);
      System.setCurrentTimeMillis((byte)125);
      foreignKeyConstraint0.isReal();
      foreignKeyConstraint0.getDeleteRuleAlias();
      foreignKeyConstraint0.getDeleteRuleName();
      foreignKeyConstraint0.getDeleteRuleDescription();
      System.setCurrentTimeMillis((byte)125);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte) (-109);
      byteArray0[2] = (byte) (-109);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-98);
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Cascade on elete:\n Deleion of parent deletes child", 8, 2);
      foreignKeyConstraint0.addParentColumn((TableColumn) null);
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("Cascade on elete:\n Deleion of parent deletes child", "", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"Cascade on elete:
         //  Deleion of parent deletes child\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      String string0 = "/@e[mV*B";
      Config config0 = new Config();
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "/@e[mV*B", 3862, 3862);
      foreignKeyConstraint0.getName();
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("UTF-8", "UTF-8", "UTF-8");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"UTF-8\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "AMYC$e", 8, 8);
      foreignKeyConstraint0.getDeleteRuleName();
      assertEquals(8, foreignKeyConstraint0.getUpdateRule());
      assertEquals(8, foreignKeyConstraint0.getDeleteRule());
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.2248830687452417
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Uq{1u(lrh\"BMwzH}t],", 8, 2);
      Config config0 = Config.getInstance();
      config0.isEvaluateAllEnabled();
      config0.setCatalog("Uq{1u(lrh\"BMwzH}t],");
      Config config1 = new Config();
      Config config2 = new Config();
      config2.setMaxDbThreads(2);
      Config.getInstance();
      Config config3 = new Config();
      Config.setInstance(config3);
      Config config4 = Config.getInstance();
      config4.isLogoEnabled();
      config4.setSchemaSpec("UTF-8");
      config2.setConnectionProperties("UTF-8");
      Config config5 = Config.getInstance();
      config3.setDriverPath("rAV");
      String[] stringArray0 = new String[5];
      config5.setMeta("UTF-8");
      stringArray0[0] = "UTF-8";
      stringArray0[1] = "UTF-8";
      stringArray0[2] = "UTF-8";
      stringArray0[3] = "UTF-8";
      config4.setDriverPath("UTF-8");
      stringArray0[4] = "UTF-8";
      config0.getDb();
      Config config6 = new Config(stringArray0);
      Config config7 = new Config(stringArray0);
      Config config8 = new Config(stringArray0);
      config4.getColumnDetails();
      config1.getRenderer();
      Config config9 = new Config(stringArray0);
      Config config10 = new Config();
      Config config11 = new Config();
      Config config12 = new Config();
      String string0 = foreignKeyConstraint0.getDeleteRuleName();
      assertEquals("Null on delete", string0);
      assertEquals(8, foreignKeyConstraint0.getUpdateRule());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "Uq{1u(lrh\"BMwzH}t],", 8, 2);
      Integer integer0 = new Integer(2);
      foreignKeyConstraint0.getDeleteRule();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData0 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      Connection connection1 = mock(Connection.class, new ViolatedAssumptionAnswer());
      DatabaseMetaData databaseMetaData1 = mock(DatabaseMetaData.class, new ViolatedAssumptionAnswer());
      SchemaMeta schemaMeta0 = null;
      try {
        schemaMeta0 = new SchemaMeta("/@e[mV*B", "Uq{1u(lrh\"BMwzH}t],", "PRIMARY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Specified meta file \"/@e[mV*B\" does not exist
         //
         verifyException("net.sourceforge.schemaspy.model.xml.SchemaMeta", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ForeignKeyConstraint foreignKeyConstraint0 = new ForeignKeyConstraint((Table) null, "OHfetnY60", (-33), (-33));
      foreignKeyConstraint0.getParentColumns();
      foreignKeyConstraint0.getChildColumns();
      foreignKeyConstraint0.addChildColumn((TableColumn) null);
      // Undeclared exception!
      try { 
        foreignKeyConstraint0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.ForeignKeyConstraint", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      tableColumn0.unlinkChildren();
      tableColumn0.unlinkChildren();
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      tableColumn0.setComments((String) null);
      tableColumn0.unlinkChildren();
      tableColumn0.setType((String) null);
      tableColumn0.unlinkParents();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      tableColumn1.setComments("/u_YfeWX0xa5?+KP");
      tableColumn1.setIsAutoUpdated(false);
      tableColumn1.setComments((String) null);
      TableColumnMeta tableColumnMeta2 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta2).getComments();
      doReturn((String) null).when(tableColumnMeta2).getDefaultValue();
      doReturn(0).when(tableColumnMeta2).getDigits();
      doReturn((String) null).when(tableColumnMeta2).getId();
      doReturn((String) null).when(tableColumnMeta2).getName();
      doReturn(0).when(tableColumnMeta2).getSize();
      doReturn((String) null).when(tableColumnMeta2).getType();
      doReturn(false).when(tableColumnMeta2).isAutoUpdated();
      doReturn(false).when(tableColumnMeta2).isNullable();
      tableColumn1.setType((String) null);
      TableColumn tableColumn2 = new TableColumn((Table) null, tableColumnMeta2);
      tableColumn2.setShortType("/u_YfeWX0xa5?+KP");
      tableColumn2.setIsAutoUpdated(false);
      tableColumn2.setIsAutoUpdated(false);
      tableColumn2.setShortType((String) null);
      tableColumn2.setComments((String) null);
      tableColumn2.setIsAutoUpdated(false);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn2, tableColumn2, (-2087), (-2087));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.053882356878545
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TableColumnMeta tableColumnMeta0 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta0).getComments();
      doReturn((String) null).when(tableColumnMeta0).getDefaultValue();
      doReturn(0).when(tableColumnMeta0).getDigits();
      doReturn((String) null).when(tableColumnMeta0).getId();
      doReturn((String) null).when(tableColumnMeta0).getName();
      doReturn(0).when(tableColumnMeta0).getSize();
      doReturn((String) null).when(tableColumnMeta0).getType();
      doReturn(false).when(tableColumnMeta0).isAutoUpdated();
      doReturn(false).when(tableColumnMeta0).isNullable();
      TableColumn tableColumn0 = new TableColumn((Table) null, tableColumnMeta0);
      TableColumnMeta tableColumnMeta1 = mock(TableColumnMeta.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(tableColumnMeta1).getComments();
      doReturn((String) null).when(tableColumnMeta1).getDefaultValue();
      doReturn(0).when(tableColumnMeta1).getDigits();
      doReturn((String) null).when(tableColumnMeta1).getId();
      doReturn((String) null).when(tableColumnMeta1).getName();
      doReturn(0).when(tableColumnMeta1).getSize();
      doReturn((String) null).when(tableColumnMeta1).getType();
      doReturn(false).when(tableColumnMeta1).isAutoUpdated();
      doReturn(false).when(tableColumnMeta1).isNullable();
      TableColumn tableColumn1 = new TableColumn((Table) null, tableColumnMeta1);
      ForeignKeyConstraint foreignKeyConstraint0 = null;
      try {
        foreignKeyConstraint0 = new ForeignKeyConstraint(tableColumn0, tableColumn1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.schemaspy.model.TableColumn", e);
      }
  }
}
