/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 04:19:28 GMT 2019
 */

package macaw.businessLayer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import macaw.businessLayer.DerivedVariable;
import macaw.businessLayer.OntologyTerm;
import macaw.businessLayer.RawVariable;
import macaw.businessLayer.SupportingDocument;
import macaw.businessLayer.User;
import macaw.businessLayer.ValueLabel;
import macaw.businessLayer.Variable;
import macaw.businessLayer.VariableSummary;
import macaw.system.MacawChangeEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.7742397208061473
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnStart = null;
      derivedVariable0.getAvailability();
      derivedVariable0.setNotes("Unknown");
      derivedVariable0.getLabel();
      derivedVariable0.getColumnStart();
      derivedVariable0.getAlias();
      derivedVariable0.clone();
      User user0 = new User("variable.saveChanges.valueChanged", "");
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getNotes());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Integer integer0 = new Integer((-1472509146));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Integer integer1 = new Integer(2670);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      String string0 = "^bfXY2!ei[kr\"";
      User user1 = new User("^bfXY2!ei[kr\"", "^bfXY2!ei[kr\"");
      user1.setFirstName("^bfXY2!ei[kr\"");
      // Undeclared exception!
      try { 
        rawVariable0.addOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.70258873457775
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2670);
      User.checkValidUserIDField("variable.saveChanges.valueChanged");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setIsNewRecord(true);
      User user0 = new User("variable.saveChanges.valueChanged", ".F^~J:dL{_(Xc");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.clone();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setTitle("variable.name.label");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.getDisplayName();
      derivedVariable0.setNotes("*!W?.v]$5CBq^<9kv7m");
      supportingDocument0.setFileName((String) null);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      assertEquals("*!W?.v]$5CBq^<9kv7m", derivedVariable0.getNotes());
      
      RawVariable rawVariable3 = new RawVariable();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.addSupportingDocument(supportingDocument2);
      rawVariable3.getSupportingDocuments();
      boolean boolean0 = rawVariable2.isNewRecord();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.1430514539245578
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setName("UNABLE_TO_CHECK_CATEGORY_DUPLICATE");
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(true);
      rawVariable0.setCoded(true);
      valueLabel0.setValue("[*m");
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setIsNewRecord(false);
      rawVariable0.setNotes("UNABLE_TO_GET_CLEANING_STATE_NAME");
      rawVariable0.setForm("UNABLE_TO_DELETE_DERIVED_VARIABLE");
      rawVariable0.setColumnEnd("variable.saveChanges.valueChanged");
      rawVariable0.getName();
      rawVariable0.getOntologyTerms();
      rawVariable0.getAvailability();
      Variable.validateFields(rawVariable0);
      User user0 = new User();
      RawVariable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("UNABLE_TO_GET_CLEANING_STATE_NAME", rawVariable0.getNotes());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.80563593490601
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("x)2`^[");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument2);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setName((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      User user2 = new User();
      User user3 = new User();
      user1.setUserID("-");
      User user4 = new User("-", "user.status.saveChanges");
      SupportingDocument supportingDocument5 = new SupportingDocument();
      rawVariable0.getLabel();
      assertEquals("n", rawVariable0.getLabel());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Integer integer0 = new Integer(1454);
      Integer integer1 = new Integer(1454);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("u7b5>>M^#VUDz7o`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument2);
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setTitle((String) null);
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument5.getDisplayName();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument7);
      assertTrue(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm0);
      String string0 = derivedVariable0.getName();
      assertFalse(derivedVariable0.isNewRecord());
      assertNull(string0);
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.7144849190494647
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.cloneAttributes(derivedVariable1);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, (Variable) null);
      User user3 = new User((String) null, "Unknown");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user2.setUserID("UNABLE_TO_UPDATE_SUPPORTING_DOCUMENT");
      User user7 = new User("(=bn#cOm 0jIoXag", (String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDocumentCode());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.3015574568421027
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Integer integer0 = new Integer(1454);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("MG<:[");
      Integer integer1 = new Integer(3155);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("lgBGL");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setTerm("MG<:[");
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm2.setTerm("MG<:[");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      derivedVariable0.updateOntologyTerm(ontologyTerm5);
      assertEquals("MG<:[", derivedVariable0.getDisplayName());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList3.add(ontologyTerm4);
      derivedVariable1.getOntologyTerms();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      arrayList4.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList6 = new ArrayList<OntologyTerm>();
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.887381563499434
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      user0.setFirstName("^bfXY2!ei[kr\"");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user3 = new User("(=bn#cOm 0jIoXag", "Ls");
      User user4 = new User();
      User.detectFieldChanges(user2, user3, user3);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals("0", variableSummary0.getDisplayItemIdentifier());
      
      User user5 = new User("", "h");
      Variable.detectChangesInAlternativeVariable(user3, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      Variable variable0 = rawVariable0.getAlternativeVariable();
      User user6 = new User((String) null, "");
      User user7 = new User(">lQC\"k}", "fH>ke%18kK/q)i5h_s");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable0, variable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user2, variable0, variable0);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertTrue(arrayList1.isEmpty());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setAlternativeVariable(rawVariable1);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      User user3 = new User("(=bn#cOm 0jIoXag", "Ls");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user3.setUserID("");
      // Undeclared exception!
      try { 
        Variable.validateFields((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1241705848787564
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Integer integer0 = new Integer(1454);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("MG<:[");
      Integer integer1 = new Integer(3155);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      Integer integer2 = new Integer((-4466));
      Integer integer3 = new Integer(907);
      Integer integer4 = new Integer(1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("KBVWFtI7D!ftdJrSiZD");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      user0.setPostCode("e7Ay");
      User user1 = new User();
      user0.setUserID("d<&;?5)^x");
      User user2 = new User("dwBt%-dCu7", "UNABLE_TO_GET_ORIGINAL_ALIAS_FILE_PATH");
      User user3 = new User();
      derivedVariable1.setIdentifier(1454);
      User.detectFieldChanges(user1, user3, user3);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user3, derivedVariable1, rawVariable0);
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user2, derivedVariable1, derivedVariable0);
      assertEquals("1454", derivedVariable1.getDisplayItemIdentifier());
      assertEquals(1, arrayList2.size());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.7230648708015144
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      LinkedList<RawVariable> linkedList0 = new LinkedList<RawVariable>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      ontologyTerm0.setIdentifier(2147483645);
      linkedList0.push(rawVariable0);
      arrayList0.add(ontologyTerm0);
      rawVariable0.clone();
      arrayList0.containsAll(linkedList0);
      rawVariable0.addOntologyTerms(arrayList0);
      rawVariable0.columnStart = "UNABLE_TO_GET_CATEGORIES";
      rawVariable0.getSupportingDocuments();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm1);
      Variable variable0 = null;
      // Undeclared exception!
      try { 
        rawVariable0.hasSameDisplayName((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.853253087436612
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1431655763));
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCodeBookNumber("jy");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("[~CSIP");
      ontologyTerm0.getDisplayName();
      derivedVariable0.setCleaningStatus("-[~CSIP");
      ontologyTerm0.setDescription("jy");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("[~CSIP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList4.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList3);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=3.8329126247419283
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel.detectFieldChanges(user0, rawVariable0, valueLabel0, valueLabel0);
      valueLabel0.setIdentifier((-2064888120));
      ValueLabel valueLabel1 = new ValueLabel();
      ValueLabel valueLabel2 = new ValueLabel();
      ValueLabel.validateFields(valueLabel2);
      User user1 = new User();
      user1.setIdentifier((-2064888120));
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel.detectFieldChanges(user1, rawVariable0, valueLabel3, valueLabel3);
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.setMissingValue(true);
      derivedVariable0.addValueLabel(valueLabel0);
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.clone();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.containsSourceVariable(rawVariable0);
      derivedVariable2.codeBookNumber = "variable.isCoded.label";
      derivedVariable0.removeSupportingDocuments(arrayList0);
      try { 
        DerivedVariable.validateFields(derivedVariable2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.DerivedVariable", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.3125019625949976
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      Integer integer0 = new Integer((-1610612734));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.clone();
      Integer integer1 = new Integer((-1610612734));
      Integer integer2 = new Integer((-1));
      Integer integer3 = new Integer((-1073741822));
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm1.setTerm("@");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      derivedVariable1.getOntologyTerms();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      arrayList3.add(ontologyTerm3);
      assertEquals(1, arrayList3.size());
      
      derivedVariable1.removeOntologyTerms(arrayList2);
      derivedVariable1.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.2999646444938464
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm("!amF+NSW(s77>!");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setOntologyName("GO{(c");
      ontologyTerm3.setNewRecord(true);
      ontologyTerm1.setIdentifier((-6572));
      ontologyTerm3.setTerm("n");
      ontologyTerm0.setTerm("&S148czba@kb");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.3526418957132877
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm("!amF+NSW(s77>!");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm2.setOntologyName("GO{(c");
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setTerm("n");
      ontologyTerm0.setTerm("d3L");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList1);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm4);
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isNewRecord());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.9663881312694826
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      String string0 = "K8Dde}Ps5gaj7";
      derivedVariable0.setCleaningDescription((String) null);
      derivedVariable0.setNotes("K8Dde}Ps5gaj7");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable0.setName("s,");
      derivedVariable0.createVariableSummary();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.getYear();
      derivedVariable0.getDisplayName();
      ArrayList<ValueLabel> arrayList0 = derivedVariable0.getValueLabels();
      arrayList0.listIterator();
      // Undeclared exception!
      try { 
        arrayList0.remove(1987);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1987, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(243);
      Integer integer1 = new Integer(243);
      Integer integer2 = new Integer(94);
      Integer integer3 = new Integer((-2086126969));
      Integer[] integerArray0 = new Integer[2];
      integerArray0[0] = integer1;
      integerArray0[1] = integer1;
      arrayList0.toArray(integerArray0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      String string0 = "jy";
      derivedVariable0.setName("jy");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.7466212728084187
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setName("L1n|]Ri&|\"%B+C");
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      user0.setPassword((String) null);
      User user2 = new User();
      RawVariable rawVariable2 = new RawVariable();
      User.checkValidUserIDField("DUPLICATE_ONTOLOGY_TERM");
      User user3 = new User((String) null, "(=bn#cOm 0jIoXag");
      User user4 = new User("ynUrj", (String) null);
      User.detectFieldChanges(user4, user2, user4);
      user0.setUserID("UNABLE_TO_CREATE_LIAFILEPATH");
      User user5 = new User();
      User user6 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "9Ye0!N#l26%J/Q;U");
      User user7 = new User();
      user5.setCity((String) null);
      user3.setAddressLine1("general.fieldValue.blank");
      User user8 = new User();
      User user9 = new User();
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user7, user3, user5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.990517764207639
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2638);
      Integer integer1 = new Integer(2638);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("skkG!_lpIc]8Mod");
      ontologyTerm0.setOntologyName("skkG!_lpIc]8Mod");
      ontologyTerm0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus("skkG!_lpIc]8Mod");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm("KBVWFtI7D!ftdJrSiZD");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm3);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList0);
      derivedVariable1.getSourceVariables();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
      assertEquals("skkG!_lpIc]8Mod", derivedVariable0.getCleaningStatus());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=3.665270296141937
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User.checkValidUserIDField("user.county.label");
      rawVariable0.columnStart = "2";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.setCoded(true);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      User user1 = new User("@", "user.emIil6saveChanges");
      user1.setCity("user.county.label");
      User user2 = new User();
      User user3 = new User();
      User.detectFieldChanges(user1, user2, user2);
      rawVariable0.createVariableSummary();
      User user4 = new User(".E/e?/)s]ppZ6|^&6Sw", "user.county.label");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      User user5 = new User("@", "user.emIil6saveChanges");
      User user6 = new User("AJ?kyoQuP$h)", "K656E%o");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, variable0);
      Variable.detectFieldChanges(user3, rawVariable0, variable0);
      ArrayList<Variable> arrayList1 = new ArrayList<Variable>();
      derivedVariable0.setSourceVariables(arrayList1);
      assertEquals("@", derivedVariable0.getDisplayName());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.4964927399410195
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setNewRecord(false);
      ontologyTerm1.setTerm("$mUpiEEgCk");
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      ontologyTerm4.setTerm("H?mBHH{3");
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      arrayList2.add(ontologyTerm3);
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList2.add(ontologyTerm5);
      User user0 = new User("n", "UNABLE_TO_FILTER_SUPPORTING_DOCUMENTS");
      user0.setCounty("3d]aS~");
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms(arrayList3);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2395);
      rawVariable0.setIdentifier((-269));
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      user0.setFirstName("^bfXY2!ei[kr\"");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      User user3 = new User("Ls", "=U>qs");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user2.setUserID("bVKk");
      User user7 = new User((String) null, "3(oNV;r?KE)W q9BwW1");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getFileName());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0672877847391904
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.columnStart.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "variable.columnStart.label";
      User user0 = new User();
      user0.setUserID("variable.columnStart.label");
      User user1 = new User();
      User user2 = new User();
      User.detectFieldChanges(user0, user0, user2);
      rawVariable0.createVariableSummary();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, derivedVariable0);
      rawVariable1.getAlternativeVariable();
      // Undeclared exception!
      try { 
        Variable.detectChangesInAlternativeVariable(user2, (Variable) null, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.9449114079110057
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(1);
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user1 = new User();
      user0.setPassword("egg:}@r{)G@-Hzb");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      User user2 = new User("Ls", "egg:}@r{)G@-Hzb");
      user2.setPostCode("skkG!_lpIc]8Mod");
      user0.setUserID("?D@HIt{)Q+\"dOU-");
      rawVariable2.setNotes("skkG!_lpIc]8Mod");
      User.detectFieldChanges(user1, user2, user0);
      rawVariable2.createVariableSummary();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable1);
      assertEquals("skkG!_lpIc]8Mod", rawVariable2.getNotes());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.4428352147175594
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Integer integer0 = new Integer(1454);
      Integer integer1 = new Integer(1);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("CANCEL");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setName("user.email.saveChanges");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.setTitle("AU#OrLiZ");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument2.getDisplayName();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument7);
      ArrayList<String> arrayList0 = Variable.validateFields(derivedVariable0);
      assertEquals("user.email.saveChanges", derivedVariable0.getName());
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.0209944644642754
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setLabel("ui;vJ1'j$#GJT)8O");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setFilePath("s,");
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1121));
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable0.getValueLabels();
      rawVariable0.getCleaningStatus();
      boolean boolean0 = rawVariable1.containsSupportingDocument(supportingDocument0);
      assertEquals("-1121", rawVariable1.getDisplayItemIdentifier());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.7081791768946295
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      ontologyTerm0.setNewRecord(false);
      ontologyTerm1.setTerm("$mUpiEEgCk");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setTerm("$mUpiEEgCk");
      ontologyTerm3.setTerm("n");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList3.add(ontologyTerm6);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList5);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertFalse(rawVariable0.isCleaned());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=3.7288097153227118
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCategory();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setQuestionNumber("Unknown");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      user0.setUserID("Unknown");
      derivedVariable0.questionNumber = "Unknown";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      User user1 = new User();
      User user2 = new User();
      user1.setLastName("");
      Variable.detectFieldChanges(user2, derivedVariable1, rawVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.cloneAttributes(rawVariable0);
      User user3 = new User();
      Variable.detectChangesInAlternativeVariable(user3, derivedVariable0, rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.setAlias("Unknown");
      assertEquals("Unknown", rawVariable0.getAlias());
      
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.getAvailability();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getName();
      assertEquals("Unknown", rawVariable3.getCleaningStatus());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.8418406361841133
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2395);
      User user0 = new User();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User();
      User user2 = new User();
      User user3 = new User();
      User user4 = new User();
      User.detectFieldChanges(user3, user4, user3);
      VariableSummary variableSummary0 = rawVariable0.createVariableSummary();
      assertEquals(0, variableSummary0.getIdentifier());
      
      User user5 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "UNABLE_TO_GET_VALUE_LABEL_IDENTIFIER");
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      User user6 = new User("^bfXY2!ei[kr\"", "^bfXY2!ei[kr\"");
      User user7 = new User("h", "Q ");
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable2, (Variable) null);
      assertNull(macawChangeEvent0);
      
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable2, rawVariable1);
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
      assertEquals("Unknown", rawVariable2.getAvailability());
      assertEquals("Unknown", rawVariable2.getCategory());
      assertEquals(0, arrayList1.size());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.5137801058392384
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      supportingDocument0.setIdentifier((-384));
      derivedVariable0.setAvailability("user.email.saveChanges");
      supportingDocument0.setTitle("tLzD}c%H\"<NLz>b&~");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setName("UNABLE_TO_UPDATE_USER");
      derivedVariable0.setQuestionNumber("X");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      // Undeclared exception!
      try { 
        derivedVariable0.removeSupportingDocuments(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.7554047040779324
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      rawVariable0.setLabel((String) null);
      ValueLabel valueLabel2 = new ValueLabel();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel3 = new ValueLabel();
      ValueLabel valueLabel4 = new ValueLabel();
      valueLabel4.hasSameDisplayName(valueLabel3);
      valueLabel0.clone();
      derivedVariable0.removeValueLabel(valueLabel0);
      User user0 = new User((String) null, (String) null);
      ValueLabel valueLabel5 = new ValueLabel();
      ValueLabel.differencesExist(user0, derivedVariable0, valueLabel2, valueLabel5);
      derivedVariable0.getLabel();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getSupportingDocuments();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear("");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable2.getSourceVariables();
      User user1 = new User((String) null, "variable.alias.label");
      user1.setUserID("KBVWFtI7D!ftdJrSiZD");
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      assertTrue(derivedVariable0.isCleaned());
      
      derivedVariable3.cloneAttributes(derivedVariable2);
      derivedVariable3.clone();
      String string0 = derivedVariable3.getAvailability();
      assertEquals("Unknown", string0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.7838711340023927
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.setName("@");
      derivedVariable0.setColumnEnd("Unknown");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.setCleaned(true);
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel0.clone();
      derivedVariable0.removeValueLabel(valueLabel0);
      derivedVariable0.getLabel();
      derivedVariable0.setCleaned(true);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setYear("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.getSourceVariables();
      User user0 = new User("", "ui;vJ1'j$#GJT)8O");
      user0.setUserID("Unknown");
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable1);
      derivedVariable1.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      rawVariable0.columnEnd = "n";
      String string0 = null;
      user0.setPassword((String) null);
      User user2 = new User();
      User.checkValidUserIDField("DUPLICATE_ONTOLOGY_TERM");
      User user3 = new User((String) null, "(=bn#cOm 0jIoXag");
      User user4 = new User();
      User user5 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "9Ye0!N#l26%J/Q;U");
      User user6 = new User();
      User user7 = new User();
      user6.setEmail("(=bn#cOm 0jIoXag");
      User user8 = new User();
      rawVariable0.getNotes();
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user6, user3, user4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.684989220951399
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n");
      User user0 = new User("n", "n");
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      String string0 = null;
      user0.setPassword((String) null);
      User user2 = new User();
      RawVariable rawVariable2 = new RawVariable();
      User.checkValidUserIDField("DUPLICATE_ONTOLOGY_TERM");
      User user3 = new User((String) null, "(=bn#cOm 0jIoXag");
      User user4 = new User();
      User user5 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "9Ye0!N#l26%J/Q;U");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user6, user3, user4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.821978374837229
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.setAvailability("KBVWFtI7D!ftdJrSiZD");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.removeSourceVariable(derivedVariable0);
      derivedVariable1.getAvailability();
      derivedVariable0.getIdentifier();
      derivedVariable1.setCodeBookNumber("n095");
      derivedVariable1.getCodeBookNumber();
      derivedVariable0.setAlias("wm7+GH\"[N");
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getSupportingDocuments();
      assertEquals("KBVWFtI7D!ftdJrSiZD", derivedVariable0.getAvailability());
      
      derivedVariable2.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable2.getAlias();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.getLabel();
      derivedVariable3.cloneAttributes(derivedVariable2);
      assertEquals("Unknown", derivedVariable3.getAvailability());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.9638512680171645
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("tLzD}c%H\"<NLz>b&~");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setName("Cnw}88)oT?^obHa-/B%");
      derivedVariable0.isCoded();
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setCoded(false);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlias("ui;vJ1'j$#GJT)8O");
      rawVariable0.setAvailability((String) null);
      User user1 = new User("Cnw}88)oT?^obHa-/B%", "variable.name.label");
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user1, rawVariable0, rawVariable1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.8862303569896177
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getColumnStart();
      derivedVariable0.setCategory("");
      derivedVariable0.setColumnEnd((String) null);
      System.setCurrentTimeMillis(0L);
      derivedVariable0.isNewRecord();
      derivedVariable0.getColumnEnd();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCodeBookNumber((String) null);
      derivedVariable0.hasSameDisplayName(rawVariable0);
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.columnStart = "J#zuWbrS``GVe";
      derivedVariable0.removeSourceVariable(rawVariable1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      rawVariable0.addOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.getDisplayName();
      ontologyTerm0.setOntologyName("");
      ontologyTerm0.setTerm("J#zuWbrS``GVe");
      rawVariable1.removeOntologyTerm(ontologyTerm0);
      rawVariable0.createVariableSummary();
      rawVariable1.createVariableSummary();
      rawVariable1.getNotes();
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      derivedVariable0.clone();
      System.setCurrentTimeMillis((-1L));
      User user0 = new User();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable1, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=3.7431259319171497
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      derivedVariable0.getCleaningStatus();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.cloneAttributes(derivedVariable1);
      User user2 = new User();
      User user3 = new User("", "Ls");
      user1.setUserID(";7j");
      User user4 = new User("Ls", "@");
      User user5 = new User("@", "");
      rawVariable0.setCodeBookNumber("Unknown");
      user1.setAddressLine2("jy");
      User user6 = new User("Unknown", " EQ70=*fM'>WV1?X");
      User user7 = new User();
      User user8 = new User("user.county.label", "variable.year.label");
      User.detectFieldChanges(user8, user7, user7);
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable0);
      rawVariable0.createVariableSummary();
      assertEquals("Unknown", rawVariable0.getCodeBookNumber());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.6918557054033934
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User.checkValidUserIDField("user.county.label");
      rawVariable0.columnStart = "2";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      User user1 = new User("@", "user.emIil6saveChanges");
      user1.setCity("user.county.label");
      User user2 = new User();
      User user3 = new User();
      User.detectFieldChanges(user1, user2, user2);
      rawVariable0.createVariableSummary();
      User user4 = new User(".E/e?/)s]ppZ6|^&6Sw", "user.county.label");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, rawVariable0);
      DerivedVariable derivedVariable1 = (DerivedVariable)rawVariable0.getAlternativeVariable();
      User user5 = new User("@", "user.emIil6saveChanges");
      User user6 = new User("AJ?kyoQuP$h)", "K656E%o");
      Variable.detectChangesInAlternativeVariable(user1, derivedVariable0, derivedVariable1);
      Variable.detectFieldChanges(user3, rawVariable0, derivedVariable1);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable1.hasSameDisplayName(derivedVariable2);
      User user7 = new User();
      DerivedVariable.detectFieldChanges(user7, derivedVariable1, derivedVariable0);
      assertEquals("@", derivedVariable0.getName());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.0800261477282183
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2670);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("n");
      derivedVariable0.addOntologyTerms(arrayList0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable0.getSourceVariables();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.72859346428181
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(2670);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2670);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user0 = new User();
      User user1 = new User();
      user1.setLastName("J#zuWbrS``GVe");
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user1, rawVariable1, rawVariable0);
      rawVariable1.setAlternativeVariable(rawVariable0);
      derivedVariable0.cloneAttributes(rawVariable0);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, derivedVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      
      user2.setUserID("user.status.saveChanges");
      User user3 = new User();
      ArrayList<MacawChangeEvent> arrayList2 = DerivedVariable.detectFieldChanges(user3, derivedVariable0, derivedVariable0);
      assertTrue(arrayList2.equals((Object)arrayList1));
      
      derivedVariable0.cloneAttributes(rawVariable1);
      rawVariable1.createVariableSummary();
      assertFalse(rawVariable1.isCoded());
      assertEquals(0, rawVariable1.getIdentifier());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2395);
      User user0 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      derivedVariable0.addSupportingDocument((SupportingDocument) null);
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument3.setTitle("z&u(ajoi");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      supportingDocument9.getDisplayName();
      supportingDocument3.setFileName((String) null);
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      // Undeclared exception!
      try { 
        derivedVariable0.containsSupportingDocument(supportingDocument5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Integer integer0 = new Integer(1454);
      Integer integer1 = new Integer(1454);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("u7b5>>M^#VUDz7o`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm((OntologyTerm) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("fhEg");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = null;
      // Undeclared exception!
      try { 
        derivedVariable1.containsOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.560150750206571
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setAlternativeVariable((Variable) null);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      // Undeclared exception!
      try { 
        derivedVariable0.cloneAttributes((Variable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.782419406888467
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getCategory();
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.setName("@");
      derivedVariable0.setColumnEnd("Unknown");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.setCodeBookNumber("Unknown");
      derivedVariable0.getValueLabels();
      ValueLabel valueLabel0 = new ValueLabel();
      valueLabel0.setMissingValue(false);
      valueLabel0.getDisplayName();
      ValueLabel valueLabel1 = new ValueLabel();
      valueLabel0.hasSameDisplayName(valueLabel1);
      valueLabel1.clone();
      derivedVariable0.removeValueLabel(valueLabel1);
      derivedVariable0.getLabel();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setCleaned(false);
      derivedVariable0.getDisplayItemIdentifier();
      derivedVariable0.setCleaningDescription("");
      derivedVariable0.getSupportingDocuments();
      derivedVariable0.setYear("Unknown");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable1.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      User user0 = new User("", "ui;vJ1'j$#GJT)8O");
      user0.setEmail("variable.alternativeVariable.label");
      user0.setUserID("ui;vJ1'j$#GJT)8O");
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable0);
      assertEquals("Unknown", derivedVariable0.getYear());
      
      derivedVariable2.cloneAttributes(derivedVariable0);
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.283030458109498
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "KBVWFtI7D!ftdJrSiZD";
      rawVariable0.setQuestionNumber("KBVWFtI7D!ftdJrSiZD");
      rawVariable0.setAvailability("J#zuWbrS``GVe");
      Variable.validateFields(rawVariable0);
      rawVariable0.getQuestionNumber();
      rawVariable0.setCategory("KBVWFtI7D!ftdJrSiZD");
      User user0 = new User("M@2KAl3{{~O|}.e\"#", "*2+");
      user0.setAddressLine1("M@2KAl3{{~O|}.e\"#");
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.getColumnStart();
      rawVariable0.setLabel("");
      user0.setPostCode("5!e7^");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      user0.setAddressLine2("&|@+T<J(?U[?|DiL");
      rawVariable0.containsSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.containsSourceVariable(rawVariable1);
      Variable.detectFieldChanges(user0, derivedVariable0, rawVariable0);
      rawVariable1.setQuestionNumber("VARIABLE");
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable1.getAvailability();
      rawVariable1.setIdentifier(0);
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable1.setColumnEnd("variable.year.label");
      assertEquals("variable.year.label", rawVariable1.getColumnEnd());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=2.62115586703738
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer((-2471));
      Integer integer1 = new Integer(2395);
      RawVariable rawVariable1 = new RawVariable();
      User user0 = new User();
      User user1 = new User();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCleaningStatus((String) null);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("lgBGL");
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.category.label");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("variable.category.label");
      ontologyTerm2.setTerm((String) null);
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList4 = derivedVariable1.getOntologyTerms();
      arrayList4.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      // Undeclared exception!
      try { 
        derivedVariable1.removeOntologyTerms(arrayList4);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.7204013155948865
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setCleaningDescription("user.lastName.label");
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.7464921238997273
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.columnStart.label";
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.form = "variable.columnStart.label";
      derivedVariable0.removeSourceVariable(rawVariable0);
      ArrayList<OntologyTerm> arrayList0 = derivedVariable0.getOntologyTerms();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable0, derivedVariable0);
      assertEquals("variable.columnStart.label", derivedVariable0.getCodeBookNumber());
      assertEquals(2, arrayList1.size());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=3.6209093416512177
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument4.getDisplayName();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument7);
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument3.setTitle(";zHhf{6E!!?j9I");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      supportingDocument5.setFileName("-");
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument10.getDisplayName();
      supportingDocument0.setFileName("u7b5>>M^#VUDz7o`");
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      SupportingDocument supportingDocument15 = new SupportingDocument();
      supportingDocument15.setTitle("L1n|]Ri&|\"%B+C");
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument15);
      assertTrue(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument16 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getSupportingDocuments();
      rawVariable0.cloneAttributes(derivedVariable0);
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable0.getAvailability());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", derivedVariable0.getCleaningStatus());
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.7367073271257314
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningStatus("variable.alias.label");
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("5X3zII");
      supportingDocument0.getDisplayName();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument0, supportingDocument0);
      supportingDocument0.setFileName("Ie[]rZ;z(H~y^R");
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(true);
      rawVariable0.notes = "";
      rawVariable0.setCleaningStatus("");
      rawVariable0.setCleaningDescription("|=\"^=");
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.7365143886730974
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setCleaned(true);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("5X3zII");
      supportingDocument0.getDisplayName();
      User user0 = new User();
      String string0 = "?LozL*;VPb\\Iv-Y\\>";
      User user1 = new User("?LozL*;VPbIv-Y>", "Ie[]rZ;z(H~y^R");
      supportingDocument0.setTitle("5X3zII-");
      SupportingDocument.detectFieldChanges(user1, supportingDocument0, supportingDocument0);
      supportingDocument0.setFileName("");
      supportingDocument0.getDisplayName();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.setCoded(true);
      rawVariable0.setCleaningStatus("02GL-");
      rawVariable0.setCleaningDescription("|=\"^=");
      rawVariable0.clone();
      rawVariable0.getCleaningDescription();
      try { 
        RawVariable.validateFields(rawVariable0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.RawVariable", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setFilePath((String) null);
      rawVariable0.setLabel((String) null);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1121));
      User user0 = new User();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.785306545610895
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(2670);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2670);
      integerArray0[1] = integer1;
      rawVariable0.setName("NON_EXISTENT_ONTOLOGY_TERM");
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      User user0 = new User();
      rawVariable0.setCleaningDescription("ui;vJ1'j$#GJT)8O");
      RawVariable.validateFields(rawVariable0);
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      assertEquals("ui;vJ1'j$#GJT)8O", rawVariable0.getCleaningDescription());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=3.65399345939878
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("n");
      User user0 = new User();
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      User user1 = new User();
      User.checkValidUserIDField("n");
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      rawVariable2.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable3 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.cloneAttributes(rawVariable1);
      User user2 = new User("n", "n");
      user0.setCity("2");
      User user3 = new User();
      User user4 = new User();
      User.detectFieldChanges(user0, user2, user3);
      rawVariable1.createVariableSummary();
      User user5 = new User("2", "user.emIil6saveChanges");
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.getAlternativeVariable();
      User user6 = new User("n", "AJ?kyoQuP$h)");
      User user7 = new User("K656E%o", "DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      Variable.detectChangesInAlternativeVariable(user1, rawVariable2, rawVariable4);
      RawVariable rawVariable5 = new RawVariable();
      // Undeclared exception!
      try { 
        Variable.detectFieldChanges(user3, (Variable) null, rawVariable5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.4295203737091735
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setTerm("s&&|:Sl)ni,{");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("d3L");
      ontologyTerm2.setNewRecord(true);
      ontologyTerm2.setTerm("d3L");
      ontologyTerm3.setTerm("Unknown");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList3.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      String string0 = derivedVariable0.getDisplayItemIdentifier();
      assertFalse(derivedVariable0.isCleaned());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("0", string0);
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.5168760810714366
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("tLzD}c%H\"<NLz>b&~");
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.setName("Cnw}88)oT?^obHa-/B%");
      derivedVariable0.isCoded();
      derivedVariable0.setQuestionNumber((String) null);
      RawVariable rawVariable0 = new RawVariable();
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.setCoded(false);
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.containsSupportingDocument(supportingDocument1);
      // Undeclared exception!
      try { 
        derivedVariable0.addSupportingDocuments((ArrayList<SupportingDocument>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=3.860215188685505
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getCategory();
      Variable.validateFields(rawVariable0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.setCleaned(true);
      derivedVariable0.setQuestionNumber("Unknown");
      derivedVariable0.hasSameDisplayName(rawVariable0);
      User user0 = new User();
      user0.setUserID("Unknown");
      derivedVariable0.questionNumber = "";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable1);
      derivedVariable0.hasSameDisplayName(derivedVariable1);
      derivedVariable1.setAvailability("sOO9TX,9j*QQ");
      derivedVariable0.notes = "supportingDocument.documentCode.label";
      ArrayList<SupportingDocument> arrayList0 = new ArrayList<SupportingDocument>();
      derivedVariable0.addSupportingDocuments(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      derivedVariable1.getCleaningStatus();
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setIdentifier((-923));
      derivedVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.isCleaned();
      rawVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable1.getAvailability();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      derivedVariable0.getColumnStart();
      DerivedVariable.detectFieldChanges(user0, derivedVariable2, derivedVariable2);
      assertEquals("supportingDocument.documentCode.label", derivedVariable0.getNotes());
      assertEquals("Unknown", derivedVariable0.getCategory());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=3.747094760511864
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      rawVariable0.setLabel("ui;vJ1'j$#GJT)8O");
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(derivedVariable1);
      User user0 = new User();
      derivedVariable1.setCleaningDescription((String) null);
      derivedVariable1.columnEnd = null;
      DerivedVariable derivedVariable2 = new DerivedVariable();
      derivedVariable2.getSupportingDocuments();
      derivedVariable1.setYear("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable3 = new DerivedVariable();
      derivedVariable3.removeSupportingDocument(supportingDocument0);
      DerivedVariable derivedVariable4 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable4.getSourceVariables();
      User user1 = new User("UNABLE_TO_REGISTER_CHANGE_EVENTS", "user.status.saveChanges");
      user0.setUserID((String) null);
      DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable2);
      derivedVariable4.setCleaningDescription("UNABLE_TO_REGISTER_CHANGE_EVENTS");
      DerivedVariable derivedVariable5 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable5);
      derivedVariable5.removeSourceVariables(arrayList0);
      assertEquals("UNABLE_TO_REGISTER_CHANGE_EVENTS", derivedVariable4.getCleaningDescription());
      assertEquals("0", derivedVariable5.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.6467142775717116
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      boolean boolean0 = rawVariable0.containsOntologyTerm(ontologyTerm0);
      assertFalse(boolean0);
      
      arrayList0.add(ontologyTerm0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ArrayList<SupportingDocument> arrayList3 = derivedVariable0.getSupportingDocuments();
      rawVariable0.addSupportingDocuments(arrayList3);
      arrayList2.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable0.getAlias();
      assertEquals(0, rawVariable0.getIdentifier());
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
      assertFalse(rawVariable0.isCleaned());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.1475837365690835
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User();
      rawVariable0.setAlternativeVariable(derivedVariable0);
      user0.setFirstName("@");
      User user1 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user1, rawVariable0, rawVariable0);
      assertEquals(0, (int)macawChangeEvent0.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      User user2 = new User(".^g>,/K[;4!*s", "^bfXY2!ei[kr\"");
      User user3 = new User();
      User user4 = new User();
      User user5 = new User();
      user5.setLastName("bank");
      user5.setPostCode("UNABLE_TO_CREATE_SUPPORTING_DOCUMENT");
      user5.setUserID("variable.isCleaned.saveChanges.changedToNotClean");
      User user6 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      derivedVariable0.getForm();
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.4295203737091735
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      ontologyTerm0.setNewRecord(false);
      ontologyTerm1.setTerm("$mUpiEEgCk");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setTerm("$mUpiEEgCk");
      ontologyTerm3.setTerm("n");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList3.add(ontologyTerm6);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList5);
      ArrayList<Variable> arrayList6 = derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      derivedVariable0.addSourceVariables(arrayList6);
      rawVariable0.getLabel();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isNewRecord());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=3.624728496322497
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2670);
      Integer integer1 = new Integer(2670);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "k";
      derivedVariable0.columnEnd = "(9:LtsfXGVaR";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm0.setTerm("n");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDocumentCode());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=3.712817814487441
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User.checkValidUserIDField("user.county.label");
      rawVariable0.columnStart = "2";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      User user1 = new User("@", "user.emIil6saveChanges");
      user0.setCity("general.fieldValue.unknown");
      User user2 = new User();
      User user3 = new User();
      User.detectFieldChanges(user0, user2, user2);
      rawVariable1.createVariableSummary();
      User user4 = new User("general.fieldValue.unknown", (String) null);
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      assertEquals("@", derivedVariable0.getDisplayName());
      
      Variable variable0 = rawVariable0.getAlternativeVariable();
      User user5 = new User("@", "AJ?kyoQuP$h)");
      User user6 = new User("t>fj", "general.fieldValue.unknown");
      Variable.detectChangesInAlternativeVariable(user3, variable0, variable0);
      Variable.detectFieldChanges(user6, rawVariable1, variable0);
      rawVariable1.getCleaningStatus();
      RawVariable rawVariable2 = (RawVariable)rawVariable0.clone();
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=3.663715948892564
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier((-1431655763));
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCodeBookNumber("jy");
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      User user0 = new User();
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setAlternativeVariable((Variable) null);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      RawVariable rawVariable4 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable4);
      User user1 = new User();
      user1.setPassword((String) null);
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable5 = new RawVariable();
      User user2 = new User(">", "");
      user2.setPostCode(">");
      user1.setUserID("$\"2>");
      User user3 = new User((String) null, "LHA");
      // Undeclared exception!
      try { 
        User.detectFieldChanges(user2, user3, user3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.User", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.146102255087602
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2395);
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setNotes("c9Ou8Haf~gBf7Y+T");
      user0.setFirstName("^bfXY2!ei[kr\"");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      User user3 = new User("(=bn#cOm 0jIoXag", "Ls");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user3.setUserID("Ls");
      User user7 = new User((String) null, "MISSING_DISPLAY_LIST_EDITOR");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=3.7474182050354337
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(2670);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2670);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[1]);
      integerArray0[3] = integer3;
      arrayList0.toArray(integerArray0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.clone();
      rawVariable0.setName((String) null);
      rawVariable0.columnStart = "";
      rawVariable0.setLabel("e&bYf@>J~^`pU/");
      rawVariable0.getDisplayName();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      assertEquals("e&bYf@>J~^`pU/", rawVariable0.getLabel());
      
      User user0 = new User();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 69
  /*Coverage entropy=3.81223916454504
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer[] integerArray0 = new Integer[4];
      Integer integer0 = new Integer(2670);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(2670);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(1);
      integerArray0[2] = integer2;
      Integer integer3 = new Integer((int) integerArray0[1]);
      integerArray0[3] = integer3;
      arrayList0.toArray(integerArray0);
      rawVariable0.removeOntologyTerms(arrayList0);
      rawVariable0.clone();
      rawVariable0.setName((String) null);
      rawVariable0.columnStart = "";
      rawVariable0.setLabel("e&bYf@>J~^`pU/");
      rawVariable0.getDisplayName();
      ArrayList<ValueLabel> arrayList1 = new ArrayList<ValueLabel>();
      rawVariable0.setValueLabels(arrayList1);
      rawVariable0.setCoded(false);
      User user0 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      rawVariable0.setAlias("W3/->`^vAY-M");
      rawVariable0.setAvailability("W3/->`^vAY-M");
      rawVariable0.clone();
      rawVariable0.getColumnEnd();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.getValueLabels();
      assertEquals("W3/->`^vAY-M", rawVariable0.getAvailability());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=3.714642523462388
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("bank");
      User user0 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      User user1 = new User();
      Integer integer0 = new Integer(1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.cloneAttributes(rawVariable1);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setAlternativeVariable(rawVariable0);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable2, rawVariable0);
      User user3 = new User("(=bn#cOm 0jIoXag", (String) null);
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user5.setUserID("A&FOLl");
      User user7 = new User("user.lastName.label", "{Y||%R~rk:%_qm'7zY");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertEquals("", supportingDocument0.getDescription());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=3.778770653604492
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setIdentifier(1743);
      ArrayList<Variable> arrayList0 = new ArrayList<Variable>(3067);
      derivedVariable0.removeSourceVariables(arrayList0);
      ontologyTerm0.setNameSpace("w");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(derivedVariable1);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable2 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable2.isNewRecord());
      assertFalse(derivedVariable2.isCleaned());
      assertEquals("Unknown", derivedVariable2.getAvailability());
      assertFalse(derivedVariable2.isCoded());
      assertEquals("Unknown", derivedVariable2.getCleaningStatus());
      assertEquals(0, derivedVariable2.getIdentifier());
      assertEquals("Unknown", derivedVariable2.getCategory());
      
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      arrayList2.add(ontologyTerm0);
      derivedVariable1.removeOntologyTerms(arrayList2);
      derivedVariable1.getSourceVariables();
      derivedVariable0.getQuestionNumber();
      assertFalse(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.027377075708073
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("-");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument4.getDisplayName();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument7);
      SupportingDocument supportingDocument8 = new SupportingDocument();
      supportingDocument3.setTitle(";zHhf{6E!!?j9I");
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      SupportingDocument supportingDocument11 = new SupportingDocument();
      supportingDocument5.setFileName("-");
      SupportingDocument supportingDocument12 = new SupportingDocument();
      supportingDocument10.getDisplayName();
      supportingDocument0.setFileName("u7b5>>M^#VUDz7o`");
      SupportingDocument supportingDocument13 = new SupportingDocument();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      SupportingDocument supportingDocument15 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument15);
      assertTrue(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument16 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getSupportingDocuments();
      String string0 = derivedVariable0.getCategory();
      assertFalse(derivedVariable0.isNewRecord());
      assertEquals("0", derivedVariable0.getDisplayItemIdentifier());
      assertFalse(derivedVariable0.isCoded());
      assertEquals("Unknown", string0);
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.754627133386218
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setIdentifier(11);
      derivedVariable0.createVariableSummary();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setOntologyName("[~CSIP");
      ontologyTerm0.getDisplayName();
      derivedVariable0.setCleaningStatus("-[~CSIP");
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      derivedVariable0.containsOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setTerm("[~CSIP");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      derivedVariable1.updateOntologyTerm(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList4.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList3);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      // Undeclared exception!
      try { 
        rawVariable0.updateOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2638);
      Integer integer1 = new Integer(2638);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("u7b5>>M^#VUDz7o`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.setFileName("UNABLE_TO_CHECK_ONTOLOGY_TERM_DUPLICATES");
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setName("&Bu$n_zFD&");
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setTitle("Ns");
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument3.setFilePath("variable.alternativeVariable.label");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument3.getDisplayName();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.setQuestionNumber("variable.availability.label");
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument6);
      assertEquals("variable.availability.label", derivedVariable0.getQuestionNumber());
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.4295203737091735
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm1.setTerm("$mUpiEEgCk");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setTerm("$mUpiEEgCk");
      derivedVariable0.setColumnEnd("n");
      ontologyTerm3.setTerm("n");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList2 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList2.add(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList4);
      derivedVariable0.getSourceVariables();
      assertEquals("n", derivedVariable0.getColumnEnd());
      
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm5);
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.6492778555956185
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2670);
      Integer integer1 = new Integer((-1012));
      Integer integer2 = new Integer(1078);
      RawVariable rawVariable1 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      rawVariable0.cloneAttributes(derivedVariable0);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setAlternativeVariable(rawVariable0);
      rawVariable1.setColumnEnd("s,");
      User user0 = new User();
      User user1 = new User();
      user0.setLastName("J#zuWbrS``GVe");
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable1.setAlternativeVariable(derivedVariable0);
      derivedVariable1.cloneAttributes(derivedVariable0);
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable1.setIdentifier((-1012));
      User user3 = new User();
      DerivedVariable derivedVariable2 = new DerivedVariable();
      Variable.detectFieldChanges(user3, rawVariable1, rawVariable0);
      assertEquals("s,", rawVariable1.getColumnEnd());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.1937561962712997
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.questionNumber = null;
      derivedVariable0.setColumnEnd("(hY'6AwP");
      arrayList0.add((Variable) derivedVariable0);
      derivedVariable0.setQuestionNumber((String) null);
      derivedVariable0.setIdentifier(2800);
      derivedVariable0.setCleaned(false);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      arrayList0.add((Variable) derivedVariable1);
      derivedVariable0.getCategory();
      derivedVariable0.getValueLabels();
      Variable.validateFields(derivedVariable0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setYear("jFOp)#)P!enFRv");
      derivedVariable0.addSourceVariable(rawVariable0);
      derivedVariable0.createVariableSummary();
      derivedVariable0.getQuestionNumber();
      derivedVariable0.setIsNewRecord(false);
      derivedVariable0.getColumnEnd();
      int int0 = 5;
      // Undeclared exception!
      try { 
        derivedVariable0.removeSourceVariables(arrayList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.864800990219684
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setLabel("n");
      User user0 = new User();
      ArrayList<MacawChangeEvent> arrayList0 = Variable.detectFieldChanges(user0, rawVariable0, rawVariable0);
      User user1 = new User();
      user0.setPassword((String) null);
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      User.checkValidUserIDField("DUPLICATE_ONTOLOGY_TERM");
      User user3 = new User((String) null, "(=bn#cOm 0jIoXag");
      User user4 = new User();
      User user5 = new User("UNABLE_TO_CREATE_CLEANING_STATE", "9Ye0!N#l26%J/Q;U");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      rawVariable0.createVariableSummary();
      User user9 = new User((String) null, "h");
      Variable.detectChangesInAlternativeVariable(user9, rawVariable1, rawVariable1);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable0.getAlternativeVariable();
      User user10 = new User((String) null, "h");
      User user11 = new User("h", "n");
      Variable.detectChangesInAlternativeVariable(user3, rawVariable2, rawVariable0);
      ArrayList<MacawChangeEvent> arrayList1 = Variable.detectFieldChanges(user0, rawVariable1, rawVariable0);
      assertEquals("n", rawVariable0.getLabel());
      assertFalse(arrayList1.equals((Object)arrayList0));
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.74329692323934
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      derivedVariable0.getCleaningStatus();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      Variable.detectFieldChanges(user1, rawVariable1, rawVariable1);
      rawVariable1.setAlternativeVariable(rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable2);
      User user2 = new User();
      User user3 = new User();
      user3.setPassword("Unknown");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable1);
      RawVariable rawVariable3 = new RawVariable();
      User user4 = new User("?D@HIt{)Q+\"dOU-", "DUPLICATE_ONTOLOGY_TERM_ASSOCIATION");
      user3.setPostCode("?D@HIt{)Q+\"dOU-");
      user3.setUserID("variable.alternativeVariable.label");
      User.detectFieldChanges(user4, user2, user2);
      RawVariable rawVariable4 = new RawVariable();
      rawVariable2.createVariableSummary();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user4, rawVariable2, derivedVariable1);
      assertEquals("@", rawVariable2.getDisplayName());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.8216225662622425
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.setLabel((String) null);
      rawVariable0.removeValueLabel(valueLabel0);
      ValueLabel.EditingOperationType valueLabel_EditingOperationType0 = ValueLabel.EditingOperationType.NEW;
      valueLabel0.setEditingOperationType(valueLabel_EditingOperationType0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeSupportingDocument(supportingDocument0);
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getFilePath();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber("^n`5l +WP%~7");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setAlias("^n`5l +WP%~7");
      derivedVariable0.form = "gy{FdpyIGax^,T&";
      ArrayList<SupportingDocument> arrayList0 = derivedVariable0.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      derivedVariable0.getAlias();
      derivedVariable0.getLabel();
      derivedVariable0.cloneAttributes(rawVariable0);
      assertEquals("gy{FdpyIGax^,T&", rawVariable0.getForm());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
  }

  /**
  //Test case number: 81
  /*Coverage entropy=2.886883586530869
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      User user0 = new User();
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user1 = new User("lC4", "$VALUES");
      user0.setFirstName("kwDvw%|L^5Sg");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable0);
      User user3 = new User("$VALUES", "^bfXY2!e[k\"");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      User user7 = new User();
      User.detectFieldChanges(user1, user4, user3);
      rawVariable0.createVariableSummary();
      User user8 = new User("lC4", "}qIV9s{q)D[ap5");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable1 = new RawVariable();
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      User user9 = new User("^bfXY2!e[k\"", "10DUpK\"VfbdP0e");
      User user10 = new User("j~T$8o_", "^bfXY2!e[k\"");
      rawVariable2.columnStart = "KRq2!irf'o||sm=&(n";
      Variable.detectChangesInAlternativeVariable(user9, rawVariable0, rawVariable0);
      Variable.detectFieldChanges(user6, rawVariable2, rawVariable2);
      assertEquals("KRq2!irf'o||sm=&(n", rawVariable2.getColumnStart());
      assertEquals("Unknown", rawVariable2.getCategory());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=3.7148329180551816
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.form = "blank";
      rawVariable1.setLabel("blank");
      User user0 = new User();
      Variable.detectFieldChanges(user0, rawVariable0, rawVariable1);
      rawVariable1.setAlternativeVariable(rawVariable0);
      assertEquals("blank", rawVariable1.getLabel());
      
      DerivedVariable derivedVariable0 = new DerivedVariable();
      RawVariable rawVariable2 = new RawVariable();
      derivedVariable0.cloneAttributes(rawVariable2);
      User user1 = new User();
      user0.setPassword("D~8;");
      MacawChangeEvent macawChangeEvent0 = new MacawChangeEvent();
      RawVariable rawVariable3 = new RawVariable();
      User user2 = new User((String) null, "6ry$/D");
      Variable.detectChangesInAlternativeVariable(user2, rawVariable0, rawVariable3);
      DerivedVariable derivedVariable1 = new DerivedVariable();
      ArrayList<DerivedVariable> arrayList1 = new ArrayList<DerivedVariable>();
      ArrayList<Variable> arrayList2 = new ArrayList<Variable>(arrayList1);
      derivedVariable1.addSourceVariables(arrayList2);
      assertEquals("Unknown", derivedVariable1.getAvailability());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=3.1931042927862383
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setLabel("n");
      User user0 = new User();
      rawVariable1.notes = "n";
      RawVariable rawVariable2 = new RawVariable();
      Variable.detectFieldChanges(user0, rawVariable1, rawVariable2);
      User user1 = new User();
      user1.setPassword("n");
      User user2 = new User();
      RawVariable rawVariable3 = new RawVariable();
      User.checkValidUserIDField("n");
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setIsNewRecord(false);
      Variable.detectChangesInAlternativeVariable(user0, rawVariable1, rawVariable0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("n");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.addOntologyTerm(ontologyTerm0);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList0 = rawVariable0.getOntologyTerms();
      arrayList0.add(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add(ontologyTerm0);
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList2);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable5 = new RawVariable();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertEquals("n", rawVariable1.getNotes());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.notes = "NON_EXISTENT_VALUE_LABELS";
      derivedVariable0.setAlias("sgv6|I5/5b(0B>Af");
      derivedVariable0.getCleaningStatus();
      derivedVariable0.getCategory();
      derivedVariable0.getOntologyTerms();
      derivedVariable0.getAlias();
      assertEquals("sgv6|I5/5b(0B>Af", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=3.744198531592305
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      User user0 = new User();
      User.checkValidUserIDField("user.county.label");
      rawVariable0.columnStart = "2";
      Variable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
      rawVariable0.setAlternativeVariable(derivedVariable0);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable0.cloneAttributes(derivedVariable0);
      User user1 = new User("@", "user.emIil6saveChanges");
      user0.setCity("general.fieldValue.unknown");
      User user2 = new User();
      User user3 = new User();
      ArrayList<MacawChangeEvent> arrayList1 = User.detectFieldChanges(user0, user2, user2);
      rawVariable1.createVariableSummary();
      User user4 = new User("general.fieldValue.unknown", (String) null);
      Variable.detectChangesInAlternativeVariable(user2, derivedVariable0, rawVariable1);
      Variable variable0 = rawVariable0.getAlternativeVariable();
      rawVariable0.setForm("user.emIil6saveChanges");
      User user5 = new User("@", "AJ?kyoQuP$h)");
      Variable.detectChangesInAlternativeVariable(user3, variable0, variable0);
      ArrayList<MacawChangeEvent> arrayList2 = Variable.detectFieldChanges(user4, rawVariable1, variable0);
      assertEquals("2", rawVariable0.getColumnStart());
      assertTrue(arrayList2.equals((Object)arrayList1));
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.7434141519525594
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      derivedVariable0.getCleaningStatus();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.cloneAttributes(derivedVariable1);
      User user2 = new User();
      user2.setCounty("Unknown");
      user0.setPassword("Unknown");
      user2.setAddressLine1("<~4");
      User user3 = new User("@", "user.email.saveChanges");
      user0.setPassword("blank");
      User user4 = new User();
      User user5 = new User("user.email.saveChanges", "N~!9s^LaN.}T");
      User user6 = new User();
      User user7 = new User();
      user7.setCounty("#s';jzSDgM=}=");
      User user8 = new User();
      User.detectFieldChanges(user2, user8, user7);
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.setFilePath("variable.cleaningStatus.label");
      rawVariable2.getAlternativeVariable();
      User user9 = new User("<~4", "user.email.saveChanges");
      Variable.detectChangesInAlternativeVariable(user6, rawVariable2, derivedVariable0);
      assertEquals("@", derivedVariable0.getName());
      
      rawVariable2.getName();
      assertEquals("Unknown", rawVariable2.getCleaningStatus());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=3.702447690964387
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm0);
      assertTrue(boolean0);
      
      ontologyTerm0.setNewRecord(true);
      ontologyTerm1.setTerm("s&&|:Sl)ni,{");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setOntologyName("d3L");
      ontologyTerm2.setNewRecord(true);
      ontologyTerm2.setTerm("d3L");
      ontologyTerm3.setTerm("Unknown");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm1);
      arrayList1.add(ontologyTerm2);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList2.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList3.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      OntologyTerm ontologyTerm8 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm8);
      DerivedVariable derivedVariable1 = (DerivedVariable)derivedVariable0.clone();
      assertFalse(derivedVariable1.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals("Unknown", derivedVariable1.getCategory());
      assertEquals("Unknown", derivedVariable1.getAvailability());
      assertEquals("Unknown", derivedVariable1.getCleaningStatus());
      assertEquals(0, derivedVariable1.getIdentifier());
      assertFalse(derivedVariable1.isCoded());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ValueLabel valueLabel0 = new ValueLabel();
      ValueLabel valueLabel1 = new ValueLabel();
      rawVariable0.removeValueLabel(valueLabel0);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      rawVariable0.removeValueLabel(valueLabel0);
      rawVariable0.getFilePath();
      RawVariable rawVariable1 = new RawVariable();
      rawVariable1.setIdentifier((-1121));
      assertEquals((-1121), rawVariable1.getIdentifier());
      
      rawVariable0.getValueLabels();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.0761045791007673
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer((-2073432485));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ArrayList<OntologyTerm> arrayList1 = rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm0);
      Integer integer1 = new Integer((-2073432485));
      Integer integer2 = new Integer((-1));
      Integer integer3 = new Integer(714);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setTerm(";dP uf30d1/UiDnYsW");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      rawVariable0.getOntologyTerms();
      arrayList1.add(ontologyTerm4);
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("u7b5>>M^#VUDz7o`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getDisplayName();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument3.getDisplayName();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument5.setTitle("e'd0xS(92_}U!");
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument8.setFileName("-");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      supportingDocument8.getDisplayName();
      supportingDocument8.setFileName(":TiVe<)R7\"Bw),1d^E");
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument3);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      SupportingDocument supportingDocument14 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument6);
      rawVariable0.getSupportingDocuments();
      assertTrue(rawVariable0.isNewRecord());
      
      derivedVariable0.createVariableSummary();
      assertFalse(derivedVariable0.isNewRecord());
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.9397928111645655
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      derivedVariable0.setCoded(true);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setIsNewRecord(true);
      derivedVariable0.setAlternativeVariable(rawVariable0);
      assertFalse(rawVariable0.isCoded());
      
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      arrayList0.add(ontologyTerm0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.setYear((String) null);
      derivedVariable0.isCoded();
      derivedVariable0.getValueLabels();
      derivedVariable0.setName((String) null);
      assertTrue(derivedVariable0.isCoded());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=3.7842523863482636
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setTerm("variable.isCleaned.saveChanges.changedToNotClean");
      rawVariable0.containsOntologyTerm(ontologyTerm0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSourceVariable(rawVariable0);
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.cloneAttributes(rawVariable0);
      derivedVariable0.removeOntologyTerms(arrayList0);
      derivedVariable0.getSourceVariables();
      String string0 = derivedVariable0.getDisplayName();
      assertEquals("", string0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=2.2700203387932723
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Integer integer0 = new Integer((-1472509146));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Integer integer1 = new Integer(2670);
      Integer integer2 = new Integer((-1472509146));
      Integer integer3 = new Integer(1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm1.setNewRecord(true);
      ontologyTerm0.setTerm((String) null);
      ontologyTerm1.setTerm("?]?hHz");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList0.add((OntologyTerm) null);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      arrayList2.add(ontologyTerm0);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList2.add(ontologyTerm5);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.setYear((String) null);
      derivedVariable1.removeOntologyTerms(arrayList1);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable1 = new RawVariable();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable1.updateOntologyTerm(ontologyTerm3);
      assertFalse(rawVariable1.isCoded());
      assertFalse(rawVariable1.isNewRecord());
      assertFalse(rawVariable1.isCleaned());
      assertEquals("0", rawVariable1.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.8298497373451608
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("u7b5>>M^#VUDz7o`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument2.getDisplayName();
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      supportingDocument3.getDisplayName();
      User user0 = new User();
      SupportingDocument.detectFieldChanges(user0, supportingDocument3, supportingDocument3);
      SupportingDocument supportingDocument6 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument0);
      SupportingDocument supportingDocument7 = new SupportingDocument();
      supportingDocument5.setTitle("e'd0xS(92_}U!");
      SupportingDocument supportingDocument8 = new SupportingDocument();
      SupportingDocument supportingDocument9 = new SupportingDocument();
      SupportingDocument supportingDocument10 = new SupportingDocument();
      supportingDocument8.setFileName("-");
      SupportingDocument supportingDocument11 = new SupportingDocument();
      supportingDocument8.getDisplayName();
      supportingDocument8.setFileName(":TiVe<)R7\"Bw),1d^E");
      SupportingDocument supportingDocument12 = new SupportingDocument();
      SupportingDocument supportingDocument13 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument3);
      assertTrue(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument14 = new SupportingDocument();
      rawVariable0.addSupportingDocument(supportingDocument6);
      ValueLabel valueLabel0 = new ValueLabel();
      rawVariable0.addValueLabel(valueLabel0);
      rawVariable0.getSupportingDocuments();
      User user1 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<MacawChangeEvent> arrayList0 = RawVariable.detectFieldChanges(user1, rawVariable0, rawVariable1);
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", rawVariable0.getCleaningStatus());
      assertEquals(0, arrayList0.size());
      assertEquals(0, rawVariable0.getIdentifier());
      assertEquals("Unknown", rawVariable0.getAvailability());
      assertFalse(rawVariable0.isCoded());
      assertEquals("Unknown", rawVariable0.getCategory());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.questionNumber = "";
      boolean boolean0 = derivedVariable0.isCleaned();
      assertFalse(boolean0);
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCoded());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      User user0 = new User();
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.codeBookNumber = "A";
      ArrayList<SupportingDocument> arrayList0 = rawVariable0.getSupportingDocuments();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      arrayList0.add(supportingDocument0);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.removeSupportingDocuments(arrayList0);
      assertFalse(derivedVariable0.isCoded());
      assertFalse(derivedVariable0.isNewRecord());
      assertFalse(derivedVariable0.isCleaned());
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.7434513335848334
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      derivedVariable0.getCleaningStatus();
      ArrayList<ValueLabel> arrayList0 = new ArrayList<ValueLabel>();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      derivedVariable1.setCleaningDescription("<:nv{QJ");
      rawVariable0.setAlternativeVariable(derivedVariable1);
      RawVariable rawVariable1 = new RawVariable();
      derivedVariable1.cloneAttributes(derivedVariable1);
      User user2 = new User();
      user2.setCounty("Unknown");
      user0.setPassword("Unknown");
      User user3 = new User("@", "user.email.saveChanges");
      user0.setPassword("blank");
      User user4 = new User();
      User user5 = new User("user.email.saveChanges", "N~!9s^LaN.}T");
      User user6 = new User();
      User user7 = new User();
      user7.setCounty("#s';jzSDgM=}=");
      User user8 = new User();
      User.detectFieldChanges(user2, user8, user7);
      rawVariable1.createVariableSummary();
      Variable.detectChangesInAlternativeVariable(user2, rawVariable1, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      User user9 = new User("<~4", "user.email.saveChanges");
      Variable.detectChangesInAlternativeVariable(user6, rawVariable2, derivedVariable0);
      assertEquals("@", derivedVariable0.getName());
      
      rawVariable2.getName();
      rawVariable0.getCleaningDescription();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=3.6669919055686817
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2670);
      Integer integer1 = new Integer(2670);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.columnEnd = "(9:LtsfXGVaR";
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.cloneAttributes(derivedVariable1);
      derivedVariable0.removeOntologyTerms(arrayList0);
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      ontologyTerm0.setDescription("(9:LtsfXGVaR");
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setNewRecord(false);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      assertFalse(supportingDocument0.isNewRecord());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.565247518967129
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      derivedVariable0.setCoded(true);
      derivedVariable0.containsOntologyTerm(ontologyTerm1);
      ontologyTerm0.setNewRecord(false);
      ontologyTerm1.setTerm("$mUpiEEgCk");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setTerm("$mUpiEEgCk");
      ontologyTerm3.setTerm("n");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      arrayList3.add(ontologyTerm6);
      ArrayList<OntologyTerm> arrayList4 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList5 = new ArrayList<OntologyTerm>();
      arrayList5.add(ontologyTerm3);
      derivedVariable0.removeOntologyTerms(arrayList5);
      derivedVariable0.getSourceVariables();
      assertTrue(derivedVariable0.isCoded());
      
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm7 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.1488608757772574
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2395);
      User user0 = new User();
      User user1 = new User();
      user0.setEmail("variable.name.label");
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      rawVariable0.setColumnStart(")(IEP]d");
      user0.setFirstName("^bfXY2!ei[kr\"");
      User user2 = new User();
      Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals(")(IEP]d", rawVariable0.getColumnStart());
      
      RawVariable rawVariable1 = new RawVariable();
      User user3 = new User("(=bn#cOm 0jIoXag", "Ls");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      user4.setUserID("Ls");
      User user7 = new User("user.status.saveChanges", "UNABLE_TO_GET_ALIAS_FILE_PATH");
      SupportingDocument supportingDocument0 = new SupportingDocument();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.getSourceVariables();
      assertFalse(derivedVariable0.isCleaned());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=3.741658738296027
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Integer integer0 = new Integer(1454);
      Integer integer1 = new Integer(1454);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.getDisplayName();
      supportingDocument0.setTitle("u7b5>>M^#VUDz7o`");
      DerivedVariable derivedVariable0 = new DerivedVariable();
      supportingDocument0.getDisplayName();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable0.setName((String) null);
      SupportingDocument supportingDocument2 = new SupportingDocument();
      supportingDocument0.setTitle((String) null);
      SupportingDocument supportingDocument3 = new SupportingDocument();
      SupportingDocument supportingDocument4 = new SupportingDocument();
      supportingDocument4.getDisplayName();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument6);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.setCleaningDescription("u7b5>>M^#VUDz7o`-");
      rawVariable0.getSupportingDocuments();
      derivedVariable0.cloneAttributes(rawVariable0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        DerivedVariable.detectFieldChanges(user0, derivedVariable0, derivedVariable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("cP9Y>C[C-U");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      SupportingDocument supportingDocument1 = new SupportingDocument();
      supportingDocument1.getDisplayName();
      SupportingDocument supportingDocument2 = new SupportingDocument();
      derivedVariable0.addSupportingDocument(supportingDocument1);
      derivedVariable1.setName("-");
      assertEquals("-", derivedVariable1.getName());
      
      SupportingDocument supportingDocument3 = new SupportingDocument();
      supportingDocument1.setTitle("cP9Y>C[C-U");
      SupportingDocument supportingDocument4 = new SupportingDocument();
      SupportingDocument supportingDocument5 = new SupportingDocument();
      derivedVariable0.setCleaned(true);
      supportingDocument2.getDisplayName();
      SupportingDocument supportingDocument6 = new SupportingDocument();
      SupportingDocument supportingDocument7 = new SupportingDocument();
      SupportingDocument supportingDocument8 = new SupportingDocument();
      derivedVariable0.containsSupportingDocument(supportingDocument4);
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.543056733112554
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerm((OntologyTerm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      derivedVariable0.setOntologyTerms(arrayList0);
      // Undeclared exception!
      try { 
        derivedVariable0.addSourceVariables((ArrayList<Variable>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.codeBookNumber = "variable.columnStart.label";
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm2.setTerm("user.status.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable1.updateOntologyTerm(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList0.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      derivedVariable0.setCategory("zUI{sQP");
      // Undeclared exception!
      try { 
        derivedVariable0.removeOntologyTerms((ArrayList<OntologyTerm>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("macaw.businessLayer.Variable", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.8187112696353647
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      RawVariable rawVariable0 = new RawVariable();
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2395);
      User user0 = new User();
      User user1 = new User();
      User.detectFieldChanges(user1, user1, user0);
      rawVariable0.setAlternativeVariable(rawVariable0);
      User user2 = new User();
      MacawChangeEvent macawChangeEvent0 = Variable.detectChangesInAlternativeVariable(user0, rawVariable0, rawVariable0);
      assertEquals("Changed variable \"Alternative Variable\", field \"\", from \"\" to \"{3}\".", macawChangeEvent0.getChangeMessage());
      assertNotNull(macawChangeEvent0);
      
      RawVariable rawVariable1 = new RawVariable();
      User user3 = new User("(=bn#cOm 0jIoXag", "Ls");
      User user4 = new User();
      User user5 = new User();
      User user6 = new User();
      User.detectFieldChanges(user3, user1, user2);
      user1.setUserID("Ls");
      MacawChangeEvent macawChangeEvent1 = Variable.detectChangesInAlternativeVariable(user3, rawVariable1, rawVariable1);
      assertEquals(0, (int)macawChangeEvent1.getVariableOwnerID());
      assertEquals("Changed variable \"Alternative Variable\", field \"blank\", from \"\" to \"{3}\".", macawChangeEvent1.getChangeMessage());
      assertNotNull(macawChangeEvent1);
      
      RawVariable rawVariable2 = new RawVariable();
      RawVariable rawVariable3 = new RawVariable();
      rawVariable3.getAlternativeVariable();
      User user7 = new User("?5xr}v<+'O^@ww", "");
      MacawChangeEvent macawChangeEvent2 = Variable.detectChangesInAlternativeVariable(user6, rawVariable1, (Variable) null);
      assertNull(macawChangeEvent2);
      
      RawVariable rawVariable4 = new RawVariable();
      rawVariable4.setAvailability("");
      rawVariable4.getName();
      assertFalse(rawVariable4.isCleaned());
      assertFalse(rawVariable4.isCoded());
      assertFalse(rawVariable4.isNewRecord());
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.565247518967129
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      derivedVariable0.addOntologyTerm(ontologyTerm1);
      ontologyTerm0.setTerm("n");
      boolean boolean0 = derivedVariable0.containsOntologyTerm(ontologyTerm1);
      assertTrue(boolean0);
      
      ontologyTerm0.setNewRecord(false);
      ontologyTerm1.setTerm("$mUpiEEgCk");
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      ontologyTerm3.setNewRecord(true);
      ontologyTerm3.setTerm("$mUpiEEgCk");
      ontologyTerm3.setTerm("n");
      derivedVariable0.updateOntologyTerm(ontologyTerm1);
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      arrayList1.add(ontologyTerm0);
      ArrayList<OntologyTerm> arrayList2 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm4 = new OntologyTerm();
      arrayList1.add(ontologyTerm1);
      derivedVariable0.getOntologyTerms();
      OntologyTerm ontologyTerm5 = new OntologyTerm();
      arrayList2.add(ontologyTerm4);
      ArrayList<OntologyTerm> arrayList3 = new ArrayList<OntologyTerm>();
      derivedVariable0.removeOntologyTerms(arrayList2);
      derivedVariable0.getSourceVariables();
      RawVariable rawVariable0 = new RawVariable();
      OntologyTerm ontologyTerm6 = new OntologyTerm();
      rawVariable0.updateOntologyTerm(ontologyTerm6);
      String string0 = rawVariable0.getAvailability();
      assertFalse(rawVariable0.isCleaned());
      assertEquals("Unknown", string0);
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
      assertNotNull(string0);
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCoded());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=3.7040681737864745
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setName("@");
      derivedVariable0.getCleaningStatus();
      ValueLabel valueLabel0 = new ValueLabel();
      RawVariable rawVariable0 = new RawVariable();
      DerivedVariable derivedVariable1 = new DerivedVariable();
      User user0 = new User();
      User user1 = new User();
      Variable.detectFieldChanges(user1, derivedVariable0, derivedVariable1);
      rawVariable0.setAlternativeVariable(derivedVariable1);
      derivedVariable1.cloneAttributes(derivedVariable1);
      User user2 = new User();
      RawVariable rawVariable1 = new RawVariable();
      ArrayList<SupportingDocument> arrayList0 = rawVariable1.getSupportingDocuments();
      derivedVariable0.setSupportingDocuments(arrayList0);
      user0.setPassword("Unknown");
      User user3 = new User("@", "Unknown");
      User user4 = new User();
      User user5 = new User("[qG8k9HE", "UNABLE_TO_CHECK_ALIAS_FILE_PATH_DUPLICATE");
      User user6 = new User();
      User user7 = new User();
      User user8 = new User();
      User.detectFieldChanges(user4, user5, user8);
      rawVariable0.createVariableSummary();
      User user9 = new User("UNABLE_TO_CREATE_CLEANING_STATE", (String) null);
      Variable.detectChangesInAlternativeVariable(user8, rawVariable0, rawVariable0);
      RawVariable rawVariable2 = new RawVariable();
      rawVariable2.getAlternativeVariable();
      User user10 = new User("@", "@");
      Variable.detectChangesInAlternativeVariable(user4, derivedVariable0, derivedVariable0);
      assertEquals("@", derivedVariable0.getName());
      
      rawVariable0.getName();
      assertEquals(0, rawVariable0.getIdentifier());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.673415053526696
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.createVariableSummary();
      ArrayList<Variable> arrayList0 = derivedVariable0.getSourceVariables();
      derivedVariable0.addSourceVariables(arrayList0);
      derivedVariable0.form = "wm7+GH\"[N";
      assertEquals("Unknown", derivedVariable0.getAvailability());
      
      derivedVariable0.setAvailability("");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      derivedVariable0.removeSourceVariable((Variable) null);
      derivedVariable0.getAvailability();
      derivedVariable0.getIdentifier();
      derivedVariable0.setCodeBookNumber("");
      derivedVariable0.getCodeBookNumber();
      derivedVariable0.setAlias("");
      derivedVariable0.setSupportingDocuments((ArrayList<SupportingDocument>) null);
      assertEquals("", derivedVariable0.getAlias());
  }

  /**
  //Test case number: 110
  /*Coverage entropy=2.2623477045221723
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      Integer integer0 = new Integer(2670);
      Integer integer1 = new Integer(2670);
      DerivedVariable derivedVariable0 = new DerivedVariable();
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      derivedVariable0.removeOntologyTerm(ontologyTerm0);
      ontologyTerm0.setTerm("n");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      derivedVariable0.updateOntologyTerm(ontologyTerm0);
      derivedVariable1.setAlias("variable.columnStart.label");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      derivedVariable1.removeOntologyTerms(arrayList0);
      assertEquals("variable.columnStart.label", derivedVariable1.getAlias());
      
      derivedVariable0.getSourceVariables();
      assertEquals(0, derivedVariable0.getIdentifier());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Integer integer0 = new Integer((-1472509146));
      OntologyTerm ontologyTerm0 = new OntologyTerm();
      Integer integer1 = new Integer(2670);
      Integer integer2 = new Integer((-1472509146));
      Integer integer3 = new Integer(1);
      OntologyTerm ontologyTerm1 = new OntologyTerm();
      ontologyTerm0.setNameSpace((String) null);
      ontologyTerm0.setTerm((String) null);
      OntologyTerm ontologyTerm2 = new OntologyTerm();
      ontologyTerm0.setTerm("J#zuWbrS``GVe");
      ArrayList<OntologyTerm> arrayList0 = new ArrayList<OntologyTerm>();
      ontologyTerm2.setNewRecord(false);
      ontologyTerm2.setNewRecord(false);
      ontologyTerm2.setDescription("J#zuWbrS``GVe");
      ontologyTerm2.setTerm("J#zuWbrS``GVe");
      ArrayList<OntologyTerm> arrayList1 = new ArrayList<OntologyTerm>();
      OntologyTerm ontologyTerm3 = new OntologyTerm();
      DerivedVariable derivedVariable0 = new DerivedVariable();
      derivedVariable0.setCodeBookNumber((String) null);
      SupportingDocument supportingDocument0 = new SupportingDocument();
      boolean boolean0 = derivedVariable0.containsSupportingDocument(supportingDocument0);
      assertFalse(boolean0);
      
      RawVariable rawVariable0 = new RawVariable();
      rawVariable0.addSupportingDocument(supportingDocument0);
      rawVariable0.getSupportingDocuments();
      assertFalse(rawVariable0.isNewRecord());
      assertFalse(rawVariable0.isCleaned());
      assertFalse(rawVariable0.isCoded());
      assertEquals("0", rawVariable0.getDisplayItemIdentifier());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.786694220346919
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DerivedVariable derivedVariable0 = new DerivedVariable();
      User user0 = new User("Lz^Ht", (String) null);
      Variable.detectChangesInAlternativeVariable(user0, derivedVariable0, derivedVariable0);
      derivedVariable0.codeBookNumber = "variable.columnStart.label";
      RawVariable rawVariable0 = new RawVariable();
      SupportingDocument supportingDocument0 = new SupportingDocument();
      supportingDocument0.setTitle("user.status.saveChanges");
      SupportingDocument supportingDocument1 = new SupportingDocument();
      User user1 = new User("GU]{M{G'Wsv~nR/P", "user.postCode.saveChanges");
      DerivedVariable derivedVariable1 = new DerivedVariable();
      DerivedVariable.detectFieldChanges(user1, derivedVariable0, derivedVariable0);
      assertEquals("variable.columnStart.label", derivedVariable0.getCodeBookNumber());
      assertEquals("", derivedVariable0.getColumnStart());
  }
}
