/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:10:42 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.608140803859547
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("k", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      Token token6 = xPathLexer0.minus();
      token6.toString();
      token5.toString();
      token5.toString();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals(".", token7.getTokenText());
      
      token6.toString();
      Token token8 = xPathLexer0.dots();
      Token token9 = xPathLexer0.literal();
      assertEquals("xp", token9.getTokenText());
      assertEquals(27, token9.getTokenType());
      assertNotNull(token9);
      
      String string0 = token8.toString();
      assertEquals("[ (13) (s)", string0);
      
      Token token10 = xPathLexer0.doubleColon();
      String string1 = token10.toString();
      assertEquals("[ (19) (th)", string1);
      
      String string2 = token6.toString();
      assertEquals("[ (6) (n)", string2);
      
      Token token11 = xPathLexer0.plus();
      xPathLexer0.setPreviousToken(token11);
      assertEquals(".", token11.getTokenText());
      
      Token token12 = xPathLexer0.identifierOrOperatorName();
      assertEquals("XPathLexer", token12.getTokenText());
      assertNotNull(token12);
      
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      Token token13 = xPathLexer0.identifier();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer0.at();
      assertEquals(16, token14.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=3.367649625135927
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.star();
      xPathLexer0.pipe();
      xPathLexer0.isIdentifierStartChar(']');
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume((-3566));
      XPathLexer xPathLexer2 = new XPathLexer("{PtEV");
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.2370840722375847
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      Token token1 = xPathLexer0.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (m)", string0);
      
      xPathLexer0.setPreviousToken(token1);
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals("c", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.number();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer0.literal();
      assertEquals("werken", token4.getTokenText());
      assertEquals(27, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("saxpath.XPathLexer", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.comma();
      xPathLexer0.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer4.colon();
      assertEquals(18, token6.getTokenType());
      
      xPathLexer2.number();
      Token token7 = xPathLexer3.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer6.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer6.leftBracket();
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("[ (32) (m)");
      Token token10 = xPathLexer8.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer2.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer1.slashes();
      assertEquals(11, token12.getTokenType());
      
      Token token13 = xPathLexer5.whitespace();
      assertEquals((-2), token13.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.784066574475527
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-457));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.245139168168375
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("ke", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("n", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals("s", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals("a", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.pipe();
      Token token8 = xPathLexer0.at();
      assertEquals("p", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.number();
      Token token9 = xPathLexer0.nextToken();
      assertEquals("ath.Token", token9.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      Token token10 = xPathLexer2.comma();
      assertEquals("c", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer3.notEquals();
      assertEquals(22, token11.getTokenType());
      
      xPathLexer0.div();
      Token token12 = xPathLexer2.literal();
      assertEquals("m.werken.saxpath.T", token12.getTokenText());
      assertEquals(27, token12.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("q&G.X577,f!&p~");
      XPathLexer xPathLexer5 = new XPathLexer("9");
      Token token13 = xPathLexer5.nextToken();
      assertEquals("9", token13.getTokenText());
      
      Token token14 = xPathLexer5.pipe();
      assertEquals(17, token14.getTokenType());
      
      xPathLexer5.number();
      Token token15 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token15.getTokenType());
      assertEquals("ken", token15.getTokenText());
      
      Token token16 = xPathLexer0.number();
      assertEquals(30, token16.getTokenType());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.2984164393553317
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$DKpj0n~C|ror%ZW!");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.not();
      assertEquals("$", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("r", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer1.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("$DKpj0n~C|ror%ZW!");
      Token token6 = xPathLexer6.comma();
      assertEquals("$", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      xPathLexer2.number();
      Token token7 = xPathLexer4.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer1.or();
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("%", token11.getTokenText());
      
      xPathLexer3.equals();
      Token token12 = xPathLexer2.equals();
      assertEquals(21, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("T(rK8<?m8F");
      Token token13 = xPathLexer7.plus();
      assertEquals("T", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer2.dots();
      assertEquals(13, token14.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.0937477004337857
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      Token token0 = xPathLexer1.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer1.not();
      Token token1 = xPathLexer1.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.isIdentifierStartChar(':');
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("{PtEV");
      xPathLexer2.slashes();
      Token token2 = xPathLexer2.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer3.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer3.comma();
      assertEquals("{", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("s", token5.getTokenText());
      assertEquals(4, token5.getTokenType());
      
      xPathLexer4.setXPath("");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("PtEV", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.equals();
      Token token7 = xPathLexer2.leftParen();
      assertEquals(1, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer6.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer7.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer7.mod();
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      assertEquals("U", token10.getTokenText());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer2.literal();
      assertNull(token12);
      
      Token token13 = xPathLexer5.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.422531218358816
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$DKpj0n~C|ror%ZW!");
      xPathLexer0.operatorName();
      xPathLexer0.not();
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("D", token0.getTokenText());
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertEquals("Kpj0n", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      assertNotNull(token1);
      
      xPathLexer0.whitespace();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.not();
      Token token2 = xPathLexer0.operatorName();
      assertEquals("or", token2.getTokenText());
      assertEquals(29, token2.getTokenType());
      
      Token token3 = xPathLexer0.colon();
      assertEquals("%", token3.getTokenText());
      assertEquals(18, token3.getTokenType());
      
      xPathLexer0.setPreviousToken((Token) null);
      Token token4 = xPathLexer0.slashes();
      assertEquals("Z", token4.getTokenText());
      
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("W", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer0.or();
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      assertEquals((-2), token8.getTokenType());
      
      char char0 = xPathLexer0.LA(1145);
      assertEquals('\uFFFF', char0);
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals(11, token10.getTokenType());
      
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.1131152282410834
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(".", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("we", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("GW/iE");
      XPathLexer xPathLexer3 = new XPathLexer("[W{HTAG2Gv'");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.number();
      Token token5 = xPathLexer0.slashes();
      assertEquals("r", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("D|;y=NuEs[cSFQ|4fE4");
      xPathLexer3.number();
      xPathLexer2.literal();
      Token token6 = xPathLexer3.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer6 = new XPathLexer("?qt&tjE5YH");
      Token token7 = xPathLexer5.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer4.number();
      Token token9 = xPathLexer5.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals("|", token9.getTokenText());
      
      Token token10 = xPathLexer4.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      Token token11 = xPathLexer6.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("?", token11.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token12 = xPathLexer6.number();
      assertEquals("", token12.getTokenText());
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer4.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("k", token14.getTokenText());
      
      xPathLexer5.equals();
      xPathLexer1.literal();
      Token token15 = xPathLexer5.dots();
      assertEquals(13, token15.getTokenType());
      assertEquals("y", token15.getTokenText());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.322312507042962
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.not();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("erken.saxpath.Token", token3.getTokenText());
      
      xPathLexer0.whitespace();
      xPathLexer0.rightParen();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      Token token5 = xPathLexer1.doubleColon();
      assertEquals("^R", token5.getTokenText());
      
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.slashes();
      assertEquals(11, token8.getTokenType());
      assertEquals("L", token8.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.nextToken();
      Token token9 = xPathLexer1.identifier();
      assertEquals("N5G", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.literal();
      xPathLexer2.whitespace();
      xPathLexer1.star();
      xPathLexer1.or();
      Token token10 = xPathLexer3.star();
      assertEquals("c", token10.getTokenText());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      assertEquals("&", token11.getTokenText());
      
      Token token12 = xPathLexer3.whitespace();
      assertEquals("", token12.getTokenText());
      
      xPathLexer3.notEquals();
      Token token13 = xPathLexer1.not();
      assertEquals(23, token13.getTokenType());
      assertEquals("Q", token13.getTokenText());
      
      Token token14 = xPathLexer4.star();
      assertEquals(20, token14.getTokenType());
      
      Token token15 = xPathLexer1.notEquals();
      assertEquals(22, token15.getTokenType());
      
      Token token16 = xPathLexer2.doubleColon();
      assertEquals(19, token16.getTokenType());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.740524931821784
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.star();
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.dots();
      Token token6 = xPathLexer0.minus();
      assertEquals("e", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      token1.toString();
      String string1 = token0.toString();
      assertEquals("[ (23) (c)", string1);
      
      String string2 = token4.toString();
      assertEquals("[ (4) (r)", string2);
      
      token3.toString();
      Token token7 = xPathLexer0.dollar();
      assertEquals(26, token7.getTokenType());
      assertEquals("n", token7.getTokenText());
      
      xPathLexer0.plus();
      token5.toString();
      Token token8 = xPathLexer0.dots();
      Token token9 = xPathLexer0.literal();
      assertEquals(27, token9.getTokenType());
      assertNotNull(token9);
      
      String string3 = token1.toString();
      assertEquals("[ (2) (m)", string3);
      
      String string4 = token3.toString();
      assertEquals("[ (20) (e)", string4);
      
      String string5 = token8.toString();
      assertEquals("[ (13) (s)", string5);
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("t", token10.getTokenText());
      
      xPathLexer0.setPreviousToken(token4);
      Token token11 = xPathLexer0.identifierOrOperatorName();
      assertNull(token11);
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (2) (m)");
      Token token12 = xPathLexer1.at();
      assertEquals("[", token12.getTokenText());
      assertEquals(16, token12.getTokenType());
      
      Token token13 = xPathLexer1.number();
      assertEquals(30, token13.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("X", token14.getTokenText());
      
      Token token15 = xPathLexer0.equals();
      assertEquals(21, token15.getTokenType());
      assertEquals("P", token15.getTokenText());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.629360002817423
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      Token token3 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.setPreviousToken(token3);
      Token token4 = xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.dots();
      Token token6 = xPathLexer0.minus();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      String string1 = token4.toString();
      assertEquals("[ (4) (k)", string1);
      
      token6.toString();
      Token token7 = xPathLexer0.dollar();
      assertEquals(".", token7.getTokenText());
      assertEquals(26, token7.getTokenType());
      
      String string2 = token5.toString();
      assertEquals("[ (13) (e)", string2);
      
      xPathLexer0.dots();
      Token token8 = xPathLexer0.literal();
      assertEquals(27, token8.getTokenType());
      assertEquals("xp", token8.getTokenText());
      assertNotNull(token8);
      
      token2.toString();
      String string3 = token3.toString();
      assertEquals("[ (19) (er)", string3);
      
      String string4 = token6.toString();
      assertEquals("[ (6) (n)", string4);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("t", token9.getTokenText());
      
      xPathLexer0.setPreviousToken(token6);
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertEquals("h.XPathLexer", token10.getTokenText());
      
      xPathLexer0.doubleColon();
      xPathLexer0.doubleColon();
      Token token11 = xPathLexer0.identifier();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer0.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.3976294415685895
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.setXPath("<zzLjMB{re");
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.consume();
      xPathLexer0.slashes();
      xPathLexer0.mod();
      xPathLexer0.currentPosition();
      xPathLexer0.leftBracket();
      xPathLexer0.consume((-1572));
      // Undeclared exception!
      try { 
        xPathLexer0.operatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.0236180972435047
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer("6Cg8'A.-An");
      Token token4 = xPathLexer0.number();
      assertEquals("", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("6Cg8'A.-An");
      xPathLexer0.literal();
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer1.div();
      Token token9 = xPathLexer2.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer5 = new XPathLexer("\"I28:sJ5z");
      xPathLexer4.number();
      Token token10 = xPathLexer4.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer5.not();
      assertEquals(23, token12.getTokenType());
      assertEquals("\"", token12.getTokenText());
      
      Token token13 = xPathLexer3.doubleColon();
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.237249396805082
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.star();
      assertEquals(20, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('<');
      assertFalse(boolean0);
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.setXPath(", (O!1h3wCpT \"");
      XPathLexer xPathLexer1 = new XPathLexer("V!=.^fLNsD_");
      XPathLexer xPathLexer2 = new XPathLexer(", (O!1h3wCpT \"");
      xPathLexer2.number();
      Token token4 = xPathLexer0.nextToken();
      assertEquals(32, token4.getTokenType());
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("V", token5.getTokenText());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals(22, token6.getTokenType());
      assertEquals("!=", token6.getTokenText());
      
      Token token7 = xPathLexer0.at();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer(", (O!1h3wCpT \"");
      XPathLexer xPathLexer4 = new XPathLexer("a2nytkzgl~b^MT");
      Token token8 = xPathLexer4.nextToken();
      assertEquals("a2nytkzgl", token8.getTokenText());
      
      Token token9 = xPathLexer3.colon();
      assertEquals(18, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.relationalOperator();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      xPathLexer5.and();
      xPathLexer5.setPreviousToken(token7);
      assertEquals(" ", token7.getTokenText());
      
      Token token11 = xPathLexer3.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer3.number();
      assertEquals("", token12.getTokenText());
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.257043986315663
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token1 = xPathLexer1.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("Q", token1.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer1.slashes();
      assertEquals(11, token3.getTokenType());
      assertEquals("o", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals("Y", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer("StZ");
      Token token6 = xPathLexer3.nextToken();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("qC.yeYC'>eUraqe6");
      xPathLexer5.relationalOperator();
      Token token8 = xPathLexer5.literal();
      assertNotNull(token8);
      assertEquals(27, token8.getTokenType());
      assertEquals("C.yeYC'>eUra", token8.getTokenText());
      
      xPathLexer2.and();
      xPathLexer4.setPreviousToken(token6);
      assertEquals("StZ", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token9 = xPathLexer2.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.290154727898947
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer2.comma();
      xPathLexer3.notEquals();
      xPathLexer0.div();
      xPathLexer2.literal();
      XPathLexer xPathLexer4 = new XPathLexer("q&G.X577,f!&p~");
      XPathLexer xPathLexer5 = new XPathLexer("9");
      xPathLexer0.equals();
      xPathLexer5.number();
      xPathLexer2.identifierOrOperatorName();
      Token token0 = xPathLexer5.div();
      assertNull(token0);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.2215748568445575
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("|wwna\"2I#>,|a");
      Token token0 = xPathLexer1.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      Token token1 = xPathLexer1.notEquals();
      assertEquals("ww", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer1.rightBracket();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("a", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.not();
      Token token3 = xPathLexer1.whitespace();
      assertEquals("", token3.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("%Y%TEU/.+*] ");
      Token token4 = xPathLexer3.dots();
      assertEquals(13, token4.getTokenType());
      assertEquals("%", token4.getTokenText());
      
      Token token5 = xPathLexer3.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("Y", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("w-wP");
      xPathLexer3.number();
      Token token6 = xPathLexer1.nextToken();
      assertEquals("I", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token7 = xPathLexer5.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer2.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.colon();
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
      
      xPathLexer5.or();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer4.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer6.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.equals();
      assertEquals(21, token12.getTokenType());
      
      xPathLexer6.literal();
      Token token13 = xPathLexer3.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer0.whitespace();
      assertEquals((-2), token14.getTokenType());
      
      Token token15 = xPathLexer2.leftParen();
      assertEquals("%", token15.getTokenText());
      assertEquals(1, token15.getTokenType());
      
      Token token16 = xPathLexer1.rightBracket();
      assertEquals(4, token16.getTokenType());
      
      Token token17 = xPathLexer4.doubleColon();
      assertEquals("-w", token17.getTokenText());
      assertEquals(19, token17.getTokenType());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.613365320239421
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer0.leftBracket();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer2.consume((-692));
      XPathLexer xPathLexer3 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer3.dots();
      xPathLexer3.relationalOperator();
      xPathLexer1.dots();
      xPathLexer3.consume(1);
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.dots();
      xPathLexer2.plus();
      xPathLexer0.star();
      xPathLexer1.at();
      xPathLexer3.leftParen();
      // Undeclared exception!
      try { 
        xPathLexer2.operatorName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.6811837319911622
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[W{HTAG2Gv'");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      xPathLexer2.at();
      XPathLexer xPathLexer3 = new XPathLexer("RzHZZgb");
      xPathLexer1.number();
      xPathLexer1.literal();
      XPathLexer xPathLexer4 = new XPathLexer("EkB");
      xPathLexer3.nextToken();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.252365386028509
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("ke", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("n", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.dollar();
      assertEquals("s", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.plus();
      assertEquals("a", token6.getTokenText());
      assertEquals(5, token6.getTokenType());
      
      xPathLexer0.pipe();
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.number();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("ath.Token", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer3.identifierOrOperatorName();
      Token token9 = xPathLexer2.comma();
      assertEquals("c", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer0.div();
      Token token11 = xPathLexer2.literal();
      assertEquals(27, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("q&G.X577,f!&p~");
      XPathLexer xPathLexer5 = new XPathLexer("9");
      Token token12 = xPathLexer5.pipe();
      assertEquals(17, token12.getTokenType());
      assertEquals("9", token12.getTokenText());
      
      xPathLexer5.number();
      Token token13 = xPathLexer2.identifierOrOperatorName();
      assertEquals("ken", token13.getTokenText());
      
      Token token14 = xPathLexer0.number();
      assertEquals(30, token14.getTokenType());
      assertEquals("", token14.getTokenText());
      
      Token token15 = xPathLexer4.identifier();
      assertEquals(15, token15.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=2.698531654823198
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.dollar();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      token4.toString();
      String string1 = token3.toString();
      assertEquals("[ (4) (e)", string1);
      
      xPathLexer0.dollar();
      token1.toString();
      Token token6 = xPathLexer0.plus();
      assertEquals("n", token6.getTokenText());
      
      token1.toString();
      Token token7 = xPathLexer0.dots();
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      String string2 = token1.toString();
      assertEquals("[ (2) (m)", string2);
      
      String string3 = token4.toString();
      assertEquals("[ (26) (r)", string3);
      
      String string4 = token7.toString();
      assertEquals("[ (13) (.)", string4);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      Token token10 = xPathLexer0.identifierOrOperatorName();
      assertNull(token10);
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.232721403406808
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(".", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.slashes();
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.star();
      assertEquals("e", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.isIdentifierStartChar(']');
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("{PtEV");
      xPathLexer1.slashes();
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.number();
      assertEquals(30, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      xPathLexer1.literal();
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("ken.saxpath.Token", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer1.leftParen();
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer4.mod();
      Token token11 = xPathLexer3.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.equals();
      assertEquals("P", token12.getTokenText());
      
      Token token13 = xPathLexer3.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer3.dots();
      assertEquals(13, token14.getTokenType());
      
      Token token15 = xPathLexer2.dollar();
      assertEquals(26, token15.getTokenType());
      assertEquals("t", token15.getTokenText());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.084143418715028
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("e", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.consume(1);
      Token token5 = xPathLexer0.minus();
      token5.toString();
      String string1 = token5.toString();
      assertEquals("[ (6) (e)", string1);
      
      Token token6 = xPathLexer0.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer1 = new XPathLexer("W,}h");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.colon();
      assertEquals(18, token9.getTokenType());
      assertEquals(",", token9.getTokenText());
      
      Token token10 = xPathLexer0.star();
      assertEquals(20, token10.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer1.pipe();
      assertEquals("}", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.9798619908833224
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("^ff&{3/:M<+-m')");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("f", token0.getTokenText());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("f", token1.getTokenText());
      
      xPathLexer0.div();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer(":c?Bm#");
      Token token2 = xPathLexer0.number();
      assertEquals("", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(":", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals("{3", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("?Bm#", token7.getTokenText());
      
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("|lMcYX$7");
      xPathLexer1.star();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("/", token8.getTokenText());
      assertEquals(11, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token9 = xPathLexer3.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer4.leftParen();
      Token token10 = xPathLexer0.rightParen();
      assertEquals(":", token10.getTokenText());
      assertEquals(2, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.setXPath("!");
      Token token11 = xPathLexer1.leftParen();
      assertEquals(1, token11.getTokenType());
      
      xPathLexer4.and();
      Token token12 = xPathLexer3.star();
      assertEquals(20, token12.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.9481874622596056
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("~IvgVt#onYKh");
      xPathLexer2.identifierOrOperatorName();
      Token token2 = xPathLexer2.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer2.rightBracket();
      assertEquals("I", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer3 = new XPathLexer("p_ImagKF");
      XPathLexer xPathLexer4 = new XPathLexer("[W{HTAG2Gv'");
      xPathLexer4.number();
      Token token4 = xPathLexer3.at();
      assertEquals("p", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("aW!L~*W9QWwkX");
      xPathLexer1.number();
      xPathLexer2.nextToken();
      Token token5 = xPathLexer5.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer6 = new XPathLexer("aW!L~*W9QWwkX");
      Token token6 = xPathLexer3.nextToken();
      assertEquals("_ImagKF", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("aW!L~*W9QWwkX");
      Token token8 = xPathLexer7.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("a", token8.getTokenText());
      
      Token token9 = xPathLexer5.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer8 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer7.number();
      Token token10 = xPathLexer8.pipe();
      assertEquals(17, token10.getTokenType());
      assertEquals("Q", token10.getTokenText());
      
      Token token11 = xPathLexer7.number();
      assertEquals(30, token11.getTokenType());
      assertEquals("", token11.getTokenText());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.2096641780547968
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("w", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.identifier();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      xPathLexer1.setPreviousToken(token1);
      assertEquals(4, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.number();
      xPathLexer1.nextToken();
      Token token6 = xPathLexer2.slashes();
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.colon();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer3.colon();
      assertEquals("c", token10.getTokenText());
      
      Token token11 = xPathLexer4.plus();
      assertEquals(5, token11.getTokenType());
      
      xPathLexer2.relationalOperator();
      xPathLexer3.slashes();
      xPathLexer2.or();
      xPathLexer3.and();
      xPathLexer2.setPreviousToken(token9);
      assertEquals(18, token9.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      xPathLexer3.slashes();
      Token token13 = xPathLexer3.doubleColon();
      assertEquals(".w", token13.getTokenText());
      assertEquals(19, token13.getTokenType());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.6060129412198396
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("|wwna\"2I#>,|a");
      xPathLexer0.dollar();
      xPathLexer1.notEquals();
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      String string0 = "1:)hEjAlGvdbb{mkE[t";
      XPathLexer xPathLexer2 = new XPathLexer("1:)hEjAlGvdbb{mkE[t");
      xPathLexer2.pipe();
      xPathLexer0.consume((-3920));
      xPathLexer0.at();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.0004366455013907
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("b|0j\"Cr2JM u~");
      XPathLexer xPathLexer3 = new XPathLexer("b|0j\"Cr2JM u~");
      xPathLexer0.number();
      Token token2 = xPathLexer2.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("b", token2.getTokenText());
      
      xPathLexer0.slashes();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer2.literal();
      assertNull(token4);
      
      Token token5 = xPathLexer2.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer4.div();
      xPathLexer4.literal();
      xPathLexer1.div();
      xPathLexer2.mod();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer4.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer2.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer3.leftBracket();
      assertEquals("b", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.359338706767717
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.minus();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.literal();
      xPathLexer1.dots();
      xPathLexer0.literal();
      token0.toString();
      xPathLexer0.plus();
      Token token1 = xPathLexer2.leftBracket();
      xPathLexer1.and();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.doubleColon();
      xPathLexer2.slashes();
      Token token2 = xPathLexer0.or();
      assertNull(token2);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.6167805632500327
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":c?Bm#");
      XPathLexer xPathLexer1 = new XPathLexer(":c?Bm#");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer2.rightParen();
      assertEquals("c", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.not();
      xPathLexer0.number();
      Token token1 = xPathLexer2.literal();
      assertNull(token1);
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer3.leftParen();
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(18, token3.getTokenType());
      
      Token token4 = xPathLexer3.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer1.not();
      assertEquals("c", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("hn&;x$=%");
      Token token7 = xPathLexer6.colon();
      assertEquals("h", token7.getTokenText());
      
      xPathLexer3.star();
      Token token8 = xPathLexer5.star();
      assertEquals("c", token8.getTokenText());
      assertEquals(20, token8.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token9 = xPathLexer0.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("c", token9.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer3.at();
      assertEquals(16, token10.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.7882109481192554
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNNk%");
      xPathLexer1.dollar();
      xPathLexer1.colon();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer1.number();
      xPathLexer1.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("`ydKd");
      xPathLexer3.literal();
      xPathLexer3.number();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer2.comma();
      Token token0 = xPathLexer3.notEquals();
      xPathLexer0.div();
      xPathLexer2.literal();
      xPathLexer4.number();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      xPathLexer0.pipe();
      xPathLexer4.number();
      Token token1 = xPathLexer3.minus();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.21434829939838
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      xPathLexer0.isIdentifierStartChar(']');
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("yaEgUw)m]o");
      xPathLexer2.nextToken();
      xPathLexer1.literal();
      xPathLexer2.comma();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.div();
      xPathLexer3.consume();
      xPathLexer2.literal();
      XPathLexer xPathLexer4 = new XPathLexer("`Ve3LA\"ivxfqxh|?^)");
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("S:&<Vw/C");
      xPathLexer6.pipe();
      xPathLexer0.number();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.plus();
      xPathLexer3.notEquals();
      Token token0 = xPathLexer7.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.9788119961229889
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("G~!WVrL");
      xPathLexer1.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("O|1UPo4va[=#lm");
      xPathLexer1.literal();
      xPathLexer0.number();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.comma();
      xPathLexer3.notEquals();
      xPathLexer2.div();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.literal();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      xPathLexer4.number();
      xPathLexer5.literal();
      xPathLexer5.number();
      xPathLexer3.not();
      XPathLexer xPathLexer6 = new XPathLexer("O|1UPo4va[=#lm");
      xPathLexer6.pipe();
      Token token1 = xPathLexer3.leftParen();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.139061795929819
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("ZcS*]8B[");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.star();
      xPathLexer2.consume((-692));
      XPathLexer xPathLexer5 = new XPathLexer("ZcS*]8B[");
      xPathLexer5.dots();
      xPathLexer4.relationalOperator();
      xPathLexer2.consume((-692));
      xPathLexer3.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer5.plus();
      xPathLexer1.star();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.mod();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.7811685400894537
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxath.APahLexer");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxath.APahLexer");
      xPathLexer2.identifier();
      xPathLexer0.star();
      xPathLexer0.consume(0);
      xPathLexer2.dots();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-1853));
      xPathLexer1.and();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.plus();
      xPathLexer2.star();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.9080333715026714
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token1 = xPathLexer1.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("G~!WrL");
      xPathLexer1.number();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer(")");
      xPathLexer3.literal();
      xPathLexer3.number();
      Token token2 = xPathLexer1.nextToken();
      assertEquals("oY", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("~", token3.getTokenText());
      
      Token token4 = xPathLexer3.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer2.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      xPathLexer5.number();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer4.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer5.not();
      assertEquals("[", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.doubleColon();
      assertEquals(19, token9.getTokenType());
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.008724243185985
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("t2H}||:7");
      xPathLexer0.plus();
      xPathLexer0.or();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-1854));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.0283702146571208
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.star();
      xPathLexer1.rightParen();
      xPathLexer1.not();
      xPathLexer0.nextToken();
      xPathLexer1.dollar();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.at();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("sU\"4^+tNk");
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer("nnt");
      xPathLexer0.nextToken();
      xPathLexer2.colon();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.9956472094733329
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNNk%");
      Token token0 = xPathLexer1.dollar();
      assertEquals("Q", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer1.colon();
      assertEquals("o", token1.getTokenText());
      
      xPathLexer1.number();
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('Z');
      assertTrue(boolean0);
      
      Token token2 = xPathLexer1.identifierOrOperatorName();
      assertEquals("Y", token2.getTokenText());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer1.setXPath("");
      xPathLexer0.isIdentifierChar('Z');
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(", (O!1h3wCpT \"");
      xPathLexer2.number();
      xPathLexer0.nextToken();
      Token token6 = xPathLexer1.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer3 = new XPathLexer(", (O!1h3wCpT \"");
      Token token7 = xPathLexer2.nextToken();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.doubleColon();
      Token token8 = xPathLexer3.comma();
      assertEquals(",", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.pipe();
      Token token9 = xPathLexer5.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer0.and();
      xPathLexer3.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer3.number();
      assertEquals(30, token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      xPathLexer4.leftBracket();
      Token token12 = xPathLexer2.pipe();
      assertEquals(" ", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token13 = xPathLexer7.identifier();
      assertEquals(15, token13.getTokenType());
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.7772557408478338
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.at();
      assertEquals(16, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("$gDm@?a2xUVnQq.");
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("1b+");
      Token token7 = xPathLexer4.nextToken();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals("$g", token9.getTokenText());
      
      xPathLexer4.div();
      Token token10 = xPathLexer4.number();
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer4.literal();
      assertNull(token11);
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("F;AY&18Fm+u?");
      xPathLexer0.number();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.leftParen();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token12 = xPathLexer6.plus();
      assertEquals("F", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer3.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.9642775359843476
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer1.colon();
      XPathLexer xPathLexer3 = new XPathLexer("0q~b=3e/m");
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer2.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer4.slashes();
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer3.nextToken();
      assertEquals(30, token4.getTokenType());
      assertEquals("0", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer5.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.notEquals();
      xPathLexer3.div();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.literal();
      xPathLexer5.div();
      xPathLexer0.mod();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token6 = xPathLexer8.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer5.and();
      xPathLexer7.whitespace();
      xPathLexer6.operatorName();
      Token token8 = xPathLexer4.dots();
      assertEquals(13, token8.getTokenType());
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.5235988288727675
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer0.and();
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.pipe();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer1.and();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer2.consume((-692));
      XPathLexer xPathLexer3 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer3.dots();
      xPathLexer3.relationalOperator();
      xPathLexer3.consume(1);
      xPathLexer0.and();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.dots();
      xPathLexer2.plus();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer2.literal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.234504991688189
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.rightBracket();
      xPathLexer0.literal();
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(']');
      assertFalse(boolean0);
      
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.setXPath("`Ve3LA\"ivxfqxh|?^)");
      xPathLexer0.isIdentifierChar(']');
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("V", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("e", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      xPathLexer0.div();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("3", token6.getTokenText());
      assertEquals(30, token6.getTokenType());
      
      xPathLexer0.literal();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
      
      xPathLexer0.div();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      xPathLexer0.setXPath("");
      xPathLexer0.literal();
      xPathLexer0.setXPath("UF}b");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.8169487359378573
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer1.dollar();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("~IvgVt#onYKh");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("VW'}o,G<p\"6`McC!Qp7");
      xPathLexer1.dollar();
      xPathLexer1.nextToken();
      xPathLexer1.rightBracket();
      xPathLexer3.nextToken();
      xPathLexer2.literal();
      XPathLexer xPathLexer4 = new XPathLexer("VW'}o,G<p\"6`McC!Qp7");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer2.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.leftBracket();
      xPathLexer6.pipe();
      xPathLexer5.equals();
      Token token0 = xPathLexer6.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.3272641720511937
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer2.doubleColon();
      token1.toString();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.consume((-107));
      xPathLexer0.minus();
      token1.toString();
      XPathLexer xPathLexer3 = new XPathLexer("[ (19) (co)");
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("(`>3b}irv2OYJmu(");
      // Undeclared exception!
      try { 
        xPathLexer0.number();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.0635268279179164
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("h", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals("&", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("hn&;x$=%");
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer0.number();
      Token token4 = xPathLexer2.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("%", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("hn&;x$=%");
      Token token5 = xPathLexer2.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      assertEquals("Y", token6.getTokenText());
      
      Token token7 = xPathLexer3.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer4 = new XPathLexer("hn&;x$=%");
      xPathLexer1.nextToken();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("$", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.operatorName();
      xPathLexer2.mod();
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      assertEquals(";", token9.getTokenText());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.0323423405443175
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("BrQ8<");
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.rightParen();
      assertEquals("r", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(".w", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.Token", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.pipe();
      Token token7 = xPathLexer1.at();
      assertEquals("", token7.getTokenText());
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.comma();
      Token token9 = xPathLexer1.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      Token token10 = xPathLexer1.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer1.star();
      assertEquals(20, token12.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token13 = xPathLexer2.number();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer1.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer2.pipe();
      assertEquals(17, token15.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.7318095426945699
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("|wwna\"2I#>,|a");
      xPathLexer1.dollar();
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer3.comma();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer("w-wP");
      xPathLexer3.number();
      xPathLexer1.nextToken();
      xPathLexer2.plus();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.32551864422612
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.whitespace();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('<');
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertNull(token3);
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftBracket();
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.setXPath(", (O!1h3wCpT \"");
      xPathLexer0.rightBracket();
      boolean boolean1 = xPathLexer0.isIdentifierChar('`');
      assertTrue(boolean1 == boolean0);
      
      xPathLexer0.whitespace();
      xPathLexer0.operatorName();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.at();
      assertEquals(16, token7.getTokenType());
      assertEquals("O", token7.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer1.literal();
      assertNull(token8);
      
      Token token9 = xPathLexer0.comma();
      assertEquals(32, token9.getTokenType());
      assertEquals("1", token9.getTokenText());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer0.div();
      Token token11 = xPathLexer0.literal();
      assertNull(token11);
      
      xPathLexer1.setXPath(", (O!1h3wCpT \"");
      xPathLexer0.setXPath(", (O!1h3wCpT \"");
      Token token12 = xPathLexer1.not();
      assertEquals(23, token12.getTokenType());
      assertEquals(",", token12.getTokenText());
      
      xPathLexer1.or();
      Token token13 = xPathLexer1.number();
      assertEquals(30, token13.getTokenType());
      
      xPathLexer1.mod();
      Token token14 = xPathLexer1.minus();
      assertEquals(6, token14.getTokenType());
      assertEquals(" ", token14.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.1578368230285783
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      Token token0 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer2.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      xPathLexer2.at();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(") (");
      XPathLexer xPathLexer4 = new XPathLexer("[W{HTAG2Gv'");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.number();
      Token token3 = xPathLexer5.at();
      assertEquals(16, token3.getTokenType());
      
      Token token4 = xPathLexer1.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals(")", token4.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("RzHZZgb");
      xPathLexer4.number();
      xPathLexer4.literal();
      xPathLexer1.literal();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token5 = xPathLexer4.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer6.comma();
      assertEquals(32, token6.getTokenType());
      assertEquals("R", token6.getTokenText());
      
      xPathLexer5.number();
      Token token7 = xPathLexer7.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer3.whitespace();
      assertEquals((-2), token8.getTokenType());
      
      Token token9 = xPathLexer3.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token10 = xPathLexer1.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer1.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer2.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer3.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer7.dots();
      assertEquals(13, token15.getTokenType());
      
      Token token16 = xPathLexer3.rightParen();
      assertEquals(2, token16.getTokenType());
  }

  /**
  //Test case number: 51
  /*Coverage entropy=2.2690686094748096
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.mod();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("w", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.not();
      assertEquals("k", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("en.saxpath.Token", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.setXPath("hn&;x$%");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.setXPath("`n:j{pZb#$^KHQz5");
      xPathLexer1.or();
      XPathLexer xPathLexer2 = new XPathLexer("");
      boolean boolean0 = xPathLexer2.isIdentifierChar('z');
      assertTrue(boolean0);
      
      xPathLexer2.whitespace();
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer1.at();
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer1.notEquals();
      assertEquals("n:", token6.getTokenText());
      
      xPathLexer0.number();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      
      xPathLexer1.literal();
      Token token8 = xPathLexer1.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer1.literal();
      assertNull(token10);
      
      xPathLexer2.setXPath("");
      Token token11 = xPathLexer1.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer1.whitespace();
      assertEquals((-2), token12.getTokenType());
      assertEquals("", token12.getTokenText());
      
      Token token13 = xPathLexer0.plus();
      assertEquals("n", token13.getTokenText());
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer1.rightBracket();
      assertEquals(4, token14.getTokenType());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=2.0783545455639976
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.rightParen();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer1.and();
      xPathLexer0.identifier();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer2.consume((-692));
      XPathLexer xPathLexer3 = new XPathLexer("QoY?~^$ox)wuMNk%");
      XPathLexer xPathLexer4 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      xPathLexer2.notEquals();
      xPathLexer2.comma();
      xPathLexer1.div();
      xPathLexer4.literal();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.setXPath("com.werken.saxpath.XPathLexer");
      xPathLexer1.number();
      xPathLexer3.or();
      // Undeclared exception!
      try { 
        xPathLexer2.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.0833888809457015
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("om", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("w", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.whitespace();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer2.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.literal();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token9 = xPathLexer5.comma();
      assertEquals("c", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer4.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token10 = xPathLexer6.colon();
      assertEquals(18, token10.getTokenType());
      
      xPathLexer4.number();
      Token token11 = xPathLexer6.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer3.number();
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer1.pipe();
      assertEquals(17, token13.getTokenType());
      assertEquals("L", token13.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer3.literal();
      Token token14 = xPathLexer7.slashes();
      assertEquals(11, token14.getTokenType());
      
      Token token15 = xPathLexer3.whitespace();
      assertEquals((-2), token15.getTokenType());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=2.001244319126584
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer1.number();
      xPathLexer1.or();
      Token token1 = xPathLexer1.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      Token token3 = xPathLexer0.number();
      assertEquals("", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("U", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      assertEquals("\"", token5.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer2.div();
      xPathLexer2.number();
      xPathLexer2.literal();
      Token token6 = xPathLexer0.notEquals();
      assertEquals("+t", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      xPathLexer1.div();
      Token token7 = xPathLexer3.literal();
      assertNull(token7);
      
      xPathLexer3.div();
      xPathLexer1.mod();
      xPathLexer1.leftParen();
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8838885910819987
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("hn&x$%");
      Token token0 = xPathLexer1.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.colon();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.number();
      xPathLexer1.relationalOperator();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("`ydKd");
      xPathLexer2.literal();
      xPathLexer2.number();
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer2.nextToken();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      Token token3 = xPathLexer1.at();
      assertEquals("&", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer("`ydKd");
      Token token4 = xPathLexer3.nextToken();
      assertEquals("`ydKd", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer3.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("`", token6.getTokenText());
      
      xPathLexer5.relationalOperator();
      Token token7 = xPathLexer4.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals("`", token7.getTokenText());
      
      xPathLexer4.and();
      xPathLexer5.setPreviousToken((Token) null);
      Token token8 = xPathLexer4.identifierOrOperatorName();
      assertEquals("ydKd", token8.getTokenText());
      
      Token token9 = xPathLexer5.number();
      assertEquals(30, token9.getTokenType());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.710883458133188
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("h", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("n", token1.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.div();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals(";", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer(":c?Bm#");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(18, token3.getTokenType());
      assertEquals(":", token3.getTokenText());
      
      xPathLexer0.comma();
      Token token4 = xPathLexer2.notEquals();
      assertEquals(22, token4.getTokenType());
      
      xPathLexer2.div();
      Token token5 = xPathLexer0.number();
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("$", token6.getTokenText());
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.comma();
      assertEquals("c", token7.getTokenText());
      assertEquals(32, token7.getTokenType());
      
      xPathLexer2.colon();
      Token token8 = xPathLexer2.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token9 = xPathLexer3.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.1355686072930498
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("hn&x$%");
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      xPathLexer1.whitespace();
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("hn&x$%");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("hn&x$%");
      XPathLexer xPathLexer4 = new XPathLexer("oYsXa{YQ|vz");
      Token token4 = xPathLexer4.dots();
      assertEquals("o", token4.getTokenText());
      assertEquals(13, token4.getTokenType());
      
      Token token5 = xPathLexer2.at();
      assertEquals(16, token5.getTokenType());
      assertEquals("h", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("w-wP");
      xPathLexer2.number();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.literal();
      assertNull(token6);
      
      Token token7 = xPathLexer3.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer4.comma();
      assertEquals("{", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      xPathLexer7.number();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer8.colon();
      assertEquals(18, token9.getTokenType());
      
      xPathLexer6.number();
      Token token10 = xPathLexer3.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("&", token10.getTokenText());
      
      xPathLexer6.or();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token11 = xPathLexer4.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer5.leftBracket();
      assertEquals("w", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer8.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer2.equals();
      assertEquals("n", token14.getTokenText());
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer1.literal();
      assertNull(token15);
      
      Token token16 = xPathLexer2.slashes();
      assertEquals(11, token16.getTokenType());
      assertEquals("&", token16.getTokenText());
      
      Token token17 = xPathLexer4.whitespace();
      assertEquals("", token17.getTokenText());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=3.2610327260865284
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.dollar();
      Token token5 = xPathLexer0.minus();
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      token4.toString();
      String string1 = token3.toString();
      assertEquals("[ (4) (e)", string1);
      
      Token token6 = xPathLexer0.dollar();
      String string2 = token5.toString();
      assertEquals("[ (6) (k)", string2);
      
      Token token7 = xPathLexer0.dots();
      assertEquals(14, token7.getTokenType());
      assertEquals("n.", token7.getTokenText());
      
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      String string3 = token1.toString();
      assertEquals("[ (2) (m)", string3);
      
      String string4 = token4.toString();
      assertEquals("[ (26) (r)", string4);
      
      Token token9 = xPathLexer0.number();
      String string5 = token9.toString();
      assertEquals("[ (30) ()", string5);
      
      XPathLexer xPathLexer1 = new XPathLexer(".JN");
      Token token10 = xPathLexer1.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals(".", token10.getTokenText());
      
      xPathLexer1.setPreviousToken(token6);
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer2.number();
      xPathLexer2.doubleColon();
      Token token11 = xPathLexer1.identifier();
      assertEquals(15, token11.getTokenType());
      assertEquals("JN", token11.getTokenText());
      
      Token token12 = xPathLexer2.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.698796920554069
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer1.rightParen();
      assertEquals("c", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer2.doubleColon();
      token2.toString();
      xPathLexer1.setPreviousToken(token0);
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("m", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.consume((-107));
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      
      String string1 = token2.toString();
      assertEquals("[ (19) (co)", string1);
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (19) (co)");
      Token token5 = xPathLexer3.dollar();
      assertEquals(26, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      xPathLexer3.plus();
      Token token6 = xPathLexer2.dots();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer4.literal();
      assertNull(token7);
      
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("w", token8.getTokenText());
      
      xPathLexer4.setPreviousToken(token6);
      assertEquals("m.", token6.getTokenText());
      assertEquals(14, token6.getTokenType());
      
      Token token9 = xPathLexer4.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer3.number();
      assertEquals(30, token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer2.doubleColon();
      assertEquals("er", token11.getTokenText());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=2.1755959997863434
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.not();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("o", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("m.", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      xPathLexer0.or();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.XPathLexer", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.comma();
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer(">KG;4i_lm");
      Token token8 = xPathLexer2.nextToken();
      assertEquals(9, token8.getTokenType());
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer2.comma();
      assertEquals("K", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      xPathLexer1.number();
      Token token10 = xPathLexer2.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("G", token10.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(">KG;4i_lm");
      Token token11 = xPathLexer3.star();
      assertEquals(">", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token12 = xPathLexer4.pipe();
      assertEquals(17, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer4.whitespace();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token13 = xPathLexer6.at();
      assertEquals(16, token13.getTokenType());
      assertEquals("c", token13.getTokenText());
      
      Token token14 = xPathLexer3.equals();
      assertEquals(21, token14.getTokenType());
      assertEquals("K", token14.getTokenText());
      
      Token token15 = xPathLexer2.whitespace();
      assertEquals((-2), token15.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.2751947222455353
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("rk", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("n.saxpath.Token", token5.getTokenText());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.pipe();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token10 = xPathLexer1.literal();
      assertNull(token10);
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer3 = new XPathLexer("y0Iia}~)");
      Token token11 = xPathLexer3.star();
      assertEquals("y", token11.getTokenText());
      assertEquals(20, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y0Iia}~)");
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.number();
      Token token12 = xPathLexer0.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer4.pipe();
      assertEquals("y", token13.getTokenText());
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer1.equals();
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer3.number();
      assertEquals("0", token15.getTokenText());
      assertEquals(30, token15.getTokenType());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.0473893489163038
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      xPathLexer0.setXPath("[ (");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer2.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer4 = new XPathLexer("<hY@\",8$(W:F,");
      Token token10 = xPathLexer4.nextToken();
      assertEquals(7, token10.getTokenType());
      assertEquals("<", token10.getTokenText());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("h", token11.getTokenText());
      
      xPathLexer3.number();
      Token token12 = xPathLexer4.colon();
      assertEquals("Y", token12.getTokenText());
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer1.star();
      assertEquals(20, token13.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token14 = xPathLexer5.number();
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer5.leftBracket();
      assertEquals(3, token15.getTokenType());
      
      Token token16 = xPathLexer5.pipe();
      assertEquals(17, token16.getTokenType());
      
      Token token17 = xPathLexer1.equals();
      assertEquals(21, token17.getTokenType());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0631996544576263
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$%");
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("n", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.slashes();
      assertEquals("&", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals(";", token3.getTokenText());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("x", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.comma();
      assertEquals(32, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("f)G");
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer("vOiU>ilJ");
      Token token7 = xPathLexer4.literal();
      assertNull(token7);
      
      XPathLexer xPathLexer5 = new XPathLexer("hn&;x$%");
      xPathLexer1.identifier();
      xPathLexer0.or();
      Token token8 = xPathLexer5.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.leftBracket();
      Token token9 = xPathLexer1.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer4.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals(3, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.2018742761743444
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("lap\"zqV2[,\"Kjld12<");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("lap\"zqV2[,\"Kjld12<");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("lap\"zqV2[,\"Kjld12<");
      xPathLexer0.literal();
      XPathLexer xPathLexer4 = new XPathLexer("JRMYZk7Zi X*7][_aI");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.identifier();
      xPathLexer3.or();
      xPathLexer1.number();
      xPathLexer0.leftBracket();
      Token token0 = xPathLexer4.getPreviousToken();
      assertNull(token0);
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.9314972218822353
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("hn&x$%");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.number();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("`ydKd");
      xPathLexer2.literal();
      Token token1 = xPathLexer3.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("`y", token1.getTokenText());
      
      xPathLexer2.number();
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("hn", token2.getTokenText());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer0.literal();
      XPathLexer xPathLexer4 = new XPathLexer(">KG;4i_lm");
      xPathLexer1.nextToken();
      Token token4 = xPathLexer1.comma();
      assertEquals(32, token4.getTokenType());
      assertEquals("&", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals("", token5.getTokenText());
      
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer4.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer3.leftBracket();
      assertEquals("d", token9.getTokenText());
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer1.pipe();
      assertEquals("x", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals("$", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9333682517949864
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.nextToken();
      xPathLexer0.literal();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.8915516280847595
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      Token token0 = xPathLexer1.dollar();
      assertEquals("[", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer1.colon();
      assertEquals(" ", token1.getTokenText());
      
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer1.number();
      xPathLexer0.relationalOperator();
      xPathLexer0.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("FV@L?_a");
      xPathLexer1.literal();
      xPathLexer0.number();
      Token token2 = xPathLexer1.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer2.nextToken();
      assertEquals("[", token3.getTokenText());
      
      Token token4 = xPathLexer1.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      Token token5 = xPathLexer3.nextToken();
      assertEquals("FV", token5.getTokenText());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer3.number();
      Token token7 = xPathLexer1.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer1.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer1.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer5.identifier();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer1.at();
      assertEquals(16, token12.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.9945484255507777
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.leftBracket();
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer("Soy`\"?GDqUiq0B0|L");
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      xPathLexer0.colon();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer1.number();
      xPathLexer1.leftBracket();
      xPathLexer2.pipe();
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      xPathLexer1.literal();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.885037419608798
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      Token token0 = xPathLexer0.slashes();
      assertEquals("s", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dollar();
      Token token1 = xPathLexer1.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer1.or();
      Token token2 = xPathLexer1.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.comma();
      Token token5 = xPathLexer3.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer4 = new XPathLexer("Ft64N");
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("G`w?XcP0)");
      xPathLexer5.number();
      Token token8 = xPathLexer4.colon();
      assertEquals(18, token8.getTokenType());
      assertEquals("F", token8.getTokenText());
      
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.number();
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer6.pipe();
      assertEquals(17, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("V,FKUD-5YD\"V~");
      Token token12 = xPathLexer7.plus();
      assertEquals("V", token12.getTokenText());
      assertEquals(5, token12.getTokenType());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer3.number();
      assertEquals(30, token14.getTokenType());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0772425062906734
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.dollar();
      Token token5 = xPathLexer0.minus();
      assertEquals(6, token5.getTokenType());
      assertEquals("k", token5.getTokenText());
      
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      String string1 = token4.toString();
      assertEquals("[ (26) (r)", string1);
      
      String string2 = token3.toString();
      assertEquals("[ (4) (e)", string2);
      
      xPathLexer0.dollar();
      Token token6 = xPathLexer0.plus();
      assertEquals("n", token6.getTokenText());
      
      String string3 = token1.toString();
      assertEquals("[ (2) (m)", string3);
      
      Token token7 = xPathLexer0.dots();
      assertEquals(".", token7.getTokenText());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("saxpath.XPathLexer", token8.getTokenText());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.colon();
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer2.or();
      xPathLexer0.and();
      xPathLexer1.setPreviousToken((Token) null);
      xPathLexer2.identifierOrOperatorName();
      Token token11 = xPathLexer1.slashes();
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.doubleColon();
      assertEquals(19, token12.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.8979647333310474
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("T|W)=3g0^,D");
      xPathLexer1.dollar();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("G~!WrL");
      xPathLexer2.number();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.literal();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer2.rightParen();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.leftParen();
      xPathLexer3.comma();
      xPathLexer3.notEquals();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.div();
      xPathLexer3.literal();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.2236228519647643
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.star();
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer1.rightParen();
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer1.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      Token token4 = xPathLexer1.dollar();
      Token token5 = xPathLexer1.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer2.at();
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals("om.werken.saxpath.Token", token7.getTokenText());
      
      Token token8 = xPathLexer0.whitespace();
      assertEquals("", token8.getTokenText());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      xPathLexer0.at();
      XPathLexer xPathLexer3 = new XPathLexer("sU\"4^+tNk");
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer("nnt");
      Token token10 = xPathLexer0.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.relationalOperator();
      Token token12 = xPathLexer4.literal();
      assertEquals(27, token12.getTokenType());
      assertNotNull(token12);
      
      xPathLexer5.and();
      xPathLexer5.setPreviousToken(token4);
      assertEquals(26, token4.getTokenType());
      
      Token token13 = xPathLexer5.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
      
      Token token14 = xPathLexer2.number();
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer5.whitespace();
      assertEquals((-2), token15.getTokenType());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.2633186926991025
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.at();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("hn&;x$=%");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("T(rK8<?m8F");
      XPathLexer xPathLexer5 = new XPathLexer("T(rK8<?m8F");
      xPathLexer5.number();
      xPathLexer5.nextToken();
      xPathLexer1.comma();
      xPathLexer1.number();
      xPathLexer2.colon();
      xPathLexer5.star();
      xPathLexer2.or();
      xPathLexer4.number();
      xPathLexer1.leftBracket();
      xPathLexer4.pipe();
      xPathLexer1.equals();
      xPathLexer1.equals();
      xPathLexer5.plus();
      xPathLexer2.dots();
      Token token0 = xPathLexer3.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.011265575053402
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("co", token0.getTokenText());
      assertEquals(22, token0.getTokenType());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("m", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals("w", token3.getTokenText());
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.number();
      Token token5 = xPathLexer1.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals("c", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer2.pipe();
      assertEquals("o", token7.getTokenText());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.nextToken();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer3.number();
      Token token9 = xPathLexer1.colon();
      assertEquals("^", token9.getTokenText());
      
      Token token10 = xPathLexer1.star();
      assertEquals(20, token10.getTokenType());
      assertEquals("R", token10.getTokenText());
      
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer5.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer2.leftBracket();
      assertEquals("m", token12.getTokenText());
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer5.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer4.equals();
      assertEquals(21, token14.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.2128404659117615
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(']');
      assertFalse(boolean0);
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer("yaEgUw)m]o");
      xPathLexer2.nextToken();
      Token token5 = xPathLexer1.literal();
      assertEquals(27, token5.getTokenType());
      assertNotNull(token5);
      assertEquals("Y", token5.getTokenText());
      
      Token token6 = xPathLexer2.comma();
      assertEquals(")", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer1.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals("TE", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.div();
      xPathLexer3.consume();
      Token token8 = xPathLexer2.literal();
      assertNull(token8);
      
      XPathLexer xPathLexer4 = new XPathLexer("`Ve3LA\"ivxfqxh|?^)");
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("S:&<Vw/C");
      Token token9 = xPathLexer6.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer0.number();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer1.plus();
      assertEquals("U", token10.getTokenText());
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer5.identifierOrOperatorName();
      assertEquals(15, token11.getTokenType());
      
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.9055144642572304
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("m", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals(".", token2.getTokenText());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("w", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("erken.saxpath.Token", token4.getTokenText());
      
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer3 = new XPathLexer("p}xGGJHlV]BXk_");
      xPathLexer2.number();
      Token token5 = xPathLexer0.at();
      assertEquals(16, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer1.number();
      xPathLexer2.nextToken();
      xPathLexer2.literal();
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer6.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer2.comma();
      assertEquals(32, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token8 = xPathLexer5.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer2.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer8 = new XPathLexer("");
      xPathLexer6.number();
      Token token10 = xPathLexer7.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=2.3444774838987366
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("w", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals("e", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("rk", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("n.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.pipe();
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer3 = new XPathLexer("y0Iia}~)");
      Token token10 = xPathLexer2.comma();
      assertEquals("c", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer6 = new XPathLexer("3lr;BTa%&'ae|.9");
      Token token12 = xPathLexer6.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer6.leftBracket();
      assertEquals("l", token13.getTokenText());
      assertEquals(3, token13.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token14 = xPathLexer5.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer0.whitespace();
      assertEquals((-2), token15.getTokenType());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.280369229178316
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals(26, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("erken.saxpath.Token", token3.getTokenText());
      
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer1.doubleColon();
      assertEquals(19, token6.getTokenType());
      assertEquals("^R", token6.getTokenText());
      
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("4", token8.getTokenText());
      
      xPathLexer2.slashes();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.literal();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.nextToken();
      Token token9 = xPathLexer1.identifier();
      assertEquals("LN5G", token9.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.literal();
      xPathLexer3.whitespace();
      xPathLexer1.star();
      Token token10 = xPathLexer5.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer4.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("c", token11.getTokenText());
      
      xPathLexer5.equals();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer1.slashes();
      assertEquals("&", token13.getTokenText());
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer6.number();
      assertEquals(30, token14.getTokenType());
      
      Token token15 = xPathLexer1.equals();
      assertEquals(21, token15.getTokenType());
      assertEquals("Q", token15.getTokenText());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.0134164498001166
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^8tCk");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("s", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("U", token1.getTokenText());
      
      Token token2 = xPathLexer1.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer1.number();
      xPathLexer1.operatorName();
      Token token3 = xPathLexer1.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("sU\"4^8tCk");
      Token token4 = xPathLexer2.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("sU", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer2.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("\"", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("", token6.getTokenText());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer2.div();
      Token token8 = xPathLexer2.number();
      assertEquals("4", token8.getTokenText());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer1.div();
      Token token10 = xPathLexer3.literal();
      assertNull(token10);
      
      xPathLexer3.div();
      xPathLexer1.mod();
      Token token11 = xPathLexer1.leftParen();
      assertEquals(1, token11.getTokenType());
      
      xPathLexer0.rightParen();
      Token token12 = xPathLexer1.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.118554652239034
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.comma();
      xPathLexer0.consume((-766));
      xPathLexer0.notEquals();
      xPathLexer0.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.6595071611942656
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("|wwna\"2I#>,|a");
      xPathLexer1.dollar();
      xPathLexer1.notEquals();
      xPathLexer1.rightBracket();
      xPathLexer1.rightParen();
      xPathLexer0.not();
      xPathLexer0.plus();
      xPathLexer0.rightBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer3.dots();
      xPathLexer3.at();
      XPathLexer xPathLexer4 = new XPathLexer("w-wP");
      xPathLexer3.number();
      xPathLexer1.nextToken();
      xPathLexer3.literal();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.4410600467407855
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BrQ8<");
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.nextToken();
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.7109530969860969
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      xPathLexer0.leftParen();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.div();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer(":c?Bm#");
      xPathLexer0.number();
      xPathLexer1.nextToken();
      xPathLexer1.star();
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer1.div();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      xPathLexer1.comma();
      xPathLexer1.colon();
      xPathLexer0.star();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer2.number();
      xPathLexer2.leftBracket();
      xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-20));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.9491158690834052
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.or();
      Token token0 = xPathLexer2.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer1.dots();
      assertEquals(13, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer0.nextToken();
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      XPathLexer xPathLexer3 = new XPathLexer("hu");
      Token token4 = xPathLexer2.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("m.werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer2.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer("w`<]i56");
      Token token6 = xPathLexer2.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer3.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("h", token7.getTokenText());
      
      Token token8 = xPathLexer2.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      assertEquals("u", token10.getTokenText());
      
      Token token11 = xPathLexer3.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer2.equals();
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.271051068473006
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("ke", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("n", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(13, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("s", token4.getTokenText());
      
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.at();
      assertEquals("x", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.currentPosition();
      xPathLexer0.or();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.and();
      int int0 = xPathLexer2.currentPosition();
      Token token8 = xPathLexer2.slashes();
      assertEquals("c", token8.getTokenText());
      
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("hn&;x$%");
      xPathLexer3.identifierOrOperatorName();
      Token token9 = xPathLexer2.colon();
      assertEquals("o", token9.getTokenText());
      assertEquals(18, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals("p", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer0.slashes();
      assertEquals("a", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer3.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer2.identifier();
      assertEquals("m.werken.saxpath.Token", token15.getTokenText());
      assertEquals(15, token15.getTokenType());
      
      int int1 = xPathLexer4.currentPosition();
      assertTrue(int1 == int0);
  }

  /**
  //Test case number: 86
  /*Coverage entropy=3.1079382693352433
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("&}m89");
      xPathLexer0.pipe();
      xPathLexer0.consume((-424));
      xPathLexer0.equals();
      xPathLexer0.plus();
      xPathLexer0.at();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.7079599475068634
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      String string0 = token0.toString();
      assertEquals("[ (23) (c)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      String string1 = token2.toString();
      assertEquals("[ (19) (.w)", string1);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("e", token3.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.consume(1);
      Token token4 = xPathLexer0.minus();
      token4.toString();
      token4.toString();
      token4.toString();
      String string2 = token4.toString();
      assertEquals("[ (6) (e)", string2);
      
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer0.consume();
      Token token5 = xPathLexer0.dots();
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer0.literal();
      assertNotNull(token6);
      
      token6.toString();
      token6.toString();
      String string3 = token6.toString();
      assertEquals("[ (27) (path.XPathLe)", string3);
      
      Token token7 = xPathLexer0.plus();
      assertEquals("e", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      xPathLexer0.setPreviousToken(token6);
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      xPathLexer0.mod();
      Token token9 = xPathLexer0.slashes();
      assertEquals("r", token9.getTokenText());
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.6642168645091808
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.slashes();
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer3 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer1.number();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token1 = xPathLexer4.at();
      assertEquals("c", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("!otEzhh|s!Hwgu)Rt&");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.not();
      xPathLexer6.number();
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      XPathLexer xPathLexer7 = new XPathLexer("fk");
      Token token3 = xPathLexer3.leftParen();
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer5.nextToken();
      assertEquals("!", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer7.comma();
      assertEquals(32, token5.getTokenType());
      
      xPathLexer2.colon();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer2.or();
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token7 = xPathLexer2.number();
      assertEquals(30, token7.getTokenType());
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer3.pipe();
      assertEquals(17, token9.getTokenType());
      assertEquals("Y", token9.getTokenText());
      
      XPathLexer xPathLexer9 = new XPathLexer("\\j(.lv%HNaryrVV`a ");
      Token token10 = xPathLexer9.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("\\", token10.getTokenText());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.3059283800901027
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("m", token1.getTokenText());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals(".w", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.div();
      Token token3 = xPathLexer0.star();
      assertEquals("r", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('\'');
      assertFalse(boolean0);
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token5 = xPathLexer2.slashes();
      assertEquals("c", token5.getTokenText());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals("om.werken.saxpath.Token", token6.getTokenText());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.literal();
      assertNotNull(token8);
      assertEquals(27, token8.getTokenType());
      assertEquals("n.saxpath.Tok", token8.getTokenText());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer2.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("oQ-fD");
      Token token10 = xPathLexer4.nextToken();
      assertEquals(15, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer3.equals();
      Token token11 = xPathLexer3.leftParen();
      assertEquals(1, token11.getTokenType());
      
      Token token12 = xPathLexer3.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer4.comma();
      assertEquals(32, token13.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer1.mod();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer2.or();
      Token token14 = xPathLexer6.slashes();
      assertEquals(11, token14.getTokenType());
      
      xPathLexer3.equals();
      Token token15 = xPathLexer2.equals();
      assertEquals(21, token15.getTokenType());
      
      Token token16 = xPathLexer4.dots();
      assertEquals(13, token16.getTokenType());
      
      Token token17 = xPathLexer1.dollar();
      assertEquals(26, token17.getTokenType());
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.0182759706072693
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = "com.werken.saxpath.Token";
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.consume((-107));
      xPathLexer0.minus();
      // Undeclared exception!
      try { 
        xPathLexer0.literal();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=3.6361240860879205
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.comma();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.minus();
      assertEquals("c", token1.getTokenText());
      assertEquals(6, token1.getTokenType());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.identifier();
      assertEquals("om.werken.saxpath.Token", token2.getTokenText());
      
      xPathLexer0.star();
      xPathLexer0.consume(0);
      xPathLexer0.dots();
      xPathLexer0.consume(1);
      xPathLexer0.and();
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.getXPath();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token6 = xPathLexer1.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer1.setPreviousToken((Token) null);
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.mod();
      Token token7 = xPathLexer2.rightBracket();
      assertEquals("c", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
      assertEquals("om", token8.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token9.getTokenType());
      assertNotNull(token9);
      
      Token token10 = xPathLexer1.colon();
      assertEquals(18, token10.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.965583140602932
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{om.werkn.saxpath.XPathLexer");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals("{", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token1 = xPathLexer3.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      Token token2 = xPathLexer1.dots();
      assertEquals(13, token2.getTokenType());
      
      Token token3 = xPathLexer2.leftParen();
      assertEquals("c", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("{om.werkn.saxpath.XPathLexer");
      xPathLexer5.operatorName();
      Token token4 = xPathLexer4.colon();
      assertEquals(18, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer0.star();
      assertEquals("o", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      xPathLexer4.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.leftBracket();
      xPathLexer6.pipe();
      Token token6 = xPathLexer3.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer6.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      xPathLexer6.pipe();
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      Token token9 = xPathLexer2.rightParen();
      assertEquals(2, token9.getTokenType());
      assertEquals("o", token9.getTokenText());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4520373981675865
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("QoY?~^$ox)wuMNk%");
      Token token1 = xPathLexer1.dollar();
      assertEquals("Q", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer("QoY?~^$ox)wuMNk%");
      xPathLexer0.div();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer3.slashes();
      assertEquals("Q", token2.getTokenText());
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("Y", token3.getTokenText());
      
      Token token4 = xPathLexer3.operatorName();
      assertNull(token4);
      
      xPathLexer0.mod();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=3.124371003448087
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$%");
      xPathLexer0.rightBracket();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      xPathLexer0.div();
      xPathLexer0.dollar();
      xPathLexer0.consume((-1644));
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.8582710085835656
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.leftParen();
      xPathLexer0.LA(0);
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=2.055908297404537
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.not();
      assertEquals(23, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.colon();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("t:ZS2H}||:7~");
      boolean boolean0 = xPathLexer1.isIdentifierStartChar('R');
      assertTrue(boolean0);
      
      Token token7 = xPathLexer1.identifier();
      assertEquals(15, token7.getTokenType());
      assertEquals("t", token7.getTokenText());
      
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token8 = xPathLexer1.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("S", token9.getTokenText());
      
      Token token10 = xPathLexer2.nextToken();
      assertEquals((-1), token10.getTokenType());
      
      xPathLexer2.operatorName();
      xPathLexer2.operatorName();
      xPathLexer0.mod();
      Token token11 = xPathLexer1.slashes();
      assertEquals("2", token11.getTokenText());
      assertEquals(11, token11.getTokenType());
      
      Token token12 = xPathLexer2.leftBracket();
      assertEquals(3, token12.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.517578599995427
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.whitespace();
      assertEquals((-2), token6.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.leftBracket();
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.literal();
      xPathLexer0.literal();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer0.leftBracket();
      assertEquals(3, token10.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.765468296811773
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      xPathLexer0.star();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.getPreviousToken();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.div();
      xPathLexer0.number();
      xPathLexer0.identifier();
      xPathLexer0.nextToken();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.not();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.slashes();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=2.0795166087198003
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("sU\"4^+tNk");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dollar();
      xPathLexer1.number();
      xPathLexer1.or();
      xPathLexer1.rightBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer2.div();
      xPathLexer2.number();
      xPathLexer2.literal();
      xPathLexer0.dots();
      xPathLexer1.literal();
      token0.toString();
      xPathLexer2.plus();
      xPathLexer0.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.leftBracket();
      xPathLexer0.getPreviousToken();
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.044292334458902
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer("7]~m");
      xPathLexer3.number();
      xPathLexer2.relationalOperator();
      Token token0 = xPathLexer2.identifier();
      assertEquals("", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("FV@L?_a");
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
      
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer3.nextToken();
      assertEquals("]", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(")", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("7]~m");
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer5.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer6 = new XPathLexer(") (");
      Token token7 = xPathLexer1.nextToken();
      assertEquals(1, token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer1.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token9 = xPathLexer8.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer2.notEquals();
      assertEquals(") ", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      xPathLexer7.mod();
      XPathLexer xPathLexer9 = new XPathLexer();
      Token token11 = xPathLexer9.slashes();
      assertEquals(11, token11.getTokenType());
      
      xPathLexer6.mod();
      Token token12 = xPathLexer3.pipe();
      assertEquals("~", token12.getTokenText());
      assertEquals(17, token12.getTokenType());
      
      XPathLexer xPathLexer10 = new XPathLexer("FV@L?_a");
      Token token13 = xPathLexer10.colon();
      assertEquals(18, token13.getTokenType());
      assertEquals("F", token13.getTokenText());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=2.1543984133298237
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.dollar();
      assertEquals("c", token0.getTokenText());
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.not();
      assertEquals("e", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("rken.saxpath.Token", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer0.identifier();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.number();
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer2.slashes();
      assertEquals(11, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.at();
      assertEquals(16, token9.getTokenType());
      
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      Token token10 = xPathLexer2.colon();
      assertEquals(18, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.minus();
      assertEquals(6, token11.getTokenType());
      
      xPathLexer2.operatorName();
      Token token12 = xPathLexer4.star();
      assertEquals(20, token12.getTokenType());
      
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token13 = xPathLexer4.number();
      assertEquals(30, token13.getTokenType());
      
      Token token14 = xPathLexer0.leftBracket();
      assertEquals(3, token14.getTokenType());
      
      Token token15 = xPathLexer0.pipe();
      assertEquals(17, token15.getTokenType());
      
      Token token16 = xPathLexer2.equals();
      assertEquals("m", token16.getTokenText());
      assertEquals(21, token16.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.3328908557545462
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      Token token0 = xPathLexer0.minus();
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("n", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.div();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals("x", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer0.not();
      assertEquals("=", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      Token token7 = xPathLexer1.at();
      assertEquals(16, token7.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("hn&;x$=%");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("T(rK8<?m8F");
      XPathLexer xPathLexer5 = new XPathLexer("T(rK8<?m8F");
      xPathLexer5.number();
      Token token8 = xPathLexer5.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer1.number();
      Token token10 = xPathLexer2.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer5.star();
      assertEquals(20, token11.getTokenType());
      assertEquals("(", token11.getTokenText());
      
      xPathLexer2.or();
      Token token12 = xPathLexer4.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer1.leftBracket();
      assertEquals(3, token13.getTokenType());
      
      Token token14 = xPathLexer4.pipe();
      assertEquals("T", token14.getTokenText());
      assertEquals(17, token14.getTokenType());
      
      xPathLexer1.equals();
      Token token15 = xPathLexer1.equals();
      assertEquals(21, token15.getTokenType());
      
      Token token16 = xPathLexer5.plus();
      assertEquals("r", token16.getTokenText());
      
      Token token17 = xPathLexer2.dots();
      assertEquals(13, token17.getTokenType());
      
      Token token18 = xPathLexer1.minus();
      assertEquals(6, token18.getTokenType());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.280893706689721
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.literal();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.notEquals();
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      xPathLexer0.literal();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      xPathLexer0.whitespace();
      boolean boolean0 = xPathLexer0.isIdentifierStartChar(']');
      assertFalse(boolean0);
      
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      
      xPathLexer0.setXPath("`Ve3LA\"ivxfqxh|?^)");
      xPathLexer0.isIdentifierChar(']');
      Token token3 = xPathLexer0.whitespace();
      assertEquals("", token3.getTokenText());
      assertEquals((-2), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("V", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.at();
      assertEquals("e", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("3L", token6.getTokenText());
      
      Token token7 = xPathLexer0.number();
      assertEquals("", token7.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer0.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      Token token11 = xPathLexer0.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      xPathLexer0.setXPath("");
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer0.getPreviousToken();
      assertNotSame(token14, token0);
      assertEquals("A\"ivxfqxh|?^)", token14.getTokenText());
      
      Token token15 = xPathLexer0.plus();
      assertEquals(5, token15.getTokenType());
  }

  /**
  //Test case number: 104
  /*Coverage entropy=3.215217963569527
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$%");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.slashes();
      assertEquals("&", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.star();
      Token token2 = xPathLexer0.identifier();
      assertEquals("x", token2.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token3 = xPathLexer0.comma();
      assertEquals("$", token3.getTokenText());
      
      Token token4 = xPathLexer0.colon();
      assertEquals("%", token4.getTokenText());
      
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer0.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer1.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.pipe();
      assertEquals(17, token11.getTokenType());
      
      Token token12 = xPathLexer0.identifier();
      assertEquals(15, token12.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.162575140867351
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.leftBracket();
      xPathLexer0.number();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.leftBracket();
      xPathLexer0.or();
      xPathLexer0.star();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.star();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer0.colon();
      assertEquals(18, token4.getTokenType());
      
      xPathLexer0.plus();
      Token token5 = xPathLexer0.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.hasMoreChars();
      Token token13 = xPathLexer0.plus();
      assertEquals(5, token13.getTokenType());
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.658076554395348
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BrQ8<");
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.at();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("BrQ8<");
      xPathLexer1.nextToken();
      xPathLexer1.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.literal();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=2.1827809016594415
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      xPathLexer0.mod();
      xPathLexer0.dollar();
      xPathLexer0.div();
      Token token1 = xPathLexer0.at();
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals(";", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("x", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.literal();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      Token token6 = xPathLexer0.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer2.notEquals();
      assertEquals(22, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.div();
      xPathLexer3.literal();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer("hn&;x$=%");
      Token token8 = xPathLexer4.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      xPathLexer0.number();
      xPathLexer1.identifierOrOperatorName();
      Token token9 = xPathLexer2.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer0.identifier();
      assertEquals(15, token10.getTokenType());
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.292675943712201
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("co", token0.getTokenText());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      assertEquals("e", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("n.saxpath.Token", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.at();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertNull(token6);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token7 = xPathLexer2.number();
      assertEquals(30, token7.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      Token token9 = xPathLexer3.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.div();
      Token token10 = xPathLexer2.literal();
      assertNotNull(token10);
      assertEquals(27, token10.getTokenType());
      assertEquals("m.werken.saxpath.T", token10.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("q&G.X577,f!&p~");
      xPathLexer4.equals();
      XPathLexer xPathLexer5 = new XPathLexer("q&G.X577,f!&p~");
      Token token11 = xPathLexer5.pipe();
      assertEquals("q", token11.getTokenText());
      
      Token token12 = xPathLexer2.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals("k", token12.getTokenText());
      
      Token token13 = xPathLexer5.slashes();
      assertEquals("&", token13.getTokenText());
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer5.at();
      assertEquals("G", token14.getTokenText());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=2.1878780837338736
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.doubleColon();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.notEquals();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      xPathLexer0.plus();
      xPathLexer0.pipe();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer1.literal();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.number();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.identifierOrOperatorName();
      xPathLexer2.comma();
      xPathLexer3.notEquals();
      xPathLexer0.div();
      xPathLexer2.literal();
      XPathLexer xPathLexer4 = new XPathLexer("q&G.X577,f!&p~");
      xPathLexer4.equals();
      XPathLexer xPathLexer5 = new XPathLexer("q&G.X577,f!&p~");
      xPathLexer5.pipe();
      xPathLexer5.pipe();
      xPathLexer2.equals();
      xPathLexer5.slashes();
      xPathLexer5.endPosition();
      Token token0 = xPathLexer4.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.8974309444979096
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("hn&x$%");
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.number();
      xPathLexer1.relationalOperator();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("`ydKd");
      xPathLexer2.literal();
      xPathLexer2.number();
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("hn", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token4 = xPathLexer5.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer5.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer4.div();
      Token token6 = xPathLexer4.literal();
      assertNull(token6);
      
      xPathLexer0.number();
      XPathLexer xPathLexer6 = new XPathLexer("[ (");
      Token token7 = xPathLexer3.pipe();
      assertEquals("`", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer1.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer3.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals("y", token9.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.764710119962615
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.leftParen();
      assertEquals("n", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals("&", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.isIdentifierChar('R');
      Token token3 = xPathLexer0.nextToken();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer1.literal();
      assertNull(token5);
      
      String string0 = token3.toString();
      assertEquals("[ (-1) (;x$=%)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      Token token6 = xPathLexer1.comma();
      assertEquals(32, token6.getTokenType());
      
      Token token7 = xPathLexer2.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer2.setPreviousToken(token3);
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals("h", token8.getTokenText());
      assertEquals(4, token8.getTokenType());
      
      Token token9 = xPathLexer1.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals(";x", token10.getTokenText());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=3.041354623961798
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifier();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer3.dots();
      String string0 = ", (O!1h3wCpT \"";
      xPathLexer0.setXPath("");
      xPathLexer1.isIdentifierChar('`');
      xPathLexer2.whitespace();
      xPathLexer2.at();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=3.021479207381058
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      assertEquals("c", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      xPathLexer0.consume();
      Token token1 = xPathLexer0.rightParen();
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      Token token4 = xPathLexer0.dollar();
      Token token5 = xPathLexer0.minus();
      assertEquals("k", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      token4.toString();
      String string1 = token3.toString();
      assertEquals("[ (4) (e)", string1);
      
      xPathLexer0.dollar();
      Token token6 = xPathLexer0.plus();
      assertEquals("n", token6.getTokenText());
      
      token1.toString();
      Token token7 = xPathLexer0.dots();
      Token token8 = xPathLexer0.literal();
      assertNull(token8);
      
      String string2 = token1.toString();
      assertEquals("[ (2) (m)", string2);
      
      String string3 = token4.toString();
      assertEquals("[ (26) (r)", string3);
      
      String string4 = token7.toString();
      assertEquals("[ (13) (.)", string4);
      
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.or();
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.2899888472740146
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("|wwna\"2I#>,|a");
      Token token0 = xPathLexer1.dollar();
      assertEquals(26, token0.getTokenType());
      
      Token token1 = xPathLexer1.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("ww", token1.getTokenText());
      
      xPathLexer1.rightBracket();
      Token token2 = xPathLexer1.rightParen();
      assertEquals("a", token2.getTokenText());
      assertEquals(2, token2.getTokenType());
      
      xPathLexer0.not();
      xPathLexer1.whitespace();
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer1.at();
      assertEquals("2", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("%Y%TEU/.+*] ");
      xPathLexer2.number();
      XPathLexer xPathLexer3 = new XPathLexer("%Y%TEU/.+*] ");
      Token token4 = xPathLexer3.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("w-wP");
      xPathLexer3.number();
      Token token5 = xPathLexer1.nextToken();
      assertEquals("I", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.comma();
      assertEquals(32, token6.getTokenType());
      
      xPathLexer2.number();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer5.at();
      assertEquals(16, token7.getTokenType());
      
      Token token8 = xPathLexer6.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer4.star();
      assertEquals("w", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      xPathLexer5.or();
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer4.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer6.leftBracket();
      assertEquals(3, token11.getTokenType());
      
      Token token12 = xPathLexer0.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer0.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer6.literal();
      assertNull(token14);
      
      Token token15 = xPathLexer3.slashes();
      assertEquals(11, token15.getTokenType());
      assertEquals("Y", token15.getTokenText());
      
      Token token16 = xPathLexer0.whitespace();
      assertEquals((-2), token16.getTokenType());
      
      Token token17 = xPathLexer2.leftParen();
      assertEquals("%", token17.getTokenText());
      
      Token token18 = xPathLexer1.rightBracket();
      assertEquals("#", token18.getTokenText());
      assertEquals(4, token18.getTokenType());
      
      Token token19 = xPathLexer4.doubleColon();
      assertEquals(19, token19.getTokenType());
      assertEquals("-w", token19.getTokenText());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=2.089414864704211
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer(") (");
      xPathLexer0.colon();
      xPathLexer0.number();
      XPathLexer xPathLexer3 = new XPathLexer("7]~m");
      xPathLexer3.number();
      xPathLexer2.relationalOperator();
      xPathLexer2.identifier();
      XPathLexer xPathLexer4 = new XPathLexer("FV@L?_a");
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.literal();
      assertNull(token2);
      
      xPathLexer0.number();
      Token token3 = xPathLexer3.nextToken();
      assertEquals(4, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      Token token4 = xPathLexer1.nextToken();
      assertEquals(")", token4.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("7]~m");
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer5.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer6 = new XPathLexer(") (");
      Token token7 = xPathLexer4.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("FV", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("FV@L?_a");
      Token token8 = xPathLexer1.nextToken();
      assertEquals("(", token8.getTokenText());
      assertEquals(1, token8.getTokenType());
      
      xPathLexer1.dollar();
      XPathLexer xPathLexer8 = new XPathLexer("7]~m");
      Token token9 = xPathLexer8.comma();
      assertEquals("7", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer("FV@L?_a");
      xPathLexer5.colon();
      xPathLexer1.literal();
      XPathLexer xPathLexer10 = new XPathLexer("FV@L?_a");
      xPathLexer2.number();
      Token token10 = xPathLexer6.pipe();
      assertEquals(")", token10.getTokenText());
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer7.number();
      assertEquals(30, token11.getTokenType());
  }

  /**
  //Test case number: 116
  /*Coverage entropy=2.9182661565415198
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.plus();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.number();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=3.562897027321056
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.slashes();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.pipe();
      xPathLexer0.minus();
      xPathLexer0.relationalOperator();
      xPathLexer0.equals();
      xPathLexer0.div();
      xPathLexer0.LA(0);
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.whitespace();
      xPathLexer0.at();
      xPathLexer0.div();
      xPathLexer0.literal();
      String string0 = xPathLexer0.getXPath();
      assertEquals("", string0);
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.263810186676603
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("e", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("ke", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals("n", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(".", token5.getTokenText());
      
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.at();
      assertEquals("x", token6.getTokenText());
      assertEquals(16, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      xPathLexer1.currentPosition();
      xPathLexer0.or();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("c", token8.getTokenText());
      
      xPathLexer2.currentPosition();
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      xPathLexer1.or();
      XPathLexer xPathLexer3 = new XPathLexer("hn&;x$%");
      Token token10 = xPathLexer3.identifierOrOperatorName();
      assertEquals("hn", token10.getTokenText());
      
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
      assertEquals("m", token11.getTokenText());
      
      Token token12 = xPathLexer0.star();
      assertEquals(20, token12.getTokenType());
      assertEquals("p", token12.getTokenText());
      
      xPathLexer3.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token13 = xPathLexer4.leftParen();
      assertEquals(1, token13.getTokenType());
      
      Token token14 = xPathLexer1.nextToken();
      assertEquals((-1), token14.getTokenType());
      
      xPathLexer4.number();
      Token token15 = xPathLexer3.leftBracket();
      assertEquals("&", token15.getTokenText());
      assertEquals(3, token15.getTokenType());
      
      Token token16 = xPathLexer3.pipe();
      assertEquals(";", token16.getTokenText());
      assertEquals(17, token16.getTokenType());
      
      Token token17 = xPathLexer1.identifier();
      assertEquals(15, token17.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(15, int0);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.4705579560706972
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.leftParen();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(3, int0);
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.plus();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.identifier();
      assertEquals(15, token8.getTokenType());
      
      xPathLexer0.getXPath();
      Token token9 = xPathLexer0.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer0.getXPath();
      Token token10 = xPathLexer0.literal();
      assertNull(token10);
      
      xPathLexer0.setPreviousToken(token0);
      assertEquals(4, token0.getTokenType());
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.9906038315208376
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.equals();
      xPathLexer0.colon();
      Token token1 = xPathLexer0.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.number();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer1.identifier();
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("FV@L?_a");
      xPathLexer1.literal();
      xPathLexer1.number();
      xPathLexer0.nextToken();
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.literal();
      assertNull(token4);
      
      XPathLexer xPathLexer3 = new XPathLexer("O9s~nZ.");
      Token token5 = xPathLexer2.nextToken();
      assertEquals("@", token5.getTokenText());
      assertEquals(16, token5.getTokenType());
      
      Token token6 = xPathLexer3.comma();
      assertEquals("O", token6.getTokenText());
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.number();
      XPathLexer xPathLexer5 = new XPathLexer(")");
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
      assertEquals("L", token7.getTokenText());
      
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer5.or();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.at();
      Token token9 = xPathLexer0.number();
      assertEquals(30, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer2.pipe();
      assertEquals(17, token11.getTokenType());
      assertEquals("_", token11.getTokenText());
      
      Token token12 = xPathLexer3.equals();
      assertEquals("9", token12.getTokenText());
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.7309178408842576
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("BrQ8<");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("r", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("Q", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("BrQ8<");
      Token token2 = xPathLexer1.nextToken();
      assertEquals("BrQ8", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer1.rightBracket();
      assertEquals("<", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(7, token4.getTokenType());
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.literal();
      assertNull(token5);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer3.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer4.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer2.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer4.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.975102728219374
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=2.0507131534324476
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hn&;x$=%");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("h", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("n", token1.getTokenText());
      
      xPathLexer0.and();
      Token token2 = xPathLexer0.dollar();
      assertEquals("&", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("hn&;x$=%");
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("hn&;x$=%");
      xPathLexer1.number();
      Token token3 = xPathLexer0.at();
      assertEquals("$", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token4 = xPathLexer3.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer2.not();
      assertEquals("h", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      xPathLexer1.number();
      Token token6 = xPathLexer3.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer4.leftParen();
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals("=", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("hn&;x$=%");
      xPathLexer6.colon();
      Token token9 = xPathLexer1.star();
      assertEquals(20, token9.getTokenType());
      assertEquals("&", token9.getTokenText());
      
      xPathLexer4.or();
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token10 = xPathLexer5.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer2.leftBracket();
      assertEquals("n", token11.getTokenText());
      
      Token token12 = xPathLexer4.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer5.colon();
      assertEquals(18, token13.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2884001954061617
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("cm.werkensaxpath.Toen");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("cm", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals(4, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      Token token2 = xPathLexer0.rightParen();
      assertEquals(2, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("ke", token3.getTokenText());
      
      Token token4 = xPathLexer0.not();
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("saxpath.Toen", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      xPathLexer0.literal();
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer0.at();
      Token token8 = xPathLexer0.identifierOrOperatorName();
      assertNull(token8);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token9 = xPathLexer1.literal();
      assertNull(token9);
      
      XPathLexer xPathLexer2 = new XPathLexer("cm.werkensaxpath.Toen");
      XPathLexer xPathLexer3 = new XPathLexer("y0Iia}~)");
      Token token10 = xPathLexer3.star();
      assertEquals("y", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("y0Iia}~)");
      xPathLexer0.or();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token11 = xPathLexer6.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer1.leftBracket();
      assertEquals(3, token12.getTokenType());
      
      Token token13 = xPathLexer1.minus();
      assertEquals(6, token13.getTokenType());
      
      Token token14 = xPathLexer2.equals();
      assertEquals(21, token14.getTokenType());
      
      Token token15 = xPathLexer4.at();
      assertEquals(16, token15.getTokenType());
      assertEquals("y", token15.getTokenText());
      
      Token token16 = xPathLexer3.plus();
      assertEquals(5, token16.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.7472994866223672
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer2.rightParen();
      assertEquals(2, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer2.rightBracket();
      assertEquals("o", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer3.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("om.werken.saxpath.XPathLexer", token5.getTokenText());
      
      Token token6 = xPathLexer2.literal();
      assertNull(token6);
      
      XPathLexer xPathLexer4 = new XPathLexer("=%/gB>Y^F1VA]=@)K");
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token7 = xPathLexer3.leftBracket();
      assertEquals(3, token7.getTokenType());
      
      Token token8 = xPathLexer6.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer4.slashes();
      assertEquals(11, token9.getTokenType());
      assertEquals("=", token9.getTokenText());
      
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer6.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer4.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=2.100600523026026
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("KC");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals(4, token0.getTokenType());
      assertEquals("w", token0.getTokenText());
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.notEquals();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("r", token2.getTokenText());
      
      xPathLexer2.nextToken();
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      xPathLexer0.pipe();
      Token token4 = xPathLexer0.at();
      assertEquals("n", token4.getTokenText());
      assertEquals(16, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals(13, token5.getTokenType());
      assertEquals(".", token5.getTokenText());
      
      xPathLexer0.comma();
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      assertEquals("ax", token6.getTokenText());
      
      xPathLexer1.div();
      xPathLexer1.number();
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer2.comma();
      assertEquals(32, token8.getTokenType());
      
      Token token9 = xPathLexer1.star();
      assertEquals("K", token9.getTokenText());
      assertEquals(20, token9.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.relationalOperator();
      xPathLexer2.number();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      xPathLexer0.pipe();
      Token token11 = xPathLexer0.equals();
      assertEquals("a", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer2.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer4.slashes();
      assertEquals(11, token13.getTokenType());
      
      Token token14 = xPathLexer4.number();
      assertEquals(30, token14.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=1.997822357102101
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.dots();
      xPathLexer0.setXPath("[ (");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      xPathLexer0.rightBracket();
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      xPathLexer2.number();
      xPathLexer2.nextToken();
      xPathLexer1.literal();
      XPathLexer xPathLexer3 = new XPathLexer(">KG;4i_lm");
      xPathLexer3.nextToken();
      xPathLexer2.comma();
      xPathLexer3.number();
      xPathLexer2.colon();
      xPathLexer3.star();
      xPathLexer0.or();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer2.leftBracket();
      xPathLexer2.pipe();
      Token token1 = xPathLexer1.equals();
      assertNotSame(token1, token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=2.588217648569982
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer0.identifier();
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.at();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 129
  /*Coverage entropy=2.094563416650433
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("co", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.dollar();
      assertEquals("m", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("e", token2.getTokenText());
      
      xPathLexer0.rightParen();
      Token token3 = xPathLexer0.notEquals();
      assertEquals("ke", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals("n", token4.getTokenText());
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer0.not();
      assertEquals(".", token5.getTokenText());
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("saxpath.Token", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.number();
      xPathLexer0.nextToken();
      Token token9 = xPathLexer4.comma();
      assertEquals(32, token9.getTokenType());
      
      xPathLexer1.number();
      Token token10 = xPathLexer0.colon();
      assertEquals(18, token10.getTokenType());
      
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      xPathLexer3.or();
      Token token12 = xPathLexer0.number();
      assertEquals(30, token12.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token13 = xPathLexer5.equals();
      assertEquals(21, token13.getTokenType());
      
      Token token14 = xPathLexer2.plus();
      assertEquals(5, token14.getTokenType());
      
      Token token15 = xPathLexer0.dots();
      assertEquals(13, token15.getTokenType());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.9509342616571645
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer0.rightParen();
      xPathLexer0.not();
      xPathLexer0.nextToken();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer("^R4LN5G!&Q\"QFm");
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.number();
      xPathLexer1.nextToken();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.at();
      xPathLexer4.minus();
      xPathLexer4.dots();
      xPathLexer1.nextToken();
      xPathLexer4.rightBracket();
      xPathLexer0.pipe();
      xPathLexer4.star();
      xPathLexer0.LA(49);
      xPathLexer3.dots();
      xPathLexer1.number();
      xPathLexer0.colon();
      String string0 = null;
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=2.83125913189571
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.rightParen();
      assertEquals("m", token1.getTokenText());
      assertEquals(2, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      String string0 = token2.toString();
      assertEquals("[ (19) (.w)", string0);
      
      xPathLexer0.setPreviousToken(token2);
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.consume(1);
      Token token4 = xPathLexer0.minus();
      token4.toString();
      token4.toString();
      String string1 = token4.toString();
      assertEquals("[ (6) (e)", string1);
      
      Token token5 = xPathLexer0.dollar();
      xPathLexer0.plus();
      Token token6 = xPathLexer0.dots();
      token5.toString();
      String string2 = token6.toString();
      assertEquals("[ (13) (s)", string2);
      
      String string3 = token0.toString();
      assertEquals("[ (23) (c)", string3);
      
      String string4 = token5.toString();
      assertEquals("[ (26) (n)", string4);
      
      Token token7 = xPathLexer0.plus();
      assertEquals(5, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      xPathLexer0.setPreviousToken(token6);
      xPathLexer0.identifierOrOperatorName();
      Token token8 = xPathLexer0.number();
      assertEquals(30, token8.getTokenType());
      
      xPathLexer0.doubleColon();
      Token token9 = xPathLexer0.identifier();
      assertEquals("ath.XPathLexer", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer0.at();
      Token token10 = xPathLexer0.comma();
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=2.9506190219907764
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.colon();
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer1.leftParen();
      assertEquals(1, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      Token token4 = xPathLexer2.slashes();
      assertEquals(11, token4.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=2.939584631093279
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.plus();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.rightParen();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.rightParen();
      xPathLexer0.literal();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.or();
      Token token5 = xPathLexer0.rightParen();
      assertEquals(2, token5.getTokenType());
      
      xPathLexer0.dots();
      xPathLexer0.plus();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      Token token8 = xPathLexer0.star();
      assertEquals(20, token8.getTokenType());
      
      xPathLexer0.number();
      Token token9 = xPathLexer0.literal();
      assertNull(token9);
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=3.2477667678079802
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token0 = xPathLexer3.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer2.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("c", token1.getTokenText());
      
      Token token2 = xPathLexer2.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.mod();
      Token token3 = xPathLexer1.not();
      assertEquals(23, token3.getTokenType());
      
      xPathLexer1.or();
      Token token4 = xPathLexer3.doubleColon();
      assertEquals(19, token4.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.7181238851513425
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.rightParen();
      Token token1 = xPathLexer0.not();
      Token token2 = xPathLexer0.nextToken();
      Token token3 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.setPreviousToken(token3);
      xPathLexer0.rightBracket();
      xPathLexer0.dollar();
      xPathLexer0.minus();
      token0.toString();
      token1.toString();
      token0.toString();
      Token token4 = xPathLexer0.dollar();
      xPathLexer0.plus();
      token0.toString();
      xPathLexer0.dots();
      xPathLexer0.literal();
      // Undeclared exception!
      try { 
        token4.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
