/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:40:22 GMT 2019
 */

package com.eteks.sweethome3d.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.eteks.sweethome3d.model.AspectRatio;
import com.eteks.sweethome3d.model.Camera;
import com.eteks.sweethome3d.model.CatalogTexture;
import com.eteks.sweethome3d.model.Content;
import com.eteks.sweethome3d.model.HomeEnvironment;
import com.eteks.sweethome3d.model.HomeTexture;
import com.eteks.sweethome3d.model.TextureImage;
import com.eteks.sweethome3d.model.TexturesCategory;
import com.eteks.sweethome3d.tools.ResourceURLContent;
import com.eteks.sweethome3d.tools.TemporaryURLContent;
import com.eteks.sweethome3d.tools.URLContent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListenerProxy;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeEnvironment_ESTest extends HomeEnvironment_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("FIELD_OF_VIEW", "", uRLContent0, 22.012491F, 0, "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, 0, 0, 915.2614F);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getGroundTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("5yOPIQl>1:]H8t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.5yOPIQl>1:]H8t
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (Content) null, 0.0F, 2815.7085F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((byte)83, homeTexture0, 300, homeTexture0, 2619, (-1940.0F));
      homeEnvironment0.getSkyTexture();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("L[GBtSN$IpK^T1u\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.L[GBtSN$IpK^T1u\"
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 1571, (-892.46F));
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1571, homeTexture0, 1571, homeTexture0, 1571, (-892.46F));
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(1571, homeEnvironment0.getSkyColor());
      assertEquals(1571, homeEnvironment0.getGroundColor());
      assertEquals(1571, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals((-892.46F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(3);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setVideoQuality((-307));
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("sM]= Nlks?9;D% J6T", propertyChangeListener0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getGroundTexture();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "H])Y(*=";
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("H])Y(*=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.H])Y(*=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeEnvironment.DrawingMode.values();
      URL uRL0 = MockURL.getHttpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte) (-5);
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte) (-44);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      CatalogTexture catalogTexture0 = new CatalogTexture("VFz k`\"V", "VFz k`\"V", temporaryURLContent0, (-226.9F), (-391), "");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-391), homeTexture0, (-320), (-970), (-391));
      HomeTexture homeTexture1 = homeEnvironment0.getGroundTexture();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-391.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals((-970), homeEnvironment0.getLightColor());
      assertEquals((-320), homeEnvironment0.getSkyColor());
      assertEquals((-391), homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertNotNull(homeTexture1);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.412212450622453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth((-26));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(3);
      homeEnvironment0.setGroundColor(3);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setPhotoWidth(21);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight((-30.77353F));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.setPhotoQuality((-1940));
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      float float0 = homeEnvironment1.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(320.0F, float0, 0.01F);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.4217192113780523
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-27));
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setVideoWidth((-3767));
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2940, (HomeTexture) null, (-1922), (HomeTexture) null, (-2140644527), 0.0F);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      homeEnvironment2.setPhotoQuality((-1922));
      homeEnvironment1.getGroundColor();
      homeEnvironment1.getVideoCameraPath();
      homeEnvironment2.getVideoHeight();
      Random.setNextRandom(2940);
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.6376398674083723
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth(3);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setVideoQuality(3);
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("sM]= Nlks?9;D% J6T", propertyChangeListener0);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getVideoQuality();
      homeEnvironment0.getGroundTexture();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "H])Y(*=";
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("H])Y(*=");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.H])Y(*=
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.880653893488026
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor((-273));
      homeEnvironment0.setSkyColor((-273));
      homeEnvironment0.setPhotoWidth(4463);
      homeEnvironment0.setPhotoQuality((-4099));
      homeEnvironment0.setCeillingLightColor((-4099));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("mU::", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.getSkyTexture();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getSkyTexture();
      System.setCurrentTimeMillis(1248L);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getPhotoQuality();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("FREE_RATIO");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.FREE_RATIO
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=3.195641802808069
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoWidth(320);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setVideoFrameRate(647);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(0);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setGroundColor(42);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth((-1238));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(400);
      homeEnvironment0.setVideoWidth(0);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment.DrawingMode.values();
      homeEnvironment0.getSkyTexture();
      assertEquals(AspectRatio.FREE_RATIO, homeEnvironment0.getPhotoAspectRatio());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.1737502027185687
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.getPhotoWidth();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoWidth(11);
      homeEnvironment0.setGroundColor(400);
      homeEnvironment0.setSubpartSizeUnderLight(1.0F);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(1206, (HomeTexture) null, 400, (HomeTexture) null, (-1922), 746.0F);
      homeEnvironment0.setLightColor((-1815));
      homeEnvironment2.getSkyTexture();
      homeEnvironment0.getGroundColor();
      homeEnvironment1.getLightColor();
      homeEnvironment0.getPhotoQuality();
      assertEquals(1.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.965669806258803
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.LIGHT_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent("ALL_LEVELS_VISIBLE", "ALL_LEVELS_VISIBLE", object0, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeEvent propertyChangeEvent1 = new PropertyChangeEvent("9[4A?p/", "R\"d/|*V+ 9", aspectRatio0, "9[4A?p/");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      propertyChangeEvent1.setPropagationId(aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent1);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate((-169));
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getSubpartSizeUnderLight();
      Random.setNextRandom(25);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getVideoFrameRate();
      HomeEnvironment.Property.values();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R\"d/|*V+ 9");
      HomeEnvironment.Property.values();
      homeEnvironment0.getVideoFrameRate();
      Random.setNextRandom((-169));
      System.setCurrentTimeMillis(599L);
      homeEnvironment0.getSkyTexture();
      int int0 = homeEnvironment0.getVideoFrameRate();
      assertEquals(AspectRatio.SQUARE_RATIO, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-169), int0);
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoQuality((-2718));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera((-1.0F), (-346.3F), (-1.0F), 151.12F, 0.0F, (-0.33839524F));
      Camera camera1 = camera0.clone();
      camera1.setName("LIGHT_COLOR");
      Camera camera2 = camera1.clone();
      Camera.convertTimeToTimeZone(1423L, "|IQJnP8JCX\"=^5O");
      Camera camera3 = camera2.clone();
      camera1.clone();
      camera0.setX(1165.6268F);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera.convertTimeToTimeZone((-2718), "=G");
      Camera camera4 = new Camera((-346.3F), (-346.3F), (-1331.0F), (-0.33839524F), (-650L), 127.73352F, (-755L), camera_Lens0);
      Camera camera5 = camera0.clone();
      camera5.setCamera(camera3);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera1);
      linkedList0.addLast(camera2);
      Random.setNextRandom((-2937));
      homeEnvironment1.clone();
      assertEquals((-2718), homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setSkyColor(0);
      homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      Camera camera4 = camera0.clone();
      Camera camera5 = new Camera(1.0F, 2063.0F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera5.setX(1.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera6 = new Camera(759.0F, 1.0F, 1.0F, (-1.0F), (-4694.3145F), 642.0F, (-650L), camera_Lens0);
      Camera camera7 = new Camera((-1.2900817F), 127.73352F, 642.0F, 759.0F, 323.157F, (-1.2900817F), 600000L, camera_Lens0);
      camera7.setCamera(camera4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera4);
      linkedList0.add(camera3);
      linkedList0.add(camera2);
      linkedList0.addLast(camera2);
      Random.setNextRandom((-870));
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<HomeEnvironment> class0 = HomeEnvironment.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "");
      CatalogTexture catalogTexture0 = new CatalogTexture("", "", resourceURLContent0, (-30.77353F), 384.193F, "^iy:");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3445, homeTexture0, 3445, homeTexture0, (-2146014970), (-2146014970));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoQuality(1379);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.clone();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(158, (HomeTexture) null, 1939, (HomeTexture) null, 2049, 158);
      homeEnvironment0.setLightColor((-1922));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundColor();
      homeEnvironment0.getLightColor();
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.getSkyColor();
      Random.setNextRandom(2049);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("q$tp0LO))^_4:iy&5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.q$tp0LO))^_4:iy&5
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoQuality(542);
      homeEnvironment0.clone();
      String string0 = "X9Tod3gN\\cX^!\\RrZe";
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      String string1 = "-[<PRf/";
      String string2 = ".tmp";
      URL uRL0 = MockURL.getFtpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(temporaryURLContent0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=3.180683087165041
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-27));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth((-1238));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.setSubpartSizeUnderLight((-27));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoQuality(320);
      homeEnvironment0.setPhotoHeight((-1238));
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getVideoAspectRatio());
      assertEquals((-27.0F), float0, 0.01F);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=3.1863831128673694
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-27));
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth((-1238));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(0);
      AspectRatio aspectRatio2 = AspectRatio.RATIO_4_3;
      homeEnvironment0.setVideoAspectRatio(aspectRatio2);
      HomeEnvironment.DrawingMode.values();
      int int0 = homeEnvironment0.getVideoHeight();
      assertFalse(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0, int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=3.1873727219717733
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio((AspectRatio) null);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(3);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth((-1238));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoWidth();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setPhotoHeight(0);
      boolean boolean0 = homeEnvironment0.isObserverCameraElevationAdjusted();
      assertFalse(boolean0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      camera2.clone();
      Camera camera3 = camera0.clone();
      Camera camera4 = new Camera(1.0F, 2063.0F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera4.setX(1.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera5 = new Camera(759.0F, (-2871.87F), (-2871.87F), (-1.0F), (-4694.3145F), 642.0F, (-650L), camera_Lens0);
      Camera camera6 = new Camera((-1.2900817F), 127.73352F, 642.0F, 759.0F, 323.157F, (-1.2900817F), 600000L, camera_Lens0);
      camera6.setCamera(camera3);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera3);
      int int0 = homeEnvironment1.getGroundColor();
      assertEquals(11053224, int0);
      
      int int1 = homeEnvironment0.getLightColor();
      assertEquals(13684944, int1);
      
      homeEnvironment0.getGroundTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertNotSame(homeEnvironment0, homeEnvironment1);
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis((-1071L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2043), (HomeTexture) null, 2332, (-4503), 2332);
      homeEnvironment0.getGroundColor();
      System.setCurrentTimeMillis(0L);
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.5164988325467728
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(320);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      homeEnvironment0.setPhotoAspectRatio((AspectRatio) null);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(3);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_COLOR;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("[!A3?", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth((-1238));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight(3);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(320);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getWallsAlpha();
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      homeEnvironment0.setLightColor(1178);
      homeEnvironment0.getGroundTexture();
      homeEnvironment0.getPhotoAspectRatio();
      assertEquals(320, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.519382346735597
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera0 = new Camera(104.491F, 104.491F, 2.0F, 2.0F, 11, 2.0F, 11, camera_Lens0);
      camera0.setY(4516.976F);
      camera0.setName("VIDEO_WIDTH");
      Camera camera1 = new Camera((-3765.3018F), 0.0F, 0.0F, (-3765.3018F), 2.0F, 534.2021F);
      Camera camera2 = camera1.clone();
      homeEnvironment1.getVideoCameraPath();
      Camera camera3 = camera2.clone();
      camera2.setX(0.0F);
      camera1.setCamera(camera3);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      homeEnvironment1.setVideoFrameRate(11);
      HomeEnvironment.Property.valueOf("VIDEO_WIDTH");
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setVideoFrameRate(11);
      homeEnvironment2.getPhotoHeight();
      assertEquals(11, homeEnvironment1.getVideoFrameRate());
      
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 24
  /*Coverage entropy=3.4179563873595136
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-27));
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      homeEnvironment1.setPhotoHeight((-27));
      homeEnvironment1.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(3);
      homeEnvironment1.setGroundColor(400);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment2.setSubpartSizeUnderLight(400);
      homeEnvironment0.setPhotoWidth((-374));
      homeEnvironment1.getWallsAlpha();
      homeEnvironment0.setVideoWidth((-27));
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment1.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.setPhotoQuality(320);
      homeEnvironment2.getVideoFrameRate();
      homeEnvironment1.getWallsAlpha();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment3.setPhotoHeight(25);
      AspectRatio aspectRatio2 = homeEnvironment3.getPhotoAspectRatio();
      assertEquals(AspectRatio.FREE_RATIO, aspectRatio2);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("j9", "\"zbP Zk*xu", (Content) null, 1.0F, 1.0F, "\"zbP Zk*xu");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, 2, homeTexture0, 2, 4246.0005F);
      int int0 = homeEnvironment0.getVideoHeight();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(2, homeEnvironment0.getGroundColor());
      assertEquals(4246.0005F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(2, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, int0);
      assertEquals(2, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=2.9383113296830845
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("e/", "e/", (Content) null, 0, 2264.2908F, "VIDEO_FRAME_RATE");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-960), (-1768), 0.0F);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.getSkyTexture();
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setVideoFrameRate(20);
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(20);
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.getGroundTexture();
      assertTrue(homeEnvironment1.isAllLevelsVisible());
  }

  /**
  //Test case number: 27
  /*Coverage entropy=3.4098608047683197
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSkyColor(23);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth((-26));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight((-26));
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth((-26));
      homeEnvironment0.setGroundColor(7);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setPhotoWidth(21);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.clone();
      homeEnvironment0.setSubpartSizeUnderLight((-30.77353F));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.setPhotoQuality((-1940));
      homeEnvironment1.getVideoFrameRate();
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      assertEquals((-30.77353F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals((-26), homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.6439556568820564
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIDEO_CAMERA_PATH", (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment2.getVideoQuality();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment3.setCeillingLightColor((-1303));
      assertEquals((-1303), homeEnvironment3.getCeillingLightColor());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.209406559005219
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setAllLevelsVisible(true);
      homeEnvironment1.setCeillingLightColor(2140277327);
      URL uRL0 = MockURL.getFtpExample();
      float float0 = 4.6066F;
      String string0 = "X9Tod3gN\\cX^!\\RrZe";
      String string1 = null;
      try { 
        MockURL.URL(uRL0, (String) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.9748142298550744
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("applicationSubFolder", "applicationSubFolder", (Content) null, 1.1053224E7F, 0.0F, "applicationSubFolder", false);
      homeEnvironment0.setVideoWidth(0);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setSkyTexture(homeTexture0);
      homeEnvironment0.getGroundColor();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setVideoFrameRate((-1925));
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("applicationSubFolder", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("applicationSubFolder", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_HEIGHT;
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy1);
      homeEnvironment0.setCeillingLightColor(11053224);
      HomeEnvironment homeEnvironment2 = homeEnvironment1.clone();
      homeEnvironment2.setCeillingLightColor((-3804));
      homeEnvironment0.setAllLevelsVisible(false);
      HomeEnvironment homeEnvironment3 = homeEnvironment2.clone();
      homeEnvironment0.getVideoQuality();
      homeEnvironment2.getCeillingLightColor();
      homeEnvironment3.setCeillingLightColor((-99));
      assertEquals((-3804), homeEnvironment2.getCeillingLightColor());
      assertTrue(homeEnvironment3.isAllLevelsVisible());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=3.2499978052210357
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(6);
      homeEnvironment0.setSkyColor(6);
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.setWallsAlpha(770.1019F);
      homeEnvironment0.getPhotoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment0.getVideoCameraPath();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", aspectRatio0, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment1.setSkyColor(6);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("could not load ", propertyChangeListenerProxy1);
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.setPhotoQuality(300);
      homeEnvironment1.getVideoFrameRate();
      float float0 = homeEnvironment1.getWallsAlpha();
      assertEquals(AspectRatio.RATIO_2_1, homeEnvironment0.getPhotoAspectRatio());
      assertEquals(770.1019F, float0, 0.01F);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyTexture((HomeTexture) null);
      homeEnvironment0.clone();
      String string0 = "X9To3gN\\cX^!\\RrZe";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "-[<PRf/";
      String string2 = ".ttmp";
      try { 
        MockURL.URL("-[<PRf/", "X9To3gNcX^!RrZe", "X9To3gNcX^!RrZe");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: -[<prf/
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=3.193764486816496
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoHeight(12);
      homeEnvironment0.setGroundColor(46);
      homeEnvironment0.setPhotoHeight(2110);
      homeEnvironment0.setPhotoWidth(2110);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth((-1238));
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setVideoQuality(46);
      homeEnvironment0.setSubpartSizeUnderLight(1105.0872F);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(1703);
      homeEnvironment0.getVideoFrameRate();
      float float0 = homeEnvironment0.getWallsAlpha();
      assertEquals(1105.0872F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(0.0F, float0, 0.01F);
  }

  /**
  //Test case number: 34
  /*Coverage entropy=3.3925683509414517
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSkyColor(23);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth((-26));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setPhotoHeight(7);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setGroundColor(3);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setPhotoWidth(21);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setSubpartSizeUnderLight((-30.77353F));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality((-1940));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.getPhotoAspectRatio();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals((-30.77353F), homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1847, (HomeTexture) null, 1847, (HomeTexture) null, (-435), 1847);
      assertEquals((-435), homeEnvironment0.getLightColor());
      
      homeEnvironment0.setLightColor(1847);
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getGroundColor();
      int int0 = homeEnvironment0.getLightColor();
      assertEquals(1847, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.456243763431945
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor(0);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(3);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(3);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setSubpartSizeUnderLight(3);
      homeEnvironment0.setGroundColor(33);
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setPhotoWidth((-1238));
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(0);
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSubpartSizeUnderLight(3);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getWallsAlpha();
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      System.setCurrentTimeMillis(0L);
      homeEnvironment0.clone();
      homeEnvironment0.getVideoAspectRatio();
      homeEnvironment0.getGroundTexture();
      assertEquals(3.0F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoWidth((-3148));
      homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(41.258232F, 1.3333334F, 41.258232F, 41.258232F, (-1.0F), 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("=5Y:TEs@(~0z[G^Kq5");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)108;
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("=5Y:TEs@(~0z[G^Kq5", (PropertyChangeListener) null);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy0);
      byteArray0[2] = (byte)33;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      camera0.clone();
      Camera camera2 = camera1.clone();
      camera2.setX((-2125.5F));
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera3 = new Camera(12.349535F, (-1.0F), 0.0F, (-542.0F), (-2871.87F), 12.349535F, (-650L), camera_Lens0);
      camera1.setCamera(camera2);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.addLast(camera2);
      linkedList0.addLast(camera0);
      Random.setNextRandom((-1363));
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSubpartSizeUnderLight(1758.7206F);
      homeEnvironment0.clone();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float0 = 4.6066F;
      String string0 = "X9Tod3gN\\cX^!\\RrZe";
      String string1 = null;
      try { 
        MockURL.URL(uRL0, (String) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = true;
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf(")0fY4P1{gZ#x@O7R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.)0fY4P1{gZ#x@O7R
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      int int0 = 2342;
      String string0 = "PHOTO_HEIGHT";
      Content content0 = null;
      CatalogTexture catalogTexture0 = new CatalogTexture("PHOTO_HEIGHT", "PHOTO_HEIGHT", (Content) null, 2342, 2342, "PHOTO_HEIGHT");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      int int1 = 14;
      HomeEnvironment homeEnvironment1 = new HomeEnvironment(2342, homeTexture0, 14, homeTexture0, 2342, (-2719.152F));
      homeEnvironment1.clone();
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float0 = 4.6066F;
      MockURL.URL(uRL0, "");
      TemporaryURLContent temporaryURLContent1 = new TemporaryURLContent(uRL0);
      // Undeclared exception!
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(temporaryURLContent1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1238), (HomeTexture) null, 0, (HomeTexture) null, 0, (-30.77353F));
      homeEnvironment0.setLightColor(0);
      homeEnvironment0.setPhotoQuality(33);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor(33);
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment.DrawingMode[] homeEnvironment_DrawingModeArray0 = HomeEnvironment.DrawingMode.values();
      assertEquals(3, homeEnvironment_DrawingModeArray0.length);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=3.3932303833810415
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setPhotoHeight(7);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoHeight((-26));
      homeEnvironment1.getPhotoWidth();
      homeEnvironment1.setPhotoWidth((-26));
      homeEnvironment0.setGroundColor((-1940));
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight((-1663.9F));
      homeEnvironment1.setPhotoWidth((-2210));
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(2368.906F);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment2.getPhotoHeight();
      homeEnvironment3.setPhotoQuality(21);
      homeEnvironment3.getVideoFrameRate();
      homeEnvironment3.getWallsAlpha();
      homeEnvironment3.getPhotoAspectRatio();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio1);
      assertEquals(2368.906F, homeEnvironment0.getSubpartSizeUnderLight(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.100479061876036
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setVideoFrameRate((-1940));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("'UxcT}PJQtq", propertyChangeListener0);
      homeEnvironment0.setPhotoQuality(2704);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("'UxcT}PJQtq", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(320, 320, 0.0F, 1.3333334F, 2704, 0.0F);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "'UxcT}PJQtq", object0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("f5=<EQt^' OX=2dXZV", propertyChangeListenerProxy1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setCeillingLightColor(0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setCeillingLightColor((-2027));
      homeEnvironment1.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.getVideoQuality();
      String string0 = "6>\\<lqr_l?41]4*c";
      TexturesCategory texturesCategory0 = new TexturesCategory("6><lqr_l?41]4*c");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(3982);
      homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera((-1.0F), (-346.3F), (-1.0F), 151.12F, 0.0F, (-1.2442528F));
      Camera camera1 = camera0.clone();
      Camera.convertTimeToTimeZone(1423L, "|IQJnP8JCX\"=^5O");
      Camera camera2 = camera1.clone();
      camera0.clone();
      camera0.setX(1165.6268F);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("|IQJnP8JCX\"=^5O", propertyChangeListener0);
      camera2.removePropertyChangeListener(propertyChangeListenerProxy0);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera3 = new Camera((-346.3F), (-346.3F), (-1331.0F), (-1.2442528F), (-650L), 127.73352F, (-755L), camera_Lens0);
      Camera camera4 = camera0.clone();
      camera4.setY((-755L));
      camera4.setCamera(camera2);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera0);
      linkedList0.addLast(camera1);
      Random.setNextRandom((-2937));
  }

  /**
  //Test case number: 45
  /*Coverage entropy=3.022794924510636
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setVideoFrameRate((-1940));
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("'UxcT}PJQtq", propertyChangeListener0);
      homeEnvironment0.setPhotoQuality(2704);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("'UxcT}PJQtq", propertyChangeListenerProxy0);
      Camera camera0 = new Camera(320, 320, 320, 1.3333334F, 2704, 320);
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera0, "'UxcT}PJQtq", object0, propertyChangeListenerProxy1);
      propertyChangeListenerProxy1.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("f5=<EQt^' OX=2dXZV", propertyChangeListenerProxy1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setCeillingLightColor(0);
      homeEnvironment0.setCeillingLightColor((-2027));
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      TexturesCategory texturesCategory0 = new TexturesCategory("6><lqr_l?41]4*c");
      // Undeclared exception!
      try { 
        texturesCategory0.getTexture(6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment.Property.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-2082), (HomeTexture) null, (-1217), (HomeTexture) null, (byte)7, (-1217));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1217.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals((-2082), homeEnvironment1.getGroundColor());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(7, homeEnvironment1.getLightColor());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-1217), homeEnvironment1.getSkyColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3586685692998843
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setSkyColor(23);
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth((-26));
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(23);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(320);
      homeEnvironment0.setGroundColor(7);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setPhotoWidth(21);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight((-30.77353F));
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment1.setPhotoQuality((-1940));
      homeEnvironment1.getWallsAlpha();
      homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      Random.setNextRandom(320);
      homeEnvironment1.clone();
      assertEquals(23, homeEnvironment0.getSkyColor());
      assertEquals((-1940), homeEnvironment1.getPhotoQuality());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("j9", "\"zbP Zk*xu", (Content) null, 1.3333334F, 1.3333334F, "ZTp_f3x0+c# ");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(11053224, (HomeTexture) null, (-2141378913), homeTexture0, 766, 0.0F);
      homeEnvironment0.setPhotoHeight(2794);
      assertEquals(2794, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, (HomeTexture) null, 0, (HomeTexture) null, 2649, 2649);
      homeEnvironment0.setPhotoWidth(2649);
      homeEnvironment0.getVideoCameraPath();
      homeEnvironment0.setGroundColor(2649);
      homeEnvironment0.getSkyColor();
      // Undeclared exception!
      try { 
        AspectRatio.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.AspectRatio.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoWidth(320);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      Camera camera4 = camera0.clone();
      Camera camera5 = new Camera(1.0F, 2063.0F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera5.setX(1.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      camera1.setFieldOfView(770.1019F);
      camera1.clone();
      Camera camera6 = new Camera(759.0F, (-2871.87F), (-2871.87F), (-1.0F), (-1.0F), 642.0F, (-650L), camera_Lens0);
      Camera camera7 = new Camera((-1.2900817F), 127.73352F, 642.0F, 759.0F, 323.157F, (-1.2900817F), 600030L, camera_Lens0);
      camera7.setCamera(camera4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera4);
      linkedList0.add(camera3);
      linkedList0.add(camera2);
      linkedList0.addLast(camera2);
      assertFalse(linkedList0.contains(camera0));
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2385, (HomeTexture) null, 2385, (HomeTexture) null, 15, 15);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(2385, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(15, homeEnvironment1.getLightColor());
      assertEquals(15.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(320, homeEnvironment1.getVideoWidth());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(2385, homeEnvironment1.getSkyColor());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=3.0257505895352668
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setGroundColor(1957);
      homeEnvironment0.setPhotoHeight(11053224);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setWallsAlpha(1957);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(1957);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth((-805));
      homeEnvironment0.setGroundColor((-2422));
      homeEnvironment0.setSubpartSizeUnderLight((-2334.6F));
      homeEnvironment0.setPhotoWidth(1957);
      homeEnvironment0.getWallsAlpha();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment0.setSubpartSizeUnderLight(929.3115F);
      // Undeclared exception!
      try { 
        homeEnvironment1.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=3.212036882318207
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(6);
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.setWallsAlpha(770.1019F);
      homeEnvironment0.getPhotoHeight();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment0.setDrawingMode(homeEnvironment_DrawingMode0);
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("", propertyChangeListenerProxy0);
      homeEnvironment0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "", aspectRatio0, aspectRatio0);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setSkyColor(6);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("could not load ", propertyChangeListenerProxy1);
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      homeEnvironment0.setSubpartSizeUnderLight(0);
      homeEnvironment0.setVideoQuality(300);
      homeEnvironment0.isAllLevelsVisible();
      homeEnvironment0.setSubpartSizeUnderLight(300);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoQuality(1239);
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(uRL0, false);
      CatalogTexture catalogTexture0 = new CatalogTexture("RATIO_4_3", resourceURLContent0, 421, 421, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(421, homeTexture0, 421, homeTexture0, 421, 421);
      homeEnvironment0.getGroundTexture();
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(421, homeEnvironment0.getLightColor());
      assertEquals(421, homeEnvironment0.getGroundColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(421.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(421, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture("Gy", (Content) null, 1176, 1176);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(1176, homeTexture0, 433, homeTexture0, (-1371), (-1371));
      homeEnvironment0.getSkyTexture();
      homeEnvironment0.getSkyTexture();
      assertEquals((-1371), homeEnvironment0.getLightColor());
      assertEquals(433, homeEnvironment0.getSkyColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals((-1371.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(1176, homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture("", "JdObvSA2 F?a]", (Content) null, (-382.0F), (-382.0F), "", true);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-1510), homeTexture0, 2042, homeTexture0, (-3069), (-1510));
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals((-1510), homeEnvironment0.getGroundColor());
      assertEquals((-3069), homeEnvironment0.getLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-1510.0F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(2042, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.070976373972562
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.OBSERVER_CAMERA_ELEVATION_ADJUSTED;
      String string0 = "gE-wYUx";
      homeEnvironment0.setPhotoHeight(0);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("gE-wYUx", propertyChangeListener0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      Object object0 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(homeEnvironment1, "", object0, "gE-wYUx");
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      int int0 = 0;
      homeEnvironment1.clone();
      HomeTexture homeTexture0 = null;
      try {
        homeTexture0 = new HomeTexture((TextureImage) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.eteks.sweethome3d.model.HomeTexture", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.isObserverCameraElevationAdjusted();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      camera0.clone();
      Camera camera4 = new Camera(1.0F, 2063.0F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera1.setX(1.7777778F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera5 = new Camera(642.0F, 1.0F, 1.0F, 2063.0F, (-4713.0366F), 41.258232F, (-650L), camera_Lens0);
      camera0.setName("X9Tod3gNcX^!RrZe");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("X9Tod3gNcX^!RrZe", propertyChangeListener0);
      camera0.removePropertyChangeListener(propertyChangeListenerProxy0);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera6 = new Camera((-1.2900817F), 642.0F, 737.7047F, 1.0F, 41.258232F, 41.258232F, (-650L), camera_Lens1);
      camera4.setCamera(camera2);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera1);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>(linkedList0);
      linkedList1.addLast(camera3);
      assertEquals(1392409281320L, camera3.getTime());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture("X5VCW-AkQSh", "X5VCW-AkQSh", (Content) null, (-293.7634F), (-293.7634F), "ImW", false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(13427964, homeTexture0, 13427964, homeTexture0, (-1708), (-293.7634F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13427964, homeEnvironment1.getGroundColor());
      assertEquals((-293.7634F), homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals((-1708), homeEnvironment1.getLightColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      CatalogTexture catalogTexture0 = new CatalogTexture("com.eteks.sweethome3d.model.TexturesCategory", (Content) null, 2, 2);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, (-1121), 46, (-1121));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(46, homeEnvironment1.getLightColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals((-1121), homeEnvironment1.getSkyColor());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertEquals(2, homeEnvironment1.getGroundColor());
      assertEquals((-1121.0F), homeEnvironment1.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("e/", "e/", (Content) null, 0, 2264.2908F, "VIDEO_FRAME_RATE");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(0, homeTexture0, (-1604), homeTexture0, 0, 2.0F);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      int int0 = 534;
      homeEnvironment1.setLightColor(534);
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("com.eteks.sweethome3d.model.AspectRatio", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("VIDEO_FRAME_RATE", propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(534, homeTexture0, (-2017), homeTexture0, 2083, 3.0F);
      PropertyChangeEvent propertyChangeEvent0 = null;
      try {
        propertyChangeEvent0 = new PropertyChangeEvent((Object) null, "[uh`mn&j!eqTAON^mN", homeEnvironment2, homeEnvironment2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null source
         //
         verifyException("java.util.EventObject", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.748058988887039
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-2266.431F));
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_3_2;
      homeEnvironment1.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment1.setPhotoHeight(18);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(697);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera0 = new Camera(697, (-1071L), (-465.606F), (-2266.431F), 697, 1.0F, 697, camera_Lens0);
      Camera camera1 = new Camera(1.0F, (-3102.9983F), (-26.0F), (-1461.1902F), (-71.24456F), (-714L));
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      camera1.setX((-1071L));
      camera3.setCamera(camera1);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.addLast(camera0);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      assertEquals((-2266.431F), homeEnvironment0.getWallsAlpha(), 0.01F);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=3.3622156628717765
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(8);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setGroundColor((-1940));
      homeEnvironment0.setPhotoHeight(7);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setWallsAlpha((-1468.5948F));
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(8);
      homeEnvironment0.getPhotoWidth();
      homeEnvironment0.setPhotoWidth(7);
      homeEnvironment0.setGroundColor(8);
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      homeEnvironment0.setSubpartSizeUnderLight(320);
      homeEnvironment0.setPhotoWidth(21);
      homeEnvironment0.getWallsAlpha();
      homeEnvironment0.setVideoWidth(320);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte) (-48);
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte) (-111);
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte)1;
      homeEnvironment0.setPhotoQuality((-1940));
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getWallsAlpha();
      AspectRatio aspectRatio2 = AspectRatio.RATIO_2_1;
      assertSame(aspectRatio2, aspectRatio1);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setGroundTexture((HomeTexture) null);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      Camera camera0 = new Camera(4.6066F, (-1.0F), (-2871.87F), (-1.0F), (-1.0F), 1.3333334F);
      Camera camera1 = camera0.clone();
      camera1.setName("");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera0.clone();
      camera0.setX(1.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera4 = new Camera(13.0F, (-1461.1902F), (-754.02F), 1.3333334F, (-2334.6F), (-2334.6F), (-650L), camera_Lens0);
      Camera camera5 = camera3.clone();
      camera2.setCamera(camera5);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera4);
      linkedList0.addLast(camera0);
      Random.setNextRandom((-2937));
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "DgZW", object1, homeEnvironment_Property0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(533);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoQuality(0);
      homeEnvironment0.getVideoFrameRate();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      HomeEnvironment.Property[] homeEnvironment_PropertyArray0 = HomeEnvironment.Property.values();
      assertEquals(20, homeEnvironment_PropertyArray0.length);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      System.setCurrentTimeMillis((-1071L));
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      CatalogTexture catalogTexture0 = new CatalogTexture("VIDEO_QUALITY", "2&<k64", (Content) null, (-1071L), (-773.7F), "VIDEO_QUALITY", true);
      CatalogTexture catalogTexture1 = new CatalogTexture("2&<k64", "VIDEO_QUALITY", (Content) null, (-1071L), (-1616.0F), "2&<k64", true);
      catalogTexture0.compareTo(catalogTexture1);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      homeEnvironment0.setGroundTexture(homeTexture0);
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.getSkyTexture();
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13427964, homeEnvironment0.getSkyColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(13684944, homeEnvironment0.getLightColor());
  }

  /**
  //Test case number: 67
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setWallsAlpha((-31.125107F));
      homeEnvironment0.clone();
      Camera camera0 = new Camera((-1.0F), 2.0F, 0.0F, 1.7777778F, (-346.3F), 1.7777778F);
      Camera camera1 = camera0.clone();
      camera0.setName("LIGHT_COLOR");
      Camera camera2 = camera0.clone();
      Camera camera3 = camera2.clone();
      Camera camera4 = camera0.clone();
      camera1.setX((-346.3F));
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera5 = new Camera(127.73352F, 1.7777778F, (-3273.8286F), 2.0F, (-2134.45F), (-755L), 1L, camera_Lens0);
      Camera camera6 = camera1.clone();
      camera6.clone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Camera camera7 = new Camera(829.76F, (-755L), 127.73352F, (-1.0F), 1L, 3497.1804F, 0L, camera_Lens0);
      camera7.setCamera(camera3);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera4);
      linkedList0.addLast(camera2);
      Random.setNextRandom((-2937));
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("j9", "\"zbP Zk*xu", (Content) null, (-0.63792753F), (-0.63792753F), "\"zbP Zk*xu");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, 2, homeTexture0, 673, 4246.0005F);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      // Undeclared exception!
      try { 
        homeEnvironment0.setVideoAspectRatio(aspectRatio0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unsupported aspect ratio FREE_RATIO
         //
         verifyException("com.eteks.sweethome3d.model.HomeEnvironment", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.359747399048139
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ")0fY4P1{gZ#x@O7R");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-3);
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)107;
      byteArray0[4] = (byte)33;
      byteArray0[6] = (byte) (-51);
      byteArray0[7] = (byte) (-51);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setVideoFrameRate((byte)107);
      homeEnvironment0.setVideoFrameRate((byte) (-51));
      AspectRatio aspectRatio0 = AspectRatio.SQUARE_RATIO;
      homeEnvironment0.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.setVideoCameraPath((List<Camera>) null);
      // Undeclared exception!
      try { 
        HomeEnvironment.DrawingMode.valueOf(")0fY4P1{gZ#x@O7R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.DrawingMode.)0fY4P1{gZ#x@O7R
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setWallsAlpha(0.0F);
      String string0 = "X9Tod3gN\\cX^!\\RrZe";
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "-[<PRf/";
      String string2 = ".tmp";
      URL uRL0 = MockURL.getFtpExample();
      URL uRL1 = MockURL.URL(uRL0, "");
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL1);
      try { 
        TemporaryURLContent.copyToTemporaryURLContent(temporaryURLContent0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.3889133672295046
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setCeillingLightColor(11);
      homeEnvironment0.setVideoFrameRate(8);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("'UxcT}PJQtq", propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setCeillingLightColor(11);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy(",#&[ R8U$Xf,Wbx", propertyChangeListenerProxy0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("-T&r?D82(>hy", propertyChangeListenerProxy1);
      Object object0 = new Object();
      HomeEnvironment homeEnvironment1 = new HomeEnvironment();
      Object object1 = new Object();
      Object object2 = new Object();
      Camera.Lens camera_Lens0 = Camera.Lens.PINHOLE;
      Camera camera0 = new Camera(1.0F, 1827.0292F, (-1979.0F), 1.0F, (-1979.0F), 1827.0292F, 684L, camera_Lens0);
      Camera camera1 = camera0.clone();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(camera1, "'UxcT}PJQtq", (Object) null, "'UxcT}PJQtq");
      propertyChangeListenerProxy2.propertyChange(propertyChangeEvent0);
      HomeEnvironment homeEnvironment2 = new HomeEnvironment();
      homeEnvironment0.removePropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment.Property.values();
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf(",#&[ R8U$Xf,Wbx");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.,#&[ R8U$Xf,Wbx
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      HomeEnvironment.Property.values();
      URL uRL0 = MockURL.getFileExample();
      URLContent uRLContent0 = new URLContent(uRL0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", uRLContent0, 300, (-1461.1902F), false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(300, homeTexture0, 300, 7, (-2177.4631F));
      int int0 = homeEnvironment0.getVideoQuality();
      assertEquals((-2177.4631F), homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(7, homeEnvironment0.getLightColor());
      assertEquals(300, homeEnvironment0.getGroundColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(0, int0);
      assertEquals(300, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
  }

  /**
  //Test case number: 73
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(true);
      homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      camera0.clone();
      Camera camera4 = new Camera(1.0F, 2063.0F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera1.setX(1.7777778F);
      Camera.Lens camera_Lens0 = Camera.Lens.FISHEYE;
      Camera camera5 = new Camera(642.0F, 1.0F, 1.0F, 2063.0F, (-4694.3145F), 41.258232F, (-650L), camera_Lens0);
      camera0.setFieldOfView((-650L));
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera6 = new Camera((-1.2900817F), 642.0F, 737.7047F, 1.0F, 41.258232F, 41.258232F, (-650L), camera_Lens1);
      camera4.setCamera(camera2);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera2);
      linkedList0.add(camera1);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>(linkedList0);
      linkedList1.addLast(camera3);
      assertFalse(linkedList0.equals((Object)linkedList1));
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      System.setCurrentTimeMillis((-1071L));
      Class<Camera> class0 = Camera.class;
      ResourceURLContent resourceURLContent0 = new ResourceURLContent(class0, "", false);
      TemporaryURLContent temporaryURLContent0 = TemporaryURLContent.copyToTemporaryURLContent(resourceURLContent0);
      CatalogTexture catalogTexture0 = new CatalogTexture("", (String) null, temporaryURLContent0, (-1071L), 7, "OUTLINE");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(7, homeTexture0, 7, 7, 2976.0F);
      int int0 = homeEnvironment0.getGroundColor();
      assertEquals(7, homeEnvironment0.getLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(7, int0);
      assertEquals(2976.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(7, homeEnvironment0.getSkyColor());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3");
      CatalogTexture catalogTexture0 = new CatalogTexture(":[1D&;_ c4Rs5x0g8", (Content) null, 492.0F, 492.0F, false);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture(":[1D&;_ c4Rs5x0g8", "Q-Em)Wjt8Q", (Content) null, 1017.0F, 1017.0F, "PINHOLE");
      catalogTexture1.getCategory();
      catalogTexture1.setCategory((TexturesCategory) null);
      TexturesCategory texturesCategory0 = new TexturesCategory("3");
      catalogTexture1.setCategory(texturesCategory0);
      catalogTexture1.compareTo(catalogTexture0);
      catalogTexture0.compareTo(catalogTexture1);
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(3632, homeTexture0, 2988, homeTexture0, 2988, 3632);
      homeEnvironment0.setVideoWidth(2896);
      homeEnvironment0.getVideoCameraPath();
      assertEquals(2896, homeEnvironment0.getVideoWidth());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setVideoWidth((-931));
      homeEnvironment0.setVideoQuality((-2422));
      homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      Camera camera4 = camera0.clone();
      Camera camera5 = new Camera(1.0F, 41.258232F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera5.setX(1.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera6 = new Camera(759.0F, (-2871.87F), (-2871.87F), (-1.0F), (-4694.3145F), 642.0F, (-650L), camera_Lens0);
      Camera camera7 = new Camera((-1.2900817F), 127.73352F, 642.0F, 759.0F, 323.157F, (-1.2900817F), 600000L, camera_Lens0);
      camera7.setCamera(camera4);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera4);
      linkedList0.add(camera3);
      linkedList0.add(camera2);
      linkedList0.addLast(camera2);
      assertNull(camera2.getName());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      System.setCurrentTimeMillis((-1071L));
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(5, (HomeTexture) null, 5, 5, 5);
      float float0 = homeEnvironment0.getSubpartSizeUnderLight();
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(5, homeEnvironment0.getGroundColor());
      assertEquals(5, homeEnvironment0.getLightColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(5, homeEnvironment0.getSkyColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(5.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment.DrawingMode homeEnvironment_DrawingMode0 = HomeEnvironment.DrawingMode.FILL_AND_OUTLINE;
      homeEnvironment1.setDrawingMode(homeEnvironment_DrawingMode0);
      URL uRL0 = MockURL.getFtpExample();
      TemporaryURLContent temporaryURLContent0 = new TemporaryURLContent(uRL0);
      float float0 = 4.6066F;
      String string0 = "9Td3gN\\cX^!\\RrZe";
      String string1 = null;
      homeEnvironment1.getDrawingMode();
      URL uRL1 = null;
      try { 
        MockURL.URL((URL) null, (String) null);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setSkyColor((-2146014970));
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(4.6066F, (-1.0F), (-2871.87F), (-1.0F), (-1.0F), 1.3333334F);
      Camera camera1 = camera0.clone();
      camera1.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      camera0.clone();
      camera0.setX(1.0F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera3 = new Camera((-458.327F), 1.0F, (-458.327F), 4.6066F, 12.349535F, (-2040.5153F), (-650L), camera_Lens0);
      camera1.setCamera(camera3);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.addLast(camera2);
      Random.setNextRandom(2450);
      int int0 = homeEnvironment1.getSkyColor();
      assertEquals((-2146014970), int0);
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.87738960077541
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getVideoWidth();
      homeEnvironment0.setObserverCameraElevationAdjusted(true);
      homeEnvironment0.setPhotoWidth(0);
      homeEnvironment0.setSubpartSizeUnderLight(0.0F);
      homeEnvironment0.setVideoWidth(13684944);
      homeEnvironment0.setObserverCameraElevationAdjusted(false);
      AspectRatio aspectRatio0 = AspectRatio.FREE_RATIO;
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      homeEnvironment0.setPhotoHeight(320);
      homeEnvironment0.getPhotoWidth();
      AspectRatio aspectRatio1 = AspectRatio.RATIO_2_1;
      homeEnvironment0.setVideoAspectRatio(aspectRatio1);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)83;
      byteArray0[1] = (byte)123;
      byteArray0[1] = (byte)83;
      byteArray0[3] = (byte)83;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)7;
      byteArray0[6] = (byte)7;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      CatalogTexture catalogTexture0 = new CatalogTexture("j9", "\"zbP Zk*xu", (Content) null, 1.0F, 1.0F, "\"zbP Zk*xu");
      catalogTexture0.getCategory();
      catalogTexture0.setCategory((TexturesCategory) null);
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment(2, homeTexture0, 2, homeTexture0, 2, 4246.0005F);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.setPhotoQuality(2);
      assertEquals(2, homeEnvironment0.getPhotoQuality());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setSkyColor(0);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("RFzD>:!nyujs+:3MGCv", propertyChangeListener0);
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy("RFzD>:!nyujs+:3MGCv", propertyChangeListenerProxy0);
      Object object0 = new Object();
      propertyChangeListenerProxy1.propertyChange((PropertyChangeEvent) null);
      Object object1 = new Object();
      Object object2 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object2, "RFzD>:!nyujs+:3MGCv", object1, object1);
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      PropertyChangeListenerProxy propertyChangeListenerProxy2 = new PropertyChangeListenerProxy("DgZW", propertyChangeListenerProxy1);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy2);
      homeEnvironment0.setCeillingLightColor(14);
      homeEnvironment0.setPhotoHeight(0);
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("DgZW");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.DgZW
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.9224967595081845
  */
  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.PHOTO_WIDTH;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setVideoFrameRate(0);
      homeEnvironment0.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      homeEnvironment1.setLightColor(0);
      HomeEnvironment.Property homeEnvironment_Property1 = HomeEnvironment.Property.VIDEO_ASPECT_RATIO;
      PropertyChangeListener propertyChangeListener1 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy1 = new PropertyChangeListenerProxy((String) null, propertyChangeListener1);
      homeEnvironment1.addPropertyChangeListener(homeEnvironment_Property1, propertyChangeListenerProxy1);
      homeEnvironment1.setVideoQuality(0);
      homeEnvironment0.isAllLevelsVisible();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      homeEnvironment1.setVideoAspectRatio(aspectRatio0);
      homeEnvironment0.getVideoAspectRatio();
      assertTrue(homeEnvironment0.isAllLevelsVisible());
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Random.setNextRandom((-726));
      URLContent uRLContent0 = new URLContent((URL) null);
      CatalogTexture catalogTexture0 = new CatalogTexture("3fbBHx0?Bn}u.YZEZ@", "3fbBHx0?Bn}u.YZEZ@", uRLContent0, (-726), (-726), "3fbBHx0?Bn}u.YZEZ@");
      HomeTexture homeTexture0 = new HomeTexture(catalogTexture0);
      CatalogTexture catalogTexture1 = new CatalogTexture("PAq", uRLContent0, (-3261.79F), (-3261.79F));
      catalogTexture0.compareTo(catalogTexture1);
      CatalogTexture catalogTexture2 = new CatalogTexture("PAq", "^", uRLContent0, (-3261.79F), 7, "FILL", false);
      catalogTexture0.compareTo(catalogTexture2);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment((-726), homeTexture0, 7, homeTexture0, 8, 7);
      homeEnvironment0.getVideoAspectRatio();
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(8, homeEnvironment0.getLightColor());
      assertEquals(320, homeEnvironment0.getVideoWidth());
      assertEquals(7.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(7, homeEnvironment0.getSkyColor());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertEquals((-726), homeEnvironment0.getGroundColor());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setAllLevelsVisible(false);
      homeEnvironment0.clone();
      homeEnvironment0.isAllLevelsVisible();
      Camera camera0 = new Camera(4.6066F, (-1.0F), (-2871.87F), (-1.0F), (-1.0F), 1.3333334F);
      Camera camera1 = camera0.clone();
      camera1.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = new Camera((-1.0F), 4.6066F, 1.3333334F, 4.6066F, 1.0F, 1.3333334F);
      camera0.setX(1.0F);
      Camera.convertTimeToTimeZone(2194L, "X9Tod3gNcX^!RrZe");
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("", propertyChangeListener0);
      camera0.addPropertyChangeListener(propertyChangeListenerProxy0);
      Camera camera3 = new Camera((-650L), (-458.327F), 2668.395F, 1.0F, 2668.395F, 1.0F);
      camera1.setCamera(camera3);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.addLast(camera2);
      Random.setNextRandom(2450);
      System.setCurrentTimeMillis((-650L));
      // Undeclared exception!
      try { 
        HomeEnvironment.Property.valueOf("3dM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.eteks.sweethome3d.model.HomeEnvironment.Property.3dM
         //
         verifyException("java.lang.Enum", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      System.setCurrentTimeMillis((-1071L));
      HomeEnvironment.DrawingMode.values();
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.getSkyColor();
      int int0 = homeEnvironment0.getSkyColor();
      assertEquals(13684944, homeEnvironment0.getLightColor());
      assertEquals(13684944, homeEnvironment0.getCeillingLightColor());
      assertEquals(240, homeEnvironment0.getVideoHeight());
      assertEquals(0.0F, homeEnvironment0.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment0.getPhotoWidth());
      assertEquals(300, homeEnvironment0.getPhotoHeight());
      assertEquals(11053224, homeEnvironment0.getGroundColor());
      assertEquals(13427964, int0);
      assertEquals(25, homeEnvironment0.getVideoFrameRate());
      assertTrue(homeEnvironment0.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.218456332760875
  */
  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = new HomeEnvironment(2145832354, (HomeTexture) null, (-52), (-52), (-52));
      List<Camera> list0 = homeEnvironment2.getVideoCameraPath();
      homeEnvironment1.setVideoCameraPath(list0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera(323.157F, 1.0F, (-1.0F), 41.258232F, 1.0F, 1.0F);
      Camera camera1 = camera0.clone();
      camera0.setName("X9Tod3gNcX^!RrZe");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      camera0.clone();
      Camera camera4 = new Camera(1.0F, 2063.0F, (-1.0F), 1.0F, 1.0F, 1.0F);
      camera1.setX(1.7777778F);
      Camera.Lens camera_Lens0 = Camera.Lens.SPHERICAL;
      Camera camera5 = new Camera(642.0F, 1.0F, 1.0F, 2063.0F, (-4694.3145F), 41.258232F, (-650L), camera_Lens0);
      Camera.Lens camera_Lens1 = Camera.Lens.FISHEYE;
      Camera camera6 = new Camera((-1.2900817F), 642.0F, 737.7047F, 1.0F, 41.258232F, 41.258232F, (-650L), camera_Lens1);
      camera4.setCamera(camera2);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera1);
      LinkedList<Camera> linkedList1 = new LinkedList<Camera>(linkedList0);
      linkedList1.addLast(camera3);
      assertFalse(camera2.equals((Object)camera3));
  }

  /**
  //Test case number: 88
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Camera camera0 = new Camera((-1.0F), (-346.3F), (-1.0F), 151.12F, 0.0F, (-0.33839524F));
      Camera camera1 = camera0.clone();
      camera1.setName("LIGHT_COLOR");
      Camera camera2 = camera1.clone();
      Camera camera3 = camera2.clone();
      camera1.clone();
      camera0.setX(1165.6268F);
      Camera.Lens camera_Lens0 = Camera.Lens.NORMAL;
      Camera camera4 = new Camera((-346.3F), (-346.3F), (-1331.0F), (-0.33839524F), (-650L), 127.73352F, (-755L), camera_Lens0);
      Camera camera5 = camera0.clone();
      camera5.setCamera(camera3);
      LinkedList<Camera> linkedList0 = new LinkedList<Camera>();
      linkedList0.add(camera1);
      linkedList0.addLast(camera2);
      AspectRatio aspectRatio0 = homeEnvironment1.getPhotoAspectRatio();
      homeEnvironment0.setPhotoAspectRatio(aspectRatio0);
      assertEquals(13684944, homeEnvironment1.getLightColor());
      assertEquals(13684944, homeEnvironment1.getCeillingLightColor());
      assertEquals(0.0F, homeEnvironment1.getWallsAlpha(), 0.01F);
      assertEquals(400, homeEnvironment1.getPhotoWidth());
      assertEquals(300, homeEnvironment1.getPhotoHeight());
      assertEquals(240, homeEnvironment1.getVideoHeight());
      assertEquals(13427964, homeEnvironment1.getSkyColor());
      assertNotSame(homeEnvironment1, homeEnvironment0);
      assertEquals(11053224, homeEnvironment1.getGroundColor());
      assertEquals(25, homeEnvironment1.getVideoFrameRate());
      assertTrue(homeEnvironment1.isObserverCameraElevationAdjusted());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=2.7808459625592628
  */
  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      homeEnvironment0.setPhotoQuality(4149);
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.DRAWING_MODE;
      PropertyChangeListener propertyChangeListener0 = mock(PropertyChangeListener.class, new ViolatedAssumptionAnswer());
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy((String) null, propertyChangeListener0);
      Object object0 = new Object();
      propertyChangeListenerProxy0.propertyChange((PropertyChangeEvent) null);
      Object object1 = new Object();
      PropertyChangeEvent propertyChangeEvent0 = new PropertyChangeEvent(object0, "DgZW", object1, homeEnvironment_Property0);
      propertyChangeEvent0.toString();
      propertyChangeListenerProxy0.propertyChange(propertyChangeEvent0);
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      homeEnvironment0.setPhotoHeight(533);
      homeEnvironment0.getPhotoQuality();
      homeEnvironment0.getPhotoHeight();
      homeEnvironment0.setPhotoQuality(533);
      homeEnvironment0.getVideoFrameRate();
      homeEnvironment0.getWallsAlpha();
      AspectRatio aspectRatio0 = AspectRatio.RATIO_2_1;
      assertEquals(AspectRatio.RATIO_2_1, aspectRatio0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.6422165264472737
  */
  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      PropertyChangeListenerProxy propertyChangeListenerProxy0 = new PropertyChangeListenerProxy("VIDEO_CAMERA_PATH", (PropertyChangeListener) null);
      HomeEnvironment homeEnvironment0 = new HomeEnvironment();
      HomeEnvironment.Property homeEnvironment_Property0 = HomeEnvironment.Property.GROUND_TEXTURE;
      homeEnvironment0.addPropertyChangeListener(homeEnvironment_Property0, propertyChangeListenerProxy0);
      HomeEnvironment homeEnvironment1 = homeEnvironment0.clone();
      HomeEnvironment homeEnvironment2 = homeEnvironment0.clone();
      homeEnvironment2.setAllLevelsVisible(true);
      HomeEnvironment homeEnvironment3 = homeEnvironment0.clone();
      homeEnvironment2.getVideoQuality();
      homeEnvironment1.getCeillingLightColor();
      homeEnvironment3.setCeillingLightColor((-1303));
      assertEquals((-1303), homeEnvironment3.getCeillingLightColor());
  }
}
