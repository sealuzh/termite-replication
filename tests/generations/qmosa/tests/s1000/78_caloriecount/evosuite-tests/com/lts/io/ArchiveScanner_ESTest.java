/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 15 03:39:38 GMT 2019
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.DirectoryScanner;
import com.lts.io.ImprovedFile;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Collection;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Vector;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "";
      stringArray0[2] = "";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      String[] stringArray1 = new String[3];
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.filesIncluded = vector1;
      stringArray1[1] = "";
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, 
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.listIterator();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "dir1";
      stringArray0[1] = "dir1";
      stringArray0[2] = "dir1";
      stringArray0[3] = "dir1";
      stringArray0[4] = "dir1";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "dir1");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "].}N";
      stringArray0[1] = "**/%*%";
      stringArray0[2] = "**/%*%";
      stringArray0[3] = "**/%*%";
      stringArray0[4] = "dir1";
      stringArray0[5] = "dir1";
      stringArray0[6] = "**/%*%";
      Vector<Object> vector0 = new Vector<Object>();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      vector0.forEach(consumer0);
      vector0.add((Object) "dir1");
      vector0.setElementAt(archiveScanner0, 0);
      archiveScanner0.filesExcluded = vector0;
      stringArray0[7] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.processArchive((File) null, "dir1");
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "**/%*%";
      stringArray0[1] = "**/%*%";
      stringArray0[2] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      stringArray0[3] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      stringArray0[4] = "**/%*%";
      stringArray0[5] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      archiveScanner0.setIncludes(stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[0] = "**/%*%";
      stringArray1[1] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      stringArray1[2] = "**/%*%";
      Vector<Integer> vector1 = new Vector<Integer>();
      archiveScanner0.filesIncluded = vector1;
      archiveScanner0.setExcludes(stringArray1);
      Vector<Object> vector2 = new Vector<Object>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar");
      vector1.removeIf(predicate0);
      Object object0 = new Object();
      vector0.add((Object) "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("**/%*%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "**/%*%";
      stringArray0[1] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      Vector<Object> vector1 = new Vector<Object>();
      archiveScanner0.dirsIncluded = vector1;
      stringArray0[2] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      stringArray0[3] = "**/%*%";
      vector1.add((Object) null);
      stringArray0[4] = "**/%*%";
      stringArray0[5] = "**/%*%";
      stringArray0[6] = "**/%*%";
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      vector0.addAll((Collection<?>) linkedList0);
      stringArray0[7] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<Object> vector2 = new Vector<Object>();
      Object object0 = new Object();
      vector0.add((Object) "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("**/%*%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      Vector<Integer> vector1 = new Vector<Integer>();
      int int0 = 10;
      Integer integer0 = new Integer(8192);
      Integer integer1 = new Integer(2);
      Vector<Object> vector2 = new Vector<Object>();
      Object object0 = new Object();
      Vector<Object> vector3 = new Vector<Object>();
      vector2.add((Object) "Could not remove file, ");
      Object object1 = new Object();
      Object object2 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      Object object3 = new Object();
      vector4.removeElement(object3);
      vector4.add((Object) vector3);
      Object object4 = new Object();
      Object object5 = new Object();
      vector3.add(object5);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "j.ja**/%*%";
      stringArray0[1] = "Could not remove file, ";
      archiveScanner0.setExcludes(stringArray0);
      Integer integer2 = new Integer(1);
      Object object6 = new Object();
      vector2.add(object6);
      archiveScanner0.setIncludes(stringArray0);
      DirectoryScanner.matchPath("&?", "Could not remove file, ");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("j.ja**/%*%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "j.jar";
      archiveScanner0.dirsExcluded = null;
      String[] stringArray0 = new String[2];
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.includes = stringArray0;
      archiveScanner0.haveSlowResults = true;
      stringArray0[0] = "tZm{dir";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setBasedir("IO error scanning directory ");
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.isExcluded("j..j+r0vsf{rv(]`3ti{}.jar**/%*%");
      DirectoryScanner.match("4", "**/%*%");
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "j.jar", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      vector0.trimToSize();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "tmXpds";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, "**/%*%");
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.couldHoldIncluded("KO[xr)%YUi@3}qIV9s{");
      DirectoryScanner.matchPath(".jar", "KO[xr)%YUi@3}qIV9s{");
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(0);
      try { 
        archiveScanner0.processDirectory(improvedFile0, "tmXpds", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/**_/%*%
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = ".jar";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "tempdis";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector1 = new Vector<InputStream>(0, 411);
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.setExcludes(stringArray0);
      Vector<ObjectInputStream> vector2 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      vector0.setSize(2);
      vector0.add((Object) archiveScanner0);
      archiveScanner1.setBasedir("%{!*N)8W");
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.match(stringArray0[1], stringArray0[0]);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.0067795890632527
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "**/%*%";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.add((Object) "**/%*%");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "**/%*%";
      stringArray0[1] = "**/%*%";
      stringArray0[2] = "tmXpds";
      stringArray0[3] = "**/%*%";
      stringArray0[4] = "tmXpds";
      stringArray0[5] = "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar.jar";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      ImprovedFile improvedFile1 = new ImprovedFile((File) null, "fR),hAGf");
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setExcludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile0);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      archiveScanner2.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Object object1 = new Object();
      vector1.add(object1);
      archiveScanner1.setExcludes(archiveScanner2.DEFAULT_ARCHIVE_EXTENSIONS);
      vector1.add(object0);
      archiveScanner1.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string1 = "O%}<EGK_e~";
      DirectoryScanner.matchPath(string1, stringArray0[5]);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      vector0.add((Object) "**/%*%");
      String[] stringArray0 = new String[2];
      stringArray0[0] = "dir1";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, "**/%*%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[15];
      stringArray0[0] = "";
      stringArray0[2] = "";
      archiveScanner0.includes = stringArray0;
      archiveScanner0.addDefaultExcludes();
      Vector<InputStream> vector0 = new Vector<InputStream>();
      String[] stringArray1 = new String[3];
      stringArray1[1] = "";
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "tempdis";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      vector0.setSize(2);
      vector0.add((Object) archiveScanner0);
      archiveScanner1.setBasedir("%{!*N)8W");
      Object object0 = new Object();
      Object object1 = new Object();
      vector0.add(object1);
      archiveScanner0.setExcludes(stringArray0);
      vector0.add((Object) archiveScanner0.dirsExcluded);
      archiveScanner0.setIncludes(stringArray0);
      DirectoryScanner.matchPath("%{!*N)8W", "tempdis");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("**/%*%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = ";~iAdu&SxRw7NbZ=Q8{";
      archiveScanner0.dirsExcluded = null;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = true;
      String string1 = "dMp2H>";
      archiveScanner0.processDirectory(improvedFile0, string1, boolean0);
      String string2 = "mG@XwIu2]";
      boolean boolean1 = DirectoryScanner.matchPath(string0, string2);
      assertFalse(boolean1);
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "tempdis";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      vector0.setSize(2);
      vector0.add((Object) archiveScanner0);
      archiveScanner1.setBasedir("%{!*N)8W");
      Object object0 = new Object();
      vector0.add(object0);
      archiveScanner1.setIncludes(stringArray0);
      DirectoryScanner.match("tempdis", "G9*VSZ0-");
      archiveScanner0.processDirectory((File) null, "78_caloriecount**/%*%", true);
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.listIterator();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      String string0 = "dp2H";
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = ".jar";
      String[] stringArray0 = new String[2];
      String string1 = "tempdis";
      stringArray0[0] = "tempdis";
      Vector<String> vector0 = new Vector<String>();
      archiveScanner0.filesIncluded = vector0;
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath(string1, stringArray0[1]);
      long long0 = (-88L);
      System.setCurrentTimeMillis(long0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.dirsIncluded = null;
      archiveScanner0.dirsExcluded = null;
      String[] stringArray0 = new String[2];
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.haveSlowResults = false;
      stringArray0[0] = "tem{dir";
      archiveScanner0.haveSlowResults = false;
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      archiveScanner0.couldHoldIncluded("**/%*%");
      archiveScanner0.setIncludes(stringArray0);
      System.setCurrentTimeMillis(406L);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, ".EAR", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3120076729259056
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = ".jar";
      String string1 = "**/%*%";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile0);
      vector0.setSize(archiveScanner0.ARCHIVE);
      vector0.add((Object) archiveScanner0);
      String string2 = "%{!*N)8W";
      archiveScanner1.setBasedir(string2);
      archiveScanner0.setIncludes(archiveScanner1.DEFAULT_ARCHIVE_EXTENSIONS);
      DirectoryScanner.matchPath(string1, string0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/tmp");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "_#p\"}jDM),Mq3t(0%U");
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ImprovedFile improvedFile1 = new ImprovedFile("com.lts.application.error.createTempDir", "j.j+r");
      ImprovedFile.createTempImprovedFile("j.j+r", "vsf{rv(]`3ti{}.jar", improvedFile1);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/j.jar0vsf{rv(]`3ti{}.jar");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte) (-29);
      byteArray0[4] = (byte)4;
      byteArray0[6] = (byte)81;
      byteArray0[4] = (byte)4;
      MockFile.createTempFile("vsf{rv(]`3ti{}.jar", (String) null);
      byteArray0[8] = (byte) (-25);
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "vsf{rv(]`3ti{}.jar");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("vsf{rv(]`3ti{}.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/tempdir1.jar-2176.tempdir1.jar");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "Z_YL0vsf{rv(]`3ti{}.jar.jar");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "com.lts.application.error.createTempDir", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.0650855968662414
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.listIterator();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "dir1";
      stringArray0[1] = "dir1";
      stringArray0[2] = "dir1";
      stringArray0[3] = "dir1";
      stringArray0[4] = "dir1";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive((File) null, ".JAR**/%*Q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "tmXpds";
      stringArray0[1] = "**/%*%";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.setExcludes(stringArray0);
      ImprovedFile improvedFile0 = new ImprovedFile((File) null, "**/%*%");
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.2961346570528898
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      vector0.listIterator();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      boolean boolean0 = false;
      String string0 = "dMp2H>";
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory(improvedFile0, string0, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.dirsIncluded = null;
      archiveScanner0.dirsExcluded = null;
      Vector<Locale.LanguageRange> vector0 = new Vector<Locale.LanguageRange>();
      archiveScanner0.dirsIncluded = vector0;
      String[] stringArray0 = new String[2];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.haveSlowResults = false;
      stringArray0[0] = "";
      stringArray0[1] = "";
      archiveScanner0.setIncludes(stringArray0);
      Vector<InputStream> vector1 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector1;
      archiveScanner0.couldHoldIncluded("4");
      archiveScanner0.setIncludes(stringArray0);
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      boolean boolean0 = archiveScanner0.haveSlowResults;
      boolean boolean1 = archiveScanner0.haveSlowResults;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0809586127392572
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      String string0 = "**/%*%";
      Vector<Object> vector0 = new Vector<Object>();
      archiveScanner0.dirsExcluded = vector0;
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      archiveScanner0.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      ImprovedFile improvedFile1 = new ImprovedFile(improvedFile0, string0);
      ArchiveScanner archiveScanner1 = new ArchiveScanner(improvedFile1);
      Vector<InputStream> vector1 = new Vector<InputStream>(archiveScanner0.ARCHIVE, archiveScanner1.ARCHIVE);
      archiveScanner0.filesIncluded = vector1;
      archiveScanner1.setExcludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<ObjectInputStream> vector2 = new Vector<ObjectInputStream>();
      ArchiveScanner archiveScanner2 = new ArchiveScanner(improvedFile1);
      vector0.add((Object) archiveScanner2);
      archiveScanner2.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      // Undeclared exception!
      try { 
        archiveScanner0.processFile(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ImprovedFile improvedFile0 = null;
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      Vector<Integer> vector0 = new Vector<Integer>();
      archiveScanner0.filesNotIncluded = vector0;
      String string0 = "O\"Vkg*W$";
      archiveScanner0.processArchive(improvedFile0, string0);
      long long0 = 697L;
      System.setCurrentTimeMillis(long0);
      archiveScanner0.setIncludes(archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS);
      String string1 = "tion";
      String string2 = ".EAR";
      vector0.add((Integer) archiveScanner0.ARCHIVE);
      DirectoryScanner.matchPath(string2, string1);
      archiveScanner0.processFile(string1);
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.8323649625844873
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ImprovedFile improvedFile1 = new ImprovedFile("com.lts.application.error.createTempDir", "j.jar");
      ImprovedFile.createTempImprovedFile("j.jar", "vsf{rv(]`3ti{}.jar", improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/j.jar0vsf{rv(]`3ti{}.jar");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-110);
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte) (-29);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte)81;
      byteArray0[7] = (byte)4;
      byteArray0[8] = (byte) (-25);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      improvedFile1.setExecutable(true);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      improvedFile0.toPath();
      ImprovedFile.createTempFileName("tempdir1.jar", "tempdir1.jar", improvedFile1);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/tempdir1.jar-2176.tempdir1.jar");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "Z_YL0vsf{rv(]`3ti{}.jar.jar");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, ".ear", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("j.ja", "j.ja");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(10);
      Integer integer1 = new Integer(15);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      Vector<Object> vector2 = new Vector<Object>();
      vector2.add((Object) null);
      vector2.add((Object) null);
      Vector<String> vector3 = new Vector<String>();
      archiveScanner0.filesNotIncluded = vector3;
      Object object1 = new Object();
      vector1.addAll((Collection<?>) vector2);
      vector2.add((Object) null);
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      vector1.add(object3);
      Object object5 = new Object();
      vector1.removeElement(object5);
      String[] stringArray0 = new String[2];
      Object object6 = new Object();
      vector1.add(object6);
      stringArray0[0] = "j.ja";
      stringArray0[1] = "j.ja";
      archiveScanner0.setExcludes(stringArray0);
      Integer integer2 = new Integer((-3226));
      vector1.add((Object) integer2);
      archiveScanner0.setIncludes(stringArray0);
      DirectoryScanner.matchPath("O%}<EGK_e~", "j.ja");
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("j.ja");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(10);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<String, String> function0 = Function.identity();
      unaryOperator0.apply("");
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      unaryOperator0.compose((Function<? super String, ?>) function0);
      vector1.replaceAll(unaryOperator0);
      Integer integer1 = new Integer(10);
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer2 = new Integer(10);
      vector2.retainAll(vector1);
      vector1.add(object0);
      Integer integer3 = new Integer((-438680523));
      Object object1 = new Object();
      vector1.add(object1);
      Integer integer4 = new Integer(10);
      vector2.add((Object) integer4);
      Object object2 = new Object();
      vector1.add((Object) integer0);
      vector1.add((Object) function3);
      Vector<Object> vector3 = new Vector<Object>();
      Object object3 = new Object();
      vector2.add((Object) integer2);
      Integer integer5 = new Integer(10);
      Integer integer6 = new Integer(10);
      Integer integer7 = new Integer((-297148576));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      int int0 = archiveScanner0.toFileType(improvedFile0);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<InputStream> vector0 = new Vector<InputStream>();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.isArchive(improvedFile0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-2462);
      try { 
        pipedOutputStream0.write(int0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", "tempdir1.jar2j.jar0vsf{rv(]`3ti{}.jar.jar.jar.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<InputStream> vector0 = new Vector<InputStream>();
      Vector<ObjectInputStream> vector1 = new Vector<ObjectInputStream>();
      Vector<InputStream> vector2 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      vector2.add((InputStream) byteArrayInputStream0);
      Vector<InputStream> vector3 = new Vector<InputStream>(vector0);
      archiveScanner0.isArchive(improvedFile0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile("The system encountered sn error trying to sLve the system settings.", "The system encountered sn error trying to sLve the system settings.");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The system encountered sn error trying to sLve the system settings.");
      Vector<Integer> vector0 = new Vector<Integer>();
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-109);
      byteArray0[2] = (byte) (-109);
      byteArray0[2] = (byte)31;
      byteArray0[4] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The system encountered sn error trying to sLve the system settings.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The system encountered sn error trying to sLve the system settings.");
      Integer integer0 = new Integer(10);
      byte[] byteArray1 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Integer integer1 = new Integer(6);
      Integer integer2 = new Integer((-101));
      Integer integer3 = new Integer((-6051));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#fK7E=>VBG:U9mu");
      MockFile mockFile0 = new MockFile(improvedFile0, "The system encountered sn error trying to sLve the system settings.");
      File file0 = mockFile0.getAbsoluteFile();
      file0.deleteOnExit();
      int int0 = archiveScanner0.toFileType(file0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.4486869174985209
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.dirsExcluded = null;
      archiveScanner0.addDefaultExcludes();
      archiveScanner0.excludes = archiveScanner0.DEFAULT_ARCHIVE_EXTENSIONS;
      Vector<InputStream> vector0 = new Vector<InputStream>();
      archiveScanner0.dirsNotIncluded = vector0;
      ImprovedFile improvedFile0 = new ImprovedFile("root should have null as its parent.", "root should have null as its parent.");
      ArchiveScanner archiveScanner1 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.toFileType(improvedFile0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream1, archiveScanner1.FILE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.929553510001476
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ImprovedFile improvedFile1 = new ImprovedFile("com.lts.application.error.createTempDir", "j.j+r");
      ImprovedFile.createTempImprovedFile("j.j+r", "vsf{rv(]`3ti{}.jar", improvedFile1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/j.jar0vsf{rv(]`3ti{}.jar");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.j+r");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte) (-89);
      byteArray0[3] = (byte) (-29);
      byteArray0[4] = (byte)4;
      byteArray0[6] = (byte)81;
      byteArray0[4] = (byte)4;
      MockFile.createTempFile("vsf{rv(]`3ti{}.jar", (String) null);
      byteArray0[8] = (byte) (-25);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "vsf{rv(]`3ti{}.jar");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("vsf{rv(]`3ti{}.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/tempdir1.jar-2176.tempdir1.jar");
      improvedFile1.mkdirs();
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "Z_YL0vsf{rv(]`3ti{}.jar.jar");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "com.lts.application.error.createTempDir", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8548720307766426
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.j+r");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      ImprovedFile improvedFile1 = new ImprovedFile("com.lts.application.error.createTempDir", "j.j+r");
      ImprovedFile.createTempImprovedFile("j.j+r", "vsf{rv(]`3ti{}.jar", improvedFile1);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/j.jar0vsf{rv(]`3ti{}.jar");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte) (-89);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, (String) null);
      byteArray0[3] = (byte) (-29);
      byteArray0[4] = (byte)4;
      byteArray0[6] = (byte)81;
      byteArray0[4] = (byte)4;
      MockFile.createTempFile("vsf{rv(]`3ti{}.jar", (String) null);
      byteArray0[8] = (byte) (-25);
      improvedFile1.setReadOnly();
      FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "vsf{rv(]`3ti{}.jar");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("vsf{rv(]`3ti{}.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      EvoSuiteFile evoSuiteFile2 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/tempdir1.jar-2176.tempdir1.jar");
      FileSystemHandling.appendStringToFile(evoSuiteFile2, "Z_YL0vsf{rv(]`3ti{}.jar.jar");
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile1, "com.lts.application.error.createTempDir", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.4399756932787802
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ImprovedFile improvedFile0 = new ImprovedFile("The system encountered sn error trying to sLve the system settings.", "The system encountered sn error trying to sLve the system settings.");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "The system encountered sn error trying to sLve the system settings.");
      Vector<Integer> vector0 = new Vector<Integer>();
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-109);
      byteArray0[2] = (byte) (-109);
      byteArray0[2] = (byte)31;
      byteArray0[4] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The system encountered sn error trying to sLve the system settings.");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "The system encountered sn error trying to sLve the system settings.");
      Integer integer0 = new Integer(10);
      byte[] byteArray1 = new byte[4];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      Integer integer1 = new Integer(6);
      Integer integer2 = new Integer((-101));
      Integer integer3 = new Integer((-6055));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#fK7E=>VBG:U9mu");
      MockFile mockFile0 = new MockFile(improvedFile0, "The system encountered sn error trying to sLve the system settings.");
      mockFile0.renameTo(improvedFile0);
      File file0 = mockFile0.getAbsoluteFile();
      file0.deleteOnExit();
      int int0 = archiveScanner0.toFileType(file0);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4471627089619605
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(11);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<String, String> function0 = Function.identity();
      unaryOperator0.apply("");
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      unaryOperator0.compose((Function<? super String, ?>) function0);
      vector1.replaceAll(unaryOperator0);
      Integer integer1 = new Integer(11);
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer2 = new Integer(11);
      vector2.retainAll(vector1);
      vector1.add(object0);
      Integer integer3 = new Integer(11);
      Object object1 = new Object();
      vector1.add(object1);
      Integer integer4 = new Integer(11);
      unaryOperator1.compose((Function<? super Integer, ? extends String>) function2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object2 = new Object();
      vector1.add((Object) integer0);
      vector1.add((Object) function3);
      Vector<Object> vector3 = new Vector<Object>();
      Object object3 = new Object();
      vector2.add((Object) integer2);
      Integer integer5 = new Integer(11);
      Integer integer6 = new Integer(11);
      Integer integer7 = new Integer((-636));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<String, String> function0 = Function.identity();
      unaryOperator0.apply("");
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      function0.andThen((Function<? super String, ?>) function2);
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      unaryOperator0.compose((Function<? super String, ?>) function0);
      vector1.replaceAll(unaryOperator0);
      Vector<Object> vector2 = new Vector<Object>();
      vector2.retainAll(vector1);
      vector1.add(object0);
      Integer integer0 = new Integer(502);
      Object object1 = new Object();
      vector1.add(object1);
      Function<Object, Integer> function4 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      function3.andThen((Function<? super String, ? extends Integer>) function4);
      Object object2 = new Object();
      vector1.add((Object) function3);
      Object object3 = new Object();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(".EAR", ".EAR");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      Vector<ObjectInputStream> vector0 = new Vector<ObjectInputStream>();
      Vector<InputStream> vector1 = new Vector<InputStream>();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Vector<InputStream> vector2 = new Vector<InputStream>(vector0);
      archiveScanner0.isArchive(improvedFile0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "com.lts.io.DirectoryScanner", true);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        pipedInputStream1.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("com.lts.application.error.createTempDir/j.jar/j.jar0vsf{rv(]`3ti{}.jar");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      FileSystemHandling.createFolder(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.toFileType((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.384892433099771
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer(10);
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      Integer integer1 = new Integer((-1791851538));
      vector1.add((Object) integer1);
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer2 = new Integer((-156));
      vector1.add((Object) integer2);
      Vector<Object> vector3 = new Vector<Object>();
      improvedFile0.createTempDir("vsf{rv(]`3ti{}.jar1.tmp**/%*%", "vsf{rv(]`3ti{}.jar1.tmp**/%*%");
      Object object1 = new Object();
      Vector<Object> vector4 = new Vector<Object>();
      vector4.spliterator();
      vector4.add((Object) null);
      vector3.addAll((Collection<?>) vector4);
      vector4.clone();
      Object object2 = new Object();
      vector2.add(object2);
      Object object3 = new Object();
      Object object4 = new Object();
      vector2.add(object4);
      Integer integer3 = new Integer((-373));
      Integer integer4 = new Integer((-373));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(improvedFile0, "d1Mmmhtp", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("", "");
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Object> vector1 = new Vector<Object>();
      Object object0 = new Object();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<String, String> function0 = Function.identity();
      unaryOperator0.apply("");
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function1 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function2 = unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      unaryOperator0.compose((Function<? super String, ?>) function0);
      vector1.replaceAll(unaryOperator0);
      Vector<Object> vector2 = new Vector<Object>();
      vector2.retainAll(vector1);
      vector1.add(object0);
      Integer integer0 = new Integer(502);
      Object object1 = new Object();
      vector1.add(object1);
      Function<Object, Integer> function4 = (Function<Object, Integer>) mock(Function.class, new ViolatedAssumptionAnswer());
      function3.andThen((Function<? super String, ? extends Integer>) function4);
      Object object2 = new Object();
      vector1.add((Object) function3);
      Object object3 = new Object();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("j.ja", "j.ja");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-117);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Vector<ObjectInputStream> vector0 = new Vector<ObjectInputStream>();
      Vector<InputStream> vector1 = new Vector<InputStream>(vector0);
      archiveScanner0.isArchive(improvedFile0);
      PipedInputStream pipedInputStream0 = null;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-1274);
      try { 
        pipedOutputStream0.write(int0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("')j`wLa");
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-1438));
      Vector<Object> vector1 = new Vector<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator1.compose((Function<? super Object, ? extends String>) function0);
      unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator1.andThen((Function<? super String, ?>) unaryOperator0);
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Object, ?>) unaryOperator2);
      unaryOperator1.compose((Function<? super Object, ? extends String>) function2);
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      Integer integer1 = new Integer((-1438));
      Function.identity();
      Integer integer2 = new Integer((-1438));
      vector1.replaceAll(unaryOperator0);
      Integer integer3 = new Integer((-1791851543));
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer4 = new Integer((-1791851543));
      vector1.add((Object) null);
      vector2.add((Object) integer4);
      Integer integer5 = new Integer((-1791851543));
      Object object0 = new Object();
      vector2.add((Object) null);
      Object object1 = new Object();
      vector1.add((Object) integer0);
      vector1.add((Object) unaryOperator0);
      Vector<Object> vector3 = new Vector<Object>();
      Integer integer6 = new Integer((-1438));
      Integer integer7 = new Integer((-1791851543));
      Integer integer8 = new Integer((-1438));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "')j`wLa");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ImprovedFile", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("')j`wLa");
      Vector<Integer> vector0 = new Vector<Integer>();
      Vector<Object> vector1 = new Vector<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator1.compose((Function<? super Object, ? extends String>) function0);
      unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator1.andThen((Function<? super String, ?>) unaryOperator0);
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Object, ?>) unaryOperator2);
      unaryOperator1.compose((Function<? super Object, ? extends String>) function2);
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      Function.identity();
      Function.identity();
      vector1.replaceAll(unaryOperator0);
      Vector<Object> vector2 = new Vector<Object>();
      vector1.add((Object) null);
      vector2.add((Object) null);
      Object object0 = new Object();
      vector1.add((Object) unaryOperator0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "=QQZH*il;LaRqSy");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, ')j`wLa
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("')j`wLa");
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = new Integer((-1438));
      Vector<Object> vector1 = new Vector<Object>();
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator1.compose((Function<? super Object, ? extends String>) function0);
      unaryOperator1.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator1.andThen((Function<? super String, ?>) unaryOperator0);
      Function<Object, String> function2 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      unaryOperator0.andThen((Function<? super Object, ?>) unaryOperator2);
      unaryOperator1.compose((Function<? super Object, ? extends String>) function2);
      unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      Integer integer1 = new Integer((-1438));
      Function.identity();
      Integer integer2 = new Integer((-1438));
      Function.identity();
      vector1.replaceAll(unaryOperator0);
      Integer integer3 = new Integer((-1438));
      Vector<Object> vector2 = new Vector<Object>();
      Integer integer4 = new Integer((-1438));
      vector1.add((Object) null);
      vector2.add((Object) integer4);
      Integer integer5 = new Integer((-1438));
      vector2.add((Object) null);
      Object object0 = new Object();
      vector1.add((Object) integer0);
      Integer integer6 = new Integer((-1438));
      Integer integer7 = new Integer((-1438));
      Integer integer8 = new Integer((-665));
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "')j`wLa", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/termite/projects/78_caloriecount/')j`wLa
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }
}
