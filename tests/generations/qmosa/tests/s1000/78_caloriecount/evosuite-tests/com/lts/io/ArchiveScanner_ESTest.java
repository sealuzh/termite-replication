/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 09 22:54:13 GMT 2020
 */

package com.lts.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.io.ArchiveScanner;
import com.lts.io.ImprovedFile;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArchiveScanner_ESTest extends ArchiveScanner_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.2700181519104905
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "<<~HR");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<<~HR";
      stringArray0[1] = "<<~HR";
      stringArray0[2] = "<<~HR";
      stringArray0[3] = "<<~HR";
      stringArray0[4] = "tempdir0.jar";
      stringArray0[5] = "<<~HR";
      stringArray0[6] = "IO error scanning directory ";
      stringArray0[7] = "0..jar";
      stringArray0[8] = "<<~HR";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processFile("");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("f}x,!C|ZL|2\"C`", " <");
      ImprovedFile improvedFile0 = new ImprovedFile(mockFile0, ".jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      boolean boolean0 = archiveScanner0.isArchive(improvedFile0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("app.files.lastDirectory");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("app.files.lastDirectory", "0.", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.scandir(improvedFile0, "app.files.lastDirectory", true);
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<p<~Hh", "<p<~Hh");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scandir(improvedFile0, "S,JtI$^6fJ!1heWk", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/<p<~Hh/<p<~Hh
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0027182645175161
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("app.files.lastDirectory");
      ImprovedFile improvedFile0 = ImprovedFile.createTempDirectory("app.files.lastDirectory", "0.", (File) mockFile0);
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.scandir(mockFile0, "p&\"4*_", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("tempdir0.jar");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      try { 
        archiveScanner0.scanArchive(improvedFile0, "^=C$XY=qt* I6$KD.i");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, tempdir0.jar
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.scanArchive((File) null, "nner");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      // Undeclared exception!
      try { 
        archiveScanner0.processDirectory((File) null, "..=r", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5118965585343875
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile(":W~DU<,(`");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      try { 
        archiveScanner0.processArchive(improvedFile1, ":W~DU<,(`");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error trying to list archive, /home/ubuntu/replication/scripts/projects/78_caloriecount/:W~DU<,(`/tempdir0
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("+ncTTdsDdxPhy7");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(improvedFile0, "+ncTTdsDdxPhy7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.DirectoryScanner", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0549201679861442
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("`h=");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile1);
      archiveScanner0.scan();
      archiveScanner0.processFile("02KDdY5:U [c\";T");
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.0913030006468518
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "tuoy T$H}";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "tuoy T$H}";
      stringArray0[4] = "<<~HR";
      stringArray0[5] = "tuoy T$H}";
      stringArray0[6] = "$]Hi'OrJ";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processDirectory(improvedFile1, "tuoy T$H}", true);
      assertEquals("/home/ubuntu/replication/scripts/projects/78_caloriecount/<<~HR", improvedFile1.getParent());
  }

  /**
  //Test case number: 12
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      int int0 = archiveScanner0.toFileType(improvedFile1);
      assertEquals(1, int0);
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0547209169068124
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      ImprovedFile improvedFile2 = new ImprovedFile("e}Ie73B\"<M", "");
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      try { 
        archiveScanner0.processDirectory(improvedFile2, "$]Hi'OrJ", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // IO error scanning directory /home/ubuntu/replication/scripts/projects/78_caloriecount/e}Ie73B\"<M
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "tuoy T$H}";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "tuoy T$H}";
      stringArray0[4] = "<<~HR";
      stringArray0[5] = "tuoy T$H}";
      stringArray0[6] = "$]Hi'OrJ";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processArchive(improvedFile1, "$]Hi'OrJ");
      assertTrue(improvedFile1.isAbsolute());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.277034259466139
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      archiveScanner0.setBasedir((File) mockFile0);
      archiveScanner0.scan();
      // Undeclared exception!
      try { 
        archiveScanner0.processArchive(mockFile0, "qMii/[2'|+/j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.archive.AbstractNestedArchive", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.3378606778364337
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "tuoy T$H}";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "tuoy T$H}";
      stringArray0[4] = "<<~HR";
      stringArray0[5] = "tuoy T$H}";
      stringArray0[6] = "$]Hi'OrJ";
      archiveScanner0.excludes = stringArray0;
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      archiveScanner0.processFile("tuoy T$H}");
      assertEquals(0, ArchiveScanner.FILE);
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "<<~HR";
      stringArray0[1] = "";
      stringArray0[2] = ".jar";
      stringArray0[3] = "<<~HR";
      stringArray0[4] = ".jar";
      stringArray0[5] = ".jar";
      archiveScanner0.includes = stringArray0;
      // Undeclared exception!
      try { 
        archiveScanner0.processFile("w!");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.lts.io.ArchiveScanner", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.069917341816382
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "<<~HR");
      ImprovedFile improvedFile1 = improvedFile0.createTempDir();
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile1);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "<<~HR";
      stringArray0[1] = "<<~HR";
      stringArray0[2] = "<<~HR";
      stringArray0[3] = "<<~HR";
      stringArray0[4] = "tempdir0.jar";
      stringArray0[5] = "<<~HR";
      stringArray0[6] = "IO error scanning directory ";
      stringArray0[7] = "0..jar";
      stringArray0[8] = "<<~HR";
      archiveScanner0.setIncludes(stringArray0);
      archiveScanner0.processDirectory(improvedFile1, "", true);
      assertFalse(improvedFile0.equals((Object)improvedFile1));
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0913030006468518
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      archiveScanner0.basedir = (File) improvedFile0;
      archiveScanner0.addDefaultExcludes();
      ImprovedFile.createTempDirectory("g{VUx.$2bd4,TwZY8.jar", "**/%*%", archiveScanner0.basedir);
      archiveScanner0.scan();
      assertEquals(2, ArchiveScanner.ARCHIVE);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.3208883431493221
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImprovedFile improvedFile0 = new ImprovedFile("<<~HR", "");
      ArchiveScanner archiveScanner0 = new ArchiveScanner(improvedFile0);
      MockFile.createTempFile("com.lts.application.ApplicationException", "tuoy T$H}", (File) improvedFile0);
      archiveScanner0.setBasedir((File) improvedFile0);
      archiveScanner0.scan();
      assertEquals(1, ArchiveScanner.DIRECTORY);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0114042647073516
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArchiveScanner archiveScanner0 = new ArchiveScanner((ImprovedFile) null);
      File file0 = MockFile.createTempFile("^=C$XY=qt* I6$KD.i", "r", (File) null);
      int int0 = archiveScanner0.toFileType(file0);
      //  // Unstable assertion: assertEquals(2, int0);
  }
}
