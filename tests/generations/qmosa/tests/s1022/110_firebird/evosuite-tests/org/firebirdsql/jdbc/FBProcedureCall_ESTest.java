/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 04:15:01 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.0996929981499957
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2394);
      fBProcedureParam0.setIndex(2394);
      fBProcedureCall0.addParam(2394, " /`5;-$h%XZE@<XLB");
      fBProcedureParam0.setType(2394);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(63);
      fBProcedureParam1.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      fBProcedureCall0.addParam(63, "EXECUTE PROCEDURE null(null, /`5;-$h%XZE@<XLB)");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.getSQL(false);
      // Undeclared exception!
      fBProcedureCall0.getSQL(true);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.105734061544078
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addParam(1, "y?");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam((-1));
      //  // Unstable assertion: assertEquals(1, fBProcedureParam1.getPosition());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(233);
      //  // Unstable assertion: assertEquals(1, fBProcedureParam2.getIndex());
      
      Object object0 = fBProcedureCall0.clone();
      //  // Unstable assertion: assertNotSame(object0, fBProcedureCall0);
      //  // Unstable assertion: assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.1273994423071634
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(1);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1, "y?");
      fBProcedureParam0.setType(134);
      fBProcedureCall0.getSQL(false);
      fBProcedureParam1.setIndex(80);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam(2397, "EXECUTE PROCEDURE null(null, y?)");
      fBProcedureParam2.setIndex(1422);
      fBProcedureParam1.setValue(fBProcedureParam2);
      fBProcedureParam2.setType(547);
      fBProcedureParam2.setType(63);
      fBProcedureParam1.setIndex((-1));
      fBProcedureParam1.setType(1);
      fBProcedureParam1.setIndex((-2841));
      fBProcedureParam2.setIndex((-1));
      fBProcedureCall0.registerOutParam((-2841), 17);
      fBProcedureCall0.addInputParam(fBProcedureParam2);
      assertTrue(fBProcedureParam2.equals((Object)fBProcedureParam0));
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.7081854035266746
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      int int0 = 2382;
      fBProcedureParam0.setIndex(2382);
      fBProcedureParam0.setIndex(2111);
      fBProcedureParam0.setType(2111);
      fBProcedureParam0.setIndex(2382);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(565, "y?*22,q= Lx");
      fBProcedureParam1.setIndex(591);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall1.addParam(591, "HY009");
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter 591 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.0312884581373156
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(4);
      FBProcedureCall fBProcedureCall1 = (FBProcedureCall)fBProcedureCall0.clone();
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
      
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(2, " ");
      fBProcedureParam0.setIndex(2);
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      fBProcedureCall1.getOutputParam(2);
      assertNotSame(fBProcedureCall1, fBProcedureCall0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.475718602690023
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.clone();
      fBProcedureCall0.clone();
      fBProcedureCall0.setName("");
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(859);
      fBProcedureCall0.getName();
      boolean boolean0 = true;
      fBProcedureCall0.getSQL(true);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.setName("%5N|mvpD=<");
      fBProcedureCall0.mapOutParamIndexToPosition((-232649230));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(547, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=2.5185669865498976
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(7, "y?*22,q= Lx");
      fBProcedureParam0.setIndex(7);
      fBProcedureCall0.mapOutParamIndexToPosition(7);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition(7, false);
      fBProcedureCall0.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(1, true);
      int int0 = 309;
      fBProcedureCall0.clone();
      try { 
        fBProcedureCall0.registerOutParam(309, 284);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.347008843202431
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex((-1));
      fBProcedureParam0.setIndex((-1));
      fBProcedureParam0.setIndex((-158245946));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(313, "y?*22,q= Lx");
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.mapOutParamIndexToPosition((-937), true);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-937), (-158245946));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -938
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.3310356968965933
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2382);
      fBProcedureParam0.setIndex(2111);
      fBProcedureParam0.setType(2111);
      fBProcedureParam0.setIndex(2382);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(565, "y?*22,q= Lx");
      fBProcedureParam1.setIndex(591);
      fBProcedureParam1.setType(565);
      fBProcedureParam1.setType(591);
      fBProcedureParam1.setType(591);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam0.setType(2111);
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam(2111, "hg");
      fBProcedureParam2.setIndex(591);
      fBProcedureParam2.setIndex(591);
      fBProcedureParam2.setType((-38719865));
      fBProcedureParam0.setIndex(3283);
      try { 
        fBProcedureCall0.registerOutParam(2111, (-52465415));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex((-119718364));
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(196);
      fBProcedureParam0.setIndex((-1));
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1));
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam((-1));
      fBProcedureParam1.setType((-1));
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      assertEquals(0, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.080706862338754
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(580);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(580, "y?");
      fBProcedureParam1.setValue(fBProcedureParam0);
      fBProcedureParam0.setType(134);
      fBProcedureCall0.getSQL(false);
      fBProcedureParam1.setIndex(68);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam(2397, "EXECUTE PROCEDURE null(null, y?)");
      fBProcedureParam2.setIndex(1422);
      fBProcedureParam1.setIndex((-1));
      fBProcedureParam1.setType(580);
      fBProcedureParam1.setIndex((-2841));
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-65991943), 1048);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -65991944
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.6838053850766177
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = 40;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(40, "y?*22,q= Lx");
      boolean boolean0 = false;
      fBProcedureCall0.mapOutParamIndexToPosition((-2282));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(40, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2039222562316856
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(2397, "K09[,:bP,");
      fBProcedureParam2.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureParam1.setIndex(1915);
      fBProcedureParam1.setIndex(11);
      fBProcedureParam2.setIndex(11);
      fBProcedureParam0.setIndex(1);
      assertEquals(1, fBProcedureParam0.getType());
      
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      assertEquals(2397, fBProcedureParam2.getPosition());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.6838816704531148
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      int int0 = 2397;
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      int int1 = 1;
      int int2 = (-1);
      fBProcedureParam0.setType((-1));
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addParam(1, "y?");
      fBProcedureParam0.setType(134);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.242720371830329
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(3530, "'7");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      fBProcedureCall0.registerOutParam(2397, 2397);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=2.4313133414072556
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      fBProcedureCall0.addParam(2079, "K09[,:bP,");
      fBProcedureParam0.setType(580);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(580, "y?");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.registerOutParam((-1), 2397);
      fBProcedureCall0.getOutputParam((-1));
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.mapOutParamIndexToPosition((-1), true);
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      assertFalse(object5.equals((Object)object3));
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.6167485219032156
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(true);
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(116);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex((-1));
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureCall2.addInputParam(fBProcedureParam0);
      fBProcedureCall1.registerOutParam((-1), (-1));
      fBProcedureCall1.addInputParam(fBProcedureParam0);
      assertEquals((-1), fBProcedureParam0.getType());
      
      FBProcedureCall fBProcedureCall3 = new FBProcedureCall();
      fBProcedureCall3.setName("{kl");
      fBProcedureCall3.setName("{kl");
      Object object0 = fBProcedureCall3.clone();
      fBProcedureCall2.equals(object0);
      fBProcedureCall1.getInputParam(1);
      assertTrue(fBProcedureCall1.equals((Object)fBProcedureCall0));
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.6831390406349023
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(3309);
      fBProcedureCall0.setName("a 000");
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall1.addParam(0, "07");
      fBProcedureCall1.addOutputParam(fBProcedureParam0);
      fBProcedureCall1.getSQL(true);
      fBProcedureCall0.equals(fBProcedureCall1);
      fBProcedureParam1.setType(0);
      fBProcedureCall1.getSQL(false);
      fBProcedureCall0.getOutputParams();
      fBProcedureCall1.addOutputParam(fBProcedureParam1);
      fBProcedureCall1.mapOutParamIndexToPosition(0, true);
      fBProcedureCall0.clone();
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=2.0676391620993635
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2);
      fBProcedureParam0.setIndex(583);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1049, "]SIv?:c>");
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      int int0 = (-1039);
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getOutputParam(583);
      int int1 = 1;
      fBProcedureParam2.setType(1);
      fBProcedureCall0.addParam(1049, "y?*22,q= Lx");
      // Undeclared exception!
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 1049
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.4459135157019762
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      int int0 = (-1);
      fBProcedureParam0.setIndex((-1));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam((-1));
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam2 = fBProcedureCall1.addParam(18, "K09[,:bP,");
      fBProcedureParam2.setType(18);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureCall0.registerOutParam(4189, (-1));
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.634949116843229
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(2397);
      fBProcedureParam1.setIndex(2397);
      fBProcedureParam0.setType(2397);
      fBProcedureParam1.setIndex(2397);
      fBProcedureParam0.setIndex(4087);
      fBProcedureParam0.setType(3373);
      fBProcedureParam0.setIndex(3373);
      fBProcedureParam0.setType((-119718364));
      int int0 = (-102967925);
      fBProcedureParam1.setType((-102967925));
      fBProcedureParam1.setType((-52390337));
      fBProcedureParam0.setType(546);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1776));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1777
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.6075048271271184
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = "bg{o{TJHJ<7GT|7KY";
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall1.addParam(5, "bg{o{TJHJ<7GT|7KY");
      fBProcedureParam0.setIndex((-122684014));
      fBProcedureCall1.getInputParam((-122684014));
      FBProcedureCall fBProcedureCall2 = new FBProcedureCall();
      fBProcedureParam0.setType((-1702));
      fBProcedureCall1.addParam(5, "bg{o{TJHJ<7GT|7KY");
      // Undeclared exception!
      try { 
        fBProcedureCall1.addParam((-122684014), "you");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -122684014
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.2962712619630388
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,bP,");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(2397);
      fBProcedureParam2.setType(2397);
      fBProcedureParam1.setType(2198);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      int int0 = 42;
      try { 
        fBProcedureCall0.registerOutParam(42, 446);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.264550993508667
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      int int0 = 2079;
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      int int1 = (-1);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(3235, "~");
      fBProcedureCall0.getInputParam((-1));
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureCall0.getOutputParam(1);
      fBProcedureParam0.setType(3235);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int2 = 3250;
      // Undeclared exception!
      fBProcedureCall0.getInputParam((-1));
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.0566170864171505
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureParam1.setIndex(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.registerOutParam(2397, (-70007921));
      fBProcedureParam1.setIndex(1915);
      fBProcedureParam1.setIndex(1584);
      fBProcedureParam1.setIndex((-1407));
      fBProcedureParam2.setIndex((-2841));
      fBProcedureParam2.setType(547);
      fBProcedureParam0.setIndex(1);
      assertEquals((-70007921), fBProcedureParam0.getType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.410015058995706
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(963);
      fBProcedureParam0.setType(554);
      fBProcedureParam0.setIndex(963);
      fBProcedureParam0.setType(0);
      fBProcedureParam0.setType(554);
      fBProcedureParam0.setType(554);
      fBProcedureParam0.setType(554);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getInputParam(963);
      assertFalse(fBProcedureParam1.isParam());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      Object object36 = new Object();
      Object object37 = new Object();
      Object object38 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-12457231), "aG8-fC#W%PA");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -12457231
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.2648305744728314
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureParam1.setType((-1));
      fBProcedureParam1.setIndex(1915);
      fBProcedureParam1.setIndex(11);
      fBProcedureParam2.setIndex(11);
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setIndex(1);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      assertEquals(2397, fBProcedureParam2.getType());
      
      fBProcedureCall0.getOutputParams();
      FBProcedureParam fBProcedureParam4 = fBProcedureCall0.addParam(1, "not");
      assertEquals(1, fBProcedureParam4.getPosition());
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.9289738521096165
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.261099948874265
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureParam1.setIndex((-1));
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureParam0.setIndex(3);
      assertEquals(1, fBProcedureParam0.getType());
      
      fBProcedureParam1.setIndex(1915);
      fBProcedureParam1.setIndex(11);
      fBProcedureParam2.setIndex(11);
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setIndex(1);
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(2080, list0.size());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.112891220496537
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex((-119718364));
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(1);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(1, "y?");
      fBProcedureParam1.clone();
      fBProcedureCall0.mapOutParamIndexToPosition(0, true);
      fBProcedureParam1.setType(3158);
      fBProcedureParam1.setIndex(37);
      fBProcedureParam1.setType(3158);
      fBProcedureParam0.setType((-1));
      fBProcedureParam1.setType(1028);
      fBProcedureParam1.setType(1606);
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-119718364));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -119718365
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Object object0 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      List<FBProcedureParam> list0 = fBProcedureCall0.getInputParams();
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.5295772038369524
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.setName("EXECUTE PROCEDURE null");
      fBProcedureCall0.clone();
      int int0 = 0;
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(0);
      fBProcedureCall0.addParam(0, "EXECUTE PROCEDURE null");
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.hashCode();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(0);
      assertEquals(0, int0);
      
      int int1 = fBProcedureCall0.mapOutParamIndexToPosition(887, true);
      assertEquals(887, int1);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addParam(3, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.474765311480401
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2098);
      fBProcedureParam0.setType(2098);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureParam0.setType(37);
      boolean boolean0 = false;
      fBProcedureParam0.clone();
      fBProcedureCall0.getSQL(false);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureCall0.setName("_x");
      fBProcedureCall0.getName();
      fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(2098);
      try { 
        fBProcedureParam1.setValue("YM");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.3561158532688604
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      int int0 = 2079;
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      int int1 = (-1);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      fBProcedureCall0.addParam(2079, "K09[,:bP,");
      int int2 = 3235;
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.getOutputParam(3235);
      fBProcedureCall0.getInputParam((-1));
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      int int3 = (-1);
      fBProcedureCall0.registerOutParam((-1), (-1));
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getOutputParam(1);
      try { 
        fBProcedureParam2.setValue("K09[,:bP,");
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.224620870527559
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType((-1702));
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setType(580);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(580, "y?");
      fBProcedureParam0.setType(134);
      fBProcedureCall0.getSQL(false);
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam(2397, "EXECUTE PROCEDURE null(null, y?)");
      fBProcedureParam2.setIndex(1422);
      fBProcedureParam1.setIndex((-1));
      fBProcedureParam1.setType((-715));
      fBProcedureParam0.setIndex((-1));
      try { 
        fBProcedureCall0.registerOutParam(3283, 37);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Cannot find parameter with the specified position.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      String string0 = fBProcedureCall0.getName();
      assertNull(string0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.4841652152843623
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition((-1), true);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-1));
      assertEquals((-1), int0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.410015058995706
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(3541);
      fBProcedureParam0.setIndex((-447));
      fBProcedureParam0.setIndex(3541);
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setIndex(2483);
      fBProcedureParam0.setType((-484));
      fBProcedureParam0.setType(37);
      fBProcedureParam0.setType(3541);
      fBProcedureParam0.setType((-438));
      // Undeclared exception!
      try { 
        fBProcedureCall0.getInputParam((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.3687164224369055
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setType(2397);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureParam0.setIndex(2079);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureParam1.setIndex(1915);
      fBProcedureParam1.setIndex(11);
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setIndex(1);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      assertEquals((-1), fBProcedureParam1.getType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.4035549742056825
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(1540);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(2666);
      assertEquals(0, fBProcedureParam0.getType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=2.3707868158116465
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = new FBProcedureParam();
      fBProcedureParam2.setType(2397);
      fBProcedureCall0.addOutputParam(fBProcedureParam1);
      fBProcedureParam0.setType(1);
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureParam1.setIndex(1915);
      fBProcedureParam1.setIndex(11);
      fBProcedureParam0.setType(2397);
      fBProcedureParam0.setIndex(1);
      FBProcedureParam fBProcedureParam3 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam2);
      fBProcedureCall0.clone();
      fBProcedureCall0.addInputParam(fBProcedureParam1);
      assertEquals((-1), fBProcedureParam1.getType());
      assertEquals(2079, fBProcedureParam1.getPosition());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(0, " nots|t O%dt ");
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      assertFalse(object26.equals((Object)object8));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(1, "I");
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      assertFalse(object33.equals((Object)object12));
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.9004024235381879
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      Object object36 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      Object object37 = new Object();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(887, "tK");
      assertEquals(887, fBProcedureParam0.getPosition());
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-599), "|]p");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addInputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -599
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      Object object3 = new Object();
      Object object4 = new Object();
      Object object5 = new Object();
      Object object6 = new Object();
      Object object7 = new Object();
      Object object8 = new Object();
      Object object9 = new Object();
      Object object10 = new Object();
      Object object11 = new Object();
      Object object12 = new Object();
      Object object13 = new Object();
      Object object14 = new Object();
      Object object15 = new Object();
      Object object16 = new Object();
      Object object17 = new Object();
      Object object18 = new Object();
      Object object19 = new Object();
      Object object20 = new Object();
      Object object21 = new Object();
      Object object22 = new Object();
      Object object23 = new Object();
      Object object24 = new Object();
      Object object25 = new Object();
      Object object26 = new Object();
      Object object27 = new Object();
      Object object28 = new Object();
      Object object29 = new Object();
      Object object30 = new Object();
      Object object31 = new Object();
      Object object32 = new Object();
      Object object33 = new Object();
      Object object34 = new Object();
      Object object35 = new Object();
      Object object36 = new Object();
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam((FBProcedureParam) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.2306633449513398
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setIndex(2079);
      fBProcedureParam0.setIndex(2397);
      fBProcedureParam0.setType((-1));
      fBProcedureParam0.setType(2397);
      FBProcedureParam fBProcedureParam1 = fBProcedureCall0.addParam(2079, "K09[,:bP,");
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.addParam(3235, "~");
      fBProcedureParam0.setType(1);
      fBProcedureCall0.registerOutParam((-1), (-1));
      fBProcedureParam1.setIndex(11);
      fBProcedureParam2.setIndex(11);
      fBProcedureParam0.setType(2397);
      fBProcedureCall0.mapOutParamIndexToPosition(1131, true);
      fBProcedureParam0.setIndex(1);
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-38719865), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -38719866
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.9909065731902369
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.mapOutParamIndexToPosition((-1), true);
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition((-1), false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }
}
