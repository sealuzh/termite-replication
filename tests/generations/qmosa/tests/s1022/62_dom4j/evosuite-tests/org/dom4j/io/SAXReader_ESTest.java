/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 05:27:33 GMT 2019
 */

package org.dom4j.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.util.Enumeration;
import java.util.Map;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.ElementHandler;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMComment;
import org.dom4j.dom.DOMDocument;
import org.dom4j.dom.DOMDocumentType;
import org.dom4j.dom.DOMNamespace;
import org.dom4j.io.DispatchHandler;
import org.dom4j.io.ElementModifier;
import org.dom4j.io.ElementStack;
import org.dom4j.io.PruningDispatchHandler;
import org.dom4j.io.SAXModifyElementHandler;
import org.dom4j.io.SAXReader;
import org.dom4j.tree.AbstractElement;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.tree.NamespaceStack;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jaxen.SimpleVariableContext;
import org.jaxen.VariableContext;
import org.junit.runner.RunWith;
import org.xml.sax.HandlerBase;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;
import org.xml.sax.XMLFilter;
import org.xml.sax.XMLReader;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributeListImpl;
import org.xml.sax.helpers.DefaultHandler;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SAXReader_ESTest extends SAXReader_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=3.298155571027304
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")WhRq)", ")WhRq)");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.mkdirs();
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("MUU:HQ1yK(tF]ACz");
      sAXReader_SAXEntityResolver0.uriPrefix = "";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXReader_SAXEntityResolver0.resolveEntity("", "$%M-jJd`&");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("Z8TQ@7;&<t)oqXgZ", "org.jaxen.function.ContainsFunction");
      defaultHandler2_0.resolveEntity((String) null, "[:mLTJX$vCcED?C");
      SAXReader sAXReader0 = new SAXReader(false);
      sAXReader0.setEntityResolver(sAXReader_SAXEntityResolver0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/org.jaxen.function.ContainsFunction (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/org.jaxen.function.ContainsFunction (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      sAXReader0.isIncludeExternalDTDDeclarations();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)19;
      try { 
        sAXReader0.setProperty("2", fileSystemHandling2);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '2' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.391772851204174
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 350);
      pipedOutputStream0.write(58);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 58);
      String string0 = "W&F$7EXC2>";
      sAXReader0.setEncoding("W&F$7EXC2>");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pushbackInputStream0, pushbackInputStream0);
      sequenceInputStream0.mark(58);
      PushbackInputStream pushbackInputStream1 = new PushbackInputStream(sequenceInputStream0);
      try { 
        sAXReader0.read((InputStream) pushbackInputStream1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Invalid encoding name \"W&F$7EXC2>\". Nested exception: Invalid encoding name \"W&F$7EXC2>\".
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=3.2806562718226724
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      String string0 = "//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1O\\hz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1O\\hz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1O\\hz;`uT!oC*";
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("yieVAB,@{l*p?");
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = '2';
      charArray0[2] = 'U';
      charArray0[3] = '@';
      charArray0[4] = 'F';
      charArray0[5] = '3';
      charArray0[6] = 'E';
      charArray0[7] = '=';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[0];
      xMLFilterImpl0.startPrefixMapping("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*", "yieVAB,@{l*p?");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) (-6));
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      XMLFilter xMLFilter0 = sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader1 = new SAXReader(xMLFilter0);
      sAXReader1.getDispatchHandler();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*", "//tmp/|{L0/|{L");
      // Undeclared exception!
      try { 
        sAXReader1.read(inputSource0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.214534764133424
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.setExecutable(true);
      mockFile0.mkdirs();
      FileSystemHandling.createFolder(evoSuiteFile0);
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile(file0, "@aN3zhj(C$2`ge{");
      mockFile1.toURI();
      MockFile mockFile2 = new MockFile("//tmp/org.dom4j.tree.DefaultComment0/tmp/Cannot resolve namespace prefix '0", "@aN3zhj(C$2`ge{");
      mockFile0.getCanonicalPath();
      mockFile0.setLastModified(1L);
      MockFile.createTempFile("OY-WHg", "qy7ZGPl1");
      MockFile mockFile3 = new MockFile(mockFile1, "qy7ZGPl1");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SAXReader sAXReader0 = new SAXReader(true);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertNotNull(documentFactory0);
      
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertFalse(boolean0);
      
      boolean boolean1 = sAXReader0.isValidating();
      boolean boolean2 = sAXReader0.isMergeAdjacentText();
      assertFalse(boolean2 == boolean1);
      
      sAXReader0.createContentHandler((XMLReader) null);
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=3.2487663399462696
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      namespace0.getUniquePath((Element) null);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement((String) null, namespace0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "No such namespace prefix: ");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("M-1GnhYYv%:{P^R3");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("1>A$cWc/", "Jo1:M?{*\"Y");
      SAXReader sAXReader0 = new SAXReader();
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/OY-WHg0qy7ZGPl1", "::text()");
      inputSource0.setSystemId("~)6!5");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/~)6!5 (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/~)6!5 (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      DOMDocument dOMDocument0 = new DOMDocument();
      defaultDocumentFactory1.createQName("LvpdV2", "V1tWa&=lz>2!#Bz");
      defaultDocumentFactory0.createComment("UWE1WkJX<5jMkmJ4$Ok");
      DefaultDocument defaultDocument0 = new DefaultDocument();
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      defaultDocumentFactory2.createComment("GPNHN>PT8JbU>k");
      DefaultDocument defaultDocument1 = new DefaultDocument("");
      DefaultDocumentFactory defaultDocumentFactory4 = new DefaultDocumentFactory();
      DocumentFactory documentFactory0 = DefaultDocumentFactory.getInstance();
      DefaultDocument defaultDocument2 = new DefaultDocument("LvpdV2");
      DefaultDocumentFactory defaultDocumentFactory5 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(documentFactory0, true);
      sAXReader0.setIncludeExternalDTDDeclarations(true);
      InputSource inputSource0 = new InputSource((String) null);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      defaultDocumentFactory2.createDocument((String) null);
      QName qName0 = defaultDocumentFactory1.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement0 = new NonLazyElement(qName0);
      defaultDocumentFactory0.createQName("UWE1WkJX<5jMkmJ4$Ok", "<BPn!c'");
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      defaultDocumentFactory3.createComment("{rpdV2");
      DefaultDocument defaultDocument0 = new DefaultDocument();
      DefaultDocumentFactory defaultDocumentFactory4 = new DefaultDocumentFactory();
      defaultDocumentFactory2.createComment("V1tWa&=lz>2!#Bz");
      DefaultDocument defaultDocument1 = new DefaultDocument("[(DefaultNameStep): ");
      DefaultDocumentFactory defaultDocumentFactory5 = new DefaultDocumentFactory();
      DefaultDocumentFactory.getInstance();
      DOMDocumentType dOMDocumentType0 = new DOMDocumentType((String) null, "V1tWa&=lz>2!#Bz");
      PipedInputStream pipedInputStream0 = new PipedInputStream(4477);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory4);
      sAXReader0.setEncoding("u=f9tmyfeflJ");
      try { 
        sAXReader0.read("{rpdV2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: {rpdV2 Nested exception: no protocol: {rpdV2
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.1819585820332397
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")WhRq)", ")WhRq)");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.mkdirs();
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      file0.setReadOnly();
      MockFile mockFile1 = new MockFile((File) null, ")WhRq)");
      URI uRI1 = mockFile1.toURI();
      MockFile mockFile2 = new MockFile(uRI1);
      mockFile0.getCanonicalPath();
      file0.setLastModified(0L);
      mockFile1.getCanonicalFile();
      mockFile0.setReadOnly();
      MockFile mockFile3 = new MockFile("#SfgZ K#<]?Hdvtnm}V");
      File file1 = MockFile.createTempFile("/home/ubuntu/termite/projects/62_dom4j/)WhRq)/)WhRq)", "#SfgZ K#<]?Hdvtnm}V");
      file0.getAbsolutePath();
      mockFile0.setExecutable(true);
      MockFile mockFile4 = new MockFile(mockFile1, "(%");
      MockFile mockFile5 = new MockFile((String) null, ")WhRq)");
      file1.setReadOnly();
      mockFile0.renameTo(file0);
      file1.toPath();
      mockFile0.setExecutable(false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setEntityResolver(xMLFilterImpl0);
      sAXReader0.createContentHandler(xMLFilterImpl0);
      try { 
        sAXReader0.read(file1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.6862668983950018
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      StringReader stringReader0 = new StringReader("yieVAB,@{l*p?");
      char[] charArray0 = new char[8];
      charArray0[0] = '|';
      charArray0[1] = '2';
      charArray0[2] = 'U';
      charArray0[3] = '@';
      charArray0[4] = 'F';
      charArray0[5] = '3';
      charArray0[6] = 'E';
      charArray0[7] = '=';
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[0];
      xMLFilterImpl0.startPrefixMapping("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*", "yieVAB,@{l*p?");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) (-9));
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      XMLFilter xMLFilter0 = sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      SAXReader sAXReader1 = new SAXReader(xMLFilter0);
      try { 
        sAXReader0.read("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Loop has been executed more times than the allowed 10000 Nested exception: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=3.52095227791089
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.removeHandler("Dy&EQZM\u0000UawW]bSk");
      stringReader0.ready();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = new DefaultDocument();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DOMNamespace dOMNamespace0 = new DOMNamespace((String) null, (String) null);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", dOMNamespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = defaultDocumentFactory0.createQName((String) null, (Namespace) dOMNamespace0);
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = defaultDocumentFactory1.createQName("{rbdV2", "V1tWa&=lz>2!#Bz");
      QName.get("W&Q4}4~l7cW:~*5", (Namespace) dOMNamespace0);
      QName.get("{rbdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement2 = new NonLazyElement(qName1);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", (Namespace) dOMNamespace0);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory1, false);
      String string0 = null;
      String string1 = "/7QS)Hz0@wm,";
      try { 
        sAXReader0.read((InputStream) null, "/7QS)Hz0@wm,");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /7QS)Hz0@wm, (No such file or directory) Nested exception: /7QS)Hz0@wm, (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=3.3922896470698074
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("text()");
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setEncoding("text()");
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("text()", "text()", 138, "//tmp/|{L0/|{L", uRLStreamHandler0);
      URLStreamHandler uRLStreamHandler1 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      StringReader stringReader0 = new StringReader("B2\"[GwQ1");
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("@aNzhj(C$2ge{");
      stringReader0.skip((-3404L));
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      BeanElement beanElement0 = new BeanElement("//tmp/R+sHha>|Vs0/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{", (Object) null);
      Namespace namespace0 = Namespace.NO_NAMESPACE;
      QName qName0 = new QName("//tmp/R+sHha>|Vs0/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{", namespace0);
      Element element0 = beanElement0.createCopy(qName0);
      defaultDocumentFactory0.createAttribute(element0, qName0, "//tmp/Cannot resolve namespace prefix '0");
      defaultDocumentFactory0.createDocument("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
      sAXReader0.setFeature("http://xml.org/sax/features/namespace-prefixes", true);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=3.604954921555637
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(false);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      pruningDispatchHandler0.resetHandlers();
      pruningDispatchHandler0.setDefaultHandler(dispatchHandler0);
      sAXReader0.setMergeAdjacentText(false);
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      QName qName0 = new QName("", namespace0);
      qName0.getDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      sAXReader0.setDocumentFactory(defaultDocumentFactory0);
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      sAXReader0.setIgnoreComments(true);
      sAXReader0.setEncoding("/|{L");
      MockFile mockFile0 = new MockFile("#n+;A%kf6tg]G");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("#n+;A%kf6tg]G");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      URL uRL0 = mockFile0.toURL();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL(uRL0, "", uRLStreamHandler0);
      SAXReader sAXReader1 = new SAXReader(xMLReader0, true);
      SAXReader sAXReader2 = new SAXReader(xMLReader0, false);
      SAXReader sAXReader3 = new SAXReader(false);
      StringReader stringReader0 = new StringReader("");
      try { 
        sAXReader0.read((Reader) stringReader0, "Lk;y18#jJ-)");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFile mockFile0 = new MockFile(")WhRq)", ")WhRq)");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.mkdirs();
      URI uRI0 = MockURI.aHttpURI;
      File file1 = file0.getAbsoluteFile();
      file0.setReadOnly();
      MockFile mockFile1 = new MockFile((File) null, ")WhRq)");
      URI uRI1 = mockFile1.toURI();
      MockFile mockFile2 = new MockFile(uRI1);
      mockFile0.getCanonicalPath();
      file0.setLastModified(0L);
      File file2 = mockFile1.getCanonicalFile();
      mockFile0.setReadOnly();
      MockFile mockFile3 = new MockFile("#SfgZ K#<]?Hdvtnm}V");
      File file3 = MockFile.createTempFile("/home/ubuntu/termite/projects/62_dom4j/)WhRq)/)WhRq)", "#SfgZ K#<]?Hdvtnm}V");
      file0.getAbsolutePath();
      mockFile0.setExecutable(true);
      MockFile mockFile4 = new MockFile(file2, "/home/ubuntu/termite/projects/62_dom4j/)WhRq)/)WhRq)");
      MockFile mockFile5 = new MockFile("node", "}$N");
      mockFile1.setExecutable(true, true);
      mockFile2.setReadOnly();
      mockFile5.renameTo(mockFile4);
      file3.toPath();
      file1.setExecutable(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile6 = new MockFile("\"Sm&ZjM");
      try { 
        sAXReader0.read((File) mockFile6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "#SfgZ K#<]?Hdvtnm}V");
      File file0 = MockFile.createTempFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{", (File) mockFile0);
      file0.setExecutable(false);
      mockFile0.mkdirs();
      mockFile0.toURI();
      MockFile mockFile1 = new MockFile("#SfgZ K#<]?Hdvtnm}V", "//tmp/\n  0\n  ");
      mockFile1.delete();
      MockFile mockFile2 = new MockFile("@aN3zhj(C$2`ge{");
      MockFile mockFile3 = new MockFile(mockFile1, "#SfgZ K#<]?Hdvtnm}V");
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.getFileExample();
      sAXReader0.installXMLFilter((XMLReader) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createComment("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
      defaultDocumentFactory0.createDocument("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(boolean0);
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement((String) null);
      nonLazyElement0.addComment((String) null);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      defaultDocumentFactory1.createDocument((String) null);
      QName qName0 = defaultDocumentFactory0.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement1 = new NonLazyElement(qName0);
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      defaultDocumentFactory1.createQName("V1tWa&=lz>2!#Bz", "//tmp/@QK.Be#]oPj0.tmp");
      QName.get("V1tWa&=lz>2!#Bz", (Namespace) null);
      defaultDocumentFactory0.createComment("");
      DOMDocument dOMDocument0 = new DOMDocument();
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      DefaultDocumentFactory.getInstance();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      MockURL.getFileExample();
      SAXReader sAXReader0 = new SAXReader((String) null, false);
      // Undeclared exception!
      try { 
        sAXReader0.read((URL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = new DefaultDocument("[(DeaultNmeStp): ");
      DefaultDocument defaultDocument1 = new DefaultDocument();
      DefaultDocumentFactory defaultDocumentFactory4 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory5 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument2 = new DefaultDocument((String) null);
      DefaultDocumentFactory defaultDocumentFactory6 = new DefaultDocumentFactory();
      defaultDocumentFactory3.createDocument("[(DeaultNmeStp): ");
      DefaultDocumentFactory.getInstance();
      BaseElement baseElement0 = new BaseElement((String) null, (Namespace) null);
      baseElement0.element("[(DeaultNmeStp): ", (Namespace) null);
      defaultDocumentFactory4.createQName("{rpdV2");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory2, false);
      sAXReader0.createXMLReader();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      defaultDocumentFactory0.getXPathNamespaceURIs();
      defaultDocumentFactory0.setXPathNamespaceURIs((Map<String, String>) null);
      QName qName0 = new QName((String) null, namespace0, "[(DefaultNameStep): ");
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = defaultDocumentFactory1.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      nonLazyElement1.element("{rpdV2", namespace0);
      NonLazyElement nonLazyElement2 = new NonLazyElement(qName1);
      QName.get((String) null, namespace0);
      nonLazyElement1.element("//tm/\n  0\n  ", namespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName0);
      DOMComment dOMComment0 = new DOMComment("[(DefaultNameStep): ");
      nonLazyElement1.elementText("[(DefaultNameStep): ");
      DefaultDocumentFactory defaultDocumentFactory2 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory2);
      sAXReader0.getErrorHandler();
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 22
  /*Coverage entropy=3.366023184719631
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = defaultDocumentFactory0.createQName((String) null, namespace0);
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = defaultDocumentFactory1.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement2 = new NonLazyElement(qName1);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", namespace0);
      QName qName2 = defaultDocumentFactory0.createQName("UWE1WkJX<5jMkmJ4$Ok", "$assertionsDisabled");
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName2);
      QName.get((String) null, namespace0);
      nonLazyElement1.element("//tm/\n  0\n  ", namespace0);
      NonLazyElement nonLazyElement4 = new NonLazyElement(qName0);
      defaultDocumentFactory1.createAttribute((Element) null, "$assertionsDisabled", "org.jaxen.XPathSyntaxException");
      DOMComment dOMComment0 = new DOMComment((String) null);
      nonLazyElement0.elementText("//tm/\n  0\n  ");
      DefaultDocumentFactory.getInstance();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        sAXReader0.read((InputStream) pipedInputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected Nested exception: Pipe not connected
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=3.4440977644767417
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.removeHandler("u@G/a");
      String string0 = "//tmp/tmp/|{L0/|{L1Id';?/rY~_h;Ti#Ml";
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("//tmp/tmp/|{L0/|{L1Id';?/rY~_h;Ti#Ml");
      stringReader0.read();
      try { 
        sAXReader0.read((Reader) stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.mkdirs();
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      file0.mkdir();
      file0.setReadOnly();
      MockFile mockFile1 = new MockFile("#SfgZ K#<]?Hdvtnm}V", "@aN3zhj(C$2`ge{");
      URI uRI1 = mockFile1.toURI();
      mockFile1.setExecutable(true, true);
      MockFile mockFile2 = new MockFile(uRI1);
      mockFile0.getCanonicalPath();
      MockFile.createTempFile("OY-WH", "#SfgZ K#<]?Hdvtnm}V");
      MockFile mockFile3 = new MockFile(mockFile1, "OY-WH");
      MockFile mockFile4 = new MockFile((String) null, "@aN3zhj(C$2`ge{");
      mockFile0.setExecutable(true);
      SAXReader sAXReader0 = new SAXReader(true);
      boolean boolean0 = sAXReader0.isStringInternEnabled();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertTrue(boolean0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, true);
      boolean boolean0 = sAXReader0.isIncludeInternalDTDDeclarations();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(boolean0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("3^v", "");
      SAXReader sAXReader0 = new SAXReader();
      int int0 = 138;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      sAXReader0.createContentHandler(xMLFilterImpl0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream((-632));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=3.3881291941663134
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace("RZ~B2A;j;){1HSD", "[(DefaultNameStep): ");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      NamespaceStack namespaceStack0 = new NamespaceStack();
      namespaceStack0.pop(":%Tee\"A");
      String string0 = "//tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{";
      QName qName0 = QName.get("//tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{", (Namespace) null);
      NonLazyElement nonLazyElement0 = new NonLazyElement(qName0, 7);
      nonLazyElement0.element("//tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{", namespace0);
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      defaultDocumentFactory2.createAttribute((Element) null, "5W", ":%Tee\"A");
      defaultDocumentFactory2.createComment("[(DefaultNameStep): ");
      DefaultDocument defaultDocument0 = new DefaultDocument("not");
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory3, true);
      sAXReader0.setErrorHandler(xMLFilterImpl0);
      try { 
        sAXReader0.read("/]E0P7gFd\"sj[");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: /]E0P7gFd\"sj[ Nested exception: no protocol: /]E0P7gFd\"sj[
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = new DefaultDocument("[(DeaultNmeStp): ");
      DefaultDocument defaultDocument1 = new DefaultDocument();
      DefaultDocumentFactory defaultDocumentFactory4 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(true);
      sAXReader0.setStripWhitespaceText(true);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      assertFalse(defaultHandler2_1.equals((Object)defaultHandler2_0));
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.7911998103932196
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      SAXReader sAXReader0 = new SAXReader();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      sAXReader0.createDefaultEntityResolver("");
      PipedInputStream pipedInputStream1 = null;
      try {
        pipedInputStream1 = new PipedInputStream(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.setExecutable(false);
      mockFile0.mkdirs();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile(file0, "@aN3zhj(C$2`ge{");
      mockFile1.toURI();
      MockFile mockFile2 = new MockFile("//tmp/org.dom4j.tree.DefaultComment0/tmp/Cannot resolve namespace prefix '0", "@aN3zhj(C$2`ge{");
      mockFile0.setLastModified(1L);
      MockFile.createTempFile("OY-WHg", "qy7ZGPl1");
      MockFile mockFile3 = new MockFile(mockFile1, "qy7ZGPl1");
      MockFile mockFile4 = new MockFile((String) null, "@aN3zhj(C$2`ge{");
      mockFile0.setExecutable(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      try { 
        sAXReader0.configureReader(xMLFilterImpl0, defaultHandler0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@6eea7049 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=3.239095456210609
  */
  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, true);
      try { 
        sAXReader0.read("d]Sb.iR4e{/.7");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@40d0e3d5 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.ParserAdapter@40d0e3d5 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = new DefaultDocument("[(DeaultNmeStp): ");
      defaultDocumentFactory1.createDocument("[(DeaultNmeStp): ");
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument1 = new DefaultDocument((String) null);
      DefaultDocumentFactory defaultDocumentFactory4 = new DefaultDocumentFactory();
      defaultDocumentFactory1.createDocument("[(DeaultNmeStp): ");
      DefaultDocumentFactory.getInstance();
      BaseElement baseElement0 = new BaseElement((String) null, (Namespace) null);
      baseElement0.element("[Q\"0-G{{Ft{{`", (Namespace) null);
      QName.get("{rpdV2");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      sAXReader0.getEncoding();
      assertFalse(sAXReader0.isValidating());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("//tmp/@QK.Be#]oPj0.tmp");
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/`,%kA!82nEJmeJ>0Validation not supported for XMLReader: ", "Error on line ");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(xMLFilterImpl1);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter1.skippedEntity("//tmp/OY-WHg1qy7ZGPl1");
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl();
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl(parserAdapter1);
      xMLFilterImpl4.startElement(")p;\";_3=%hFZ&{+#'DB", ")2g.H;cPXE", "Error on line ", attributes2Impl0);
      Object object0 = new Object();
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl4);
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertTrue(sAXReader1.isStringInternEnabled());
      assertFalse(sAXReader1.isMergeAdjacentText());
      
      boolean boolean0 = sAXReader0.isStripWhitespaceText();
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(boolean0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("k| -=l05ngC");
      SAXReader sAXReader0 = new SAXReader(true);
      MockFile mockFile0 = new MockFile((File) null, "");
      mockFile0.getCanonicalPath();
      mockFile0.toURL();
      DOMDocument dOMDocument0 = new DOMDocument("");
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.setErrorHandler(defaultHandler0);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      SAXReader sAXReader0 = new SAXReader();
      QName qName0 = QName.get("", "", "http://xml.org/sax/features/string-interning");
      qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory((DocumentFactory) null);
      int int0 = 115;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Namespace namespace0 = Namespace.XML_NAMESPACE;
      SAXReader sAXReader0 = new SAXReader();
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      sAXReader0.setEncoding("#}gpU[c");
      pruningDispatchHandler0.removeHandler("http://xml.org/sax/features/namespace-prefixes");
      sAXReader0.addHandler("'TTf<G],UkQ~Cg[", (ElementHandler) null);
      sAXReader0.setValidation(false);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      int int0 = 991;
      PipedInputStream pipedInputStream1 = new PipedInputStream(991);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedOutputStream pipedOutputStream1 = new PipedOutputStream(pipedInputStream1);
      PipedInputStream pipedInputStream2 = null;
      try {
        pipedInputStream2 = new PipedInputStream(pipedOutputStream1);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultDocument defaultDocument0 = new DefaultDocument();
      InputStream inputStream0 = null;
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read((InputStream) null, "./vI");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/vI (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/vI (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SAXReader sAXReader0 = new SAXReader((XMLReader) null, true);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      // Undeclared exception!
      try { 
        sAXReader0.configureReader((XMLReader) null, defaultHandler2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.dom4j.io.SAXHelper", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=3.278600407264681
  */
  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile1 = new MockFile("sEonIS#E8:Ko60/HEIO", "");
      MockFile.createTempFile("$jm3Z'$", "Attribute", (File) mockFile1);
      mockFile1.setExecutable(false);
      MockFile mockFile2 = new MockFile("//tmp/org.dom4j.tree.DefaultComment0/tmp/Cannot resolve namespace prefix '0", "");
      mockFile2.mkdirs();
      mockFile1.setExecutable(false, false);
      URI uRI0 = mockFile0.toURI();
      MockFile mockFile3 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      MockFile mockFile4 = new MockFile("file://");
      MockFile mockFile5 = new MockFile(mockFile3, "Attribute");
      MockURI.toURL(uRI0);
      HandlerBase handlerBase0 = new HandlerBase();
      handlerBase0.resolveEntity("DocumentFragment", "c)=0wc");
      StringReader stringReader0 = new StringReader("http://xml.org/sax/features/string-interning");
      InputSource inputSource0 = new InputSource(stringReader0);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document  : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("3#$9m*DOD&G~N(@x-v");
      sAXReader_SAXEntityResolver0.resolveEntity("3#$9m*DOD&G~N(@x-v", "3#$9m*DOD&G~N(@x-v");
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      MockURL.URL("http://xml.org/sax/handlers/LexicalHandler", "5cM?W", 1, "3#$9m*DOD&G~N(@x-v", uRLStreamHandler0);
      URLStreamHandler uRLStreamHandler1 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      // Undeclared exception!
      try { 
        sAXReader0.read((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      SAXReader sAXReader0 = new SAXReader();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      byte[] byteArray0 = new byte[2];
      sAXReader0.isMergeAdjacentText();
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte) (-88);
      try { 
        pipedOutputStream0.write(byteArray0, (int) (byte)80, (int) (byte) (-88));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=3.342066101677845
  */
  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.setExecutable(true);
      mockFile0.mkdirs();
      FileSystemHandling.createFolder(evoSuiteFile0);
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      MockFile mockFile1 = new MockFile(file0, "@aN3zhj(C$2`ge{");
      mockFile1.toURI();
      MockFile mockFile2 = new MockFile("//tmp/org.dom4j.tree.DefaultComment0/tmp/Cannot resolve namespace prefix '0", "@aN3zhj(C$2`ge{");
      mockFile0.getCanonicalPath();
      mockFile0.setLastModified(1L);
      File file1 = MockFile.createTempFile("OY-WHg", "qy7ZGPl1");
      MockFile mockFile3 = new MockFile(mockFile1, "qy7ZGPl1");
      MockFile mockFile4 = new MockFile((String) null, "@aN3zhj(C$2`ge{");
      mockFile0.setExecutable(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, true);
      DispatchHandler dispatchHandler0 = sAXReader0.getDispatchHandler();
      dispatchHandler0.removeHandler((String) null);
      sAXReader0.setDefaultHandler((ElementHandler) null);
      try { 
        sAXReader0.read(file1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2e15bbc3 Nested exception: Feature: http://xml.org/sax/features/validation Nested exception: Validation not supported for XMLReader: org.xml.sax.helpers.XMLFilterImpl@2e15bbc3 Nested exception: Feature: http://xml.org/sax/features/validation
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      boolean boolean0 = false;
      sAXReader0.setIncludeExternalDTDDeclarations(false);
      pruningDispatchHandler0.resetHandlers();
      sAXReader0.setDefaultHandler(pruningDispatchHandler0);
      String string0 = null;
      ElementModifier elementModifier0 = mock(ElementModifier.class, new ViolatedAssumptionAnswer());
      SAXModifyElementHandler sAXModifyElementHandler0 = new SAXModifyElementHandler(elementModifier0);
      DefaultDocumentFactory.getInstance();
      int int0 = 0;
      ElementStack elementStack0 = new ElementStack();
      // Undeclared exception!
      try { 
        sAXModifyElementHandler0.onEnd(elementStack0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("org.dom4j.io.SAXModifyElementHandler", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.setIncludeInternalDTDDeclarations(true);
      sAXReader0.getDispatchHandler();
      sAXReader0.isIncludeInternalDTDDeclarations();
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=3.31385035710557
  */
  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("Z]4Sx5)@`6aS");
      char[] charArray0 = new char[1];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-9);
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte) (-112);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1750);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.getXMLFilter();
      InputSource inputSource0 = new InputSource("http://xml.org/sax/features/validation");
      inputSource0.setSystemId("Z]4Sx5)@`6aS");
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: Z]4Sx5)@`6aS Nested exception: no protocol: Z]4Sx5)@`6aS
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=3.3087432950398514
  */
  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = new QName((String) null, namespace0, "[(DefaultNameStep): ");
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = new QName("V1tWa&=lz>2!#Bz", namespace0);
      NonLazyElement nonLazyElement2 = new NonLazyElement((String) null, namespace0);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", namespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName1);
      QName.get((String) null, namespace0);
      nonLazyElement1.element("//tm/\n  0\n  ", namespace0);
      InputSource inputSource0 = new InputSource((String) null);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=3.339030945056547
  */
  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(true);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      sAXReader0.setXMLFilter(xMLFilterImpl1);
      StringReader stringReader0 = new StringReader("Z]4Sx5)@`6aS");
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-9);
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte) (-112);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, 1750);
      sAXReader0.installXMLFilter(xMLFilterImpl0);
      sAXReader0.getXMLFilter();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl2);
      try { 
        sAXReader1.read("Z]4Sx5)@`6aS");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=3.3660231847196305
  */
  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("<,Lz\"Ih7o", "<,Lz\"Ih7o");
      File file0 = MockFile.createTempFile("#SfgZ K#<]?Hdvtnm}V", (String) null, (File) mockFile0);
      mockFile0.mkdirs();
      URI uRI0 = MockURI.aHttpURI;
      file0.getAbsoluteFile();
      file0.mkdir();
      file0.setReadOnly();
      MockFile mockFile1 = new MockFile(file0, "<,Lz\"Ih7o");
      URI uRI1 = mockFile1.toURI();
      MockFile mockFile2 = new MockFile(uRI1);
      mockFile0.getCanonicalPath();
      file0.setLastModified(0L);
      MockFile.createTempFile("/home/ubuntu/termite/projects/62_dom4j/<,Lz\"Ih7o/<,Lz\"Ih7o", "OQ(%[*da@1YOqJd5o#v");
      MockFile.createTempFile("/home/ubuntu/termite/projects/62_dom4j/<,Lz\"Ih7o/<,Lz\"Ih7o", (String) null);
      file0.getAbsolutePath();
      mockFile0.setExecutable(true);
      MockFile mockFile3 = new MockFile(mockFile1, "(%");
      MockFile mockFile4 = new MockFile((String) null, "<,Lz\"Ih7o");
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read((Reader) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // null Nested exception: null
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      char[] charArray0 = new char[9];
      charArray0[0] = 'u';
      charArray0[1] = '#';
      charArray0[2] = '\\';
      charArray0[3] = 'O';
      charArray0[4] = 'r';
      charArray0[5] = '3';
      charArray0[6] = 'r';
      charArray0[7] = '9';
      charArray0[8] = '>';
      xMLReaderAdapter0.characters(charArray0, (-695), 92);
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      DocumentFactory documentFactory0 = sAXReader0.getDocumentFactory();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertNotNull(documentFactory0);
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory3 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument0 = new DefaultDocument("7(DeauWltNmeStp): ");
      DefaultDocument defaultDocument1 = new DefaultDocument();
      DefaultDocumentFactory defaultDocumentFactory4 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory5 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory6 = new DefaultDocumentFactory();
      defaultDocumentFactory6.createText("7(DeauWltNmeStp): ");
      defaultDocumentFactory6.createElement("{rpdV2");
      defaultDocumentFactory4.createText("{rpdV2");
      DefaultDocumentFactory defaultDocumentFactory7 = new DefaultDocumentFactory();
      DefaultDocument defaultDocument2 = new DefaultDocument("~+\tS.`>&jU2V<4");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setXMLFilter(xMLFilterImpl0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)22;
      byteArray0[2] = (byte)28;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1976, (byte)22);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      try { 
        dataInputStream0.readLong();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.847832822658352
  */
  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.setDispatchHandler(dispatchHandler0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      sAXReader0.configureReader(xMLFilterImpl1, (DefaultHandler) null);
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl(xMLFilterImpl0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'P';
      charArray0[1] = 'N';
      charArray0[2] = 'z';
      charArray0[3] = '=';
      charArray0[4] = 'a';
      charArray0[5] = 'e';
      charArray0[6] = '_';
      charArray0[7] = '#';
      xMLFilterImpl0.characters(charArray0, 16, 2283);
      SAXReader sAXReader1 = new SAXReader(xMLFilterImpl1, false);
      sAXReader0.getEncoding();
      sAXReader0.setIgnoreComments(false);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl0.endDocument();
      Object object0 = new Object();
      String string0 = "Htj9 ";
      try { 
        sAXReader0.setProperty("Htj9 ", xMLFilterImpl0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property 'Htj9 ' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      String string0 = null;
      defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.setXMLReaderClassName("[(DefaultNameStep): ");
        fail("Expecting exception: SAXException");
      
      } catch(SAXException e) {
         //
         // SAX2 driver class [(DefaultNameStep):  not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.6082873972465446
  */
  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      DefaultHandler defaultHandler0 = new DefaultHandler();
      sAXReader0.configureReader(parserAdapter0, defaultHandler0);
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 56
  /*Coverage entropy=2.8222426725455083
  */
  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      sAXReader0.getEntityResolver();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter(xMLFilterImpl0);
      xMLFilterImpl0.getParent();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLFilterImpl0.getErrorHandler();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      sAXReader0.configureReader(parserAdapter0, defaultHandler2_0);
      sAXReader0.setEncoding("qa");
      sAXReader0.isIncludeExternalDTDDeclarations();
      sAXReader0.resetHandlers();
      sAXReader0.isIncludeExternalDTDDeclarations();
      try { 
        sAXReader0.setFeature("+", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature '+' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=2.376742981833967
  */
  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      DefaultDocumentFactory defaultDocumentFactory2 = new DefaultDocumentFactory();
      QName qName0 = defaultDocumentFactory2.createQName((String) null, namespace0);
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      defaultDocumentFactory2.createDocument((String) null);
      QName qName1 = defaultDocumentFactory1.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement2 = new NonLazyElement(qName1);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", namespace0);
      QName qName2 = defaultDocumentFactory0.createQName("UWE1WkJX<5jMkmJ4$Ok", "$assertionsDisabled");
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName2);
      QName.get((String) null, namespace0);
      nonLazyElement1.element("//tmp/\n  0\n  ", namespace0);
      NonLazyElement nonLazyElement4 = new NonLazyElement(qName0);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.resetHandlers();
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      SAXReader sAXReader1 = new SAXReader(defaultDocumentFactory1);
      sAXReader1.getXMLReader();
      SAXReader sAXReader2 = null;
      try {
        sAXReader2 = new SAXReader("UWE1WkJX<5jMkmJ4$Ok", false);
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class UWE1WkJX<5jMkmJ4$Ok not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=2.41257681572198
  */
  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setEntityResolver(handlerBase0);
      sAXReader0.getEntityResolver();
      boolean boolean0 = sAXReader0.isIgnoreComments();
      assertFalse(boolean0);
      
      sAXReader0.setValidation(false);
      NamespaceStack namespaceStack0 = new NamespaceStack();
      QName qName0 = namespaceStack0.getAttributeQName("org.dom4j.io.SAXReader", "ky=BW*^a7;<K2", "F<OVem[]GJ\u0002~2");
      DocumentFactory documentFactory0 = qName0.getDocumentFactory();
      sAXReader0.setDocumentFactory(documentFactory0);
      sAXReader0.setEncoding("");
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isValidating());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.8529610277865571
  */
  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver((String) null);
      sAXReader_SAXEntityResolver0.resolveEntity("//tmp/M-1GnhYYv%:{P^R30/tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{", "$@G~");
      sAXReader_SAXEntityResolver0.resolveEntity("3^v", "");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      sAXReader_SAXEntityResolver0.resolveEntity("", "//tmp/M-1GnhYYv%:{P^R30/tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      xMLReaderAdapter0.skippedEntity("//tmp/M-1GnhYYv%:{P^R30/tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      parserAdapter0.getContentHandler();
      attributes2Impl0.getQName((-2194));
      AttributeListImpl attributeListImpl0 = new AttributeListImpl();
      parserAdapter0.startElement("]zsyv1/:_7dn=r", attributeListImpl0);
      xMLFilterImpl0.startElement("J^", "::text()", "2L,0Vl1|H pQPKj?c", attributes2Impl0);
      Object object0 = new Object();
      SAXReader sAXReader0 = new SAXReader(parserAdapter0);
      try { 
        sAXReader0.setProperty("org.dom4j.IllegalAddException", object0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property: org.dom4j.IllegalAddException
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXReader0.setStringInternEnabled(false);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      String string0 = "JBz}\"G!}N?6#|]8Bt";
      xMLFilterImpl1.startElement("JBz}\"G!}N?6#|]8Bt", "http://xml.org/sax/features/use-locator2", "JBz}\"G!}N?6#|]8Bt", attributes2Impl0);
      Object object0 = new Object();
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class //tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*_/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC* not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "#SfgZ K#<]?Hdvtnm}V");
      File file0 = MockFile.createTempFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{", (File) mockFile0);
      file0.setExecutable(false);
      mockFile0.mkdirs();
      file0.setExecutable(false, false);
      mockFile0.toURI();
      MockFile mockFile1 = new MockFile("#SfgZ K#<]?Hdvtnm}V", "//home/ubuntu/terite/projects/62_do4j/@aN3zhj(C$2`g{/#SfgZ K#<]?Hdvnm}V/@aN3zhj(C$2`ge{F@aN3zhj(C$2`ge{");
      MockFile mockFile2 = new MockFile("@aN3zhj(C$2`ge{");
      MockFile mockFile3 = new MockFile(mockFile1, "#SfgZ K#<]?Hdvtnm}V");
      MockFile mockFile4 = new MockFile(mockFile1, "@aN3zhj(C$2`ge{");
      MockFile mockFile5 = new MockFile("@aN3zhj(C$2`ge{", "Validation not supported for XMLReader: ");
      SAXReader sAXReader1 = new SAXReader((String) null);
      assertTrue(sAXReader1.isStringInternEnabled());
      assertFalse(sAXReader1.isMergeAdjacentText());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isStripWhitespaceText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      String string0 = null;
      SAXReader sAXReader0 = new SAXReader();
      String string1 = null;
      // Undeclared exception!
      try { 
        sAXReader0.setFeature((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      StringReader stringReader0 = new StringReader("file://");
      sAXReader0.setEncoding("file://");
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("file://");
      sAXReader_SAXEntityResolver0.resolveEntity("k| -=l05ngC", (String) null);
      SAXReader sAXReader1 = new SAXReader();
      assertFalse(sAXReader1.isStripWhitespaceText());
      assertFalse(sAXReader1.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader1.isIgnoreComments());
      assertFalse(sAXReader1.isMergeAdjacentText());
      assertFalse(sAXReader1.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader1.isStringInternEnabled());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      MockFile mockFile1 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("@aN3zhj(C$2`ge{/@aN3zhj(C$2`ge{/tmp/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1O\\hz;`uT!oC*0org.dom4j.util.DoubleNameMap1/tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V");
      FileSystemHandling.createFolder(evoSuiteFile0);
      MockFile.createTempFile("//tmp/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0org.dom4j.util.DoubleNameMap", "//tmp/R+sHha>|Vs1/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{", (File) mockFile0);
      mockFile1.setExecutable(false);
      sAXReader0.getXMLFilter();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SAXReader sAXReader0 = new SAXReader();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl((XMLReader) null);
      sAXReader0.setXMLReader(xMLFilterImpl0);
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      HandlerBase handlerBase0 = new HandlerBase();
      sAXReader0.setEntityResolver(handlerBase0);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "#SfgZ K#<]?Hdvtnm}V");
      File file0 = MockFile.createTempFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{", (File) mockFile0);
      MockFile.createTempFile("@aN3zhj(C$2`ge{", "");
      file0.setExecutable(false, false);
      mockFile0.setReadable(true);
      mockFile0.toURI();
      file0.getCanonicalPath();
      SAXReader sAXReader1 = null;
      try {
        sAXReader1 = new SAXReader("@aN3zhj(C$2`ge{");
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // SAX2 driver class @aN3zhj(C$2`ge{ not found
         //
         verifyException("org.xml.sax.helpers.XMLReaderFactory", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      SAXReader sAXReader0 = new SAXReader(parserAdapter0, false);
      try { 
        sAXReader0.setFeature("MEbki", false);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Feature: MEbki
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = new QName((String) null, namespace0, "[(DefaultNameStep): ");
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = new QName("[(DefaultNameStep): ", namespace0);
      QName.get((String) null, namespace0, "{rpdV2");
      NonLazyElement nonLazyElement2 = new NonLazyElement((String) null, namespace0);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", namespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName1);
      QName.get((String) null);
      nonLazyElement1.element("[(DefaultNameStep): ", namespace0);
      SAXReader sAXReader0 = new SAXReader();
      // Undeclared exception!
      try { 
        sAXReader0.setProperty((String) null, nonLazyElement1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      defaultDocumentFactory0.createElement("r-22a|AyG");
      defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0);
      sAXReader0.getDocumentFactory();
      sAXReader0.isValidating();
      // Undeclared exception!
      try { 
        sAXReader0.setXMLReaderClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SimpleVariableContext simpleVariableContext0 = new SimpleVariableContext();
      defaultDocumentFactory0.createXPathFilter("/text()", (VariableContext) simpleVariableContext0);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      XMLReader xMLReader0 = sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertTrue(sAXReader0.isValidating());
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
      assertNotNull(xMLReader0);
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIgnoreComments());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      PruningDispatchHandler pruningDispatchHandler0 = new PruningDispatchHandler();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      xMLReaderAdapter0.startPrefixMapping("", "");
      xMLReaderAdapter0.setDocumentLocator(locator2Impl0);
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter1);
      xMLReaderAdapter1.skippedEntity("");
      sAXReader0.getXMLReader();
      assertFalse(sAXReader0.isStripWhitespaceText());
      assertFalse(sAXReader0.isIgnoreComments());
      assertFalse(sAXReader0.isIncludeInternalDTDDeclarations());
      assertFalse(sAXReader0.isMergeAdjacentText());
      assertFalse(sAXReader0.isIncludeExternalDTDDeclarations());
      assertTrue(sAXReader0.isStringInternEnabled());
  }

  /**
  //Test case number: 72
  /*Coverage entropy=3.275805525146526
  */
  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DOMNamespace dOMNamespace0 = new DOMNamespace((String) null, (String) null);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", dOMNamespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = defaultDocumentFactory0.createQName((String) null, (Namespace) dOMNamespace0);
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = defaultDocumentFactory1.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      QName.get("W&Q4}4~l7cW:~*5", (Namespace) dOMNamespace0);
      QName.get("{rpdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement2 = new NonLazyElement(qName1);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", (Namespace) dOMNamespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement("//tmp/&X&g;oCP=Fb*5)(!.0t4GiIU/]t", dOMNamespace0);
      qName0.toString();
      nonLazyElement1.element("wOrj_>npUY[7;rV<aO", (Namespace) dOMNamespace0);
      NonLazyElement nonLazyElement4 = new NonLazyElement(qName1);
      QName.get("{rpdV2", (Namespace) dOMNamespace0);
      nonLazyElement2.element("", (Namespace) dOMNamespace0);
      InputSource inputSource0 = new InputSource("");
      SAXReader sAXReader0 = new SAXReader();
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1 of document file:///home/ubuntu/termite/projects/62_dom4j/ : Content is not allowed in prolog. Nested exception: Content is not allowed in prolog.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.786724494755577
  */
  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{");
      File file0 = MockFile.createTempFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{", (File) mockFile0);
      file0.setExecutable(false);
      file0.setExecutable(true);
      mockFile0.mkdirs();
      file0.setExecutable(false, false);
      URI uRI0 = mockFile0.toURI();
      MockFile mockFile1 = new MockFile("#SfgZ K#<]?Hdvtnm}V", "//Amp/\n  0\n  ");
      MockFile mockFile2 = new MockFile("@aN3zhj(C$2`ge{");
      MockFile mockFile3 = new MockFile(mockFile1, "#SfgZ K#<]?Hdvtnm}V");
      MockURI.toURL(uRI0);
      MockURL.getFileExample();
      DOMDocument dOMDocument0 = new DOMDocument();
      sAXReader0.getDispatchHandler();
      sAXReader0.getDispatchHandler();
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("@aN3zhj(C$2`ge{");
      InputSource inputSource0 = sAXReader_SAXEntityResolver0.resolveEntity("6!3b`$)!SHN]lBh]", (String) null);
      assertNotNull(inputSource0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=2.015255863586861
  */
  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("", "");
      SAXReader sAXReader0 = new SAXReader();
      DispatchHandler dispatchHandler0 = new DispatchHandler();
      sAXReader0.addHandler("?X", dispatchHandler0);
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedInputStream0.mark(138);
      PipedOutputStream pipedOutputStream1 = null;
      try {
        pipedOutputStream1 = new PipedOutputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=3.354592309236786
  */
  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      SAXReader.SAXEntityResolver sAXReader_SAXEntityResolver0 = new SAXReader.SAXEntityResolver("");
      sAXReader_SAXEntityResolver0.resolveEntity("3^v", "");
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.skippedEntity("J^");
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl(parserAdapter0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      sAXReader0.setMergeAdjacentText(false);
      try { 
        sAXReader0.read((InputStream) sequenceInputStream0, "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=2.063983366979555
  */
  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = new QName((String) null, namespace0, "[(DefaultNameStep): ");
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = defaultDocumentFactory0.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      QName.get((String) null, namespace0, "{rpdV2");
      NonLazyElement nonLazyElement2 = new NonLazyElement((String) null, namespace0);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", namespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName1);
      QName.get((String) null, namespace0);
      nonLazyElement1.element("//tm/\n  0\n  ", namespace0);
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      try { 
        sAXReader0.setProperty("~UbwO$wqd-c.", qName0);
        fail("Expecting exception: SAXNotRecognizedException");
      
      } catch(SAXNotRecognizedException e) {
         //
         // Property '~UbwO$wqd-c.' is not recognized.
         //
         verifyException("org.apache.xerces.parsers.AbstractSAXParser", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=3.2953696157561723
  */
  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      SAXReader sAXReader0 = new SAXReader();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "#SfgZ K#<]?Hdvtnm}V");
      File file0 = MockFile.createTempFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{", (File) mockFile0);
      file0.setExecutable(false);
      mockFile0.mkdirs();
      file0.setExecutable(false, false);
      mockFile0.toURI();
      MockFile mockFile1 = new MockFile("#SfgZ K#<]?Hdvtnm}V", "//tmp/\n  0\n  ");
      File file1 = MockFile.createTempFile("R+sHha>|Vs", "//home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      MockFile mockFile2 = new MockFile(mockFile1, "#SfgZ K#<]?Hdvtnm}V");
      MockFile mockFile3 = new MockFile("R+sHha>|Vs", "//home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/#SfgZ K#<]?Hdvtnm}V/@aN3zhj(C$2`ge{0@aN3zhj(C$2`ge{");
      mockFile2.setExecutable(false);
      try { 
        sAXReader0.read(file1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line -1 of document  : Premature end of file. Nested exception: Premature end of file.
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=3.275805525146526
  */
  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      Namespace namespace0 = defaultDocumentFactory0.createNamespace((String) null, "[(DefaultNameStep): ");
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", namespace0);
      Element element0 = nonLazyElement0.addComment((String) null);
      ((AbstractElement) element0).getPath((Element) nonLazyElement0);
      QName qName0 = new QName((String) null, namespace0, "[(DefaultNameStep): ");
      qName0.equals(element0);
      element0.elementIterator(qName0);
      QName qName1 = new QName("V1tWa&=lz>2!#Bz", namespace0);
      QName.get((String) null, namespace0, "{rpdV2");
      NonLazyElement nonLazyElement1 = new NonLazyElement((String) null, namespace0);
      NonLazyElement nonLazyElement2 = new NonLazyElement("{rpdV2", namespace0);
      nonLazyElement1.element("WYWGo#b'>M\"SWp]pT$", namespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement(qName1);
      QName.get(",3|q", namespace0);
      nonLazyElement1.element("", namespace0);
      InputSource inputSource0 = new InputSource("A'.E");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, false);
      try { 
        sAXReader0.read(inputSource0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // /home/ubuntu/termite/projects/62_dom4j/A'.E (No such file or directory) Nested exception: /home/ubuntu/termite/projects/62_dom4j/A'.E (No such file or directory)
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockFile mockFile0 = new MockFile("@aN3zhj(C$2`ge{", "@aN3zhj(C$2`ge{");
      File file0 = MockFile.createTempFile("y-0%7s9J$&XEr", (String) null, (File) mockFile0);
      mockFile0.mkdirs();
      file0.getAbsoluteFile();
      file0.mkdir();
      file0.setReadOnly();
      MockFile mockFile1 = new MockFile(file0, "@aN3zhj(C$2`ge{");
      URI uRI0 = mockFile1.toURI();
      MockFile mockFile2 = new MockFile(uRI0);
      mockFile0.getCanonicalPath();
      MockFile.createTempFile("OY-WH", "y-0%7s9J$&XEr");
      mockFile0.setExecutable(true);
      MockFile mockFile3 = new MockFile(mockFile1, "OY-WH");
      MockFile mockFile4 = new MockFile(uRI0);
      mockFile0.setExecutable(true);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      StringReader stringReader0 = new StringReader("@aN3zhj(C$2`ge{");
      try { 
        sAXReader0.read((Reader) stringReader0, "/home/ubuntu/termite/projects/62_dom4j/@aN3zhj(C$2`ge{/@aN3zhj(C$2`ge{");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=3.2390954562106087
  */
  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DOMNamespace dOMNamespace0 = new DOMNamespace((String) null, (String) null);
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      NonLazyElement nonLazyElement0 = new NonLazyElement("[(DefaultNameStep): ", dOMNamespace0);
      NonLazyElement nonLazyElement1 = (NonLazyElement)nonLazyElement0.addComment((String) null);
      nonLazyElement1.getPath((Element) nonLazyElement0);
      QName qName0 = defaultDocumentFactory0.createQName((String) null, (Namespace) dOMNamespace0);
      qName0.equals(nonLazyElement1);
      nonLazyElement1.elementIterator(qName0);
      QName qName1 = defaultDocumentFactory1.createQName("{rpdV2", "V1tWa&=lz>2!#Bz");
      QName.get("{rpdV2", "V1tWa&=lz>2!#Bz");
      NonLazyElement nonLazyElement2 = new NonLazyElement(qName1);
      nonLazyElement1.element("UWE1WkJX<5jMkmJ4$Ok", (Namespace) dOMNamespace0);
      NonLazyElement nonLazyElement3 = new NonLazyElement("//tmp/&X&g;oCP=Fb*5)(!.0t4GiIU/]t", dOMNamespace0);
      nonLazyElement1.element("wOrj_>npUY[7;rV<aO", (Namespace) dOMNamespace0);
      NonLazyElement nonLazyElement4 = new NonLazyElement(qName1);
      NonLazyElement nonLazyElement5 = new NonLazyElement((String) null);
      defaultDocumentFactory0.createAttribute((Element) nonLazyElement5, "Uva5(36Q.>dI?3z_e?u", ".");
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXReader sAXReader0 = new SAXReader(xMLFilterImpl0, false);
      URL uRL0 = MockURL.getHttpExample();
      try { 
        sAXReader0.read(uRL0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No parent for filter Nested exception: No parent for filter
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=3.3334433711830367
  */
  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      DefaultDocumentFactory defaultDocumentFactory1 = new DefaultDocumentFactory();
      defaultDocumentFactory1.createComment("P-isHI7(<pAm");
      defaultDocumentFactory1.createDocument("//tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*0/tmp/org.jaxen.expr.iter.IterablePrecedingAxis1Ohz;`uT!oC*");
      SAXReader sAXReader0 = new SAXReader(defaultDocumentFactory0, true);
      try { 
        sAXReader0.read("P-isHI7(<pAm");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no protocol: P-isHI7(<pAm Nested exception: no protocol: P-isHI7(<pAm
         //
         verifyException("org.dom4j.io.SAXReader", e);
      }
  }
}
