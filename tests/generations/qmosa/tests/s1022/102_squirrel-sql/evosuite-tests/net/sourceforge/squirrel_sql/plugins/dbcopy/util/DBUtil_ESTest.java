/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 03:51:24 GMT 2019
 */

package net.sourceforge.squirrel_sql.plugins.dbcopy.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.gargoylesoftware.base.resource.jdbc.CallableStatementWrapper;
import com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper;
import java.awt.AWTEventMulticaster;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.RenderingHints;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentListener;
import java.awt.event.FocusListener;
import java.awt.event.HierarchyBoundsListener;
import java.awt.event.HierarchyListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelListener;
import java.awt.event.TextListener;
import java.awt.event.WindowFocusListener;
import java.awt.event.WindowListener;
import java.awt.event.WindowStateListener;
import java.awt.geom.Dimension2D;
import java.io.IOException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverPropertyInfo;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import javax.swing.Box;
import javax.swing.DebugGraphics;
import javax.swing.DefaultListCellRenderer;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JSlider;
import javax.swing.JTable;
import javax.swing.event.AncestorListener;
import javax.swing.plaf.basic.BasicCheckBoxUI;
import javax.swing.plaf.basic.BasicComboBoxEditor;
import javax.swing.plaf.basic.BasicOptionPaneUI;
import javax.swing.plaf.basic.BasicPopupMenuSeparatorUI;
import javax.swing.plaf.metal.MetalSplitPaneUI;
import javax.swing.text.DefaultCaret;
import javax.swing.tree.DefaultTreeCellRenderer;
import net.sourceforge.squirrel_sql.client.IApplication;
import net.sourceforge.squirrel_sql.client.session.ISession;
import net.sourceforge.squirrel_sql.client.session.schemainfo.CaseInsensitiveString;
import net.sourceforge.squirrel_sql.client.session.schemainfo.SchemaInfo;
import net.sourceforge.squirrel_sql.client.util.ApplicationFileWrappersImpl;
import net.sourceforge.squirrel_sql.client.util.ApplicationFiles;
import net.sourceforge.squirrel_sql.fw.id.UidIdentifier;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectType;
import net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo;
import net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo;
import net.sourceforge.squirrel_sql.fw.sql.ISQLConnection;
import net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData;
import net.sourceforge.squirrel_sql.fw.sql.ITableInfo;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriver;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty;
import net.sourceforge.squirrel_sql.fw.sql.SQLDriverPropertyCollection;
import net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo;
import net.sourceforge.squirrel_sql.fw.util.FileWrapper;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperFactoryImpl;
import net.sourceforge.squirrel_sql.fw.util.FileWrapperImpl;
import net.sourceforge.squirrel_sql.plugins.dbcopy.DBCopyPlugin;
import net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider;
import net.sourceforge.squirrel_sql.plugins.dbcopy.prefs.DBCopyPreferenceBean;
import net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfree.data.time.Quarter;
import org.junit.runner.RunWith;
import org.springframework.scheduling.concurrent.CustomizableThreadFactory;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Object object0 = new Object();
      ResultSet resultSet0 = null;
      int int0 = 1;
      int int1 = 2005;
      int int2 = 1;
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2005, 1, 1, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      AWTEventMulticaster.add((WindowFocusListener) null, (WindowFocusListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.setSourceSession((ISession) null);
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar");
      DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, " (zero integer)");
      // Undeclared exception!
      try { 
        DBUtil.getColumnName((ISQLConnection) null, (ITableInfo) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.convertTableToObjectList((List<ITableInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener2);
      AWTEventMulticaster.remove(mouseWheelListener2, mouseWheelListener2);
      int int0 = (-7);
      int int1 = 9;
      DBUtil.typesAreEquivalent(16, (-7));
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapper fileWrapper0 = applicationFileWrappersImpl0.getUserPreferencesFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      String string0 = "Missing argument for option: ";
      FileWrapperImpl fileWrapperImpl0 = fileWrapperFactoryImpl0.createTempFile("YeZ^me,4UX<Mhu`g", "Missing argument for option: ", fileWrapper0);
      try { 
        FileWrapperImpl.createTempFile("56 B$:`>n{UJ9k", "56 B$:`>n{UJ9k", fileWrapperImpl0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 1012;
      int int1 = 1111;
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo((String) null, (String) null, "`L\u0000", "g*@[&QjVvJm{fDR{*O", 1111, "n=z1C\"pIPDn<Nu", (-2775), (-2775), (-334), 1012, "~w1_#Hoz5E6`Glw&", "net.sourceforge.squirrel_sql.client.gui.db.SchemaTableTypeCombination", 8, (-2013), (String) null);
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROCEDURE;
      DatabaseObjectType.createNewDatabaseObjectType("`L\u0000", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.checkKeyword((ISession) null, "~w1_#Hoz5E6`Glw&", "~w1_#Hoz5E6`Glw&");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 92, 92, 821, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jScrollPane0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      jScrollPane0.createVerticalScrollBar();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1111, 1111, 2002, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)87;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getFAQFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getCellImportExportSelectionsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (byte)70, (byte)87, 777, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-5), 92, 1699, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("Q%[a;[|L1Ds\u0003v");
      FileWrapperImpl fileWrapperImpl2 = new FileWrapperImpl("=CFrf", "Q%[a;[|L1Ds\u0003v");
      applicationFileWrappersImpl0.getPluginsDirectory();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getQuickStartGuideFile();
      applicationFileWrappersImpl0.getJDBCDebugLogFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileWrapperImpl fileWrapperImpl3 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFiles applicationFiles0 = new ApplicationFiles();
      applicationFileWrappersImpl0.setApplicationFiles(applicationFiles0);
      applicationFileWrappersImpl1.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl1.getDatabaseDriversFile();
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-1), 2002, (-1), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(">");
      fileWrapperImpl0.mkdirs();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getSQuirrelJarFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getLicenceFile();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(">", " ADD ROREIGN KEY (");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl1.setFileWrapperFactory(fileWrapperFactoryImpl1);
      applicationFileWrappersImpl2.getDatabaseAliasesFile();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2000, (-312), 6256, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      applicationFileWrappersImpl0.getPluginsDirectory();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier1 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2003, 2003, 2003, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getBorder();
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getDefaultOpenIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getPKColumnString((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      Dimension dimension0 = box0.getSize((Dimension) null);
      box0.invalidate();
      Dimension dimension1 = box0.getPreferredSize();
      box0.getUIClassID();
      Dimension dimension2 = new Dimension(dimension0);
      Dimension dimension3 = (Dimension)dimension2.clone();
      dimension3.setSize((Dimension2D) dimension0);
      Dimension dimension4 = (Dimension)dimension0.clone();
      dimension4.setSize((double) 0, 0.0);
      dimension1.width = 2002;
      dimension0.setSize(0.6666666666666666, (double) 0);
      dimension2.clone();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 0, 0, 0, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.createVerticalScrollBar();
      JScrollBar jScrollBar0 = jScrollPane0.createVerticalScrollBar();
      jScrollBar0.getColorModel();
      JScrollBar jScrollBar1 = jScrollPane0.createVerticalScrollBar();
      jScrollBar1.getVerifyInputWhenFocusTarget();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      basicOptionPaneUI0.getBaselineResizeBehavior(jScrollPane0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 8, 8, 8, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.createVerticalScrollBar();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-4), (-4), 2002, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2002, (-250), 1244, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Byte byte0 = new Byte((byte) (-75));
      Box box0 = Box.createHorizontalBox();
      box0.getMinimumSize();
      box0.invalidate();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("l%E)?Q]", "un;ci@dejV^?C&%|");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl1.setFileWrapperFactory(fileWrapperFactoryImpl0);
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-6), 777, 91, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("<q", "o&iJ?A,3-n*mm;C");
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo0);
      SQLDriverProperty sQLDriverProperty1 = new SQLDriverProperty(driverPropertyInfo0);
      sQLDriverProperty1.clone();
      sQLDriverProperty1.setDriverPropertyInfo(driverPropertyInfo0);
      sQLDriverProperty1.setDriverPropertyInfo(driverPropertyInfo0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 4, 5161, 2, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getExecutionLogFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl(" /m v", "?");
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 12, 4, 3935, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("<q", "o&iJ?A,3-n*mm;C");
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo0);
      SQLDriverProperty sQLDriverProperty1 = new SQLDriverProperty(driverPropertyInfo0);
      sQLDriverProperty1.clone();
      sQLDriverProperty1.setDriverPropertyInfo(driverPropertyInfo0);
      sQLDriverProperty1.setDriverPropertyInfo(driverPropertyInfo0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2, 2, 2, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener2, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster0, (ComponentListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((ComponentListener) aWTEventMulticaster5, (ComponentListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster3, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster6, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster4, (MouseMotionListener) aWTEventMulticaster7);
      AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, mouseWheelListener1);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster1, (TextListener) aWTEventMulticaster2);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2001, (-2722), (-7), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      MouseMotionListener mouseMotionListener0 = AWTEventMulticaster.add((MouseMotionListener) defaultCaret0, (MouseMotionListener) defaultCaret0);
      DefaultCaret defaultCaret1 = new DefaultCaret();
      AWTEventMulticaster.remove(mouseMotionListener0, (MouseMotionListener) defaultCaret1);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2006, 1600, 1600, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI2 = new BasicOptionPaneUI();
      basicOptionPaneUI2.getMinimumOptionPaneSize();
      BasicOptionPaneUI basicOptionPaneUI3 = new BasicOptionPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 3, (-827), (-594), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " to 128.");
      DBUtil.setLastStatementValues("DBUtil.error.tablenotfound");
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil.setLastStatement("DBUtil.error.tablenotfound");
      String string0 = DBUtil.getLastStatement();
      assertEquals("DBUtil.error.tablenotfound", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl.createTempFile("Length function is null for dialect=", "a%ya\"p\"6`9", fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getQuickStartGuideFile();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl1.setFileWrapperFactory(fileWrapperFactoryImpl0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/prefs.xml/net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy0net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseDriversFile();
      applicationFileWrappersImpl2.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ApplicationFileWrappersImpl applicationFileWrappersImpl3 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      System.setCurrentTimeMillis(1900L);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-7), 2001, 3012, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      JScrollBar jScrollBar0 = jScrollPane0.createVerticalScrollBar();
      jScrollBar0.getColorModel();
      jScrollBar0.getVerifyInputWhenFocusTarget();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      basicOptionPaneUI0.getBaselineResizeBehavior(jScrollBar0);
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 91, 50000, 50000, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getSQuirrelJarFile();
      applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("BFYf-B}j", "[y-&P{");
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile_before_version_2_3();
      FileWrapperFactoryImpl fileWrapperFactoryImpl1 = new FileWrapperFactoryImpl();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperFactoryImpl fileWrapperFactoryImpl2 = new FileWrapperFactoryImpl();
      applicationFileWrappersImpl1.getQuickStartGuideFile();
      fileWrapperFactoryImpl2.create("A8?OzsT.<o*DoUd>U3", "BFYf-B}j");
      applicationFileWrappersImpl1.setFileWrapperFactory(fileWrapperFactoryImpl2);
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 5, 951, (-2434), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster10, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster12, (WindowFocusListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) null);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster11, (FocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster13, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster14);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 93, (-3289), 994, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI2 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI3 = new BasicOptionPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 7, (-2), (-2719), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jScrollPane0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      jScrollPane0.createVerticalScrollBar();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-2), (-2), 2002, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ComponentListener componentListener0 = mock(ComponentListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(componentListener0, componentListener0);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.remove((ComponentListener) null, (ComponentListener) null);
      AWTEventMulticaster.add((TextListener) null, (TextListener) null);
      AWTEventMulticaster.remove((TextListener) null, (TextListener) null);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2004, (-268), (-268), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=0.5357939587515939
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      HierarchyBoundsListener hierarchyBoundsListener0 = mock(HierarchyBoundsListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(hierarchyBoundsListener0, hierarchyBoundsListener0);
      AWTEventMulticaster.add((HierarchyBoundsListener) null, (HierarchyBoundsListener) null);
      jScrollPane0.removeHierarchyBoundsListener((HierarchyBoundsListener) null);
      jScrollPane0.createVerticalScrollBar();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, (-3), (-3), 2002, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getDatabaseAliasesTreeStructureFile();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)87;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)87;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      applicationFileWrappersImpl0.getFAQFile();
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl0.getDatabaseAliasesFile();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 16, 6337, 93, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("zI6Ygv:aFMLrj`{C\"", "zI6Ygv:aFMLrj`{C\"", "zI6Ygv:aFMLrj`{C\"", "3,\n\tPRIMARY KEY ", (-2124638074), " &zCHANGE ", (-2124638074), 2001, (-930), 1141, "d>[~-kC/#W_", "d>[~-kC/#W_", 30000, (-1818), "d>[~-kC/#W_");
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      schemaInfo0.isColumn((CaseInsensitiveString) null);
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("3,\n\tPRIMARY KEY ", "zI6Ygv:aFMLrj`{C\"", "/lw`n|>LqXH~", "/lw`n|>LqXH~", (-4), "/lw`n|>LqXH~", (-1818), 1111, 0, (-2307), "zI6Ygv:aFMLrj`{C\"", "Unable to store an Byte[] when one of its element is null", (-2307), 1, "/lw`n|>LqXH~");
      tableColumnInfoArray0[4] = tableColumnInfo1;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      // Undeclared exception!
      try { 
        DBUtil.replaceDistinctDataType(2001, tableColumnInfo0, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      JScrollBar jScrollBar0 = jScrollPane0.createVerticalScrollBar();
      jScrollBar0.getColorModel();
      jScrollBar0.getVerifyInputWhenFocusTarget();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 1, (-2048), 1, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getHierarchyBoundsListeners();
      defaultTreeCellRenderer3.getLeafIcon();
      defaultTreeCellRenderer3.getBorder();
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getDefaultOpenIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 2971, 16, 1066, (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Box box0 = Box.createVerticalBox();
      box0.firePropertyChange(" schema = ", true, true);
      Byte byte0 = new Byte((byte) (-75));
      Dimension dimension0 = box0.getMinimumSize();
      box0.invalidate();
      dimension0.setSize((double) (byte) (-75), (double) (byte) (-75));
      dimension0.clone();
      box0.getUIClassID();
      dimension0.setSize(6, (int) (byte) (-75));
      Dimension dimension1 = new Dimension(dimension0);
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      // Undeclared exception!
      try { 
        DBUtil.bindVariable((PreparedStatement) null, 6, (-75), (-75), (ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.getColumnCount((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, (MouseWheelListener) null);
      AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DBUtil.typesAreEquivalent((-7), 2086);
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl0 = (FileWrapperImpl)applicationFileWrappersImpl0.getUserPreferencesFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl(fileWrapperImpl0);
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl2 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl2.getPluginsUserSettingsDirectory();
      applicationFileWrappersImpl2.getCellImportExportSelectionsFile();
      applicationFileWrappersImpl2.getDatabaseAliasesFile();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(connection0).getHoldability();
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      connectionWrapper0.getHoldability();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, true, true);
      SQLDriver sQLDriver0 = new SQLDriver();
      assertNull(sQLDriver0.toString());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      boolean boolean0 = DBUtil.typesAreEquivalent((-7), (-7));
      assertTrue(boolean0);
  }

  /**
  //Test case number: 42
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("log4j.reset", "log4j.reset");
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(driverPropertyInfo0);
      SQLDriverProperty sQLDriverProperty1 = new SQLDriverProperty(driverPropertyInfo0);
      sQLDriverProperty0.setValue(". Original column type code and name were Types.NULL and ");
      sQLDriverProperty0.setDriverPropertyInfo(driverPropertyInfo0);
      boolean boolean0 = DBUtil.typesAreEquivalent(16, 70);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 43
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getImage();
      imageIcon0.getIconHeight();
      FlowLayout flowLayout0 = new FlowLayout((-1));
      JPanel jPanel0 = new JPanel(flowLayout0);
      imageIcon0.setImageObserver(jPanel0);
      imageIcon0.getImageObserver();
      ZoneId.getAvailableZoneIds();
      boolean boolean0 = DBUtil.typesAreEquivalent(16, (-1073741822));
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createVerticalBox();
      box0.firePropertyChange(" schema = ", true, true);
      Byte byte0 = new Byte((byte) (-75));
      Dimension dimension0 = box0.getSize((Dimension) null);
      box0.invalidate();
      dimension0.setSize((double) (byte) (-75), (double) (byte) (-75));
      dimension0.clone();
      box0.getUIClassID();
      dimension0.setSize((-75), 23503);
      Dimension dimension1 = new Dimension(dimension0);
      dimension1.clone();
      dimension1.setSize(506, 23503);
      dimension0.clone();
      dimension0.setSize(0.6666666666666666, (double) 23503);
      dimension1.clone();
      dimension0.width = (-1065);
      dimension0.setSize((double) 23503, 1.0);
      Dimension dimension2 = new Dimension((-75), (-1065));
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "s 79&,Ze;iPp", "86>*0ZK9:bxh.$0]");
      LinkedList<ITableInfo> linkedList0 = new LinkedList<ITableInfo>();
      // Undeclared exception!
      try { 
        DBUtil.getColumnTypes((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      DatabaseObjectType.createNewDatabaseObjectType("0!u'}0u)A\"*?");
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.UDT;
      boolean boolean0 = DBUtil.typesAreEquivalent(3, 4);
      assertFalse(boolean0);
      
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[4];
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(" right outer join ", "7,0&eQ?~S7/qkj&3Ex");
      sQLDriverPropertyArray0[0] = sQLDriverProperty0;
      DatabaseObjectType.createNewDatabaseObjectType("}byM)>+l.sg");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      ZoneId.getAvailableZoneIds();
      boolean boolean1 = DBUtil.typesAreEquivalent(3, (-907));
      assertFalse(boolean1);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      Dimension dimension0 = new Dimension();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin1.getSourceSession();
      int int0 = DBUtil.replaceDistinctDataType(0, (TableColumnInfo) null, (ISession) null);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI2 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI3 = new BasicOptionPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      DBUtil.validateColumnNames((ITableInfo) null, (SessionInfoProvider) null);
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      DBUtil.validateColumnNames((ITableInfo) null, dBCopyPlugin0);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      uidIdentifier0.setString("http://www.squirrelsql.org");
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      MetalSplitPaneUI metalSplitPaneUI0 = new MetalSplitPaneUI();
      // Undeclared exception!
      try { 
        metalSplitPaneUI0.createDefaultDivider();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster7, (MouseMotionListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster4, (TextListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster10, (FocusListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster12, (KeyListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster11, (MouseWheelListener) aWTEventMulticaster5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "OHLCDataItem.compareTo().", "OHLCDataItem.compareTo().");
      // Undeclared exception!
      try { 
        DBUtil.tableHasPrimaryKey((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) null);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((ComponentListener) aWTEventMulticaster4, (ComponentListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster7, mouseWheelListener1);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowStateListener) null, (WindowStateListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster8, (WindowStateListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getCreateTableSql(dBCopyPlugin0, (ITableInfo) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (String) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      Box box0 = Box.createVerticalBox();
      box0.firePropertyChange(" schema = ", true, true);
      Byte byte0 = new Byte((byte) (-75));
      Dimension dimension0 = box0.getSize((Dimension) null);
      box0.invalidate();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      defaultTreeCellRenderer1.removeFocusListener(basicComboBoxEditor_UIResource0);
      dimension0.setSize((double) (byte) (-75), (double) (byte) (-75));
      dimension0.clone();
      box0.getUIClassID();
      dimension0.setSize(6, 23503);
      Dimension dimension1 = new Dimension(dimension0);
      dimension1.clone();
      dimension0.clone();
      dimension0.width = (-1065);
      dimension0.height = 23503;
      dimension0.setSize((double) 23503, 1.0);
      BasicPopupMenuSeparatorUI basicPopupMenuSeparatorUI0 = new BasicPopupMenuSeparatorUI();
      Dimension dimension2 = basicPopupMenuSeparatorUI0.getPreferredSize(defaultTreeCellRenderer0);
      dimension2.setSize((-4), 6);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isBinaryType((TableColumnInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("2ln", (Icon) null);
      DatabaseObjectType.createNewDatabaseObjectType(" schema = ", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon();
      JScrollPane jScrollPane0 = new JScrollPane();
      imageIcon0.getIconWidth();
      imageIcon0.setDescription("");
      imageIcon0.getImageObserver();
      DatabaseObjectType.createNewDatabaseObjectType("CREATE $accessMethod$ INDEX $indexName$ $indexType$ ON $tableName$ ( $columnName; separator=\",\"$ )", (Icon) imageIcon0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      defaultTreeCellRenderer0.getUIClassID();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[2];
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.replaceOtherDataType(tableColumnInfoArray0[1], (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JScrollPane jScrollPane0 = new JScrollPane();
      jScrollPane0.createVerticalScrollBar();
      JScrollBar jScrollBar0 = jScrollPane0.createVerticalScrollBar();
      jScrollBar0.getColorModel();
      JScrollBar jScrollBar1 = jScrollPane0.createVerticalScrollBar();
      jScrollBar1.getVerifyInputWhenFocusTarget();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      basicOptionPaneUI0.getBaselineResizeBehavior(jScrollPane0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Unable to store an Byte[] when one of its element is null", "4t(", "Unable to store an Byte[] when one of its element is null", "Unable to store an Byte[] when one of its element is null", 0, "Unable to store an Byte[] when one of its element is null", (-4), (-4), (-2307), (-2307), "4t(", "4t(", 2217, (-4), "Unable to store an Byte[] when one of its element is null");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(0, int0);
      
      int int1 = DBUtil.replaceDistinctDataType(8000, tableColumnInfo0, (ISession) null);
      assertEquals(8000, int1);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DBUtil.typesAreEquivalent(2, 14);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getUserPreferencesFile();
      applicationFileWrappersImpl0.getLicenceFile();
      applicationFileWrappersImpl0.getQuickStartGuideFile();
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getDatabaseAliasesFile();
      dBCopyPlugin0.setApplicationFiles(applicationFileWrappersImpl0);
      ConnectionWrapper connectionWrapper0 = null;
      try {
        connectionWrapper0 = new ConnectionWrapper((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.ConnectionWrapper", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster10, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster12, (WindowFocusListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) null);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster11, (FocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster14 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster13, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster14);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster8, (MouseWheelListener) aWTEventMulticaster9);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "DBUtil.error.firebirdcommit", "}M~;;-6");
      // Undeclared exception!
      try { 
        DBUtil.getColumnType((ISQLConnection) null, (ITableInfo) null, (-733));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" schema = ", " schema = ", " schema = ", " schema = ", 4000, " schema = ", (-6), (-6), (-5221), (-6), " schema = ", " seems to already have it defined.", (-6), 2958465, " seems to already have it defined.");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PROC_TYPE_DBO;
      DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer();
      defaultListCellRenderer0.getIcon();
      DatabaseObjectType.createNewDatabaseObjectType("microsoft", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType.createNewDatabaseObjectType(" schema = ", (Icon) null);
      ImageIcon imageIcon0 = new ImageIcon();
      JScrollPane jScrollPane0 = new JScrollPane();
      imageIcon0.getIconWidth();
      imageIcon0.setDescription("");
      imageIcon0.getImageObserver();
      DatabaseObjectType.createNewDatabaseObjectType("CREATE $accessMethod$ INDEX $indexName$ $indexType$ ON $tableName$ ( $columnName; separator=\",\"$ )", (Icon) imageIcon0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      AncestorListener ancestorListener0 = mock(AncestorListener.class, new ViolatedAssumptionAnswer());
      defaultTreeCellRenderer0.getUIClassID();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[3];
      tableColumnInfoArray0[1] = tableColumnInfo0;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(4000, int0);
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("WG c#'rIlt'7", "R<-", "R<-", "zvO5N!V^]", (-950), "WG c#'rIlt'7", 838, (-950), 3839, 2006, "8", "YVB9yT?pHj", (-1700), (-2666), "YVB9yT?pHj");
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals((-950), int0);
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Object[][] objectArray0 = new Object[5][0];
      Object[] objectArray1 = new Object[1];
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      Object object0 = new Object();
      objectArray2[1] = (Object) "j&{?HR";
      objectArray2[2] = (Object) "i";
      objectArray0[4] = objectArray2;
      Object[] objectArray3 = new Object[4];
      objectArray3[0] = (Object) "El&E1xesZ%ijB=";
      objectArray3[1] = (Object) "El&E1xesZ%ijB=";
      objectArray2[3] = (Object) "i";
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[4];
      objectArray4[0] = (Object) "El&E1xesZ%ijB=";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("zNWe)K=X0^-UaX2\bM", "removeMultiLineComment", "net.sourceforge.squirrel_sql.client.session.event.SessionAdapter", "calendar_date", 91, "net.sourceforge.squirrel_sql.client.session.event.SessionAdapter", 226, 1066, (-1910), 226, "1", "zNWe)K=X0^-UaX2\bM", 2000, 1066, "net.sourceforge.squirrel_sql.client.session.event.SessionAdapter");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      int int0 = DBUtil.replaceOtherDataType(tableColumnInfo0, (ISession) null);
      assertEquals(91, int0);
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DatabaseObjectType.createNewDatabaseObjectType("0!u'}0u)A\"*?");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDT;
      DBUtil.typesAreEquivalent(3, 3);
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      SQLDriverProperty[] sQLDriverPropertyArray0 = new SQLDriverProperty[4];
      String string0 = "7,0&eQ?~S7/qkj&3Ex";
      SQLDriverProperty sQLDriverProperty0 = new SQLDriverProperty(" right outer join ", "7,0&eQ?~S7/qkj&3Ex");
      sQLDriverProperty0.setIsSpecified(true);
      DriverPropertyInfo driverPropertyInfo0 = new DriverPropertyInfo("0!u'}0u)A\"*?", "}byM)>+l.sg");
      driverPropertyInfo0.value = " right outer join ";
      // Undeclared exception!
      try { 
        sQLDriverProperty0.setDriverPropertyInfo(driverPropertyInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // DriverPropertyInfo.name != my name
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.SQLDriverProperty", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster9, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster11, (WindowFocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster8, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) null);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster10, (FocusListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster8);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer0.getDefaultOpenIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSelectQuery(dBCopyPlugin0, "Max function is null for dialect=", (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SEQUENCE_TYPE_DBO;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("rNSYl~Rql+;e2u?");
      DatabaseObjectType databaseObjectType2 = DatabaseObjectType.PROC_TYPE_DBO;
      DatabaseObjectInfo databaseObjectInfo0 = new DatabaseObjectInfo("", (String) null, "M");
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      databaseObjectInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType2);
      DBUtil.getSchemaNameFromDbObject(databaseObjectInfo0);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getSourceSession();
      ISession iSession0 = dBCopyPlugin0.getDestSession();
      assertNull(iSession0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener4 = AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener5 = AWTEventMulticaster.add(mouseWheelListener4, mouseWheelListener3);
      AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener4);
      MouseWheelListener mouseWheelListener6 = AWTEventMulticaster.remove(mouseWheelListener3, mouseWheelListener5);
      AWTEventMulticaster.add(mouseWheelListener4, mouseWheelListener6);
      AWTEventMulticaster.add(mouseWheelListener4, mouseWheelListener2);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener6);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "g2F@P", "Ovh;j]g~|bA-bPUj");
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[0];
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      assertEquals(0, list0.size());
  }

  /**
  //Test case number: 63
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.isKeyword((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      defaultTreeCellRenderer0.getUIClassID();
      // Undeclared exception!
      try { 
        DBUtil.getColumnList((TableColumnInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("zI6Ygv:aFMLrj`{C\"", "zI6Ygv:aFMLrj`{C\"", "zI6Ygv:aFMLrj`{C\"", "3,\n\tPRIMARY KEY ", (-2124638074), " CHANGE ", (-2124638074), (-920), (-930), 1141, "d>[~-kC/#W_", "d>[~-kC/#W_", 30000, (-1818), "d>[~-kC/#W_");
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[9];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[1] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("3,\n\tPRIMARY KEY ", "zI6Ygv:aFMLrj`{C\"", "/lw`n|>LqXH~", "/lw`n|>LqXH~", 4, "/lw`n|>LqXH~", (-1818), 1111, 5, (-2307), "zI6Ygv:aFMLrj`{C\"", "Unable to store an Byte[] when one of its element is null", (-2307), 1, "/lw`n|>LqXH~");
      tableColumnInfoArray0[4] = tableColumnInfo1;
      tableColumnInfoArray0[5] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
      tableColumnInfoArray0[7] = tableColumnInfo0;
      tableColumnInfoArray0[8] = tableColumnInfo0;
      DBUtil.getColumnList(tableColumnInfoArray0);
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.UDF;
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.getIconHeight();
      imageIcon0.getAccessibleContext();
      imageIcon0.getImage();
      imageIcon0.getIconHeight();
      FlowLayout flowLayout0 = new FlowLayout((-1));
      imageIcon0.getImageObserver();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      ZoneId.getAvailableZoneIds();
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[0];
      DBUtil.getColumnList(tableColumnInfoArray0);
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.sameDatabaseType((ISession) null, (ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster3, (WindowFocusListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster4, (WindowFocusListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster9);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster10, (WindowFocusListener) aWTEventMulticaster2);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster11, (WindowFocusListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((WindowListener) aWTEventMulticaster9, (WindowListener) aWTEventMulticaster2);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) null);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster0, (FocusListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster9);
      AWTEventMulticaster aWTEventMulticaster13 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster12, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster13);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster8, (MouseWheelListener) aWTEventMulticaster9);
      ISQLConnection iSQLConnection0 = null;
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "DBUtil.error.firebirdcommit", "}M~;;-6");
      int[] intArray0 = Quarter.FIRST_MONTH_IN_QUARTER;
      // Undeclared exception!
      try { 
        DBUtil.getColumnNames((ISQLConnection) null, (ITableInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)94;
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("end as CYCLE_FLAG ", "p$.HwcOef{", "}t5_4<@\"U}\"~, -aM", "#", (-2), ",\n\tPRIMARY KEY ", 1437, (-42), (-2), 3, ",\n\tPRIMARY KEY ", "end as CYCLE_FLAG ", 3, (-2), "end as CYCLE_FLAG ");
      DBUtil.isBinaryType(tableColumnInfo0);
      CallableStatementWrapper callableStatementWrapper0 = null;
      try {
        callableStatementWrapper0 = new CallableStatementWrapper((CallableStatement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("dB?g", " ADD ROREIGN KEY (", "E", "dB?g", 2004, "|^Xg-17/#4m`WiH", 1007, 2004, 95, 62, (String) null, "u5}XP)", 95, 787, ":LV;");
      DBUtil.isBinaryType(tableColumnInfo0);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      assertTrue(arrayList0.isEmpty());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getLeafIcon();
      defaultTreeCellRenderer3.getBorder();
      DefaultTreeCellRenderer defaultTreeCellRenderer5 = new DefaultTreeCellRenderer();
      defaultTreeCellRenderer3.getDefaultOpenIcon();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTables((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "Su@~\"n:3,");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Object[][] objectArray0 = new Object[5][0];
      Object[] objectArray1 = new Object[1];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      Object object1 = new Object();
      objectArray2[0] = object1;
      objectArray2[1] = (Object) "j&{?HR";
      objectArray2[2] = (Object) "i";
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      FileWrapperFactoryImpl fileWrapperFactoryImpl0 = new FileWrapperFactoryImpl();
      dBCopyPlugin0.setFileWrapperFactory(fileWrapperFactoryImpl0);
      dBCopyPlugin0.getDestSession();
      String string0 = DBUtil.fixCase((ISession) null, "");
      assertEquals("", string0);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      Box box0 = Box.createVerticalBox();
      box0.firePropertyChange("56 B$:`>n{UJ9k", false, false);
      Byte byte0 = new Byte((byte)125);
      box0.getSize((Dimension) null);
      box0.invalidate();
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      basicComboBoxEditor_UIResource0.getItem();
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      DBUtil.fixCase((ISession) null, (String) null);
      System.setCurrentTimeMillis(3781);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      UnaryOperator<ITableInfo> unaryOperator0 = UnaryOperator.identity();
      Function<Object, RenderingHints.Key> function0 = (Function<Object, RenderingHints.Key>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function.identity();
      unaryOperator0.andThen((Function<? super ITableInfo, ? extends RenderingHints.Key>) function0);
      Function.identity();
      arrayList0.ensureCapacity(92);
      arrayList0.replaceAll(unaryOperator0);
      arrayList0.iterator();
      // Undeclared exception!
      try { 
        DBUtil.getForeignKeySQL((SessionInfoProvider) null, (ITableInfo) null, arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = DBUtil.typesAreEquivalent(2, 2);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[3] = (byte) (-1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ZoneId.getAvailableZoneIds();
      boolean boolean0 = DBUtil.typesAreEquivalent(2172, 93);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.COLUMN;
      int int0 = (-1017);
      DBUtil.typesAreEquivalent((-1017), 811);
      Stack<ITableInfo> stack0 = new Stack<ITableInfo>();
      int int1 = (-2829);
      String string0 = "(WoMh4Rzud1O7\"";
      CustomizableThreadFactory customizableThreadFactory0 = new CustomizableThreadFactory("(WoMh4Rzud1O7\"");
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = null;
      try {
        scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor((-2829), customizableThreadFactory0, threadPoolExecutor_CallerRunsPolicy0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ThreadPoolExecutor", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI2 = new BasicOptionPaneUI();
      boolean boolean0 = DBUtil.typesAreEquivalent(169, 169);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "\\C}RF?2Q~fG/H.h", "blob", "", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.executeQuery((ISession) null, ";eK=)");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer1 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer2 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer3 = new DefaultTreeCellRenderer();
      DefaultTreeCellRenderer defaultTreeCellRenderer4 = new DefaultTreeCellRenderer();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getMaxColumnLengthSQL((ISession) null, (TableColumnInfo) null, ".", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[3];
      iDatabaseObjectInfoArray0[0] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[1] = (IDatabaseObjectInfo) foreignKeyInfo0;
      iDatabaseObjectInfoArray0[2] = (IDatabaseObjectInfo) foreignKeyInfo0;
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo$MockitoMock$336092888 cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("$_9Z", "$_9Z", "4M@fPUa,^{", "*t*!/k9 ", (-6), "n", (-2), (-7), (-6), (-7), "*t*!/k9 ", "%%3C]o`6y)U#9O", (-7), 1521, "n");
      int int0 = DBUtil.replaceDistinctDataType((-6), tableColumnInfo0, (ISession) null);
      assertEquals((-6), int0);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = "Vl(hV-~(pI6y1. ";
      String string1 = "?";
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("Vl(hV-~(pI6y1. ", "Vl(hV-~(pI6y1. ", "Vl(hV-~(pI6y1. ", "Vl(hV-~(pI6y1. ", 2002, "Vl(hV-~(pI6y1. ", 2002, 2002, 1596, 1596, "?", "o7,)iGv0p?", (-2), 966, "Vl(hV-~(pI6y1. ");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.PRIMARY_KEY;
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      dBCopyPlugin0.getSourceSession();
      DBUtil.replaceDistinctDataType(2002, tableColumnInfo0, (ISession) null);
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((CallableStatement) null).when(connection0).prepareCall(anyString());
      ConnectionWrapper connectionWrapper0 = new ConnectionWrapper(connection0);
      // Undeclared exception!
      try { 
        connectionWrapper0.prepareCall("037ip-Oi<7N 16$l?>");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // statement
         //
         verifyException("com.gargoylesoftware.base.resource.jdbc.StatementWrapper", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      IDatabaseObjectInfo[] iDatabaseObjectInfoArray0 = new IDatabaseObjectInfo[7];
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getDestDatabaseObject();
      iDatabaseObjectInfoArray0[0] = null;
      dBCopyPlugin0.getApplication();
      List<ITableInfo> list0 = DBUtil.convertObjectArrayToTableList(iDatabaseObjectInfoArray0);
      List<IDatabaseObjectInfo> list1 = DBUtil.convertTableToObjectList(list0);
      DBUtil.convertObjectToTableList(list1);
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      SchemaInfo schemaInfo1 = new SchemaInfo((IApplication) null);
      schemaInfo1.getSQLDatabaseMetaData();
      TableColumnInfo tableColumnInfo0 = null;
      try {
        tableColumnInfo0 = new TableColumnInfo("g]&^RqT", "STATISTIC", "Y71=@h %^W\"U", (String) null, 962, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (-2), 1, 0, (-238), (String) null, ". Using 'max'", 278, 1450, (String) null, (ISQLDatabaseMetaData) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LinkedList<IDatabaseObjectInfo> linkedList0 = new LinkedList<IDatabaseObjectInfo>();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("j\"ejtuX5YSbPuRG5&32", "[", "[", "[", (-3338), "", (-3338), (-3338), (-3338), (-3338), "[", "", (-3338), (-3338), "j\"ejtuX5YSbPuRG5&32");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.INDEX;
      DatabaseObjectType.createNewDatabaseObjectType("Ij+ZI5]z2'N", (Icon) null);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.SYNONYM;
      ImageIcon imageIcon0 = new ImageIcon();
      DatabaseObjectType.createNewDatabaseObjectType("Max function is null for dialect=", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      linkedList0.add((IDatabaseObjectInfo) tableColumnInfo0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // net.sourceforge.squirrel_sql.fw.sql.TableColumnInfo cannot be cast to net.sourceforge.squirrel_sql.fw.sql.ITableInfo
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = DBUtil.getLastStatementValues();
      assertNull(string0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster5, (MouseMotionListener) aWTEventMulticaster6);
      AWTEventMulticaster.remove((TextListener) aWTEventMulticaster7, (TextListener) aWTEventMulticaster0);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((TextListener) aWTEventMulticaster2, (TextListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster9, (WindowStateListener) aWTEventMulticaster4);
      AWTEventMulticaster.add((WindowStateListener) aWTEventMulticaster6, (WindowStateListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster8, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaNameFromDbObject((IDatabaseObjectInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("TH2~UakM", "", "x,2SiX7DT ZbsU", "t*uv}:#?gAqbva5v", 590, "x,2SiX7DT ZbsU", 590, 590, 590, 590, (String) null, "t*uv}:#?gAqbva5v", 590, 3370, "I}%bGH_n;S)mVh$");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.FOREIGN_KEY;
      DatabaseObjectType.createNewDatabaseObjectType("H~5;Zd0h0Z*=RC=*r");
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType0);
      DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      TableColumnInfo[] tableColumnInfoArray0 = new TableColumnInfo[7];
      tableColumnInfoArray0[0] = tableColumnInfo0;
      tableColumnInfoArray0[2] = tableColumnInfo0;
      tableColumnInfoArray0[3] = tableColumnInfo0;
      tableColumnInfoArray0[4] = tableColumnInfo0;
      tableColumnInfoArray0[6] = tableColumnInfo0;
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster.remove(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener2);
      MouseWheelListener mouseWheelListener3 = AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener2);
      MouseWheelListener mouseWheelListener4 = AWTEventMulticaster.add(mouseWheelListener2, (MouseWheelListener) null);
      MouseWheelListener mouseWheelListener5 = AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener4);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener5);
      AWTEventMulticaster.remove((MouseWheelListener) null, mouseWheelListener5);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener3);
      AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) null, mouseWheelListener1);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" tableName = ", " tableName = ", " tableName = ", " tableName = ", (-1692), "^", 2289, 1, 948, 811, " tableName = ", "x", 948, 1, ".= d");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      String string0 = DBUtil.getSchemaNameFromDbObject(tableColumnInfo0);
      assertEquals(" tableName = ", string0);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      MouseWheelListener mouseWheelListener1 = AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove(mouseWheelListener1, mouseWheelListener1);
      MouseWheelListener mouseWheelListener2 = AWTEventMulticaster.add(mouseWheelListener1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.remove(mouseWheelListener2, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener1, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, mouseWheelListener1);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove(mouseWheelListener1, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener2, (MouseWheelListener) aWTEventMulticaster4);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener2, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, mouseWheelListener2);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((WindowFocusListener) aWTEventMulticaster7, (WindowFocusListener) aWTEventMulticaster0);
      AWTEventMulticaster.remove((WindowFocusListener) aWTEventMulticaster9, (WindowFocusListener) aWTEventMulticaster6);
      AWTEventMulticaster.add(mouseWheelListener2, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) null);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster8, (FocusListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster10, (MouseWheelListener) aWTEventMulticaster3);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      AWTEventMulticaster.remove((HierarchyListener) aWTEventMulticaster1, (HierarchyListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster11);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster5, (MouseWheelListener) aWTEventMulticaster6);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      DBCopyPlugin dBCopyPlugin1 = new DBCopyPlugin();
      dBCopyPlugin0.getWebSite();
      // Undeclared exception!
      try { 
        DBUtil.getInsertSQL(dBCopyPlugin1, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", (ITableInfo) null, (-558));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Vector<ITableInfo> vector0 = new Vector<ITableInfo>();
      List<IDatabaseObjectInfo> list0 = DBUtil.convertTableToObjectList(vector0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 93
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu");
      FileSystemHandling.createFolder(evoSuiteFile0);
      System.setCurrentTimeMillis((-3477L));
      Stack<IDatabaseObjectInfo> stack0 = new Stack<IDatabaseObjectInfo>();
      List<ITableInfo> list0 = DBUtil.convertObjectToTableList(stack0);
      assertTrue(list0.isEmpty());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      Box box0 = Box.createVerticalBox();
      Dimension dimension0 = box0.getSize((Dimension) null);
      Dimension dimension1 = box0.getPreferredSize();
      box0.getUIClassID();
      Dimension dimension2 = new Dimension(dimension0);
      Dimension dimension3 = (Dimension)dimension2.clone();
      dimension3.setSize((Dimension2D) dimension0);
      dimension0.clone();
      dimension0.setSize(0, 0);
      dimension1.width = 2002;
      dimension0.setSize(0.6666666666666666, (double) 0);
      dimension2.clone();
      // Undeclared exception!
      try { 
        DBUtil.convertObjectToTableList((List<IDatabaseObjectInfo>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte)3;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-44);
      byteArray0[5] = (byte) (-100);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        DBUtil.getQualifiedObjectName((ISession) null, "", "p$.HwcOef{", "w![LL]?tOA#3iAf9", 3781);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableCount((ISession) null, "\\C}RF?2Q~fG/H.h", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      DBUtil.setLastStatementValues("DBUtil.error.tablenotfound");
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.clone();
      dBCopyPreferenceBean0.setAutoCommitEnabled(true);
      dBCopyPreferenceBean0.setUseTruncate(true);
      dBCopyPreferenceBean0.clone();
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil.setLastStatement((String) null);
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.dropTable(" CASCADE", " CASCADE", "%%3C]o`6y)U#9O", (ISession) null, false, (-2005));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      UnaryOperator.identity();
      Function<Object, RenderingHints.Key> function0 = (Function<Object, RenderingHints.Key>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function.identity();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("log4j.reset", "on commit preserve rows with norecovery", ") has a particular foreign ", " add constraint ", 4103, "~w1_#Hoz5E6`Glw&", 4103, 4103, 4103, 4103, "log4j.reset", "-Z.b|#)Of3{(g", (-4), 4103, "-Z.b|#)Of3{(g");
      boolean boolean0 = DBUtil.isBinaryType(tableColumnInfo0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo(" schema = ", "keB*a", " schema = ", ") REFERENCES ", 4000, "DBUtil.nfobindclobfile", (-6), 0, (-5221), (-6), "DBUtil.nfobindclobfile", " seems to already have it defined.", 64, 2958465, "");
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.USER;
      ImageIcon imageIcon0 = new ImageIcon();
      Object[][] objectArray0 = new Object[5][0];
      Object[] objectArray1 = new Object[1];
      Object object0 = new Object();
      objectArray1[0] = object0;
      objectArray0[0] = objectArray1;
      Object[] objectArray2 = new Object[4];
      Object object1 = new Object();
      objectArray2[0] = object1;
      objectArray2[1] = (Object) " seems to already have it defined.";
      objectArray2[2] = (Object) "";
      objectArray2[3] = (Object) tableColumnInfo0;
      objectArray0[1] = objectArray2;
      Object[] objectArray3 = new Object[4];
      objectArray3[0] = (Object) " schema = ";
      objectArray3[1] = (Object) "DBUtil.nfobindclobfile";
      objectArray3[2] = object0;
      objectArray3[3] = (Object) "l]hrbviw[J9GT{CUpU";
      objectArray0[2] = objectArray3;
      Object[] objectArray4 = new Object[5];
      objectArray4[0] = (Object) "DBUtil.nfobindclobfile";
      objectArray4[1] = (Object) imageIcon0;
      objectArray4[2] = (Object) "keB*a";
      objectArray4[3] = (Object) "l]hrbviw[J9GT{CUpU";
      objectArray4[4] = (Object) "";
      objectArray0[3] = objectArray4;
      Object[] objectArray5 = new Object[7];
      objectArray5[0] = (Object) databaseObjectType0;
      objectArray5[1] = (Object) " schema = ";
      objectArray5[2] = object1;
      objectArray5[3] = object1;
      objectArray5[4] = object1;
      objectArray5[5] = (Object) " seems to already have it defined.";
      objectArray5[6] = object1;
      objectArray0[4] = objectArray5;
      JTable jTable0 = new JTable(objectArray0, objectArray4);
      imageIcon0.setImageObserver(jTable0);
      imageIcon0.setDescription("");
      imageIcon0.getImageObserver();
      DatabaseObjectType databaseObjectType1 = DatabaseObjectType.createNewDatabaseObjectType("CREATE $accessMethod$ INDEX $indexName$ $indexType$ ON $tableName$ ( $columnName; separator=\",\"$ )", (Icon) imageIcon0);
      tableColumnInfo0.replaceDatabaseObjectTypeConstantObjectsByConstantObjectsOfThisVM(databaseObjectType1);
      TableColumnInfo tableColumnInfo1 = new TableColumnInfo("keB*a", ") REFERENCES ", "B", "l]hrbviw[J9GT{CUpU", (-5), "B", 2497, (-2662), (-2662), 2004, "The map of parameters should not be null", "B", (-2662), 1, "E");
      DBUtil.isBinaryType(tableColumnInfo1);
      ArrayList<ITableInfo> arrayList0 = new ArrayList<ITableInfo>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      assertEquals(599, set0.size());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ForeignKeyInfo foreignKeyInfo1 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        DBUtil.tableHasForeignKey("><` O 3!Jze9", "#", "$JT\"PYR", foreignKeyInfo1, (SessionInfoProvider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.deleteDataInExistingTable((ISession) null, "/home/ubuntu/termite/projects/102_squirrel-sql/plugins/dbcopy.jar", "aze1U 2.wh\n", "%ty^h");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) null);
      AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster9, (FocusListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster10, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster.remove((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster11);
      BasicCheckBoxUI basicCheckBoxUI0 = new BasicCheckBoxUI();
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getApplication();
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/.squirrel-sql/logs");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " ADD FOREIGN KEY (");
      dBCopyPlugin0.getDestDatabaseObject();
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject((IDatabaseObjectInfo) null, schemaInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BasicComboBoxEditor.UIResource basicComboBoxEditor_UIResource0 = new BasicComboBoxEditor.UIResource();
      BasicOptionPaneUI basicOptionPaneUI0 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI1 = new BasicOptionPaneUI();
      BasicOptionPaneUI basicOptionPaneUI2 = new BasicOptionPaneUI();
      basicOptionPaneUI1.getMinimumOptionPaneSize();
      BasicOptionPaneUI basicOptionPaneUI3 = new BasicOptionPaneUI();
      DebugGraphics debugGraphics0 = new DebugGraphics();
      JMenuItem jMenuItem0 = new JMenuItem("Encountered unexpected exception while attempting to determine if schemas are used in table definitions", 2000);
      basicOptionPaneUI1.paint(debugGraphics0, jMenuItem0);
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuHandler", " ADD FOREIGN KEY (", "com.jidesoft.plaf.eclipse.EclipseMenuUI$MenuHandler", (String) null, 9, "Encountered unexpected exception while attempting to determine if schemas are used in table definitions", 90, 2000, 2000, (-1251), (String) null, "VXa0Pqrx^?wx7+#N", 5, 11, "Encountered unexpected exception when attempting to call schemaInfo.getTables with catalog = ");
      SchemaInfo schemaInfo0 = new SchemaInfo((IApplication) null);
      // Undeclared exception!
      try { 
        DBUtil.getSchemaFromDbObject(tableColumnInfo0, schemaInfo0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SQLDatabaseMetaData == null
         //
         verifyException("net.sourceforge.squirrel_sql.fw.sql.DatabaseObjectInfo", e);
      }
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.fixCase((ISession) null, "net.sourceforge.squirrel_sql.plugins.dbcopy.dbcopy");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.getCatSep((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate((ISQLConnection) null, "VXa0Pqrx?wx7+#N", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setDescription("");
      imageIcon0.getImageObserver();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      DatabaseObjectType databaseObjectType0 = DatabaseObjectType.SYNONYM_TYPE_DBO;
      ImageIcon imageIcon0 = new ImageIcon();
      imageIcon0.setDescription("");
      JSlider jSlider0 = new JSlider();
      DatabaseObjectType.createNewDatabaseObjectType("", (Icon) imageIcon0);
      // Undeclared exception!
      try { 
        DBUtil.convertObjectArrayToTableList((IDatabaseObjectInfo[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      MouseWheelListener mouseWheelListener0 = mock(MouseWheelListener.class, new ViolatedAssumptionAnswer());
      AWTEventMulticaster aWTEventMulticaster0 = (AWTEventMulticaster)AWTEventMulticaster.add(mouseWheelListener0, mouseWheelListener0);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster1 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster2 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster3 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster4 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) null);
      AWTEventMulticaster aWTEventMulticaster5 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster0);
      AWTEventMulticaster aWTEventMulticaster6 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster0, (MouseWheelListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster7 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster6, (TextListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster8 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster2, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster aWTEventMulticaster9 = (AWTEventMulticaster)AWTEventMulticaster.remove((MouseMotionListener) aWTEventMulticaster7, (MouseMotionListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster3, (MouseWheelListener) aWTEventMulticaster1);
      AWTEventMulticaster.add((TextListener) aWTEventMulticaster4, (TextListener) aWTEventMulticaster5);
      AWTEventMulticaster aWTEventMulticaster10 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) null, (MouseWheelListener) aWTEventMulticaster3);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster1, (MouseWheelListener) null);
      AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster6, (MouseWheelListener) aWTEventMulticaster8);
      AWTEventMulticaster aWTEventMulticaster11 = (AWTEventMulticaster)AWTEventMulticaster.add((MouseWheelListener) aWTEventMulticaster4, (MouseWheelListener) aWTEventMulticaster7);
      AWTEventMulticaster aWTEventMulticaster12 = (AWTEventMulticaster)AWTEventMulticaster.remove((FocusListener) aWTEventMulticaster10, (FocusListener) aWTEventMulticaster7);
      AWTEventMulticaster.add((HierarchyListener) aWTEventMulticaster3, (HierarchyListener) aWTEventMulticaster9);
      AWTEventMulticaster.remove((KeyListener) aWTEventMulticaster12, (KeyListener) aWTEventMulticaster6);
      AWTEventMulticaster.add((AdjustmentListener) aWTEventMulticaster0, (AdjustmentListener) aWTEventMulticaster8);
      AWTEventMulticaster.remove((MouseWheelListener) aWTEventMulticaster11, (MouseWheelListener) aWTEventMulticaster5);
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getPasteToTableInfo((ISQLConnection) null, "OHLCDataItem.compareTo().", "OHLCDataItem.compareTo().");
      dBCopyPlugin0.getDestSession();
      // Undeclared exception!
      try { 
        DBUtil.getTableInfo((ISession) null, "OHLCDataItem.compareTo().", ">JAc6jhT$rVS]");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      DBUtil.setLastStatementValues("DBUtil.error.tablenotfound");
      DBCopyPreferenceBean dBCopyPreferenceBean0 = new DBCopyPreferenceBean();
      dBCopyPreferenceBean0.clone();
      dBCopyPreferenceBean0.setAutoCommitEnabled(true);
      dBCopyPreferenceBean0.setUseTruncate(true);
      dBCopyPreferenceBean0.setAppendRecordsToExisting(false);
      DBCopyPreferenceBean dBCopyPreferenceBean1 = new DBCopyPreferenceBean();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-42);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DBUtil.setPreferences(dBCopyPreferenceBean0);
      DBUtil.setLastStatement((String) null);
      String string0 = DBUtil.getLastStatement();
      assertNull(string0);
  }

  /**
  //Test case number: 112
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      DBUtil dBUtil0 = new DBUtil();
      SQLDriverPropertyCollection sQLDriverPropertyCollection0 = new SQLDriverPropertyCollection();
      UidIdentifier uidIdentifier0 = new UidIdentifier();
      SQLDriver sQLDriver0 = new SQLDriver(uidIdentifier0);
      assertEquals("", sQLDriver0.toString());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      dBCopyPlugin0.getSourceSession();
      // Undeclared exception!
      try { 
        DBUtil.sanityCheckPreferences((ISession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }

  /**
  //Test case number: 114
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ForeignKeyInfo foreignKeyInfo0 = mock(ForeignKeyInfo.class, new ViolatedAssumptionAnswer());
      ApplicationFileWrappersImpl applicationFileWrappersImpl0 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl0.getLicenceFile();
      FileWrapperImpl fileWrapperImpl0 = new FileWrapperImpl("Q%[a;[|L1Ds\u0003v");
      FileWrapperImpl fileWrapperImpl1 = new FileWrapperImpl("=CFrf", "Q%[a;[|L1Ds\u0003v");
      ApplicationFileWrappersImpl applicationFileWrappersImpl1 = new ApplicationFileWrappersImpl();
      applicationFileWrappersImpl1.getQuickStartGuideFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      applicationFileWrappersImpl1.getFAQFile();
      applicationFileWrappersImpl1.getDatabaseAliasesFile_before_version_2_3();
      applicationFileWrappersImpl1.getDatabaseDriversFile();
      applicationFileWrappersImpl0.getCellImportExportSelectionsFile();
      TableColumnInfo tableColumnInfo0 = new TableColumnInfo("&s4o0lVTnfBO2pC@", "[3bI$qSe&f4;[FX", (String) null, "=CFrf", 2003, "", 2003, (-1879048189), 792, 2001, (String) null, "k#n ~750[ f~iN|", (-2101), 792, "[3bI$qSe&f4;[FX");
      DBCopyPlugin dBCopyPlugin0 = new DBCopyPlugin();
      // Undeclared exception!
      try { 
        DBUtil.getColumnSql(dBCopyPlugin0, tableColumnInfo0, "blob", "k#n ~750[ f~iN|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sourceforge.squirrel_sql.plugins.dbcopy.util.DBUtil", e);
      }
  }
}
