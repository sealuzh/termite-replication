/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:02:05 GMT 2019
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.List;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.TimeUnit;
import javax.management.remote.JMXPrincipal;
import org.apache.derby.iapi.sql.dictionary.GenericDescriptorList;
import org.apache.derby.iapi.store.raw.xact.RawTransaction;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.NameSpec;
import org.databene.jdbacl.SQLUtil;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBColumn;
import org.databene.jdbacl.model.DBConstraint;
import org.databene.jdbacl.model.DBDataType;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBObject;
import org.databene.jdbacl.model.DBPackage;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.Database;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.h2.jdbcx.JdbcConnectionPool;
import org.h2.jdbcx.JdbcDataSource;
import org.junit.runner.RunWith;
import org.postgresql.core.BaseConnection;
import org.postgresql.jdbc4.Jdbc4SQLXML;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQLUtil_ESTest extends SQLUtil_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("fFjZMF8kUG", "fFjZMF8kUG", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      String string0 = "lhdh pqmr2";
      dBCatalog0.setDoc("lhdh pqmr2");
      dBCatalog0.getSequences();
      dBCatalog0.getTables();
      dBCatalog0.getSchema("VALUES");
      dBCatalog0.getTables();
      dBCatalog0.setDoc("lhdh pqmr2");
      String string1 = "42X96";
      Vector<DBColumn> vector0 = new Vector<DBColumn>();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) vector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 0
         //
         verifyException("java.util.Vector", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.6449118645144092
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      String[] stringArray0 = new String[7];
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      String string0 = null;
      SQLUtil.join("org.h2.dynamic.", "alter index", stringArray0, "null = null AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", (String) null, stringArray0);
      SQLUtil.removeComments("");
      SQLUtil.removeComments("");
      SQLUtil.normalize("alter index", true);
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=3.071883917386517
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = ":J/~ k";
      SQLUtil.removeComments("select");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraints(true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "1xbD.8F9", true, stringArray0);
      dBUniqueConstraint0.setOwner(defaultDBTable0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", true, dBUniqueConstraint0);
      dBUniqueIndex0.setName(" AND ");
      dBUniqueIndex0.toString();
      dBUniqueIndex0.setDoc(" AND  (:J/~ k, , , , , , ) unique");
      dBUniqueConstraint0.setDoc(":J/~ k");
      dBUniqueIndex0.getTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = "o'*QZ1Ut2]=;8Bn]d";
      StringBuilder stringBuilder0 = new StringBuilder("o'*QZ1Ut2]=;8Bn]d");
      SQLUtil.addRequiredCondition("[1[1\".$FP&dp", stringBuilder0);
      dBUniqueConstraint0.toString();
      TableContainer tableContainer0 = new TableContainer("iy7L&%t");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable1, "select", true, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      SQLUtil.mutatesDataOrStructure("DEPENDENTID");
      long long0 = 4611686018427387904L;
      System.setCurrentTimeMillis(4611686018427387904L);
      // Undeclared exception!
      SQLUtil.isQuery("/*");
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      long long0 = 0L;
      System.setCurrentTimeMillis(0L);
      String string0 = "call";
      String string1 = "oB8UT5d";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("a", false, "oB8UT5d", "call");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBCheckConstraint0, stringBuilder0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(165, '*');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.3687634115561598
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.isProcedureCall("ADMIN");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      StringBuilder stringBuilder0 = new StringBuilder("<<(i)&");
      StringBuilder stringBuilder1 = stringBuilder0.reverse();
      stringBuilder1.append("ADMIN");
      StringBuilder stringBuilder2 = new StringBuilder();
      SQLUtil.mutatesDataOrStructure("rV0D)I!xU?)jqYE\"@U");
      SQLUtil.isDML("unwrap(Class<T>)");
      SQLUtil.isQuery("\n/* distinct */");
      SQLUtil.isQuery("EZm,");
      SQLUtil.mutatesStructure("q[eMo9IJqBvcpe+g/");
      PipedReader pipedReader0 = new PipedReader(322);
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      PipedReader pipedReader1 = null;
      try {
        pipedReader1 = new PipedReader(pipedWriter0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Already connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.127557121554711
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      Integer.compareUnsigned((-2161), (-518));
      Boolean boolean0 = new Boolean("lofhdye,6P=viP o<L");
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)0, "BLOB");
      DBDataType.getInstance(570, "into");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer0);
      defaultDBColumn0.toString();
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.renderColumn(defaultDBColumn0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.6432937573580657
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      defaultDBTable0.getColumnNames();
      byteArray0[2] = (byte)73;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ADMIN";
      stringArray0[4] = "ADMIN";
      stringArray0[2] = "ADMIN";
      stringArray0[3] = "ADMIN";
      stringArray0[4] = "ADMIN";
      SQLUtil.join("ADMIN", "{/I*g\"(q@}~^c8f'", stringArray0, "ADMIN", "ADMIN", stringArray0);
      defaultDBTable0.getUniqueConstraints(true);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource0.getTraceObjectName();
      jdbcDataSource0.getUser();
      JdbcDataSource jdbcDataSource2 = new JdbcDataSource();
      SQLUtil.isDML("Pd M*!~\"E");
      SQLUtil.renderValue(defaultDBTable0);
      // Undeclared exception!
      try { 
        jdbcDataSource2.getConnection("ADMIN", "H_o4");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=2.2877817837598444
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = "alter materialized view";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, 1894, "alter materialized view");
      String string1 = "r-ims-QXYP3k;";
      defaultDBColumn0.setDefaultValue("r-ims-QXYP3k;");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "r-ims-QXYP3k;", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("&m");
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      StringBuilder stringBuilder0 = new StringBuilder("r-ims-QXYP3k;");
      stringBuilder0.reverse();
      // Undeclared exception!
      try { 
        defaultDBTable0.getUniqueConstraint((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.StringUtil", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.6948896539491203
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String[] stringArray0 = new String[1];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[9];
      stringArray1[0] = "> (";
      String string0 = "`S}CrTj^vM8U3G\\R?X";
      String string1 = null;
      SQLUtil.renderQuery(defaultDBTable0, stringArray1, stringArray1);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, (String) null, false, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0, nameSpec0);
      int int0 = 9;
      char char0 = '2';
      // Undeclared exception!
      try { 
        stringBuilder1.insert(9, '2');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.1549900127837867
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String[] stringArray0 = new String[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[0]);
      boolean boolean0 = true;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":J/~ k");
      defaultDBTable0.getUniqueConstraints(true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "1xbD.8F9", true, stringArray0);
      defaultDBTable0.getIndexes();
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", true, dBUniqueConstraint0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!A'PDnd3wpuBpd");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      TableContainer tableContainer0 = new TableContainer("iy7L&%");
      tableContainer0.getTable("iy7L&%");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("CONSTRAINT 1xbD.8F9 UNIQUE ()");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.1549900127837867
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[0]);
      boolean boolean0 = true;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":J/~ k");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create unique index", true, stringArray0);
      defaultDBTable0.getIndexes();
      String string0 = "[1[1\".$FP&dp";
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", true, dBUniqueConstraint0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!A'Pnd3wKpuBpd");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec0);
      TableContainer tableContainer0 = new TableContainer("iy7L&%");
      tableContainer0.getTable("iy7L&%");
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("CONSTRAINT \"create unique index\" UNIQUE (, , , )");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.renderNumber((StreamTokenizer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)0, "BLOB");
      DBDataType.getInstance(570, "into");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, (Integer) null);
      defaultDBColumn0.setNullable(false);
      SQLUtil.renderColumn(defaultDBColumn0);
      SQLUtil.isProcedureCall("BLOB");
  }

  /**
  //Test case number: 13
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      GenericDescriptorList genericDescriptorList1 = new GenericDescriptorList();
      Enumeration enumeration0 = genericDescriptorList0.elements();
      genericDescriptorList0.add((Object) enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.Collections$3 cannot be cast to org.databene.jdbacl.model.DBColumn
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=2.4615287956358536
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SQLUtil.mutatesDataOrStructure("alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      String[] stringArray0 = new String[0];
      SQLUtil.join("D58|uVz", "=AT}{0", stringArray0, "CLOB", "=AT}{0", stringArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create table", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.mutatesDataOrStructure("t*Wr'j");
      SQLUtil.isQuery("t*Wr'j");
      System.setCurrentTimeMillis((byte)73);
      SQLUtil.mutatesStructure(" REFERENCES ");
      // Undeclared exception!
      try { 
        SQLUtil.ownerDotComponent((DBObject) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create tabledp6r%!>x", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "execorg.hsqldb.types.binary");
      // Undeclared exception!
      try { 
        SQLUtil.isQuery((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      defaultDBTable0.getColumnNames();
      byteArray0[2] = (byte)73;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[5];
      stringArray0[0] = "ADMIN";
      stringArray0[4] = "ADMIN";
      stringArray0[2] = "ADMIN";
      stringArray0[3] = "ADMIN";
      stringArray0[4] = "ADMIN";
      SQLUtil.join("ADMIN", "{/I*g\"(q@}~^c8f'", stringArray0, "ADMIN", "ADMIN", stringArray0);
      defaultDBTable0.getUniqueConstraints(true);
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      JdbcDataSource jdbcDataSource1 = new JdbcDataSource();
      jdbcDataSource0.getUser();
      JdbcDataSource jdbcDataSource2 = new JdbcDataSource();
      DBColumn[] dBColumnArray0 = new DBColumn[0];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "Bf(A8m");
      Reader reader0 = jdbc4SQLXML0.getCharacterStream();
      reader0.mark(787);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      reader0.mark(231);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(231);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      reader0.read(charBuffer0);
      StreamTokenizer streamTokenizer1 = new StreamTokenizer(reader0);
      StreamTokenizer streamTokenizer2 = new StreamTokenizer(reader0);
      SQLUtil.renderNumber(streamTokenizer2);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("_G)LJyqNc$PL*~N2'Q");
      Integer.compareUnsigned(2890, 2890);
      Boolean boolean0 = new Boolean("opening connection to ");
      DBDataType.getInstance(45, "_G)LJyqNc$PL*~N2'Q");
      DBDataType.getInstance(1853, "into");
      DBCatalog dBCatalog0 = new DBCatalog("opening connection to ");
      dBCatalog0.getTable("[kkx8Ye0=3>h(~", false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, (DBTable) null, (DBDataType) null, integer0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumn(defaultDBColumn0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=2.1993253868658744
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      String string0 = "p*j";
      DBCheckConstraint dBCheckConstraint0 = new DBCheckConstraint("w{Ja88(;mDX|M&", true, "p*j", "op_batch_segments ");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBCheckConstraint0, nameSpec0);
      DBSchema dBSchema0 = new DBSchema("trun");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(" X6tDM46v", dBSchema0);
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, (String[]) null, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.1205234365263865
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      SQLUtil.removeComments("renamereferences");
      boolean boolean0 = SQLUtil.isProcedureCall("*Ut9h");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean1 = new Boolean(false);
      Boolean boolean2 = SQLUtil.mutatesDataOrStructure("01*E1z%]?f;gDV6u*8\"");
      assertNull(boolean2);
      
      SQLUtil.isDML("01*E1z%]?f;gDV6u*8\"");
      SQLUtil.isQuery("*Ut9h");
      boolean boolean3 = SQLUtil.isQuery("select into");
      assertTrue(boolean3 == boolean0);
      
      SQLUtil.mutatesStructure("u|");
      String string0 = SQLUtil.normalize("DK{FC.qf\"HXq I,", false);
      assertEquals("DK { FC.qf \"HXq I,\"", string0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      GenericDescriptorList genericDescriptorList1 = new GenericDescriptorList();
      genericDescriptorList1.elements();
      int int0 = 246;
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(246, threadFactory0);
      scheduledThreadPoolExecutor0.getContinueExistingPeriodicTasksAfterShutdownPolicy();
      MockThread mockThread0 = new MockThread("CF?ZF");
      MockThread mockThread1 = new MockThread(mockThread0, "CF?ZF");
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      scheduledThreadPoolExecutor0.scheduleWithFixedDelay(mockThread0, (-1002L), 1366L, timeUnit0);
      GenericDescriptorList genericDescriptorList2 = new GenericDescriptorList();
      genericDescriptorList2.add((Object) null);
      genericDescriptorList2.add((Object) scheduledThreadPoolExecutor0);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("CF?ZF");
      genericDescriptorList2.add((Object) jMXPrincipal0);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      GenericDescriptorList genericDescriptorList1 = new GenericDescriptorList();
      genericDescriptorList1.elements();
      int int0 = 246;
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(246, threadFactory0);
      scheduledThreadPoolExecutor0.getContinueExistingPeriodicTasksAfterShutdownPolicy();
      MockThread mockThread0 = new MockThread("CF?ZF");
      String string0 = "u1g+Ujylh8<";
      MockThread mockThread1 = new MockThread(mockThread0, "u1g+Ujylh8<");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.scheduleWithFixedDelay(mockThread0, 246, 480L, timeUnit0);
      GenericDescriptorList genericDescriptorList2 = new GenericDescriptorList();
      genericDescriptorList0.add((Object) genericDescriptorList2);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.9296217656001493
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.isProcedureCall("ADMIN");
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      ThreadFactory threadFactory0 = mock(ThreadFactory.class, new ViolatedAssumptionAnswer());
      doReturn((Thread) null).when(threadFactory0).newThread(any(java.lang.Runnable.class));
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(3, threadFactory0);
      scheduledThreadPoolExecutor0.getContinueExistingPeriodicTasksAfterShutdownPolicy();
      MockThread mockThread0 = new MockThread(".x 5&c_Emxz");
      MockThread mockThread1 = new MockThread();
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      scheduledThreadPoolExecutor0.scheduleWithFixedDelay(mockThread1, (byte)73, 480L, timeUnit0);
      GenericDescriptorList genericDescriptorList0 = new GenericDescriptorList();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("ADMIN");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("3mY_wgfZ^|M}_]E>?", defaultDBTable0, (DBDataType) null);
      defaultDBColumn0.setNullable(false);
      genericDescriptorList0.add((Object) defaultDBColumn0);
      SQLUtil.renderColumnNames((List<DBColumn>) genericDescriptorList0);
      Boolean boolean0 = new Boolean("27my{\"");
      DBDataType.getInstance(3023, "CF?ZF");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "27my{\"");
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("3mY_wgfZ^|M}_]E>?", stringBuilder0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'v';
      charArray0[1] = '&';
      charArray0[2] = '.';
      charArray0[3] = 'd';
      charArray0[4] = 'n';
      charArray0[5] = 'o';
      StringBuilder stringBuilder2 = stringBuilder1.append(charArray0);
      StringBuilder stringBuilder3 = stringBuilder2.appendCodePoint(3);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.isDDL((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=2.662452981394178
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Object object0 = new Object();
      DBDataType.getInstance(3606, "update");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      SQLUtil.parseColumnTypeAndSize("drop table");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "1i8X^7";
      stringArray0[1] = "update";
      stringArray0[2] = "L018";
      stringArray0[3] = "L018";
      stringArray0[4] = "";
      stringArray0[5] = "drop table";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("S6}BJ-03!w!");
      assertNull(boolean0);
      
      Boolean.getBoolean("NpjJo'iM]qaS=NkL");
      SQLUtil.isDML("exec");
      String string0 = SQLUtil.substituteMarkers("", "drop table", (Object) null);
      assertEquals("", string0);
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5981863871455344
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Object object0 = new Object();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-117);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-31);
      byteArray0[3] = (byte)118;
      byteArray0[4] = (byte) (-101);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "isReadOnly");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "select";
      stringArray0[1] = "insert";
      stringArray0[2] = "insert";
      stringArray0[3] = "create unique indexcp6%!>";
      stringArray0[4] = "updateselect intowh@gt";
      stringArray0[5] = "isReadOnly";
      stringArray0[6] = "select";
      stringArray0[7] = "select";
      stringArray0[8] = "select";
      SQLUtil.renderColumnListWithTableName("isReadOnly", stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.ukSpec((DBUniqueConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=2.593830077527404
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[1];
      StringBuilder stringBuilder0 = null;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray1 = new String[6];
      stringArray1[0] = "> (";
      stringArray1[1] = "> (";
      stringArray1[2] = "`S}CrTj^vM8U3GR?X";
      stringArray1[3] = "> (";
      stringArray1[4] = "> (";
      stringArray1[5] = "> (";
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "> (", true, stringArray1);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("`S}CrTj^vM8U3GR?X", false, dBUniqueConstraint0);
      SQLUtil.renderQuery(defaultDBTable0, stringArray0, stringArray0);
      SQLUtil.isProcedureCall("`S}CrTj^vM8U3GR?X");
      StringBuilder stringBuilder1 = new StringBuilder("`S}CrTj^vM8U3GR?X");
      stringBuilder1.append(false);
      NameSpec nameSpec0 = NameSpec.NEVER;
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder1);
      String[] stringArray2 = new String[9];
      stringArray2[0] = " REFERENCES ";
      stringArray2[1] = "bgK9*lJ{'[-`=8Quok";
      stringArray2[2] = " REFERENCES ";
      stringArray2[3] = "`S}CrTj^vM8U3GR?X";
      stringArray2[4] = "inner";
      stringArray2[5] = "> (";
      stringArray2[6] = " REFERENCES ";
      stringArray2[7] = "`S}CrTj^vM8U3GR?X";
      stringArray2[8] = " REFERENCES ";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin(" REFERENCES ", stringArray2, " REFERENCES ", "`S}CrTj^vM8U3GR?X", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=2.1950865325403197
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)39;
      byteArray0[2] = (byte)39;
      byteArray0[7] = (byte) (-41);
      byteArray0[4] = (byte) (-41);
      byteArray0[5] = (byte)39;
      byteArray0[6] = (byte) (-41);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "select into:j/%~ k");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("select into:j/%~ k");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.9714549503478573
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = SQLUtil.mutatesStructure("execorg.hsqldc.types.binary");
      assertFalse(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("object already exists");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.330347924447853
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Boolean.valueOf("create tableclobreleaselocator");
      DBSchema dBSchema0 = new DBSchema("create tableclobreleaselocator");
      DBSequence dBSequence0 = new DBSequence("create tableclobreleaselocator", "create tableclobreleaselocator", "ZM5K(3L");
      dBSequence0.setDoc("create tableclobreleaselocator");
      dBSchema0.addSequence(dBSequence0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("updateorg.apache.derby.iapi.sql.dictionary.routinepermsdecriptor", dBSchema0);
      DBDataType.getInstance((-183793015), "updateorg.apache.derby.iapi.sql.dictionary.routinepermsdecriptor");
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("updateorg.apache.derby.iapi.sql.dictionary.routinepermsdecriptor");
      assertTrue(boolean0);
      assertNotNull(boolean0);
      
      boolean boolean1 = SQLUtil.isDML("updateorg.apache.derby.iapi.sql.dictionary.routinepermsdecriptor");
      Boolean boolean2 = SQLUtil.mutatesStructure("NTM_BkEST(");
      assertFalse(boolean2.equals((Object)boolean1));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=2.58933283280881
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*w/`TZ;#H<<>Rh");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create table", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SQLUtil.mutatesDataOrStructure(")");
      SQLUtil.isQuery("v>p`F8qrV,Cwb]0Ge@");
      System.setCurrentTimeMillis(383L);
      SQLUtil.mutatesStructure("$qG\"~$r(C:z|vz;n");
      String[] stringArray0 = new String[9];
      stringArray0[0] = "v>p`F8qrV,Cwb]0Ge@";
      stringArray0[1] = "alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor";
      stringArray0[2] = "*w/`TZ;#H<<>Rh";
      stringArray0[3] = "lofhdye,6P=viP o<L";
      stringArray0[4] = "*w/`TZ;#H<<>Rh";
      stringArray0[5] = "alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor";
      stringArray0[6] = "*w/`TZ;#H<<>Rh";
      stringArray0[7] = "*w/`TZ;#H<<>Rh";
      stringArray0[8] = "$qG\"~$r(C:z|vz;n";
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) boolean0;
      objectArray0[1] = (Object) "*w/`TZ;#H<<>Rh";
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause(stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.402886181440778
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("lofhdye,6P=viP o<L");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "isReadOnly";
      stringArray0[1] = "isReadOnly";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "isReadOnly", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("isReadOnly");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append("isReadOnly");
      NameSpec nameSpec0 = NameSpec.NEVER;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition("clwk.Y5X\"EC", stringBuilder1);
      stringBuilder2.append((-1944.0));
      int int0 = (-226);
      DBDataType dBDataType0 = DBDataType.getInstance((-226), "isReadOnly");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(", ", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder1);
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns (isReadOnly, isReadOnly)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Character character0 = new Character('v');
      SQLUtil.renderValue(character0);
      String string0 = ":ZQg]=UVJ";
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "'v'");
      int int0 = (-1470786840);
      // Undeclared exception!
      try { 
        stringBuilder0.appendCodePoint((-1470786840));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.849331548392819
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      Integer.compareUnsigned((-2161), (-518));
      Boolean boolean0 = new Boolean("lofhdye,6P=viP o<L");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("Ja2Y0Q:t|lQ^n%bBS# ");
      assertNull(boolean1);
      
      SQLUtil.isDML("S+");
      SQLUtil.isQuery("S+");
      SQLUtil.isQuery("}g86b|LN|V0F0-");
      SQLUtil.mutatesStructure("n8bZd/Ah");
      String string0 = SQLUtil.normalize("8Swty9*H2", false);
      assertEquals("8Swty9 * H2", string0);
      
      String string1 = SQLUtil.normalize("alter table:j/~ k join null as 5dhmjworsfivcrj on ,.:j/~ k = 5dhmjworsfivcrj.:j/~ k", false);
      assertEquals("alter table : j / ~ k join null as 5dhmjworsfivcrj on,.: j / ~ k = 5dhmjworsfivcrj.: j / ~ k", string1);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.7214787039105834
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      SQLUtil.isProcedureCall("FOREIGN KEY ");
      Character character0 = new Character('6');
      Character.lowSurrogate(44);
      Character.highSurrogate(44);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character.getName(44);
      Character.lowSurrogate((-4615));
      SQLUtil.substituteMarkers("ROLE", "ROLE", character0);
      TableContainer tableContainer0 = new TableContainer("COMMA");
      // Undeclared exception!
      try { 
        DBDataType.getInstance("ROLE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=0.563023629494366
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "insert:j/~ k";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("insert:j/~ k");
      String string1 = "CHECK ";
      String[] stringArray0 = new String[2];
      stringArray0[0] = "insert:j/~ k";
      boolean boolean0 = false;
      SQLUtil.normalize("J/|1-2M", false);
      // Undeclared exception!
      try { 
        SQLUtil.renderWhereClause((String[]) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.6379924856407104
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("lofhdye,6P=viP o<L");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "isRedOnly";
      stringArray0[1] = "isRedOnly";
      stringArray0[2] = "isRedOnly";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "isRedOnly", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("adding blob");
      dBPrimaryKeyConstraint0.toString();
      dBPrimaryKeyConstraint0.setDoc(" NOT NULL");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("isRedOnly");
      StringBuilder stringBuilder0 = new StringBuilder("");
      SQLUtil.addRequiredCondition("- ", stringBuilder0);
      char[] charArray0 = new char[5];
      charArray0[0] = '-';
      charArray0[1] = 'w';
      charArray0[2] = 'w';
      charArray0[3] = '7';
      charArray0[4] = 'o';
      stringBuilder0.append(charArray0);
      stringBuilder0.appendCodePoint(48);
      SQLUtil.normalize("", true);
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) "CONSTRAINT isRedOnly PRIMARY KEY (isRedOnly, isRedOnly, isRedOnly)";
      Object object0 = new Object();
      objectArray0[1] = object0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery(defaultDBTable0, stringArray0, objectArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=2.4115077760464843
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      SQLUtil.mutatesStructure("Cp6%!>");
      DBSchema dBSchema0 = new DBSchema("Cp6%!>");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Cp6%!>", dBSchema0);
      DBDataType dBDataType0 = DBDataType.getInstance((-5283), " i(vqW>xE1[Elq-F");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer.sum(42101, (-260913177));
      Integer.divideUnsigned((-260913177), (-54788270));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Cp6%!>", defaultDBTable0, dBDataType0, integer0);
      Character.valueOf('E');
      SQLUtil.isProcedureCall("Cp6%!>");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("GROUPBY");
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      SQLUtil.mutatesDataOrStructure("/*");
  }

  /**
  //Test case number: 39
  /*Coverage entropy=2.8764681971704835
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java.lang.Object@6b229b16";
      stringArray0[1] = "java.lang.Object@6b229b16";
      stringArray0[2] = "java.lang.Object@6b229b16";
      SQLUtil.join("java.lang.Object@6b229b16", "java.lang.Object@6b229b16", stringArray0, "5DhmjWORSfIvCrJ", "", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("java.lang.Object@6b229b16");
      DBDataType dBDataType0 = DBDataType.getInstance(3606, "update");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.compare(97, (-181812637));
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("update", defaultDBTable0, dBDataType0, integer0, integer1);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      defaultDBColumn0.getNotNullConstraint();
      StringBuilder stringBuilder0 = new StringBuilder(3606);
      SQLUtil.renderValue(stringBuilder0);
      SQLUtil.renderColumnNames(stringArray0);
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer.getInteger("execjava.lang.object@68124fd5");
      SQLUtil.substituteMarkers("java.lang.Object@6b229b16", "5DhmjWORSfIvCrJ", object0);
      SQLUtil.mutatesDataOrStructure("5DhmjWORSfIvCrJ");
      // Undeclared exception!
      try { 
        SQLUtil.mutatesStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.793515757686982
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("-{7{u+3<0{]LTV");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SQLUtil.mutatesDataOrStructure("alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-{7{u+3<0{]LTV";
      stringArray0[1] = "alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor";
      stringArray0[2] = "-{7{u+3<0{]LTV";
      stringArray0[3] = "-{7{u+3<0{]LTV";
      stringArray0[4] = "alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor";
      stringArray0[5] = "-{7{u+3<0{]LTV";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "-{7{u+3<0{]LTV", false, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      DBDataType.getInstance(268435456, "-{7{u+3<0{]LTV");
      SQLUtil.isQuery("alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("-{7{u+3<0{]LTV", true, defaultDBTable0, stringArray0, defaultDBTable0, (String[]) null);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      MockFile mockFile0 = new MockFile("select into");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter1);
      assertFalse(mockPrintWriter1.equals((Object)mockPrintWriter0));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=3.0726843807709763
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":J/~ k";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.join(":J/~ k", ",", stringArray0, (String) null, "5DhmjWORSfIvCrJ", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("`TR");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alLer session", defaultDBTable0, 1453, "drop#mate ialized view$fmye}s7@e8r'");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn(":J/~ k = ':J/~ k'", defaultDBTable0, 41, "org.ap");
      DBDataType dBDataType0 = DBDataType.getInstance(1453, "utvpdate");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("mLf3oBZ]WL!2[3cP,Y", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.setDoc("select into");
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("DrI^_gx(.2/uEMJ", defaultDBTable0, dBDataType0, integer1);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("5DhmjWORSfIvCrJ");
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      SQLUtil.mutatesDataOrStructure("DrI^_gx(.2/uEMJ");
      defaultDBTable0.getPrimaryKeyConstraint();
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=2.3777827956572746
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      SQLUtil.mutatesStructure("Cp6%!>");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-109);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, byteArray0);
      DBSchema dBSchema0 = new DBSchema("Cp6%!>");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("Cp6%!>", dBSchema0);
      SQLUtil.isDDL("Cp6%!>");
      DBDataType dBDataType0 = DBDataType.getInstance((-5283), " i(vqW>xE1[Elq-F");
      Integer integer0 = RawTransaction.COMMIT;
      Integer integer1 = RawTransaction.COMMIT;
      Integer.sum((-329628600), (-778));
      Integer.divideUnsigned((-3719), (-231));
      String string0 = null;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn((String) null, defaultDBTable0, dBDataType0, integer1);
      Character character0 = Character.valueOf('E');
      SQLUtil.isProcedureCall(" i(vqW>xE1[Elq-F");
      NameSpec nameSpec0 = NameSpec.NEVER;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unexpected response buffer");
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) null;
      objectArray0[1] = (Object) dBSchema0;
      objectArray0[2] = (Object) " i(vqW>xE1[Elq-F";
      objectArray0[3] = (Object) mockPrintWriter0;
      objectArray0[4] = (Object) defaultDBTable0;
      Object object0 = new Object();
      objectArray0[5] = object0;
      objectArray0[6] = (Object) nameSpec0;
      objectArray0[7] = (Object) character0;
      mockPrintWriter0.format("Unexpected response buffer", objectArray0);
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.mutatesDataOrStructure((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=2.4921707778973063
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String string0 = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      SQLUtil.mutatesDataOrStructure("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[1] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[2] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[3] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[4] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      stringArray0[0] = "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor";
      String string1 = SQLUtil.join("org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0, "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", "org.apache.derby.iapi.sql.dictionary.RoutinePermsDescriptor", stringArray0);
      String string2 = SQLUtil.innerJoin(stringArray0[6], stringArray0, string1, stringArray0[6], stringArray0);
      SQLUtil.mutatesDataOrStructure(string1);
      // Undeclared exception!
      SQLUtil.isDDL(string2);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=1.6969987794394548
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Integer integer0 = RawTransaction.COMMIT;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Boolean boolean0 = SQLUtil.mutatesStructure("alter tableorg.apache.derby.iapi.jdbc.characterstreamdescriptor");
      assertTrue(boolean0);
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      boolean boolean1 = SQLUtil.isQuery("lofhdye,6P=viP o<L");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 45
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String string0 = "isReadOnly";
      String[] stringArray0 = new String[3];
      stringArray0[0] = "isReadOnly";
      stringArray0[2] = "isReadOnly";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "6jNq1C,],s[\"'{H]cC", true, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint0, nameSpec0);
      String string1 = ">";
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn(">", defaultDBTable0, 45, "*HGG6JA0L)E=UXJ");
      // Undeclared exception!
      try { 
        stringBuilder0.insert(45, (Object) defaultDBColumn0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 45
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.9770128063966104
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create tabledp6r%!>x", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = new Boolean(true);
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("2fQ2d'VSjfL%'");
      assertNull(boolean1);
      
      SQLUtil.isDML("ucwrlp(Classb/<T>");
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.isQuery("2fQ2d'VSjfL%'");
      SQLUtil.mutatesStructure(" ADD ");
      String string0 = SQLUtil.normalize("-xawLZ", false);
      assertEquals("- xawLZ", string0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      String[] stringArray0 = defaultDBTable0.getColumnNames();
      byteArray0[2] = (byte)73;
      String[] stringArray1 = new String[5];
      stringArray1[0] = "ADMIN";
      // Undeclared exception!
      try { 
        SQLUtil.join("ADMIN", "{/I*g\"(q@}~^c8f'", stringArray1, "}LEp", "o", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("create tabledp6r%!>x", 12345);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      Boolean boolean0 = new Boolean("execorg.hsqldb.types.binary");
      SQLUtil.isProcedureCall("execorg.hsqldb.types.binary");
      System.setCurrentTimeMillis((-957L));
  }

  /**
  //Test case number: 49
  /*Coverage entropy=2.325342919442848
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "Bf(A8m");
      Reader reader0 = jdbc4SQLXML0.getCharacterStream();
      reader0.mark(787);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure("executecu6?>");
      assertNull(boolean0);
      
      boolean boolean1 = SQLUtil.isQuery("{d'_57-PvuUM[");
      assertFalse(boolean1);
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      DBForeignKeyConstraint dBForeignKeyConstraint0 = null;
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.fkSpec((DBForeignKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("execute:", 34);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      // Undeclared exception!
      try { 
        SQLUtil.constraintName((DBConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "calljava.lang.object@5cda53e6";
      DBDataType.getInstance((-897), "calljava.lang.object@5cda53e6");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      DBDataType.getInstance((-897), " ADD ");
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer4 = RawTransaction.LOCK_ESCALATE;
      DBColumn[] dBColumnArray0 = new DBColumn[5];
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnNames(dBColumnArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      DBCatalog dBCatalog0 = new DBCatalog("P", (Database) null);
      StringBuilder stringBuilder0 = new StringBuilder(41);
      stringBuilder0.append((CharSequence) ", ");
      SQLUtil.addOptionalCondition(", ", stringBuilder0);
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d)3`F9Jm$-");
      assertFalse(boolean0);
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("lofhdye,6P=viP o<L");
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "isReadOnly";
      stringArray0[1] = "isReadOnly";
      stringArray0[2] = "isReadOnly";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "isReadOnly", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("clwk.Y5X\"EC");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder1 = stringBuilder0.append("S%#V#ggGn~uk");
      StringBuilder stringBuilder2 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder1, nameSpec0);
      SQLUtil.addOptionalCondition("adding blob", stringBuilder2);
      DBDataType dBDataType0 = DBDataType.getInstance((-177131935), "isReadOnly");
      assertEquals((-177131935), dBDataType0.getJdbcType());
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8408398156653452
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      System.setCurrentTimeMillis((-1L));
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[9];
      stringArray0[0] = "update";
      stringArray0[1] = "update";
      stringArray0[2] = "update";
      stringArray0[3] = "update";
      stringArray0[4] = "update";
      stringArray0[5] = "g4F";
      stringArray0[6] = "update";
      stringArray0[7] = "update";
      stringArray0[8] = "update";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "update", false, stringArray0);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      defaultDBTable0.getUniqueConstraint("BWgOZ1DYxN:)");
      StringBuilder stringBuilder0 = new StringBuilder(" on ");
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.parseColumnTypeAndSize("5X1jb(C");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal column type format: 5X1jb(C
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = "Bf(A8m";
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "Bf(A8m");
      Reader reader0 = jdbc4SQLXML0.getCharacterStream();
      reader0.mark(787);
      SQLUtil.normalize("Bf(A8m", true);
      DBCatalog dBCatalog0 = new DBCatalog();
      VersionNumber versionNumber0 = VersionNumber.valueOf("4YK$bg");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("update", "left", versionNumber0);
      String string1 = "8q";
      VersionNumber.valueOf("y)C9-au");
      // Undeclared exception!
      try { 
        defaultDatabase0.getSchema("Qr?8tx'^y#\"o+ts}3Bo");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'update'
         //
         verifyException("org.databene.jdbacl.model.DefaultDatabase", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      JdbcConnectionPool jdbcConnectionPool0 = JdbcConnectionPool.create("alter index", "alter index", "C");
      jdbcConnectionPool0.getLogWriter();
      // Undeclared exception!
      try { 
        SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, (PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.6574520104243486
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alter materialized view", defaultDBTable0, 1894, "alter materialized view");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "r-ims-QXYP3k;", true, (String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec0);
      stringBuilder0.reverse();
      // Undeclared exception!
      try { 
        DBDataType.getInstance(1894, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.model.DBDataType", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=2.374873449468307
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SQLUtil.removeComments("update");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable((String) null);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, (String) null, true, (String[]) null);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("deleteorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", true, dBPrimaryKeyConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("update", defaultDBTable0, 1004, "drop tablesq>ayfs*.cit");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("TfeD@]1VoAh_o9 .)", dBTable0, (-630), "calljava.lang.object@5cda53e6");
      defaultDBColumn1.setVersionColumn(false);
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("'G^{9B^B;k^");
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      String string0 = SQLUtil.constraintSpec(dBPrimaryKeyConstraint0, nameSpec1);
      assertEquals("PRIMARY KEY ()", string0);
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.321586518849365
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "KD/zeY{");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "drop indexcallja2y0q:t|lq^n%bbs#");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.mutatesDataOrStructure("LINKED");
      SQLUtil.isQuery("KD/zeY{");
      System.setCurrentTimeMillis(0L);
      Boolean boolean0 = SQLUtil.mutatesDataOrStructure(" REFERENCES ");
      assertNull(boolean0);
      
      boolean boolean1 = SQLUtil.isDDL("drop indexcallja2y0q:t|lq^n%bbs#");
      assertTrue(boolean1);
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.6817705896061614
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[7];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select");
      stringArray0[0] = ":J/~ k";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraints(true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "1xbD.8F9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", true, dBUniqueConstraint0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = new StringBuilder("o'*QZ1Ut2]=;8Bn]d");
      SQLUtil.addRequiredCondition("[1[1\".$FP&dp", stringBuilder0);
      dBUniqueConstraint0.toString();
      TableContainer tableContainer0 = new TableContainer("iy7L&%t");
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      DBUniqueConstraint dBUniqueConstraint1 = new DBUniqueConstraint(defaultDBTable1, ":J/~ k = ':J/~ k' AND null = null AND null = null AND null = null AND null = null AND null = null AND null = null", true, stringArray0);
      SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, stringBuilder0);
      dBUniqueConstraint1.equals(dBTable0);
      SQLUtil.renderColumnListWithTableName("iy7L&%t", stringArray0);
      SQLUtil.ukSpec(dBUniqueConstraint1, nameSpec0);
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, "!A'PDnd3wpuBpd", true, stringArray0);
      SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.createConstraintSpecBuilder(dBUniqueConstraint0, nameSpec1);
      String[] stringArray1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnListWithTableName(" (", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 64
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String string0 = "select into";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select into");
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("select into", (String[]) null, "select into", "select into", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "isReadOnly";
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("execute:", 34);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      DefaultDBTable defaultDBTable1 = new DefaultDBTable();
      int int0 = 47;
      DBDataType dBDataType0 = DBDataType.getInstance(47, "isReadOnly");
      Integer integer0 = new Integer(47);
      Integer integer1 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("isReadOnly", defaultDBTable1, dBDataType0, integer0, integer1);
      String string0 = " = ";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint(" = ", true, defaultDBTable0, stringArray0, defaultDBTable1, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBForeignKeyConstraint0, nameSpec0);
      // Undeclared exception!
      try { 
        stringBuilder0.insert(47, (-3545.65));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 47
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=2.1569877743224173
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T6E9]B`4K{.B}4");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "-^Deqhetlrhz8ZyQP,", true, (String[]) null);
      dBPrimaryKeyConstraint0.setName("xav {=0}|R,G/");
      dBPrimaryKeyConstraint0.setDoc("P$};M9eAo!_v/t");
      String string0 = dBPrimaryKeyConstraint0.toString();
      assertEquals("CONSTRAINT \"xav {=0}|R,G/\" PRIMARY KEY ()", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "exec", true, (String[]) null);
      dBPrimaryKeyConstraint1.setDoc(" NOT NULL");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("adding blob");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "T6E9]B`4K{.B}4";
      stringArray0[0] = "P$};M9eAo!_v/t";
      stringArray0[3] = " NOT NULL";
      stringArray0[4] = "(;l0l<fy";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint2 = new DBPrimaryKeyConstraint(defaultDBTable0, "T6E9]B`4K{.B}4", true, (String[]) null);
      dBPrimaryKeyConstraint2.setDoc("zR9&wyef1@VbOi:");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/13_jdbacl");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "(BsLCl)D~+bATQvF-");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint3 = new DBPrimaryKeyConstraint(defaultDBTable0, "2[qR", true, (String[]) null);
      dBPrimaryKeyConstraint3.toString();
      DBDataType.getInstance(90011, "qdBPWXbwk");
      String string1 = SQLUtil.constraintName(dBPrimaryKeyConstraint2);
      assertEquals("CONSTRAINT T6E9]B`4K{.B}4 ", string1);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=0.42857142857142855
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SQLUtil.normalize("d)3`F9Jm$-", true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      SQLUtil.normalize("xp", true);
      SQLUtil.normalize("deleteorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", false);
      Reader reader0 = null;
      StreamTokenizer streamTokenizer0 = null;
      try {
        streamTokenizer0 = new StreamTokenizer((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      int int0 = 831;
      String string0 = "ADMIN";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string1 = null;
      // Undeclared exception!
      try { 
        SQLUtil.isProcedureCall((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=2.12341771979318
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      String[] stringArray0 = new String[10];
      stringArray0[0] = "=AT}{0";
      stringArray0[1] = "truncate";
      stringArray0[2] = "truncate";
      stringArray0[3] = "truncate";
      stringArray0[3] = "truncate";
      stringArray0[5] = "=AT}{0";
      String string0 = SQLUtil.join("truncate", "'-$Zq0eV", stringArray0, "vR\"ikx", "=AT}{0", stringArray0);
      assertEquals("truncate join vR\"ikx as =AT}{0 on '-$Zq0eV.=AT}{0 = =AT}{0.=AT}{0 and '-$Zq0eV.truncate = =AT}{0.truncate and '-$Zq0eV.truncate = =AT}{0.truncate and '-$Zq0eV.truncate = =AT}{0.truncate and '-$Zq0eV.null = =AT}{0.null and '-$Zq0eV.=AT}{0 = =AT}{0.=AT}{0 and '-$Zq0eV.null = =AT}{0.null and '-$Zq0eV.null = =AT}{0.null and '-$Zq0eV.null = =AT}{0.null and '-$Zq0eV.null = =AT}{0.null", string0);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "create materialized viewcp6%!>", false, stringArray0);
      dBPrimaryKeyConstraint0.equals((Object) null);
      String string1 = SQLUtil.renderColumnListWithTableName((String) null, stringArray0);
      assertEquals("null.=AT}{0, null.truncate, null.truncate, null.truncate, null.null, null.=AT}{0, null.null, null.null, null.null, null.null", string1);
      
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      String string2 = SQLUtil.ukSpec(dBPrimaryKeyConstraint0, nameSpec0);
      assertEquals("UNIQUE (=AT}{0, truncate, truncate, truncate, , =AT}{0, , , , )", string2);
      
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, stringArray0[6], true, stringArray0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      String string3 = SQLUtil.pkSpec(dBPrimaryKeyConstraint0, nameSpec1);
      assertEquals("PRIMARY KEY (=AT}{0, truncate, truncate, truncate, , =AT}{0, , , , )", string3);
      
      NameSpec nameSpec2 = NameSpec.ALWAYS;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint1, nameSpec2);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "K2nkJ:'xnF<OVem[";
      // Undeclared exception!
      try { 
        SQLUtil.removeComments(stringArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.369437027628834
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("$[1}");
      Integer.compareUnsigned(191, (-211109574));
      Boolean boolean0 = new Boolean("$[1}");
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("Ja2Y0Q:t|lQ^n%bBS# ");
      assertNull(boolean1);
      
      boolean boolean2 = SQLUtil.isDML("select intowh@gt");
      SQLUtil.isQuery("lofhdye,6P=viP o<L");
      boolean boolean3 = SQLUtil.isQuery("SELECT * FROM ");
      assertTrue(boolean3 == boolean2);
      
      SQLUtil.mutatesStructure("SELECT * FROM ");
      String string0 = SQLUtil.normalize("8Swty9*H2", false);
      assertEquals("8Swty9 * H2", string0);
      
      SQLUtil.isDDL("select intowh@gt");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Ja2Y0Q:t|lQ^n%bBS# ";
      stringArray0[1] = "lofhdye,6P=viP o<L";
      stringArray0[2] = "select intowh@gt";
      stringArray0[3] = "8Swty9 *  H2";
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertEquals("Ja2Y0Q:t|lQ^n%bBS#  = 'Ja2Y0Q:t|lQ^n%bBS# ' AND lofhdye,6P=viP o<L = 'lofhdye,6P=viP o<L' AND select intowh@gt = 'select intowh@gt' AND 8Swty9 *  H2 = '8Swty9 *  H2'", string1);
      
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("create tabledependentid");
      String string2 = SQLUtil.ownerDotComponent(defaultDBTable0);
      assertEquals("create tabledependentid", string2);
  }

  /**
  //Test case number: 72
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      // Undeclared exception!
      try { 
        SQLUtil.join((String) null, "FL;A+O]GmqCSwe^v", (String[]) null, "5X1jb(C", " an ", (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      String string0 = SQLUtil.normalize(", (", false);
      assertEquals(", (", string0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "executealter materialized view";
      stringArray0[1] = "update";
      stringArray0[2] = "update";
      stringArray0[3] = "h'n3NY}?niC^f";
      String string1 = SQLUtil.normalize("H:uCoKLW'4$'I\"9SB", true);
      assertEquals("H : uCoKLW '4$' I \"9SB\"", string1);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.765976792018692
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "9";
      stringArray0[1] = "9";
      stringArray0[2] = "9";
      SQLUtil.join("9", "9", stringArray0, "9", "9", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("9");
      DBDataType dBDataType0 = DBDataType.getInstance(3606, "hUL");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer2 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("mSd=0$Yc", defaultDBTable0, dBDataType0, integer2, integer2);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      defaultDBColumn0.getNotNullConstraint();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.createConstraintSpecBuilder((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      dBCatalog0.setDoc("create materialized view");
      dBCatalog0.setDoc("lhdh pqmr2");
      dBCatalog0.getSequences();
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)73, "BLOB");
      dBDataType0.isAlpha();
      DBDataType dBDataType1 = DBDataType.getInstance((-1194), "into");
      DBDataType.getInstance((-1194), "");
      Vector<Object> vector0 = new Vector<Object>();
      VersionNumber versionNumber0 = new VersionNumber(vector0);
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("create materialized view", "Lock mode set to MODE_RECORD because all start and stop positions are constant", versionNumber0);
      defaultDatabase0.getTable("create materialized view", false);
      Integer integer0 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("Lock mode set to MODE_RECORD because all start and stop positions are constant", (DBTable) null, dBDataType1, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("Lock mode set to MODE_RECORD because all start and stop positions are constant INTO(1) NULL", string0);
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      DBColumn[] dBColumnArray0 = new DBColumn[7];
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getTable("7OA_", false);
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("7OA_", (DBTable) null, 0, "7OA_");
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      DBDataType dBDataType0 = DBDataType.getInstance(0, "3BuwMhEqIlV>");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn("3BuwMhEqIlV>", (DBTable) null, dBDataType0);
      dBColumnArray0[1] = (DBColumn) defaultDBColumn1;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("7OA_", (DBTable) null, dBDataType0, (Integer) null, (Integer) null);
      dBColumnArray0[2] = (DBColumn) defaultDBColumn2;
      Integer integer0 = RawTransaction.COMMIT;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn("3BuwMhEqIlV>", (DBTable) null, dBDataType0, integer0);
      dBColumnArray0[3] = (DBColumn) defaultDBColumn3;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn4 = new DefaultDBColumn("drop materialized view", (DBTable) null, dBDataType0, integer1);
      dBColumnArray0[4] = (DBColumn) defaultDBColumn4;
      dBColumnArray0[5] = (DBColumn) defaultDBColumn2;
      DefaultDBColumn defaultDBColumn5 = new DefaultDBColumn("3BuwMhEqIlV>", (DBTable) null, dBDataType0, (Integer) null);
      String string0 = SQLUtil.renderColumn(defaultDBColumn2);
      assertEquals("7OA_ 3BUWMHEQILV> NULL", string0);
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.4558487091517962
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("lofhdye,6P=viP o<L");
      Integer.compareUnsigned((-2161), (-518));
      Boolean boolean0 = new Boolean("lofhdye,6P=viP o<L");
      DBDataType dBDataType0 = DBDataType.getInstance((int) (byte)0, "BLOB");
      dBDataType0.isAlpha();
      DBDataType.getInstance(27, "into");
      DBDataType.getInstance(570, "into");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("BLOB", defaultDBTable0, dBDataType0, integer0);
      String string0 = SQLUtil.renderColumn(defaultDBColumn0);
      assertEquals("BLOB BLOB NULL", string0);
      
      String string1 = SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0);
      assertEquals("BLOB", string1);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      // Undeclared exception!
      try { 
        SQLUtil.renderColumnTypeWithSize((DBColumn) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.809926503393286
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String[] stringArray0 = new String[7];
      String string0 = "select";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select");
      stringArray0[0] = ":J/~ k";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      defaultDBTable0.getUniqueConstraints(true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "1xbD.8F9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", true, dBUniqueConstraint0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      dBUniqueIndex0.getTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        SQLUtil.appendConstraintName((DBConstraint) dBUniqueConstraint0, (StringBuilder) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.708098876326541
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "isReadOnly";
      stringArray0[2] = "isReadOnly";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "isReadOnly", true, stringArray0);
      dBPrimaryKeyConstraint0.setDoc("isReadOnly");
      dBPrimaryKeyConstraint0.setDoc("adding blob");
      StringBuilder stringBuilder0 = new StringBuilder();
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      StringBuilder stringBuilder1 = SQLUtil.appendConstraintName((DBConstraint) dBPrimaryKeyConstraint0, stringBuilder0, nameSpec0);
      StringBuilder stringBuilder2 = SQLUtil.addOptionalCondition("vlpW%BL&-WF1myN", stringBuilder1);
      stringBuilder0.append((double) 570);
      DBDataType dBDataType0 = DBDataType.getInstance(570, "*Hgg6ja0L)E=UXj");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("isReadOnly", defaultDBTable0, dBDataType0, integer0);
      SQLUtil.renderColumnTypeWithSize((DBColumn) defaultDBColumn0, stringBuilder2);
      // Undeclared exception!
      try { 
        defaultDBTable0.getForeignKeyConstraint(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'null' has no foreign key with the columns (isReadOnly, , isReadOnly)
         //
         verifyException("org.databene.jdbacl.model.DefaultDBTable", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.986245854568605
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      String[] stringArray0 = new String[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "select");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[0]);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":J/~ k");
      defaultDBTable0.getUniqueConstraints(true);
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "1xbD.8F9", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", false, dBUniqueConstraint0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      dBUniqueIndex0.getTable();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!A'PDnd3wpuBpd");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, false, nameSpec0, mockPrintWriter0);
      String string0 = "o'*QZ1Ut2]=;8Bn]d";
      StringBuilder stringBuilder0 = new StringBuilder("o'*QZ1Ut2]=;8Bn]d");
      stringBuilder0.reverse();
      JdbcDataSource jdbcDataSource0 = new JdbcDataSource();
      // Undeclared exception!
      try { 
        jdbcDataSource0.getConnection("!A'PDnd3wpuBpd", "inner");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid value  for parameter \"url\" [90008-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=2.3865802910974443
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[0]);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":J/~ k");
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "create unique index", true, stringArray0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      defaultDBTable0.getIndexes();
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex("[1[1\".$FP&dp", true, dBUniqueConstraint0);
      dBUniqueConstraint0.setDoc(":J/~ k");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!A'Pnd3wKpuBpd");
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.renderCreateTable(defaultDBTable0, true, nameSpec0, mockPrintWriter0);
      NameSpec nameSpec1 = NameSpec.ALWAYS;
      SQLUtil.constraintSpec(dBUniqueConstraint0, nameSpec1);
      NameSpec nameSpec2 = NameSpec.NEVER;
      SQLUtil.ukSpec(dBUniqueConstraint0, nameSpec2);
      SQLUtil.parseColumnTypeAndSize("iz!E|&osW>}} ");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.pkSpec((DBPrimaryKeyConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.4044835500613493
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":J/~ k";
      SQLUtil.renderWhereClause(stringArray0, stringArray0);
      SQLUtil.join(":J/~ k", ",", stringArray0, (String) null, "5DhmjWORSfIvCrJ", stringArray0);
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("`TR");
      DefaultDBColumn defaultDBColumn0 = new DefaultDBColumn("alLer session", defaultDBTable0, 1452, "drop#mate ialized view$fmye}s7@e8r'");
      DefaultDBColumn defaultDBColumn1 = new DefaultDBColumn(":J/~ k = ':J/~ k'", defaultDBTable0, 41, "org.ap");
      DBDataType dBDataType0 = DBDataType.getInstance(1452, "utvpdate");
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer1 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn2 = new DefaultDBColumn("mLf3oBZ]WL!2[3cP,Y", defaultDBTable0, dBDataType0, integer1);
      defaultDBColumn0.setDoc("select into");
      Integer integer2 = RawTransaction.SAVEPOINT_ROLLBACK;
      Integer integer3 = RawTransaction.ABORT;
      DefaultDBColumn defaultDBColumn3 = new DefaultDBColumn(":J/~ k", defaultDBTable0, dBDataType0, integer3);
      DBColumn[] dBColumnArray0 = new DBColumn[4];
      dBColumnArray0[0] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[1] = (DBColumn) defaultDBColumn0;
      dBColumnArray0[2] = (DBColumn) defaultDBColumn1;
      dBColumnArray0[3] = (DBColumn) defaultDBColumn2;
      SQLUtil.renderColumnNames(dBColumnArray0);
      SQLUtil.renderColumn(defaultDBColumn3);
      defaultDBTable0.getUniqueConstraint((String[]) null);
      NameSpec nameSpec0 = NameSpec.IF_REPRODUCIBLE;
      // Undeclared exception!
      try { 
        SQLUtil.constraintSpec((DBConstraint) null, nameSpec0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=0.8505612088663046
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "R`;9INtq%2";
      String[] stringArray1 = new String[5];
      stringArray1[0] = "R`;9INtq%2";
      stringArray1[1] = "R`;9INtq%2";
      stringArray1[2] = "R`;9INtq%2";
      stringArray1[3] = "R`;9INtq%2";
      stringArray1[4] = "wG+cTvM^U$@(d^";
      String string0 = SQLUtil.leftJoin("R`;9INtq%2", stringArray0, "R`;9INtq%2", "R`;9INtq%2", stringArray1);
      assertEquals("left join R`;9INtq%2 as R`;9INtq%2 on R`;9INtq%2.R`;9INtq%2 = R`;9INtq%2.R`;9INtq%2", string0);
  }

  /**
  //Test case number: 85
  /*Coverage entropy=0.8053415898278653
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":J/~ k";
      String string0 = "KA\"\\x3(";
      String[] stringArray1 = new String[8];
      stringArray1[0] = "KA\"x3(";
      stringArray1[1] = null;
      stringArray1[2] = "KA\"x3(";
      stringArray1[3] = null;
      stringArray1[4] = "KA\"x3(";
      stringArray1[5] = null;
      stringArray1[6] = "KA\"x3(";
      stringArray1[7] = ":J/~ k";
      SQLUtil.join("drop materialized view", ":J/~ k", stringArray0, (String) null, "KA\"x3(", stringArray1);
      // Undeclared exception!
      try { 
        SQLUtil.innerJoin("drop materialized view", stringArray1, stringArray1[3], ":J/~ k", stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("r`p6RYs>X", "alter indexorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor", (VersionNumber) null);
      DBCatalog dBCatalog0 = new DBCatalog();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "exec");
      dBCatalog0.getSchemas();
      dBCatalog0.getTables();
      DBSchema dBSchema0 = new DBSchema("exec");
      String string0 = SQLUtil.typeAndName(dBCatalog0);
      TableContainer tableContainer0 = new TableContainer("alter indexorg.apache.derby.iapi.sql.dictionary.routinepermsdescriptor");
      tableContainer0.getSchema();
      StringBuilder stringBuilder0 = new StringBuilder(41);
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = 'm';
      charArray0[2] = '7';
      charArray0[3] = 'j';
      charArray0[4] = 'F';
      charArray0[5] = 'n';
      charArray0[6] = '#';
      charArray0[7] = '!';
      charArray0[8] = ' ';
      stringBuilder0.append(charArray0);
      SQLUtil.addOptionalCondition("r`p6RYs>X", stringBuilder0);
      String[] stringArray0 = new String[0];
      String string1 = SQLUtil.renderWhereClause(stringArray0, stringArray0);
      assertFalse(string1.equals((Object)string0));
  }

  /**
  //Test case number: 87
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte)73;
      DBCatalog dBCatalog0 = new DBCatalog();
      dBCatalog0.getSchemas();
      dBCatalog0.setDoc("create materialized view");
      dBCatalog0.setDoc("lhdh pqmr2");
      dBCatalog0.getSequences();
      DBCatalog dBCatalog1 = new DBCatalog((String) null);
      dBCatalog1.getSchema("ol");
      dBCatalog0.getTables();
      dBCatalog1.setDoc("WKPmc'3u ?Q'fW");
      dBCatalog0.getSchema("42X96");
      SQLUtil.typeAndName((DBObject) null);
      DBCatalog dBCatalog2 = new DBCatalog();
      assertNull(dBCatalog2.getDoc());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "isReadOnly";
      stringArray0[1] = "isReadOnly";
      stringArray0[2] = "isReadOnly";
      stringArray0[3] = "isReadOnly";
      stringArray0[4] = "isReadOnly";
      stringArray0[5] = "2.Y";
      String string0 = SQLUtil.leftJoin("isReadOnly", stringArray0, "d!OhBVM;m[[N8P0", "2.Y", stringArray0);
      assertEquals("left join d!OhBVM;m[[N8P0 as 2.Y on isReadOnly.isReadOnly = 2.Y.isReadOnly and isReadOnly.isReadOnly = 2.Y.isReadOnly and isReadOnly.isReadOnly = 2.Y.isReadOnly and isReadOnly.isReadOnly = 2.Y.isReadOnly and isReadOnly.isReadOnly = 2.Y.isReadOnly and isReadOnly.2.Y = 2.Y.2.Y", string0);
  }

  /**
  //Test case number: 89
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      String string0 = "TriggerNewTrnsitionRows";
      StringBuilder stringBuilder1 = SQLUtil.addOptionalCondition("TriggerNewTrnsitionRows", stringBuilder0);
      stringBuilder1.append('0');
      int int0 = 90105;
      // Undeclared exception!
      try { 
        stringBuilder0.delete(90105, (-1151817764));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.574337865325543
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      SQLUtil.isProcedureCall("");
      String string0 = "5owrz-I";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      String[] stringArray0 = new String[0];
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("5owrz-I", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      String string1 = "rename";
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("rename");
      SQLUtil.renderAddForeignKey(dBForeignKeyConstraint0, nameSpec0, mockPrintWriter0);
      // Undeclared exception!
      try { 
        SQLUtil.addOptionalCondition("rename", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "Bf(A8m");
      jdbc4SQLXML0.getCharacterStream();
      DBCatalog dBCatalog0 = new DBCatalog("lhdh pqmr2", (Database) null);
      dBCatalog0.setDoc("Bf(A8m");
      dBCatalog0.getSequences();
      dBCatalog0.getTables();
      dBCatalog0.getTables();
      dBCatalog0.getSchema("create table> (");
      SQLUtil.typeAndName(dBCatalog0);
      DBCatalog dBCatalog1 = new DBCatalog();
      DBCatalog dBCatalog2 = new DBCatalog();
      // Undeclared exception!
      try { 
        dBCatalog2.getTable("catalog lhdh pqmr2");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Table 'catalog lhdh pqmr2'
         //
         verifyException("org.databene.jdbacl.model.DBCatalog", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.9109320111226602
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T6E9]B`4K{.B}4");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "-^Deqhetlrhz8ZyQP,", true, (String[]) null);
      dBPrimaryKeyConstraint0.setDoc("P$};M9eAo!_v/t");
      dBPrimaryKeyConstraint0.toString();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint1 = new DBPrimaryKeyConstraint(defaultDBTable0, "exec", true, (String[]) null);
      dBPrimaryKeyConstraint1.setDoc(" NOT NULL");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("adding blob");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "T6E9]B`4K{.B}4";
      stringArray0[0] = "P$};M9eAo!_v/t";
      stringArray0[3] = " NOT NULL";
      stringArray0[4] = "(;l0l<fy";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint2 = new DBPrimaryKeyConstraint(defaultDBTable0, "T6E9]B`4K{.B}4", true, (String[]) null);
      dBPrimaryKeyConstraint2.setDoc("zR9&wyef1@VbOi:");
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint3 = new DBPrimaryKeyConstraint(defaultDBTable0, "2[qR", true, (String[]) null);
      dBPrimaryKeyConstraint3.setDoc("ai=: DUQS~q");
      String string0 = dBPrimaryKeyConstraint3.toString();
      assertEquals("CONSTRAINT 2[qR PRIMARY KEY ()", string0);
      
      NameSpec nameSpec0 = NameSpec.ALWAYS;
      SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint1, nameSpec0);
      NameSpec nameSpec1 = NameSpec.NEVER;
      StringBuilder stringBuilder0 = SQLUtil.createConstraintSpecBuilder(dBPrimaryKeyConstraint1, nameSpec1);
      assertEquals("", stringBuilder0.toString());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.6969987794394545
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("T=%Ts)a2H");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("T=%Ts)a2H", dBSchema0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "T=%Ts)a2H";
      stringArray0[1] = "T=%Ts)a2H";
      stringArray0[2] = "T=%Ts)a2H";
      stringArray0[3] = "T=%Ts)a2H";
      stringArray0[4] = "T=%Ts)a2H";
      stringArray0[5] = "T=%Ts)a2H";
      DBForeignKeyConstraint dBForeignKeyConstraint0 = new DBForeignKeyConstraint("T=%Ts)a2H", true, defaultDBTable0, stringArray0, defaultDBTable0, stringArray0);
      NameSpec nameSpec0 = NameSpec.NEVER;
      String string0 = SQLUtil.fkSpec(dBForeignKeyConstraint0, nameSpec0);
      assertEquals("FOREIGN KEY (T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H) REFERENCES T=%Ts)a2H(T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H, T=%Ts)a2H)", string0);
  }

  /**
  //Test case number: 95
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "Bf(A8m");
      jdbc4SQLXML0.getCharacterStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Bf(A8m");
      StringBuilder stringBuilder0 = new StringBuilder("FOREIGN KEY ");
      StringBuilder stringBuilder1 = SQLUtil.addRequiredCondition("", stringBuilder0);
      // Undeclared exception!
      try { 
        stringBuilder1.insert(600, '<');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        SQLUtil.addRequiredCondition("select", (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 97
  /*Coverage entropy=0.9946571675310574
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SQLUtil.removeComments("update");
      SQLUtil sQLUtil0 = new SQLUtil();
      String string0 = SQLUtil.normalize("update", true);
      assertEquals("update", string0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=2.641269639859855
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Boolean boolean0 = Boolean.FALSE;
      SQLUtil.isDML("select into@7!vgwu5");
      SQLUtil.removeComments("K2nkJ:'xnF<OVem[");
      System.setCurrentTimeMillis(2520L);
      String string0 = SQLUtil.substituteMarkers("-(EvsLrq=*a:?6p3&Gn", "-(EvsLrq=*a:?6p3&Gn", "K2nkJ:'xnF<OVem[");
      assertEquals("'K2nkJ:'xnF<OVem['", string0);
      
      Boolean boolean1 = SQLUtil.mutatesDataOrStructure("delete");
      assertTrue(boolean1);
      assertNotNull(boolean1);
      
      boolean boolean2 = SQLUtil.isQuery("create materialized viewclobreleaselocator");
      assertFalse(boolean2);
  }

  /**
  //Test case number: 99
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "Bf(A8m");
      Reader reader0 = jdbc4SQLXML0.getCharacterStream();
      reader0.mark(787);
      String[] stringArray0 = new String[0];
      String string0 = SQLUtil.renderColumnListWithTableName("Bf(A8m", stringArray0);
      assertEquals("", string0);
  }

  /**
  //Test case number: 100
  /*Coverage entropy=2.54216118242215
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String[] stringArray0 = new String[4];
      DefaultDBTable defaultDBTable0 = new DefaultDBTable(stringArray0[0]);
      NetworkHandling.sendDataOnTcp((EvoSuiteLocalAddress) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "!pf7,3^zuI9-A(/ga");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":J/~ k");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SQLUtil.mutatesDataOrStructure("*/");
      SQLUtil.isQuery(" REFERENCES ");
      System.setCurrentTimeMillis((byte)32);
      SQLUtil.mutatesDataOrStructure("create unique index");
      Integer integer0 = RawTransaction.LOCK_ESCALATE;
      // Undeclared exception!
      try { 
        SQLUtil.substituteMarkers((String) null, "alter session", integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.4
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Object object0 = new Object();
      SQLUtil.renderValue(object0);
      String string0 = SQLUtil.renderValue("xAyck#2B<");
      assertEquals("'xAyck#2B<'", string0);
  }

  /**
  //Test case number: 102
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[3] = "";
      stringArray0[3] = "";
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        SQLUtil.normalize(stringArray0[2], true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.3788419678046633
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      VersionNumber versionNumber0 = VersionNumber.valueOf("");
      DefaultDatabase defaultDatabase0 = new DefaultDatabase("uY-}+C~_", "BLOB", versionNumber0);
      DBCatalog dBCatalog0 = new DBCatalog("uY-}+C~_", defaultDatabase0);
      DBSchema dBSchema0 = new DBSchema("BLOB", dBCatalog0);
      DBPackage dBPackage0 = new DBPackage("BLOB", dBSchema0);
      SQLUtil.ownerDotComponent(dBPackage0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Object[] objectArray0 = new Object[9];
      objectArray0[0] = (Object) "";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      objectArray0[1] = (Object) null;
      objectArray0[2] = (Object) "";
      objectArray0[3] = (Object) "BLOB";
      objectArray0[4] = (Object) null;
      objectArray0[5] = (Object) defaultDatabase0;
      objectArray0[6] = (Object) dBCatalog0;
      objectArray0[7] = (Object) null;
      SQLUtil.renderColumnListWithTableName("BLOB.BLOB", stringArray0);
      objectArray0[8] = (Object) dBSchema0;
      // Undeclared exception!
      try { 
        SQLUtil.renderQuery((DBTable) null, stringArray0, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "#PI1k";
      stringArray0[1] = "#PI1k";
      stringArray0[2] = "#PI1k";
      stringArray0[3] = "#PI1k";
      stringArray0[4] = "";
      String string0 = SQLUtil.join("#PI1k", "#PI1k", stringArray0, "renameselect intowh@gt", "", stringArray0);
      assertEquals("#PI1k join renameselect intowh@gt as  on #PI1k.#PI1k = .#PI1k and #PI1k.#PI1k = .#PI1k and #PI1k.#PI1k = .#PI1k and #PI1k.#PI1k = .#PI1k and #PI1k. = .", string0);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "43X9C.U";
      stringArray0[1] = "+p4}`zI HAYjqY5#";
      stringArray0[2] = "43X9C.U";
      stringArray0[3] = "43X9C.U";
      // Undeclared exception!
      try { 
        SQLUtil.leftJoin("43X9C.U", (String[]) null, "43X9C.U", "+p4}`zI HAYjqY5#", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.810116318288409
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "zbae";
      stringArray0[1] = "zbae";
      stringArray0[2] = "zbae";
      stringArray0[3] = "zbae";
      stringArray0[4] = "zbae";
      stringArray0[5] = "zbae";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "zbae");
      String string0 = SQLUtil.innerJoin("zbae", stringArray0, "CONNECTIONPERMISSION", "[4^1LZa=[bto.iX", stringArray0);
      assertEquals("CONNECTIONPERMISSION as [4^1LZa=[bto.iX on zbae.zbae = [4^1LZa=[bto.iX.zbae and zbae.zbae = [4^1LZa=[bto.iX.zbae and zbae.zbae = [4^1LZa=[bto.iX.zbae and zbae.zbae = [4^1LZa=[bto.iX.zbae and zbae.zbae = [4^1LZa=[bto.iX.zbae and zbae.zbae = [4^1LZa=[bto.iX.zbae", string0);
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Integer integer0 = RawTransaction.SAVEPOINT_ROLLBACK;
      Jdbc4SQLXML jdbc4SQLXML0 = new Jdbc4SQLXML((BaseConnection) null, "wi\"");
      Jdbc4SQLXML jdbc4SQLXML1 = new Jdbc4SQLXML((BaseConnection) null, "B(A8m");
      Reader reader0 = jdbc4SQLXML1.getCharacterStream();
      char[] charArray0 = new char[4];
      charArray0[0] = 'j';
      charArray0[1] = '6';
      charArray0[2] = 'u';
      charArray0[3] = 'n';
      reader0.read(charArray0);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(reader0);
      // Undeclared exception!
      try { 
        SQLUtil.isDML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }
}
