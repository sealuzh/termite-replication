/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 11 21:50:46 GMT 2020
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.net.URI;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.245035274126178
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1942);
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4095);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      pipedInputStream0.connect(pipedOutputStream0);
      JavaCharStream javaCharStream1 = new JavaCharStream(pipedInputStream0, 1630, 519, 11);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader1);
      javaCharStream2.prevCharIsCR = false;
      javaCharStream0.AdjustBuffSize();
      char char0 = javaCharStream0.ReadByte();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('Q', char0);
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.bufsize = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JavaCharStream.hexval('4');
      int int0 = (-1272);
      CharBuffer charBuffer0 = CharBuffer.allocate(558);
      // Undeclared exception!
      try { 
        charBuffer0.charAt((-29));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.backup(91);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -90
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.3792922544726758
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream1.markSupported();
      byteArray0[0] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (int) (byte) (-45), (int) (byte) (-45));
      sequenceInputStream1.markSupported();
      sequenceInputStream1.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      javaCharStream0.adjustBeginLineColumn((-2049), 4059);
      javaCharStream0.getBeginLine();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, (-1), (int) (byte) (-45), (-3354));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.0278182748890377
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader0.reset();
      stringReader2.reset();
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1908, 1908, 1908);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getColumn();
      assertEquals(1908, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Reader reader0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.bufsize = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.8891591637540217
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      char[] charArray0 = new char[1];
      javaCharStream0.backup(1);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
      
      charArray0[0] = 'S';
      javaCharStream0.buffer = charArray0;
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      CharBuffer.allocate(1);
      javaCharStream0.getEndLine();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 8
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Reader reader0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      int int0 = 92;
      javaCharStream0.bufpos = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.column = (-799);
      int int0 = (-2877);
      javaCharStream0.inBuf = (-3633);
      int[] intArray0 = new int[0];
      javaCharStream0.backup((-2877));
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.inBuf = 1754;
      javaCharStream0.bufpos = (-2877);
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 11
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      char[] charArray0 = new char[6];
      charArray0[0] = 'F';
      charArray0[1] = '/';
      charArray0[2] = 'd';
      charArray0[3] = ')';
      charArray0[4] = '[';
      charArray0[5] = 'l';
      stringReader0.read(charArray0);
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.1738965505262752
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream.hexval('0');
      try { 
        MockURI.URI("", (String) null, "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader(" ,QQ>Mu");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 94, 94);
      char[] charArray0 = new char[3];
      charArray0[0] = 'U';
      charArray0[1] = '-';
      charArray0[2] = 'Q';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)38;
      byteArray0[1] = (byte) (-62);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      javaCharStream0.nextCharBuf = charArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('6');
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      String string0 = "7hpzH{VTCvgKR ELC";
      try { 
        MockURI.URI("", "", "7hpzH{VTCvgKR ELC");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#7hpzH%7BVTCvgKR%20ELC
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.8943424657943444
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsLF = true;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-1), (-733));
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(0, 0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.3030924037617193
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream1.markSupported();
      byteArray0[0] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (int) (byte) (-45), (int) (byte) (-45));
      sequenceInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      javaCharStream0.adjustBeginLineColumn(0, (-243));
      int int0 = javaCharStream0.getBeginColumn();
      assertEquals((-243), int0);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-1), 2514);
      javaCharStream0.tokenBegin = 73;
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("7r&V8okQ");
      JavaCharStream.hexval('C');
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      int int0 = 75;
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((char[]) null, 12, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream.hexval('b');
      try { 
        MockURI.URI("", "fQ", "%KlDIo");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :fQ#%25KlDIo
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char char0 = 'V';
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      StringReader stringReader0 = new StringReader("");
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      int int0 = 0;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.tokenBegin = 92;
      javaCharStream0.backup(2);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=0.8675632284814612
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.prevCharIsCR = true;
      int[] intArray0 = new int[7];
      intArray0[0] = (-733);
      intArray0[1] = (-1);
      intArray0[2] = (-733);
      intArray0[3] = (-733);
      intArray0[4] = (-1);
      intArray0[5] = (-733);
      intArray0[6] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1), (-733));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QWT7");
      StringReader stringReader1 = new StringReader("$$");
      stringReader1.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2177, 1, 63);
      javaCharStream0.ReInit((Reader) stringReader1);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.bufsize = 92;
      javaCharStream0.tokenBegin = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 29
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a(S;Rp$.HwcOef");
      char char0 = '5';
      JavaCharStream.hexval('5');
      int int0 = (-4794);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "a(S;Rp$.HwcOef", 1, (-4794));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3147, 3147, 1484);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 3, 1);
      javaCharStream0.backup(616);
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4083, 4092);
      javaCharStream0.BeginToken();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      javaCharStream0.getBeginColumn();
      int int0 = javaCharStream0.getLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals(4083, int0);
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0L);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)77;
      byteArray0[1] = (byte)57;
      byteArray0[2] = (byte)66;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 11, 6, 11);
      javaCharStream0.maxNextCharInd = (-957);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=1.6290407622471204
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      String string0 = " colu2mn ";
      StringReader stringReader0 = new StringReader(" colu2mn ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      char[] charArray0 = new char[7];
      charArray0[0] = 'U';
      charArray0[1] = ' ';
      javaCharStream0.bufpos = (-5085);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -5084
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      char char0 = 'W';
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.242453324894
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.Done();
      javaCharStream0.column = (-1);
      javaCharStream0.prevCharIsCR = false;
      int int0 = (-733);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1), (-733));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.297295830625819
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = (-6);
      stringReader0.reset();
      javaCharStream0.maxNextCharInd = 780;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-6), (-6));
      javaCharStream0.GetImage();
      stringReader0.ready();
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
  }

  /**
  //Test case number: 41
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = new StringReader("");
      // Undeclared exception!
      try { 
        stringReader0.read((CharBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 43
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      JavaCharStream.hexval('B');
      StringReader stringReader0 = new StringReader("$");
      // Undeclared exception!
      try { 
        stringReader0.read((CharBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.098147389135067
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.backup(0);
      javaCharStream0.GetImage();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.351783994289646
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.inBuf = 58;
      javaCharStream0.nextCharInd = 1;
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(92, 488);
      int int0 = javaCharStream0.getBeginLine();
      assertEquals(93, int0);
  }

  /**
  //Test case number: 46
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char char0 = 'f';
      JavaCharStream.hexval('f');
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      // Undeclared exception!
      try { 
        charBuffer0.charAt((-29));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  /**
  //Test case number: 47
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JavaCharStream.hexval('F');
      char[] charArray0 = new char[6];
      charArray0[1] = 'F';
      charArray0[2] = 'F';
      charArray0[3] = 'F';
      charArray0[4] = 'F';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 0, 15);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StringReader stringReader0 = new StringReader(",Fo1Gahf4OE0>");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 434, 434, 60);
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader(".");
      stringReader1.read();
      javaCharStream0.Done();
      stringReader1.reset();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      JavaCharStream.hexval('D');
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 52
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0735428464085233
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a(S;Rp$.HwcOef");
      int int0 = (-1779);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1779), (-1779));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.tokenBegin = 8;
      javaCharStream0.adjustBeginLineColumn((-1779), (-1779));
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JavaCharStream.hexval('e');
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      stringReader0.markSupported();
      char[] charArray0 = new char[8];
      charArray0[0] = '1';
      charArray0[1] = 'e';
      charArray0[2] = '<';
      charArray0[3] = '<';
      charArray0[4] = 'e';
      charArray0[5] = 'e';
      charArray0[6] = 'e';
      charArray0[7] = 'D';
      int int0 = 101;
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 101, 82);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.8224566865052352
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      char[] charArray0 = new char[1];
      javaCharStream0.GetImage();
      charArray0[0] = 'S';
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-1), 92, 92);
      JavaCharStream javaCharStream2 = new JavaCharStream(stringReader0, 12, 12, 12);
      javaCharStream2.GetImage();
      javaCharStream1.BeginToken();
      javaCharStream2.GetImage();
      javaCharStream1.ExpandBuff(false);
      JavaCharStream javaCharStream3 = null;
      try {
        javaCharStream3 = new JavaCharStream((InputStream) null, 92, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader1.reset();
      stringReader0.reset();
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1908, 3, 1);
      StringReader stringReader4 = new StringReader("");
      StringReader stringReader5 = new StringReader("Invalid escape character at line ");
      javaCharStream0.ReInit((Reader) stringReader5, 8, 78, 3);
      javaCharStream0.GetSuffix(3);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      char char0 = '_';
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.2868726303980162
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[3] = 1;
      char[] charArray0 = new char[7];
      charArray0[0] = 'q';
      charArray0[1] = 'G';
      charArray0[2] = '{';
      StringReader stringReader0 = new StringReader("1XT=");
      stringReader0.skip((-1L));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1654, 1, 1654);
      javaCharStream0.readChar();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader1 = new StringReader("1XT=");
      StringReader stringReader2 = new StringReader("?/");
      StringReader stringReader3 = new StringReader("?/");
      assertFalse(stringReader3.equals((Object)stringReader1));
  }

  /**
  //Test case number: 60
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape char&cter at line ");
      String string0 = "\\JuxZuZ/hm^h+6.FuSw";
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      int int0 = 1;
      int[] intArray0 = new int[5];
      intArray0[0] = 1;
      char[] charArray0 = new char[7];
      JavaCharStream.hexval('A');
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      // Undeclared exception!
      try { 
        charBuffer0.charAt((byte) (-22));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=2.260233853174675
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1);
      javaCharStream0.bufpos = 1783;
      javaCharStream0.backup(1783);
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      stringReader0.markSupported();
      javaCharStream0.ExpandBuff(true);
      StringReader stringReader1 = new StringReader("");
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.readChar();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 1, 3, 4097);
      javaCharStream1.GetImage();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.GetSuffix(3573);
      javaCharStream0.ReInit((InputStream) sequenceInputStream0, 100, 90, (-2091));
      javaCharStream0.inputStream = null;
      try { 
        javaCharStream1.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.8803036188308164
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = (-1);
      javaCharStream0.maxNextCharInd = 780;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(12, 12);
      char[] charArray0 = new char[0];
      stringReader0.read(charArray0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.getBeginColumn());
      
      javaCharStream0.BeginToken();
      javaCharStream0.GetSuffix(12);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      JavaCharStream.hexval('E');
      String string0 = null;
      try { 
        MockURI.URI("", "", (String) null);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[6];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = 'J';
      charArray0[3] = '$';
      charArray0[4] = '.';
      charArray0[5] = 'S';
      stringReader0.read(charArray0);
      StringReader stringReader1 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader1, 1886, 9, 2408);
      stringReader0.read();
      StringReader stringReader2 = new StringReader("M`RZj(]Wnt`");
      StringReader stringReader3 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader1, 15, 15, 4096);
      javaCharStream1.ReInit((Reader) stringReader1, (-3242), 9, 4096);
      assertEquals((-1), javaCharStream1.bufpos);
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.991509361356614
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader1.reset();
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1908, 2940, 1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.UpdateLineColumn('\\');
      assertEquals(1, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream.hexval('1');
      char[] charArray0 = new char[6];
      charArray0[0] = '1';
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 1, 75);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("$$");
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.0949461065863306
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = (-1);
      javaCharStream0.maxNextCharInd = 780;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.FillBuff();
      URI uRI0 = MockURI.aFTPURI;
      MockURI.resolve(uRI0, uRI0);
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      int int0 = javaCharStream0.getEndColumn();
      assertEquals(4096, javaCharStream0.bufpos);
      assertEquals(0, int0);
  }

  /**
  //Test case number: 71
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JavaCharStream.hexval('c');
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        MockURI.URI("y(am6iOm=%c8S$a6#B", "", "P)*oie,LN]");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in fragment at index 19: y(am6iOm=%c8S$a6#B:#P)*oie,LN]
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char char0 = 'X';
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.7494938253936618
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("ZVoU\"bU^a$N");
      stringReader0.reset();
      stringReader0.reset();
      stringReader0.skip(1L);
      StringReader stringReader1 = new StringReader("ZVoU\"bU^a$N");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.getLine();
      char char0 = javaCharStream0.readChar();
      assertEquals(1, javaCharStream0.bufpos);
      assertEquals('o', char0);
  }

  /**
  //Test case number: 78
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      JavaCharStream.hexval('a');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-11);
      try { 
        MockURI.URI("", "", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 79
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      char char0 = '7';
      JavaCharStream.hexval('7');
      char[] charArray0 = new char[3];
      charArray0[0] = '7';
      charArray0[1] = '7';
      char char1 = 'y';
      charArray0[2] = 'y';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = 2;
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) charBuffer0, 2048, 2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.7328679513998633
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("JuxpuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("JuxpuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1942, (-2863));
      javaCharStream0.backup(2940);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.readChar();
      javaCharStream0.GetImage();
      assertEquals(1157, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.452694572034809
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader2, (-2), 72, 72);
      javaCharStream0.readChar();
      CharBuffer.allocate(0);
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      javaCharStream0.readChar();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      assertEquals(1, charBuffer0.remaining());
  }

  /**
  //Test case number: 82
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.9385703492306474
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = (-1);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-1), (-733));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.476104046289728
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.bufpos = (-1);
      javaCharStream0.maxNextCharInd = 780;
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = new PipedInputStream(69);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      // Undeclared exception!
      try { 
        pipedInputStream0.connect((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.7351264569629223
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = 1;
      int[] intArray0 = new int[6];
      intArray0[0] = 1;
      char[] charArray0 = new char[7];
      charArray0[0] = 'q';
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      String string0 = "xC(vLoO6y2\"Vht&{";
      StringReader stringReader0 = new StringReader("xC(vLoO6y2\"Vht&{");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0);
      javaCharStream1.Done();
      // Undeclared exception!
      try { 
        javaCharStream1.GetSuffix(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=2.070282112041274
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader1.reset();
      stringReader2.reset();
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1908, 2940, 1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('u', char0);
  }

  /**
  //Test case number: 88
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3147, 3147, 1484);
      javaCharStream0.inBuf = 1202;
      javaCharStream0.BeginToken();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6.bg`z;U b*3JHy\"+I");
      MockURI.URI((String) null, "", "6.bg`z;U b*3JHy\"+I");
      MockFile mockFile0 = new MockFile("-6vx*@(:WWx,Et", "");
  }

  /**
  //Test case number: 89
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      char char0 = '-';
      char char1 = 'X';
      char char2 = '>';
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=2.110755778083958
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StringReader stringReader0 = new StringReader("OiQ=@:N$J4jtN*Y8");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.adjustBeginLineColumn(63, (-1529));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn((-838), (-1));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-917), 306);
      javaCharStream0.getEndColumn();
      int int0 = javaCharStream0.getEndLine();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals((-917), int0);
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.0265931526538443
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = (-1);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-1), (-733));
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(12, 12);
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn((-1), (-1));
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getEndLine();
      javaCharStream0.UpdateLineColumn('.');
      assertEquals(4096, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.4270610433807247
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.maxNextCharInd = 8;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.ReadByte();
      javaCharStream0.FillBuff();
      String string0 = "Invalid escape character at line ";
      String string1 = "";
      javaCharStream0.inputStream = (Reader) stringReader0;
      try { 
        MockURI.URI("Invalid escape character at line ", "Invalid escape character at line ", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 7: Invalid escape character at line :Invalid%20escape%20character%20at%20line%20#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.3296613488547582
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      int int0 = 14;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 895, 895, 14);
      int int1 = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JavaCharStream.hexval('3');
      char[] charArray0 = new char[6];
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = '3';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (-2459), (-2459));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  /**
  //Test case number: 96
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = JavaCharStream.hexval('d');
      assertEquals(13, int0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.9633815843099565
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream1.markSupported();
      byteArray0[0] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (int) (byte) (-45), (int) (byte) (-45));
      StringReader stringReader0 = new StringReader("0L");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(false);
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = "Invalid escape character at line ";
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      javaCharStream0.ReadByte();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      try { 
        JavaCharStream.hexval('j');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 101
  /*Coverage entropy=0.6931471805599453
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.GetImage();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 102
  /*Coverage entropy=1.4941751382893085
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 4085, (-5));
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 103
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[0];
      sequenceInputStream1.read(byteArray0, (-500), (-1596));
      byte[] byteArray1 = new byte[1];
      sequenceInputStream1.markSupported();
      byteArray1[0] = (byte) (-25);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      sequenceInputStream1.skip(0L);
      javaCharStream0.GetImage();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q-x");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 85, 85, 85);
      StringReader stringReader1 = new StringReader("q-x");
      javaCharStream0.ReInit((Reader) stringReader1, 85, 74);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 105
  /*Coverage entropy=0.5623351446188083
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ZVoU\"bU^a$N");
      StringReader stringReader1 = new StringReader(" column ");
      stringReader0.reset();
      stringReader1.reset();
      stringReader0.reset();
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 82, 1908);
      StringReader stringReader2 = new StringReader("ZVoU\"bU^a$N");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)79;
      byteArray0[4] = (byte) (-117);
      byteArray0[5] = (byte) (-33);
      byteArray0[6] = (byte)10;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader2, 82, 324, (-2696));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=0.8369882167858358
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-161), (-161));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('a');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(78);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 2288, (-478), 0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 108
  /*Coverage entropy=2.099545396122409
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      stringReader0.markSupported();
      StringReader stringReader1 = new StringReader("");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader1.reset();
      stringReader2.reset();
      stringReader2.reset();
      StringReader stringReader3 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1908, 2940, 1);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.adjustBeginLineColumn(4059, 1535);
      assertEquals(1535, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1, 1, 1);
      javaCharStream0.backup((-3408));
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.4976864074866398
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("Invalid escape character at line ");
      stringReader1.markSupported();
      stringReader0.markSupported();
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.readChar();
      javaCharStream0.readChar();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      StringReader stringReader2 = new StringReader("Invalid escape character at line ");
      StringReader stringReader3 = new StringReader("Invalid escape character at line ");
      StringReader stringReader4 = new StringReader("Invalid escape character at line ");
      assertFalse(stringReader4.equals((Object)stringReader0));
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.5498260458782016
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 3147, 3147, 92);
      javaCharStream0.inBuf = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 112
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.bufsize = 92;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte)84;
      sequenceInputStream0.read(byteArray0, 92, (-1));
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 113
  /*Coverage entropy=0.8855741515766717
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream1.markSupported();
      byteArray0[0] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (int) (byte) (-45), (int) (byte) (-45));
      Enumeration<BufferedInputStream> enumeration2 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration2).hasMoreElements();
      SequenceInputStream sequenceInputStream2 = new SequenceInputStream(enumeration2);
      sequenceInputStream2.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      javaCharStream0.adjustBeginLineColumn(2942, 747);
      assertEquals(747, javaCharStream0.getBeginColumn());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-1526), (-1526));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.GetSuffix((-926));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 115
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)67;
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-99);
      byteArray0[6] = (byte) (-32);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 83, (-1238));
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 10, 73);
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.2868726303980162
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QW7");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 5, 9, 9);
      javaCharStream0.readChar();
      CharBuffer.allocate(9);
      String string0 = "^50ho8>@1L\"";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      try { 
        MockURI.URI("IFp)4\"#Vh:5l@SS#]", "^50ho8>@1L\"", "^50ho8>@1L\"");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in path at index 5: IFp)4\"#Vh:5l@SS#]:%5E50h%7Fo8%3E@1L%22#%5E50h%7Fo8%3E@1L%22
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 118
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)80;
      stringReader0.markSupported();
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte) (-106);
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte)30;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-113);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      stringReader0.markSupported();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte) (-106);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
      
      char[] charArray0 = javaCharStream0.GetSuffix((byte)8);
      assertEquals(8, charArray0.length);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CharBuffer charBuffer0 = CharBuffer.allocate(96);
      stringReader0.read(charBuffer0);
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 122
  /*Coverage entropy=2.1182723177413956
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      StringReader stringReader1 = new StringReader("Jux+ZuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("Jux+ZuZ/hm^h+6.FuSw");
      stringReader2.reset();
      stringReader0.reset();
      stringReader2.reset();
      stringReader0.reset();
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1908, 1908, 1908);
      javaCharStream0.GetImage();
      javaCharStream0.BeginToken();
      javaCharStream0.GetImage();
      javaCharStream0.ExpandBuff(true);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getLine();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 123
  /*Coverage entropy=1.414175464056979
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.column = (-1);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn((-1), (-733));
      javaCharStream0.maxNextCharInd = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  /**
  //Test case number: 124
  /*Coverage entropy=1.6957425341696346
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      int int0 = 92;
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.15374194270109
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      Enumeration<InputStream> enumeration1 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      sequenceInputStream1.markSupported();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-45);
      byteArray0[1] = (byte) (-45);
      byteArray0[2] = (byte) (-45);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte) (-45);
      byteArray0[5] = (byte) (-45);
      byteArray0[6] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (-822), 56);
      sequenceInputStream0.markSupported();
      JavaCharStream javaCharStream1 = new JavaCharStream(sequenceInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((byte) (-45), (byte) (-45));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 126
  /*Coverage entropy=0.9502705392332347
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StringReader stringReader0 = new StringReader("a(S;Rp$.HwcOef");
      int int0 = (-1779);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1779), (-1779));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.prevCharIsLF = false;
      javaCharStream0.tokenBegin = (-1);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn((-1779), (-1779));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 127
  /*Coverage entropy=0.6001660731596457
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      String string0 = "Invalid escape character at line ";
      StringReader stringReader0 = new StringReader("Invalid escape character at line ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Invalid escape character at line ");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 70, 2314);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('C');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 128
  /*Coverage entropy=0.6365141682948128
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape char&cter at line ");
      StringReader stringReader1 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader0.reset();
      stringReader2.reset();
      stringReader0.reset();
      char[] charArray0 = new char[6];
      charArray0[0] = '&';
      charArray0[1] = '$';
      charArray0[2] = 'z';
      charArray0[3] = 'J';
      charArray0[4] = 'L';
      charArray0[5] = 'S';
      stringReader2.read(charArray0);
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1908, 3, 1886);
      stringReader3.read();
      StringReader stringReader4 = new StringReader("2Ih5:y)6");
      StringReader stringReader5 = new StringReader("");
      stringReader3.close();
      javaCharStream0.ReInit((Reader) stringReader2, 3, 915, 12);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.0397207708399179
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      javaCharStream0.bufsize = 92;
      javaCharStream0.tokenBegin = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 131
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      javaCharStream0.ReadByte();
      try { 
        MockURI.URI(".", "dU#22I]b[`5C1]", "t mluj65Y");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: .:dU%2322I]b[%605C1]#t%20mluj65Y
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream1.markSupported();
      byteArray0[0] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (int) (byte) (-45), (int) (byte) (-45));
      sequenceInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 133
  /*Coverage entropy=0.3927428962669466
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, (-1), 0, 2956);
      javaCharStream0.column = (-1);
      JavaCharStream.hexval('2');
      try { 
        MockURI.URI(".", "QL8QolB2PWyI{R,", "");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Illegal character in scheme name at index 0: .:QL8QolB2PWyI%7F%7BR,#
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.5607104090414063
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)3, (byte)3, 4075);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      Enumeration<BufferedInputStream> enumeration1 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration1).hasMoreElements();
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(enumeration1);
      byte[] byteArray0 = new byte[1];
      sequenceInputStream1.close();
      sequenceInputStream1.markSupported();
      byteArray0[0] = (byte) (-45);
      sequenceInputStream1.read(byteArray0, (int) (byte) (-45), (int) (byte) (-45));
      sequenceInputStream1.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream1);
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 0, (-758), 0);
      javaCharStream0.Done();
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 1920, (-1586), (-1586));
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 138
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte) (-98);
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)25;
      byteArray0[7] = (byte)68;
      byteArray0[8] = (byte)73;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)25, (byte)25);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)1, 12, (byte)70);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.4750763110546947
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" column ");
      stringReader0.markSupported();
      stringReader0.skip((-219L));
      char[] charArray0 = new char[4];
      charArray0[0] = '(';
      charArray0[1] = '[';
      charArray0[2] = 'U';
      charArray0[3] = '8';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 0, 2507);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 2507);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, 2507, 0);
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.3862943611198906
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, (-1526), (-1526));
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 141
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = (-1272);
      int int1 = 558;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, (-5293), (-229), 558);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.3321790402101223
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1290), (-1), (-1290));
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.getBeginLine());
  }

  /**
  //Test case number: 143
  /*Coverage entropy=1.7351264569629226
  */
  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      int int0 = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 144
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = 2833;
      int int1 = 528;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0, 2833);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 3533, (-107), 2833);
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 145
  /*Coverage entropy=1.2130075659799042
  */
  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      int int0 = 92;
      javaCharStream0.bufsize = 92;
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 146
  /*Coverage entropy=1.0986122886681096
  */
  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StringReader stringReader0 = new StringReader(":ngly\"1$XT_");
      char[] charArray0 = new char[7];
      charArray0[0] = 'R';
      charArray0[1] = 'T';
      charArray0[2] = 'A';
      charArray0[3] = 'a';
      charArray0[4] = '4';
      charArray0[5] = '7';
      charArray0[6] = '>';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.getBeginColumn();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  /**
  //Test case number: 147
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 148
  /*Coverage entropy=0.639031859650177
  */
  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Invalid escape char&cter at line ");
      StringReader stringReader1 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      StringReader stringReader2 = new StringReader("JuxZuZ/hm^h+6.FuSw");
      stringReader0.reset();
      stringReader2.reset();
      stringReader0.reset();
      char[] charArray0 = new char[6];
      charArray0[0] = 'Y';
      charArray0[1] = '$';
      charArray0[2] = 'Y';
      charArray0[3] = 'J';
      charArray0[4] = 'L';
      charArray0[5] = 'S';
      stringReader2.read(charArray0);
      StringReader stringReader3 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader3, 1908, 3, 1886);
      stringReader3.read();
      StringReader stringReader4 = new StringReader("2Ih5:y)6");
      StringReader stringReader5 = new StringReader("");
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader2, 61, (-1608));
      javaCharStream1.adjustBeginLineColumn(84, 61);
      assertEquals(85, javaCharStream1.getBeginLine());
  }

  /**
  //Test case number: 149
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int int0 = (-1272);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream(stringReader0, (-1272), (-1272), (-1272));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 150
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      char char0 = '<';
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  /**
  //Test case number: 151
  /*Coverage entropy=-0.0
  */
  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      JavaCharStream.hexval('3');
      char[] charArray0 = new char[6];
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = '3';
      CharBuffer.wrap(charArray0, 0, 3);
      URI uRI0 = MockURI.URI("u,7");
      URI uRI1 = MockURI.aHttpURI;
      URI uRI2 = MockURI.resolve(uRI1, uRI0);
      URI uRI3 = MockURI.aFileURI;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI scheme is not \"file\"
         //
         verifyException("java.io.File", e);
      }
  }
}
