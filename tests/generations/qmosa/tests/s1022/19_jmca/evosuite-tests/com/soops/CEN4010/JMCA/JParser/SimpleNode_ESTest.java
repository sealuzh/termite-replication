/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 06:14:52 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JJTJavaParserState;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import com.soops.CEN4010.JMCA.JParser.JavaParser;
import com.soops.CEN4010.JMCA.JParser.JavaParserTokenManager;
import com.soops.CEN4010.JMCA.JParser.Node;
import com.soops.CEN4010.JMCA.JParser.SimpleNode;
import com.soops.CEN4010.JMCA.JParser.Token;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.nio.CharBuffer;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;
import java.util.function.Function;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleNode_ESTest extends SimpleNode_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.301608716407634
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "w");
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node[] nodeArray0 = new Node[6];
      Node node0 = simpleNode0.parent;
      simpleNode0.parent = null;
      nodeArray0[0] = (Node) simpleNode0;
      nodeArray0[1] = (Node) simpleNode0;
      nodeArray0[2] = (Node) simpleNode0;
      nodeArray0[3] = (Node) simpleNode0;
      nodeArray0[4] = (Node) simpleNode0;
      nodeArray0[5] = (Node) simpleNode0;
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetNumChildren();
      simpleNode0.parent = nodeArray0[0];
      simpleNode0.jjtSetParent(nodeArray0[1]);
      simpleNode0.jjtGetParent();
      simpleNode0.toString();
      simpleNode0.toString("\"try\"");
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1994754928));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1994754928
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Initializer");
      SimpleNode simpleNode0 = new SimpleNode(92);
      String string0 = "hGQ@}c";
      int int0 = (-2504);
      simpleNode0.identifiers = null;
      int int1 = 0;
      simpleNode0.id = 0;
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.identifiers = null;
      StringWriter stringWriter0 = new StringWriter();
      String string0 = "?";
      // Undeclared exception!
      try { 
        simpleNode0.setIdentifier("?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=0.5788449127168476
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.clone();
      stringWriter0.flush();
      arrayList0.add("<<");
      arrayList0.add("}");
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(anyString() , anyString());
      arrayList0.sort(comparator0);
      arrayList0.add("=");
      StringWriter stringWriter1 = new StringWriter();
      stringWriter1.append((CharSequence) "=");
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      unaryOperator1.compose((Function<? super Object, ? extends String>) function2);
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      unaryOperator2.apply(">>");
      UnaryOperator.identity();
      Function<Object, String> function3 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      unaryOperator1.andThen((Function<? super String, ? extends String>) function3);
      unaryOperator3.compose((Function<? super String, ? extends String>) function2);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      UnaryOperator.identity();
      arrayList0.add(">>");
      StringBuffer stringBuffer0 = new StringBuffer(84);
      simpleNode0.dump(">20*J", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>*lshft</identifier>\n  <identifier>=</identifier>\n  <identifier>*rshft</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0783934585517456
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode0 = new SimpleNode(30);
      simpleNode0.setIdentifier(";");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) " gy=$s.S+{K'");
      StringWriter stringWriter3 = new StringWriter();
      simpleNode0.setIdentifier("ClassOrInterfaceType : ;");
      StringWriter stringWriter4 = new StringWriter();
      StringWriter stringWriter5 = new StringWriter();
      StringWriter stringWriter6 = stringWriter1.append((CharSequence) "%");
      StringWriter stringWriter7 = stringWriter6.append('Z');
      stringWriter7.append((CharSequence) " gy=$s.S+{K'");
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "ClassOrInterfaceType : ;");
      stringWriter6.append((CharSequence) " gy=$s.S+{K'");
      stringWriter6.append((CharSequence) "u");
      stringWriter2.append('Z');
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0);
      stringWriter0.append((CharSequence) charBuffer0);
      simpleNode0.dump("TcIswLR5%", stringWriter6);
      assertEquals(" gy=$s.S+{K'%Z gy=$s.S+{K' gy=$s.S+{K'uZ<ClassOrInterfaceType>\n  <identifier>ClassOrInterfaceType : ;</identifier>\n</ClassOrInterfaceType>\n", stringWriter6.toString());
      assertEquals(" gy=$s.S+{K'%Z gy=$s.S+{K' gy=$s.S+{K'uZ<ClassOrInterfaceType>\n  <identifier>ClassOrInterfaceType : ;</identifier>\n</ClassOrInterfaceType>\n", stringWriter1.toString());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=0.6134788277392043
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("&", stringWriter0);
      UnaryOperator.identity();
      stringWriter0.close();
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      stringWriter0.close();
      arrayList1.add("&");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter0.append((CharSequence) "W<K@K1M'7Aa K");
      stringWriter1.flush();
      stringWriter1.write((-1106101594));
      stringWriter2.write("W<K@K1M'7Aa K");
      simpleNode0.dump("<", stringWriter2);
      stringWriter2.append((CharSequence) "ForInit");
      int int0 = 1077;
      StringWriter stringWriter3 = null;
      try {
        stringWriter3 = new StringWriter((-1106101594));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  /**
  //Test case number: 6
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SimpleNode simpleNode0 = new SimpleNode(84);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.listIterator();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      arrayList0.add("&&");
      arrayList0.add("=");
      arrayList0.add("w");
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.append((CharSequence) "w");
      stringWriter0.append('A');
      simpleNode0.dump("w", stringWriter0);
      assertEquals("wA<ForInit>\n  <identifier>*amp</identifier>\n  <identifier>=</identifier>\n  <identifier>w</identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=0.5914440819577174
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 84;
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.ensureCapacity(0);
      StringWriter stringWriter1 = stringWriter0.append(' ');
      UnaryOperator.identity();
      arrayList0.add(">");
      arrayList0.add("Rg('H=[N7lgr66=");
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = stringWriter1.append((CharSequence) ">");
      char char0 = 'V';
      StringWriter stringWriter4 = stringWriter2.append((CharSequence) ">");
      char[] charArray0 = new char[0];
      stringWriter4.write(charArray0);
      simpleNode0.dump(">=", stringWriter1);
      StringWriter stringWriter5 = stringWriter3.append('V');
      // Undeclared exception!
      try { 
        stringWriter5.append((CharSequence) ">", 84, (-4225));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      SimpleNode simpleNode0 = new SimpleNode(1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6?[NdCIE!!b/:!i=(7");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.listIterator();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      arrayList0.add("6?[NdCIE!!b/:!i=(7");
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.clear();
      ArrayList<String> arrayList2 = new ArrayList<String>();
      arrayList1.add(">=");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("<=", stringWriter0);
      assertEquals("<PackageDeclaration>\n  <identifier>*ge</identifier>\n</PackageDeclaration>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=0.7767701612564368
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(84);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = (-4225);
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList1.ensureCapacity((-4225));
      arrayList1.add("{");
      String string0 = "436Btb;";
      arrayList0.add((String) null);
      int int1 = 10;
      arrayList0.ensureCapacity(10);
      char[] charArray0 = new char[1];
      charArray0[0] = '<';
      stringWriter0.write(charArray0);
      char char0 = 'V';
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) "{");
      stringWriter1.flush();
      stringWriter1.append((CharSequence) null);
      stringWriter0.write(charArray0);
      // Undeclared exception!
      try { 
        simpleNode0.dump("@", stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  /**
  //Test case number: 10
  /*Coverage entropy=0.5849073991677757
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(37);
      StringWriter stringWriter0 = new StringWriter(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.clone();
      stringWriter0.flush();
      arrayList0.add("<<");
      arrayList0.add("<");
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      arrayList0.sort(comparator0);
      Comparator<String> comparator1 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.add(",_{kn");
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append((CharSequence) ",_{kn");
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) ",_{kn");
      char[] charArray0 = new char[6];
      charArray0[0] = 'V';
      charArray0[1] = 'V';
      charArray0[2] = 'V';
      charArray0[3] = 'V';
      charArray0[4] = 'V';
      charArray0[5] = 'V';
      stringWriter0.write(charArray0);
      simpleNode0.dump(",_{kn", stringWriter2);
      StringWriter stringWriter4 = stringWriter3.append('V');
      StringWriter stringWriter5 = stringWriter4.append((CharSequence) ">=");
      stringWriter5.append('V');
      StringWriter stringWriter6 = new StringWriter(37);
      assertFalse(stringWriter6.equals((Object)stringWriter3));
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7091199915606667
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = 0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      arrayList0.add("<");
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtAddChild((Node) null, 0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      simpleNode0.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtAddChild((Node) null, (-868));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -868
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.2695599555247057
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(28);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      SimpleNode simpleNode1 = new SimpleNode((-1108452621));
      simpleNode0.jjtSetParent(simpleNode1);
      Node node0 = simpleNode0.jjtGetParent();
      simpleNode0.jjtAddChild(node0, 28);
      simpleNode0.toString();
      simpleNode0.jjtAddChild(node0, 28);
      simpleNode0.toString();
      simpleNode0.jjtAddChild(node0, 10);
      simpleNode0.jjtAddChild(simpleNode1, 28);
      simpleNode0.jjtGetNumChildren();
      simpleNode0.toString("Type");
      Node[] nodeArray0 = new Node[0];
      simpleNode0.children = nodeArray0;
      simpleNode0.jjtGetParent();
      simpleNode0.jjtGetParent();
      simpleNode0.dump("Type", (Writer) null);
      simpleNode0.dump("TypeType", (Writer) null);
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(10);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=2.145722802994512
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = simpleNode0.parent;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, (-485485111));
      javaParserTokenManager0.jjnewStateCnt = (-485485111);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      javaParserTokenManager0.TokenLexicalActions((Token) null);
      arrayList0.add("</identifier>");
      simpleNode0.jjtAddChild((Node) null, 102);
      simpleNode0.toString();
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      StringReader stringReader0 = new StringReader("VariableDeclaratorId");
      JavaParser javaParser1 = new JavaParser((String) null);
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 102);
      simpleNode2.toString();
      simpleNode0.jjtAddChild(simpleNode1, 103);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild((-485485111));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=0.955745183784261
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 104;
      SimpleNode simpleNode0 = new SimpleNode(104);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 104);
      arrayList0.add("<");
      simpleNode0.jjtAddChild(simpleNode1, 104);
      simpleNode1.jjtAddChild(simpleNode0, 104);
      ArrayList<Locale.LanguageRange> arrayList1 = new ArrayList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList1, (Collection<String>) arrayList0, locale_FilteringMode0);
      arrayList0.removeAll(list0);
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      arrayList0.sort(comparator0);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter(104);
      // Undeclared exception!
      simpleNode0.dump((String) null, stringWriter1);
  }

  /**
  //Test case number: 15
  /*Coverage entropy=0.5985152433458726
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(14);
      StringWriter stringWriter0 = new StringWriter();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      int int0 = 4428;
      stringWriter0.write(56);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String string0 = "\\w";
      arrayList0.add("<=");
      simpleNode0.dump("<=", stringWriter0);
      Function<Object, String> function0 = null;
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      // Undeclared exception!
      try { 
        unaryOperator0.compose((Function<? super Object, ?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=2.019654447440098
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SimpleNode simpleNode0 = new SimpleNode(0);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = simpleNode0.parent;
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\"throw\"");
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      JavaParser javaParser0 = new JavaParser("\"throw\"");
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      simpleNode0.jjtAddChild(simpleNode1, 0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode1.dump("RUNSIGNEDSHIFT", stringWriter0);
      simpleNode1.jjtGetNumChildren();
      SimpleNode simpleNode2 = new SimpleNode(javaParser0, 14);
      simpleNode2.dump("{ggK", stringWriter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      simpleNode0.jjtAddChild(simpleNode1, 2);
      simpleNode0.jjtGetChild(0);
      assertEquals(3, simpleNode0.jjtGetNumChildren());
      
      simpleNode2.dump("{ggK", stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=0.6200155105291458
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SimpleNode simpleNode0 = new SimpleNode(84);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.listIterator();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      arrayList0.add("");
      arrayList0.add("=");
      arrayList0.add(" : ");
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.dump("}", stringWriter0);
      simpleNode0.dump("=", stringWriter0);
      assertEquals("<ForInit>\n  <identifier>=</identifier>\n  <identifier> : </identifier>\n</ForInit>\n<ForInit>\n  <identifier>=</identifier>\n  <identifier> : </identifier>\n</ForInit>\n", stringWriter0.toString());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String string0 = ">";
      int int0 = (-3847);
      SimpleNode simpleNode0 = new SimpleNode((-3847));
      StringWriter stringWriter0 = new StringWriter();
      int int1 = (-4225);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.ensureCapacity(0);
      StringWriter stringWriter1 = stringWriter0.append(' ');
      UnaryOperator.identity();
      arrayList0.add(">");
      arrayList0.add("Rg('H=[N7lgr66=");
      StringWriter stringWriter2 = new StringWriter();
      stringWriter1.append((CharSequence) ">");
      char char0 = 'V';
      StringWriter stringWriter3 = stringWriter2.append((CharSequence) ">");
      char[] charArray0 = new char[0];
      stringWriter3.write(charArray0);
      // Undeclared exception!
      try { 
        simpleNode0.dump(">=", stringWriter1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.288112077630335
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      JavaParser javaParser0 = new JavaParser(" ");
      simpleNode0.parser = javaParser0;
      Node[] nodeArray0 = new Node[1];
      simpleNode0.children = nodeArray0;
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append((CharSequence) null, 3, 3);
      simpleNode0.dump((String) null, stringWriter1);
      JJTJavaParserState jJTJavaParserState0 = new JJTJavaParserState();
      JJTJavaParserState jJTJavaParserState1 = new JJTJavaParserState();
      JJTJavaParserState jJTJavaParserState2 = new JJTJavaParserState();
      StringReader stringReader0 = new StringReader("|c@");
      JavaParser javaParser1 = new JavaParser(stringReader0);
      JavaParser javaParser2 = new JavaParser("'Dic|uWC");
      try { 
        javaParser2.Expression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Parse error at line 1, column 0.  Encountered: <EOF>
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaParser", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2654436797543704
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/19_jmca");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      SimpleNode simpleNode0 = new SimpleNode(0);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtGetNumChildren();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SimpleNode simpleNode1 = new SimpleNode(0);
      simpleNode1.jjtGetParent();
      simpleNode0.jjtSetParent((Node) null);
      assertEquals(0, simpleNode0.jjtGetNumChildren());
      
      SimpleNode simpleNode2 = new SimpleNode(210);
      simpleNode0.jjtAddChild(simpleNode2, 0);
      Node node0 = simpleNode0.jjtGetChild(0);
      int int0 = node0.jjtGetNumChildren();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager(javaCharStream0);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (-1108));
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      simpleNode0.jjtAddChild((Node) null, 0);
      simpleNode0.jjtAddChild((Node) null, 0);
      StringReader stringReader0 = new StringReader("j9");
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuffer stringBuffer1 = new StringBuffer(stringBuffer0);
      stringBuffer0.reverse();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer2 = new StringBuffer();
      SimpleNode simpleNode0 = new SimpleNode((-932));
      // Undeclared exception!
      try { 
        simpleNode0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -932
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.085628388624577
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      SimpleNode simpleNode0 = new SimpleNode(0);
      Node node0 = simpleNode0.parent;
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("%y_IPuvp>owbB");
      arrayList0.add("zs5$n");
      JavaParserTokenManager javaParserTokenManager0 = new JavaParserTokenManager((JavaCharStream) null);
      JavaParser javaParser0 = new JavaParser(javaParserTokenManager0);
      SimpleNode simpleNode1 = new SimpleNode(javaParser0, 0);
      javaParserTokenManager0.jjmatchedKind = 0;
      arrayList0.add("<");
      simpleNode0.jjtAddChild(simpleNode1, 0);
      simpleNode1.jjtAddChild((Node) null, 0);
      arrayList0.add("<");
      javaParserTokenManager0.MoreLexicalActions();
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode2 = new SimpleNode(0);
      simpleNode2.jjtAddChild((Node) null, 0);
      simpleNode1.jjtGetNumChildren();
      simpleNode1.jjtGetChild(0);
      // Undeclared exception!
      try { 
        simpleNode1.jjtGetChild(1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(37);
      SimpleNode simpleNode0 = new SimpleNode(37);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      arrayList0.add("<");
      FileSystemHandling.shouldAllThrowIOExceptions();
      JavaParser javaParser0 = new JavaParser("sY 0TqkBqSKV2H4rgn");
      simpleNode0.parser = javaParser0;
      ArrayList<String> arrayList1 = simpleNode0.identifiers;
      arrayList0.listIterator();
      arrayList1.add("=");
      UnaryOperator<String> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator1 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator2.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.compose((Function<? super Object, ? extends String>) function1);
      unaryOperator1.apply("}");
      unaryOperator2.compose((Function<? super InputStream, ?>) function2);
      UnaryOperator.identity();
      unaryOperator1.andThen((Function<? super String, ? extends String>) unaryOperator0);
      unaryOperator0.compose((Function<? super String, ? extends String>) function2);
      ArrayList<String> arrayList2 = new ArrayList<String>();
      UnaryOperator.identity();
      arrayList1.add("rMp8aV*pN");
      StringBuffer stringBuffer0 = javaParser0.token_source.image;
      String string0 = simpleNode0.toString("ST?oW^ij(cwv@Z");
      assertEquals("ST?oW^ij(cwv@ZNameList : < : = : rMp8aV*pN", string0);
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling3 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      StringWriter stringWriter0 = new StringWriter();
      SimpleNode simpleNode0 = new SimpleNode((-668));
      // Undeclared exception!
      try { 
        simpleNode0.jjtGetChild(84);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("]j");
      stringReader0.markSupported();
      JavaParser javaParser0 = new JavaParser(stringReader0);
      SimpleNode simpleNode0 = new SimpleNode(84);
      ArrayList<String> arrayList0 = simpleNode0.identifiers;
      UnaryOperator<Object> unaryOperator0 = UnaryOperator.identity();
      UnaryOperator<Object> unaryOperator1 = UnaryOperator.identity();
      Function<Object, String> function0 = (Function<Object, String>) mock(Function.class, new ViolatedAssumptionAnswer());
      Function<Object, String> function1 = unaryOperator1.andThen((Function<? super Object, ? extends String>) function0);
      Function<Object, String> function2 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function1);
      UnaryOperator<String> unaryOperator2 = UnaryOperator.identity();
      Function<Object, String> function3 = unaryOperator2.compose((Function<? super Object, ? extends String>) function2);
      UnaryOperator<String> unaryOperator3 = UnaryOperator.identity();
      UnaryOperator<String> unaryOperator4 = UnaryOperator.identity();
      Function<Object, String> function4 = unaryOperator0.andThen((Function<? super Object, ? extends String>) function2);
      unaryOperator2.compose((Function<? super Object, ? extends String>) function4);
      unaryOperator4.apply("^kfO[t#pTIW{,.Tr|U");
      unaryOperator4.andThen((Function<? super String, ? extends String>) unaryOperator3);
      UnaryOperator<String> unaryOperator5 = UnaryOperator.identity();
      unaryOperator5.compose((Function<? super String, ? extends String>) function3);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      UnaryOperator.identity();
      StringBuffer stringBuffer0 = new StringBuffer(84);
      JavaParser javaParser1 = new JavaParser((String) null);
      Node node0 = javaParser1.currNode;
      // Undeclared exception!
      try { 
        simpleNode0.jjtAddChild((Node) null, (-1994754928));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(7);
      StringWriter stringWriter0 = new StringWriter();
      simpleNode0.jjtOpen();
      StringReader stringReader0 = new StringReader(")");
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-63);
      byteArray0[2] = (byte)22;
      byteArray0[3] = (byte) (-24);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-87);
      byteArray0[6] = (byte)95;
      byteArray0[7] = (byte)102;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaParser javaParser0 = new JavaParser(byteArrayInputStream0);
      SimpleNode simpleNode0 = new SimpleNode(javaParser0, (byte)95);
      simpleNode0.jjtClose();
      assertEquals(0, simpleNode0.jjtGetNumChildren());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(773);
      // Undeclared exception!
      try { 
        simpleNode0.toString("PN~DXX3'Ix^`");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 773
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.4427254356795167
  */
  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleNode simpleNode0 = new SimpleNode(3);
      StringBuffer stringBuffer0 = new StringBuffer();
      StringReader stringReader0 = new StringReader("SwitchLabel");
      JavaParser javaParser0 = new JavaParser(stringReader0);
      javaParser0.AndExpression();
      JavaParser javaParser1 = new JavaParser("<OCTAL_LITERAL>");
      JavaParser javaParser2 = new JavaParser(javaParser0.token_source);
      JavaParser javaParser3 = new JavaParser(stringReader0);
      JJTJavaParserState jJTJavaParserState0 = javaParser2.jjtree;
      JavaParser javaParser4 = new JavaParser(javaParser2.token_source);
      JavaParser javaParser5 = new JavaParser("_mTd0rIF");
      JavaParser javaParser6 = new JavaParser("SwitchLabel");
      JJTJavaParserState jJTJavaParserState1 = javaParser3.jjtree;
      JJTJavaParserState jJTJavaParserState2 = javaParser4.jjtree;
      JJTJavaParserState jJTJavaParserState3 = javaParser6.jjtree;
      JJTJavaParserState jJTJavaParserState4 = new JJTJavaParserState();
      JavaParser javaParser7 = new JavaParser((String) null);
      JavaParser javaParser8 = new JavaParser("");
      JJTJavaParserState jJTJavaParserState5 = javaParser5.jjtree;
      JJTJavaParserState jJTJavaParserState6 = new JJTJavaParserState();
      JJTJavaParserState jJTJavaParserState7 = new JJTJavaParserState();
      JJTJavaParserState jJTJavaParserState8 = new JJTJavaParserState();
      assertFalse(jJTJavaParserState8.equals((Object)jJTJavaParserState2));
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "6?[NdCIE!!b/:!i=(7");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("</");
      StringReader stringReader0 = new StringReader("6?[NdCIE!!b/:!i=(7");
      SimpleNode simpleNode0 = null;
      try {
        simpleNode0 = new SimpleNode((JavaParser) null, (-2102));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.SimpleNode", e);
      }
  }
}
