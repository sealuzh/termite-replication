/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 03:15:19 GMT 2019
 */

package net.sf.xbus.protocol.records;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.time.Instant;
import java.util.Date;
import java.util.Iterator;
import javax.activation.DataHandler;
import javax.xml.stream.util.EventReaderDelegate;
import net.sf.xbus.base.bytearraylist.ByteArrayList;
import net.sf.xbus.base.xbussystem.XBUSSystem;
import net.sf.xbus.protocol.records.RecordTypeMessage;
import org.apache.axis.Message;
import org.apache.axis.SOAPPart;
import org.apache.axis.attachments.AttachmentPart;
import org.apache.axis.message.MimeHeaders;
import org.apache.html.dom.HTMLDocumentImpl;
import org.apache.html.dom.HTMLTableColElementImpl;
import org.apache.xerces.dom.AttrNSImpl;
import org.apache.xerces.dom.CoreDocumentImpl;
import org.apache.xerces.dom.DeferredDocumentImpl;
import org.apache.xerces.dom.DocumentImpl;
import org.apache.xerces.dom.DocumentTypeImpl;
import org.apache.xerces.dom.ElementDefinitionImpl;
import org.apache.xerces.dom.PSVIDocumentImpl;
import org.apache.xerces.dom.PSVIElementNSImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.DocumentType;
import org.w3c.dom.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RecordTypeMessage_ESTest extends RecordTypeMessage_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      MockDate mockDate1 = new MockDate(1584, 1584, 1584, 1584, 1584);
      Integer integer0 = new Integer(1584);
      MockDate mockDate2 = new MockDate((long) integer0);
      mockDate2.getTime();
      mockDate0.after(mockDate2);
      MockDate mockDate3 = new MockDate(1584, 1584, 1584);
      MockDate mockDate4 = new MockDate();
      mockDate1.getTime();
      mockDate2.before(mockDate1);
      MockDate mockDate5 = new MockDate(1584, 1584, 1584, 1584, 1584, 1584);
      mockDate0.getTime();
      MockDate mockDate6 = new MockDate();
      mockDate5.before(mockDate0);
      MockDate.UTC(1584, 1584, 29, 1584, (-910), 29);
      mockDate5.getTime();
      mockDate0.before(mockDate6);
      MockDate.UTC(29, (-936), (-936), (-910), (-910), 7);
      mockDate2.after(mockDate5);
      mockDate2.getTime();
      MockDate.UTC(1584, 1584, 1584, 1584, 1584, 1584);
      mockDate1.after(mockDate0);
      MockDate.UTC(1584, 1584, 1584, 1584, 1584, (-8));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      mockDate0.before(mockDate1);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      MockDate mockDate7 = new MockDate(1584, (-910), (-8), (-910), (-8), 1584);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)28;
      byteArray0[2] = (byte)120;
      byteArray0[3] = (byte) (-86);
      byteArray0[4] = (byte)68;
      ByteArrayList byteArrayList1 = ByteArrayList.createByteArrayList(byteArray0, 0);
      byteArrayList0.addAll(byteArrayList1);
      MockDate.UTC(1584, 1584, (-8), 1584, 1584, (-8));
      MockDate mockDate8 = new MockDate();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      deferredDocumentImpl0.getElementsByTagName("}(/36`[|]BOgR");
      deferredDocumentImpl0.setXmlStandalone(false);
      Message message0 = new Message("}(/36`[|]BOgR", false, (String) null, "gBhnb69bieC2 7yutx-");
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl(false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "3to\")Gez", "3to\")Gez", "org.apache.axis.attachments.AttachmentsImpl");
      DocumentImpl documentImpl0 = new DocumentImpl();
      documentImpl0.load("'EN90\".uf");
      DocumentImpl documentImpl1 = new DocumentImpl(false);
      documentImpl0.abort();
      documentImpl0.getChildNodes();
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false);
      deferredDocumentImpl1.compareDocumentPosition(coreDocumentImpl0);
      DocumentImpl documentImpl2 = new DocumentImpl(false);
      deferredDocumentImpl0.setDocumentURI("V");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(documentImpl2, "application/xop+xml");
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(true);
      documentImpl2.getXmlVersion();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("org.apache.axis.attachments.AttachmentsImpl", (XBUSSystem) null, "XIzGNt3n*p31");
      recordTypeMessage0.setResponseDocument(coreDocumentImpl0, (XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      recordTypeMessage0.getResponseText();
      ByteArrayList byteArrayList0 = new ByteArrayList();
      assertEquals(0, byteArrayList0.length());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockInstant.now();
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "No 'message' attribute in <fault> named '";
      stringArray0[1] = "No 'message' attribute in <fault> named '";
      stringArray0[2] = "No 'message' attribute in <fault> named '";
      mimeHeaders0.getMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders1 = new MimeHeaders();
      mimeHeaders0.getAllHeaders();
      MimeHeaders mimeHeaders2 = new MimeHeaders();
      MimeHeaders mimeHeaders3 = new MimeHeaders();
      mimeHeaders3.getAllHeaders();
      MimeHeaders mimeHeaders4 = new MimeHeaders(mimeHeaders1);
      mimeHeaders4.getAllHeaders();
      javax.xml.soap.MimeHeaders mimeHeaders5 = new javax.xml.soap.MimeHeaders();
      MimeHeaders mimeHeaders6 = new MimeHeaders(mimeHeaders5);
      MimeHeaders mimeHeaders7 = new MimeHeaders(mimeHeaders6);
      mimeHeaders4.getAllHeaders();
      MimeHeaders mimeHeaders8 = new MimeHeaders();
      mimeHeaders6.removeHeader("No 'message' attribute in <fault> named '");
      mimeHeaders6.removeAllHeaders();
      mimeHeaders2.getMatchingHeaders(stringArray0);
      mimeHeaders4.getNonMatchingHeaders(stringArray0);
      mimeHeaders3.getHeader((String) null);
      MimeHeaders mimeHeaders9 = new MimeHeaders();
      mimeHeaders3.getAllHeaders();
      mimeHeaders7.removeHeader((String) null);
      MimeHeaders mimeHeaders10 = new MimeHeaders(mimeHeaders9);
      MimeHeaders mimeHeaders11 = new MimeHeaders(mimeHeaders3);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setRequestText((String) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl();
      AttrNSImpl attrNSImpl0 = new AttrNSImpl();
      Message message0 = new Message("}(/36`[|]BOgR", false, (String) null, "gBhnb69bieC2 7yutx-");
      SOAPPart sOAPPart0 = new SOAPPart(message0, deferredDocumentImpl0, false);
      sOAPPart0.getDoctype();
      CoreDocumentImpl coreDocumentImpl0 = new CoreDocumentImpl((DocumentType) null, false);
      DocumentTypeImpl documentTypeImpl0 = new DocumentTypeImpl(coreDocumentImpl0, "K#zw-D9T%E", "RecordTypeMessage", "org.apache.axis.attachments.AttachmentsImpl");
      DocumentTypeImpl documentTypeImpl1 = new DocumentTypeImpl(coreDocumentImpl0, "  ", "EJB", "gBhnb69bieC2 7yutx-");
      DocumentImpl documentImpl0 = new DocumentImpl(documentTypeImpl1);
      documentImpl0.getDomConfig();
      deferredDocumentImpl0.compareDocumentPosition(documentImpl0);
      DocumentImpl documentImpl1 = new DocumentImpl(false);
      coreDocumentImpl0.setDocumentURI((String) null);
      ElementDefinitionImpl elementDefinitionImpl0 = deferredDocumentImpl0.createElementDefinition("RecordTypeMessage");
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false);
      documentTypeImpl1.needsSyncChildren(false);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Document document0 = elementDefinitionImpl0.getOwnerDocument();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseDocument(document0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xerces.dom.DeferredDocumentImpl", e);
      }
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      mimeHeaders0.getAllHeaders();
      String[] stringArray0 = new String[1];
      mimeHeaders0.getMatchingHeaders(stringArray0);
      mimeHeaders0.getMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders1 = new MimeHeaders();
      MimeHeaders mimeHeaders2 = new MimeHeaders(mimeHeaders0);
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders3 = new MimeHeaders();
      mimeHeaders2.getAllHeaders();
      mimeHeaders1.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders4 = new MimeHeaders(mimeHeaders1);
      mimeHeaders2.getAllHeaders();
      mimeHeaders1.getAllHeaders();
      MimeHeaders mimeHeaders5 = new MimeHeaders();
      mimeHeaders5.removeAllHeaders();
      MimeHeaders mimeHeaders6 = new MimeHeaders(mimeHeaders0);
      MimeHeaders mimeHeaders7 = new MimeHeaders(mimeHeaders0);
      mimeHeaders7.getAllHeaders();
      mimeHeaders0.getAllHeaders();
      MimeHeaders mimeHeaders8 = new MimeHeaders();
      mimeHeaders4.removeHeader("\">Aw<.c");
      mimeHeaders4.removeAllHeaders();
      mimeHeaders4.getMatchingHeaders(stringArray0);
      mimeHeaders2.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders9 = new MimeHeaders();
      MimeHeaders mimeHeaders10 = new MimeHeaders(mimeHeaders4);
      mimeHeaders6.getAllHeaders();
      MimeHeaders mimeHeaders11 = new MimeHeaders();
      mimeHeaders3.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders12 = new MimeHeaders();
      mimeHeaders4.removeHeader("\">Aw<.c");
      MimeHeaders mimeHeaders13 = new MimeHeaders();
      MimeHeaders mimeHeaders14 = new MimeHeaders(mimeHeaders0);
      MimeHeaders mimeHeaders15 = new MimeHeaders(mimeHeaders5);
      MimeHeaders mimeHeaders16 = new MimeHeaders(mimeHeaders7);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      try { 
        recordTypeMessage0.setRequestObject("\">Aw<.c", (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.lang.String cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer(1297);
      Instant instant0 = MockInstant.ofEpochSecond((long) 1297, (long) (-265));
      Integer integer1 = new Integer((-265));
      Instant instant1 = MockInstant.now();
      Integer integer2 = new Integer(1297);
      Date.from(instant1);
      Instant instant2 = MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusSeconds(instant0, 1297);
      Instant instant3 = MockInstant.plusSeconds(instant2, (long) integer1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Instant instant4 = MockInstant.minusSeconds(instant2, (long) integer0);
      MockInstant.minusSeconds(instant3, (-7));
      Instant instant5 = MockInstant.minusNanos(instant4, (long) integer0);
      Instant instant6 = MockInstant.plusNanos(instant5, 1297);
      Instant instant7 = MockInstant.minusNanos(instant6, 1297);
      Date.from(instant7);
      Integer integer3 = new Integer(1297);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1297);
      Integer integer1 = new Integer((-234));
      Integer integer2 = new Integer(1297);
      Integer integer3 = new Integer(1297);
      MockDate mockDate0 = new MockDate((-23), (-234), (-23));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Integer integer4 = new Integer(2843);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList0.addAll(byteArrayList1);
      byte[] byteArray0 = new byte[13];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-21);
      byteArray0[6] = (byte)0;
      byteArrayList0.add(byteArray0);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = 2843;
      Integer integer0 = new Integer(1297);
      Instant instant0 = MockInstant.ofEpochSecond((long) 2843, (long) 233);
      Integer integer1 = new Integer((-270));
      Integer integer2 = new Integer(1297);
      Instant instant1 = MockInstant.now();
      Integer integer3 = new Integer(1297);
      Date.from(instant1);
      Instant instant2 = MockInstant.minusNanos(instant0, 1297);
      Instant instant3 = MockInstant.now();
      Date.from(instant3);
      Instant instant4 = MockInstant.plusSeconds(instant2, (long) integer1);
      Instant instant5 = MockInstant.minusSeconds(instant2, (long) integer0);
      MockInstant.minusSeconds(instant4, 233);
      Instant instant6 = MockInstant.minusNanos(instant5, (long) integer0);
      Instant instant7 = MockInstant.plusNanos(instant6, 233);
      MockInstant.minusNanos(instant7, 1297);
      Instant instant8 = MockInstant.minusNanos(instant7, 1297);
      Date.from(instant8);
      Integer integer4 = new Integer(2843);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((String) null, (XBUSSystem) null, "");
      try { 
        recordTypeMessage0.setResponseObject(instant2, (XBUSSystem) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // I_02_003_0 java.time.Instant cannot be cast to net.sf.xbus.base.bytearraylist.ByteArrayList
         //
         verifyException("net.sf.xbus.protocol.records.RecordTypeMessage", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockDate mockDate0 = new MockDate(16, 16, 16, 16, 16, 16);
      MockDate mockDate1 = new MockDate(16, 16, 16, 16, 16);
      mockDate0.before(mockDate0);
      MockDate mockDate2 = new MockDate();
      mockDate2.getTime();
      MockDate mockDate3 = new MockDate();
      mockDate0.after(mockDate3);
      MockDate mockDate4 = new MockDate(1392409281320L);
      MockDate mockDate5 = new MockDate(16, 16, 16);
      MockDate.UTC((-958), (-958), (-958), (-958), (-996), (-996));
      mockDate1.getTime();
      mockDate2.before(mockDate1);
      MockDate mockDate6 = new MockDate(16, 16, 16, 16, 16);
      mockDate0.getTime();
      MockDate mockDate7 = new MockDate();
      mockDate6.before(mockDate0);
      mockDate7.after(mockDate3);
      MockDate.UTC(16, 16, 19, 16, (-996), 19);
      mockDate6.getTime();
      mockDate0.before(mockDate7);
      MockDate.UTC(19, (-38), (-38), 16, 16, (-6));
      mockDate2.after(mockDate6);
      MockDate.UTC(16, 16, 16, 16, 16, 16);
      mockDate1.after(mockDate0);
      MockDate.UTC(16, 16, 16, 16, 16, 19);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      mockDate0.before(mockDate1);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      MockDate mockDate8 = new MockDate(16, (-958), (-38), (-958), (-38), 16);
      MockDate mockDate9 = new MockDate((-958), (-38), (-38));
      MockDate.UTC(16, 16, (-958), 16, 16, (-958));
      MockDate mockDate10 = new MockDate((-38), (-38), 19, (-958), (-38));
      recordTypeMessage0.setRequestObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 9
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1597, 1597, 1597, 1597, 1597, 1597);
      MockDate mockDate1 = new MockDate(1597);
      mockDate0.getTime();
      mockDate0.toInstant();
      mockDate0.getTime();
      MockDate mockDate2 = new MockDate(1597, 1597, 1597);
      mockDate0.getTime();
      mockDate1.after(mockDate0);
      MockInstant.ofEpochSecond(52530998617000L);
      MockDate mockDate3 = new MockDate(1597, 1597, 1597);
      long long0 = new Integer(1597);
      MockDate mockDate4 = new MockDate(1597, 1597, 1597, 1597, 1597, 1597);
      mockDate4.before(mockDate0);
      mockDate0.setTime(100L);
      mockDate2.after(mockDate4);
      mockDate1.getTime();
      MockDate.UTC(1597, 1597, 1597, 1597, 1597, 2222);
      mockDate1.after(mockDate0);
      MockDate.UTC(2222, 1597, 1597, 1597, 2222, (-1311));
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      mockDate0.before(mockDate1);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      MockDate mockDate5 = new MockDate(52530998617000L);
      MockDate mockDate6 = new MockDate(1597, 1597, 1597);
      Integer integer0 = new Integer(1597);
      MockDate.UTC(1597, (-46), 332, 1597, 1597, 0);
      MockDate mockDate7 = new MockDate((-817L));
      ByteArrayList byteArrayList1 = new ByteArrayList();
      byteArrayList1.toByteArray();
      byteArrayList0.addAll(byteArrayList0);
      recordTypeMessage0.setRequestObject(byteArrayList1, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeferredDocumentImpl deferredDocumentImpl0 = new DeferredDocumentImpl(false);
      deferredDocumentImpl0.getElementsByTagName(":CZ_hn");
      deferredDocumentImpl0.createDeferredNotation(":CZ_hn", ":CZ_hn", ":CZ_hn", "g~qx,B:G sqY1GA");
      deferredDocumentImpl0.setXmlStandalone(false);
      Message message0 = new Message(":CZ_hn", false, ":CZ_hn", ":CZ_hn");
      DeferredDocumentImpl deferredDocumentImpl1 = new DeferredDocumentImpl(false, false);
      deferredDocumentImpl1.createDeferredCDATASection(")rG}hTcI*h=");
      PSVIDocumentImpl pSVIDocumentImpl0 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.load("'ENp\"uf");
      DeferredDocumentImpl deferredDocumentImpl2 = new DeferredDocumentImpl(false);
      deferredDocumentImpl1.createDeferredElementDefinition("org.apache.axis.attachments.AttachmentsImpl");
      HTMLDocumentImpl hTMLDocumentImpl0 = new HTMLDocumentImpl();
      HTMLTableColElementImpl hTMLTableColElementImpl0 = new HTMLTableColElementImpl(hTMLDocumentImpl0, "application/dime");
      hTMLTableColElementImpl0.compareDocumentPosition(deferredDocumentImpl0);
      deferredDocumentImpl0.putIdentifier("org.apache.axis.attachments.AttachmentsImpl", (Element) null);
      PSVIDocumentImpl pSVIDocumentImpl1 = new PSVIDocumentImpl();
      pSVIDocumentImpl0.abort();
      PSVIDocumentImpl pSVIDocumentImpl2 = (PSVIDocumentImpl)pSVIDocumentImpl0.getChildNodes();
      PSVIDocumentImpl pSVIDocumentImpl3 = new PSVIDocumentImpl();
      message0.getMessageContext();
      DeferredDocumentImpl deferredDocumentImpl3 = new DeferredDocumentImpl();
      DeferredDocumentImpl deferredDocumentImpl4 = new DeferredDocumentImpl(false, false);
      deferredDocumentImpl2.compareDocumentPosition(deferredDocumentImpl4);
      pSVIDocumentImpl2.load("org.apache.axis.attachments.AttachmentsImpl");
      PSVIDocumentImpl pSVIDocumentImpl4 = new PSVIDocumentImpl();
      deferredDocumentImpl0.setDocumentURI("transport.url");
      ElementDefinitionImpl elementDefinitionImpl0 = new ElementDefinitionImpl(pSVIDocumentImpl2, "org.apache.axis.attachments.AttachmentsImpl");
      DeferredDocumentImpl deferredDocumentImpl5 = new DeferredDocumentImpl(false);
      PSVIElementNSImpl pSVIElementNSImpl0 = new PSVIElementNSImpl(pSVIDocumentImpl1, "multipart/related", "response");
      pSVIDocumentImpl4.getXmlVersion();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestTextAsXML((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      mimeHeaders0.getAllHeaders();
      String[] stringArray0 = new String[0];
      mimeHeaders0.getMatchingHeaders(stringArray0);
      mimeHeaders0.getMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders1 = new MimeHeaders();
      MimeHeaders mimeHeaders2 = new MimeHeaders(mimeHeaders0);
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders3 = new MimeHeaders();
      mimeHeaders2.getAllHeaders();
      mimeHeaders1.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders4 = new MimeHeaders(mimeHeaders1);
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders5 = new MimeHeaders();
      mimeHeaders5.removeAllHeaders();
      MimeHeaders mimeHeaders6 = new MimeHeaders();
      MimeHeaders mimeHeaders7 = new MimeHeaders(mimeHeaders0);
      mimeHeaders7.removeHeader("I");
      mimeHeaders7.getAllHeaders();
      mimeHeaders2.removeHeader("I");
      mimeHeaders0.getAllHeaders();
      MimeHeaders mimeHeaders8 = new MimeHeaders();
      mimeHeaders4.removeHeader("I");
      mimeHeaders4.removeAllHeaders();
      mimeHeaders4.getMatchingHeaders(stringArray0);
      mimeHeaders2.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders9 = new MimeHeaders();
      MimeHeaders mimeHeaders10 = new MimeHeaders(mimeHeaders4);
      mimeHeaders6.getAllHeaders();
      MimeHeaders mimeHeaders11 = new MimeHeaders();
      mimeHeaders5.removeHeader("I");
      mimeHeaders1.removeHeader("I");
      javax.xml.soap.MimeHeaders mimeHeaders12 = new javax.xml.soap.MimeHeaders();
      MimeHeaders mimeHeaders13 = new MimeHeaders(mimeHeaders10);
      MimeHeaders mimeHeaders14 = new MimeHeaders();
      MimeHeaders mimeHeaders15 = new MimeHeaders(mimeHeaders14);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      // Undeclared exception!
      try { 
        recordTypeMessage0.setRequestText("I", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(1297);
      Instant instant0 = MockInstant.ofEpochSecond((long) 1297, (long) (-265));
      Integer integer1 = new Integer((-265));
      Instant instant1 = MockInstant.now();
      Integer integer2 = new Integer(1297);
      Date.from(instant1);
      Instant instant2 = MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusSeconds(instant0, 1297);
      Instant instant3 = MockInstant.plusSeconds(instant2, (long) integer1);
      Instant instant4 = MockInstant.minusSeconds(instant2, (long) integer0);
      MockInstant.minusSeconds(instant3, (-7));
      Instant instant5 = MockInstant.minusNanos(instant4, (long) integer0);
      Instant instant6 = MockInstant.plusNanos(instant5, 1297);
      Instant instant7 = MockInstant.minusNanos(instant6, 1297);
      Date.from(instant7);
      Integer integer3 = new Integer(1297);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      mimeHeaders0.getAllHeaders();
      String[] stringArray0 = new String[0];
      mimeHeaders0.getMatchingHeaders(stringArray0);
      mimeHeaders0.getMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders1 = new MimeHeaders();
      MimeHeaders mimeHeaders2 = new MimeHeaders();
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders3 = new MimeHeaders();
      mimeHeaders2.getAllHeaders();
      mimeHeaders1.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders4 = new MimeHeaders(mimeHeaders1);
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders5 = new MimeHeaders();
      mimeHeaders5.removeAllHeaders();
      MimeHeaders mimeHeaders6 = new MimeHeaders();
      MimeHeaders mimeHeaders7 = new MimeHeaders(mimeHeaders0);
      mimeHeaders7.removeHeader("I");
      mimeHeaders7.getAllHeaders();
      mimeHeaders2.removeHeader("I");
      mimeHeaders0.getAllHeaders();
      MimeHeaders mimeHeaders8 = new MimeHeaders();
      mimeHeaders4.removeHeader("I");
      mimeHeaders4.removeAllHeaders();
      mimeHeaders4.getMatchingHeaders(stringArray0);
      mimeHeaders2.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders9 = new MimeHeaders();
      MimeHeaders mimeHeaders10 = new MimeHeaders(mimeHeaders4);
      mimeHeaders6.getAllHeaders();
      MimeHeaders mimeHeaders11 = new MimeHeaders();
      mimeHeaders5.removeHeader("I");
      mimeHeaders1.removeHeader("I");
      javax.xml.soap.MimeHeaders mimeHeaders12 = new javax.xml.soap.MimeHeaders();
      MimeHeaders mimeHeaders13 = new MimeHeaders(mimeHeaders10);
      MimeHeaders mimeHeaders14 = new MimeHeaders();
      MimeHeaders mimeHeaders15 = new MimeHeaders(mimeHeaders14);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseText();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getResponseObject();
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byte byte0 = (byte) (-5);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(1297);
      Instant instant0 = MockInstant.ofEpochSecond((long) 1297, (long) (-265));
      Integer integer1 = new Integer((-265));
      Instant instant1 = MockInstant.now();
      Integer integer2 = new Integer(1297);
      Date.from(instant1);
      Instant instant2 = MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusSeconds(instant0, 1297);
      Instant instant3 = MockInstant.plusSeconds(instant2, (long) integer1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Instant instant4 = MockInstant.minusSeconds(instant2, (long) integer0);
      MockInstant.minusSeconds(instant3, (-2));
      Instant instant5 = MockInstant.minusNanos(instant4, (long) integer0);
      Instant instant6 = MockInstant.plusNanos(instant5, 1297);
      Instant instant7 = MockInstant.minusNanos(instant6, 1297);
      Date.from(instant7);
      Integer integer3 = new Integer(1297);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      recordTypeMessage0.getResponseObject();
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("02", (XBUSSystem) null, "02");
      recordTypeMessage0.setErrorcode((-872));
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      recordTypeMessage0.synchronizeRequestFields((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Integer integer0 = new Integer((-265));
      Instant instant0 = MockInstant.now();
      Integer integer1 = new Integer((-265));
      Instant instant1 = MockInstant.now();
      Integer integer2 = new Integer(1297);
      Date.from(instant1);
      Instant instant2 = MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusSeconds(instant0, 1297);
      Instant instant3 = MockInstant.plusSeconds(instant2, (long) integer1);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Instant instant4 = MockInstant.minusSeconds(instant2, (long) integer0);
      MockInstant.minusSeconds(instant3, 1297);
      Instant instant5 = MockInstant.minusNanos(instant4, (long) integer0);
      Instant instant6 = MockInstant.plusNanos(instant5, 1297);
      Instant instant7 = MockInstant.minusNanos(instant6, 1297);
      Date.from(instant7);
      Integer integer3 = new Integer(1297);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      recordTypeMessage0.getRequestText((XBUSSystem) null);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte byte0 = (byte) (-5);
      PipedOutputStream pipedOutputStream0 = null;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(1297);
      Instant instant0 = MockInstant.ofEpochSecond((long) 1297, (long) (-265));
      Instant instant1 = MockInstant.now();
      Integer integer1 = new Integer(1297);
      Date.from(instant1);
      Instant instant2 = MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusNanos(instant0, 1297);
      MockInstant.minusSeconds(instant0, 1297);
      Instant instant3 = MockInstant.plusSeconds(instant2, (long) integer0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      Instant instant4 = MockInstant.minusSeconds(instant2, (long) integer0);
      MockInstant.minusSeconds(instant3, (-2));
      Instant instant5 = MockInstant.minusNanos(instant4, (long) integer0);
      Instant instant6 = MockInstant.plusNanos(instant5, 1297);
      Instant instant7 = MockInstant.minusNanos(instant6, 1297);
      Date.from(instant7);
      Integer integer2 = new Integer(1297);
      ByteArrayList byteArrayList0 = new ByteArrayList();
      ByteArrayList byteArrayList1 = new ByteArrayList();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
  }

  /**
  //Test case number: 20
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ByteArrayList.createByteArrayList(byteArray0, 2);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("TmhBv6K6'73", (XBUSSystem) null, (String) null);
      ByteArrayList byteArrayList0 = ByteArrayList.createByteArrayList(byteArray0, 2);
      byteArrayList0.toString();
      recordTypeMessage0.setResponseObject(byteArrayList0, (XBUSSystem) null);
      System.setCurrentTimeMillis(2);
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte) (-14);
      recordTypeMessage0.getRequestObject((XBUSSystem) null);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 23
  /*Coverage entropy=1.830738805564335
  */
  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MimeHeaders mimeHeaders0 = new MimeHeaders();
      mimeHeaders0.getAllHeaders();
      String[] stringArray0 = new String[0];
      mimeHeaders0.getMatchingHeaders(stringArray0);
      mimeHeaders0.getMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders1 = new MimeHeaders();
      MimeHeaders mimeHeaders2 = new MimeHeaders(mimeHeaders0);
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders3 = new MimeHeaders();
      mimeHeaders2.getAllHeaders();
      mimeHeaders1.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders4 = new MimeHeaders(mimeHeaders1);
      mimeHeaders2.getAllHeaders();
      MimeHeaders mimeHeaders5 = new MimeHeaders();
      mimeHeaders5.removeAllHeaders();
      MimeHeaders mimeHeaders6 = new MimeHeaders(mimeHeaders0);
      MimeHeaders mimeHeaders7 = new MimeHeaders(mimeHeaders0);
      mimeHeaders7.getAllHeaders();
      mimeHeaders0.getAllHeaders();
      MimeHeaders mimeHeaders8 = new MimeHeaders();
      mimeHeaders4.removeHeader("I");
      mimeHeaders4.removeAllHeaders();
      mimeHeaders4.getMatchingHeaders(stringArray0);
      mimeHeaders2.getNonMatchingHeaders(stringArray0);
      MimeHeaders mimeHeaders9 = new MimeHeaders();
      MimeHeaders mimeHeaders10 = new MimeHeaders(mimeHeaders4);
      Iterator iterator0 = new EventReaderDelegate();
      MimeHeaders mimeHeaders11 = new MimeHeaders();
      mimeHeaders5.removeHeader("I");
      mimeHeaders1.removeHeader("I");
      javax.xml.soap.MimeHeaders mimeHeaders12 = new javax.xml.soap.MimeHeaders();
      MimeHeaders mimeHeaders13 = new MimeHeaders(mimeHeaders10);
      MimeHeaders mimeHeaders14 = new MimeHeaders();
      MimeHeaders mimeHeaders15 = new MimeHeaders(mimeHeaders14);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.setResponseObject((Object) null, (XBUSSystem) null);
      assertEquals("RecordTypeMessage", recordTypeMessage0.getShortname());
      assertEquals(0, recordTypeMessage0.getErrorcode());
      assertEquals("RC_OK", recordTypeMessage0.getReturncode());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage((XBUSSystem) null);
      recordTypeMessage0.synchronizeResponseFields((XBUSSystem) null);
      Object object0 = new Object();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((PipedOutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Message message0 = new Message("FaulSt: name=", false, "FaulSt: name=", "FaulSt: name=");
      message0.getSOAPPartAsBytes();
      AttachmentPart attachmentPart0 = new AttachmentPart();
      AttachmentPart attachmentPart1 = (AttachmentPart)message0.createAttachmentPart();
      attachmentPart1.detachAttachmentFile();
      AttachmentPart attachmentPart2 = new AttachmentPart();
      attachmentPart1.getFirstMimeHeader("LKBte<&");
      message0.addAttachmentPart(attachmentPart1);
      DataHandler dataHandler0 = new DataHandler("FaulSt: name=", "multipart/related");
      AttachmentPart attachmentPart3 = new AttachmentPart();
      AttachmentPart attachmentPart4 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart5 = new AttachmentPart(dataHandler0);
      AttachmentPart attachmentPart6 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart7 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart8 = new AttachmentPart((DataHandler) null);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage("org.apache.axis.attachments.AttachmentsImpl", (XBUSSystem) null, "#4zoV%W@cqe[Th");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.7741057932992024
  */
  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Message message0 = new Message("FaulSt: name=", false, "FaulSt: name=", "FaulSt: name=");
      message0.getSOAPPartAsBytes();
      AttachmentPart attachmentPart0 = new AttachmentPart();
      AttachmentPart attachmentPart1 = (AttachmentPart)message0.createAttachmentPart();
      attachmentPart1.detachAttachmentFile();
      AttachmentPart attachmentPart2 = new AttachmentPart();
      attachmentPart1.getFirstMimeHeader("LKBte<&");
      message0.addAttachmentPart(attachmentPart1);
      DataHandler dataHandler0 = new DataHandler("FaulSt: name=", "multipart/related");
      AttachmentPart attachmentPart3 = new AttachmentPart();
      AttachmentPart attachmentPart4 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart5 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart6 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart7 = new AttachmentPart((DataHandler) null);
      AttachmentPart attachmentPart8 = new AttachmentPart(dataHandler0);
      RecordTypeMessage recordTypeMessage0 = new RecordTypeMessage(";", (XBUSSystem) null, "  ");
      // Undeclared exception!
      try { 
        recordTypeMessage0.setResponseText("net.sf.xbus.protocol.records.RecordTypeMessage", (XBUSSystem) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.sf.xbus.protocol.xml.XMLMessageAbstract", e);
      }
  }
}
