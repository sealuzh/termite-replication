/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 05:54:38 GMT 2019
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.087228782907256
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("yMD!qQs_XE3@3+-");
      Token token1 = xPathLexer0.star();
      assertEquals("!", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("r/&0KbPqs]Wt>");
      Token token3 = xPathLexer2.comma();
      assertEquals("r", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals(1, token4.getTokenType());
      assertEquals("y", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setXPath("`Yp");
      xPathLexer2.pipe();
      xPathLexer3.getPreviousToken();
      Token token5 = xPathLexer3.pipe();
      assertEquals("`", token5.getTokenText());
      
      Token token6 = xPathLexer2.slashes();
      assertEquals(11, token6.getTokenType());
      assertEquals("&", token6.getTokenText());
      
      Token token7 = xPathLexer2.dots();
      assertEquals("0", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer3.nextToken();
      assertEquals("Yp", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals("K", token10.getTokenText());
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.pipe();
      Token token11 = xPathLexer2.plus();
      assertEquals(5, token11.getTokenType());
      assertEquals("b", token11.getTokenText());
      
      Token token12 = xPathLexer0.rightParen();
      assertEquals(2, token12.getTokenType());
      assertEquals("Q", token12.getTokenText());
      
      xPathLexer3.equals();
      Token token13 = xPathLexer5.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer0.dollar();
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer0.colon();
      assertEquals(18, token15.getTokenType());
      assertEquals("_", token15.getTokenText());
      
      Token token16 = xPathLexer1.minus();
      assertEquals(6, token16.getTokenType());
      assertEquals("M", token16.getTokenText());
      
      Token token17 = xPathLexer2.pipe();
      assertEquals(17, token17.getTokenType());
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.7803064958594064
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("$", token0.getTokenText());
      
      xPathLexer0.consume(35);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("r/&0KbPqs]Wt>");
      Token token2 = xPathLexer1.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      Token token4 = xPathLexer1.comma();
      assertEquals("&", token4.getTokenText());
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      xPathLexer1.setXPath("\"E1.bYU9sfX");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer2.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("\"E1.bYU9sfX");
      Token token6 = xPathLexer1.nextToken();
      assertEquals((-1), token6.getTokenType());
      assertEquals("", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer2.or();
      xPathLexer1.div();
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer2.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("(F7-ub?0)%S_V0d");
      xPathLexer5.notEquals();
      Token token11 = xPathLexer2.dots();
      assertEquals(13, token11.getTokenType());
      
      xPathLexer1.notEquals();
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer4.notEquals();
      assertEquals("co", token13.getTokenText());
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 2
  /*Coverage entropy=1.6364971399453427
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("D!", token1.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.star();
      assertEquals("Q", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("s", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("c5R,j2(v2|w$,");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.nextToken();
      Token token4 = xPathLexer2.nextToken();
      assertEquals(",", token4.getTokenText());
      
      Token token5 = xPathLexer3.notEquals();
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer0.equals();
      assertEquals("@", token6.getTokenText());
      assertEquals(21, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("c5R,j2(v2|w$,");
      xPathLexer0.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token7 = xPathLexer2.nextToken();
      assertEquals(15, token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token8 = xPathLexer0.pipe();
      assertEquals("+", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("-", token9.getTokenText());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 3
  /*Coverage entropy=2.244858021137147
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("8gM~sW<3@'e.");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer1.dots();
      xPathLexer2.dollar();
      xPathLexer2.doubleColon();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer1.comma();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=1.8218090616723346
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer(":L%v@_%T/FFt`/F*Q");
      xPathLexer1.star();
      xPathLexer1.at();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath(":L%v@_%T/FFt`/F*Q");
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer1.pipe();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      xPathLexer1.slashes();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.dots();
      xPathLexer2.nextToken();
      xPathLexer3.nextToken();
      xPathLexer1.not();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.plus();
      xPathLexer0.dollar();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      xPathLexer3.or();
      xPathLexer4.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.leftBracket();
      xPathLexer0.dots();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 5
  /*Coverage entropy=1.5692231090333646
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" vVN\"T");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("vVN", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("\"T", token1.getTokenText());
      assertEquals(22, token1.getTokenType());
      
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      
      Token token4 = xPathLexer1.dollar();
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer1.colon();
      assertEquals(18, token5.getTokenType());
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.781751303008054
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("D!", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("q", token2.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("Q", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals(1, token4.getTokenType());
      
      xPathLexer1.setXPath("/!9");
      Token token5 = xPathLexer1.leftBracket();
      assertEquals(3, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("4;#>OgPU");
      Token token7 = xPathLexer3.nextToken();
      assertEquals("4", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("/!9");
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      assertEquals("/", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer("o!2-");
      Token token9 = xPathLexer5.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("s", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("");
      xPathLexer7.operatorName();
      Token token11 = xPathLexer2.colon();
      assertEquals(18, token11.getTokenType());
      
      Token token12 = xPathLexer6.dollar();
      assertEquals("o", token12.getTokenText());
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer5.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.7100586376693725
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer1 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer1.pipe();
      xPathLexer1.slashes();
      xPathLexer0.dots();
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("+DmRW:*&L@sAWsB8Z");
      xPathLexer1.number();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=3.353165829567986
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.rightParen();
      xPathLexer0.pipe();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer0.pipe();
      xPathLexer0.consume((-1911));
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      // Undeclared exception!
      try { 
        xPathLexer0.dots();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.175351978284304
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.rightBracket();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.or();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("8gM~sW<3@'e.");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.star();
      xPathLexer1.dots();
      xPathLexer2.dollar();
      xPathLexer0.not();
      xPathLexer0.dollar();
      xPathLexer1.comma();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=1.9376443693013021
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("#", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (])");
      xPathLexer1.setPreviousToken(token4);
      assertEquals(3, token4.getTokenType());
      assertEquals("2", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(2, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.notEquals();
      Token token7 = xPathLexer2.equals();
      assertEquals(21, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      Token token8 = xPathLexer1.pipe();
      assertEquals("[", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      Token token9 = xPathLexer3.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token10 = xPathLexer7.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      xPathLexer4.or();
      Token token13 = xPathLexer3.at();
      assertEquals(16, token13.getTokenType());
  }

  /**
  //Test case number: 11
  /*Coverage entropy=2.885074759977858
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.consume((-2901));
      xPathLexer0.colon();
      // Undeclared exception!
      try { 
        xPathLexer0.nextToken();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=1.9004521588887144
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightBracket();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (4) (M)", string0);
      
      XPathLexer xPathLexer1 = new XPathLexer("{Lm<jPMJO~|");
      Token token1 = xPathLexer1.star();
      assertEquals("{", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("D", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      assertEquals("!", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token4 = xPathLexer1.leftParen();
      assertEquals("L", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.setXPath("");
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer("{Lm<jPMJO~|");
      xPathLexer2.getPreviousToken();
      xPathLexer0.pipe();
      Token token5 = xPathLexer1.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("m", token5.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token6 = xPathLexer5.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(7, token7.getTokenType());
      assertEquals("<", token7.getTokenText());
      
      xPathLexer0.div();
      XPathLexer xPathLexer6 = new XPathLexer("[ (4) (M)");
      Token token8 = xPathLexer4.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("{", token8.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token9 = xPathLexer8.not();
      assertEquals("c", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      xPathLexer0.rightBracket();
      XPathLexer xPathLexer9 = new XPathLexer("");
      Token token10 = xPathLexer7.whitespace();
      assertEquals((-2), token10.getTokenType());
      assertEquals("", token10.getTokenText());
      
      Token token11 = xPathLexer8.identifier();
      assertEquals("om.werken.saxpath.XPathLexer", token11.getTokenText());
      assertEquals(15, token11.getTokenType());
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.7605544043729329
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfDMO)");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (b)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      assertEquals("j", token1.getTokenText());
      assertEquals(3, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals("fD", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("M", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("'y^'nC<Ay$");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("O", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("'", token5.getTokenText());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.8417152730324875
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("M", token0.getTokenText());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("D!", token1.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("@3", token2.getTokenText());
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.getPreviousToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("+", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("-", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("V=oN[");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token7 = xPathLexer2.leftParen();
      assertEquals(1, token7.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      xPathLexer0.mod();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer3.rightBracket();
      Token token10 = xPathLexer0.whitespace();
      assertEquals((-2), token10.getTokenType());
      
      xPathLexer3.rightBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token11 = xPathLexer4.literal();
      assertNull(token11);
      
      xPathLexer3.and();
      Token token12 = xPathLexer2.colon();
      assertEquals(18, token12.getTokenType());
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.3935305047289641
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer("*/ b");
      xPathLexer1.leftParen();
      xPathLexer1.consume((-743));
      // Undeclared exception!
      try { 
        xPathLexer1.relationalOperator();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.9339523786715866
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.notEquals();
      assertEquals("]T", token0.getTokenText());
      
      xPathLexer1.equals();
      Token token1 = xPathLexer0.equals();
      assertEquals("T", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer1.pipe();
      assertEquals("#", token2.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("]T<#2)Q?]R");
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      Token token3 = xPathLexer4.nextToken();
      assertEquals("]", token3.getTokenText());
      assertEquals(4, token3.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.div();
      XPathLexer xPathLexer7 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer6.div();
      Token token5 = xPathLexer5.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer6.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer6.dollar();
      assertEquals(26, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("9");
      Token token8 = xPathLexer0.relationalOperator();
      assertEquals("<", token8.getTokenText());
      assertEquals(7, token8.getTokenType());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer7.plus();
      assertEquals(5, token10.getTokenType());
      assertEquals("]", token10.getTokenText());
      
      Token token11 = xPathLexer0.dots();
      assertEquals("#", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=1.9179428838593413
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.star();
      assertEquals("c", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("ceWK");
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer2.and();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals("ce", token2.getTokenText());
      
      xPathLexer0.div();
      Token token3 = xPathLexer0.number();
      assertEquals(30, token3.getTokenType());
      
      Token token4 = xPathLexer3.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("c", token4.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("WK", token5.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token6 = xPathLexer3.rightBracket();
      assertEquals("o", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("iq!Z");
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("m", token7.getTokenText());
      
      Token token8 = xPathLexer2.colon();
      assertEquals(18, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer3.notEquals();
      assertEquals(22, token10.getTokenType());
      assertEquals(".w", token10.getTokenText());
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.935137439163056
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("*}ZY5w~I*`M#G,");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("[ (11) (b)");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer3.equals();
      xPathLexer3.nextToken();
      xPathLexer2.relationalOperator();
      xPathLexer2.pipe();
      xPathLexer3.comma();
      xPathLexer1.doubleColon();
      xPathLexer0.not();
      xPathLexer1.dollar();
      xPathLexer3.number();
      xPathLexer1.number();
      Token token1 = xPathLexer0.literal();
      assertNull(token1);
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.7230402311660629
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.operatorName();
      String string0 = token0.toString();
      assertEquals("[ (3) (B)", string0);
      
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.setPreviousToken(token0);
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("^w", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer1.star();
      Token token3 = xPathLexer1.leftParen();
      assertEquals("o", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(")");
      xPathLexer2.setXPath("VuORf");
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.getPreviousToken();
      XPathLexer xPathLexer4 = new XPathLexer("PLYD4O2*h");
      xPathLexer4.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token4 = xPathLexer2.nextToken();
      assertEquals("uORf", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token5 = xPathLexer4.colon();
      assertEquals("L", token5.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token6 = xPathLexer7.pipe();
      assertEquals("c", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer8.star();
      assertEquals("c", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer6.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer4.or();
      Token token9 = xPathLexer6.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer3.colon();
      assertEquals(18, token10.getTokenType());
      
      int int0 = xPathLexer8.endPosition();
      assertEquals(29, int0);
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.2208693450697683
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.comma();
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(".", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.and();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("rE", token3.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      assertEquals("9", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.or();
      Token token6 = xPathLexer0.leftParen();
      assertEquals(">", token6.getTokenText());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("N", token7.getTokenText());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals("~", token8.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token9 = xPathLexer2.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer2.dollar();
      Token token11 = xPathLexer2.doubleColon();
      assertEquals(19, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals("`", token12.getTokenText());
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      assertEquals("=", token13.getTokenText());
      
      Token token14 = xPathLexer1.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer1.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.8848275163126682
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer1.whitespace();
      xPathLexer1.identifier();
      XPathLexer xPathLexer2 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer1.mod();
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.not();
      XPathLexer xPathLexer4 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer3.or();
      xPathLexer3.leftBracket();
      xPathLexer3.comma();
      XPathLexer xPathLexer5 = new XPathLexer("=rkrs?*E\"\"K((z");
      xPathLexer5.operatorName();
      xPathLexer5.literal();
      xPathLexer3.literal();
      xPathLexer3.minus();
      xPathLexer4.literal();
      xPathLexer0.equals();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=2.1378034105161827
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.number();
      assertEquals("", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("M", token1.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.getPreviousToken();
      assertEquals(23, token2.getTokenType());
      assertEquals("!", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("s_", token3.getTokenText());
      
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("V=oN[");
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.leftBracket();
      assertEquals(3, token6.getTokenType());
      assertEquals("3", token6.getTokenText());
      
      xPathLexer1.nextToken();
      Token token7 = xPathLexer1.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("=", token7.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("yMD!qQs_XE3@3+-");
      Token token8 = xPathLexer2.nextToken();
      assertEquals(15, token8.getTokenType());
      assertEquals("yMD", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer2.star();
      assertEquals("!", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer1.dots();
      assertEquals("o", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token12 = xPathLexer2.dollar();
      assertEquals("q", token12.getTokenText());
      
      xPathLexer3.not();
      Token token13 = xPathLexer1.dollar();
      assertEquals(26, token13.getTokenType());
      
      xPathLexer4.comma();
      Token token14 = xPathLexer3.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.028512304261996
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("IQA!h:+vAf^,;sz~");
      Token token4 = xPathLexer2.number();
      assertEquals(30, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("IQA", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.operatorName();
      xPathLexer2.literal();
      Token token6 = xPathLexer1.dollar();
      assertEquals(26, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token7 = xPathLexer4.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.plus();
      assertEquals(5, token8.getTokenType());
  }

  /**
  //Test case number: 24
  /*Coverage entropy=2.1048296784419107
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("yMD!qQs_XE3@3+-");
      Token token2 = xPathLexer1.comma();
      assertEquals("y", token2.getTokenText());
      assertEquals(32, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token3 = xPathLexer2.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer2.and();
      Token token4 = xPathLexer0.getPreviousToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("yMD", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("_", token5.getTokenText());
      
      xPathLexer1.equals();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("'1efN");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.or();
      xPathLexer2.div();
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("D", token7.getTokenText());
      
      Token token8 = xPathLexer2.dollar();
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.notEquals();
      Token token9 = xPathLexer3.plus();
      assertEquals(5, token9.getTokenType());
      assertEquals("'", token9.getTokenText());
      
      Token token10 = xPathLexer4.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token11 = xPathLexer7.notEquals();
      assertEquals(22, token11.getTokenType());
      
      Token token12 = xPathLexer7.equals();
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.8021897160154516
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) ($)", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("#", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("q", token3.getTokenText());
      assertEquals(32, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("$#Sq/{[.i?x");
      xPathLexer1.leftParen();
      xPathLexer1.setXPath("[ (1) ($)");
      xPathLexer1.and();
      xPathLexer0.getPreviousToken();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer0.slashes();
      assertEquals(11, token5.getTokenType());
      assertEquals("{", token5.getTokenText());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("[.", token6.getTokenText());
      assertEquals(14, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("i", token7.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer2 = new XPathLexer("Vw4oJBWt9/4JQ%p");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("[", token9.getTokenText());
      
      Token token10 = xPathLexer3.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      Token token11 = xPathLexer2.whitespace();
      assertEquals("", token11.getTokenText());
      assertEquals((-2), token11.getTokenType());
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.9901179786040317
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.identifier();
      xPathLexer0.mod();
      xPathLexer0.hasMoreChars();
      xPathLexer0.at();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      Token token0 = xPathLexer0.operatorName();
      assertNull(token0);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.965869339679156
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.consume(35);
      xPathLexer0.setXPath(")gnH~k");
      xPathLexer0.LA(35);
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.doubleColon();
      xPathLexer1.hasMoreChars();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer1.star();
      xPathLexer0.nextToken();
      xPathLexer2.consume(107);
      xPathLexer0.at();
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.8684490497294457
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (b)", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("M", token4.getTokenText());
      
      xPathLexer0.setXPath("bjfHMO)");
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.pipe();
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.getPreviousToken();
      assertEquals(15, token6.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      Token token9 = xPathLexer1.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer1.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer1.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer1.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer1.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer1.minus();
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer1.pipe();
      assertEquals(17, token16.getTokenType());
      
      Token token17 = xPathLexer1.star();
      assertEquals(20, token17.getTokenType());
  }

  /**
  //Test case number: 29
  /*Coverage entropy=2.078423482535455
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.dots();
      assertEquals("$", token0.getTokenText());
      
      xPathLexer0.consume(35);
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("{S=");
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer1.leftParen();
      assertEquals("{", token3.getTokenText());
      
      xPathLexer0.setXPath("/D|ZyQ6b8(P");
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer1.pipe();
      Token token5 = xPathLexer0.slashes();
      assertEquals("D", token5.getTokenText());
      assertEquals(11, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(21, token7.getTokenType());
      assertEquals("=", token7.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token8 = xPathLexer0.nextToken();
      assertEquals("ZyQ6b8", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals("(", token9.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token10 = xPathLexer2.pipe();
      assertEquals(17, token10.getTokenType());
      
      Token token11 = xPathLexer2.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer1.whitespace();
      assertEquals((-2), token12.getTokenType());
      assertEquals("", token12.getTokenText());
  }

  /**
  //Test case number: 30
  /*Coverage entropy=2.122659535865412
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      xPathLexer0.dots();
      xPathLexer0.consume(31);
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("{S=");
      Token token0 = xPathLexer1.star();
      assertEquals("{", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.leftParen();
      assertEquals("S", token4.getTokenText());
      
      xPathLexer0.setXPath("/D|ZyQ6b8(P");
      Token token5 = xPathLexer0.leftBracket();
      assertEquals("/", token5.getTokenText());
      assertEquals(3, token5.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer1.pipe();
      Token token6 = xPathLexer0.slashes();
      assertEquals("D", token6.getTokenText());
      assertEquals(11, token6.getTokenType());
      
      Token token7 = xPathLexer0.dots();
      assertEquals(13, token7.getTokenType());
      assertEquals("|", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer1.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.nextToken();
      assertEquals(15, token10.getTokenType());
      assertEquals("ZyQ6b8", token10.getTokenText());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals("(", token11.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      Token token12 = xPathLexer2.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.whitespace();
      assertEquals((-2), token13.getTokenType());
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.8033458637471693
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.hasMoreChars();
      xPathLexer2.hasMoreChars();
      xPathLexer2.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer("=rkrs?*E\"\"K((z");
      xPathLexer3.mod();
      xPathLexer3.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.slashes();
      xPathLexer2.not();
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.or();
      xPathLexer5.leftBracket();
      xPathLexer0.comma();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer1.rightParen();
      xPathLexer1.equals();
      xPathLexer5.rightBracket();
      xPathLexer5.dollar();
      xPathLexer6.colon();
      XPathLexer xPathLexer7 = null;
      try {
        xPathLexer7 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=2.2474681858802987
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("3", token0.getTokenText());
      
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dollar();
      assertEquals(26, token1.getTokenType());
      assertEquals("L", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("e", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.whitespace();
      assertEquals((-2), token3.getTokenType());
      assertEquals("", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals("r", token4.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("75", token6.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("|FVX%?O;P");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
      
      Token token8 = xPathLexer0.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("g", token8.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      Token token9 = xPathLexer1.doubleColon();
      assertEquals("|F", token9.getTokenText());
      assertEquals(19, token9.getTokenType());
      
      Token token10 = xPathLexer2.not();
      assertEquals(23, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      Token token11 = xPathLexer4.number();
      assertEquals(30, token11.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token12 = xPathLexer3.notEquals();
      assertEquals(22, token12.getTokenType());
      assertEquals("!3", token12.getTokenText());
      
      Token token13 = xPathLexer0.plus();
      assertEquals(5, token13.getTokenType());
      
      Token token14 = xPathLexer0.dots();
      assertEquals("N", token14.getTokenText());
      assertEquals(13, token14.getTokenType());
      
      Token token15 = xPathLexer5.leftBracket();
      assertEquals(3, token15.getTokenType());
  }

  /**
  //Test case number: 33
  /*Coverage entropy=2.344365187706075
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.at();
      assertEquals("<", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertNull(token2);
      
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.getPreviousToken();
      Token token3 = xPathLexer1.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("]", token3.getTokenText());
      
      xPathLexer1.nextToken();
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      assertEquals("#", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      Token token5 = xPathLexer3.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer4.leftParen();
      assertEquals("]", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer5.relationalOperator();
      Token token7 = xPathLexer0.nextToken();
      assertEquals("2", token7.getTokenText());
      assertEquals(30, token7.getTokenType());
      
      xPathLexer1.mod();
      Token token8 = xPathLexer5.not();
      assertEquals(23, token8.getTokenType());
      
      xPathLexer3.rightBracket();
      Token token9 = xPathLexer1.whitespace();
      assertEquals("", token9.getTokenText());
      
      Token token10 = xPathLexer4.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals("T", token10.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.literal();
      Token token11 = xPathLexer6.whitespace();
      assertEquals((-2), token11.getTokenType());
      
      xPathLexer4.and();
      Token token12 = xPathLexer6.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token13.getTokenType());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=2.9377357436763987
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.consume((-564));
      // Undeclared exception!
      try { 
        xPathLexer0.slashes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=2.152618101865033
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer0.nextToken();
      Token token2 = xPathLexer0.nextToken();
      assertNotSame(token2, token1);
      
      xPathLexer1.notEquals();
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("<", token3.getTokenText());
      
      xPathLexer0.pipe();
      Token token4 = xPathLexer2.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer3.leftParen();
      assertEquals(1, token5.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer4.whitespace();
      XPathLexer xPathLexer5 = new XPathLexer("|FVX%?O;P");
      Token token6 = xPathLexer4.colon();
      assertEquals("T", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      xPathLexer2.pipe();
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token7 = xPathLexer2.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer2.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer6.number();
      assertEquals(30, token9.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token10 = xPathLexer7.notEquals();
      assertEquals("co", token10.getTokenText());
      assertEquals(22, token10.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      Token token11 = xPathLexer8.plus();
      assertEquals(5, token11.getTokenType());
      
      Token token12 = xPathLexer7.dots();
      assertEquals(14, token12.getTokenType());
      
      Token token13 = xPathLexer0.leftBracket();
      assertEquals(3, token13.getTokenType());
      assertEquals("#", token13.getTokenText());
      
      Token token14 = xPathLexer0.pipe();
      assertEquals(17, token14.getTokenType());
      assertEquals("2", token14.getTokenText());
  }

  /**
  //Test case number: 36
  /*Coverage entropy=2.0380148266527542
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      xPathLexer0.consume(2205);
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      xPathLexer0.LA(2205);
      Token token0 = xPathLexer0.pipe();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.doubleColon();
      xPathLexer1.hasMoreChars();
      xPathLexer0.pipe();
      xPathLexer0.setPreviousToken(token1);
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer1.slashes();
      xPathLexer0.nextToken();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer("za_maQgX^yNe^l+0");
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer5 = new XPathLexer("com.werken.saxpath.Token");
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.not();
      xPathLexer5.rightBracket();
      XPathLexer xPathLexer7 = new XPathLexer("G");
      xPathLexer3.whitespace();
      xPathLexer2.identifier();
      xPathLexer1.div();
      Token token2 = xPathLexer2.getPreviousToken();
      assertNull(token2);
  }

  /**
  //Test case number: 37
  /*Coverage entropy=2.060994672844598
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("yMD!qQs_XE3@3+-");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token1 = xPathLexer0.equals();
      assertEquals("s", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer3.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer3.nextToken();
      Token token3 = xPathLexer2.leftBracket();
      assertEquals("y", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
      
      xPathLexer2.pipe();
      Token token4 = xPathLexer2.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("D", token4.getTokenText());
      
      Token token5 = xPathLexer3.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
      
      Token token7 = xPathLexer0.dollar();
      assertEquals("_", token7.getTokenText());
      
      Token token8 = xPathLexer3.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer3.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("X", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      xPathLexer3.leftParen();
      Token token11 = xPathLexer1.minus();
      assertEquals(6, token11.getTokenType());
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.5063497264089842
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.8076201328446508
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = "bjfHMO)";
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (b)");
      xPathLexer0.setPreviousToken(token1);
      xPathLexer1.doubleColon();
      token1.toString();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer2.consume((-797));
      xPathLexer1.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer2.div();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=2.216279486862656
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("$", token0.getTokenText());
      
      xPathLexer0.consume(35);
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("r/&0KbPqs]Wt>");
      Token token1 = xPathLexer1.star();
      assertEquals("r", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer1.at();
      assertEquals("/", token2.getTokenText());
      
      Token token3 = xPathLexer1.comma();
      assertEquals(32, token3.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer1.setXPath("\"E1.bYU9fX");
      xPathLexer0.pipe();
      xPathLexer1.getPreviousToken();
      xPathLexer1.pipe();
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      
      Token token5 = xPathLexer1.dots();
      assertEquals("E", token5.getTokenText());
      assertEquals(13, token5.getTokenType());
      
      Token token6 = xPathLexer1.nextToken();
      assertEquals("1.", token6.getTokenText());
      assertEquals(31, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("bYU9fX", token7.getTokenText());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.pipe();
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      Token token10 = xPathLexer2.rightParen();
      assertEquals(2, token10.getTokenType());
      
      Token token11 = xPathLexer2.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer0.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      Token token13 = xPathLexer0.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer2.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer1.minus();
      assertEquals(6, token15.getTokenType());
      
      Token token16 = xPathLexer1.pipe();
      assertEquals(17, token16.getTokenType());
      assertEquals("Y", token16.getTokenText());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.6821140243664126
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("afm@SOF)?");
      xPathLexer0.or();
      xPathLexer0.doubleColon();
      xPathLexer0.pipe();
      xPathLexer0.hasMoreChars();
      xPathLexer0.nextToken();
      xPathLexer0.colon();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("afm@SOF)?");
      xPathLexer0.dots();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume((-364));
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      xPathLexer1.pipe();
      XPathLexer xPathLexer3 = new XPathLexer("");
      // Undeclared exception!
      try { 
        xPathLexer2.nextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.6829724851930963
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("W8${,z\"fsLHqS");
      xPathLexer0.and();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      assertFalse(xPathLexer2.equals((Object)xPathLexer1));
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.9458447170059476
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("2", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("S_");
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      assertEquals("S_", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token6 = xPathLexer2.doubleColon();
      assertEquals(19, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer3.equals();
      assertEquals(21, token8.getTokenType());
      
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals((-1), token9.getTokenType());
      
      Token token10 = xPathLexer3.plus();
      assertEquals(5, token10.getTokenType());
      
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("8gM~sW<3@'e.");
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token11 = xPathLexer3.not();
      assertEquals(23, token11.getTokenType());
      
      Token token12 = xPathLexer3.rightBracket();
      assertEquals(4, token12.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("[ (18) (])");
      Token token13 = xPathLexer6.whitespace();
      assertEquals("", token13.getTokenText());
      assertEquals((-2), token13.getTokenType());
      
      Token token14 = xPathLexer3.pipe();
      assertEquals(17, token14.getTokenType());
      
      Token token15 = xPathLexer3.dots();
      assertEquals(13, token15.getTokenType());
      
      Token token16 = xPathLexer0.dollar();
      assertEquals(")", token16.getTokenText());
      assertEquals(26, token16.getTokenType());
      
      Token token17 = xPathLexer1.slashes();
      assertEquals(11, token17.getTokenType());
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.2294907622734903
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.colon();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("D", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("q", token1.getTokenText());
      
      xPathLexer1.leftParen();
      xPathLexer0.mod();
      xPathLexer1.setXPath("/!9");
      Token token2 = xPathLexer1.leftBracket();
      assertEquals("/", token2.getTokenText());
      assertEquals(3, token2.getTokenType());
      
      xPathLexer0.and();
      xPathLexer1.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("/!9");
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token3 = xPathLexer2.leftParen();
      assertEquals("/", token3.getTokenText());
      assertEquals(1, token3.getTokenType());
      
      xPathLexer3.relationalOperator();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer2.mod();
      Token token5 = xPathLexer2.not();
      assertEquals("!", token5.getTokenText());
      
      xPathLexer3.comma();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token6 = xPathLexer4.colon();
      assertEquals(18, token6.getTokenType());
      assertEquals(")", token6.getTokenText());
      
      Token token7 = xPathLexer2.pipe();
      assertEquals("9", token7.getTokenText());
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer4.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      xPathLexer1.not();
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.number();
      Token token10 = xPathLexer0.equals();
      assertEquals("Q", token10.getTokenText());
      assertEquals(21, token10.getTokenType());
      
      Token token11 = xPathLexer4.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer1.minus();
      assertEquals(6, token12.getTokenType());
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.6042430319260377
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (y)", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (y)");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer3.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer3.nextToken();
      Token token4 = xPathLexer0.notEquals();
      assertEquals(22, token4.getTokenType());
      assertEquals("!q", token4.getTokenText());
      
      xPathLexer1.equals();
      XPathLexer xPathLexer4 = new XPathLexer("[ (11) (y)");
      xPathLexer1.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("[ (11) (y)");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("Qs_XE3", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("^kp3>^ yrTG");
      Token token6 = xPathLexer5.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer3.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer5.identifierOrOperatorName();
      Token token9 = xPathLexer4.equals();
      assertEquals("[", token9.getTokenText());
      assertEquals(21, token9.getTokenType());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.657946861947193
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (b)", string0);
      
      xPathLexer0.equals();
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.pipe();
      assertEquals("H", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("MO", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(")", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.nextToken();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer1.notEquals();
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 47
  /*Coverage entropy=2.0291088579693652
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("am@SOF)?");
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("m", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals("@S", token1.getTokenText());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.slashes();
      assertEquals(11, token2.getTokenType());
      
      xPathLexer0.consume(73);
      xPathLexer0.doubleColon();
      xPathLexer1.div();
      xPathLexer1.colon();
      xPathLexer1.dots();
      Token token3 = xPathLexer1.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      xPathLexer1.leftBracket();
      xPathLexer0.consume(0);
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer1.not();
      assertEquals(23, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer(")");
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer2.equals();
      Token token8 = xPathLexer2.leftBracket();
      assertEquals(3, token8.getTokenType());
      
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token10 = xPathLexer2.comma();
      assertEquals(32, token10.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer2.colon();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      Token token11 = xPathLexer4.rightParen();
      assertEquals(")", token11.getTokenText());
      assertEquals(2, token11.getTokenType());
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer1.rightBracket();
      assertEquals(4, token13.getTokenType());
      
      Token token14 = xPathLexer3.dollar();
      assertEquals(")", token14.getTokenText());
      assertEquals(26, token14.getTokenType());
      
      Token token15 = xPathLexer1.colon();
      assertEquals(18, token15.getTokenType());
      
      Token token16 = xPathLexer3.minus();
      assertEquals(6, token16.getTokenType());
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.6816951258814725
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.dots();
      assertEquals("$", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.and();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      xPathLexer0.mod();
      Token token2 = xPathLexer0.plus();
      assertEquals("S", token2.getTokenText());
      assertEquals(5, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.hasMoreChars();
      xPathLexer0.hasMoreChars();
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("/{", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.slashes();
      Token token4 = xPathLexer0.slashes();
      assertEquals(".", token4.getTokenText());
      assertEquals(11, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("$#Sq/{[.i?x");
      xPathLexer1.rightBracket();
      xPathLexer1.relationalOperator();
      Token token5 = xPathLexer0.nextToken();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals("?", token6.getTokenText());
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals("x", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.8123240909749507
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("^", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("_", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("L|/0@&|@k1", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token6 = xPathLexer0.pipe();
      assertEquals("L", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals("|", token8.getTokenText());
  }

  /**
  //Test case number: 50
  /*Coverage entropy=2.058161289156801
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.doubleColon();
      xPathLexer0.getPreviousToken();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer1.doubleColon();
      xPathLexer0.div();
      xPathLexer1.number();
      xPathLexer1.leftBracket();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("V=oN[");
      XPathLexer xPathLexer3 = new XPathLexer("H!N23sSSNqh1<wC%yOq");
      xPathLexer1.colon();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.8896567095919203
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      xPathLexer0.slashes();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("@", token4.getTokenText());
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ov");
      xPathLexer0.nextToken();
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("&", token5.getTokenText());
      
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals("ov", token7.getTokenText());
      assertEquals(15, token7.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
      
      Token token10 = xPathLexer0.slashes();
      assertEquals("|", token10.getTokenText());
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.763556082953633
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.operatorName();
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token0.getTokenType());
      assertNotNull(token0);
      
      xPathLexer0.consume(35);
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.setXPath("W8${,z\"fsLHqS");
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
      
      Token token4 = xPathLexer0.slashes();
      assertEquals(11, token4.getTokenType());
      assertEquals("$", token4.getTokenText());
      
      Token token5 = xPathLexer0.dots();
      assertEquals("{", token5.getTokenText());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(32, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.endPosition();
      Token token7 = xPathLexer0.not();
      assertEquals("z", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals("\"", token8.getTokenText());
      
      xPathLexer1.literal();
      xPathLexer1.dots();
      Token token9 = xPathLexer1.dots();
      assertEquals(13, token9.getTokenType());
      
      Token token10 = xPathLexer1.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer0.pipe();
      assertEquals("f", token11.getTokenText());
      assertEquals(17, token11.getTokenType());
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.6103139193131462
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.star();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.identifier();
      xPathLexer0.identifier();
      xPathLexer0.comma();
      xPathLexer0.dots();
      xPathLexer0.dots();
      xPathLexer0.doubleColon();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.notEquals();
      xPathLexer0.consume((-561));
      xPathLexer0.rightBracket();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.8289039972090777
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer1.pipe();
      xPathLexer0.pipe();
      xPathLexer0.equals();
      xPathLexer2.rightBracket();
      xPathLexer2.dollar();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.notEquals();
      XPathLexer xPathLexer4 = new XPathLexer(")");
      xPathLexer4.plus();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  /**
  //Test case number: 55
  /*Coverage entropy=2.0684002613146664
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      xPathLexer0.slashes();
      XPathLexer xPathLexer1 = new XPathLexer(".Tz5gSrP<t-zeRd");
      XPathLexer xPathLexer2 = new XPathLexer(".Tz5gSrP<t-zeRd");
      xPathLexer2.doubleColon();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer(".Tz5gSrP<t-zeRd");
      xPathLexer5.rightParen();
      xPathLexer5.nextToken();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer3.equals();
      xPathLexer2.nextToken();
      xPathLexer0.pipe();
      xPathLexer4.dots();
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.dollar();
      xPathLexer2.not();
      xPathLexer8.dollar();
      xPathLexer3.comma();
      xPathLexer7.notEquals();
      xPathLexer2.leftBracket();
      Token token0 = xPathLexer4.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.6710133539531344
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("$", token0.getTokenText());
      
      xPathLexer0.consume(35);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("r/&0KbPqs]Wt>");
      Token token2 = xPathLexer1.star();
      assertEquals("r", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("h%X];;3");
      xPathLexer2.identifierOrOperatorName();
      XPathLexer xPathLexer3 = new XPathLexer("h%X];;3");
      Token token3 = xPathLexer3.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("%X];;3", token4.getTokenText());
      
      Token token5 = xPathLexer1.notEquals();
      assertEquals("/&", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      Token token6 = xPathLexer3.equals();
      assertEquals(21, token6.getTokenType());
      assertEquals("%", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer2.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("$#Sq/{[.i?x");
      Token token7 = xPathLexer0.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("");
      Token token8 = xPathLexer2.pipe();
      assertEquals(17, token8.getTokenType());
      assertEquals("X", token8.getTokenText());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("0", token9.getTokenText());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.550348717734792
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.equals();
      assertEquals("*", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("A", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer2.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("Bz", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals("|/", token5.getTokenText());
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.mod();
      Token token6 = xPathLexer1.slashes();
      assertEquals(11, token6.getTokenType());
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.9759725212266894
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      assertEquals("MD", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("!", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token2 = xPathLexer0.doubleColon();
      assertEquals("Qs", token2.getTokenText());
      
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.pipe();
      Token token3 = xPathLexer0.slashes();
      assertEquals("3", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(16, token4.getTokenType());
      assertEquals("@", token4.getTokenText());
      
      xPathLexer0.consume(110);
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer0.pipe();
      Token token6 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("O*S6#ric0\u0002S%NT");
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      assertEquals("O", token7.getTokenText());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("*", token9.getTokenText());
      
      Token token10 = xPathLexer1.rightBracket();
      assertEquals("S", token10.getTokenText());
      assertEquals(4, token10.getTokenType());
  }

  /**
  //Test case number: 59
  /*Coverage entropy=2.147537240920786
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("afm@SOF)?");
      xPathLexer0.or();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("af", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("m", token1.getTokenText());
      
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("@", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("S", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      assertEquals("O", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("F", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.div();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("jGgp");
      xPathLexer2.literal();
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token7 = xPathLexer2.identifierOrOperatorName();
      assertEquals("", token7.getTokenText());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("_7");
      xPathLexer2.consume(5);
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer2.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer3.operatorName();
      xPathLexer0.operatorName();
      Token token12 = xPathLexer1.slashes();
      assertEquals(11, token12.getTokenType());
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.8698967238079471
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals("^", token1.getTokenText());
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("w", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      Token token3 = xPathLexer0.equals();
      assertEquals("R", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("rA");
      Token token4 = xPathLexer0.nextToken();
      assertEquals(17, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      Token token6 = xPathLexer1.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("rA", token7.getTokenText());
      
      xPathLexer1.relationalOperator();
      Token token8 = xPathLexer1.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftBracket();
      assertEquals(3, token9.getTokenType());
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.448600795493856
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("w", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("*", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer0.nextToken();
      assertEquals("A_RL", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer1.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("|", token6.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer(">Lh|| tS?AN}R3TUZ{");
      Token token7 = xPathLexer4.notEquals();
      assertEquals(22, token7.getTokenType());
      assertEquals(">L", token7.getTokenText());
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.3301042751439935
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("/7=_>DQ:<dX'");
      xPathLexer3.relationalOperator();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer4.nextToken();
      xPathLexer4.equals();
      xPathLexer3.nextToken();
      xPathLexer2.pipe();
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer3.dots();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=2.0202747267951513
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("$", token0.getTokenText());
      
      xPathLexer0.consume(35);
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("r/&0KbPqs]Wt>");
      Token token2 = xPathLexer1.star();
      assertEquals("r", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer1.comma();
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer0.doubleColon();
      xPathLexer2.div();
      xPathLexer1.number();
      xPathLexer2.pipe();
      Token token4 = xPathLexer1.leftBracket();
      assertEquals(3, token4.getTokenType());
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer1.nextToken();
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("$#Sq/{[.i?x");
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("|FVX%?O;P");
      Token token8 = xPathLexer3.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("]", token10.getTokenText());
      
      Token token11 = xPathLexer4.number();
      assertEquals(30, token11.getTokenType());
      
      Token token12 = xPathLexer4.equals();
      assertEquals(21, token12.getTokenType());
      assertEquals("$", token12.getTokenText());
      
      Token token13 = xPathLexer0.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.7784424045675338
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ov");
      Token token5 = xPathLexer0.leftParen();
      assertEquals(1, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      Token token8 = xPathLexer1.nextToken();
      assertEquals("ov", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      xPathLexer1.comma();
      Token token11 = xPathLexer0.star();
      assertEquals(20, token11.getTokenType());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 65
  /*Coverage entropy=2.2750580266528395
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.setXPath("h;hX-J@9DVD]@EHQx>k");
      xPathLexer0.and();
      Token token0 = xPathLexer0.rightParen();
      assertEquals("h", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      xPathLexer1.div();
      Token token2 = xPathLexer0.pipe();
      assertEquals(";", token2.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
      
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("h;hX-J@9DVD]@EHQx>k");
      xPathLexer1.and();
      Token token4 = xPathLexer0.leftParen();
      assertEquals(1, token4.getTokenType());
      
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer2.div();
      Token token6 = xPathLexer3.number();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("9", token9.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token10 = xPathLexer4.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      xPathLexer4.mod();
      xPathLexer2.comma();
      xPathLexer4.operatorName();
      Token token11 = xPathLexer3.literal();
      assertNull(token11);
      
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer2.notEquals();
      assertEquals(22, token13.getTokenType());
      
      Token token14 = xPathLexer1.plus();
      assertEquals(5, token14.getTokenType());
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.9256235032267424
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.nextToken();
      xPathLexer2.pipe();
      xPathLexer3.pipe();
      xPathLexer2.star();
      xPathLexer3.dots();
      xPathLexer4.dots();
      XPathLexer xPathLexer5 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer5.doubleColon();
      xPathLexer4.not();
      xPathLexer4.dollar();
      xPathLexer1.comma();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.4842016101482725
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("T<", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("#", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("2", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      assertEquals("R", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer1.rightBracket();
      assertEquals("]", token7.getTokenText());
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer1.rightParen();
      assertEquals("T", token8.getTokenText());
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer1.nextToken();
      assertEquals("<", token9.getTokenText());
      assertEquals(7, token9.getTokenType());
      
      Token token10 = xPathLexer1.minus();
      assertEquals("#", token10.getTokenText());
      assertEquals(6, token10.getTokenType());
      
      Token token11 = xPathLexer1.dots();
      assertEquals("2", token11.getTokenText());
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer1.comma();
      assertEquals(")", token12.getTokenText());
      
      Token token13 = xPathLexer0.star();
      assertEquals(20, token13.getTokenType());
      
      Token token14 = xPathLexer0.comma();
      assertEquals(32, token14.getTokenType());
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.6447494768436965
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (b)", string0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("f", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("*{ZY5w~I*`!#G,");
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("HMO", token3.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (11) (b)");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.nextToken();
      assertEquals(20, token4.getTokenType());
      assertEquals("*", token4.getTokenText());
      
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(3, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      xPathLexer3.pipe();
      Token token7 = xPathLexer3.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer2.star();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.dots();
      assertEquals(13, token8.getTokenType());
      
      xPathLexer0.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token9 = xPathLexer5.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
      assertEquals("(", token10.getTokenText());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.646499255916987
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.rightBracket();
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      Token token3 = xPathLexer0.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("L", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      assertEquals("|", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("ov");
      Token token5 = xPathLexer0.nextToken();
      assertEquals(11, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals("0", token6.getTokenText());
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer1.number();
      assertEquals(30, token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("@", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token9 = xPathLexer0.dots();
      assertEquals("&", token9.getTokenText());
      assertEquals(13, token9.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.comma();
      Token token10 = xPathLexer1.star();
      assertEquals("o", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      assertEquals("|", token11.getTokenText());
  }

  /**
  //Test case number: 70
  /*Coverage entropy=2.1536961031341364
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.leftParen();
      assertEquals("!", token0.getTokenText());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals("q", token1.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      assertEquals("Q", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals("s", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("_X", token4.getTokenText());
      assertEquals(22, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.nextToken();
      Token token7 = xPathLexer1.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer2.number();
      assertEquals(30, token8.getTokenType());
      
      Token token9 = xPathLexer2.nextToken();
      assertEquals("com.werken.saxpath.Token", token9.getTokenText());
      assertEquals(15, token9.getTokenType());
      
      xPathLexer1.relationalOperator();
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      Token token11 = xPathLexer0.leftBracket();
      assertEquals("E", token11.getTokenText());
      assertEquals(3, token11.getTokenType());
  }

  /**
  //Test case number: 71
  /*Coverage entropy=2.977443963220837
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume((-124));
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.div();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=1.794552998533601
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      String string0 = "!3Le.rEC9R75g>N~`=";
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.leftBracket();
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-544));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.whitespace();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.572101078599353
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("M", token1.getTokenText());
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (y)");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer3.nextToken();
      assertEquals((-1), token2.getTokenType());
      
      xPathLexer3.nextToken();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("D!", token3.getTokenText());
      
      Token token4 = xPathLexer1.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (11) (y)");
      String string0 = token0.toString();
      assertEquals("[ (11) (y)", string0);
      
      xPathLexer1.pipe();
      XPathLexer xPathLexer5 = new XPathLexer("[ (11) (y)");
      Token token5 = xPathLexer0.nextToken();
      assertEquals("qQs_XE3", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("^kp3>^ yrTG");
      Token token6 = xPathLexer5.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer5.dollar();
      assertEquals(26, token8.getTokenType());
      assertEquals(" ", token8.getTokenText());
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.7093874537119826
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.pipe();
      assertEquals("2", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("S_");
      Token token5 = xPathLexer1.nextToken();
      assertEquals("S_", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token6 = xPathLexer3.equals();
      assertEquals(21, token6.getTokenType());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      xPathLexer1.pipe();
      Token token8 = xPathLexer3.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.star();
      assertEquals(20, token9.getTokenType());
      
      Token token10 = xPathLexer2.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dollar();
      Token token11 = xPathLexer0.not();
      assertEquals(23, token11.getTokenType());
      assertEquals(")", token11.getTokenText());
      
      Token token12 = xPathLexer4.dollar();
      assertEquals(26, token12.getTokenType());
      
      Token token13 = xPathLexer1.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 75
  /*Coverage entropy=2.08817848917246
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals("^", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      Token token2 = xPathLexer0.notEquals();
      assertEquals(22, token2.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token3 = xPathLexer2.nextToken();
      assertEquals("Bz", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("^", token4.getTokenText());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals("w*A_RL|/0@&|@k1", token5.getTokenText());
      
      xPathLexer1.pipe();
      Token token6 = xPathLexer0.pipe();
      assertEquals("R", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      xPathLexer1.dots();
      xPathLexer1.dollar();
      Token token7 = xPathLexer0.doubleColon();
      assertEquals(19, token7.getTokenType());
      assertEquals("L|", token7.getTokenText());
      
      Token token8 = xPathLexer1.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer0.dollar();
      assertEquals("/", token9.getTokenText());
      
      Token token10 = xPathLexer0.comma();
      assertEquals("0", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer0.literal();
      assertEquals("&|", token11.getTokenText());
      assertEquals(27, token11.getTokenType());
      assertNotNull(token11);
      
      Token token12 = xPathLexer2.dots();
      assertEquals("w", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
  }

  /**
  //Test case number: 76
  /*Coverage entropy=3.2783048396490257
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.identifier();
      assertEquals(15, token0.getTokenType());
      
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.colon();
      assertEquals("]", token1.getTokenText());
      assertEquals(18, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("#2", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.whitespace();
      Token token4 = xPathLexer0.whitespace();
      assertEquals((-2), token4.getTokenType());
      
      Token token5 = xPathLexer0.star();
      assertEquals("?", token5.getTokenText());
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('R', char0);
      
      Token token7 = xPathLexer0.rightBracket();
      assertEquals(4, token7.getTokenType());
      
      Token token8 = xPathLexer0.not();
      assertEquals(23, token8.getTokenType());
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.6369889863952924
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.colon();
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|0@&|@k1");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer2.equals();
      xPathLexer2.nextToken();
      xPathLexer2.pipe();
      xPathLexer3.minus();
      xPathLexer3.star();
      xPathLexer2.dots();
      xPathLexer2.dollar();
      xPathLexer1.not();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=2.114080088253083
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      Token token0 = xPathLexer0.comma();
      assertEquals("3", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("e", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("r", token3.getTokenText());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      assertEquals("EC", token4.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
      
      xPathLexer0.rightBracket();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token6 = xPathLexer0.leftParen();
      assertEquals("N", token6.getTokenText());
      
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertNotNull(token7);
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      assertEquals("~", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals("`=", token9.getTokenText());
      
      xPathLexer0.nextToken();
      Token token10 = xPathLexer0.not();
      assertEquals(23, token10.getTokenType());
      assertEquals("`", token10.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token11 = xPathLexer0.equals();
      assertEquals("=", token11.getTokenText());
      assertEquals(21, token11.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token12 = xPathLexer2.rightBracket();
      assertEquals("c", token12.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token13 = xPathLexer3.dollar();
      assertEquals("c", token13.getTokenText());
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer0.colon();
      assertEquals(18, token14.getTokenType());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.9523617141448197
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.star();
      xPathLexer1.leftParen();
      xPathLexer0.mod();
      xPathLexer1.setXPath("/!9");
      xPathLexer1.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.rightBracket();
      xPathLexer1.getPreviousToken();
      xPathLexer1.consume((-2687));
      XPathLexer xPathLexer4 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer4.at();
      xPathLexer3.at();
      xPathLexer3.operatorName();
      xPathLexer0.comma();
      xPathLexer4.nextToken();
      xPathLexer3.not();
      xPathLexer2.colon();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.div();
      xPathLexer3.rightBracket();
      xPathLexer3.literal();
      // Undeclared exception!
      try { 
        xPathLexer1.slashes();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=2.661366815324857
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.endPosition();
      Token token0 = xPathLexer0.leftBracket();
      token0.toString();
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.LA(18);
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.pipe();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.9632628051953493
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.minus();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.hasMoreChars();
      xPathLexer2.hasMoreChars();
      xPathLexer2.doubleColon();
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.equals();
      xPathLexer2.identifier();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.mod();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.not();
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer3.or();
      xPathLexer6.leftBracket();
      xPathLexer0.comma();
      xPathLexer6.doubleColon();
      xPathLexer4.not();
      xPathLexer5.dollar();
      xPathLexer6.number();
      xPathLexer0.number();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.7881686694745986
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      xPathLexer0.rightBracket();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.dollar();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.dots();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.operatorName();
      xPathLexer0.number();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 83
  /*Coverage entropy=2.1540068770670406
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z^w*A_RL|/0@&|@1");
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      xPathLexer0.setXPath("c5i");
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer2.nextToken();
      xPathLexer1.rightParen();
      xPathLexer2.comma();
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer3.and();
      xPathLexer3.dots();
      xPathLexer3.consume(0);
      xPathLexer3.leftParen();
      xPathLexer4.doubleColon();
      xPathLexer1.div();
      xPathLexer2.number();
      xPathLexer1.pipe();
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token0 = new Token(0, "", 0, 0);
      xPathLexer5.not();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer1.rightBracket();
      xPathLexer6.dots();
      xPathLexer4.mod();
      xPathLexer3.comma();
      xPathLexer3.operatorName();
      xPathLexer6.literal();
      xPathLexer0.dollar();
      xPathLexer1.notEquals();
      xPathLexer6.minus();
      Token token1 = xPathLexer1.operatorName();
      assertNull(token1);
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.763864468277914
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.consume(2205);
      xPathLexer0.setXPath("com.werken.saxpath.Token");
      char char0 = xPathLexer0.LA(107);
      assertEquals('\uFFFF', char0);
      
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      assertEquals(17, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer1.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      boolean boolean0 = xPathLexer1.hasMoreChars();
      assertFalse(boolean0);
      
      Token token2 = xPathLexer0.colon();
      assertEquals("o", token2.getTokenText());
      
      xPathLexer0.operatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.rightBracket();
      xPathLexer2.getPreviousToken();
      xPathLexer0.consume(2977);
      Token token3 = xPathLexer2.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.operatorName();
      Token token4 = xPathLexer2.comma();
      assertEquals(32, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer0.not();
      assertEquals(23, token6.getTokenType());
      
      Token token7 = xPathLexer2.colon();
      assertEquals(18, token7.getTokenType());
      
      xPathLexer0.div();
      Token token8 = xPathLexer2.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.literal();
      Token token9 = xPathLexer0.slashes();
      assertEquals(11, token9.getTokenType());
      
      Token token10 = xPathLexer1.minus();
      assertEquals(6, token10.getTokenType());
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.785284040637012
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.leftParen();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (1) ($)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      Token token2 = xPathLexer0.at();
      assertEquals("/", token2.getTokenText());
      
      String string1 = token1.toString();
      assertEquals("[ (19) (Sq)", string1);
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.and();
      xPathLexer0.identifier();
      Token token4 = xPathLexer1.at();
      assertEquals(16, token4.getTokenType());
      
      xPathLexer2.equals();
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals("[", token6.getTokenText());
      assertEquals(3, token6.getTokenType());
      
      xPathLexer1.pipe();
      Token token7 = xPathLexer2.pipe();
      assertEquals(17, token7.getTokenType());
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.8394356906448848
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      xPathLexer0.leftParen();
      xPathLexer0.consume(35);
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.setXPath("W8${,z\"fsLHqS");
      xPathLexer0.and();
      xPathLexer0.getPreviousToken();
      xPathLexer0.pipe();
      xPathLexer0.slashes();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.consume((-1386));
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.4878837713801243
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("]", token0.getTokenText());
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("#2)Q?]R", token2.getTokenText());
      
      Token token3 = xPathLexer1.notEquals();
      assertEquals("]T", token3.getTokenText());
      
      Token token4 = xPathLexer1.equals();
      assertEquals("<", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("#", token5.getTokenText());
      
      xPathLexer2.nextToken();
      Token token6 = xPathLexer0.not();
      assertEquals("2", token6.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token7 = xPathLexer3.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer2.equals();
      assertEquals(21, token8.getTokenType());
      
      xPathLexer1.nextToken();
      Token token9 = xPathLexer2.pipe();
      assertEquals(17, token9.getTokenType());
      
      Token token10 = xPathLexer0.star();
      assertEquals(")", token10.getTokenText());
      assertEquals(20, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("Q", token11.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.dollar();
      Token token12 = xPathLexer2.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer4.dollar();
      assertEquals(26, token13.getTokenType());
      
      Token token14 = xPathLexer3.comma();
      assertEquals(32, token14.getTokenType());
      
      Token token15 = xPathLexer2.notEquals();
      assertEquals(22, token15.getTokenType());
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.8738134323048214
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer(".K^c7~s#aVX");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("gNpriE*");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      xPathLexer1.nextToken();
      Token token4 = xPathLexer1.pipe();
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("I(tWG,u~mW#k-RPdZ)");
      Token token7 = xPathLexer4.dots();
      assertEquals("I", token7.getTokenText());
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.dollar();
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("t", token9.getTokenText());
      
      Token token10 = xPathLexer4.comma();
      assertEquals("W", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 89
  /*Coverage entropy=3.0920555502882006
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = "kc<}& YWE";
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.consume((-872));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 90
  /*Coverage entropy=2.9519822157590334
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      xPathLexer0.slashes();
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      String string0 = "/!9";
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.8548870605407668
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("z^w*A_RL|/0@&|@1");
      xPathLexer0.currentPosition();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.slashes();
      assertEquals("^", token0.getTokenText());
      
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("*A", token1.getTokenText());
      
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      assertEquals("R", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("eM g");
      Token token3 = xPathLexer1.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("eM", token3.getTokenText());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      Token token5 = xPathLexer1.number();
      assertEquals(30, token5.getTokenType());
      assertEquals("", token5.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.nextToken();
      xPathLexer1.relationalOperator();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals("|", token6.getTokenText());
      
      xPathLexer2.comma();
      Token token7 = xPathLexer2.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.comma();
      assertEquals("/", token8.getTokenText());
      assertEquals(32, token8.getTokenType());
  }

  /**
  //Test case number: 92
  /*Coverage entropy=2.8865036339051326
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.setXPath("");
      xPathLexer0.relationalOperator();
      xPathLexer0.currentPosition();
      xPathLexer0.div();
      Token token0 = xPathLexer0.not();
      assertEquals(23, token0.getTokenType());
      
      Token token1 = xPathLexer0.number();
      assertEquals(30, token1.getTokenType());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.operatorName();
      xPathLexer0.notEquals();
      xPathLexer0.getXPath();
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.consume();
      Token token5 = xPathLexer0.plus();
      assertEquals(5, token5.getTokenType());
      
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertFalse(boolean0);
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      char char0 = xPathLexer0.LA(0);
      assertEquals('\uFFFF', char0);
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.8516546487439924
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (b)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (b)");
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer1.doubleColon();
      String string1 = token1.toString();
      assertEquals("[ (3) (j)", string1);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      String string2 = token2.toString();
      assertEquals("[ (19) ([ )", string2);
      
      Token token3 = xPathLexer1.star();
      assertEquals(20, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer(",YvTI*%@>=rkOx");
      xPathLexer3.and();
      xPathLexer1.identifier();
      Token token4 = xPathLexer0.at();
      assertEquals(16, token4.getTokenType());
      assertEquals("f", token4.getTokenText());
      
      Token token5 = xPathLexer1.equals();
      assertEquals(21, token5.getTokenType());
      
      xPathLexer2.identifierOrOperatorName();
      Token token6 = xPathLexer0.nextToken();
      assertEquals("HMO", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer3.pipe();
      assertEquals(",", token7.getTokenText());
      
      Token token8 = xPathLexer3.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer3.colon();
      assertEquals(18, token9.getTokenType());
  }

  /**
  //Test case number: 94
  /*Coverage entropy=1.8578153962952058
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals("#", token3.getTokenText());
      
      Token token4 = xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (])");
      xPathLexer1.setPreviousToken(token4);
      assertEquals("2", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      Token token5 = xPathLexer1.doubleColon();
      String string0 = token5.toString();
      assertEquals("[ (19) ([ )", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.at();
      token0.toString();
      Token token6 = xPathLexer2.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer3.and();
      Token token7 = xPathLexer0.identifier();
      assertEquals("Q", token7.getTokenText());
      
      Token token8 = xPathLexer1.at();
      assertEquals("(", token8.getTokenText());
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer2.equals();
      assertEquals(21, token9.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (19) ([ )");
      Token token10 = xPathLexer4.identifierOrOperatorName();
      assertEquals(15, token10.getTokenType());
      
      Token token11 = xPathLexer1.nextToken();
      assertEquals(30, token11.getTokenType());
      assertEquals("18", token11.getTokenText());
      
      Token token12 = xPathLexer4.pipe();
      assertEquals("[", token12.getTokenText());
      
      Token token13 = xPathLexer2.pipe();
      assertEquals(17, token13.getTokenType());
      
      Token token14 = xPathLexer0.colon();
      assertEquals("?", token14.getTokenText());
  }

  /**
  //Test case number: 95
  /*Coverage entropy=1.5768826115627301
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      assertEquals("*", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("R", token4.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("/", token5.getTokenText());
      
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token7 = xPathLexer4.doubleColon();
      assertEquals(19, token7.getTokenType());
      
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.dollar();
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      
      Token token11 = xPathLexer1.equals();
      assertEquals(21, token11.getTokenType());
      
      Token token12 = xPathLexer3.comma();
      assertEquals(32, token12.getTokenType());
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.9364555483237424
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(";6:iLl4>XZi{@<:m");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (;)", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals("6", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token3 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer4 = new XPathLexer("[ (");
      Token token4 = xPathLexer4.nextToken();
      assertEquals(3, token4.getTokenType());
      assertEquals("[", token4.getTokenText());
      
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      assertEquals(":i", token5.getTokenText());
      
      Token token6 = xPathLexer4.equals();
      assertEquals(" ", token6.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("YzIeavUp");
      Token token7 = xPathLexer2.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("z^w*A_RL|/0@&|@1");
      Token token8 = xPathLexer5.pipe();
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("(", token9.getTokenText());
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      Token token11 = xPathLexer1.identifierOrOperatorName();
      assertNull(token11);
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
  }

  /**
  //Test case number: 97
  /*Coverage entropy=3.5690227495673046
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      xPathLexer0.mod();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.doubleColon();
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      Token token1 = xPathLexer0.identifier();
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.div();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.pipe();
      assertEquals(17, token4.getTokenType());
      
      xPathLexer0.div();
      Token token5 = xPathLexer0.notEquals();
      assertEquals(22, token5.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.endPosition();
      Token token6 = xPathLexer0.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
      
      Token token8 = xPathLexer0.slashes();
      assertEquals(11, token8.getTokenType());
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.9543337984063291
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.relationalOperator();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.operatorName();
      xPathLexer0.div();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      xPathLexer0.div();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      xPathLexer0.number();
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.pipe();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.consume();
      xPathLexer0.pipe();
      xPathLexer0.div();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.star();
      xPathLexer0.consume();
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      xPathLexer0.setXPath("a(S;Rp$.HwcOef");
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("a", token7.getTokenText());
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.relationalOperator();
      xPathLexer0.isIdentifierChar(')');
      Token token10 = xPathLexer0.comma();
      assertEquals("S", token10.getTokenText());
      assertEquals(32, token10.getTokenType());
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.3887547555221675
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.notEquals();
      xPathLexer1.equals();
      xPathLexer0.pipe();
      xPathLexer2.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.nextToken();
      Token token0 = xPathLexer2.equals();
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer2.pipe();
      assertEquals(17, token2.getTokenType());
      
      Token token3 = xPathLexer0.star();
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer1.dollar();
      Token token5 = xPathLexer2.not();
      assertEquals(23, token5.getTokenType());
      
      Token token6 = xPathLexer4.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer3.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer2.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 100
  /*Coverage entropy=1.8441204402596452
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (b)");
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer1.doubleColon();
      String string0 = token0.toString();
      assertEquals("[ (18) (b)", string0);
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.at();
      String string1 = token1.toString();
      assertEquals("[ (19) ([ )", string1);
      
      xPathLexer1.star();
      xPathLexer2.and();
      xPathLexer1.identifier();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("j", token2.getTokenText());
      
      Token token3 = xPathLexer1.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals(")", token3.getTokenText());
      
      xPathLexer2.identifierOrOperatorName();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("fHMO", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals(")", token5.getTokenText());
      
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(" ", token7.getTokenText());
      assertEquals(20, token7.getTokenType());
  }

  /**
  //Test case number: 101
  /*Coverage entropy=1.6408416359762708
  */
  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      assertEquals("^w*A_RL|/0@&|@k1", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals("^", token2.getTokenText());
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      assertEquals("A", token4.getTokenText());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer0.nextToken();
      assertNotSame(token5, token3);
      
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("R", token6.getTokenText());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 102
  /*Coverage entropy=2.0874507380201983
  */
  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.nextToken();
      assertEquals("*", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("|", token4.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      XPathLexer xPathLexer2 = new XPathLexer(".Tz5gSrP<t-zeRd");
      Token token5 = xPathLexer2.doubleColon();
      assertEquals(".T", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      xPathLexer0.div();
      xPathLexer1.number();
      xPathLexer2.pipe();
      Token token6 = xPathLexer2.nextToken();
      assertEquals(30, token6.getTokenType());
      
      Token token7 = xPathLexer0.not();
      assertEquals(23, token7.getTokenType());
      assertEquals("/", token7.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("");
      xPathLexer0.rightBracket();
      Token token8 = xPathLexer1.pipe();
      assertEquals("B", token8.getTokenText());
      assertEquals(17, token8.getTokenType());
      
      Token token9 = xPathLexer1.equals();
      assertEquals(21, token9.getTokenType());
      assertEquals("z", token9.getTokenText());
      
      Token token10 = xPathLexer0.rightBracket();
      assertEquals(4, token10.getTokenType());
      assertEquals("@", token10.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token11 = xPathLexer5.dollar();
      assertEquals(26, token11.getTokenType());
      
      Token token12 = xPathLexer0.colon();
      assertEquals(18, token12.getTokenType());
      
      Token token13 = xPathLexer2.rightParen();
      assertEquals(2, token13.getTokenType());
      assertEquals("g", token13.getTokenText());
  }

  /**
  //Test case number: 103
  /*Coverage entropy=2.037301172998651
  */
  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD!qQs_XE3@3+-");
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("yMD!qQs_XE3@3+-");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.equals();
      xPathLexer3.nextToken();
      xPathLexer3.nextToken();
      xPathLexer2.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.pipe();
      xPathLexer2.pipe();
      xPathLexer3.star();
      xPathLexer1.dots();
      xPathLexer0.dollar();
      xPathLexer3.not();
      xPathLexer3.dollar();
      xPathLexer0.comma();
      xPathLexer4.leftBracket();
      // Undeclared exception!
      try { 
        xPathLexer4.LA((-818));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 104
  /*Coverage entropy=1.276415670978627
  */
  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.star();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer1.equals();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("m.", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer(".K^c7~s#aVX");
      Token token2 = xPathLexer2.nextToken();
      assertEquals(13, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("{<S/lt>RG");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer4.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer2.equals();
      assertEquals("K", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      xPathLexer3.nextToken();
      xPathLexer1.pipe();
      Token token5 = xPathLexer4.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer3.star();
      assertEquals("{", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token7 = xPathLexer6.dots();
      assertEquals("c", token7.getTokenText());
      
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token8 = xPathLexer6.dollar();
      assertEquals("o", token8.getTokenText());
      
      Token token9 = xPathLexer3.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer1.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 105
  /*Coverage entropy=3.0761281701120717
  */
  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = "kc<}& YWE";
      XPathLexer xPathLexer0 = new XPathLexer("kc<}& YWE");
      xPathLexer0.notEquals();
      xPathLexer0.comma();
      xPathLexer0.mod();
      xPathLexer0.colon();
      xPathLexer0.literal();
      xPathLexer0.consume((-872));
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 106
  /*Coverage entropy=1.1909375327713063
  */
  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.at();
      xPathLexer0.comma();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (b)");
      XPathLexer xPathLexer2 = new XPathLexer("");
      xPathLexer2.nextToken();
      XPathLexer xPathLexer3 = null;
      try {
        xPathLexer3 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  /**
  //Test case number: 107
  /*Coverage entropy=3.0890821810182727
  */
  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.identifier();
      token0.toString();
      xPathLexer0.leftParen();
      token0.toString();
      xPathLexer0.star();
      Token token1 = xPathLexer0.star();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.dollar();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.minus();
      xPathLexer0.hasMoreChars();
      xPathLexer0.getXPath();
      xPathLexer0.setPreviousToken(token1);
      Token token2 = xPathLexer0.mod();
      assertNull(token2);
  }

  /**
  //Test case number: 108
  /*Coverage entropy=1.6380473486259715
  */
  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".K^c7~s#aVX");
      Token token0 = xPathLexer0.colon();
      assertEquals(18, token0.getTokenType());
      assertEquals(".", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("K", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("gNpriE*");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token2 = xPathLexer3.nextToken();
      assertEquals("com.werken.saxpath.XPathLexer", token2.getTokenText());
      
      xPathLexer2.pipe();
      Token token3 = xPathLexer3.pipe();
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("gNpriE*");
      Token token4 = xPathLexer2.dots();
      assertEquals(13, token4.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token5 = xPathLexer4.dollar();
      assertEquals("g", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
      assertEquals("g", token6.getTokenText());
      
      Token token7 = xPathLexer1.comma();
      assertEquals(32, token7.getTokenType());
      assertEquals("N", token7.getTokenText());
      
      Token token8 = xPathLexer2.minus();
      assertEquals(6, token8.getTokenType());
  }

  /**
  //Test case number: 109
  /*Coverage entropy=0.9623351446188083
  */
  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      boolean boolean0 = xPathLexer0.isIdentifierChar('z');
      assertTrue(boolean0);
  }

  /**
  //Test case number: 110
  /*Coverage entropy=1.7164809999820847
  */
  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer0.notEquals();
      assertEquals("]T", token0.getTokenText());
      
      Token token1 = xPathLexer1.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer1.colon();
      assertEquals(18, token2.getTokenType());
      
      xPathLexer1.rightBracket();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("2", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("ov");
      xPathLexer2.leftParen();
      Token token6 = xPathLexer1.rightBracket();
      assertEquals(4, token6.getTokenType());
      
      Token token7 = xPathLexer3.rightParen();
      assertEquals(2, token7.getTokenType());
      assertEquals("o", token7.getTokenText());
      
      Token token8 = xPathLexer2.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.minus();
      assertEquals(6, token9.getTokenType());
      assertEquals(")", token9.getTokenText());
      
      Token token10 = xPathLexer1.dots();
      assertEquals(13, token10.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      Token token11 = xPathLexer4.comma();
      assertEquals("]", token11.getTokenText());
      
      Token token12 = xPathLexer2.star();
      assertEquals(20, token12.getTokenType());
      
      Token token13 = xPathLexer2.comma();
      assertEquals(32, token13.getTokenType());
      
      xPathLexer3.currentPosition();
      Token token14 = xPathLexer3.identifier();
      assertEquals(15, token14.getTokenType());
      assertEquals("v", token14.getTokenText());
  }

  /**
  //Test case number: 111
  /*Coverage entropy=1.898689142131915
  */
  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.pipe();
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.number();
      xPathLexer0.and();
      xPathLexer0.not();
      xPathLexer0.consume(0);
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(7, int0);
      
      xPathLexer0.div();
      xPathLexer0.and();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.not();
      assertEquals(23, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals(26, token4.getTokenType());
      
      xPathLexer0.slashes();
      xPathLexer0.getXPath();
      Token token5 = xPathLexer0.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals(1, token6.getTokenType());
      
      Token token7 = xPathLexer0.rightParen();
      assertEquals(2, token7.getTokenType());
      
      xPathLexer0.consume();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      Token token8 = xPathLexer0.comma();
      assertEquals(32, token8.getTokenType());
      
      xPathLexer0.nextToken();
      Token token9 = xPathLexer0.identifier();
      assertEquals(15, token9.getTokenType());
      
      Token token10 = xPathLexer0.notEquals();
      assertEquals(22, token10.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.relationalOperator();
      xPathLexer0.div();
      Token token11 = xPathLexer0.equals();
      assertEquals(21, token11.getTokenType());
  }

  /**
  //Test case number: 112
  /*Coverage entropy=2.175622930228122
  */
  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.relationalOperator();
      Token token2 = xPathLexer2.nextToken();
      assertEquals("Bz", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("^", token3.getTokenText());
      
      Token token4 = xPathLexer2.nextToken();
      assertEquals("w*A_RL|/0@&|@k1", token4.getTokenText());
      
      xPathLexer1.pipe();
      Token token5 = xPathLexer0.pipe();
      assertEquals("R", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals("L", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer1.dots();
      assertEquals(13, token7.getTokenType());
      
      xPathLexer1.dollar();
      Token token8 = xPathLexer0.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer0.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token12 = xPathLexer3.number();
      assertEquals(30, token12.getTokenType());
      
      Token token13 = xPathLexer3.notEquals();
      assertEquals(22, token13.getTokenType());
  }

  /**
  //Test case number: 113
  /*Coverage entropy=1.6928979825930006
  */
  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (b)", string0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals("j", token1.getTokenText());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("*}ZY5w~I*`M#G,");
      Token token2 = xPathLexer0.nextToken();
      assertEquals("HMO", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (11) (b)");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer1.nextToken();
      assertEquals("*", token3.getTokenText());
      
      Token token4 = xPathLexer3.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer3.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer2.relationalOperator();
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer1.not();
      assertEquals("}", token9.getTokenText());
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer3.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.comma();
      assertEquals(32, token11.getTokenType());
  }

  /**
  //Test case number: 114
  /*Coverage entropy=2.832253059556326
  */
  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.colon();
      Token token2 = xPathLexer0.rightBracket();
      assertEquals(4, token2.getTokenType());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("A_", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("R", token4.getTokenText());
      
      Token token5 = xPathLexer0.pipe();
      assertEquals("L", token5.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token6 = xPathLexer0.colon();
      assertEquals("|", token6.getTokenText());
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer1.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token8 = xPathLexer4.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer4.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer0.number();
      assertEquals(30, token11.getTokenType());
      assertEquals("", token11.getTokenText());
      
      Token token12 = xPathLexer1.equals();
      assertEquals(21, token12.getTokenType());
      
      Token token13 = xPathLexer3.comma();
      assertEquals(32, token13.getTokenType());
  }

  /**
  //Test case number: 115
  /*Coverage entropy=3.093328227328023
  */
  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.consume();
      xPathLexer0.consume(4335);
      xPathLexer0.setXPath("");
      xPathLexer0.comma();
      xPathLexer0.rightParen();
      xPathLexer0.relationalOperator();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      xPathLexer0.rightBracket();
      xPathLexer0.plus();
      xPathLexer0.leftParen();
      xPathLexer0.number();
      xPathLexer0.whitespace();
      xPathLexer0.colon();
      xPathLexer0.leftBracket();
      xPathLexer0.colon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifier();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1294));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  /**
  //Test case number: 116
  /*Coverage entropy=3.341512030608876
  */
  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.not();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (23) (b)", string0);
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("f", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("H", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.dollar();
      assertEquals("M", token4.getTokenText());
      
      Token token5 = xPathLexer0.identifier();
      assertEquals(15, token5.getTokenType());
      assertEquals("O", token5.getTokenText());
      
      Token token6 = xPathLexer0.minus();
      assertEquals(")", token6.getTokenText());
      
      Token token7 = xPathLexer0.comma();
      assertEquals(32, token7.getTokenType());
      
      Token token8 = xPathLexer0.at();
      assertEquals(16, token8.getTokenType());
      
      Token token9 = xPathLexer0.rightBracket();
      assertEquals(4, token9.getTokenType());
      
      Token token10 = xPathLexer0.minus();
      assertEquals(6, token10.getTokenType());
      
      xPathLexer0.not();
      char char0 = xPathLexer0.LA(2080);
      assertEquals('\uFFFF', char0);
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
  }

  /**
  //Test case number: 117
  /*Coverage entropy=1.7114839649213291
  */
  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      xPathLexer0.slashes();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("8");
      xPathLexer0.star();
      xPathLexer0.at();
      XPathLexer xPathLexer2 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer2.comma();
      xPathLexer1.leftParen();
      xPathLexer2.setXPath("%(V^BuK$U");
      xPathLexer2.and();
      Token token1 = xPathLexer0.colon();
      xPathLexer2.dots();
      xPathLexer1.nextToken();
      xPathLexer2.nextToken();
      xPathLexer0.not();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.relationalOperator();
      xPathLexer0.minus();
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.equals();
      xPathLexer4.rightBracket();
      xPathLexer3.dollar();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer5.colon();
      Token token2 = xPathLexer1.rightParen();
      assertFalse(token2.equals((Object)token1));
  }

  /**
  //Test case number: 118
  /*Coverage entropy=2.1253177896772533
  */
  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("PnYhS`hNo");
      Token token0 = xPathLexer0.equals();
      assertEquals("P", token0.getTokenText());
      
      xPathLexer0.leftParen();
      xPathLexer0.div();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      
      Token token2 = xPathLexer0.not();
      assertEquals("h", token2.getTokenText());
      
      Token token3 = xPathLexer0.literal();
      assertNull(token3);
      
      xPathLexer0.relationalOperator();
      xPathLexer0.literal();
      xPathLexer0.dots();
      Token token4 = xPathLexer0.number();
      assertEquals(30, token4.getTokenType());
      
      xPathLexer0.identifier();
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      xPathLexer0.leftParen();
      Token token5 = xPathLexer0.comma();
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token7 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token7.getTokenType());
      assertNotNull(token7);
      
      xPathLexer0.pipe();
      xPathLexer0.star();
      xPathLexer0.getPreviousToken();
      Token token8 = xPathLexer0.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer0.pipe();
      assertEquals(17, token9.getTokenType());
      
      xPathLexer0.star();
      Token token10 = xPathLexer0.equals();
      assertEquals(21, token10.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.hasMoreChars();
      xPathLexer0.and();
      xPathLexer0.consume();
      Token token11 = xPathLexer0.rightBracket();
      assertEquals(4, token11.getTokenType());
      
      Token token12 = xPathLexer0.not();
      assertEquals(23, token12.getTokenType());
      
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('u');
      assertTrue(boolean0);
      
      xPathLexer0.operatorName();
      Token token14 = xPathLexer0.star();
      assertEquals(20, token14.getTokenType());
  }

  /**
  //Test case number: 119
  /*Coverage entropy=1.6697649680706546
  */
  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("yMD![QsUXE3@3+-");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.at();
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (y)");
      xPathLexer1.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      token0.toString();
      xPathLexer3.nextToken();
      xPathLexer3.equals();
      xPathLexer0.nextToken();
      xPathLexer1.pipe();
      xPathLexer2.pipe();
      xPathLexer3.doubleColon();
      xPathLexer0.star();
      xPathLexer3.dollar();
      xPathLexer3.doubleColon();
      xPathLexer0.not();
      xPathLexer3.dollar();
      xPathLexer3.comma();
      Token token1 = xPathLexer2.relationalOperator();
      assertNull(token1);
  }

  /**
  //Test case number: 120
  /*Coverage entropy=1.9070140918093839
  */
  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer0.minus();
      xPathLexer0.leftParen();
      xPathLexer0.at();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.plus();
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.slashes();
      xPathLexer2.hasMoreChars();
      xPathLexer2.hasMoreChars();
      xPathLexer2.doubleColon();
      xPathLexer0.doubleColon();
      xPathLexer0.equals();
      xPathLexer2.identifier();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.mod();
      xPathLexer3.nextToken();
      xPathLexer3.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.pipe();
      xPathLexer3.star();
      xPathLexer3.dots();
      xPathLexer0.dollar();
      xPathLexer1.doubleColon();
      xPathLexer2.not();
      xPathLexer3.dollar();
      XPathLexer xPathLexer4 = new XPathLexer("%Lk{8w\"V4*A|;+e");
      xPathLexer4.comma();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  /**
  //Test case number: 121
  /*Coverage entropy=1.9743417337030305
  */
  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("]", token0.getTokenText());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.at();
      assertEquals("<", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer1.identifierOrOperatorName();
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.slashes();
      assertEquals("#", token2.getTokenText());
      
      xPathLexer1.hasMoreChars();
      xPathLexer0.hasMoreChars();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals("]T", token3.getTokenText());
      
      Token token4 = xPathLexer1.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer1.equals();
      assertEquals("2", token5.getTokenText());
      
      Token token6 = xPathLexer0.identifier();
      assertEquals("2", token6.getTokenText());
      assertEquals(15, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer2.mod();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(")", token7.getTokenText());
      assertEquals(2, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      Token token8 = xPathLexer5.slashes();
      assertEquals(11, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("]", token9.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("]T<#2)Q?]R");
      xPathLexer4.or();
      Token token10 = xPathLexer3.leftBracket();
      assertEquals(3, token10.getTokenType());
      
      Token token11 = xPathLexer6.comma();
      assertEquals("]", token11.getTokenText());
      assertEquals(32, token11.getTokenType());
      
      XPathLexer xPathLexer7 = new XPathLexer("t0{##{?x");
      xPathLexer7.operatorName();
      Token token12 = xPathLexer3.literal();
      assertNull(token12);
      
      xPathLexer7.literal();
      Token token13 = xPathLexer0.literal();
      assertNull(token13);
      
      Token token14 = xPathLexer5.equals();
      assertEquals(21, token14.getTokenType());
      
      xPathLexer3.rightParen();
      Token token15 = xPathLexer2.pipe();
      assertEquals(17, token15.getTokenType());
      
      Token token16 = xPathLexer3.dots();
      assertEquals(13, token16.getTokenType());
  }

  /**
  //Test case number: 122
  /*Coverage entropy=1.5136539297652432
  */
  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.leftParen();
      xPathLexer0.relationalOperator();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer("");
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("com.werken.saxpath.Token");
      Token token6 = xPathLexer2.colon();
      assertEquals(18, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("");
      Token token8 = xPathLexer2.doubleColon();
      assertEquals(19, token8.getTokenType());
      
      Token token9 = xPathLexer4.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 123
  /*Coverage entropy=3.181090955737749
  */
  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.notEquals();
      assertEquals(22, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token1 = xPathLexer1.pipe();
      assertEquals(17, token1.getTokenType());
      assertEquals("B", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token2 = xPathLexer2.leftParen();
      assertEquals("B", token2.getTokenText());
      
      Token token3 = xPathLexer2.equals();
      assertEquals("z", token3.getTokenText());
      assertEquals(21, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      Token token5 = xPathLexer2.minus();
      assertEquals("^", token5.getTokenText());
      assertEquals(6, token5.getTokenType());
      
      Token token6 = xPathLexer1.dots();
      assertEquals("z", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
  }

  /**
  //Test case number: 124
  /*Coverage entropy=2.2167051517978416
  */
  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!3Le.rEC9R75g>N~`=");
      Token token0 = xPathLexer0.rightBracket();
      assertEquals("!", token0.getTokenText());
      
      xPathLexer0.comma();
      xPathLexer0.or();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      Token token1 = xPathLexer0.dollar();
      assertEquals("L", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.doubleColon();
      assertEquals(19, token4.getTokenType());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals(4, token5.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.number();
      Token token6 = xPathLexer0.star();
      assertEquals("R", token6.getTokenText());
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("75", token7.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.mod();
      xPathLexer0.or();
      xPathLexer0.leftParen();
      Token token8 = xPathLexer0.leftParen();
      assertEquals(">", token8.getTokenText());
      
      Token token9 = xPathLexer0.identifierOrOperatorName();
      assertNull(token9);
      
      Token token10 = xPathLexer0.dots();
      assertEquals(13, token10.getTokenType());
      assertEquals("N", token10.getTokenText());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(18, int0);
      
      xPathLexer0.nextToken();
      Token token11 = xPathLexer0.notEquals();
      assertEquals("~`", token11.getTokenText());
      
      xPathLexer0.mod();
      Token token12 = xPathLexer0.comma();
      assertEquals(32, token12.getTokenType());
      
      xPathLexer0.operatorName();
      xPathLexer0.literal();
      Token token13 = xPathLexer0.notEquals();
      assertEquals(22, token13.getTokenType());
      
      xPathLexer0.plus();
      Token token14 = xPathLexer0.colon();
      assertEquals(18, token14.getTokenType());
      
      Token token15 = xPathLexer0.plus();
      assertEquals(5, token15.getTokenType());
  }

  /**
  //Test case number: 125
  /*Coverage entropy=1.8942291807273048
  */
  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      Token token1 = xPathLexer0.star();
      assertEquals("o", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
      
      xPathLexer0.equals();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer(".K^c7~s#aVX");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("gNpriE*");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.nextToken();
      Token token3 = xPathLexer2.equals();
      assertEquals(21, token3.getTokenType());
      assertEquals("g", token3.getTokenText());
      
      xPathLexer2.and();
      Token token4 = xPathLexer1.pipe();
      assertEquals("K", token4.getTokenText());
      
      Token token5 = xPathLexer2.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer3.star();
      assertEquals(20, token6.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("I(tWG,u~mW#k-RPdZ)");
      Token token7 = xPathLexer4.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer0.dollar();
      Token token8 = xPathLexer4.not();
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer4.dollar();
      assertEquals("t", token9.getTokenText());
      assertEquals(26, token9.getTokenType());
      
      Token token10 = xPathLexer4.comma();
      assertEquals(32, token10.getTokenType());
      assertEquals("W", token10.getTokenText());
  }

  /**
  //Test case number: 126
  /*Coverage entropy=1.5629595060363402
  */
  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token0 = xPathLexer0.notEquals();
      assertEquals("Bz", token0.getTokenText());
      
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("^", token1.getTokenText());
      
      xPathLexer0.notEquals();
      Token token2 = xPathLexer0.equals();
      assertEquals("A", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("_", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer2.nextToken();
      assertEquals("Bz", token4.getTokenText());
      assertEquals(15, token4.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token5 = xPathLexer4.star();
      assertEquals(20, token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals(22, token6.getTokenType());
      
      xPathLexer0.mod();
      Token token7 = xPathLexer1.slashes();
      assertEquals(11, token7.getTokenType());
  }

  /**
  //Test case number: 127
  /*Coverage entropy=2.6522793238221736
  */
  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.Token");
      xPathLexer0.literal();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  /**
  //Test case number: 128
  /*Coverage entropy=3.3947095151831044
  */
  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer1 = new XPathLexer("[ (13) ($)");
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.doubleColon();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.and();
      xPathLexer0.identifier();
      xPathLexer0.at();
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer1.isIdentifierStartChar('\\');
      xPathLexer2.doubleColon();
      Token token1 = xPathLexer2.and();
      assertNull(token1);
  }

  /**
  //Test case number: 129
  /*Coverage entropy=1.9191712252736077
  */
  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      assertEquals(7, token2.getTokenType());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.pipe();
      assertEquals("2", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("S_");
      Token token4 = xPathLexer1.nextToken();
      assertEquals("S_", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("4yQjEpN2D");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer2.doubleColon();
      assertEquals("4y", token5.getTokenText());
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      Token token7 = xPathLexer0.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals(")", token7.getTokenText());
      
      String string1 = token6.toString();
      assertEquals("[ (15) (QjEpN2D)", string1);
      
      Token token8 = xPathLexer3.nextToken();
      assertEquals((-1), token8.getTokenType());
      
      Token token9 = xPathLexer2.plus();
      assertEquals(5, token9.getTokenType());
      
      xPathLexer1.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("");
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.not();
      Token token10 = xPathLexer5.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("Yp");
      Token token11 = xPathLexer0.whitespace();
      assertEquals("", token11.getTokenText());
      assertEquals((-2), token11.getTokenType());
      
      Token token12 = xPathLexer1.pipe();
      assertEquals(17, token12.getTokenType());
      
      Token token13 = xPathLexer6.dots();
      assertEquals(13, token13.getTokenType());
      assertEquals("Y", token13.getTokenText());
      
      xPathLexer1.dollar();
      Token token14 = xPathLexer6.slashes();
      assertEquals(11, token14.getTokenType());
      assertEquals("p", token14.getTokenText());
  }

  /**
  //Test case number: 130
  /*Coverage entropy=1.8704598008188862
  */
  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals("T", token1.getTokenText());
      assertEquals(20, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("<", token2.getTokenText());
      
      xPathLexer0.equals();
      Token token3 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("S_");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("S_", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("S_");
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token5 = xPathLexer1.doubleColon();
      assertEquals(19, token5.getTokenType());
      
      Token token6 = xPathLexer0.nextToken();
      assertEquals(")", token6.getTokenText());
      assertEquals(2, token6.getTokenType());
      
      Token token7 = xPathLexer2.equals();
      assertEquals(21, token7.getTokenType());
      assertEquals("S", token7.getTokenText());
      
      String string1 = token3.toString();
      assertEquals("[ (17) (2)", string1);
      
      xPathLexer1.nextToken();
      Token token8 = xPathLexer2.plus();
      assertEquals(5, token8.getTokenType());
      assertEquals("_", token8.getTokenText());
      
      xPathLexer3.pipe();
      XPathLexer xPathLexer4 = new XPathLexer("[ (18) (])");
      XPathLexer xPathLexer5 = new XPathLexer("[ (18) (])");
      Token token9 = xPathLexer5.not();
      assertEquals(23, token9.getTokenType());
      assertEquals("[", token9.getTokenText());
      
      Token token10 = xPathLexer1.rightBracket();
      assertEquals(4, token10.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer(")");
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.whitespace();
      xPathLexer4.pipe();
      Token token11 = xPathLexer3.dots();
      assertEquals(13, token11.getTokenType());
      
      Token token12 = xPathLexer6.dollar();
      assertEquals(26, token12.getTokenType());
      assertEquals(")", token12.getTokenText());
      
      Token token13 = xPathLexer0.slashes();
      assertEquals("Q", token13.getTokenText());
      assertEquals(11, token13.getTokenType());
  }

  /**
  //Test case number: 131
  /*Coverage entropy=3.4839210327292944
  */
  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("^", token0.getTokenText());
      
      xPathLexer0.colon();
      xPathLexer0.rightBracket();
      Token token1 = xPathLexer0.notEquals();
      assertEquals("A_", token1.getTokenText());
      
      Token token2 = xPathLexer0.equals();
      assertEquals("R", token2.getTokenText());
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals("L", token3.getTokenText());
      assertEquals(17, token3.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("ov");
      xPathLexer0.rightBracket();
      xPathLexer0.rightBracket();
      Token token4 = xPathLexer1.dollar();
      assertEquals("o", token4.getTokenText());
      
      Token token5 = xPathLexer0.rightBracket();
      assertEquals("0", token5.getTokenText());
      
      Token token6 = xPathLexer1.minus();
      assertEquals("v", token6.getTokenText());
      assertEquals(6, token6.getTokenType());
      
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer("ov");
      Token token7 = xPathLexer2.plus();
      assertEquals("o", token7.getTokenText());
      assertEquals(5, token7.getTokenType());
      
      Token token8 = xPathLexer1.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token9 = xPathLexer3.at();
      assertEquals(16, token9.getTokenType());
      
      Token token10 = xPathLexer2.colon();
      assertEquals(18, token10.getTokenType());
      assertEquals("v", token10.getTokenText());
      
      Token token11 = xPathLexer0.dollar();
      assertEquals(26, token11.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Bz^w*A_RL|/0@&|@k1");
      Token token12 = xPathLexer4.dots();
      assertEquals("B", token12.getTokenText());
      assertEquals(13, token12.getTokenType());
      
      Token token13 = xPathLexer4.literal();
      assertNull(token13);
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      xPathLexer4.or();
      Token token14 = xPathLexer5.notEquals();
      assertEquals(22, token14.getTokenType());
  }

  /**
  //Test case number: 132
  /*Coverage entropy=1.5516127541029598
  */
  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      xPathLexer0.star();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(7, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (])");
      xPathLexer1.equals();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("[ (18) (])");
      Token token3 = xPathLexer2.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("[ (18) (])");
      Token token4 = xPathLexer1.nextToken();
      assertEquals("(", token4.getTokenText());
      
      Token token5 = xPathLexer4.equals();
      assertEquals("[", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      xPathLexer2.nextToken();
      Token token6 = xPathLexer1.pipe();
      assertEquals("1", token6.getTokenText());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      Token token8 = xPathLexer4.star();
      assertEquals(20, token8.getTokenType());
      assertEquals(" ", token8.getTokenText());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      XPathLexer xPathLexer6 = new XPathLexer("");
      XPathLexer xPathLexer7 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer7.dollar();
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer1.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 133
  /*Coverage entropy=3.2704456313027324
  */
  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.leftParen();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      xPathLexer0.relationalOperator();
      xPathLexer0.star();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      xPathLexer0.comma();
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      
      xPathLexer0.and();
      Token token4 = xPathLexer0.comma();
      assertEquals(32, token4.getTokenType());
      
      xPathLexer0.and();
      xPathLexer0.pipe();
      xPathLexer0.and();
      xPathLexer0.operatorName();
      xPathLexer0.pipe();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer0.star();
      assertEquals(20, token6.getTokenType());
      
      Token token7 = xPathLexer0.notEquals();
      assertEquals(22, token7.getTokenType());
      
      Token token8 = xPathLexer0.rightParen();
      assertEquals(2, token8.getTokenType());
      
      Token token9 = xPathLexer0.dots();
      assertEquals(13, token9.getTokenType());
  }

  /**
  //Test case number: 134
  /*Coverage entropy=1.4192236979624147
  */
  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      Token token0 = xPathLexer0.dots();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (13) ())", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      
      xPathLexer0.nextToken();
      Token token4 = xPathLexer0.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("");
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      xPathLexer1.not();
      Token token6 = xPathLexer0.dollar();
      assertEquals(26, token6.getTokenType());
      
      Token token7 = xPathLexer1.not();
      assertEquals(23, token7.getTokenType());
  }

  /**
  //Test case number: 135
  /*Coverage entropy=1.8799382325231515
  */
  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      xPathLexer0.not();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.slashes();
      assertEquals("o", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".Tz5gSrP<t-zeRd");
      XPathLexer xPathLexer2 = new XPathLexer(".Tz5gSrP<t-zeRd");
      Token token1 = xPathLexer2.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals(".T", token1.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer(".Tz5gSrP<t-zeRd");
      Token token2 = xPathLexer5.nextToken();
      assertEquals(".", token2.getTokenText());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token3.getTokenText());
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer3.equals();
      assertEquals(21, token4.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token5 = xPathLexer0.pipe();
      assertEquals(17, token5.getTokenType());
      
      Token token6 = xPathLexer6.star();
      assertEquals(20, token6.getTokenType());
      assertEquals("c", token6.getTokenText());
      
      Token token7 = xPathLexer2.dots();
      assertEquals(13, token7.getTokenType());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer3.dollar();
      Token token8 = xPathLexer1.not();
      assertEquals(".", token8.getTokenText());
      assertEquals(23, token8.getTokenType());
      
      Token token9 = xPathLexer1.dollar();
      assertEquals(26, token9.getTokenType());
      assertEquals("T", token9.getTokenText());
      
      Token token10 = xPathLexer3.comma();
      assertEquals(32, token10.getTokenType());
      
      XPathLexer xPathLexer9 = new XPathLexer();
      xPathLexer9.notEquals();
      Token token11 = xPathLexer6.notEquals();
      assertEquals(22, token11.getTokenType());
      assertEquals("om", token11.getTokenText());
  }

  /**
  //Test case number: 136
  /*Coverage entropy=1.895880607417624
  */
  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("com.werken.saxpath.XPathLexer");
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.not();
      assertEquals("c", token0.getTokenText());
      
      xPathLexer0.operatorName();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(".Tz5gSrP<t-zeRd");
      XPathLexer xPathLexer2 = new XPathLexer(".Tz5gSrP<t-zeRd");
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals(".T", token2.getTokenText());
      
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer5 = new XPathLexer(".Tz5gSrP<t-zeRd");
      Token token3 = xPathLexer5.nextToken();
      assertEquals(13, token3.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("com.werken.saxpath.XPathLexer");
      XPathLexer xPathLexer7 = new XPathLexer();
      Token token4 = xPathLexer0.nextToken();
      assertEquals("m.werken.saxpath.XPathLexer", token4.getTokenText());
      
      Token token5 = xPathLexer3.equals();
      assertEquals(21, token5.getTokenType());
      
      Token token6 = xPathLexer2.nextToken();
      assertEquals(15, token6.getTokenType());
      
      Token token7 = xPathLexer0.pipe();
      assertEquals(17, token7.getTokenType());
      
      xPathLexer6.star();
      Token token8 = xPathLexer4.dots();
      assertEquals("c", token8.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      xPathLexer8.dollar();
      Token token9 = xPathLexer2.not();
      assertEquals(23, token9.getTokenType());
      
      Token token10 = xPathLexer8.dollar();
      assertEquals(26, token10.getTokenType());
      
      Token token11 = xPathLexer3.comma();
      assertEquals(32, token11.getTokenType());
      
      Token token12 = xPathLexer7.notEquals();
      assertEquals(22, token12.getTokenType());
  }

  /**
  //Test case number: 137
  /*Coverage entropy=1.569443074902817
  */
  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("$#Sq/{[.i?x");
      xPathLexer0.comma();
      xPathLexer0.consume(35);
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.star();
      Token token1 = xPathLexer1.at();
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("$#Sq/{[.i?x");
      Token token2 = xPathLexer2.comma();
      assertEquals(32, token2.getTokenType());
      assertEquals("$", token2.getTokenText());
      
      xPathLexer0.leftParen();
      XPathLexer xPathLexer3 = new XPathLexer("$#Sq/{[.i?x");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer3.nextToken();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer4.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer2.pipe();
      Token token6 = xPathLexer3.pipe();
      assertEquals("#", token6.getTokenText());
      assertEquals(17, token6.getTokenType());
      
      Token token7 = xPathLexer1.star();
      assertEquals(20, token7.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer("");
      Token token8 = xPathLexer5.dots();
      assertEquals(13, token8.getTokenType());
      
      XPathLexer xPathLexer6 = new XPathLexer("$#Sq/{[.i?x");
      Token token9 = xPathLexer6.dollar();
      assertEquals("$", token9.getTokenText());
      
      Token token10 = xPathLexer5.notEquals();
      assertEquals(22, token10.getTokenType());
      
      Token token11 = xPathLexer4.plus();
      assertEquals(5, token11.getTokenType());
  }

  /**
  //Test case number: 138
  /*Coverage entropy=2.8595781981260493
  */
  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      
      Token token2 = xPathLexer0.identifier();
      assertEquals(15, token2.getTokenType());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
  }

  /**
  //Test case number: 139
  /*Coverage entropy=1.239404926613619
  */
  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("afm@SOF)?");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("afm", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  /**
  //Test case number: 140
  /*Coverage entropy=1.620837333960261
  */
  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bjfHMO)");
      Token token0 = xPathLexer0.slashes();
      token0.toString();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (11) (b)", string0);
      
      Token token1 = xPathLexer0.equals();
      assertEquals("j", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("fHMO", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("[ (11) (b)");
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer2.equals();
      assertEquals(21, token4.getTokenType());
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer0.pipe();
      Token token6 = xPathLexer1.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("[", token6.getTokenText());
      
      Token token7 = xPathLexer0.star();
      assertEquals(20, token7.getTokenType());
      
      Token token8 = xPathLexer0.dots();
      assertEquals(13, token8.getTokenType());
      
      Token token9 = xPathLexer0.not();
      assertEquals(23, token9.getTokenType());
      
      xPathLexer2.dollar();
      Token token10 = xPathLexer2.dollar();
      assertEquals(26, token10.getTokenType());
  }

  /**
  //Test case number: 141
  /*Coverage entropy=1.204954205168999
  */
  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals("<", token2.getTokenText());
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("#2)Q?]R", token3.getTokenText());
      
      Token token4 = xPathLexer0.notEquals();
      assertEquals("#2", token4.getTokenText());
      
      Token token5 = xPathLexer0.equals();
      assertEquals(")", token5.getTokenText());
      assertEquals(21, token5.getTokenType());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("[ (18) (])");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("]T<#2)Q?]R");
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals("]", token6.getTokenText());
      
      Token token7 = xPathLexer2.not();
      assertEquals("T", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.notEquals();
      assertEquals(22, token8.getTokenType());
  }

  /**
  //Test case number: 142
  /*Coverage entropy=1.7987111633881971
  */
  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]T<#2)Q?]R");
      Token token0 = xPathLexer0.colon();
      token0.toString();
      token0.toString();
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("T", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(7, token2.getTokenType());
      assertEquals("<", token2.getTokenText());
      
      Token token3 = xPathLexer0.equals();
      assertEquals("#", token3.getTokenText());
      
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("S_");
      Token token4 = xPathLexer1.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("S_", token4.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.doubleColon();
      xPathLexer1.nextToken();
      xPathLexer3.equals();
      String string0 = token0.toString();
      assertEquals("[ (18) (])", string0);
      
      Token token5 = xPathLexer2.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      xPathLexer3.pipe();
      xPathLexer2.div();
      Token token6 = xPathLexer0.pipe();
      assertEquals(17, token6.getTokenType());
      assertEquals(")", token6.getTokenText());
      
      Token token7 = xPathLexer0.not();
      assertEquals("Q", token7.getTokenText());
      assertEquals(23, token7.getTokenType());
      
      Token token8 = xPathLexer0.dollar();
      assertEquals(26, token8.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("-");
      Token token9 = xPathLexer2.notEquals();
      assertEquals(22, token9.getTokenType());
      
      Token token10 = xPathLexer0.plus();
      assertEquals(5, token10.getTokenType());
      
      Token token11 = xPathLexer0.dots();
      assertEquals(13, token11.getTokenType());
      assertEquals("R", token11.getTokenText());
  }
}
