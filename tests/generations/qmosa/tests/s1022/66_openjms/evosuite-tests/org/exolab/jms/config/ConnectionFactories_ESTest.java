/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 19 03:56:58 GMT 2019
 */

package org.exolab.jms.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import java.net.URI;
import java.nio.CharBuffer;
import java.util.Collection;
import java.util.Enumeration;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.exolab.castor.xml.Marshaller;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.ConnectionFactory;
import org.exolab.jms.config.QueueConnectionFactory;
import org.exolab.jms.config.TopicConnectionFactory;
import org.exolab.jms.config.XAConnectionFactory;
import org.exolab.jms.config.XAQueueConnectionFactory;
import org.exolab.jms.config.XATopicConnectionFactory;
import org.junit.runner.RunWith;
import org.xml.sax.ContentHandler;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.DefaultHandler2;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.LocatorImpl;
import org.xml.sax.helpers.ParserAdapter;
import org.xml.sax.helpers.XMLFilterImpl;
import org.xml.sax.helpers.XMLReaderAdapter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionFactories_ESTest extends ConnectionFactories_ESTest_scaffolding {

  /**
  //Test case number: 0
  /*Coverage entropy=2.5068077022515487
  */
  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.isValid();
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      try { 
        connectionFactories0.validate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot validate a null Object.
         //
         verifyException("org.exolab.castor.xml.Validator", e);
      }
  }

  /**
  //Test case number: 1
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[20];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      boolean boolean0 = connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 2
  /*Coverage entropy=2.035639204717278
  */
  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = new XATopicConnectionFactory[1];
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory(0);
      connectionFactories0.setXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      int int1 = 52;
      try { 
        connectionFactories0.getXAConnectionFactory(1527);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 3
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      xMLReaderAdapter0.endDocument();
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      int int0 = connectionFactories0.getQueueConnectionFactoryCount();
      assertEquals(8, int0);
  }

  /**
  //Test case number: 4
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      connectionFactories0.addXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
      connectionFactories0.getTopicConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[2];
      xAQueueConnectionFactoryArray0[0] = null;
      xAQueueConnectionFactoryArray0[1] = null;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 5
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException(">JZ@&ta|v", "SMkBr5xnIC1Jr_4}N", "[8ja~.Dng.Obe8c;", 0, 0);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0, sAXParseException0);
      sAXParseException0.setStackTrace(stackTraceElementArray0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException2 = new SAXParseException(">JZ@&ta|v", "SMkBr5xnIC1Jr_4}N", "SMkBr5xnIC1Jr_4}N", 0, 0);
      SAXParseException sAXParseException3 = new SAXParseException(">JZ@&ta|v", ">JZ@&ta|v", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getLineNumber();
      sAXParseException1.getMessage();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      sAXParseException1.getLineNumber();
      sAXParseException0.getLineNumber();
      sAXParseException0.getSystemId();
      sAXParseException2.toString();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory(0);
      int int0 = connectionFactories0.getXAQueueConnectionFactoryCount();
      assertEquals(1, int0);
  }

  /**
  //Test case number: 6
  /*Coverage entropy=1.7741057932992026
  */
  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException(">JZ@&ta|v", "SMkBr5xnIC1Jr_4}N", "[8ja~.Dng.Obe8c;", 26, 26);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "R", "R", 0, 0, sAXParseException0);
      sAXParseException0.setStackTrace(stackTraceElementArray0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException2 = new SAXParseException(">JZ@&ta|v", "SMkBr5xnIC1Jr_4}N", "SMkBr5xnIC1Jr_4}N", 0, 26);
      SAXParseException sAXParseException3 = new SAXParseException(">JZ@&ta|v", ">JZ@&ta|v", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException1.getLineNumber();
      sAXParseException0.getLineNumber();
      sAXParseException0.getSystemId();
      sAXParseException2.toString();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[1];
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      xAQueueConnectionFactoryArray0[0] = xAQueueConnectionFactory0;
      connectionFactories0.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      XAQueueConnectionFactory xAQueueConnectionFactory1 = connectionFactories0.getXAQueueConnectionFactory(0);
      assertNull(xAQueueConnectionFactory1.getName());
  }

  /**
  //Test case number: 7
  /*Coverage entropy=1.394714983677679
  */
  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = null;
      connectionFactories0.addXAConnectionFactory((XAConnectionFactory) null);
      connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
      try { 
        connectionFactories0.setXAConnectionFactory(1074, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 8
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(0, queueConnectionFactory0);
      connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
      connectionFactories0.getConnectionFactory();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 9
  /*Coverage entropy=2.253297930766516
  */
  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[2];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.getQueueConnectionFactoryCount();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXATopicConnectionFactory(xATopicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 10
  /*Coverage entropy=2.4990104312963837
  */
  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.exolab.castor.1arser.validation", true);
      mockFileOutputStream0.release();
      mockFileOutputStream0.getChannel();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      mockFileOutputStream0.flush();
      mockFileOutputStream0.release();
      Object object0 = new Object();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile("");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = true;
      ConnectionFactory[] connectionFactoryArray0 = new ConnectionFactory[1];
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactoryArray0[0] = connectionFactory0;
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      connectionFactories0.enumerateQueueConnectionFactory();
      connectionFactories0.getConnectionFactory();
      connectionFactories0.getXAConnectionFactoryCount();
      connectionFactories0.getConnectionFactoryCount();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      connectionFactories0.getTopicConnectionFactory();
      assertEquals(1, connectionFactories0.getConnectionFactoryCount());
      
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertTrue(boolean0);
  }

  /**
  //Test case number: 11
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[20];
      connectionFactories0.getXATopicConnectionFactory();
      try { 
        connectionFactories0.getXAConnectionFactory((-537));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 12
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addTopicConnectionFactory((TopicConnectionFactory) null);
      connectionFactories0.isValid();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 13
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactory0.setName("");
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[2];
      connectionFactories0.getTopicConnectionFactoryCount();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 14
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(topicConnectionFactory0);
      locator2Impl2.setPublicId("");
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      connectionFactories0.getTopicConnectionFactory(0);
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      assertFalse(locator2Impl8.equals((Object)locator2Impl0));
  }

  /**
  //Test case number: 15
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      connectionFactories0.addQueueConnectionFactory(queueConnectionFactory0);
      connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      try { 
        connectionFactories0.setXAQueueConnectionFactory(0, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 16
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      connectionFactories0.addConnectionFactory(connectionFactory0);
      ConnectionFactory connectionFactory1 = connectionFactories0.getConnectionFactory(0);
      assertNull(connectionFactory1.getName());
  }

  /**
  //Test case number: 17
  /*Coverage entropy=2.372821413206516
  */
  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('J');
      StringWriter stringWriter3 = stringWriter2.append('J');
      char[] charArray0 = new char[3];
      charArray0[0] = 'J';
      charArray0[1] = 'q';
      charArray0[2] = 'J';
      stringWriter3.write(charArray0);
      StringWriter stringWriter4 = stringWriter2.append('q');
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      char[] charArray1 = new char[5];
      charArray1[0] = 'J';
      charArray1[1] = 'J';
      charArray1[3] = 'q';
      charArray1[4] = 'q';
      stringWriter4.write(charArray0);
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray1);
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      stringWriter3.append((CharSequence) charBuffer1);
      int int0 = 1864;
      stringWriter3.write(1864);
      try { 
        connectionFactories0.marshal((Writer) stringWriter4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // name is a required field.
         //
         verifyException("org.exolab.castor.xml.FieldValidator", e);
      }
  }

  /**
  //Test case number: 18
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setSystemId("v'\"+XB-d1L9A`");
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locatorImpl0.setPublicId("v'\"+XB-d1L9A`");
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl3 = new Locator2Impl(locatorImpl1);
      locator2Impl3.getColumnNumber();
      locator2Impl3.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl0);
      locator2Impl0.getColumnNumber();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      LocatorImpl locatorImpl3 = new LocatorImpl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      locator2Impl0.setXMLVersion((String) null);
      locator2Impl6.getXMLVersion();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl0);
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl4);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl(locator2Impl8);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl5);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setTopicConnectionFactory((TopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 19
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.castor.parser.validation");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.exolab.castor.parser.validation");
      mockFileOutputStream0.flush();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      mockFileOutputStream0.getChannel();
      FileSystemHandling.createFolder(evoSuiteFile0);
      mockFileOutputStream0.getChannel();
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "");
      mockFileOutputStream0.write((-1534));
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      mockFileOutputStream0.release();
      mockFileOutputStream0.release();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      mockFileOutputStream0.close();
      mockFileOutputStream0.release();
      Object object0 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.castor.parser.validation");
      MockFile mockFile0 = new MockFile("org.exolab.castor.parser.validation");
      MockFile mockFile1 = new MockFile("./%(S");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(0, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 20
  /*Coverage entropy=2.004371500423656
  */
  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      connectionFactories0.addXAConnectionFactory(xAConnectionFactory0);
      connectionFactories0.getXAConnectionFactory(0);
      connectionFactories0.getXATopicConnectionFactory();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(3925);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 21
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((Writer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'out' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 22
  /*Coverage entropy=1.7766234846545668
  */
  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = new StringWriter();
      StringWriter stringWriter3 = new StringWriter();
      stringWriter1.write((int) 'J');
      char[] charArray0 = new char[9];
      stringWriter0.flush();
      stringWriter1.write("g9>aDDP");
      StringWriter stringWriter4 = new StringWriter();
      stringWriter2.write("g9>aDDP");
      stringWriter4.flush();
      stringWriter0.write(charArray0);
      StringWriter stringWriter5 = new StringWriter();
      stringWriter2.write(charArray0);
      StringWriter stringWriter6 = new StringWriter(17);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      StringWriter stringWriter7 = new StringWriter();
      StringWriter stringWriter8 = new StringWriter();
      stringWriter1.close();
      stringWriter8.write(charArray0);
      stringWriter1.write(17);
      stringWriter2.flush();
      StringWriter stringWriter9 = new StringWriter(4107);
      stringWriter8.write("g9>aDDP");
      stringWriter7.write("(b#vnY|G?mJZ2b Cz");
      StringWriter stringWriter10 = new StringWriter();
      StringWriter stringWriter11 = new StringWriter();
      StringWriter stringWriter12 = new StringWriter(17);
      stringWriter11.flush();
      StringWriter stringWriter13 = new StringWriter(17);
      XATopicConnectionFactory[] xATopicConnectionFactoryArray0 = connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.setXATopicConnectionFactory(xATopicConnectionFactoryArray0);
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[1];
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      assertEquals(1, connectionFactories0.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 23
  /*Coverage entropy=2.3558258304206885
  */
  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("");
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      SAXParseException sAXParseException0 = new SAXParseException("org7exolab.jms.config.ConnectionFactories", locator2Impl1);
      xMLFilterImpl0.fatalError(sAXParseException0);
      xMLFilterImpl0.getContentHandler();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[2];
      XAConnectionFactory xAConnectionFactory1 = new XAConnectionFactory();
      xAConnectionFactoryArray0[0] = xAConnectionFactory1;
      xAConnectionFactoryArray0[1] = xAConnectionFactory0;
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.getXAConnectionFactoryCount();
      try { 
        connectionFactories0.getXAConnectionFactory(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 24
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory((-2900), (QueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 25
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[3];
      // Undeclared exception!
      try { 
        connectionFactories0.setXAQueueConnectionFactory((XAQueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 26
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locatorImpl1.getPublicId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      locator2Impl3.getLineNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl1);
      locator2Impl1.getLineNumber();
      locator2Impl5.getColumnNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl4);
      locator2Impl2.getColumnNumber();
      locator2Impl2.getEncoding();
      locator2Impl5.getColumnNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl6);
      locator2Impl9.getColumnNumber();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      locator2Impl10.getEncoding();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl6);
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl9);
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      LocatorImpl locatorImpl9 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl10 = new LocatorImpl(locator2Impl10);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      XAConnectionFactory[] xAConnectionFactoryArray1 = connectionFactories0.getXAConnectionFactory();
      assertEquals(0, xAConnectionFactoryArray1.length);
  }

  /**
  //Test case number: 27
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.exolCb.castor.parser.vali[ation");
      File file0 = MockFile.createTempFile("org.exolCb.castor.parser.vali[ation", "org.exolCb.castor.parser.vali[ation", (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      mockFileOutputStream0.getChannel();
      mockFile0.setReadable(true, true);
      URI uRI0 = MockURI.aHttpURI;
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      MockFile mockFile1 = new MockFile("A9S[RDO#K3:LGS)F2j");
      mockFileOutputStream0.close();
      File file1 = file0.getAbsoluteFile();
      URI uRI1 = MockURI.aFileURI;
      MockFile mockFile2 = new MockFile(uRI1);
      mockFileOutputStream0.flush();
      file0.toURL();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.exolCb.castor.parser.vali[ation/A9S[RDO#K3:LGS)F2j");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      File file2 = MockFile.createTempFile("_1mjDS >Sv", "");
      file1.renameTo(file2);
      MockFile mockFile3 = new MockFile("_1mjDS >Sv", "mapping.accessorNotFound");
      mockFile1.getAbsoluteFile();
      mockFile1.getAbsolutePath();
      mockFile3.renameTo(file1);
      file0.mkdir();
      mockFileOutputStream0.close();
      mockFile0.renameTo(mockFile1);
      mockFileOutputStream0.flush();
      mockFileOutputStream0.release();
      MockFile mockFile4 = new MockFile(uRI1);
      MockFile mockFile5 = new MockFile("A9S[RDO#K3:LGS)F2j", "_1mjDS >Sv");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((-4), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 28
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("EJ*SaBv", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "<3=%MiEGXKsK", "<3=%MiEGXKsK", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("EJ*SaBv", "EJ*SaBv", "EJ*SaBv", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException("EJ*SaBv", "EJ*SaBv", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException3.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      SAXParseException sAXParseException5 = (SAXParseException)sAXParseException3.fillInStackTrace();
      sAXParseException3.getPublicId();
      sAXParseException0.getStackTrace();
      sAXParseException0.toString();
      sAXParseException4.getSuppressed();
      sAXParseException3.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException6 = new SAXParseException("n", "", "EJ*SaBv", (-12), 1607);
      sAXParseException6.initCause(sAXParseException4);
      sAXParseException6.getSystemId();
      sAXParseException5.getLineNumber();
      sAXParseException6.getCause();
      sAXParseException1.getColumnNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      boolean boolean0 = connectionFactories0.removeQueueConnectionFactory(queueConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 29
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("X +]#6UTXwj$7e");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("X +]#6UTXwj$7e");
      Locale locale0 = Locale.ITALY;
      byte[] byteArray0 = new byte[28];
      mockPrintStream0.write(byteArray0);
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "tceW--x}W'cHJq", (Object[]) null);
      mockPrintStream0.print((-1009.2F));
      printWriter0.print('e');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, false);
      mockPrintStream0.print(true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>(list0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      mockPrintWriter1.println((float) 'e');
      mockPrintWriter0.println((double) 'e');
      mockPrintStream0.print("tceW--x}W'cHJq");
      mockPrintWriter0.println((Object) mockPrintWriter1);
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      mockPrintStream0.checkError();
      mockPrintStream0.println(false);
      char[] charArray0 = new char[5];
      mockPrintWriter0.print(charArray0);
      PrintWriter printWriter1 = mockPrintWriter0.format(locale0, "tceW--x}W'cHJq", (Object[]) null);
      printWriter1.println(charArray0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter1);
      printWriter1.println('e');
      mockPrintWriter2.println();
      mockPrintWriter2.print(charArray0);
      mockPrintWriter2.print('e');
      mockPrintWriter2.print((int) 'e');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("X +]#6UTXwj$7e");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(70, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 30
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.exolCb.castor.parser.vali[ation");
      File file0 = MockFile.createTempFile("org.exolCb.castor.parser.vali[ation", "org.exolCb.castor.parser.vali[ation", (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      mockFileOutputStream0.getChannel();
      mockFile0.setReadable(true, true);
      URI uRI0 = MockURI.aHttpURI;
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      MockFile mockFile1 = new MockFile("A9S[RDO#K3:LGS)F2j");
      mockFileOutputStream0.close();
      File file1 = file0.getAbsoluteFile();
      URI uRI1 = MockURI.aFileURI;
      MockFile mockFile2 = new MockFile(uRI1);
      mockFileOutputStream0.flush();
      MockURI.toURL(uRI1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("org.exolCb.castor.parser.vali[ation/A9S[RDO#K3:LGS)F2j");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, (byte[]) null);
      File file2 = MockFile.createTempFile("_1mjDS >Sv", "");
      file1.renameTo(file2);
      MockFile mockFile3 = new MockFile("_1mjDS >Sv", "mapping.accessorNotFound");
      mockFile1.getAbsoluteFile();
      mockFile1.getAbsolutePath();
      mockFile3.renameTo(file1);
      file0.mkdir();
      mockFileOutputStream0.close();
      mockFile0.renameTo(mockFile1);
      mockFileOutputStream0.flush();
      mockFileOutputStream0.release();
      MockFile mockFile4 = new MockFile(uRI1);
      MockFile mockFile5 = new MockFile("A9S[RDO#K3:LGS)F2j", "_1mjDS >Sv");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory((-4), topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 31
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("X +]#6UTXwj$7e");
      Locale locale0 = Locale.ITALY;
      byte[] byteArray0 = new byte[17];
      mockPrintStream0.write(byteArray0);
      mockPrintStream0.print((-1009.2F));
      mockPrintStream0.print(true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>(list0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList2, locale_FilteringMode0);
      mockPrintStream0.print("tceW--x}W'cHJq");
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, false);
      mockPrintStream0.checkError();
      mockPrintStream0.println(false);
      char[] charArray0 = new char[5];
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("X +]#6UTXwj$7e");
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setTopicConnectionFactory(0, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 32
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-26), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 33
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      connectionFactories0.addTopicConnectionFactory(0, topicConnectionFactory0);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 34
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      try { 
        connectionFactories0.addTopicConnectionFactory(59, topicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 59, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 35
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.setQueueConnectionFactory(1085, queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 36
  /*Coverage entropy=3.008925238667177
  */
  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[1];
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.isValid();
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[0];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      connectionFactories0.setXAConnectionFactory(xAConnectionFactoryArray0);
      connectionFactories0.getXATopicConnectionFactory();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = connectionFactories0.getTopicConnectionFactory();
      connectionFactories0.getXAQueueConnectionFactory();
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.setTopicConnectionFactory(topicConnectionFactoryArray0);
      connectionFactories0.getXAConnectionFactory();
      int int0 = (-1);
      try { 
        connectionFactories0.getConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 37
  /*Coverage entropy=1.4834915965575728
  */
  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.shouldAllThrowIOExceptions();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[8];
      connectionFactories0.setQueueConnectionFactory(queueConnectionFactoryArray0);
      XMLReaderAdapter xMLReaderAdapter0 = new XMLReaderAdapter();
      ParserAdapter parserAdapter0 = new ParserAdapter(xMLReaderAdapter0);
      parserAdapter0.processingInstruction("(JX5A~Y8^p~!{$", "(JX5A~Y8^p~!{$");
      XMLReaderAdapter xMLReaderAdapter1 = new XMLReaderAdapter(parserAdapter0);
      ParserAdapter parserAdapter1 = new ParserAdapter(xMLReaderAdapter1);
      connectionFactories0.getQueueConnectionFactory();
      ParserAdapter parserAdapter2 = new ParserAdapter(xMLReaderAdapter1);
      ParserAdapter parserAdapter3 = null;
      try {
        parserAdapter3 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 38
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("EJ*@&taBv", "SMkBr5xnIC1Jr_4}N", "[8ja~.Dng.Obe8c;", 49, 49);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "R", "R", 0, 0, sAXParseException0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException2 = new SAXParseException("EJ*@&taBv", "SMkBr5xnIC1Jr_4}N", "SMkBr5xnIC1Jr_4}N", 0, 49);
      SAXParseException sAXParseException3 = new SAXParseException("EJ*@&taBv", "EJ*@&taBv", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException1.getMessage();
      try { 
        connectionFactories0.setXAQueueConnectionFactory(492, (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 39
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAQueueConnectionFactory((-26), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 40
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      SAXParseException sAXParseException0 = new SAXParseException("", "dd3+V%`2Jv&", "", 1, 1);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.warning(sAXParseException0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      SAXParseException sAXParseException1 = new SAXParseException("w", locatorImpl0);
      SAXParseException sAXParseException2 = new SAXParseException("org.exolab.jms.config.ConnectionFactories", (String) null, (String) null, 695, 1);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      xMLFilterImpl3.getEntityResolver();
      SAXParseException sAXParseException3 = new SAXParseException("", locator2Impl0);
      xMLFilterImpl3.fatalError(sAXParseException3);
      xMLFilterImpl1.getContentHandler();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(0, (XATopicConnectionFactory) null);
      assertEquals(0, connectionFactories0.getXAQueueConnectionFactoryCount());
  }

  /**
  //Test case number: 41
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locatorImpl1.getPublicId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      locator2Impl3.getLineNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl1);
      locator2Impl5.getColumnNumber();
      locatorImpl1.setPublicId((String) null);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      locator2Impl1.getColumnNumber();
      locator2Impl2.getEncoding();
      locator2Impl6.getColumnNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl4.getXMLVersion();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl12);
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl8);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locatorImpl6);
      locator2Impl13.setEncoding("'YP=>t5!F;Y`)D#(99Y");
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl13);
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl5);
      LocatorImpl locatorImpl8 = new LocatorImpl(locator2Impl7);
      Locator2Impl locator2Impl15 = new Locator2Impl();
      Locator2Impl locator2Impl16 = new Locator2Impl(locator2Impl15);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(0, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 42
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("qK*DSBv", "", "", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("", "", "", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("qK*DSBv", "qK*DSBv", "qK*DSBv", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("qK*DSBv", "qK*DSBv", "", 0, 0);
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      connectionFactories0.getXAQueueConnectionFactoryCount();
      SAXParseException sAXParseException5 = new SAXParseException("", "org.xml.sax.SAXParseExceptionpublicId: ; systemId: ; lineNumber: 0; columnNumber: 0; qK*DSBv", "qK*DSBv", 0, 0);
      sAXParseException2.getMessage();
      SAXParseException sAXParseException6 = new SAXParseException("", "", "", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException3.getSuppressed();
      sAXParseException0.getSuppressed();
      sAXParseException3.getLineNumber();
      sAXParseException0.getSystemId();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException7 = new SAXParseException("", "", "cvE)lI=neR", 0, 0);
      sAXParseException0.toString();
      sAXParseException1.getCause();
      sAXParseException4.getLineNumber();
      SAXParseException sAXParseException8 = new SAXParseException("", "", "Z1]y#uv6", 0, 0);
      SAXParseException sAXParseException9 = new SAXParseException("", "", "qK*DSBv", 0, 0);
      sAXParseException8.toString();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      assertNull(queueConnectionFactory0.getName());
  }

  /**
  //Test case number: 43
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locatorImpl1.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl3);
      locator2Impl3.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl1);
      locator2Impl6.getColumnNumber();
      locatorImpl2.setPublicId((String) null);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl5);
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl7);
      locator2Impl7.getColumnNumber();
      locator2Impl0.getEncoding();
      locator2Impl5.getColumnNumber();
      Locator2Impl locator2Impl9 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl3 = new LocatorImpl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl6.getXMLVersion();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl13);
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl8);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl5);
      LocatorImpl locatorImpl8 = new LocatorImpl(locator2Impl6);
      LocatorImpl locatorImpl9 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl10 = new LocatorImpl(locatorImpl6);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      boolean boolean0 = connectionFactories0.removeXAConnectionFactory(xAConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 44
  /*Coverage entropy=2.4990104312963832
  */
  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.getQueueConnectionFactoryCount();
      connectionFactories0.removeXAQueueConnectionFactory((XAQueueConnectionFactory) null);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      StringReader stringReader0 = new StringReader("org.exolab.jms.config.ConnectionFactories");
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[3];
      xAQueueConnectionFactoryArray0[0] = null;
      xAQueueConnectionFactoryArray0[1] = null;
      xAQueueConnectionFactoryArray0[2] = null;
      connectionFactories1.setXAQueueConnectionFactory(xAQueueConnectionFactoryArray0);
      connectionFactories1.getXAQueueConnectionFactory();
      connectionFactories0.getQueueConnectionFactory();
      connectionFactories0.addXAConnectionFactory(0, (XAConnectionFactory) null);
      try { 
        connectionFactories0.getXATopicConnectionFactory((-9));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 45
  /*Coverage entropy=1.1217186091313738
  */
  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      locator2Impl1.getLineNumber();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl1);
      locator2Impl2.getColumnNumber();
      locator2Impl1.setPublicId("Ny");
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl0);
      locator2Impl3.getColumnNumber();
      locator2Impl3.getEncoding();
      connectionFactories0.getXATopicConnectionFactoryCount();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      locator2Impl0.getXMLVersion();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      Locator2Impl locator2Impl7 = new Locator2Impl();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locatorImpl1);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl3);
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl3);
      LocatorImpl locatorImpl5 = new LocatorImpl();
      Locator2Impl locator2Impl10 = new Locator2Impl(locatorImpl3);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl7);
      LocatorImpl locatorImpl6 = new LocatorImpl(locator2Impl7);
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl8 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl12);
      ConnectionFactories connectionFactories1 = new ConnectionFactories();
      assertEquals(0, connectionFactories1.getTopicConnectionFactoryCount());
  }

  /**
  //Test case number: 46
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl4.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl0);
      locator2Impl6.getSystemId();
      locator2Impl5.getColumnNumber();
      locatorImpl0.setPublicId((String) null);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      locator2Impl2.getColumnNumber();
      locator2Impl3.getEncoding();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl5.getXMLVersion();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl12);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl2);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl8);
      Locator2Impl locator2Impl15 = new Locator2Impl(locatorImpl2);
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl8 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl9 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl16 = new Locator2Impl(locatorImpl4);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAQueueConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 47
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl4.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl0);
      locator2Impl5.getColumnNumber();
      locatorImpl0.setPublicId((String) null);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      locator2Impl2.getColumnNumber();
      locator2Impl3.getEncoding();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl5.getXMLVersion();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl13);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl8);
      Locator2Impl locator2Impl16 = new Locator2Impl(locatorImpl2);
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl2);
      LocatorImpl locatorImpl6 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl17 = new Locator2Impl(locatorImpl1);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory((-2608), xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 48
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl1.getPublicId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl1);
      locator2Impl1.getLineNumber();
      locator2Impl2.getColumnNumber();
      locatorImpl1.setSystemId((String) null);
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl4);
      locator2Impl2.getColumnNumber();
      locator2Impl2.getEncoding();
      locator2Impl5.getColumnNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl3.getXMLVersion();
      locatorImpl0.setSystemId((String) null);
      Locator2Impl locator2Impl10 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      locator2Impl2.getXMLVersion();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl11);
      LocatorImpl locatorImpl6 = new LocatorImpl(locator2Impl0);
      locatorImpl1.setColumnNumber(2472);
      Locator2Impl locator2Impl13 = new Locator2Impl();
      Locator2Impl locator2Impl14 = new Locator2Impl(locatorImpl5);
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      LocatorImpl locatorImpl9 = new LocatorImpl(locatorImpl1);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory[] connectionFactoryArray0 = connectionFactories0.getConnectionFactory();
      connectionFactories0.setConnectionFactory(connectionFactoryArray0);
      assertEquals(0, connectionFactories0.getConnectionFactoryCount());
  }

  /**
  //Test case number: 49
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("EJ*SaBv", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "<3=%MiEGXKsK", "<3=%MiEGXKsK", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("EJ*SaBv", "EJ*SaBv", "EJ*SaBv", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException("EJ*SaBv", "EJ*SaBv", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException3.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      SAXParseException sAXParseException5 = (SAXParseException)sAXParseException3.fillInStackTrace();
      sAXParseException0.getStackTrace();
      sAXParseException0.toString();
      sAXParseException4.getSuppressed();
      sAXParseException3.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException6 = new SAXParseException("n", "", "EJ*SaBv", (-12), 1607);
      sAXParseException6.initCause(sAXParseException4);
      sAXParseException0.fillInStackTrace();
      sAXParseException5.getSystemId();
      sAXParseException4.getLineNumber();
      sAXParseException0.getCause();
      sAXParseException5.getColumnNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setConnectionFactory((ConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 50
  /*Coverage entropy=1.5271837172395382
  */
  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearConnectionFactory();
      connectionFactories0.clearTopicConnectionFactory();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o%r>N>YZ/^zzzq2hVy<");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "o%r>N>YZ/^zzzq2hVy<");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 51
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("X +]#6UTXwj$7e");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("X +]#6UTXwj$7e");
      Locale locale0 = Locale.KOREAN;
      byte[] byteArray0 = new byte[17];
      mockPrintStream0.write(byteArray0);
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "1Ftg!", (Object[]) null);
      mockPrintStream0.print((-1009.2F));
      printWriter0.print('R');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      mockPrintStream0.print(true);
      mockPrintWriter1.println((float) 'R');
      mockPrintWriter0.println((double) 'R');
      mockPrintStream0.print("1Ftg!");
      mockPrintWriter0.println((Object) mockPrintWriter1);
      printWriter0.print((double) 'R');
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      mockPrintStream0.checkError();
      mockPrintStream0.println(true);
      char[] charArray0 = new char[5];
      mockPrintWriter0.print(charArray0);
      PrintWriter printWriter1 = mockPrintWriter0.format(locale0, "1Ftg!", (Object[]) null);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter1);
      printWriter1.println('R');
      mockPrintWriter2.println();
      mockPrintWriter2.print(charArray0);
      mockPrintWriter2.print('R');
      mockPrintWriter2.print((int) 'R');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("X +]#6UTXwj$7e");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 52
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("EJ*SaBv", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "<3=%MiEGXKsK", "<3=%MiEGXKsK", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("EJ*SaBv", "EJ*SaBv", "EJ*SaBv", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getSuppressed();
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException3.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      SAXParseException sAXParseException4 = (SAXParseException)sAXParseException3.fillInStackTrace();
      sAXParseException0.getStackTrace();
      sAXParseException0.toString();
      sAXParseException1.getSuppressed();
      sAXParseException3.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException5 = new SAXParseException("n", "", "EJ*SaBv", (-12), 1607);
      sAXParseException5.initCause(sAXParseException2);
      sAXParseException5.fillInStackTrace();
      sAXParseException5.getSystemId();
      sAXParseException4.getLineNumber();
      sAXParseException5.getCause();
      sAXParseException1.getColumnNumber();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 53
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException(":I \"B',),[&}?", "[8ja~.D.Obec", "[8ja~.D.Obec", 2, 2);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.D.Obec", "[8ja~.D.Obec", "[8ja~.D.Obec", 2, 2, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException(":I \"B',),[&}?", ":I \"B',),[&}?", ":I \"B',),[&}?", 2, 2);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException2.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException(":I \"B',),[&}?", ":I \"B',),[&}?", "[8ja~.D.Obec", 2, 2);
      sAXParseException0.getLocalizedMessage();
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException3.getColumnNumber();
      sAXParseException0.getPublicId();
      sAXParseException3.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      SAXParseException sAXParseException5 = (SAXParseException)sAXParseException3.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray0 = sAXParseException1.getStackTrace();
      sAXParseException5.getColumnNumber();
      sAXParseException5.setStackTrace(stackTraceElementArray0);
      sAXParseException0.toString();
      sAXParseException0.getSuppressed();
      sAXParseException2.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException6 = new SAXParseException("Bn", "", ":I \"B',),[&}?", 2, 1631);
      SAXParseException sAXParseException7 = new SAXParseException("Bn", "[8ja~.D.Obec", ":I \"B',),[&}?", 2, 2);
      SAXParseException sAXParseException8 = new SAXParseException("[8ja~.D.Obec", ":I \"B',),[&}?", ":I \"B',),[&}?", 1631, 2);
      sAXParseException4.getLineNumber();
      sAXParseException0.getCause();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(2, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 54
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException(":I \"B',),[&}?", "[8ja~.D.Obec", "[8ja~.D.Obec", (-49), (-49));
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.D.Obec", "<>=%Mi7GXKsK", "<>=%Mi7GXKsK", (-49), (-49), sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException(":I \"B',),[&}?", ":I \"B',),[&}?", ":I \"B',),[&}?", (-49), (-49));
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException(":I \"B',),[&}?", ":I \"B',),[&}?", "[8ja~.D.Obec", (-49), (-49));
      sAXParseException0.getLocalizedMessage();
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException3.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      SAXParseException sAXParseException5 = (SAXParseException)sAXParseException3.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      sAXParseException5.getColumnNumber();
      sAXParseException5.setStackTrace(stackTraceElementArray0);
      sAXParseException0.toString();
      sAXParseException4.getSuppressed();
      sAXParseException3.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException6 = new SAXParseException("n", "", ":I \"B',),[&}?", (-49), 1607);
      sAXParseException6.initCause(sAXParseException4);
      SAXParseException sAXParseException7 = new SAXParseException("<>=%Mi7GXKsK", ":I \"B',),[&}?", ":I \"B',),[&}?", 1607, (-49));
      sAXParseException4.getLineNumber();
      sAXParseException0.getCause();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory((-49), (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 55
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException(":I \"B',),[&}?", "[8ja~.Dp.Obec", "[8ja~.Dp.Obec", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dp.Obec", "[8ja~.Dp.Obec", "[8ja~.Dp.Obec", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException(":I \"B',),[&}?", ":I \"B',),[&}?", ":I \"B',),[&}?", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException3.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException(":I \"B',),[&}?", ":I \"B',),[&}?", "[8ja~.Dp.Obec", 0, 0);
      sAXParseException0.getLocalizedMessage();
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException3.getColumnNumber();
      sAXParseException0.getPublicId();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      sAXParseException4.getColumnNumber();
      SAXParseException sAXParseException5 = (SAXParseException)sAXParseException0.initCause(sAXParseException4);
      SAXParseException sAXParseException6 = new SAXParseException("[8ja~.Dp.Obec", "[8ja~.Dp.Obec", ":I \"B',),[&}?", 0, 0);
      sAXParseException1.getStackTrace();
      sAXParseException5.fillInStackTrace();
      sAXParseException6.getColumnNumber();
      sAXParseException0.toString();
      sAXParseException5.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException7 = new SAXParseException(":I \"B',),[&}?", "^9Rd@M$eI<[u=C4", ":I \"B',),[&}?", 0, 1604);
      SAXParseException sAXParseException8 = new SAXParseException("[8ja~.Dp.Obec", "[8ja~.Dp.Obec", ":I \"B',),[&}?", 0, 0);
      SAXParseException sAXParseException9 = new SAXParseException("[8ja~.Dp.Obec", ":I \"B',),[&}?", ":I \"B',),[&}?", 1604, 0);
      sAXParseException4.getLineNumber();
      sAXParseException0.getCause();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setConnectionFactory(0, (ConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 56
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXAConnectionFactory((-28), (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 57
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl4 = new Locator2Impl();
      Locator2Impl locator2Impl5 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      locator2Impl2.setPublicId("");
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl1);
      try { 
        connectionFactories0.getTopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 58
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.jms.config.ConnectionFactories");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAQueueConnectionFactory xAQueueConnectionFactory0 = new XAQueueConnectionFactory();
      connectionFactories0.addXAQueueConnectionFactory(0, xAQueueConnectionFactory0);
      try { 
        connectionFactories0.setXAConnectionFactory(0, (XAConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 59
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('J');
      StringWriter stringWriter3 = stringWriter2.append('J');
      stringWriter3.close();
      StringWriter stringWriter4 = stringWriter1.append('/');
      stringWriter3.flush();
      char[] charArray0 = new char[2];
      StringWriter stringWriter5 = new StringWriter();
      stringWriter5.write(charArray0);
      StringWriter stringWriter6 = new StringWriter();
      stringWriter5.write((String) null);
      stringWriter6.write((-3105));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      stringWriter5.append('u');
      StringWriter stringWriter7 = stringWriter4.append('J');
      stringWriter6.flush();
      stringWriter7.write((int) 'J');
      StringWriter stringWriter8 = new StringWriter();
      stringWriter6.write(15);
      stringWriter6.write(charArray0);
      CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[2];
      charArray1[0] = ']';
      charArray1[1] = 'J';
      stringWriter3.write(charArray1);
      StringWriter stringWriter9 = new StringWriter(2714);
      stringWriter8.write(15);
      // Undeclared exception!
      try { 
        connectionFactories0.setXATopicConnectionFactory((XATopicConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 60
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      SAXParseException sAXParseException0 = new SAXParseException("+OFgINsw54X&[vg2M", "Eb=0qb!w", (String) null, 0, 1);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      xMLFilterImpl0.warning(sAXParseException0);
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl(xMLFilterImpl0);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl(locatorImpl0);
      SAXParseException sAXParseException1 = new SAXParseException("", locatorImpl1);
      SAXParseException sAXParseException2 = new SAXParseException("+OFgINsw54X&[vg2M", "java.lang.Object", "type", 1, 0);
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      xMLFilterImpl3.fatalError(sAXParseException0);
      xMLFilterImpl3.getContentHandler();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      try { 
        connectionFactories0.addXATopicConnectionFactory(1, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 61
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("qK*DSBv", "@3xHvNm5@`V", "@3xHvNm5@`V", (-36), (-36));
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("@3xHvNm5@`V", "@3xHvNm5@`V", "@3xHvNm5@`V", (-36), (-36), sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("qK*DSBv", "qK*DSBv", "qK*DSBv", (-36), (-36));
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("qK*DSBv", "qK*DSBv", "@3xHvNm5@`V", (-36), (-36));
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException1.getLineNumber();
      SAXParseException sAXParseException5 = new SAXParseException("@3xHvNm5@`V", "org.xml.sax.SAXParseExceptionpublicId: @3xHvNm5@`V; systemId: @3xHvNm5@`V; lineNumber: -36; columnNumber: -36; qK*DSBv", "qK*DSBv", (-36), (-36));
      sAXParseException2.getMessage();
      SAXParseException sAXParseException6 = new SAXParseException("@3xHvNm5@`V", "@3xHvNm5@`V", "@3xHvNm5@`V", (-36), (-36));
      sAXParseException0.getStackTrace();
      sAXParseException3.getSuppressed();
      sAXParseException0.getSuppressed();
      sAXParseException3.getLineNumber();
      sAXParseException0.getSystemId();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException7 = new SAXParseException("@3xHvNm5@`V", "@3xHvNm5@`V", "cvE)lI=neR", (-36), (-36));
      sAXParseException0.toString();
      SAXParseException sAXParseException8 = new SAXParseException("cvE)lI=neR", "@3xHvNm5@`V", "org.xml.sax.SAXParseExceptionpublicId: @3xHvNm5@`V; systemId: @3xHvNm5@`V; lineNumber: -36; columnNumber: -36; qK*DSBv", (-36), (-36));
      sAXParseException2.getStackTrace();
      sAXParseException4.getLineNumber();
      SAXParseException sAXParseException9 = new SAXParseException("", "xmln", "Z1]y#uv6", (-36), 0);
      SAXParseException sAXParseException10 = new SAXParseException("@3xHvNm5@`V", "@3xHvNm5@`V", "qK*DSBv", (-36), (-36));
      sAXParseException9.toString();
      try { 
        connectionFactories0.getQueueConnectionFactory((-36));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 62
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("EJ*@&taBv", "R", "[8ja~.Dng.Obe8c;", 49, 49);
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "R", "R", 0, 0, sAXParseException0);
      sAXParseException0.getCause();
      SAXParseException sAXParseException2 = new SAXParseException("R", "R", "", 49, 0);
      SAXParseException sAXParseException3 = new SAXParseException("R", (String) null, "[8ja~.Dng.Obe8c;", 120, 1);
      sAXParseException1.getMessage();
      sAXParseException0.getLocalizedMessage();
      SAXParseException sAXParseException4 = new SAXParseException("[8ja~.Dng.Obe8c;", "#b8[g8)Q(I*sFyQP", "", 1277, 1277);
      sAXParseException4.getLineNumber();
      sAXParseException4.getSystemId();
      try { 
        connectionFactories0.getXAQueueConnectionFactory((-872));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 63
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)101;
      byteArray0[1] = (byte)102;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)96;
      byteArray0[4] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXAConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 64
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Marshaller.enableDebug = false;
      connectionFactories0.clearQueueConnectionFactory();
      XAQueueConnectionFactory[] xAQueueConnectionFactoryArray0 = new XAQueueConnectionFactory[9];
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 65
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAConnectionFactory();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Co2HY|?vLYlY-_]");
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 66
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XAConnectionFactory xAConnectionFactory0 = new XAConnectionFactory();
      try { 
        connectionFactories0.addXAConnectionFactory((-789), xAConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -789, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 67
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException(">JZ@&ta|v", "SMkBr5xnIC1Jr_4}N", "[8ja~.Dng.Obe8c;", 26, 26);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "R", "R", 0, 0, sAXParseException0);
      sAXParseException0.setStackTrace(stackTraceElementArray0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException2 = new SAXParseException(">JZ@&ta|v", "SMkBr5xnIC1Jr_4}N", "SMkBr5xnIC1Jr_4}N", 0, 26);
      SAXParseException sAXParseException3 = new SAXParseException(">JZ@&ta|v", ">JZ@&ta|v", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException1.getMessage();
      sAXParseException1.getLineNumber();
      sAXParseException0.getLineNumber();
      sAXParseException0.getSystemId();
      sAXParseException2.toString();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 68
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl4.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl0);
      locator2Impl5.getColumnNumber();
      locatorImpl0.setPublicId((String) null);
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl6);
      locator2Impl2.getColumnNumber();
      locator2Impl3.getEncoding();
      locator2Impl7.getColumnNumber();
      Locator2Impl locator2Impl8 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      locator2Impl5.getXMLVersion();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      Locator2Impl locator2Impl13 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl13);
      Locator2Impl locator2Impl14 = new Locator2Impl();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl5 = new LocatorImpl();
      locator2Impl14.getEncoding();
      Locator2Impl locator2Impl15 = new Locator2Impl(locator2Impl10);
      Locator2Impl locator2Impl16 = new Locator2Impl(locator2Impl10);
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl5);
      LocatorImpl locatorImpl7 = new LocatorImpl();
      LocatorImpl locatorImpl8 = new LocatorImpl(locator2Impl15);
      LocatorImpl locatorImpl9 = new LocatorImpl(locator2Impl15);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.setXAConnectionFactory((XAConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 69
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.getEntityResolver();
      xMLFilterImpl0.endElement("java.lang.Byte", "split-cdata-sections", (String) null);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      locator2Impl0.setPublicId((String) null);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl0);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl4.resolveEntity("$/ ;hnZV2jV", "");
      xMLFilterImpl0.notationDecl("split-cdata-sections", "", "java.lang.Byte");
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl(xMLFilterImpl4);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      XMLFilterImpl xMLFilterImpl6 = new XMLFilterImpl();
      xMLFilterImpl1.setContentHandler(xMLFilterImpl3);
      XMLFilterImpl xMLFilterImpl7 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl8 = new XMLFilterImpl();
      xMLFilterImpl2.getContentHandler();
      xMLFilterImpl1.getContentHandler();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = connectionFactories0.getTopicConnectionFactoryCount();
      assertEquals(0, int0);
  }

  /**
  //Test case number: 70
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.castor.parser.validation");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("org.exolab.castor.parser.validation");
      mockFileOutputStream0.flush();
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.getChannel();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/ubuntu/termite/projects/66_openjms");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)87;
      byteArray0[2] = (byte) (-1);
      mockFileOutputStream0.write(byteArray0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      mockFileOutputStream0.write((-1534));
      mockFileOutputStream0.release();
      mockFileOutputStream0.release();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      mockFileOutputStream0.close();
      mockFileOutputStream0.release();
      Object object0 = new Object();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.exolab.castor.parser.validation");
      MockFile mockFile0 = new MockFile("org.exolab.castor.parser.validation");
      MockFile mockFile1 = new MockFile("./%(S");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory queueConnectionFactory0 = new QueueConnectionFactory();
      try { 
        connectionFactories0.addQueueConnectionFactory((-908), queueConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -908, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 71
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 49;
      SAXParseException sAXParseException0 = new SAXParseException("EJ*@StaBv", "SMkBr5xnICw1Jr_4}N", "[8ja~.Dng.Obe8c;", 49, 49);
      sAXParseException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "<i3=%MliEGXKsK", "<i3=%MliEGXKsK", 0, 0, sAXParseException0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("EJ*@StaBv", "SMkBr5xnICw1Jr_4}N", "SMkBr5xnICw1Jr_4}N", 0, 49);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("EJ*@StaBv", "EJ*@StaBv", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException1.getMessage();
      sAXParseException3.getLineNumber();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      sAXParseException0.toString();
      try { 
        connectionFactories0.getXAConnectionFactory(894);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 72
  /*Coverage entropy=2.5500297769739535
  */
  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.validate();
      SAXParseException sAXParseException0 = new SAXParseException("EJ*@&taBv", "SMkBr5xnIC1Jr_4}N", "[8j~.Dn.Obec", 62, 62);
      MockThrowable mockThrowable0 = new MockThrowable("Qz?:I}xoeoM{B", sAXParseException0);
      sAXParseException0.addSuppressed(mockThrowable0);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      assertEquals(13, stackTraceElementArray0.length);
  }

  /**
  //Test case number: 73
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      boolean boolean0 = connectionFactories0.removeTopicConnectionFactory(topicConnectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 74
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("EJ*@&taBv", "SMkBr5xnIC1Jr_4}N", "[8ja~.Dng.Obe8c;", 49, 49);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "R", "R", 0, 0, sAXParseException0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      SAXParseException sAXParseException2 = new SAXParseException("EJ*@&taBv", "SMkBr5xnIC1Jr_4}N", "SMkBr5xnIC1Jr_4}N", 0, 49);
      SAXParseException sAXParseException3 = new SAXParseException("EJ*@&taBv", "EJ*@&taBv", "[8ja~.Dng.Obe8c;", 0, 0);
      SAXParseException sAXParseException4 = new SAXParseException("[8ja~.Dng.Obe8c;", "", "T]w{NZzr8W", 55296, 49, sAXParseException3);
      sAXParseException4.getLocalizedMessage();
      sAXParseException4.getMessage();
      sAXParseException0.getLineNumber();
      sAXParseException1.getSystemId();
      sAXParseException3.toString();
      try { 
        connectionFactories0.getXAQueueConnectionFactory(1075);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 75
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      int int0 = 0;
      try { 
        connectionFactories0.getXAConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 76
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.addXAQueueConnectionFactory((-390), (XAQueueConnectionFactory) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -390, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 77
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      QueueConnectionFactory[] queueConnectionFactoryArray0 = new QueueConnectionFactory[1];
      // Undeclared exception!
      try { 
        connectionFactories0.setQueueConnectionFactory((QueueConnectionFactory[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 78
  /*Coverage entropy=1.4682921994113465
  */
  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("ZEevCft-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZEevCft-");
      File file0 = MockFile.createTempFile("ZEevCft-", "ZEevCft-", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.toPath();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.release();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yk6FbLj\"jip]dYE");
      mockFileOutputStream0.flush();
      mockFileOutputStream0.flush();
      mockFileOutputStream0.release();
      MockFile.createTempFile("ZEevCft-", "ZEevCft-", (File) mockFile0);
      mockFileOutputStream0.flush();
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.flush();
      MockFile mockFile1 = new MockFile("ZEevCft-", "ZEevCft-");
      MockFile mockFile2 = new MockFile("ZEevCft-", "ZEevCft-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZEevCft-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZEevCft-");
      mockFile0.getCanonicalFile();
      mockFile1.setReadable(true, false);
      mockFileOutputStream0.close();
      mockFile0.toURL();
      mockFileOutputStream0.flush();
      Object object0 = new Object();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZEevCft-");
      MockFile mockFile3 = new MockFile("ZEevCft-");
      MockFile mockFile4 = new MockFile("ZEevCft-");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      connectionFactories0.addXATopicConnectionFactory(xATopicConnectionFactory0);
      XATopicConnectionFactory xATopicConnectionFactory1 = connectionFactories0.getXATopicConnectionFactory(0);
      assertNull(xATopicConnectionFactory1.getName());
  }

  /**
  //Test case number: 79
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl1);
      locator2Impl1.setSystemId("Tn~anX3M)!G}'is");
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locatorImpl1);
      locator2Impl0.setPublicId((String) null);
      locator2Impl0.getLineNumber();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl3);
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getColumnNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl3);
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl1);
      locator2Impl6.getPublicId();
      LocatorImpl locatorImpl4 = new LocatorImpl();
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl3);
      locator2Impl0.getXMLVersion();
      Locator2Impl locator2Impl8 = new Locator2Impl();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl3);
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl(locator2Impl9);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      LocatorImpl locatorImpl7 = new LocatorImpl(locatorImpl6);
      LocatorImpl locatorImpl8 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl9 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl11 = new Locator2Impl(locator2Impl5);
      XATopicConnectionFactory xATopicConnectionFactory0 = new XATopicConnectionFactory();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.setXATopicConnectionFactory(1382, xATopicConnectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 80
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXATopicConnectionFactory();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 81
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = new StringWriter();
      StringWriter stringWriter2 = stringWriter1.append('J');
      StringWriter stringWriter3 = stringWriter2.append('J');
      stringWriter3.write("");
      stringWriter3.close();
      stringWriter1.append('/');
      stringWriter3.flush();
      char[] charArray0 = new char[2];
      StringWriter stringWriter4 = new StringWriter();
      stringWriter4.write(charArray0);
      StringWriter stringWriter5 = new StringWriter();
      stringWriter4.write((String) null);
      stringWriter5.write((-3105));
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      try { 
        connectionFactories0.addConnectionFactory((int) '\u0086', connectionFactory0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 134, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 82
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SAXParseException sAXParseException0 = new SAXParseException("<>=%Mi7GXKsK", "[8ja~.D.Obec", "[8ja~.D.Obec", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.D.Obec", "<>=%Mi7GXKsK", "<>=%Mi7GXKsK", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("[8ja~.D.Obec", "[8ja~.D.Obec", "[8ja~.D.Obec", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      sAXParseException0.getSuppressed();
      SAXParseException sAXParseException4 = new SAXParseException("<>=%Mi7GXKsK", "<>=%Mi7GXKsK", "[8ja~.D.Obec", 0, 0);
      sAXParseException0.getLocalizedMessage();
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException3.getLineNumber();
      sAXParseException1.getMessage();
      sAXParseException3.getMessage();
      SAXParseException sAXParseException5 = (SAXParseException)sAXParseException3.fillInStackTrace();
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      sAXParseException5.getColumnNumber();
      sAXParseException5.setStackTrace(stackTraceElementArray0);
      sAXParseException0.toString();
      sAXParseException4.getSuppressed();
      sAXParseException3.getSuppressed();
      sAXParseException1.getLineNumber();
      sAXParseException3.getSystemId();
      SAXParseException sAXParseException6 = new SAXParseException("n", "{o5|gCFU2^PKv+Is", "[8ja~.D.Obec", 0, 1607);
      sAXParseException6.initCause(sAXParseException4);
      SAXParseException sAXParseException7 = new SAXParseException("<>=%Mi7GXKsK", "<>=%Mi7GXKsK", "[8ja~.D.Obec", 1607, 0);
      sAXParseException4.getLineNumber();
      sAXParseException0.getCause();
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.addConnectionFactory(0, (ConnectionFactory) null);
      assertEquals(0, connectionFactories0.getXATopicConnectionFactoryCount());
  }

  /**
  //Test case number: 83
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      locatorImpl0.setColumnNumber((-1));
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getSystemId();
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl(locator2Impl0);
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getPublicId();
      locatorImpl0.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.setSystemId((String) null);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      locatorImpl0.setPublicId("");
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl0);
      try { 
        connectionFactories0.getTopicConnectionFactory(30);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 84
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      LocatorImpl locatorImpl0 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl0);
      LocatorImpl locatorImpl1 = new LocatorImpl(locator2Impl0);
      locatorImpl0.setColumnNumber((-1));
      Locator2Impl locator2Impl1 = new Locator2Impl();
      locator2Impl1.getSystemId();
      locator2Impl1.getColumnNumber();
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locator2Impl2.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl(locator2Impl2);
      locator2Impl3.getPublicId();
      locatorImpl0.getColumnNumber();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locator2Impl4.setSystemId((String) null);
      Locator2Impl locator2Impl5 = new Locator2Impl();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl5);
      locator2Impl2.getPublicId();
      locator2Impl6.getSystemId();
      locator2Impl2.getLineNumber();
      locator2Impl1.setPublicId((String) null);
      Locator2Impl locator2Impl7 = new Locator2Impl(locatorImpl1);
      try { 
        connectionFactories0.getTopicConnectionFactory((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 85
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("qJ*KSBv", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException0.getStackTrace();
      sAXParseException0.toString();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0, sAXParseException0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("qJ*KSBv", "qJ*KSBv", "qJ*KSBv", 0, 0);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("qJ*KSBv", "qJ*KSBv", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException1.getMessage();
      sAXParseException1.getPublicId();
      sAXParseException0.getPublicId();
      sAXParseException0.getLineNumber();
      sAXParseException1.initCause(sAXParseException4);
      sAXParseException2.getMessage();
      SAXParseException sAXParseException5 = new SAXParseException("[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", "[8ja~.Dng.Obe8c;", 0, 0);
      sAXParseException0.getStackTrace();
      sAXParseException3.getSuppressed();
      sAXParseException0.getSuppressed();
      sAXParseException3.getLineNumber();
      sAXParseException0.getSystemId();
      sAXParseException4.getSuppressed();
      SAXParseException sAXParseException6 = new SAXParseException("[8ja~.Dng.Obe8c;", "", "cvE)lI=neR", 0, 0);
      sAXParseException0.toString();
      sAXParseException1.getCause();
      sAXParseException4.getLineNumber();
      SAXParseException sAXParseException7 = new SAXParseException("", "", "XqK98D6IK", 0, 0);
      sAXParseException7.initCause(sAXParseException1);
      sAXParseException7.toString();
      try { 
        connectionFactories0.getQueueConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 86
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream(",+]#JUtw~$\"e");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(",+]#JUtw~$\"e");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "w", (Object[]) null);
      printWriter0.print('e');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      mockPrintWriter1.print(true);
      mockPrintStream0.print(false);
      mockPrintWriter1.println((float) 'e');
      mockPrintWriter0.println((double) 'e');
      mockPrintStream0.print("w");
      printWriter0.println((Object) null);
      printWriter0.print((double) 'e');
      MockPrintStream mockPrintStream1 = new MockPrintStream(mockPrintStream0, true);
      mockPrintStream0.checkError();
      mockPrintStream0.println(true);
      char[] charArray0 = new char[5];
      mockPrintWriter0.print(charArray0);
      PrintWriter printWriter1 = mockPrintWriter0.format(locale0, "w", (Object[]) null);
      printWriter1.println(charArray0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter1);
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter(",+]#JUtw~$\"e");
      MockPrintStream mockPrintStream2 = new MockPrintStream("w");
      mockPrintStream2.checkError();
      mockPrintStream2.println(false);
      MockPrintWriter mockPrintWriter4 = new MockPrintWriter("w");
      mockPrintWriter4.print(3730L);
      mockPrintWriter4.print(charArray0);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getQueueConnectionFactory(2354);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 87
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFile mockFile0 = new MockFile("ZEevCft-");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "A9S[RDO#K$:LGS)F2j");
      File file0 = MockFile.createTempFile("ZEevCft-", "ZEevCft-", (File) mockFile0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      mockFile0.toPath();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      mockFileOutputStream0.getChannel();
      mockFileOutputStream0.release();
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "yk6FbLj\"jip]dYE");
      mockFileOutputStream0.flush();
      mockFileOutputStream0.release();
      mockFileOutputStream0.release();
      mockFileOutputStream0.flush();
      mockFileOutputStream0.flush();
      MockFile mockFile1 = new MockFile("NFSRyGo}qT|$]^", "y");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "A9S[RDO#K$:LGS)F2j");
      mockFile1.delete();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ZEevCft-");
      mockFile0.getCanonicalFile();
      mockFile1.setReadable(true, false);
      mockFile0.toURL();
      mockFileOutputStream0.flush();
      Object object0 = new Object();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MockFile mockFile2 = new MockFile("g#w~<a~qv");
      MockFile mockFile3 = new MockFile("NFSRyGo}qT|$]^");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      try { 
        connectionFactories0.getXATopicConnectionFactory(39);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 88
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "kL.qU\"eeVbNN8cB`jp");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ">o");
      try { 
        connectionFactories0.getXATopicConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 89
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      LocatorImpl locatorImpl0 = new LocatorImpl();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl0 = new Locator2Impl(locatorImpl1);
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      locatorImpl0.getPublicId();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locatorImpl1.getPublicId();
      LocatorImpl locatorImpl2 = new LocatorImpl();
      Locator2Impl locator2Impl4 = new Locator2Impl(locator2Impl3);
      locator2Impl1.getLineNumber();
      LocatorImpl locatorImpl3 = new LocatorImpl(locatorImpl0);
      Locator2Impl locator2Impl5 = new Locator2Impl(locatorImpl1);
      locator2Impl1.getLineNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locator2Impl4);
      locator2Impl2.getColumnNumber();
      locator2Impl2.getEncoding();
      locator2Impl5.getColumnNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl1);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      locator2Impl3.getXMLVersion();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      Locator2Impl locator2Impl12 = new Locator2Impl();
      locatorImpl0.getSystemId();
      LocatorImpl locatorImpl4 = new LocatorImpl(locator2Impl6);
      locator2Impl9.getColumnNumber();
      LocatorImpl locatorImpl5 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl6 = new LocatorImpl();
      locator2Impl10.getEncoding();
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl9);
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl4);
      LocatorImpl locatorImpl8 = new LocatorImpl();
      LocatorImpl locatorImpl9 = new LocatorImpl(locator2Impl1);
      XAConnectionFactory[] xAConnectionFactoryArray0 = new XAConnectionFactory[0];
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateXATopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 90
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.clearXAQueueConnectionFactory();
      SAXParseException sAXParseException0 = new SAXParseException("qK*DSBv", "qK*DSBv", "qK*DSBv", 0, 0);
      sAXParseException0.getMessage();
      SAXParseException sAXParseException1 = new SAXParseException((String) null, "3-9$d\"", (String) null, 0, 2942);
      sAXParseException0.initCause(sAXParseException1);
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      assertEquals(13, stackTraceElementArray0.length);
  }

  /**
  //Test case number: 91
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("' +]#JUt8ndXw$7e");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("' +]#JUt8ndXw$7e");
      Locale locale0 = Locale.CANADA_FRENCH;
      PrintWriter printWriter0 = mockPrintWriter0.format(locale0, "' +]#JUt8ndXw$7e", (Object[]) null);
      mockPrintStream0.print((-1009.2F));
      MockPrintStream mockPrintStream1 = new MockPrintStream("' +]#JUt8ndXw$7e");
      printWriter0.println((-1L));
      mockPrintWriter0.print('e');
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(printWriter0, true);
      mockPrintStream0.print(true);
      mockPrintWriter1.println((float) 'e');
      mockPrintStream0.print("' +]#JUt8ndXw$7e");
      printWriter0.println((Object) null);
      printWriter0.print((double) 'e');
      MockPrintStream mockPrintStream2 = new MockPrintStream(mockPrintStream0, true);
      mockPrintStream2.checkError();
      mockPrintStream0.println(true);
      char[] charArray0 = new char[5];
      mockPrintWriter0.print(charArray0);
      PrintWriter printWriter1 = mockPrintWriter0.format(locale0, "' +]#JUt8ndXw$7e", (Object[]) null);
      printWriter1.print((long) 'e');
      printWriter1.println(charArray0);
      MockPrintWriter mockPrintWriter2 = new MockPrintWriter(printWriter1);
      mockPrintWriter2.println();
      mockPrintWriter2.print(charArray0);
      mockPrintWriter2.print('e');
      mockPrintWriter2.print((int) 'e');
      MockPrintWriter mockPrintWriter3 = new MockPrintWriter("' +]#JUt8ndXw$7e");
      MockFile mockFile0 = new MockFile("' +]#JUt8ndXw$7e");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      // Undeclared exception!
      try { 
        connectionFactories0.marshal((ContentHandler) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Argument 'handler' is null.
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 92
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      DefaultHandler2 defaultHandler2_1 = new DefaultHandler2();
      try { 
        connectionFactories0.marshal((ContentHandler) defaultHandler2_1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.exolab.castor.xml.Marshaller", e);
      }
  }

  /**
  //Test case number: 93
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      SAXParseException sAXParseException0 = new SAXParseException("EJ*@StaBv", "`3P~*RBqbSWB", "[8ja~.Dng.Obe8c;", 49, 49);
      sAXParseException0.getStackTrace();
      StackTraceElement[] stackTraceElementArray0 = sAXParseException0.getStackTrace();
      SAXParseException sAXParseException1 = new SAXParseException("[8ja~.Dng.Obe8c;", "<i3=%MliEGXKsK", "<i3=%MliEGXKsK", 0, 0, sAXParseException0);
      sAXParseException1.setStackTrace(stackTraceElementArray0);
      sAXParseException0.getStackTrace();
      SAXParseException sAXParseException2 = new SAXParseException("EJ*@StaBv", "`3P~*RBqbSWB", "`3P~*RBqbSWB", 0, 49);
      SAXParseException sAXParseException3 = (SAXParseException)sAXParseException0.fillInStackTrace();
      SAXParseException sAXParseException4 = new SAXParseException("EJ*@StaBv", "EJ*@StaBv", "[8ja~.Dng.Obe8c;", 0, 0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      sAXParseException2.getMessage();
      sAXParseException3.getLineNumber();
      sAXParseException3.getMessage();
      sAXParseException3.getSystemId();
      sAXParseException0.toString();
      ConnectionFactory connectionFactory0 = new ConnectionFactory();
      boolean boolean0 = connectionFactories0.removeConnectionFactory(connectionFactory0);
      assertFalse(boolean0);
  }

  /**
  //Test case number: 94
  /*Coverage entropy=2.6709087878625355
  */
  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      connectionFactories0.isValid();
      ParserAdapter parserAdapter0 = null;
      try {
        parserAdapter0 = new ParserAdapter();
        fail("Expecting exception: SAXException");
      
      } catch(Throwable e) {
         //
         // System property org.xml.sax.parser not specified
         //
         verifyException("org.xml.sax.helpers.ParserAdapter", e);
      }
  }

  /**
  //Test case number: 95
  /*Coverage entropy=2.562200162369491
  */
  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Object object0 = new Object();
      MockFile mockFile0 = new MockFile("7%UwhZrd$CI");
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('O');
      StringWriter stringWriter2 = stringWriter1.append('J');
      StringWriter stringWriter3 = stringWriter2.append('J');
      StringWriter stringWriter4 = stringWriter2.append('q');
      stringWriter1.write("7%UwhZrd$CI");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      stringWriter3.write(1864);
      connectionFactories0.marshal((Writer) stringWriter4);
      assertSame(stringWriter2, stringWriter4);
  }

  /**
  //Test case number: 96
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Locator2Impl locator2Impl0 = new Locator2Impl();
      LocatorImpl locatorImpl0 = new LocatorImpl(locator2Impl0);
      Locator2Impl locator2Impl1 = new Locator2Impl(locatorImpl0);
      Locator2Impl locator2Impl2 = new Locator2Impl();
      Locator2Impl locator2Impl3 = new Locator2Impl();
      locator2Impl0.getPublicId();
      Locator2Impl locator2Impl4 = new Locator2Impl();
      locatorImpl0.getPublicId();
      LocatorImpl locatorImpl1 = new LocatorImpl();
      Locator2Impl locator2Impl5 = new Locator2Impl(locator2Impl4);
      locator2Impl4.getLineNumber();
      Locator2Impl locator2Impl6 = new Locator2Impl(locatorImpl0);
      locator2Impl5.getColumnNumber();
      locatorImpl0.setPublicId((String) null);
      locator2Impl2.getColumnNumber();
      locator2Impl3.getEncoding();
      locator2Impl2.getColumnNumber();
      Locator2Impl locator2Impl7 = new Locator2Impl(locator2Impl2);
      Locator2Impl locator2Impl8 = new Locator2Impl();
      locator2Impl5.getXMLVersion();
      Locator2Impl locator2Impl9 = new Locator2Impl();
      Locator2Impl locator2Impl10 = new Locator2Impl();
      Locator2Impl locator2Impl11 = new Locator2Impl();
      LocatorImpl locatorImpl2 = new LocatorImpl(locator2Impl11);
      Locator2Impl locator2Impl12 = new Locator2Impl();
      LocatorImpl locatorImpl3 = new LocatorImpl(locator2Impl2);
      Locator2Impl locator2Impl13 = new Locator2Impl(locator2Impl7);
      Locator2Impl locator2Impl14 = new Locator2Impl(locator2Impl0);
      LocatorImpl locatorImpl4 = new LocatorImpl(locatorImpl1);
      LocatorImpl locatorImpl5 = new LocatorImpl(locator2Impl1);
      LocatorImpl locatorImpl6 = new LocatorImpl(locatorImpl0);
      LocatorImpl locatorImpl7 = new LocatorImpl(locator2Impl12);
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      TopicConnectionFactory[] topicConnectionFactoryArray0 = new TopicConnectionFactory[3];
      TopicConnectionFactory topicConnectionFactory0 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[0] = topicConnectionFactory0;
      TopicConnectionFactory topicConnectionFactory1 = new TopicConnectionFactory();
      TopicConnectionFactory topicConnectionFactory2 = new TopicConnectionFactory();
      topicConnectionFactoryArray0[2] = topicConnectionFactory1;
      Enumeration enumeration0 = connectionFactories0.enumerateTopicConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 97
  /*Coverage entropy=1.0931471805599453
  */
  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      MockFile mockFile0 = new MockFile("org.exolCb.castor.parser.vali[ation", "A9S[RDO#K3:LGS)F2j");
      File file0 = MockFile.createTempFile("org.exolCb.castor.parser.vali[ation", "org.exolCb.castor.parser.vali[ation", (File) mockFile0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, false);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)16;
      mockFileOutputStream0.write(byteArray0, (int) (byte)2, (int) (byte)16);
      mockFileOutputStream0.getChannel();
      MockFile mockFile1 = new MockFile("A9S[RDO#K3:LGS)F2j");
      mockFileOutputStream0.close();
      file0.getAbsoluteFile();
      file0.setWritable(false, true);
      mockFileOutputStream0.release();
      MockFile mockFile2 = new MockFile("_1mjDS >Sv", ".");
      MockFile mockFile3 = new MockFile("_1mjDS >Sv", ".");
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFile1.toPath();
      mockFile0.setExecutable(false, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile3);
      mockFile0.renameTo(mockFile1);
      mockFileOutputStream0.flush();
      mockFileOutputStream0.release();
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFileOutputStream0, false);
      byte[] byteArray1 = new byte[1];
      MockFile mockFile4 = new MockFile("_1mjDS >Sv");
      MockFile mockFile5 = new MockFile("_1mjDS >Sv");
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      Enumeration enumeration0 = connectionFactories0.enumerateConnectionFactory();
      assertNotNull(enumeration0);
  }

  /**
  //Test case number: 98
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      xMLFilterImpl0.processingInstruction("V", "-\"k(Alf6DC");
      xMLFilterImpl0.getEntityResolver();
      xMLFilterImpl0.endElement("java.lang.Byte", "java.lang.Byte", "java.lang.Byte");
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      Locator2Impl locator2Impl1 = new Locator2Impl(locator2Impl0);
      XMLFilterImpl xMLFilterImpl1 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl2 = new XMLFilterImpl();
      XMLFilterImpl xMLFilterImpl3 = new XMLFilterImpl(xMLFilterImpl1);
      XMLFilterImpl xMLFilterImpl4 = new XMLFilterImpl();
      xMLFilterImpl3.setErrorHandler(xMLFilterImpl4);
      xMLFilterImpl4.notationDecl("", "2\"N>azR6..b", (String) null);
      LocatorImpl locatorImpl0 = new LocatorImpl();
      xMLFilterImpl3.setContentHandler(defaultHandler2_0);
      XMLFilterImpl xMLFilterImpl5 = new XMLFilterImpl();
      xMLFilterImpl4.getContentHandler();
      try { 
        connectionFactories0.getConnectionFactory(2599);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.exolab.jms.config.ConnectionFactories", e);
      }
  }

  /**
  //Test case number: 99
  /*Coverage entropy=1.0365141682948127
  */
  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ConnectionFactories connectionFactories0 = new ConnectionFactories();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        connectionFactories0.getConnectionFactory(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  /**
  //Test case number: 100
  /*Coverage entropy=0.3333333333333333
  */
  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("zLa#soXFSt6|w'%x");
      stringReader0.close();
      try { 
        ConnectionFactories.unmarshal(stringReader0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("org.exolab.castor.xml.Unmarshaller", e);
      }
  }
}
